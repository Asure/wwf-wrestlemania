TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    ***************************************************************
       2                    *
       3                    * Software:     JAKE SIMPSON
       4                    * Initiated:    10/17/94
       5                    *
       6                    * Modified:     
       7                    *
       8                    * COPYRIGHT (C) 1994 WILLIAMS ELECTRONICS GAMES, INC.
       9                    *
      10                    *.Last mod - 
      11                    ****************************************************************
      12                            .file   "progress.asm"
      14                            .width  132
      15                            .option b,d,l,t
      16                            .mnolist
      17                    
      18                    
      19                            .include        "mproc.equ"
      20                            .include        "display.equ"
      21                            .include        "sys.equ"
      22                            .include        "gsp.equ"
      23                            .include        "macros.h"
      24                            .include        "game.equ"
      25                            .include        "anim.equ"
      26                            .include        "audit.equ"
      27                            .include        "link.equ"
      28                            .include        "imgtbl.glo"
      29                            .include        "bgndtbl.glo"
      30                            .include        "plyr.equ"
      31                            .include        "ring.equ"
      32                            .include        "ladder.tbl"
      33                            .include        "crowdimg.glo"
      34                            .include        "miscimg.glo"
      35                            .INCLUDE        "LOGO.GLO"
      36                    
      37                            .ref    WHICH_SKIRT_PAL,RNDPER,start_credbox,triple_sound
      38                            .ref    CLEAR_PROCESSES,SPECIAL_WIPEOUT
      39                            .ref    DUMRETS,HRT3,RZR3,UND3,YOK3,SHN3,BAM3,DNK3,LEX3
      40                            .ref    RNDRNG0,HALT,dtype,dpageflip,IRQSKYE,WORLDTLX,WORLDTLY
      41                            .ref    BAKMODS,BGND_UD1,set_process_ptr,animate_wrestler
      42                            .ref    animate_wrestler1,animate_wrestler2,wrestler_veladd
      43                            .ref    ani_init,PSTATUS,pal_getf,PCNT,index1,index2,obj_look
      44                            .ref    set_images,change_anim1a,change_anim2a,match_time
      45                            .ref    process_ptrs,reduce_bog
      46                            .ref    hrt_run2_anim,rzr_run2_anim,und_run2_anim,yok_run2_anim
      47                            .ref    shn_run2_anim,bam_run2_anim,dnk_run2_anim,lex_run2_anim
      48                            .ref    hrt_torso4_anim,rzr_torso4_anim,und_torso4_anim
      49                            .ref    yok_torso4_anim,shn_torso4_anim,bam_torso4_anim
      50                            .ref    dnk_torso4_anim,lex_torso4_anim,hrt_stand4_anim
      51                            .ref    rzr_stand4_anim,und_stand4_anim,yok_stand4_anim
      52                            .ref    shn_stand4_anim,bam_stand4_anim,dnk_stand4_anim
      53                            .ref    lex_stand4_anim,hrt_dizzy_anim,rzr_dizzy_anim
      54                            .ref    und_dizzy_anim,yok_dizzy_anim,shn_dizzy_anim
      55                            .ref    bam_dizzy_anim,dnk_dizzy_anim,lex_dizzy_anim
      56                            .ref    get_all_buttons_cur2,MAKE_UP_LOGO,GAMSTATE,animate_back
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    2

      57                            .ref    dirqcnt,SNDSND,VINCE_START_GAME,WHICH_SCREEN,TOP_LEFT
      58                            .ref    BOT_RIGHT,dma_it_out,SHAKER,OPEN_SCREEN_LINE,D2ST2B03
      59                            .REF    LBAR_GENB
      60                            .ref    win_ascii,MUSIC_HAP
      61                            .ref    HRTPNK_P,UNDBLK_P
      62                    
      63                            .ref     message_palette
      64                            .ref     dec_to_asc
      65                            .ref     match_cnt
      66                            .ref     mess_space_width
      67                            .ref     print_string_R
      68                            .ref     print_string
      69                            .ref     print_string_C
      70                            .ref     message_ascii
      71                            .ref     mess_spacing
      72                            .ref     mess_cursx
      73                            .ref     mess_cursy
      74                            .ref     copy_string
      75                            .ref    p1winstreak
      76                            .ref    p2winstreak
      77                            .ref    mess_z
      78                            .ref    print_string_with_z
      79                            .ref    RC_BYTEI
      80                            .ref    message_buffer
      81                            .REF    wsf14_ascii
      82                            .ref    show_progress_bicons
      83                            .ref    del_progress_icon
      84                            .REF    print_string_Z2
      85                    
      86                            .ref    print_string2
      87                            .ref    setup_message
      88                            .ref    mess_objid
      89                            .ref    font9_ascii
      90                            .ref    belt_ask,belt_type
      91                            .ref    AUD1
      92                            .ref    hscore_colcyc
      93                            .ref    osgemd_ascii
      94                            .ref    JUDDER_SHADOW
      95                            .ref    shadow
      96                            .REF    H4ST4A02
      97                            .ref    powerup_check
      98                            .ref    KIL1C
      99                            .ref    _switch_addr
     100                            .ref    WSF14_1,WSF14_2
     101                            .ref    BEGINOBJ_TBL
     102                            .ref    get_stick_val_cur
     103                            .ref    get_but_val_cur
     104                            .ref    pal_clean
     105                    
     106                            .def    tonites_matchup
     107                            .def    tonites_str
     108                            .DEF    DO_FLASH,DO_JASON_CROWD,DO_TONY_CROWD
     109                            .DEF    DO_VOGEL_CROWD
     110                            .DEF    OPEN_PROGRESS_SCREEN
     111                            .DEF    SORT_OUT_WRESTLER_NUM
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    3

     112                            .DEF    RESETUP_PROGRESS
     113                            .DEF    CLOSE_PROGRESS_SCREEN
     114                            .DEF    INIT_LADDER_TABLE
     115                            .DEF    IGNORE_SPECIAL,IGNORE_THIS_PAL
     116                            .DEF    START_FLASHES
     117                    
     118                            .DEF    ANIM_CROWD
     119                            .DEF    setup_back_anim
     120                    
     121              000f  NUM_LADDER_ENTRIES      equ     15
     122                    
     123 00000000                   .even
     124 00000000                   .bss    TEMP_SPEED,32
     125 00000000                   BSSX    CURRENT_LADDER,32
     126 00000040                   .bss    a_big_useless_hole,32
     127 00000000                   BSSX    LADDER,NUM_LADDER_ENTRIES*32
     128 00000000                   BSSX    TEMP_LADDER,8*8
     129 00000280                   .bss    TEMP_LADDER_END,0
     130                    
     131 00000000                   BSSX    FINAL_BATTLE_LINEUP,10*8
     132                    
     133 00000000                   BSSX    FLASH_FLAG,16
     134 00000000                   BSSX    question_type,16
     135 00000000                   BSSX    royal_rumble,16
     136                    
     137 00000000                   BSSX    FINAL_PTR,32
     138 00000320                   .bss    SCREEN_SHAKE,32
     139 00000000                   BSSX    NUM_OPPS,16
     140 00000350                   .bss    NUM_OLD_OPPS,16
     141 00000360                   .bss    TOP_LEFT_2,32
     142 00000380                   .bss    BOT_RIGHT_2,32
     143 000003a0                   .bss    FUJI_OBJ,32
     144 000003c0                   .bss    WHICH_PAL,16*9
     145 00000450                   .bss    IGNORE_SPECIAL,16
     146                    
     147 00000000                   BSSX    YES_ITS_FINAL,16
     148 00000470                   .bss    pcurs_obj,4*32
     149 000004f0                   .bss    p1sel,16
     150 00000500                   .bss    p2sel,16
     151                    
     152              0001  INTER_DEFAULT           .set    1
     153                    
     154                    
     155          00040000  RUN_SPEED       .EQU    [4,0]
     156                    
     157              0000  SCPTR   .set    000     ;UHL script pointer (next instruction)
     158              0020  TIME    .set    020h    ;UHW time to hold
     159              0030  FRAME   .set    030h    ;UHL current obj
     160              0050  CHEER   .set    050h    ;UHL cheer jump point
     161              0070  UNUSED  .set    070h    ;UHW unused
     162                    
     163              8000  CANI_GOTO       equ     0 + 8000h
     164              8001  CANI_RNDWAIT    equ     1 + 8000h
     165              8002  CANI_END                equ     2 + 8000H
     166              8003  CANI_CODE       EQU     3 + 8000H
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    4

     167                    
     168                    ;BLOC_STRUCTURE
     169              0000  B_CTRL  .EQU    0
     170              0020  B_SAG   .EQU    020H
     171              0040  B_DAG   .EQU    040H
     172              0060  B_SIZE  .EQU    060H
     173              0080  B_PAL   .EQU    080H
     174              00a0  B_REAL_SAG      .EQU    0A0H
     175              00c0  BLOC_SIZE .EQU  0C0H
     176                    
     177              000e  BLOC_TOTAL      .EQU    14
     178              0028  BITS_TOTAL      .EQU    40
     179              0014  P_DELAY .EQU    20
     180                    
     181 00000510                   .BSS    PROG_BLOC_START,BLOC_SIZE*(BLOC_TOTAL+BITS_TOTAL)
     182              0f90- BITS_START      .EQU    PROG_BLOC_START+(BLOC_SIZE*BLOC_TOTAL)
     183                    
     184                    ;PALETTE TYPE FOR BLOCKS TABLE
     185              0000  P_WHICH_PAL     .EQU    0
     186              0020  P_DMA_PAL_VAL   .EQU    020H
     187              0040  P_SIZE          .EQU    040H
     188              001a  NUM_PAL_BLOC            .EQU    26
     189                    
     190 00002d90                   .BSS    PAL_BLOC_START,P_SIZE*NUM_PAL_BLOC
     191                    ;       .BSS    PAL_PNTR,32
     192 00000000                   BSSX    WHAT_SPEED,16
     193 00003420                   .BSS    WHAT_DELAY,16
     194                    
     195 00000000                   .TEXT
     196                    
     197 00000000           IGNORE_THIS_PAL
     198 00000000     098f          MMTM    SP,A8,A10,A14
         00000010     00a2  
     199 00000020     09e8          MOVI    PAL_BLOC_START,A8
         00000030 00002d90- 
     200 00000050     1b4a          MOVK    NUM_PAL_BLOC,A10
     201 00000060           CHECK_NEXT_PAL
     202 00000060     b70e          MOVE    *A8(P_WHICH_PAL),A14,L
         00000070     0000  
     203 00000080     ca06          JRZ     DO_NEXT_PAL
     204 00000090     480e          CMP     A0,A14
     205 000000a0     cb04          JRNE    DO_NEXT_PAL
     206 000000b0     09af          MMFM    SP,A8,A10,A14
         000000c0     4500  
     207 000000d0     0de0          SETC
     208 000000e0     0960          RETS
     209 000000f0           DO_NEXT_PAL
     210 000000f0     0b08          ADDI    P_SIZE,A8
         00000100     0040  
     211 00000110     3d8a          DSJS    A10,CHECK_NEXT_PAL
     212 00000120     09af          MMFM    SP,A8,A10,A14
         00000130     4500  
     213 00000140     0320          CLRC
     214 00000150     0960          RETS
     215                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    5

     216 00000160           GET_PAL_BLOC
     217 00000160     098f          MMTM    SP,A1,A3,A4
         00000170     5800  
     218 00000180     09c3          MOVI    NUM_PAL_BLOC,A3
         00000190     001a  
     219 000001a0     09e4          MOVI    PAL_BLOC_START,A4
         000001b0 00002d90- 
     220 000001d0           CHECK_NEXT_PAL_BLOC
     221 000001d0     b681          MOVE    *A4(P_WHICH_PAL),A1,L
         000001e0     0000  
     222 000001f0     ca06          JRZ     WE_HIT_THE_END
     223 00000200     4801          CMP     A0,A1
     224 00000210     ca0b          JREQ    NO_NEED_TO_RESTORE
     225 00000220     0b04          ADDI    P_SIZE,A4
         00000230     0040  
     226 00000240     3d03          DSJS    A3,CHECK_NEXT_PAL_BLOC
     227 00000250     c008          JRUC    EMERG_EXIT
     228 00000260           WE_HIT_THE_END
     229 00000260     b204          MOVE    A0,*A4(P_WHICH_PAL),L
         00000270     0000  
     230 00000280     0d5f          calla   pal_getf
         00000290 00000000! 
     231 000002b0     b004          MOVE    A0,*A4(P_DMA_PAL_VAL)
         000002c0     0020  
     232 000002d0           NO_NEED_TO_RESTORE
     233 000002d0     4c80          MOVE    A4,A0
     234 000002e0           EMERG_EXIT
     235 000002e0     09af          MMFM    SP,A1,A3,A4
         000002f0     001a  
     236 00000300     0960          RETS
     237                    
     238 00000310           RESETUP_PROGRESS
     239 00000310     09e0          MOVI    BLAST_OUT_PROGRESS_TRANS,A0
         00000320 000057f0' 
     240 00000340     0780          MOVE    A0,@WHICH_SCREEN,L
         00000350 00000000! 
     241 00000370     0960          RETS
     242                    
     243 00000380           OPEN_PROGRESS_SCREEN
     244                    
     245 00000380     1a00          movk    16,a0
     246 00000390     0d5f          calla   triple_sound
         000003a0 00000000! 
     247                    
     248 000003c0     05a9          MOVE    @WHAT_SPEED,A9
         000003d0 00003410- 
     249 000003f0     05a8          MOVE    @WHAT_DELAY,A8
         00000400 00003420- 
     250                    
     251                    ;       MOVI    P_DELAY,A8
     252                    ;       MOVI    200/P_DELAY,A9
     253                    
     254 00000420     03a9          NEG     A9
     255                    
     256 00000430           OPEN_ACROSS_MORE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    6

     257 00000430     09ca          MOVI    BLOC_TOTAL,A10
         00000440     000e  
     258 00000450     09e2          MOVI    PROG_BLOC_START,A2
         00000460 00000510- 
     259 00000480     5600          CLR     A0
     260 00000490     0780          MOVE    A0,@BOT_RIGHT_2,L
         000004a0 00000380- 
     261 000004c0     0780          MOVE    A0,@TOP_LEFT_2,L
         000004d0 00000360- 
     262 000004f0           OPEN_NEXT_BLOC
     263 000004f0     0d3f          CALLR   MOVE_BLOC
         00000500     0467  
     264 00000510     0b02          ADDI    BLOC_SIZE,A2
         00000520     00c0  
     265 00000530     3caa          DSJS    A10,OPEN_NEXT_BLOC
     266 00000540     07c0          MOVE    @BOT_RIGHT_2,@BOT_RIGHT,L
         00000550 00000380- 
         00000570 00000000! 
     267 00000590     07c0          MOVE    @TOP_LEFT_2,@TOP_LEFT,L
         000005a0 00000360- 
         000005c0 00000000! 
     268 000005e0                   SLEEPK  1
     269 00000620     1428          DEC     A8
     270 00000630     cbdf          JRNZ    OPEN_ACROSS_MORE
     271 00000640                   SLEEPK  1
     272                    
     273 00000680     09e1          MOVI    DUMRETS,A1
         00000690 00000000! 
     274 000006b0     0781          MOVE    A1,@WHICH_SCREEN,L
         000006c0 00000000! 
     275 000006e0     5600          CLR     A0
     276 000006f0     0780          MOVE    A0,@TOP_LEFT,L
         00000700 00000000! 
     277 00000720     0780          MOVE    A0,@BOT_RIGHT,L
         00000730 00000000! 
     278 00000750     0580          MOVE    A0,@IGNORE_SPECIAL
         00000760 00000450- 
     279 00000780                   RETP
     280                    
     281 000007b0           CLOSE_PROGRESS_SCREEN
     282                    
     283 000007b0                   CREATE0 LOOK_FOR_PALS
     284 00000820                   CREATE  PU_CHECK_PID,powerup_check
     285                    
     286 000008b0     5600          CLR     A0
     287 000008c0     0780          MOVE    A0,@SCREEN_SHAKE,L
         000008d0 00000320- 
     288                    
     289 000008f0     09e0          MOVI    BLAST_OUT_PROGRESS_TRANS,A0
         00000900 000057f0' 
     290 00000920     0780          MOVE    A0,@WHICH_SCREEN,L
         00000930 00000000! 
     291                    
     292 00000950     09e0          MOVI    PAL_BLOC_START,A0
         00000960 00002d90- 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    7

     293 00000980     09c4          MOVI    NUM_PAL_BLOC,A4
         00000990     001a  
     294 000009a0     5621          CLR     A1
     295 000009b0           CLEAR_OUT_PAL_BLOC
     296 000009b0     b220          MOVE    A1,*A0(P_WHICH_PAL),L
         000009c0     0000  
     297 000009d0     0b00          ADDI    P_SIZE,A0
         000009e0     0040  
     298 000009f0     3ca4          DSJS    A4,CLEAR_OUT_PAL_BLOC
     299                    
     300 00000a00     1820          MOVK    1,A0
     301 00000a10     0580          MOVE    A0,@IGNORE_SPECIAL
         00000a20 00000450- 
     302                    
     303 00000a40     0d3f          CALLR   INIT_BLOC
         00000a50     0479  
     304                    
     305 00000a60     0d3f          CALLR   SETUP_LOGOS
         00000a70     0359  
     306                    
     307                    ;       movk    16,a0
     308 00000a80     09c0          movi    35h,a0          ;special hi-priority version
         00000a90     0035  
     309 00000aa0     0d5f          calla   triple_sound
         00000ab0 00000000! 
     310                    
     311 00000ad0     09c8          MOVI    P_DELAY,A8
         00000ae0     0014  
     312 00000af0     09c9          MOVI    200/P_DELAY,A9
         00000b00     000a  
     313                    
     314 00000b10     0d5f          calla   get_all_buttons_cur2
         00000b20 00000000! 
     315                    
     316 00000b40     ca03          JRZ     SPEED_POWER_SET
     317 00000b50                   SWAP    A8,A9
     318                    
     319 00000b80           SPEED_POWER_SET
     320 00000b80     0588          MOVE    A8,@WHAT_DELAY
         00000b90 00003420- 
     321 00000bb0     0589          MOVE    A9,@WHAT_SPEED
         00000bc0 00003410- 
     322                    
     323 00000be0           MOVE_ACROSS_MORE
     324 00000be0     09ca          MOVI    BLOC_TOTAL,A10
         00000bf0     000e  
     325 00000c00     09e2          MOVI    PROG_BLOC_START,A2
         00000c10 00000510- 
     326 00000c30     07c0          MOVE    @BOT_RIGHT,@BOT_RIGHT_2,L
         00000c40 00000000! 
         00000c60 00000380- 
     327 00000c80     07c0          MOVE    @TOP_LEFT,@TOP_LEFT_2,L
         00000c90 00000000! 
         00000cb0 00000360- 
     328 00000cd0           MOVE_NEXT_BLOC
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    8

     329 00000cd0     0d3f          CALLR   MOVE_BLOC
         00000ce0     03e9  
     330 00000cf0     0b02          ADDI    BLOC_SIZE,A2
         00000d00     00c0  
     331 00000d10     3caa          DSJS    A10,MOVE_NEXT_BLOC
     332 00000d20     07c0          MOVE    @BOT_RIGHT_2,@BOT_RIGHT,L
         00000d30 00000380- 
         00000d50 00000000! 
     333 00000d70     07c0          MOVE    @TOP_LEFT_2,@TOP_LEFT,L
         00000d80 00000360- 
         00000da0 00000000! 
     334 00000dc0                   SLEEPK  1
     335 00000e00     1428          DEC     A8
     336 00000e10     cbdc          JRNZ    MOVE_ACROSS_MORE
     337                    
     338 00000e20     09c0          movi    0a5h,a0
         00000e30     00a5  
     339 00000e40     0d5f          calla   triple_sound
         00000e50 00000000! 
     340                    
     341 00000e70     05a0          MOVE    @WHAT_DELAY,A0
         00000e80 00003420- 
     342 00000ea0     0b40          CMPI    200/P_DELAY,A0
         00000eb0     fff5  
     343 00000ec0     ca0e          JREQ    JUST_LOOK_FOR_POWERS
     344                    
     345 00000ed0     0d3f          CALLR   CREATE_BITS
         00000ee0     0059  
     346 00000ef0                   CREATE0 SHAKE_MY_WORLD
     347                    
     348 00000f60                   SLEEP   35+24
     349                    
     350 00000fb0           JUST_LOOK_FOR_POWERS
     351 00000fb0                   SLEEPK  10
     352 00000ff0                   RETP
     353                    
     354 00001020           SHAKE_MY_WORLD
     355 00001020     09e8          MOVI    SHAKE_TABLE,A8
         00001030 00001160' 
     356 00001050           SHAKE_IT_BABY
     357 00001050     9701          MOVE    *A8+,A1,L
     358 00001060     ca08          JRZ     END_SHAKE
     359 00001070     0781          MOVE    A1,@SCREEN_SHAKE,L
         00001080 00000320- 
     360 000010a0     9700          MOVE    *A8+,A0,L
     361 000010b0     0d5f          CALLA   PRCSLP
         000010c0 00000000! 
     362 000010e0     c0f6          JRUC    SHAKE_IT_BABY
     363 000010f0           END_SHAKE
     364 000010f0     5621          CLR     A1
     365 00001100     0781          MOVE    A1,@SCREEN_SHAKE,L
         00001110 00000320- 
     366 00001130                   DIE
     367                    
     368 00001160           SHAKE_TABLE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE    9

     369 00001160 ffffffff          .LONG   [-1,-1],2
     370 000011a0 00020001          .LONG   [2,1],2
     371 000011e0 fffe0000          .LONG   [-2,0],2
     372 00001220 fffd0001          .LONG   [-3,1],2
     373 00001260 00020003          .LONG   [2,3],2
     374 000012a0 0000fffe          .LONG   [0,-2],2
     375 000012e0 ffffffff          .LONG   [-1,-1],2
     376 00001320 00020001          .LONG   [2,1],2
     377 00001360 fffe0000          .LONG   [-2,0],2
     378 000013a0 fffd0001          .LONG   [-3,1],2
     379 000013e0 00020003          .LONG   [2,3],2
     380 00001420 0000fffe          .LONG   [0,-2],2
     381 00001460 00000000          .LONG   0
     382                    
     383              0120  BITS_ADDR       .EQU    PDATA+020H
     384              0140  BITS_ANIM       .EQU    PDATA+040H
     385              0160  BITS_DELAY      .EQU    PDATA+060H
     386              0002  BITS_D          .EQU    2
     387                    
     388 00001480           CREATE_BITS
     389 00001480     09ca          MOVI    BITS_TOTAL,A10
         00001490     0028  
     390 000014a0     09e2          MOVI    BITS_START,A2
         000014b0 00000f90- 
     391 000014d0     09e3          MOVI    080020000H,A3
         000014e0 80020000  
     392 00001500     09c5          MOVI    200,A5
         00001510     00c8  
     393 00001520     09d3          MOVI    40,B3
         00001530     0028  
     394 00001540           CREATE_NEXT_BIT
     395 00001540     4d41          MOVE    A10,A1
     396 00001550     0b81          ANDI    03,A1
         00001560 fffffffc  
     397 00001580     cb09          JRNZ    RE_USE_OLD_YPOS
     398 00001590     4e70          MOVE    B3,A0
     399 000015a0     0b13          ADDI    20,B3
         000015b0     0014  
     400 000015c0     0d5f          CALLA   RNDRNG0
         000015d0 00000000! 
     401 000015f0     2600          SLL     16,A0
     402 00001600     4c08          MOVE    A0,A8
     403 00001610     ef05          MOVY    A8,A5
     404 00001620           RE_USE_OLD_YPOS
     405 00001620                   PUSH    A10
     406 00001630     09e0          MOVI    058000H,A0
         00001640 00058000  
     407 00001660     0d5f          CALLA   RNDRNG0
         00001670 00000000! 
     408 00001690     03a0          NEG     A0
     409 000016a0     4c09          MOVE    A0,A9   ;Y-VEL
     410 000016b0     09ea          MOVI    [200,0],A10     ;XPOS (32 BIT)
         000016c0 00c80000  
     411 000016e0     09e0          MOVI    080000H,A0
         000016f0 00080000  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   10

     412 00001710     0d5f          CALLA   RNDRNG0
         00001720 00000000! 
     413 00001740     0d00          SUBI    040000H,A0
         00001750 fffbffff  
     414 00001770     4c0b          MOVE    A0,A11  ;X-VEL
     415 00001780                   CREATE0 MOVE_BITS
     416 000017f0     b240          MOVE    A2,*A0(BITS_ADDR),L
         00001800     0120  
     417 00001810                   PUSH    A0
     418                    
     419 00001820     b2a2          MOVE    A5,*A2(B_DAG),L
         00001830     0040  
     420                    
     421 00001840     09c0          MOVI    13,A0
         00001850     000d  
     422 00001860     0d5f          CALLA   RNDRNG0
         00001870 00000000! 
     423 00001890     24e0          SLL     7,A0
     424 000018a0     0b20          ADDI    RANDOM_SPARK_TAB,A0
         000018b0 00001e70' 
     425 000018d0     8601          MOVE    *A0,A1,L
     426                    
     427 000018e0                   PUSH    A0
     428 000018f0     b600          MOVE    *A0(040H),A0,L
         00001900     0040  
     429 00001910     0d5f          CALLA   GET_PAL_BLOC
         00001920 00000160' 
     430 00001940     b202          MOVE    A0,*A2(B_PAL),L
         00001950     0080  
     431 00001960                   PULL    A0
     432                    
     433 00001970     ba22          MOVE    *A1(ISAG),*A2(B_SAG),L
         00001980     0040  
         00001990     0020  
     434 000019a0     ba22          MOVE    *A1(ISIZEX),*A2(B_SIZE),L
         000019b0     0000  
         000019c0     0060  
     435 000019d0     b426          MOVE    *A1(ICTRL),A6
         000019e0     0060  
     436                    
     437 000019f0     2606          SLL     16,A6
     438 00001a00     5466          OR      A3,A6
     439 00001a10     b2c2          MOVE    A6,*A2(B_CTRL),L
         00001a20     0000  
     440                    
     441 00001a30                   PULL    A1
     442 00001a40     ba01          MOVE    *A0(020H),*A1(BITS_ANIM),L
         00001a50     0020  
         00001a60     0140  
     443 00001a70     1840          MOVK    BITS_D,A0
     444 00001a80     b001          MOVE    A0,*A1(BITS_DELAY)
         00001a90     0160  
     445                    
     446 00001aa0     0b02          ADDI    BLOC_SIZE,A2
         00001ab0     00c0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   11

     447                    
     448 00001ac0                   PULL    A10
     449 00001ad0     142a          DEC     A10
     450 00001ae0     cba5          JRNZ    CREATE_NEXT_BIT
     451 00001af0     0960          RETS
     452                    
     453 00001b00           MOVE_BITS
     454 00001b00     b7a2          MOVE    *A13(BITS_ADDR),A2,L
         00001b10     0120  
     455 00001b20     0b09          ADDI    GRAVITY-3000H,A9
         00001b30     5000  
     456 00001b40     4128          ADD     A9,A8
     457 00001b50     0b68          CMPI    [255,0],A8
         00001b60 ff00ffff  
     458 00001b80     c528          JRGE    KILL_BIT
     459 00001b90     416a          ADD     A11,A10
     460 00001ba0     4d41          MOVE    A10,A1
     461 00001bb0     2e01          SRL     16,A1
     462 00001bc0     ef01          MOVY    A8,A1
     463 00001bd0     b222          MOVE    A1,*A2(B_DAG),L
         00001be0     0040  
     464                    
     465 00001bf0     b5a1          MOVE    *A13(BITS_DELAY),A1
         00001c00     0160  
     466 00001c10     1421          DEC     A1
     467 00001c20     ca09          JRZ     WE_ANIM_SPARK
     468 00001c30     b02d          MOVE    A1,*A13(BITS_DELAY)
         00001c40     0160  
     469                    
     470 00001c50                   SLOOP   1,MOVE_BITS
     471                    
     472 00001cc0           WE_ANIM_SPARK
     473 00001cc0     b7a1          MOVE    *A13(BITS_ANIM),A1,L
         00001cd0     0140  
     474 00001ce0           JUMP_BACK
     475 00001ce0     942e          MOVE    *A1+,A14
     476 00001cf0     ce0f          JRN     SPARK_ANIM_JUMP
     477 00001d00     b1cd          MOVE    A14,*A13(BITS_DELAY)
         00001d10     0160  
     478 00001d20     962e          MOVE    *A1+,A14,L
     479 00001d30     bbc2          MOVE    *A14(ISAG),*A2(B_SAG),L
         00001d40     0040  
         00001d50     0020  
     480 00001d60     b22d          MOVE    A1,*A13(BITS_ANIM),L
         00001d70     0140  
     481 00001d80                   SLOOP   1,MOVE_BITS
     482                    
     483 00001df0           SPARK_ANIM_JUMP
     484 00001df0     9621          MOVE    *A1+,A1,L
     485 00001e00     c0ed          JRUC    JUMP_BACK
     486                    
     487 00001e10           KILL_BIT
     488 00001e10     5600          CLR     A0
     489 00001e20     b202          MOVE    A0,*A2(B_SAG),L
         00001e30     0020  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   12

     490 00001e40                   DIE
     491                    
     492 00001e70           RANDOM_SPARK_TAB
     493 00001e70 00000000!         .LONG   CHIP1_01,CHIP1_F,CHIP_B_P,0
     494 00001ef0 00000000!         .LONG   CHIP1_01,CHIP1_B,CHIP_B_P,0
     495 00001f70 00000000!         .LONG   CHIP2_01,CHIP2_F,CHIP_B_P,0
     496 00001ff0 00000000!         .LONG   CHIP2_01,CHIP2_B,CHIP_B_P,0
     497 00002070 00000000!         .LONG   CHIP3_01,CHIP3_F,CHIP_B_P,0
     498 000020f0 00000000!         .LONG   CHIP3_01,CHIP3_B,CHIP_B_P,0
     499 00002170 00000000!         .LONG   CHIP4_01,CHIP4_F,CHIP_B_P,0
     500 000021f0 00000000!         .LONG   CHIP4_01,CHIP4_B,CHIP_B_P,0
     501 00002270 00000000!         .LONG   CHIP5_01,CHIP5_F,CHIP_B_P,0
     502 000022f0 00000000!         .LONG   CHIP5_01,CHIP5_B,CHIP_B_P,0
     503 00002370 00000000!         .LONG   SPKD1_09,SPKD1_ANIM,SPKPRP_P,0
     504 000023f0 00000000!         .LONG   SPKD2_09,SPKD2_ANIM,SPKPRP_P,0
     505 00002470 00000000!         .LONG   SPKD4_09,SPKD4_ANIM,SPKPRP_P,0
     506 000024f0 00000000!         .LONG   SPKR1_09,SPKR1_ANIM,SPKPRP_P,0
     507                    
     508              0001  BIT_DELAY       .EQU    1
     509                    
     510 00002570           CHIP1_F
     511 00002570                   WL      BIT_DELAY,CHIP1_01
     512 000025a0                   WL      BIT_DELAY,CHIP1_03
     513 000025d0                   WL      BIT_DELAY,CHIP1_05
     514 00002600                   WL      BIT_DELAY,CHIP1_07
     515 00002630                   WL      BIT_DELAY,CHIP1_09
     516 00002660                   WL      BIT_DELAY,CHIP1_11
     517 00002690                   WL      BIT_DELAY,CHIP1_13
     518 000026c0                   WL      BIT_DELAY,CHIP1_15
     519 000026f0                   WL      BIT_DELAY,CHIP1_17
     520 00002720                   WL      BIT_DELAY,CHIP1_19
     521 00002750                   WL      -1,CHIP1_F
     522                    
     523 00002780           CHIP1_B
     524 00002780                   WL      BIT_DELAY,CHIP1_19
     525 000027b0                   WL      BIT_DELAY,CHIP1_17
     526 000027e0                   WL      BIT_DELAY,CHIP1_15
     527 00002810                   WL      BIT_DELAY,CHIP1_13
     528 00002840                   WL      BIT_DELAY,CHIP1_11
     529 00002870                   WL      BIT_DELAY,CHIP1_09
     530 000028a0                   WL      BIT_DELAY,CHIP1_07
     531 000028d0                   WL      BIT_DELAY,CHIP1_05
     532 00002900                   WL      BIT_DELAY,CHIP1_03
     533 00002930                   WL      BIT_DELAY,CHIP1_01
     534 00002960                   WL      -1,CHIP1_B
     535                    
     536 00002990           CHIP2_F
     537 00002990                   WL      BIT_DELAY,CHIP2_01
     538 000029c0                   WL      BIT_DELAY,CHIP2_03
     539 000029f0                   WL      BIT_DELAY,CHIP2_05
     540 00002a20                   WL      BIT_DELAY,CHIP2_07
     541 00002a50                   WL      BIT_DELAY,CHIP2_09
     542 00002a80                   WL      -1,CHIP2_F
     543                    
     544 00002ab0           CHIP2_B
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   13

     545 00002ab0                   WL      BIT_DELAY,CHIP2_09
     546 00002ae0                   WL      BIT_DELAY,CHIP2_07
     547 00002b10                   WL      BIT_DELAY,CHIP2_05
     548 00002b40                   WL      BIT_DELAY,CHIP2_03
     549 00002b70                   WL      BIT_DELAY,CHIP2_01
     550 00002ba0                   WL      -1,CHIP2_B
     551                    
     552 00002bd0           CHIP3_F
     553 00002bd0                   WL      BIT_DELAY,CHIP3_01
     554 00002c00                   WL      BIT_DELAY,CHIP3_03
     555 00002c30                   WL      BIT_DELAY,CHIP3_05
     556 00002c60                   WL      BIT_DELAY,CHIP3_07
     557 00002c90                   WL      BIT_DELAY,CHIP3_09
     558 00002cc0                   WL      BIT_DELAY,CHIP3_11
     559 00002cf0                   WL      BIT_DELAY,CHIP3_13
     560 00002d20                   WL      BIT_DELAY,CHIP3_15
     561 00002d50                   WL      BIT_DELAY,CHIP3_17
     562 00002d80                   WL      BIT_DELAY,CHIP3_19
     563 00002db0                   WL      -1,CHIP3_F
     564                    
     565 00002de0           CHIP3_B
     566 00002de0                   WL      BIT_DELAY,CHIP3_19
     567 00002e10                   WL      BIT_DELAY,CHIP3_17
     568 00002e40                   WL      BIT_DELAY,CHIP3_15
     569 00002e70                   WL      BIT_DELAY,CHIP3_13
     570 00002ea0                   WL      BIT_DELAY,CHIP3_11
     571 00002ed0                   WL      BIT_DELAY,CHIP3_09
     572 00002f00                   WL      BIT_DELAY,CHIP3_07
     573 00002f30                   WL      BIT_DELAY,CHIP3_05
     574 00002f60                   WL      BIT_DELAY,CHIP3_03
     575 00002f90                   WL      BIT_DELAY,CHIP3_01
     576 00002fc0                   WL      -1,CHIP3_B
     577                    
     578 00002ff0           CHIP4_F
     579 00002ff0                   WL      BIT_DELAY,CHIP4_01
     580 00003020                   WL      BIT_DELAY,CHIP4_03
     581 00003050                   WL      BIT_DELAY,CHIP4_05
     582 00003080                   WL      BIT_DELAY,CHIP4_07
     583 000030b0                   WL      BIT_DELAY,CHIP4_09
     584 000030e0                   WL      -1,CHIP4_F
     585                    
     586 00003110           CHIP4_B
     587 00003110                   WL      BIT_DELAY,CHIP4_09
     588 00003140                   WL      BIT_DELAY,CHIP4_07
     589 00003170                   WL      BIT_DELAY,CHIP4_05
     590 000031a0                   WL      BIT_DELAY,CHIP4_03
     591 000031d0                   WL      BIT_DELAY,CHIP4_01
     592 00003200                   WL      -1,CHIP4_B
     593                    
     594 00003230           CHIP5_F
     595 00003230                   WL      BIT_DELAY,CHIP5_01
     596 00003260                   WL      BIT_DELAY,CHIP5_03
     597 00003290                   WL      BIT_DELAY,CHIP5_05
     598 000032c0                   WL      BIT_DELAY,CHIP5_07
     599 000032f0                   WL      BIT_DELAY,CHIP5_09
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   14

     600 00003320                   WL      BIT_DELAY,CHIP5_11
     601 00003350                   WL      BIT_DELAY,CHIP5_13
     602 00003380                   WL      BIT_DELAY,CHIP5_15
     603 000033b0                   WL      BIT_DELAY,CHIP5_17
     604 000033e0                   WL      BIT_DELAY,CHIP5_19
     605 00003410                   WL      -1,CHIP5_F
     606                    
     607 00003440           CHIP5_B
     608 00003440                   WL      BIT_DELAY,CHIP5_19
     609 00003470                   WL      BIT_DELAY,CHIP5_17
     610 000034a0                   WL      BIT_DELAY,CHIP5_15
     611 000034d0                   WL      BIT_DELAY,CHIP5_13
     612 00003500                   WL      BIT_DELAY,CHIP5_11
     613 00003530                   WL      BIT_DELAY,CHIP5_09
     614 00003560                   WL      BIT_DELAY,CHIP5_07
     615 00003590                   WL      BIT_DELAY,CHIP5_05
     616 000035c0                   WL      BIT_DELAY,CHIP5_03
     617 000035f0                   WL      BIT_DELAY,CHIP5_01
     618 00003620                   WL      -1,CHIP5_B
     619 00003650           SPKD1_ANIM
     620 00003650                   WL      100,SPKD1_09
     621 00003680                   WL      -1,SPKD1_ANIM
     622 000036b0           SPKD2_ANIM
     623 000036b0                   WL      100,SPKD2_09
     624 000036e0                   WL      -1,SPKD2_ANIM
     625 00003710           SPKD4_ANIM
     626 00003710                   WL      100,SPKD4_09
     627 00003740                   WL      -1,SPKD4_ANIM
     628 00003770           SPKR1_ANIM
     629 00003770                   WL      100,SPKR1_09
     630 000037a0                   WL      -1,SPKR1_ANIM
     631                    
     632 000037d0            SUBR   NEXT_IN_LADDER
     633 000037d0     098f          MMTM    SP,A2,A3,A4,A14
         000037e0     3802  
     634 000037f0     0b0a          ADDI    32,A10
         00003800     0020  
     635                    
     636                            ;Whoa!  If this is the first battle, arrange the table such that
     637                            ; the human's wrestler is last.
     638 00003810     0b6a          cmpi    LADDER,a10
         00003820 ffffff9f- 
     639 00003840     0300          jrne    oswslad_ok
     640                    ;       callr   put_human_last
     641 00003850     8741  oswslad_ok      MOVE    *A10,A1,L
     642 00003860     4c22          MOVE    A1,A2
     643 00003870     2d02          SRL     24,A2
     644 00003880     2702          SLL     24,A2
     645 00003890     0b62          CMPI    01000000H,A2
         000038a0 feffffff  
     646 000038c0     ca21          JREQ    NO_SORT_OPPS
     647                    
     648                            ;it's a multiple-wrestler fight.  Scramble the current entry.
     649 000038d0     0d3f          callr   scramble_table_entry
         000038e0     14ab  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   15

     650                    
     651                            ;sort so that shawn ends up in the third slot: 003040Hx0x
     652 000038f0     5663          CLR     A3
     653 00003900     5684          CLR     A4
     654 00003910     ec23          MOVX    A1,A3
     655 00003920     ee24          MOVY    A1,A4
     656                    
     657 00003930     2701          SLL     24,A1
     658 00003940     2d01          SRL     24,A1
     659                    
     660 00003950     2f03          SRL     8,A3
     661                    
     662 00003960     2504          SLL     8,A4
     663 00003970     2d04          SRL     24,A4
     664                    
     665 00003980     0b41          CMPI    4,A1
         00003990     fffb  
     666 000039a0     cb03          JRNE    NO_SWAP_SHAWN_A1
     667 000039b0     4c2e          MOVE    A1,A14
     668 000039c0     4c61          MOVE    A3,A1
     669 000039d0     4dc3          MOVE    A14,A3
     670 000039e0           NO_SWAP_SHAWN_A1
     671 000039e0     0b62          CMPI    02000000H,A2
         000039f0 fdffffff  
     672 00003a10     ca06          JREQ    STUFF_SWAPPED
     673 00003a20     0b43          CMPI    4,A3
         00003a30     fffb  
     674 00003a40     cb03          JRNE    STUFF_SWAPPED
     675 00003a50     4c6e          MOVE    A3,A14
     676 00003a60     4c83          MOVE    A4,A3
     677 00003a70     4dc4          MOVE    A14,A4
     678                    
     679 00003a80           STUFF_SWAPPED
     680 00003a80     2503          SLL     8,A3
     681 00003a90     2604          SLL     16,A4
     682 00003aa0     5461          OR      A3,A1
     683 00003ab0     5481          OR      A4,A1
     684 00003ac0     5441          OR      A2,A1
     685 00003ad0     822a          MOVE    A1,*A10,L
     686 00003ae0           NO_SORT_OPPS
     687 00003ae0     078a          MOVE    A10,@CURRENT_LADDER,L
         00003af0 00000020- 
     688 00003b10     09af          MMFM    SP,A2,A3,A4,A14
         00003b20     401c  
     689 00003b30     0960          RETS
     690                    
     691                    
     692 00003b40            SUBR   NUM_OF_OPPS
     693 00003b40     4c23          MOVE    A1,A3
     694 00003b50     2d03          SRL     24,A3
     695 00003b60     0583          MOVE    A3,@NUM_OPPS
         00003b70 00000340- 
     696 00003b90     0960          RETS
     697                    
     698 00003ba0           WE_HAVE_COMPANY
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   16

     699 00003ba0     0d3f          CALLR   FIND_LOGO_IMAGE
         00003bb0     00e2  
     700 00003bc0     0d3f          CALLR   INIT_BLOC_STUFF
         00003bd0     017e  
     701 00003be0     b423          MOVE    *A1(ISIZEY),A3
         00003bf0     0010  
     702 00003c00     09c5          MOVI    255,A5
         00003c10     00ff  
     703 00003c20     4465          SUB     A3,A5
     704 00003c30     2fe5          SRL     1,A5
     705 00003c40     2605          SLL     16,A5
     706 00003c50     09c6          MOVI    400,A6
         00003c60     0190  
     707 00003c70     0d3f          CALLR   SETUP_THIS_LOGO_DAG
         00003c80     00c8  
     708 00003c90     0960          RETS
     709                    
     710                    
     711                    *****************************************************
     712                    *
     713 00003ca0            SUBRP  icefdo_rr_vs
     714 00003ca0     05a1          move    @index1,a1
         00003cb0 00000000! 
     715 00003cd0     09c6          movi    -200,a6
         00003ce0     ff38  
     716 00003cf0     0d3f          callr   FIND_LOGO_IMAGE
         00003d00     00cd  
     717 00003d10     0d3f          callr   INIT_BLOC_STUFF
         00003d20     0169  
     718 00003d30     b423          move    *a1(ISIZEY),a3
         00003d40     0010  
     719 00003d50     09c5          movi    128,a5
         00003d60     0080  
     720 00003d70     4465          sub     a3,a5
     721 00003d80     2fe5          srl     1,a5
     722 00003d90     2605          sll     16,a5
     723 00003da0     0d3f          callr   SETUP_THIS_LOGO_DAG
         00003db0     00b5  
     724                    
     725 00003dc0     05a1          move    @index2,a1
         00003dd0 00000000! 
     726 00003df0     09c6          movi    -200,a6
         00003e00     ff38  
     727 00003e10     0d3f          callr   FIND_LOGO_IMAGE
         00003e20     00bb  
     728 00003e30     0d3f          callr   INIT_BLOC_STUFF
         00003e40     0157  
     729 00003e50     b423          move    *a1(ISIZEY),a3
         00003e60     0010  
     730 00003e70     09c5          movi    128,a5
         00003e80     0080  
     731 00003e90     4465          sub     a3,a5
     732 00003ea0     2fe5          srl     1,a5
     733 00003eb0     0b05          addi    128,a5
         00003ec0     0080  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   17

     734 00003ed0     2605          sll     16,a5
     735 00003ee0     0d3f          callr   SETUP_THIS_LOGO_DAG
         00003ef0     00a1  
     736                    
     737 00003f00     1921          movk    9,a1
     738 00003f10     09c6          movi    400,a6
         00003f20     0190  
     739 00003f30     0d3f          callr   FIND_LOGO_IMAGE
         00003f40     00a9  
     740 00003f50     0d3f          callr   INIT_BLOC_STUFF
         00003f60     0145  
     741 00003f70     b423          move    *a1(ISIZEY),a3
         00003f80     0010  
     742 00003f90     09c5          movi    255,a5
         00003fa0     00ff  
     743 00003fb0     4465          sub     a3,a5
     744 00003fc0     2fe5          srl     1,a5
     745 00003fd0     2605          sll     16,a5
     746 00003fe0     0d3f          callr   SETUP_THIS_LOGO_DAG
         00003ff0     0091  
     747                    
     748 00004000     0960          rets
     749                    
     750 00004010           SETUP_LOGOS
     751 00004010     05a1          move    @royal_rumble,a1
         00004020 000002f0- 
     752 00004040     ca06          jrz     icefhead_to_head
     753 00004050     05a1          move    @PSTATUS,a1
         00004060 00000000! 
     754 00004080     0b41          cmpi    3,a1
         00004090     fffc  
     755 000040a0     cabf          jrz     icefdo_rr_vs
     756 000040b0           icefhead_to_head
     757                    
     758                    
     759 000040b0     05a1          MOVE    @index1,a1
         000040c0 00000000! 
     760 000040e0     09c6          MOVI    -200,A6
         000040f0     ff38  
     761 00004100     05a0          MOVE    @PSTATUS,A0
         00004110 00000000! 
     762 00004130     ca07          JRZ     INDEX_SET_1
     763 00004140     2fe0          SRL     1,A0
     764 00004150     c805          JRC     INDEX_SET_1
     765 00004160     05a1          MOVE    @index2,a1
         00004170 00000000! 
     766 00004190     09c6          MOVI    400,A6
         000041a0     0190  
     767 000041b0           INDEX_SET_1
     768 000041b0     0d3f          CALLR   FIND_LOGO_IMAGE
         000041c0     0081  
     769 000041d0     0d3f          CALLR   INIT_BLOC_STUFF
         000041e0     011d  
     770 000041f0     b423          MOVE    *A1(ISIZEY),A3
         00004200     0010  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   18

     771 00004210     09c5          MOVI    255,A5
         00004220     00ff  
     772 00004230     4465          SUB     A3,A5
     773 00004240     2fe5          SRL     1,A5
     774 00004250     2605          SLL     16,A5
     775 00004260     0d3f          CALLR   SETUP_THIS_LOGO_DAG
         00004270     0069  
     776                    
     777 00004280     05a1          MOVE    @index2,a1
         00004290 00000000! 
     778 000042b0     05a0          MOVE    @PSTATUS,A0
         000042c0 00000000! 
     779                    ;       JRZ     WE_HAVE_COMPANY
     780 000042e0     0b40          CMPI    3,A0
         000042f0     fffc  
     781 00004300     ca89          JREQ    WE_HAVE_COMPANY
     782                    
     783 00004310     0b46          CMPI    400,A6
         00004320     fe6f  
     784 00004330     ca03          JREQ    SET_A6_TO_MINUS_200
     785 00004340     09c6          MOVI    400,A6
         00004350     0190  
     786 00004360     c002          JRUC    A6_SET
     787                    
     788 00004370           SET_A6_TO_MINUS_200
     789 00004370     09c6          MOVI    -200,A6
         00004380     ff38  
     790 00004390           A6_SET
     791                    
     792 00004390                   PUSHP   A2
     793 000043a0     05a7          MOVE    @NUM_OPPS,A7
         000043b0 00000340- 
     794 000043d0     07aa          MOVE    @CURRENT_LADDER,A10,L
         000043e0 00000020- 
     795 00004400     874a          MOVE    *A10,A10,L
     796 00004410     0d3f          CALLR   is_8_on_1
         00004420     045e  
     797 00004430     01e0          PUSHST
     798 00004440     c903          JRNC    SLAP_UP_NEXT_LOGO
     799 00004450     1827          MOVK    1,A7
     800 00004460     09ca          MOVI    9,A10
         00004470     0009  
     801                    
     802 00004480           SLAP_UP_NEXT_LOGO
     803 00004480     4d41          MOVE    A10,A1
     804 00004490     2701          SLL     24,A1
     805 000044a0     2d01          SRL     24,A1
     806 000044b0     0d3f          CALLR   FIND_LOGO_IMAGE
         000044c0     0051  
     807 000044d0     0d3f          CALLR   INIT_BLOC_STUFF
         000044e0     00ed  
     808 000044f0     56a5          CLR     A5
     809 00004500     0d3f          CALLR   SETUP_THIS_LOGO_DAG
         00004510     003f  
     810 00004520     2f0a          SRL     8,A10
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   19

     811 00004530     3d87          DSJS    A7,SLAP_UP_NEXT_LOGO
     812                    
     813 00004540     09c5          MOVI    -15,A5
         00004550     fff1  
     814 00004560     05a7          MOVE    @NUM_OPPS,A7
         00004570 00000340- 
     815 00004590     07aa          MOVE    @CURRENT_LADDER,A10,L
         000045a0 00000020- 
     816 000045c0     874a          MOVE    *A10,A10,L
     817 000045d0     01c0          POPST
     818 000045e0     01e0          PUSHST
     819 000045f0     c903          JRNC    SLAP_UP_NEXT_LOGO_DAG_Y
     820 00004600     1827          MOVK    1,A7
     821 00004610     09ca          MOVI    9,A10
         00004620     0009  
     822                    
     823 00004630           SLAP_UP_NEXT_LOGO_DAG_Y
     824 00004630     4d41          MOVE    A10,A1
     825 00004640     2701          SLL     24,A1
     826 00004650     2d01          SRL     24,A1
     827 00004660     0d3f          CALLR   FIND_LOGO_IMAGE
         00004670     0036  
     828 00004680     b429          MOVE    *A1(ISIZEY),A9
         00004690     0010  
     829 000046a0     4125          ADD     A9,A5
     830 000046b0     0b05          ADDI    15,A5
         000046c0     000f  
     831 000046d0     2f0a          SRL     8,A10
     832 000046e0     3d87          DSJS    A7,SLAP_UP_NEXT_LOGO_DAG_Y
     833                    
     834 000046f0                   PULLP   A2
     835                    
     836 00004700     09cb          MOVI    255,A11
         00004710     00ff  
     837 00004720     44ab          SUB     A5,A11
     838 00004730     2feb          SRL     1,A11
     839                    
     840 00004740     05a7          MOVE    @NUM_OPPS,A7
         00004750 00000340- 
     841 00004770     07aa          MOVE    @CURRENT_LADDER,A10,L
         00004780 00000020- 
     842 000047a0     874a          MOVE    *A10,A10,L
     843 000047b0     01c0          POPST
     844 000047c0     c903          JRNC    SLAP_UP_NEXT_LOGO_DAG
     845 000047d0     1827          MOVK    1,A7
     846 000047e0     09ca          MOVI    9,A10
         000047f0     0009  
     847                    
     848 00004800           SLAP_UP_NEXT_LOGO_DAG
     849 00004800     b162          MOVE    A11,*A2(B_DAG+010H)
         00004810     0050  
     850 00004820     4d41          MOVE    A10,A1
     851 00004830     2701          SLL     24,A1
     852 00004840     2d01          SRL     24,A1
     853 00004850     0d3f          CALLR   FIND_LOGO_IMAGE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   20

         00004860     0017  
     854 00004870     b429          MOVE    *A1(ISIZEY),A9
         00004880     0010  
     855 00004890     412b          ADD     A9,A11
     856 000048a0     0b0b          ADDI    15,A11
         000048b0     000f  
     857 000048c0     2f0a          SRL     8,A10
     858 000048d0     0b02          ADDI    BLOC_SIZE,A2
         000048e0     00c0  
     859 000048f0     3e07          DSJS    A7,SLAP_UP_NEXT_LOGO_DAG
     860                    
     861 00004900     0960          RETS
     862                    
     863 00004910           SETUP_THIS_LOGO_DAG
     864 00004910     b423          MOVE    *A1(ISIZEX),A3
         00004920     0000  
     865 00004930     09c4          MOVI    200,A4
         00004940     00c8  
     866 00004950     4464          SUB     A3,A4
     867 00004960     2fe4          SRL     1,A4
     868 00004970     40c4          ADD     A6,A4
     869 00004980     eea4          MOVY    A5,A4
     870 00004990     b282          MOVE    A4,*A2(B_DAG),L
         000049a0     0040  
     871 000049b0     0b02          ADDI    BLOC_SIZE,A2
         000049c0     00c0  
     872 000049d0     0960          RETS
     873                    
     874 000049e0           FIND_LOGO_IMAGE
     875 000049e0     24a1          SLL     5,A1
     876 000049f0     0b21          ADDI    LOGO_IMAGE_TABLE,A1
         00004a00 00004a40' 
     877 00004a20     8621          MOVE    *A1,A1,L
     878 00004a30     0960          RETS
     879                    
     880 00004a40           LOGO_IMAGE_TABLE
     881 00004a40 00000000!         .LONG   HRT3
     882 00004a60 00000000!         .long   RZR3
     883 00004a80 00000000!         .long   UND3
     884 00004aa0 00000000!         .long   YOK3
     885 00004ac0 00000000!         .long   SHN3
     886 00004ae0 00000000!         .long   BAM3
     887 00004b00 00000000!         .long   DNK3
     888 00004b20 00000000!         .long   LEX3
     889 00004b40 00000000!         .long   LEX3
     890 00004b60 00000000!         .long   WWFCHAL
     891 00004b80           MOVE_BLOC
     892 00004b80     b640          MOVE    *A2(B_SAG),A0,L
         00004b90     0020  
     893 00004ba0     ca63          JRZ     NO_BLOC_TO_MOVE
     894 00004bb0     b440          MOVE    *A2(B_DAG),A0
         00004bc0     0040  
     895 00004bd0     0b40          CMPI    200,A0
         00004be0     ff37  
     896 00004bf0     c426          JRLT    BLOC_ON_LEFT
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   21

     897 00004c00     03a9          NEG     A9
     898 00004c10     4120          ADD     A9,A0
     899 00004c20     03a9          NEG     A9
     900 00004c30     b002          MOVE    A0,*A2(B_DAG)
         00004c40     0040  
     901 00004c50     09c3          MOVI    400,A3
         00004c60     0190  
     902 00004c70     4403          SUB     A0,A3
     903 00004c80     03a3          NEG     A3
     904 00004c90     05a1          MOVE    @BOT_RIGHT_2,A1
         00004ca0 00000380- 
     905 00004cc0     4861          CMP     A3,A1
     906 00004cd0     c603          JRLE    NO_NEW_BOT_RIGHT
     907 00004ce0     0583          MOVE    A3,@BOT_RIGHT_2
         00004cf0 00000380- 
     908 00004d10           NO_NEW_BOT_RIGHT
     909 00004d10     5621          CLR     A1
     910 00004d20     b443          MOVE    *A2(B_SIZE),A3
         00004d30     0060  
     911 00004d40     4003          ADD     A0,A3
     912 00004d50     0be3          SUBI    400,A3
         00004d60     fe6f  
     913 00004d70     ce01          JRN     NO_SPECIAL_BCTRL
     914 00004d80     4c61          MOVE    A3,A1
     915 00004d90           NO_SPECIAL_BCTRL
     916 00004d90     b022          MOVE    A1,*A2(B_CTRL)
         00004da0     0000  
     917 00004db0     0b40          CMPI    399,A0
         00004dc0     fe70  
     918 00004dd0     c73a          JRGT    NOT_OF_LEFT_SCREEN
     919 00004de0     b641          MOVE    *A2(B_CTRL),A1,L
         00004df0     0000  
     920 00004e00     0ba1          ORI     080000000H,A1
         00004e10 80000000  
     921 00004e30     b222          MOVE    A1,*A2(B_CTRL),L
         00004e40     0000  
     922 00004e50     0960          RETS
     923 00004e60           BLOC_ON_LEFT
     924 00004e60     b441          MOVE    *A2(B_CTRL),A1
         00004e70     0000  
     925 00004e80     4420          SUB     A1,A0
     926 00004e90     4120          ADD     A9,A0
     927 00004ea0     4c0b          MOVE    A0,A11
     928 00004eb0     b441          MOVE    *A2(B_SIZE),A1
         00004ec0     0060  
     929 00004ed0     4001          ADD     A0,A1
     930 00004ee0     05a3          MOVE    @TOP_LEFT_2,A3
         00004ef0 00000360- 
     931 00004f10     4823          CMP     A1,A3
     932 00004f20     c503          JRGE    NO_NEW_TOP_LEFT
     933 00004f30     0581          MOVE    A1,@TOP_LEFT_2
         00004f40 00000360- 
     934 00004f60           NO_NEW_TOP_LEFT
     935 00004f60     b643          MOVE    *A2(B_REAL_SAG),A3,L
         00004f70     00a0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   22

     936 00004f80     5621          CLR     A1
     937 00004f90     4c00          MOVE    A0,A0
     938 00004fa0     cf0a          JRNN    NO_SPECIAL_BCTRL2
     939 00004fb0     03a0          NEG     A0
     940 00004fc0     4c01          MOVE    A0,A1
     941 00004fd0     b445          MOVE    *A2(B_CTRL+010H),A5
         00004fe0     0010  
     942 00004ff0     0b85          ANDI    7000H,A5
         00005000 ffff8fff  
     943 00005020     2e85          SRL     12,A5
     944 00005030     5e25          MPYU    A1,A5
     945 00005040     40a3          ADD     A5,A3
     946 00005050           NO_SPECIAL_BCTRL2
     947 00005050     402b          ADD     A1,A11
     948 00005060     b162          MOVE    A11,*A2(B_DAG)
         00005070     0040  
     949 00005080     b022          MOVE    A1,*A2(B_CTRL)
         00005090     0000  
     950 000050a0     b444          MOVE    *A2(B_SIZE),A4
         000050b0     0060  
     951 000050c0     4881          CMP     A4,A1
     952 000050d0     c50a          JRGE    NOT_OF_LEFT_SCREEN
     953 000050e0     b262          MOVE    A3,*A2(B_SAG),L
         000050f0     0020  
     954 00005100     b641          MOVE    *A2(B_CTRL),A1,L
         00005110     0000  
     955 00005120     0ba1          ORI     080000000H,A1
         00005130 80000000  
     956 00005150     b222          MOVE    A1,*A2(B_CTRL),L
         00005160     0000  
     957 00005170     0960          RETS
     958 00005180           NOT_OF_LEFT_SCREEN
     959 00005180     b641          MOVE    *A2(B_CTRL),A1,L
         00005190     0000  
     960 000051a0     2421          SLL     1,A1
     961 000051b0     2fe1          SRL     1,A1
     962 000051c0     b222          MOVE    A1,*A2(B_CTRL),L
         000051d0     0000  
     963 000051e0           NO_BLOC_TO_MOVE
     964 000051e0     0960          RETS
     965                    
     966 000051f0           INIT_BLOC
     967 000051f0     09e2          MOVI    PROG_BLOC_START,A2
         00005200 00000510- 
     968 00005220     09e3          MOVI    INIT_BLOC_TAB,A3
         00005230 00005570' 
     969 00005250     1944          MOVK    10,A4
     970 00005260           INIT_NEXT_BLOC
     971 00005260     9661          MOVE    *A3+,A1,L
     972 00005270     0d3f          CALLR   INIT_BLOC_STUFF
         00005280     0013  
     973                    
     974 00005290     9660          MOVE    *A3+,A0,L
     975 000052a0     b202          MOVE    A0,*A2(B_DAG),L
         000052b0     0040  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   23

     976 000052c0     0b02          ADDI    BLOC_SIZE,A2
         000052d0     00c0  
     977                    
     978 000052e0     3d24          DSJS    A4,INIT_NEXT_BLOC
     979                    
     980 000052f0     09c4          MOVI    44,A4
         00005300     002c  
     981 00005310     5600          CLR     A0
     982 00005320           INIT_NEXT_BLOC2
     983 00005320     b202          MOVE    A0,*A2(B_SAG),L
         00005330     0020  
     984 00005340     b202          MOVE    A0,*A2(B_CTRL),L
         00005350     0000  
     985 00005360     0b02          ADDI    BLOC_SIZE,A2
         00005370     00c0  
     986                    
     987 00005380     3ce4          DSJS    A4,INIT_NEXT_BLOC2
     988 00005390     0be2          SUBI    44*BLOC_SIZE,A2
         000053a0     deff  
     989                    
     990 000053b0     0960          RETS
     991                    
     992 000053c0           INIT_BLOC_STUFF
     993 000053c0     ba22          MOVE    *A1(ISAG),*A2(B_SAG),L
         000053d0     0040  
         000053e0     0020  
     994 000053f0     ba22          MOVE    *A1(ISAG),*A2(B_REAL_SAG),L
         00005400     0040  
         00005410     00a0  
     995 00005420     ba22          MOVE    *A1(ISIZEX),*A2(B_SIZE),L
         00005430     0000  
         00005440     0060  
     996 00005450     b620          MOVE    *A1(ICTRL),A0,L
         00005460     0060  
     997 00005470     2600          SLL     16,A0
     998 00005480     0ba0          ORI     80020000H,A0
         00005490 80020000  
     999 000054b0     b202          MOVE    A0,*A2(B_CTRL),L
         000054c0     0000  
    1000 000054d0     b620          MOVE    *A1(ICMAP),A0,L
         000054e0     0070  
    1001 000054f0                   PUSH    A1
    1002 00005500     0d5f          calla   GET_PAL_BLOC
         00005510 00000160' 
    1003 00005530                   PULL    A1
    1004 00005540     b202          MOVE    A0,*A2(B_PAL),L
         00005550     0080  
    1005 00005560     0960          RETS
    1006                    
    1007 00005570           INIT_BLOC_TAB
    1008 00005570 00000000!         .LONG   CSELBK_A,[0,-204]
    1009 000055b0 00000000!         .LONG   CSELBK_C,[133,-204]
    1010 000055f0 00000000!         .LONG   CSELBK_E,[252,-204]
    1011 00005630 00000000!         .LONG   CSELBK_B,[0,404]
    1012 00005670 00000000!         .LONG   CSELBK_D,[133,404]
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   24

    1013 000056b0 00000000!         .LONG   CSELBK_F,[252,404]
    1014 000056f0 00000000!         .LONG   CSELBV_A,[0,-4]
    1015 00005730 00000000!         .LONG   CSELBV_C,[133,-4]
    1016 00005770 00000000!         .LONG   CSELBV_B,[0,400]
    1017 000057b0 00000000!         .LONG   CSELBV_D,[133,400]
    1018                    
    1019 000057f0           BLAST_OUT_PROGRESS_TRANS
    1020 000057f0     09c0          MOVI    BLOC_TOTAL+BITS_TOTAL,A0
         00005800     0036  
    1021 00005810     09e5          MOVI    01000100H,A5
         00005820 01000100  
    1022 00005840     09e2          MOVI    PROG_BLOC_START,A2
         00005850 00000510- 
    1023 00005870           BLAST_NEXT_BLOC
    1024 00005870     09a2          MMFM    A2,A8,A9,A10,A11,A12
         00005880     1f00  
    1025 00005890     0b02          ADDI    020H,A2         ;AVOID REAL SAG
         000058a0     0020  
    1026 000058b0     4d6b          MOVE    A11,A11
    1027 000058c0     ca0b          JRZ     IGNORE_BLOCK
    1028 000058d0     4d8c          MOVE    A12,A12
    1029 000058e0     cf09          JRNN    IGNORE_BLOCK
    1030 000058f0     07a1          MOVE    @SCREEN_SHAKE,A1,L
         00005900 00000320- 
    1031 00005920     402a          ADD     A1,A10
    1032 00005930     b508          MOVE    *A8(P_DMA_PAL_VAL),A8
         00005940     0020  
    1033 00005950     0d5f          CALLA   dma_it_out
         00005960 00000000! 
    1034 00005980           IGNORE_BLOCK
    1035 00005980     3e40          DSJS    A0,BLAST_NEXT_BLOC
    1036 00005990     0960          RETS
    1037                    
    1038                    **************************************
    1039                    
    1040 000059a0           SET_IMAGE_AND_FLASH
    1041 000059a0     0d5f          calla   set_images
         000059b0 00000000! 
    1042 000059d0     05a0          MOVE    @HCOUNT,A0
         000059e0 c00001c0  
    1043 00005a00     0b80          ANDI    3,A0
         00005a10 fffffffc  
    1044 00005a30     cb07          JRNZ    NO_CREATE_RANDOM
    1045 00005a40                   CREATE0 RANDOM_FLASHES
    1046 00005ab0           NO_CREATE_RANDOM
    1047 00005ab0     0960          RETS
    1048                    
    1049 00005ac0           START_FLASHES
    1050 00005ac0     05a0          MOVE    @FLASH_FLAG,A0
         00005ad0 000002d0- 
    1051 00005af0     cb1b          JRNZ    ALREADY_FLASHING
    1052 00005b00     05ae          move    @reduce_bog,a14
         00005b10 00000000! 
    1053 00005b30     cb17          jrnz    ALREADY_FLASHING
    1054                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   25

    1055                    ;       MOVI    FLASH_PID,A0
    1056                    ;       movi    -1,a1
    1057                    ;       CALLA   EXISTP
    1058                    ;       JRNZ    ALREADY_FLASHING
    1059                    
    1060 00005b40     07a0          MOVE    @WORLDTLY,A0,L
         00005b50 00000000! 
    1061 00005b70     0b60          cmpi    19C000H,a0
         00005b80 ffe63fff  
    1062 00005ba0     c710          jrgt    ALREADY_FLASHING
    1063                    
    1064 00005bb0     09c8          MOVI    18,A8
         00005bc0     0012  
    1065 00005bd0     09c9          MOVI    500,A9
         00005be0     01f4  
    1066 00005bf0                   CREATE  FLASH_PID,SET_GAME_FLASHES
    1067 00005c70     1820          MOVK    1,A0
    1068 00005c80     0580          MOVE    A0,@FLASH_FLAG
         00005c90 000002d0- 
    1069 00005cb0           ALREADY_FLASHING
    1070 00005cb0     0960          RETS
    1071                    
    1072 00005cc0            SUBR   START_HI_FLASHES
    1073 00005cc0     05a0          MOVE    @FLASH_FLAG,A0
         00005cd0 000002d0- 
    1074 00005cf0     cbfb          JRNZ    ALREADY_FLASHING
    1075 00005d00     05ae          move    @reduce_bog,a14
         00005d10 00000000! 
    1076 00005d30     cbf7          jrnz    ALREADY_FLASHING
    1077                    
    1078 00005d40     09c8          MOVI    40,A8
         00005d50     0028  
    1079 00005d60     09c9          MOVI    1000,A9
         00005d70     03e8  
    1080 00005d80                   CREATE  FLASH_PID,SET_GAME_FLASHES
    1081 00005e00     1820          MOVK    1,A0
    1082 00005e10     0580          MOVE    A0,@FLASH_FLAG
         00005e20 000002d0- 
    1083 00005e40     0960          RETS
    1084                    
    1085 00005e50           SET_GAME_FLASHES
    1086 00005e50     05a0          MOVE    @PSTATUS,A0
         00005e60 00000000! 
    1087 00005e80     0b40          CMPI    3,A0
         00005e90     fffc  
    1088 00005ea0     ca06          JREQ    ALWAYS_DO_FLASH
    1089 00005eb0     05a0          MOVE    @NUM_OPPS,A0
         00005ec0 00000340- 
    1090 00005ee0     0b40          CMPI    2,A0
         00005ef0     fffd  
    1091 00005f00     c51a          JRGE    NO_CREATE_ANY_FLASH
    1092 00005f10           ALWAYS_DO_FLASH
    1093 00005f10     4d20          MOVE    A9,A0
    1094 00005f20     0d5f          CALLA   RNDPER
         00005f30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   26

    1095 00005f50     c215          JRLS    NO_CREATE_ANY_FLASH
    1096 00005f60           SET_GAME_FLASHES2
    1097 00005f60     0b49          CMPI    1000,A9
         00005f70     fc17  
    1098 00005f80     ca05          JREQ    ALWAYS_FLASH
    1099 00005f90     05a0          MOVE    @HCOUNT,A0
         00005fa0 c00001c0  
    1100 00005fc0     2fe0          SRL     1,A0
    1101 00005fd0     c907          JRNC    NO_CREATE_RANDOM_G
    1102 00005fe0           ALWAYS_FLASH
    1103 00005fe0                   CREATE0 RANDOM_GAME_FLASHES
    1104 00006050           NO_CREATE_RANDOM_G
    1105 00006050                   SLEEP   2
    1106 000060a0     3ea8          DSJS    A8,SET_GAME_FLASHES2
    1107 000060b0           NO_CREATE_ANY_FLASH
    1108 000060b0     5600          CLR     A0
    1109 000060c0     0580          MOVE    A0,@FLASH_FLAG
         000060d0 000002d0- 
    1110 000060f0                   DIE
    1111                    
    1112 00006120           RANDOM_GAME_FLASHES
    1113 00006120     07a0          MOVE    @WORLDTLY,A0,L
         00006130 00000000! 
    1114 00006150     2a00          SRA     16,A0
    1115 00006160     03a0          NEG     A0
    1116 00006170     0b00          ADDI    30,A0
         00006180     001e  
    1117 00006190     0d5f          CALLA   RNDRNG0
         000061a0 00000000! 
    1118 000061c0                   PUSH    A0
    1119 000061d0     09c0          MOVI    400,A0
         000061e0     0190  
    1120 000061f0     0d5f          CALLA   RNDRNG0
         00006200 00000000! 
    1121 00006220     05a1          MOVE    @WORLDTLX+010H,A1
         00006230 00000010! 
    1122 00006250     4001          ADD     A0,A1
    1123 00006260     0b41          CMPI    3E8H,A1
         00006270     fc17  
    1124 00006280     c41a          JRLT    RANDOM_2
    1125 00006290     0b41          CMPI    440H,A1
         000062a0     fbbf  
    1126 000062b0     c717          JRGT    RANDOM_2
    1127 000062c0     09c1          MOVI    58H,A1
         000062d0     0058  
    1128 000062e0     05a2          MOVE    @HCOUNT,A2
         000062f0 c00001c0  
    1129 00006310     0ba2          ORI     2,A2
         00006320 00000002  
    1130 00006340     ca01          JRZ     NOW_SHIFT_FLASH
    1131 00006350     03a1          NEG     A1
    1132 00006360           NOW_SHIFT_FLASH
    1133 00006360     4020          ADD     A1,A0
    1134 00006370     c00b          JRUC    RANDOM_2
    1135                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   27

    1136 00006380           RANDOM_FLASHES
    1137 00006380     09c0          MOVI    200,A0
         00006390     00c8  
    1138 000063a0     0d5f          CALLA   RNDRNG0
         000063b0 00000000! 
    1139 000063d0                   PUSH    A0
    1140 000063e0     09c0          MOVI    400,A0
         000063f0     0190  
    1141 00006400     0d5f          CALLA   RNDRNG0
         00006410 00000000! 
    1142 00006430           RANDOM_2
    1143 00006430                   PULL    A1
    1144 00006440     4c21          move    a1,a1
    1145 00006450     ce3e          jrn     dont_bother
    1146 00006460     2600          SLL     16,A0
    1147 00006470     2601          SLL     16,A1
    1148 00006480     09e2          MOVI    flash1,A2
         00006490 00000000! 
    1149 000064b0     09c3          MOVI    89,A3
         000064c0     0059  
    1150 000064d0     09e4          movi    DMAWNZ,a4               ;DMA flags
         000064e0 00008002  
    1151 00006500     56a5          CLR     A5
    1152 00006510     56c6          CLR     A6
    1153 00006520     56e7          CLR     A7
    1154 00006530     0d5f          CALLA   BEGINOBJW
         00006540 00000000! 
    1155                    
    1156 00006560     05a0          MOVE    @GAMSTATE,A0
         00006570 00000000! 
    1157 00006590     0b40          CMPI    INGAME,A0
         000065a0     fffb  
    1158 000065b0     ca11          JREQ    NO_SOUNDS
    1159 000065c0     09c0          MOVI    500,A0
         000065d0     01f4  
    1160 000065e0     0d5f          CALLA   RNDPER
         000065f0 00000000! 
    1161 00006610     c20b          JRLS    NO_SOUNDS
    1162 00006620     09c0          MOVI    2,A0
         00006630     0002  
    1163 00006640     0d5f          CALLA   RNDRNG0
         00006650 00000000! 
    1164 00006670     0b00          ADDI    4AH,A0
         00006680     004a  
    1165 00006690     4c03          MOVE    A0,A3
    1166 000066a0     0d5f          CALLA   triple_sound
         000066b0 00000000! 
    1167 000066d0           NO_SOUNDS
    1168                    
    1169 000066d0     09e1          MOVI    FLASH_TYPE_1,A1
         000066e0 00006870' 
    1170 00006700     05a0          move    @HCOUNT,a0
         00006710 c00001c0  
    1171 00006730     1fe0          btst    0,a0
    1172 00006740     ca03          jrz     icef1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   28

    1173 00006750     09e1          MOVI    FLASH_TYPE_2,A1
         00006760 000069d0' 
    1174 00006780     0d3f  icef1   callr   setup_back_anim
         00006790     0036  
    1175 000067a0                   JSRP    ANIM_CROWD
    1176 00006810     0d5f          CALLA   DELOBJA8
         00006820 00000000! 
    1177 00006840           dont_bother
    1178 00006840                   DIE
    1179                    
    1180 00006870           FLASH_TYPE_1
    1181 00006870                   WL      2,flash1
    1182 000068a0                   WL      2,flash2
    1183 000068d0                   WL      2,flash3
    1184 00006900                   WL      2,flash3a
    1185 00006930                   WL      2,flash3
    1186 00006960                   WL      2,flash2
    1187 00006990                   WL      2,flash1
    1188                    
    1189 000069c0     8002          .WORD   CANI_END
    1190                    
    1191 000069d0           FLASH_TYPE_2
    1192 000069d0                   WL      2,flash1
    1193 00006a00                   WL      2,flash4
    1194 00006a30                   WL      1,flash5
    1195 00006a60                   WL      1,flash6
    1196 00006a90                   WL      1,flash5
    1197 00006ac0                   WL      2,flash4
    1198                    
    1199 00006af0     8002          .WORD   CANI_END
    1200                    
    1201 00006b00           setup_back_anim
    1202 00006b00     4da4          MOVE    A13,A4
    1203 00006b10     0b04          ADDI    PDATA,A4
         00006b20     0100  
    1204 00006b30     b224          MOVE    A1,*A4(SCPTR),L
         00006b40     0000  
    1205 00006b50     1821          MOVK    1,A1
    1206 00006b60     b024          MOVE    A1,*A4(TIME)
         00006b70     0020  
    1207 00006b80     0d5f          CALLA   animate_back
         00006b90 00000000! 
    1208 00006bb0     b680          MOVE    *A4(FRAME),A0,L
         00006bc0     0030  
    1209 00006bd0     c051          JRUC    ANIBOBJ_B
    1210                    
    1211 00006be0           DO_FLASH
    1212 00006be0     05ae          move    @reduce_bog,a14
         00006bf0 00000000! 
    1213 00006c10     cb12          jrnz    icefrets
    1214 00006c20     098f          MMTM    SP,A0,A1,A7,A8
         00006c30     c180  
    1215 00006c40     05a8          MOVE    @GAMSTATE,A8
         00006c50 00000000! 
    1216 00006c70     0b48          CMPI    INPREGAME2,A8
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   29

         00006c80     fff6  
    1217 00006c90     cb08          JRNE    NO_DO_THIS
    1218 00006ca0     4c08          MOVE    A0,A8
    1219 00006cb0                   CREATE0 DO_CROWD_FLASH
    1220 00006d20           NO_DO_THIS
    1221 00006d20     09af          MMFM    SP,A0,A1,A7,A8
         00006d30     0183  
    1222 00006d40     0960  icefrets        RETS
    1223                    
    1224                    **********************************
    1225                    
    1226 00006d50           DO_CROWD_FLASH  ;process
    1227                    
    1228 00006d50     b500          MOVE    *A8(OYPOS),A0
         00006d60     00b0  
    1229 00006d70     0be0          SUBI    250,A0
         00006d80     ff05  
    1230 00006d90     b008          MOVE    A0,*A8(OYPOS)
         00006da0     00b0  
    1231 00006db0     09c0          MOVI    80,A0
         00006dc0     0050  
    1232 00006dd0     0d5f          CALLA   RNDRNG0
         00006de0 00000000! 
    1233 00006e00     1020          INC     A0
    1234 00006e10     0d5f          CALLA   PRCSLP
         00006e20 00000000! 
    1235                    
    1236 00006e40     09e1          MOVI    CROWD_FLASH_ANIM,A1
         00006e50 00007460' 
    1237 00006e70     0d3f          callr   setup_back_anim
         00006e80     ffc7  
    1238                    
    1239 00006e90     b500          MOVE    *A8(OYPOS),A0
         00006ea0     00b0  
    1240 00006eb0     0b00          ADDI    250,A0
         00006ec0     00fa  
    1241 00006ed0     b008          MOVE    A0,*A8(OYPOS)
         00006ee0     00b0  
    1242 00006ef0                   JSRP    ANIM_CROWD
    1243 00006f60     c080          JAUC    DO_CROWD_FLASH
         00006f70 00006d50' 
    1244                    
    1245                    **********************************
    1246                    
    1247 00006f90           ANIM_CROWD
    1248 00006f90                   SLEEPK  1
    1249 00006fd0     4da4          MOVE    A13,A4
    1250 00006fe0     0b04          ADDI    PDATA,A4
         00006ff0     0100  
    1251 00007000     0d5f          CALLA   animate_back
         00007010 00000000! 
    1252 00007030     ce08          JRN     EXIT_ANIM_CROWD
    1253 00007040     cbf4          JRNZ    ANIM_CROWD
    1254 00007050     b680          MOVE    *A4(FRAME),A0,L
         00007060     0030  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   30

    1255 00007070     4c0a          MOVE    A0,A10
    1256 00007080     0d5f          CALLA   ANIBOBJ_B
         00007090 000070f0' 
    1257 000070b0     c0ed          JRUC    ANIM_CROWD
    1258 000070c0           EXIT_ANIM_CROWD
    1259 000070c0                   RETP
    1260                    
    1261 000070f0           ANIBOBJ_B
    1262 000070f0     b501          MOVE    *A8(OFLAGS),A1
         00007100     00e0  
    1263 00007110     0b81          ANDI    0FFFFH-M_BOBJ,A1
         00007120 ffff4000  
    1264 00007140     b028          MOVE    A1,*A8(OFLAGS)
         00007150     00e0  
    1265                    
    1266 00007160     b501          move    *a8(OCTRL),a1,W
         00007170     00f0  
    1267                    
    1268 00007180                   PUSH    a2,a3,a4,a5
    1269                    
    1270 000071a0     0b60          cmpi    ROM,a0
         000071b0 f87fffff  
    1271 000071d0     c81c          jrlo    icefanierr
    1272                    
    1273 000071e0     b404          move    *a0(IANIOFFX),a4,W
         000071f0     0020  
    1274 00007200     b088          move    A4,*a8(ODXOFF),W
         00007210     0220  
    1275                    
    1276 00007220     b404          move    *a0(IANIOFFY),a4,W
         00007230     0030  
    1277 00007240     b088          move    A4,*a8(ODYOFF),W
         00007250     0230  
    1278                    
    1279 00007260     4c02          move    a0,a2
    1280 00007270     4c23          move    a1,a3
    1281                    
    1282 00007280     b248          move    a2,*a8(OIMG),L
         00007290     0170  
    1283 000072a0     ba48          move    *a2(0),*a8(OSIZE),L
         000072b0     0000  
         000072c0     0130  
    1284 000072d0     ba48          move    *a2(ISAG),*a8(OSAG),L
         000072e0     0040  
         000072f0     0110  
    1285                    
    1286 00007300     bc48          movb    *a2(ICTRL+7),*a8(OCTRL+7) ;Write z comp & bpp bits
         00007310     0067  
         00007320     00f7  
    1287                    
    1288 00007330     0546          setf    6,0,0
    1289 00007340     b068          move    a3,*a8(OCTRL)           ;Write 6 low bits
         00007350     00f0  
    1290 00007360     0570          setf    16,1,0
    1291                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   31

    1292 00007370           icefx   PULL    a2,a3,a4,a5
    1293 00007390     0960          rets
    1294                    
    1295 000073a0           icefanierr 
    1296                            .if     DEBUG
    1297                            LOCKUP
    1298                            eint
    1299                            .else
    1300 000073a0                   CALLERR 2,2
    1301                            .endif
    1302 00007450     c0f1          jruc    icefx
    1303                    
    1304                    
    1305 00007460           CROWD_FLASH_ANIM
    1306 00007460                   WL      1,FLASH2
    1307 00007490                   WL      2,FLASH1
    1308 000074c0                   WL      1,FLASH2
    1309 000074f0     8002          .WORD   CANI_END
    1310                    
    1311 00007500           DO_JASON_CROWD
    1312 00007500     098f          MMTM    SP,A0,A1,A7,A8
         00007510     c180  
    1313 00007520     05a8          MOVE    @GAMSTATE,A8
         00007530 00000000! 
    1314 00007550     0b48          CMPI    INPREGAME2,A8
         00007560     fff6  
    1315 00007570     cb08          JRNE    JASON_NO_DO_THIS
    1316 00007580     4c08          MOVE    A0,A8
    1317 00007590                   CREATE0 DO_JASON_CROWD_MOVE
    1318 00007600           JASON_NO_DO_THIS
    1319 00007600     09af          MMFM    SP,A0,A1,A7,A8
         00007610     0183  
    1320 00007620     0960          RETS
    1321                    
    1322 00007630           DO_JASON_CROWD_MOVE
    1323 00007630     09c0          MOVI    80,A0
         00007640     0050  
    1324 00007650     0d5f          CALLA   RNDRNG0
         00007660 00000000! 
    1325 00007680     1020          INC     A0
    1326 00007690     0d5f          CALLA   PRCSLP
         000076a0 00000000! 
    1327                    
    1328 000076c0     09e1          MOVI    JASON_CROWD_ANIM1,A1
         000076d0 00007830' 
    1329 000076f0     05a0          MOVE    @dirqcnt,A0
         00007700 00000000! 
    1330 00007720     2fe0          SRL     1,A0
    1331 00007730     c903          JRNC    JASON_CROWD_SET
    1332 00007740     09e1          MOVI    JASON_CROWD_ANIM2,A1
         00007750 00007960' 
    1333                    
    1334 00007770           JASON_CROWD_SET
    1335 00007770     0d3f          callr   setup_back_anim
         00007780     ff37  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   32

    1336                    
    1337 00007790                   JSRP    ANIM_CROWD
    1338 00007800     c080          JAUC    DO_JASON_CROWD_MOVE
         00007810 00007630' 
    1339                    
    1340 00007830           JASON_CROWD_ANIM1
    1341 00007830                   WL      5,JASONCRD1
    1342 00007860                   WL      5,JASONCRD2
    1343 00007890                   WL      5,JASONCRD3
    1344 000078c0                   WL      6,JASONCRD4
    1345 000078f0                   WL      10,JASONCRD5
    1346 00007920                   WL      5,JASONCRD1
    1347 00007950     8002          .WORD   CANI_END
    1348                    
    1349 00007960           JASON_CROWD_ANIM2
    1350 00007960                   WL      5,JASONCRD1
    1351 00007990                   WL      5,JASONCRD2
    1352 000079c0                   WL      5,JASONCRD3
    1353 000079f0                   WL      6,JASONCRD4
    1354 00007a20                   WL      10,JASONCRD5
    1355 00007a50                   WL      6,JASONCRD4
    1356 00007a80                   WL      6,JASONCRD3
    1357 00007ab0                   WL      6,JASONCRD4
    1358 00007ae0                   WL      10,JASONCRD5
    1359 00007b10                   WL      5,JASONCRD1
    1360 00007b40     8002          .WORD   CANI_END
    1361                    
    1362                    
    1363 00007b50           DO_TONY_CROWD
    1364 00007b50     098f          MMTM    SP,A0,A1,A7,A8
         00007b60     c180  
    1365 00007b70     05a8          MOVE    @GAMSTATE,A8
         00007b80 00000000! 
    1366 00007ba0     0b48          CMPI    INPREGAME2,A8
         00007bb0     fff6  
    1367 00007bc0     cb08          JRNE    TONY_NO_DO_THIS
    1368 00007bd0     4c08          MOVE    A0,A8
    1369 00007be0                   CREATE0 DO_TONY_CROWD_MOVE
    1370 00007c50           TONY_NO_DO_THIS
    1371 00007c50     09af          MMFM    SP,A0,A1,A7,A8
         00007c60     0183  
    1372 00007c70     0960          RETS
    1373                    
    1374 00007c80           DO_TONY_CROWD_MOVE
    1375 00007c80     09c0          MOVI    80,A0
         00007c90     0050  
    1376 00007ca0     0d5f          CALLA   RNDRNG0
         00007cb0 00000000! 
    1377 00007cd0     1020          INC     A0
    1378 00007ce0     0d5f          CALLA   PRCSLP
         00007cf0 00000000! 
    1379                    
    1380 00007d10     09e1          MOVI    TONY_CROWD_ANIM1,A1
         00007d20 00007e80' 
    1381 00007d40     05a0          MOVE    @dirqcnt,A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   33

         00007d50 00000000! 
    1382 00007d70     2fe0          SRL     1,A0
    1383 00007d80     c903          JRNC    TONY_CROWD_SET
    1384 00007d90     09e1          MOVI    TONY_CROWD_ANIM2,A1
         00007da0 00007fe0' 
    1385                    
    1386 00007dc0           TONY_CROWD_SET
    1387 00007dc0     0d3f          callr   setup_back_anim
         00007dd0     fed2  
    1388                    
    1389 00007de0                   JSRP    ANIM_CROWD
    1390 00007e50     c080          JAUC    DO_TONY_CROWD_MOVE
         00007e60 00007c80' 
    1391                    
    1392 00007e80           TONY_CROWD_ANIM1
    1393 00007e80                   WL      5,TONYCRD1
    1394 00007eb0                   WL      5,TONYCRD2
    1395 00007ee0                   WL      5,TONYCRD3
    1396 00007f10                   WL      6,TONYCRD4
    1397 00007f40                   WL      10,TONYCRD5
    1398 00007f70                   WL      6,TONYCRD2
    1399 00007fa0                   WL      5,TONYCRD1
    1400 00007fd0     8002          .WORD   CANI_END
    1401                    
    1402 00007fe0           TONY_CROWD_ANIM2
    1403 00007fe0                   WL      5,TONYCRD1
    1404 00008010                   WL      5,TONYCRD2
    1405 00008040                   WL      5,TONYCRD3
    1406 00008070                   WL      6,TONYCRD4
    1407 000080a0                   WL      10,TONYCRD5
    1408 000080d0                   WL      6,TONYCRD4
    1409 00008100                   WL      6,TONYCRD3
    1410 00008130                   WL      6,TONYCRD4
    1411 00008160                   WL      10,TONYCRD5
    1412 00008190                   WL      6,TONYCRD2
    1413 000081c0                   WL      5,TONYCRD1
    1414 000081f0     8002          .WORD   CANI_END
    1415                    
    1416 00008200           DO_VOGEL_CROWD
    1417 00008200     098f          MMTM    SP,A0,A1,A7,A8
         00008210     c180  
    1418 00008220     05a8          MOVE    @GAMSTATE,A8
         00008230 00000000! 
    1419 00008250     0b48          CMPI    INPREGAME2,A8
         00008260     fff6  
    1420 00008270     cb08          JRNE    VOGEL_NO_DO_THIS
    1421 00008280     4c08          MOVE    A0,A8
    1422 00008290                   CREATE0 DO_VOGEL_CROWD_MOVE
    1423 00008300           VOGEL_NO_DO_THIS
    1424 00008300     09af          MMFM    SP,A0,A1,A7,A8
         00008310     0183  
    1425 00008320     0960          RETS
    1426                    
    1427 00008330           DO_VOGEL_CROWD_MOVE
    1428 00008330     09c0          MOVI    80,A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   34

         00008340     0050  
    1429 00008350     0d5f          CALLA   RNDRNG0
         00008360 00000000! 
    1430 00008380     1020          INC     A0
    1431 00008390     0d5f          CALLA   PRCSLP
         000083a0 00000000! 
    1432                    
    1433 000083c0     09e1          MOVI    VOGEL_CROWD_ANIM1,A1
         000083d0 00008530' 
    1434 000083f0     05a0          MOVE    @dirqcnt,A0
         00008400 00000000! 
    1435 00008420     2fe0          SRL     1,A0
    1436 00008430     c903          JRNC    VOGEL_CROWD_SET
    1437 00008440     09e1          MOVI    VOGEL_CROWD_ANIM2,A1
         00008450 00008660' 
    1438                    
    1439 00008470           VOGEL_CROWD_SET
    1440 00008470     0d3f          callr   setup_back_anim
         00008480     fe67  
    1441                    
    1442 00008490                   JSRP    ANIM_CROWD
    1443 00008500     c080          JAUC    DO_VOGEL_CROWD_MOVE
         00008510 00008330' 
    1444                    
    1445 00008530           VOGEL_CROWD_ANIM1
    1446 00008530                   WL      5,VOGEL1
    1447 00008560                   WL      5,VOGEL2
    1448 00008590                   WL      5,VOGEL3
    1449 000085c0                   WL      10,VOGEL4
    1450 000085f0                   WL      6,VOGEL2
    1451 00008620                   WL      5,VOGEL1
    1452 00008650     8002          .WORD   CANI_END
    1453                    
    1454 00008660           VOGEL_CROWD_ANIM2
    1455 00008660                   WL      5,VOGEL1
    1456 00008690                   WL      5,VOGEL2
    1457 000086c0                   WL      6,VOGEL3
    1458 000086f0                   WL      10,VOGEL4
    1459 00008720                   WL      6,VOGEL3
    1460 00008750                   WL      6,VOGEL2
    1461 00008780                   WL      6,VOGEL3
    1462 000087b0                   WL      10,VOGEL4
    1463 000087e0                   WL      6,VOGEL3
    1464 00008810                   WL      5,VOGEL2
    1465 00008840                   WL      5,VOGEL1
    1466 00008870     8002          .WORD   CANI_END
    1467                    
    1468                    
    1469                    
    1470                    ;**************************************************************************
    1471                    ;*                                                                                            *
    1472                    ;* This table is set up to determine where two or three player                   *
    1473                    ;* matches take place in the game. It is in the format of                                *
    1474                    ;*      .word x,y                                                                                *
    1475                    ;* where x=number of places in the table to put y(where y is                     *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   35

    1476                    ;* the number of opponents to fight). For example                                        *
    1477                    ;*      .word 10,2                                                                               *
    1478                    ;* would set the next ten consecutive places in the table to                     *
    1479                    ;* have two opponents                                                                            *
    1480                    ;*                                                                                            *
    1481                    ;**************************************************************************
    1482 00008880           LADDER_TABLE_ICONT              ;intercontinental belt table
    1483                    
    1484 00008880     0004          .word   4,1
    1485 000088a0     0002          .word   2,2
    1486 000088c0     0001          .word   1,3
    1487 000088e0     ffff          .word   -1
    1488                    
    1489 000088f0           LADDER_TABLE_WCHAMP             ;world championship belt table
    1490 000088f0     0004          .word   4,2
    1491 00008910     0002          .word   2,3             ;final battle
    1492 00008930     0001          .word   1,3
    1493 00008950     ffff          .word   -1
    1494                    
    1495              0007  FINAL_BATTLE    equ     7       ;14th battle is last one. (keep up-to-date)
    1496                    
    1497                    *********
    1498                    *
    1499                    * returns carry set if the current battle is the last one on our ladder.
    1500                    
    1501 00008960            SUBR   is_final_match
    1502                    
    1503 00008960     07ae          move    @CURRENT_LADDER,a14,L
         00008970 00000020- 
    1504 00008990     0b6e          cmpi    LADDER+((FINAL_BATTLE-1)*20h),a14
         000089a0 fffffedf- 
    1505 000089c0     cb02          jrne    bwtfno
    1506 000089d0     0de0          setc
    1507 000089e0     0960          rets
    1508                    
    1509 000089f0     0320  bwtfno  clrc
    1510 00008a00     0960          rets
    1511                    
    1512                    *********
    1513                    *
    1514                    * returns carry set if the current battle is an 8-on-1.
    1515                    
    1516 00008a10            SUBR   is_8_on_1
    1517                    
    1518                            ;no 8-on-1 in intercontinental belt table.
    1519 00008a10     05ae          move    @belt_type,a14
         00008a20 00000000! 
    1520 00008a40     ca09          jrz     fsqbno
    1521                    
    1522 00008a50     07ae          move    @CURRENT_LADDER,a14,L
         00008a60 00000020- 
    1523 00008a80     0b6e          cmpi    LADDER+((FINAL_BATTLE-1)*20h),a14
         00008a90 fffffedf- 
    1524 00008ab0     cb02          jrne    fsqbno
    1525 00008ac0     0de0          setc
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   36

    1526 00008ad0     0960          rets
    1527                    
    1528 00008ae0     0320  fsqbno  clrc
    1529 00008af0     0960          rets
    1530                    
    1531                    *********
    1532                    *
    1533                    * generates a lineup for a royal rumble match
    1534                    
    1535 00008b00            SUBR   get_royal_lineup
    1536                    
    1537 00008b00     0d3f          callr   get_final_lineup
         00008b10     003b  
    1538                    
    1539 00008b20     05a1          move    @index1,a1
         00008b30 00000000! 
    1540 00008b50     05a2          move    @index2,a2
         00008b60 00000000! 
    1541                    
    1542 00008b80     07a3          move    @FINAL_BATTLE_LINEUP,a3,L
         00008b90 00000280- 
    1543 00008bb0     07a4          move    @FINAL_BATTLE_LINEUP+20h,a4,L
         00008bc0 000002a0- 
    1544                    
    1545                            ;if either index matches either of the first two entries in a3,
    1546                            ; swap a3 and a4.  Then look at a3 again, and if one still matches,
    1547                            ; rotate it 16 bits.
    1548 00008be0     4c65          move    a3,a5
    1549 00008bf0     0b85          andi    000FFH,a5
         00008c00 ffffff00  
    1550 00008c20     4c66          move    a3,a6
    1551 00008c30     0b86          andi    0FF00H,a6
         00008c40 ffff00ff  
    1552 00008c60     2f06          srl     8,a6
    1553                    
    1554 00008c70     4825          cmp     a1,a5
    1555 00008c80     ca07          jreq    svtyswap
    1556 00008c90     4845          cmp     a2,a5
    1557 00008ca0     ca05          jreq    svtyswap
    1558 00008cb0     4826          cmp     a1,a6
    1559 00008cc0     ca03          jreq    svtyswap
    1560 00008cd0     4846          cmp     a2,a6
    1561 00008ce0     ca01          jreq    svtyswap
    1562 00008cf0     c016          jruc    svtyok
    1563                    
    1564 00008d00           svtyswap        SWAP    a3,a4
    1565                    
    1566 00008d30     4c65          move    a3,a5
    1567 00008d40     0b85          andi    000FFH,a5
         00008d50 ffffff00  
    1568 00008d70     4c66          move    a3,a6
    1569 00008d80     0b86          andi    0FF00H,a6
         00008d90 ffff00ff  
    1570 00008db0     2f06          srl     8,a6
    1571                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   37

    1572 00008dc0     4825          cmp     a1,a5
    1573 00008dd0     ca07          jreq    svtyrot
    1574 00008de0     4845          cmp     a2,a5
    1575 00008df0     ca05          jreq    svtyrot
    1576 00008e00     4826          cmp     a1,a6
    1577 00008e10     ca03          jreq    svtyrot
    1578 00008e20     4846          cmp     a2,a6
    1579 00008e30     ca01          jreq    svtyrot
    1580 00008e40     c001          jruc    svtyok
    1581                    
    1582 00008e50     3203  svtyrot rl      16,a3
    1583                    
    1584 00008e60     0783  svtyok  move    a3,@FINAL_BATTLE_LINEUP,L
         00008e70 00000280- 
    1585 00008e90     0784          move    a4,@FINAL_BATTLE_LINEUP+20h,L
         00008ea0 000002a0- 
    1586                    
    1587 00008ec0     0960          rets
    1588                    
    1589                    *********
    1590                    *
    1591                    * generates a new final battle lineup
    1592                    
    1593 00008ed0            SUBR   get_final_lineup
    1594                    
    1595 00008ed0     0d3f          callr   INIT_TEMP_TABLE
         00008ee0     0054  
    1596 00008ef0     0d3f          callr   RANDOMIZE_ORDER
         00008f00     005d  
    1597                    
    1598                            ;now just copy 8 bytes from TEMP_LADDER to FINAL_BATTLE_LINEUP
    1599 00008f10     09e0          movi    TEMP_LADDER,a0
         00008f20 00000240- 
    1600 00008f40     09e1          movi    FINAL_BATTLE_LINEUP,a1
         00008f50 00000280- 
    1601 00008f70     9a01          move    *a0+,*a1+,L             ;first four
    1602 00008f80     9a01          move    *a0+,*a1+,L             ;last four
    1603                    
    1604                            ;set the end-of-battle marker
    1605 00008f90     09ce          movi    -1,a14
         00008fa0     ffff  
    1606 00008fb0     81c1          move    a14,*a1,W
    1607 00008fc0     0960          rets
    1608                    
    1609                    ;**************************************************************************
    1610                    ;*                                                                        *
    1611                    ;* Each entry in the ladder table is in the format of a long              *
    1612                    ;* word, OP4|OP3|OP2|OP1. OP1 is the wrestler number for                  *
    1613                    ;* opponent 1, OP2 would be the second byte and would be                  *
    1614                    ;* the wrestler number for opponent 2. If zero, it will stop              *
    1615                    ;* producing opponents. The table is generated randomly for               *
    1616                    ;* each NEW game started from the ATTRACT MODE. When it is                *
    1617                    ;* generated, it will randomly place the 8 wrestlers in order and then    *
    1618                    ;* distribute them through the list.                                      *
    1619                    ;*                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   38

    1620                    ;**************************************************************************
    1621                    
    1622 00008fd0           INIT_LADDER_TABLE
    1623                    
    1624 00008fd0     098f          MMTM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00008fe0     fff2  
    1625 00008ff0     0d3f          CALLR   INIT_LADDER
         00009000     0039  
    1626 00009010     09e6          MOVI    LADDER-20h,A6           ;init to ladder-20 because the
         00009020 00000040- 
    1627 00009040     0786          MOVE    A6,@CURRENT_LADDER,L    ; it's pre-incremented later on.
         00009050 00000020- 
    1628 00009070     1006          addk    20h,a6
    1629 00009080     0d3f          CALLR   INIT_TEMP_TABLE
         00009090     0039  
    1630 000090a0     0d3f          CALLR   RANDOMIZE_ORDER
         000090b0     0042  
    1631                    
    1632 000090c0     09e7          MOVI    LADDER_TABLE_ICONT,A7
         000090d0 00008880' 
    1633 000090f0     05ae          move    @belt_type,a14
         00009100 00000000! 
    1634 00009120     ca03          jrz     yygeldset
    1635 00009130     09e7          movi    LADDER_TABLE_WCHAMP,a7
         00009140 000088f0' 
    1636 00009160           yygeldset
    1637                    
    1638 00009160           NEXT_BIT_OF_TABLE
    1639 00009160     94e8          MOVE    *A7+,A8
    1640 00009170     ce17          JRN     WE_DONE_ALL_TABLE
    1641 00009180     94e9          MOVE    *A7+,A9
    1642 00009190           DO_ALL_THESE_PARTS
    1643 00009190     4d2a          MOVE    A9,A10
    1644 000091a0     ad46          MOVB    A10,*A6(24)
         000091b0     0018  
    1645                    
    1646 000091c0     0d3f          CALLR   FETCH_NEXT_OPPONENT
         000091d0     0014  
    1647 000091e0     8d66          MOVB    A11,*A6
    1648 000091f0     142a          DEC     A10
    1649 00009200     ca0a          JRZ     DONE_THIS_ENTRY
    1650                    
    1651 00009210     0d3f          CALLR   FETCH_NEXT_OPPONENT
         00009220     000f  
    1652 00009230     ad66          MOVB    A11,*A6(8)
         00009240     0008  
    1653 00009250     142a          DEC     A10
    1654 00009260     ca04          JRZ     DONE_THIS_ENTRY
    1655                    
    1656 00009270     0d3f          CALLR   FETCH_NEXT_OPPONENT
         00009280     0009  
    1657 00009290     ad66          MOVB    A11,*A6(16)
         000092a0     0010  
    1658                    
    1659 000092b0           DONE_THIS_ENTRY
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   39

    1660                    
    1661 000092b0     0b06          ADDI    32,A6
         000092c0     0020  
    1662 000092d0     3ea8          DSJS    A8,DO_ALL_THESE_PARTS
    1663 000092e0     c0e7          JRUC    NEXT_BIT_OF_TABLE
    1664                    
    1665 000092f0           WE_DONE_ALL_TABLE
    1666 000092f0     09af          MMFM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00009300     4fff  
    1667 00009310     0960          RETS
    1668                    
    1669 00009320           FETCH_NEXT_OPPONENT
    1670 00009320     8e4b          MOVB    *A2,A11
    1671 00009330     0b02          ADDI    8,A2
         00009340     0008  
    1672 00009350     0b62          CMPI    TEMP_LADDER_END,A2
         00009360 fffffd7f- 
    1673 00009380     ca15          JREQ    RANDOMIZE_ORDER
    1674 00009390     0960          RETS
    1675                    
    1676 000093a0           INIT_LADDER
    1677 000093a0     09c1          MOVI    NUM_LADDER_ENTRIES,A1
         000093b0     000f  
    1678 000093c0     09e6          MOVI    LADDER,A6
         000093d0 00000060- 
    1679 000093f0     5642          CLR     A2
    1680 00009400           CLEAR_ALL_TABLE
    1681 00009400     9246          MOVE    A2,*A6+,L
    1682 00009410     3c41          DSJS    A1,CLEAR_ALL_TABLE
    1683 00009420     0960          RETS
    1684                    
    1685 00009430           INIT_TEMP_TABLE
    1686 00009430     1901          MOVK    8,A1
    1687 00009440     09e2          MOVI    TEMP_LADDER,A2
         00009450 00000240- 
    1688 00009470           INIT_NEXT_TEMP_TABLE
    1689 00009470     1421          DEC     A1
    1690 00009480     8c22          MOVB    A1,*A2
    1691 00009490     1021          INC     A1
    1692 000094a0     0b02          ADDI    8,A2
         000094b0     0008  
    1693 000094c0     3cc1          DSJS    A1,INIT_NEXT_TEMP_TABLE
    1694 000094d0     0960          RETS
    1695                    
    1696 000094e0           RANDOMIZE_ORDER
    1697 000094e0                   PUSH    a10
    1698 000094f0     09e2          MOVI    TEMP_LADDER,A2
         00009500 00000240- 
    1699 00009520     18ea          MOVK    7,A10
    1700 00009530           RANDOMIZE_NEXT_ENTRY
    1701 00009530     4d40          MOVE    A10,A0
    1702 00009540     0d5f          CALLA   RNDRNG0
         00009550 00000000! 
    1703 00009570     4c03          MOVE    A0,A3
    1704 00009580     2463          SLL     3,A3
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   40

    1705 00009590     4043          ADD     A2,A3
    1706 000095a0     8e4e          MOVB    *A2,A14
    1707 000095b0     9c62          MOVB    *A3,*A2
    1708 000095c0     8dc3          MOVB    A14,*A3
    1709 000095d0     0b02          ADDI    8,A2
         000095e0     0008  
    1710 000095f0     142a          DEC     A10
    1711 00009600     cff2          JRNN    RANDOMIZE_NEXT_ENTRY
    1712 00009610     09e2          MOVI    TEMP_LADDER,A2
         00009620 00000240- 
    1713 00009640                   PULL    a10
    1714 00009650     0960          RETS
    1715                    
    1716                    
    1717                    
    1718              0050  SELBOX_HEIGHT   .equ    80
    1719              00c8  SELBOX_WIDTH    .equ    200
    1720                    
    1721              0056  SELOUTLINE_H    .equ    86
    1722              00cc  SELOUTLINE_W    .equ    204
    1723                    
    1724 00009660           selbox
    1725 00009660     00c8          .word   SELBOX_WIDTH,SELBOX_HEIGHT,0,0
    1726 000096a0 02000000          .long   02000000h
    1727 000096c0     5000          .word   05000h
    1728 000096d0                   .even
    1729                    
    1730 000096d0           selbox_outline
    1731 000096d0     00ce          .word   SELBOX_WIDTH+6,SELBOX_HEIGHT+4,3,2
    1732 00009710 02000000          .long   02000000h
    1733 00009730     5000          .word   05000h
    1734 00009740                   .even
    1735                    
    1736                            .ref    get_all_sticks_cur
    1737                            .ref    get_all_buttons_cur
    1738                            .ref    GENERIC_DISPLAY
    1739                            .ref    FLASHME
    1740                            .ref    print_message
    1741                            .ref    ogmd10_ascii
    1742                            .ref    SGMD8GLD
    1743                            .ref    print_string_C2
    1744                            .ref    COLCYC
    1745                            .ref    SNDSND
    1746                            .ref    mess_objid
    1747                            .ref    hstd_mod
    1748                            .ref    WIPEOUT
    1749                    
    1750 00003430                   .bss    sel_objects,32*12
    1751                    
    1752 00009740           sel_obj_tbl_t
    1753 00009740 00000000!         .long   CHOGLOT_A
    1754 00009760 00000000!         .long   CHOGLOT_B
    1755 00009780 00000000!         .long   CHSHDT_A
    1756 000097a0 00000000!         .long   CHSHDT_B
    1757 000097c0           sel_obj_tbl_b
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   41

    1758 000097c0 00000000!         .long   CHOGLOB_A
    1759 000097e0 00000000!         .long   CHOGLOB_B
    1760 00009800 00000000!         .long   CHSHDB_A
    1761 00009820 00000000!         .long   CHSHDB_B
    1762 00009840           sel_obj_tbl_t1
    1763 00009840 00000000!         .long   CHOICBK
    1764                            .if INTER_DEFAULT
    1765 00009860 00000000!         .long   INTER
    1766                            .else
    1767                            .long   WORLD
    1768                            .endif
    1769 00009880           sel_obj_tbl_b1
    1770 00009880 00000000!         .long   CHOICBK
    1771                            .if INTER_DEFAULT
    1772 000098a0 00000000!         .long   WORLD
    1773                            .else
    1774                            .long   INTER
    1775                            .endif
    1776                    
    1777 000098c0           sel_obj_tbl_t2
    1778 000098c0 00000000!         .long   CHOICBK
    1779 000098e0 00000000!         .long   HEAD
    1780 00009900           sel_obj_tbl_b2
    1781 00009900 00000000!         .long   CHOICBK
    1782 00009920 00000000!         .long   COOP
    1783                    
    1784                    
    1785                    
    1786                    ; SUBRP scrn_rel_off
    1787 00009940            SUBR   scrn_rel_off
    1788 00009940     09ee          movi    OBJLST,a14
         00009950 00000000! 
    1789 00009970           yygesro_loop
    1790 00009970     87ce          move    *a14,a14,L
    1791 00009980     ca0d          jrz     yygesro_exit
    1792 00009990     b5c3          move    *a14(OID),a3
         000099a0     0190  
    1793 000099b0     0b43          cmpi    CREDITID|CLSDEAD,a3
         000099c0     ded5  
    1794 000099d0     caf9          jrz     yygesro_loop
    1795 000099e0     b5c3          move    *a14(OFLAGS),a3,W
         000099f0     00e0  
    1796 00009a00     0b83          andni   M_SCRNREL,a3
         00009a10 00002000  
    1797 00009a30     b06e          move    a3,*a14(OFLAGS),W
         00009a40     00e0  
    1798 00009a50     c0f1          jruc    yygesro_loop
    1799 00009a60           yygesro_exit
    1800 00009a60     0960          rets
    1801                            
    1802 00009a70            SUBRP  hilight
    1803 00009a70                   PUSH    a0,a9,a10,a11
    1804 00009a90     09ea          movi    sel_objects,a10
         00009aa0 00003430- 
    1805                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   42

    1806 00009ac0     974b          move    *a10+,a11,L
    1807 00009ad0     b56e          move    *a11(OCTRL),a14
         00009ae0     00f0  
    1808 00009af0     4d29          move    a9,a9
    1809 00009b00     cb04          jrnz    yygetha_off
    1810 00009b10     0bae          ori     2,a14
         00009b20 00000002  
    1811 00009b40     c003          jruc    yygetha_set
    1812 00009b50           yygetha_off
    1813 00009b50     0b8e          andni   2,a14
         00009b60 00000002  
    1814 00009b80           yygetha_set
    1815 00009b80     b1cb          move    a14,*a11(OCTRL)
         00009b90     00f0  
    1816                    
    1817 00009ba0     974b          move    *a10+,a11,L
    1818 00009bb0     b56e          move    *a11(OCTRL),a14
         00009bc0     00f0  
    1819 00009bd0     4d29          move    a9,a9
    1820 00009be0     cb04          jrnz    yygethb_off
    1821 00009bf0     0bae          ori     2,a14
         00009c00 00000002  
    1822 00009c20     c003          jruc    yygethb_set
    1823 00009c30           yygethb_off
    1824 00009c30     0b8e          andni   2,a14
         00009c40 00000002  
    1825 00009c60           yygethb_set
    1826 00009c60     b1cb          move    a14,*a11(OCTRL)
         00009c70     00f0  
    1827                    
    1828 00009c80     974b          move    *a10+,a11,L
    1829 00009c90     b56e          move    *a11(OCTRL),a14
         00009ca0     00f0  
    1830 00009cb0     4d29          move    a9,a9
    1831 00009cc0     ca04          jrz     yygetsa_on
    1832 00009cd0     0bae          ori     2,a14
         00009ce0 00000002  
    1833 00009d00     c003          jruc    yygetsa_set
    1834 00009d10           yygetsa_on
    1835 00009d10     0b8e          andni   2,a14
         00009d20 00000002  
    1836 00009d40           yygetsa_set
    1837 00009d40     b1cb          move    a14,*a11(OCTRL)
         00009d50     00f0  
    1838                    
    1839 00009d60     974b          move    *a10+,a11,L
    1840 00009d70     b56e          move    *a11(OCTRL),a14
         00009d80     00f0  
    1841 00009d90     4d29          move    a9,a9
    1842 00009da0     ca04          jrz     yygetsb_on
    1843 00009db0     0bae          ori     2,a14
         00009dc0 00000002  
    1844 00009de0     c003          jruc    yygetsb_set
    1845 00009df0           yygetsb_on
    1846 00009df0     0b8e          andni   2,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   43

         00009e00 00000002  
    1847 00009e20           yygetsb_set
    1848 00009e20     b1cb          move    a14,*a11(OCTRL)
         00009e30     00f0  
    1849                    
    1850 00009e40     974b          move    *a10+,a11,L
    1851 00009e50     b56e          move    *a11(OCTRL),a14
         00009e60     00f0  
    1852 00009e70     4d29          move    a9,a9
    1853 00009e80     ca04          jrz     yygebha_off
    1854 00009e90     0bae          ori     2,a14
         00009ea0 00000002  
    1855 00009ec0     c003          jruc    yygebha_set
    1856 00009ed0           yygebha_off
    1857 00009ed0     0b8e          andni   2,a14
         00009ee0 00000002  
    1858 00009f00           yygebha_set
    1859 00009f00     b1cb          move    a14,*a11(OCTRL)
         00009f10     00f0  
    1860                    
    1861 00009f20     974b          move    *a10+,a11,L
    1862 00009f30     b56e          move    *a11(OCTRL),a14
         00009f40     00f0  
    1863 00009f50     4d29          move    a9,a9
    1864 00009f60     ca04          jrz     yygebhb_off
    1865 00009f70     0bae          ori     2,a14
         00009f80 00000002  
    1866 00009fa0     c003          jruc    yygebhb_set
    1867 00009fb0           yygebhb_off
    1868 00009fb0     0b8e          andni   2,a14
         00009fc0 00000002  
    1869 00009fe0           yygebhb_set
    1870 00009fe0     b1cb          move    a14,*a11(OCTRL)
         00009ff0     00f0  
    1871                    
    1872 0000a000     974b          move    *a10+,a11,L
    1873 0000a010     b56e          move    *a11(OCTRL),a14
         0000a020     00f0  
    1874 0000a030     4d29          move    a9,a9
    1875 0000a040     cb04          jrnz    yygebsa_on
    1876 0000a050     0bae          ori     2,a14
         0000a060 00000002  
    1877 0000a080     c003          jruc    yygebsa_set
    1878 0000a090           yygebsa_on
    1879 0000a090     0b8e          andni   2,a14
         0000a0a0 00000002  
    1880 0000a0c0           yygebsa_set
    1881 0000a0c0     b1cb          move    a14,*a11(OCTRL)
         0000a0d0     00f0  
    1882                    
    1883 0000a0e0     974b          move    *a10+,a11,L
    1884 0000a0f0     b56e          move    *a11(OCTRL),a14
         0000a100     00f0  
    1885 0000a110     4d29          move    a9,a9
    1886 0000a120     cb04          jrnz    yygebsb_on
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   44

    1887 0000a130     0bae          ori     2,a14
         0000a140 00000002  
    1888 0000a160     c003          jruc    yygebsb_set
    1889 0000a170           yygebsb_on
    1890 0000a170     0b8e          andni   2,a14
         0000a180 00000002  
    1891 0000a1a0           yygebsb_set
    1892 0000a1a0     b1cb          move    a14,*a11(OCTRL)
         0000a1b0     00f0  
    1893                    
    1894 0000a1c0     4d29          move    a9,a9
    1895 0000a1d0     ca04          jrz     yygetp_on
    1896 0000a1e0     09e0          movi    DPLT_W_P,a0
         0000a1f0 00000000! 
    1897 0000a210     c003          jruc    yygetp_set
    1898 0000a220           yygetp_on
    1899 0000a220     09e0          movi    DPLT_P2P,a0
         0000a230 00000000! 
    1900 0000a250           yygetp_set
    1901 0000a250     0d5f          calla   pal_getf
         0000a260 00000000! 
    1902 0000a280     974b          move    *a10+,a11,L
    1903 0000a290     b00b          move    a0,*a11(OPAL)
         0000a2a0     0150  
    1904                    
    1905 0000a2b0     4d29          move    a9,a9
    1906 0000a2c0     ca04          jrz     yygetpt_on
    1907 0000a2d0     09e0          movi    WSF_W_P,a0
         0000a2e0 00000000! 
    1908 0000a300     c003          jruc    yygetpt_set
    1909 0000a310           yygetpt_on
    1910 0000a310     09e0          movi    WSF_Y_P,a0
         0000a320 00000000! 
    1911 0000a340           yygetpt_set
    1912 0000a340     0d5f          calla   pal_getf
         0000a350 00000000! 
    1913 0000a370     974b          move    *a10+,a11,L
    1914 0000a380     b00b          move    a0,*a11(OPAL)
         0000a390     0150  
    1915                    
    1916                    
    1917 0000a3a0     4d29          move    a9,a9
    1918 0000a3b0     cb04          jrnz    yygebp_on
    1919 0000a3c0     09e0          movi    DPLT_W_P,a0
         0000a3d0 00000000! 
    1920 0000a3f0     c003          jruc    yygebp_set
    1921 0000a400           yygebp_on
    1922 0000a400     09e0          movi    DPLT_P2P,a0
         0000a410 00000000! 
    1923 0000a430           yygebp_set
    1924 0000a430     0d5f          calla   pal_getf
         0000a440 00000000! 
    1925 0000a460     974b          move    *a10+,a11,L
    1926 0000a470     b00b          move    a0,*a11(OPAL)
         0000a480     0150  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   45

    1927                    
    1928 0000a490     4d29          move    a9,a9
    1929 0000a4a0     cb04          jrnz    yygebpt_on
    1930 0000a4b0     09e0          movi    WSF_W_P,a0
         0000a4c0 00000000! 
    1931 0000a4e0     c003          jruc    yygebpt_set
    1932 0000a4f0           yygebpt_on
    1933 0000a4f0     09e0          movi    WSF_Y_P,a0
         0000a500 00000000! 
    1934 0000a520           yygebpt_set
    1935 0000a520     0d5f          calla   pal_getf
         0000a530 00000000! 
    1936 0000a550     974b          move    *a10+,a11,L
    1937 0000a560     b00b          move    a0,*a11(OPAL)
         0000a570     0150  
    1938 0000a580                   PULL    a0,a9,a10,a11
    1939 0000a5a0     0960          rets
    1940                    
    1941                    
    1942 0000a5b0            SUBRP  flash_it
    1943 0000a5b0     09ea          movi    sel_objects,a10
         0000a5c0 00003430- 
    1944 0000a5e0     4d29          move    a9,a9
    1945 0000a5f0     ca03          jrz     yygeflash_p1
    1946 0000a600     0b0a          addi    (10*32),a10
         0000a610     0140  
    1947 0000a620     c002          jruc    yygedo_flash_it
    1948 0000a630           yygeflash_p1
    1949 0000a630     0b0a          addi    (8*32),a10
         0000a640     0100  
    1950 0000a650           yygedo_flash_it
    1951 0000a650                   PUSHP   a9
    1952 0000a660     8748          move    *a10,a8,L
    1953 0000a670     09c9          movi    1f1fh,a9
         0000a680     1f1f  
    1954 0000a690     b128          move    a9,*a8(OCONST)
         0000a6a0     0160  
    1955 0000a6b0     186b          movk    3,a11
    1956 0000a6c0           yygeflash_it_loop
    1957 0000a6c0     b509          move    *a8(OCTRL),a9
         0000a6d0     00f0  
    1958 0000a6e0     0ba9          ori     8,a9
         0000a6f0 00000008  
    1959 0000a710     0b89          andni   2,a9
         0000a720 00000002  
    1960 0000a740     b128          move    a9,*a8(OCTRL)
         0000a750     00f0  
    1961 0000a760                   SLEEPK  3
    1962 0000a7a0     b509          move    *a8(OCTRL),a9
         0000a7b0     00f0  
    1963 0000a7c0     0b89          andni   8,a9
         0000a7d0 00000008  
    1964 0000a7f0     0ba9          ori     2,a9
         0000a800 00000002  
    1965 0000a820     b128          move    a9,*a8(OCTRL)
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   46

         0000a830     00f0  
    1966 0000a840                   SLEEPK  3
    1967 0000a880     3fab          dsjs    a11,yygeflash_it_loop
    1968 0000a890                   PULLP   a9
    1969 0000a8a0                   RETP
    1970                    
    1971 0000a8d0           belt_prompt_setup
    1972                    ;       JAM_STR osgemd_ascii,8,0,200,18+256,GOLD,0
    1973 0000a8d0                   JAM_STR osgemd_ascii,8,0,200,18+256,BLUE,0      ;TURQUSE:
    1974 0000a970           belt_prompt_string
    1975 0000a970       53          .string "SELECT YOUR TITLE:",0
    1976 0000aa10                   .even
    1977 0000aa10           rr_prompt_string
    1978 0000aa10       53          .string "SELECT PLAY MODE:",0
    1979 0000aaa0                   .even
    1980                    
    1981                    
    1982 0000aaa0           TopPalette
    1983 0000aaa0 00000000!         .long   CHGLWT_P
    1984 0000aac0 00000000!         .long   CHGLWT1P
    1985 0000aae0 00000000!         .long   CHGLWT2P
    1986 0000ab00 00000000!         .long   CHGLWT3P
    1987 0000ab20 00000000!         .long   CHGLWT4P
    1988 0000ab40 00000000!         .long   CHGLWT5P
    1989 0000ab60 00000000!         .long   CHGLWT6P
    1990 0000ab80 00000000!         .long   CHGLWT7P
    1991 0000aba0 00000000!         .long   CHGLWT8P
    1992 0000abc0 00000000!         .long   CHGLWT9P
    1993 0000abe0 00000000          .long   0
    1994 0000ac00           BottomPalette
    1995 0000ac00 00000000!         .long   CHGLWB_P
    1996 0000ac20 00000000!         .long   CHGLWB1P
    1997 0000ac40 00000000!         .long   CHGLWB2P
    1998 0000ac60 00000000!         .long   CHGLWB3P
    1999 0000ac80 00000000!         .long   CHGLWB4P
    2000 0000aca0 00000000!         .long   CHGLWB5P
    2001 0000acc0 00000000!         .long   CHGLWB6P
    2002 0000ace0 00000000!         .long   CHGLWB7P
    2003 0000ad00 00000000!         .long   CHGLWB8P
    2004 0000ad20 00000000!         .long   CHGLWB9P
    2005 0000ad40 00000000          .long   0
    2006                    
    2007                    
    2008                    ;a8 = *palette table
    2009                    ;a9 = *object array
    2010                    
    2011 0000ad60            SUBRP  palette_cycle
    2012 0000ad60     4d0a          move    a8,a10
    2013 0000ad70     4d2b          move    a9,a11
    2014 0000ad80           yygepc_loop
    2015 0000ad80     9740          move    *a10+,a0,L
    2016 0000ad90     cafc          jrz     palette_cycle
    2017 0000ada0     0d5f          calla   pal_getf
         0000adb0 00000000! 
    2018 0000add0     876e          move    *a11,a14,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   47

    2019 0000ade0     b00e          move    a0,*a14(OPAL)
         0000adf0     0150  
    2020 0000ae00     b76e          move    *a11(32),a14,L
         0000ae10     0020  
    2021 0000ae20     b00e          move    a0,*a14(OPAL)
         0000ae30     0150  
    2022 0000ae40                   SLEEPK  4
    2023 0000ae80     c0ef          jruc    yygepc_loop
    2024 0000ae90                   DIE
    2025                    
    2026                    
    2027 0000aec0            SUBR   ask_belt_question
    2028 0000aec0                   PUSHP   a2,a3
    2029                    
    2030 0000aee0     5729          clr     a9
    2031 0000aef0     09e2          movi    belt_type,a2
         0000af00 00000000! 
    2032 0000af20     05a3          move    @question_type,a3
         0000af30 000002e0- 
    2033 0000af50     ca03          jrz     yygerst_type
    2034 0000af60     09e2          movi    royal_rumble,a2
         0000af70 000002f0- 
    2035 0000af90           yygerst_type
    2036 0000af90     8122          move    a9,*a2
    2037                    
    2038 0000afa0     09e0          movi    [10,0],a0
         0000afb0 000a0000  
    2039 0000afd0     09e1          movi    [30+256,0],a1
         0000afe0 011e0000  
    2040 0000b000     09e2          movi    MVEBAR_R,a2
         0000b010 00000000! 
    2041 0000b030     09c3          movi    2000h,a3
         0000b040     2000  
    2042 0000b050     09e4          movi    DMAWNZ|M_3D,a4
         0000b060 00008102  
    2043 0000b080     56a5          clr     a5
    2044 0000b090     56c6          clr     a6
    2045 0000b0a0     56e7          clr     a7
    2046 0000b0b0     09f0          movi    DPLT_P_P,b0
         0000b0c0 0001bb70' 
    2047 0000b0e0     0d5f          calla   BEGINOBJP
         0000b0f0 00000000! 
    2048                    
    2049                    
    2050 0000b110     09e0          MOVI    [13,0],A0
         0000b120 000d0000  
    2051 0000b140     09e1          MOVI    [39+256,0],A1
         0000b150 01270000  
    2052 0000b170     09e2          movi    SHADOW01,a2
         0000b180 00000000! 
    2053 0000b1a0     09c3          movi    1fffH,a3
         0000b1b0     1fff  
    2054 0000b1c0     09e4          movi    DMAWNZ,a4
         0000b1d0 00008002  
    2055 0000b1f0     09c5          movi    CLSNEUT,a5
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   48

         0000b200     0000  
    2056 0000b210     56c6          CLR     A6
    2057 0000b220     56e7          CLR     A7
    2058 0000b230     0d5f          calla   BEGINOBJ
         0000b240 00000000! 
    2059 0000b260                   CREATE  FLASH_PID,JUDDER_SHADOW
    2060                    
    2061                            .ref    hscore_colcyc
    2062 0000b2e0     0d5f          calla   hscore_colcyc
         0000b2f0 00000000! 
    2063                    
    2064 0000b310     09e2          movi    belt_prompt_setup,a2
         0000b320 0000a8d0' 
    2065 0000b340     0d5f          calla   setup_message
         0000b350 00000000! 
    2066 0000b370     09c0          movi    TYPTEXT|SUBOVRHED,a0
         0000b380     0704  
    2067 0000b390     0580          move    a0,@mess_objid
         0000b3a0 00000000! 
    2068 0000b3c0     09e4          movi    belt_prompt_string,a4
         0000b3d0 0000a970' 
    2069 0000b3f0     05a0          move    @question_type,a0
         0000b400 000002e0- 
    2070 0000b420     ca03          jrz     yygebp1
    2071 0000b430     09e4          movi    rr_prompt_string,a4
         0000b440 0000aa10' 
    2072 0000b460           yygebp1
    2073 0000b460     0d5f          calla   print_string_C2
         0000b470 00000000! 
    2074                    
    2075 0000b490     09ea          movi    sel_objects,a10
         0000b4a0 00003430- 
    2076 0000b4c0     09cb          movi    8,a11
         0000b4d0     0008  
    2077 0000b4e0     09e9          movi    sel_obj_tbl_t,a9
         0000b4f0 00009740' 
    2078 0000b510     09c3          movi    1800h,a3
         0000b520     1800  
    2079 0000b530           yygedo_next_obj
    2080 0000b530                   PUSH    a3
    2081 0000b540     09e1          movi    [93+256,0],a1
         0000b550 015d0000  
    2082 0000b570     09e0          movi    [200,0],a0
         0000b580 00c80000  
    2083 0000b5a0     0b4b          cmpi    5,a11
         0000b5b0     fffa  
    2084 0000b5c0     c506          jrge    yygetop
    2085 0000b5d0     09e1          movi    [184+256,0],a1
         0000b5e0 01b80000  
    2086 0000b600     09e0          movi    [201,0],a0
         0000b610 00c90000  
    2087 0000b630           yygetop
    2088 0000b630     9722          move    *a9+,a2,L
    2089 0000b640     09e4          movi    DMAWNZ|M_3D,a4
         0000b650 00008102  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   49

    2090 0000b670     56a5          clr     a5
    2091 0000b680     56c6          clr     a6
    2092 0000b690     56e7          clr     a7
    2093 0000b6a0     0d5f          calla   BEGINOBJ
         0000b6b0 00000000! 
    2094 0000b6d0     930a          move    a8,*a10+,L
    2095 0000b6e0                   PULL    a3
    2096 0000b6f0     0b03          addi    10h,a3
         0000b700     0010  
    2097 0000b710     3feb          dsjs    a11,yygedo_next_obj
    2098                            
    2099 0000b720     09e9          movi    sel_obj_tbl_t1,a9
         0000b730 00009840' 
    2100 0000b750     05ab          move    @question_type,a11
         0000b760 000002e0- 
    2101 0000b780     ca03          jrz     yygebelt_obj
    2102 0000b790     09e9          movi    sel_obj_tbl_t2,a9
         0000b7a0 000098c0' 
    2103 0000b7c0           yygebelt_obj
    2104 0000b7c0     09cb          movi    4,a11
         0000b7d0     0004  
    2105 0000b7e0           yygedo_next_obj1
    2106 0000b7e0                   PUSH    a3
    2107 0000b7f0     09e1          movi    [256+93,0],a1
         0000b800 015d0000  
    2108 0000b820     09e0          movi    [200,0],a0
         0000b830 00c80000  
    2109 0000b850     0b4b          cmpi    3,a11
         0000b860     fffc  
    2110 0000b870     c506          jrge    yygetop1
    2111 0000b880     09e1          movi    [184+256,0],a1
         0000b890 01b80000  
    2112 0000b8b0     09e0          movi    [201,0],a0
         0000b8c0 00c90000  
    2113 0000b8e0           yygetop1
    2114 0000b8e0     9722          move    *a9+,a2,L
    2115 0000b8f0     09e4          movi    DMAWNZ|M_3D,a4
         0000b900 00008102  
    2116 0000b920     56a5          clr     a5
    2117 0000b930     56c6          clr     a6
    2118 0000b940     56e7          clr     a7
    2119 0000b950     09f0          movi    WSF_W_P,b0
         0000b960 00000000! 
    2120 0000b980     0d5f          calla   BEGINOBJP
         0000b990 00000000! 
    2121 0000b9b0     930a          move    a8,*a10+,L
    2122 0000b9c0                   PULL    a3
    2123 0000b9d0     0b03          addi    10h,a3
         0000b9e0     0010  
    2124 0000b9f0     0d8b          dsj     a11,yygedo_next_obj1
         0000ba00     ffdd  
    2125                    
    2126 0000ba10     09ea          movi    sel_objects,a10
         0000ba20 00003430- 
    2127                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   50

    2128 0000ba40     b742          move    *a10(64),a2,L
         0000ba50     0040  
    2129 0000ba60     b443          move    *a2(OCTRL),a3
         0000ba70     00f0  
    2130 0000ba80     0b83          andni   2,a3
         0000ba90 00000002  
    2131 0000bab0     b062          move    a3,*a2(OCTRL)
         0000bac0     00f0  
    2132                    
    2133 0000bad0     b742          move    *a10(96),a2,L
         0000bae0     0060  
    2134 0000baf0     b443          move    *a2(OCTRL),a3
         0000bb00     00f0  
    2135 0000bb10     0b83          andni   2,a3
         0000bb20 00000002  
    2136 0000bb40     b062          move    a3,*a2(OCTRL)
         0000bb50     00f0  
    2137                            
    2138 0000bb60     b742          move    *a10(128),a2,L
         0000bb70     0080  
    2139 0000bb80     b443          move    *a2(OCTRL),a3
         0000bb90     00f0  
    2140 0000bba0     0b83          andni   2,a3
         0000bbb0 00000002  
    2141 0000bbd0     b062          move    a3,*a2(OCTRL)
         0000bbe0     00f0  
    2142                    
    2143 0000bbf0     b742          move    *a10(160),a2,L
         0000bc00     00a0  
    2144 0000bc10     b443          move    *a2(OCTRL),a3
         0000bc20     00f0  
    2145 0000bc30     0b83          andni   2,a3
         0000bc40 00000002  
    2146 0000bc60     b062          move    a3,*a2(OCTRL)
         0000bc70     00f0  
    2147                    
    2148 0000bc80     09e0          movi    DPLT_P2P,a0
         0000bc90 00000000! 
    2149 0000bcb0     0d5f          calla   pal_getf
         0000bcc0 00000000! 
    2150 0000bce0     b742          move    *a10(256),a2,L
         0000bcf0     0100  
    2151 0000bd00     b002          move    a0,*a2(OPAL)
         0000bd10     0150  
    2152                    
    2153 0000bd20     09e0          movi    WSF_Y_P,a0
         0000bd30 00000000! 
    2154 0000bd50     0d5f          calla   pal_getf
         0000bd60 00000000! 
    2155 0000bd80     b742          move    *a10(288),a2,L
         0000bd90     0120  
    2156 0000bda0     b002          move    a0,*a2(OPAL)
         0000bdb0     0150  
    2157                    
    2158 0000bdc0     09e0          movi    DPLT_W_P,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   51

         0000bdd0 00000000! 
    2159 0000bdf0     0d5f          calla   pal_getf
         0000be00 00000000! 
    2160 0000be20     b742          move    *a10(320),a2,L
         0000be30     0140  
    2161 0000be40     b002          move    a0,*a2(OPAL)
         0000be50     0150  
    2162                    
    2163 0000be60     09e0          movi    WSF_W_P,a0
         0000be70 00000000! 
    2164 0000be90     0d5f          calla   pal_getf
         0000bea0 00000000! 
    2165 0000bec0     b742          move    *a10(352),a2,L
         0000bed0     0160  
    2166 0000bee0     b002          move    a0,*a2(OPAL)
         0000bef0     0150  
    2167                    
    2168 0000bf00     09e8          movi    TopPalette,a8
         0000bf10 0000aaa0' 
    2169 0000bf30     4d49          move    a10,a9
    2170 0000bf40                   CREATE  PCYC_PID,palette_cycle
    2171 0000bfc0     09e8          movi    BottomPalette,a8
         0000bfd0 0000ac00' 
    2172 0000bff0     0b09          addi    (4*32),a9
         0000c000     0080  
    2173 0000c010                   CREATE  PCYC_PID,palette_cycle
    2174 0000c090                   SLEEPK  2
    2175                    
    2176 0000c0d0     05a9          move    @question_type,a9
         0000c0e0 000002e0- 
    2177 0000c100     ca02          jrz     yygeno_pcurs
    2178 0000c110     0d3f          callr   mk_pcurs
         0000c120     00fb  
    2179 0000c130           yygeno_pcurs
    2180                    
    2181 0000c130     5729          clr     a9      ;cusor pos
    2182 0000c140     4d2a          move    a9,a10
    2183                    
    2184 0000c150     0d3f          callr   scrn_rel_off
         0000c160     fd7d  
    2185                    
    2186 0000c170     09c0          movi    18,a0
         0000c180     0012  
    2187 0000c190     0d5f          calla   triple_sound
         0000c1a0 00000000! 
    2188                    
    2189                    ;       PUSHP   a8,a9,a10,a11
    2190 0000c1c0           yygemove_on_loop
    2191 0000c1c0     07a0          move    @WORLDTLY,a0,L
         0000c1d0 00000000! 
    2192 0000c1f0     0b20          addi    [18h,0],a0
         0000c200 00180000  
    2193 0000c220     0780          move    a0,@WORLDTLY,L
         0000c230 00000000! 
    2194 0000c250     0b60          cmpi    [252,0],a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   52

         0000c260 ff03ffff  
    2195 0000c280     c508          jrge    yygemove_done
    2196 0000c290     0d5f          calla   BGND_UD1
         0000c2a0 00000000! 
    2197 0000c2c0                   SLEEPK  1
    2198 0000c300     c0eb          jruc    yygemove_on_loop
    2199 0000c310           yygemove_done
    2200 0000c310     09e0          movi    [255,0],a0
         0000c320 00ff0000  
    2201 0000c340     0780          move    a0,@WORLDTLY,L
         0000c350 00000000! 
    2202 0000c370     0d5f          calla   BGND_UD1
         0000c380 00000000! 
    2203 0000c3a0                   SLEEPK  1
    2204                    
    2205 0000c3e0     05ae          move    @question_type,a14
         0000c3f0 000002e0- 
    2206 0000c410     ca08          jrz     yygenorm
    2207 0000c420                   JSRP    ind_select
    2208 0000c490     c026          jruc    yygesel_done
    2209 0000c4a0           yygenorm
    2210                    
    2211 0000c4a0     09cb          movi    TSEC*4,a11
         0000c4b0     00d4  
    2212 0000c4c0           yygesel_box_wait
    2213 0000c4c0     492a          cmp     a9,a10
    2214 0000c4d0     ca08          jrz     yygeno_change
    2215 0000c4e0     09c0          movi    0c7h,a0
         0000c4f0     00c7  
    2216 0000c500     0d5f          calla   triple_sound
         0000c510 00000000! 
    2217 0000c530     4d2a          move    a9,a10
    2218 0000c540     0d3f          callr   hilight
         0000c550     fd51  
    2219 0000c560           yygeno_change
    2220 0000c560                   SLEEPK  1
    2221 0000c5a0     0d5f          calla   get_all_buttons_cur
         0000c5b0 00000000! 
    2222 0000c5d0     cb12          jrnz    yygesel_done
    2223 0000c5e0     0d5f          calla   get_all_sticks_cur
         0000c5f0 00000000! 
    2224 0000c610     cb02          jrnz    yygedo_stick
    2225 0000c620     3eeb          dsj     a11,yygesel_box_wait
    2226 0000c630     c00c          jruc    yygesel_done
    2227 0000c640           yygedo_stick
    2228 0000c640     1fe0          btst    0,a0
    2229 0000c650     ca04          jrz     yygeno_sel_up
    2230 0000c660     0b89          andni   1,a9
         0000c670 00000001  
    2231 0000c690     c0e2          jruc    yygesel_box_wait
    2232 0000c6a0           yygeno_sel_up
    2233 0000c6a0     1fc0          btst    1,a0
    2234 0000c6b0     cae0          jrz     yygesel_box_wait
    2235 0000c6c0     0ba9          ori     1,a9
         0000c6d0 00000001  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   53

    2236 0000c6f0     c0dc          jruc    yygesel_box_wait
    2237 0000c700           yygesel_done
    2238                            .if INTER_DEFAULT
    2239                            .else
    2240                            xori    1,a9
    2241                            .endif
    2242                    
    2243 0000c700     05a0          move    @question_type,a0
         0000c710 000002e0- 
    2244 0000c730     ca04          jrz     yygeset_belt
    2245 0000c740     0589          move    a9,@royal_rumble
         0000c750 000002f0- 
    2246 0000c770     c01b          jruc    yygeis_set
    2247 0000c780           yygeset_belt
    2248 0000c780     0589          move    a9,@belt_type
         0000c790 00000000! 
    2249                    
    2250                    
    2251 0000c7b0     4d29          move    a9,a9
    2252 0000c7c0     cb0b          jrnz    yygesel_medium
    2253 0000c7d0     09c0          movi    AUD_INTERCON,a0
         0000c7e0     005f  
    2254 0000c7f0     0d5f          calla   AUD1
         0000c800 00000000! 
    2255 0000c820     09c0          movi    0cbh,a0
         0000c830     00cb  
    2256 0000c840     0d5f          calla   triple_sound
         0000c850 00000000! 
    2257 0000c870     c00a          jruc    yygesel_exit
    2258 0000c880           yygesel_medium
    2259 0000c880     09c0          movi    AUD_WWF,a0
         0000c890     0060  
    2260 0000c8a0     0d5f          calla   AUD1
         0000c8b0 00000000! 
    2261 0000c8d0     09c0          movi    0cbh,a0
         0000c8e0     00cb  
    2262 0000c8f0     0d5f          calla   triple_sound
         0000c900 00000000! 
    2263 0000c920           yygesel_exit
    2264                            .if INTER_DEFAULT
    2265                            .else
    2266                            xori    1,a9
    2267                            .endif
    2268 0000c920     c017          jruc    yygerr_aud_bypass
    2269 0000c930           yygeis_set
    2270 0000c930     4d29          move    a9,a9
    2271 0000c940     ca0b          jrz     yygeaud_hdhd
    2272 0000c950     09c0          movi    AUD_ROYALRUM,a0
         0000c960     0064  
    2273 0000c970     0d5f          calla   AUD1
         0000c980 00000000! 
    2274 0000c9a0     09c0          movi    0cbh,a0
         0000c9b0     00cb  
    2275 0000c9c0     0d5f          calla   triple_sound
         0000c9d0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   54

    2276 0000c9f0     c00a          jruc    yygerr_aud_bypass
    2277 0000ca00           yygeaud_hdhd
    2278 0000ca00     09c0          movi    AUD_HEADTOHEAD,a0
         0000ca10     0063  
    2279 0000ca20     0d5f          calla   AUD1
         0000ca30 00000000! 
    2280 0000ca50     09c0          movi    0cbh,a0
         0000ca60     00cb  
    2281 0000ca70     0d5f          calla   triple_sound
         0000ca80 00000000! 
    2282 0000caa0           yygerr_aud_bypass
    2283 0000caa0                   JSRP    flash_it
    2284                    
    2285 0000cb10     09e9          movi    sel_objects,a9
         0000cb20 00003430- 
    2286 0000cb40     9720          move    *a9+,a0,L
    2287 0000cb50     0d5f          calla   DELOBJ
         0000cb60 00000000! 
    2288 0000cb80     8720          move    *a9,a0,L
    2289 0000cb90     0d5f          calla   DELOBJ
         0000cba0 00000000! 
    2290 0000cbc0     0b09          addi    96,a9
         0000cbd0     0060  
    2291 0000cbe0     9720          move    *a9+,a0,L
    2292 0000cbf0     0d5f          calla   DELOBJ
         0000cc00 00000000! 
    2293 0000cc20     8720          move    *a9,a0,L
    2294 0000cc30     0d5f          calla   DELOBJ
         0000cc40 00000000! 
    2295                    
    2296 0000cc60                   SLEEPK  15
    2297                    
    2298 0000cca0     5642          clr     a2
    2299 0000ccb0     0582          move    a2,@mess_objid
         0000ccc0 00000000! 
    2300                    
    2301 0000cce0     09c0          movi    CYCPID,a0
         0000ccf0     0110  
    2302 0000cd00     0d5f          calla   KIL1C
         0000cd10 00000000! 
    2303                    
    2304 0000cd30                   PULLP   a2,a3
    2305 0000cd50                   RETP
    2306                    
    2307                    
    2308 0000cd80           p1curs
    2309 0000cd80     ffc7          .word   50-107,93+256,1800h
    2310 0000cdb0 00000000!         .long   CHOICBK
    2311 0000cdd0     8102          .word   DMAWNZ|M_3D
    2312 0000cde0     0000          .word   CLSNEUT
    2313 0000cdf0 00000000          .long   0,0
    2314                    
    2315 0000ce30           p1curs_num
    2316 0000ce30     000c          .word   15-(6/2),(93+256)-(16/2),1810h
    2317 0000ce60 00000000!         .long   WSF14_1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   55

    2318 0000ce80     8102          .word   DMAWNZ|M_3D
    2319 0000ce90     0000          .word   CLSNEUT
    2320 0000cea0 00000000          .long   0,0
    2321                    
    2322 0000cee0           p2curs
    2323 0000cee0     01c8          .word   399+(107-50),93+256,1800h
    2324 0000cf10 00000000!         .long   CHOICBK
    2325 0000cf30     8112          .word   DMAWNZ|M_3D|M_FLIPH
    2326 0000cf40     0000          .word   CLSNEUT
    2327 0000cf50 00000000          .long   0,0
    2328                    
    2329 0000cf90           p2curs_num
    2330 0000cf90     017b          .word   (399-15)-(11/2),(93+256)-(16/2),1810h
    2331 0000cfc0 00000000!         .long   WSF14_2
    2332 0000cfe0     8102          .word   DMAWNZ|M_3D
    2333 0000cff0     0000          .word   CLSNEUT
    2334 0000d000 00000000          .long   0,0
    2335                    
    2336                    
    2337 0000d040           pcurs_tbl
    2338 0000d040 0000cd80'         .long   p1curs
    2339 0000d060 0000ce30'         .long   p1curs_num
    2340 0000d080 0000cee0'         .long   p2curs
    2341 0000d0a0 0000cf90'         .long   p2curs_num
    2342 0000d0c0 00000000          .long   0
    2343                    
    2344                    
    2345 0000d0e0            SUBR   mk_pcurs
    2346 0000d0e0                   PUSH    a8,a9,a10,a11
    2347 0000d100     09e9          movi    pcurs_obj,a9
         0000d110 00000470- 
    2348 0000d130     09ea          movi    pcurs_tbl,a10
         0000d140 0000d040' 
    2349 0000d160           yygecpc_loop
    2350 0000d160     9740          move    *a10+,a0,L
    2351 0000d170     ca05          jrz     yygecpc_done
    2352 0000d180     0d5f          calla   BEGINOBJ_TBL
         0000d190 00000000! 
    2353 0000d1b0     9309          move    a8,*a9+,L
    2354 0000d1c0     c0f9          jruc    yygecpc_loop
    2355 0000d1d0           yygecpc_done
    2356 0000d1d0     09e9          movi    pcurs_obj,a9
         0000d1e0 00000470- 
    2357                    
    2358 0000d200     09e0          movi    DPLT_B_P,a0
         0000d210 00000000! 
    2359 0000d230     0d5f          calla   pal_getf
         0000d240 00000000! 
    2360 0000d260     972a          move    *a9+,a10,L
    2361 0000d270     b20a          move    a0,*a10(OPAL),L
         0000d280     0150  
    2362                    
    2363 0000d290     09e0          movi    WSF_W_P,a0
         0000d2a0 00000000! 
    2364 0000d2c0     0d5f          calla   pal_getf
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   56

         0000d2d0 00000000! 
    2365 0000d2f0     872a          move    *a9,a10,L
    2366 0000d300     b20a          move    a0,*a10(OPAL),L
         0000d310     0150  
    2367 0000d320     b72a          move    *a9(64),a10,L
         0000d330     0040  
    2368 0000d340     b20a          move    a0,*a10(OPAL),L
         0000d350     0150  
    2369                    
    2370 0000d360     09e0          movi    DPLT_R_P,a0
         0000d370 00000000! 
    2371 0000d390     0d5f          calla   pal_getf
         0000d3a0 00000000! 
    2372 0000d3c0     b72a          move    *a9(32),a10,L
         0000d3d0     0020  
    2373 0000d3e0     b20a          move    a0,*a10(OPAL),L
         0000d3f0     0150  
    2374                    
    2375 0000d400                   PULL    a8,a9,a10,a11
    2376 0000d420     0960          rets
    2377                    
    2378                    ************************************************
    2379                    *
    2380                    
    2381 0000d430            SUBRP  ind_select
    2382 0000d430                   PUSHP   a8,a10
    2383                    
    2384 0000d450     5729          clr     a9                      ; Clear out player select flags
    2385 0000d460     0589          move    a9,@p1sel
         0000d470 000004f0- 
    2386 0000d490     0589          move    a9,@p2sel
         0000d4a0 00000500- 
    2387                    
    2388 0000d4c0     09cb          movi    TSEC*5,a11              ; Max time before selection timeout
         0000d4d0     0109  
    2389 0000d4e0           sedmsel_wait
    2390                    
    2391                            ; First check to see which players have made their selections
    2392 0000d4e0     05a0          move    @p1sel,a0               ; Get p1 select flag
         0000d4f0 000004f0- 
    2393 0000d510     05a1          move    @p2sel,a1               ; Get p2 select flag
         0000d520 00000500- 
    2394 0000d540     2421          sll     1,a1                    ; Combine them
    2395 0000d550     5420          or      a1,a0
    2396                    
    2397                            ; If nobody has made a selection just set cursor positions
    2398 0000d560     ca0b          jrz     sedmset_curs            ; No selections - just set cursors
    2399                    
    2400                            ; If both have selected then we are done
    2401 0000d570     0b40          cmpi    3,a0                    ; Have both selected ?
         0000d580     fffc  
    2402 0000d590     ca76          jrz     sedmboth_selected               ; br = yes
    2403                    
    2404                            ; If player 1 has selected "HEAD TO HEAD" then we are done
    2405 0000d5a0     1fe0          btst    0,a0                    ; Has player 1 made a selection
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   57

    2406 0000d5b0     ca02          jrz     sedmno_p1_sel           ; br = no
    2407 0000d5c0     1fe9          btst    0,a9                    ; Has player 1 selected "HEAD TO HEAD" ?
    2408 0000d5d0     ca72          jrz     sedmboth_selected               ; br = yes
    2409                    
    2410                            ; If player 2 has selected "HEAD TO HEAD" then we are done
    2411 0000d5e0           sedmno_p1_sel
    2412 0000d5e0     1fc0          btst    1,a0                    ; Has player 2 made a selection
    2413 0000d5f0     ca02          jrz     sedmset_curs            ; br = no
    2414 0000d600     1fc9          btst    1,a9                    ; Has player 1 selected "HEAD TO HEAD" ?
    2415 0000d610     ca6e          jrz     sedmboth_selected               ; br = yes
    2416                    
    2417 0000d620           sedmset_curs
    2418                            
    2419 0000d620     0d3f          callr   set_pcurs_pos           ; set player cursor positions
         0000d630     00a9  
    2420 0000d640     4d2a          move    a9,a10                  ; Save a9
    2421 0000d650     0b49          cmpi    3,a9                    ; Are both on "COOP" ?
         0000d660     fffc  
    2422 0000d670     ca02          jrz     sedmcoop                        ; br = yes
    2423 0000d680     5729          clr     a9                      ; Set "HEAD"
    2424 0000d690     c001          jruc    sedmdo_hi                       ; Go hilight "Head to Head"
    2425 0000d6a0           sedmcoop
    2426 0000d6a0     1829          movk    1,a9                    ; Set "COOP"
    2427 0000d6b0           sedmdo_hi
    2428 0000d6b0     0d3f          callr   hilight                 ; hilight the right one
         0000d6c0     fc3a  
    2429 0000d6d0     4d49          move    a10,a9                  ; Restore a9
    2430                    
    2431 0000d6e0                   SLEEPK  1                       ; Wait a bit
    2432                    
    2433 0000d720     05a0          move    @p1sel,a0               ; Has p1 selected ?
         0000d730 000004f0- 
    2434 0000d750     cb1d          jrnz    sedmck_p2                       ; br = yes
    2435 0000d760     5600          clr     a0                      ; get p1 buttons
    2436 0000d770     0d5f          calla   get_but_val_cur
         0000d780 00000000! 
    2437 0000d7a0     4c00          move    a0,a0
    2438 0000d7b0     ca01          jrz     sedmno_p1
    2439 0000d7c0     1820          movk    1,a0
    2440 0000d7d0           sedmno_p1
    2441 0000d7d0     0580          move    a0,@p1sel               ; save p1 buttons
         0000d7e0 000004f0- 
    2442 0000d800                   PUSH    a10,a11                 ; Flash p1 cursor
    2443 0000d820     576b          clr     a11
    2444 0000d830     4c0a          move    a0,a10
    2445 0000d840                   CREATE0 flash_pcurs
    2446 0000d8b0                   PULL    a10,a11
    2447 0000d8d0     5600          clr     a0
    2448 0000d8e0     0d5f          calla   get_stick_val_cur       ; get p1 stick
         0000d8f0 00000000! 
    2449 0000d910     4c00          move    a0,a0                   ; any on ?
    2450 0000d920     cb24          jrnz    sedmdop1_stick          ; br = yes
    2451 0000d930           sedmck_p2
    2452 0000d930     05a0          move    @p2sel,a0               ; Has p2 selected ?
         0000d940 00000500- 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   58

    2453 0000d960     cb1d          jrnz    sedmp2_done             ; br = yes
    2454 0000d970     1820          movk    1,a0                    ; Get p2 buttons
    2455 0000d980     0d5f          calla   get_but_val_cur
         0000d990 00000000! 
    2456 0000d9b0     4c00          move    a0,a0
    2457 0000d9c0     ca01          jrz     sedmno_p2
    2458 0000d9d0     1820          movk    1,a0
    2459 0000d9e0           sedmno_p2
    2460 0000d9e0     0580          move    a0,@p2sel               ; Save p2 buttons
         0000d9f0 00000500- 
    2461 0000da10                   PUSH    a10,a11                 ; Flash p2 cursor
    2462 0000da30     182b          movk    1,a11
    2463 0000da40     4c0a          move    a0,a10
    2464 0000da50                   CREATE0 flash_pcurs
    2465 0000dac0                   PULL    a10,a11
    2466 0000dae0     1820          movk    1,a0                    ; Get p2 stick
    2467 0000daf0     0d5f          calla   get_stick_val_cur
         0000db00 00000000! 
    2468 0000db20     4c00          move    a0,a0                   ; Any Set ?
    2469 0000db30     cb0f          jrnz    sedmdop2_stick          ; br = yes
    2470 0000db40           sedmp2_done
    2471 0000db40     0d8b          dsj     a11,sedmsel_wait                ; Timeout ?
         0000db50     ff98  
    2472 0000db60     c019          jruc    sedmboth_selected               ; br = yes
    2473                    
    2474 0000db70           sedmdop1_stick
    2475 0000db70     1fe0          btst    0,a0                    ; p1 up on?
    2476 0000db80     ca04          jrz     sedmno_p1_up            ; br = no
    2477 0000db90     0b89          andni   1,a9                    ; set p1 curs pos top
         0000dba0 00000001  
    2478 0000dbc0     c0d6          jruc    sedmck_p2                       ; go check on p2
    2479 0000dbd0           sedmno_p1_up
    2480 0000dbd0     1fc0          btst    1,a0                    ; p2 down on?
    2481 0000dbe0     cad4          jrz     sedmck_p2                       ; br = no
    2482 0000dbf0     0ba9          ori     1,a9                    ; set p1 curs pos bottom
         0000dc00 00000001  
    2483 0000dc20     c0d0          jruc    sedmck_p2                       ; go check on p2
    2484                    
    2485 0000dc30           sedmdop2_stick
    2486 0000dc30     1fe0          btst    0,a0                    ; p2 up on?
    2487 0000dc40     ca04          jrz     sedmno_p2_up            ; br = no
    2488 0000dc50     0b89          andni   2,a9                    ; set p2 curs pos top
         0000dc60 00000002  
    2489 0000dc80     c085          jruc    sedmsel_wait            ; go update
    2490 0000dc90           sedmno_p2_up
    2491 0000dc90     1fc0          btst    1,a0                    ; p2 down on?
    2492 0000dca0     ca83          jrz     sedmsel_wait            ; br = no
    2493 0000dcb0     0ba9          ori     2,a9                    ; set p2 curs pos bottom
         0000dcc0 00000002  
    2494 0000dce0     c000          jruc    sedmsel_wait            ; go update
         0000dcf0     ff7e  
    2495                    
    2496 0000dd00           sedmboth_selected
    2497 0000dd00     0b49          cmpi    3,a9                    ; have both selected "COOP" ?
         0000dd10     fffc  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   59

    2498 0000dd20     cb02          jrnz    sedmret_hd                      ; br = no
    2499 0000dd30     1829          movk    1,a9                    ; set "COOP" mode
    2500 0000dd40     c001          jruc    sedmmode_selected
    2501 0000dd50           sedmret_hd
    2502 0000dd50     5729          clr     a9                      ; set "HEAD TO HEAD" mode
    2503 0000dd60           sedmmode_selected
    2504 0000dd60                   PULLP   a8,a10
    2505 0000dd80                   RETP
    2506                    
    2507                    
    2508                    ;a10 - flag 0 = no flash
    2509                    ;a11 - pnum
    2510 0000ddb0            SUBRP  flash_pcurs
    2511 0000ddb0     4d4a          move    a10,a10         ; Should I flash it ?
    2512 0000ddc0     ca2d          jrz     sedmfp_exit     ; br = no
    2513 0000ddd0     09ea          movi    pcurs_obj,a10   ; Object array
         0000dde0 00000470- 
    2514 0000de00     4d6b          move    a11,a11         ; Is this player 1 ?
    2515 0000de10     ca02          jrz     sedmnot_p2              ; br = yes
    2516 0000de20     0b0a          addi    64,a10          ; Adjust pointer for p2 objects
         0000de30     0040  
    2517 0000de40           sedmnot_p2
    2518 0000de40     09c0          movi    0cbh,a0         ; Make a sound
         0000de50     00cb  
    2519 0000de60     0d5f          calla   triple_sound
         0000de70 00000000! 
    2520                    
    2521 0000de90     8749          move    *a10,a9,L       ; Set const color to white
    2522 0000dea0     09ce          movi    0101h,a14
         0000deb0     0101  
    2523 0000dec0     b1c9          move    a14,*a9(OCONST)
         0000ded0     0160  
    2524 0000dee0     186b          movk    3,a11           ; Number of times to flash it
    2525 0000def0           sedmfp_loop
    2526 0000def0     b528          move    *a9(OCTRL),a8   ; Turn it white
         0000df00     00f0  
    2527 0000df10     0ba8          ori     8,a8            ; Turn on Write const on non-zero
         0000df20 00000008  
    2528 0000df40     0b88          andni   2,a8            ; Turn off write non-zeros bit
         0000df50 00000002  
    2529 0000df70     b109          move    a8,*a9(OCTRL)   ; Write back to control
         0000df80     00f0  
    2530 0000df90                   SLEEPK  3
    2531 0000dfd0     0b88          andni   8,a8            ; Turn off write const on non-zero
         0000dfe0 00000008  
    2532 0000e000     0ba8          ori     2,a8            ; Turn on non-zeros bit
         0000e010 00000002  
    2533 0000e030     b109          move    a8,*a9(OCTRL)   ; Write back to control
         0000e040     00f0  
    2534 0000e050                   SLEEPK  3
    2535 0000e090     3f6b          dsjs    a11,sedmfp_loop ; Done ? - br = no
    2536 0000e0a0           sedmfp_exit
    2537 0000e0a0                   DIE
    2538                    
    2539                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   60

    2540 0000e0d0            SUBRP  set_pcurs_pos
    2541 0000e0d0     09e8          movi    pcurs_obj,a8    ; Get pointer to player cursor object table
         0000e0e0 00000470- 
    2542 0000e100     9700          move    *a8+,a0,L       ; pointer to p1 cursor
    2543                    
    2544                    
    2545 0000e110     09c1          movi    93+256,a1       ; Set top ypos
         0000e120     015d  
    2546 0000e130     1fe9          btst    0,a9            ; p1 curs position bottom ?
    2547 0000e140     ca02          jrz     sedmp1c_set     ; br = no
    2548 0000e150     09c1          movi    184+256,a1      ; bottom ypos
         0000e160     01b8  
    2549 0000e170           sedmp1c_set
    2550 0000e170     b402          move    *a0(OYPOS),a2   ; Get current position
         0000e180     00b0  
    2551 0000e190     4822          cmp     a1,a2           ; Same as requested ?
    2552 0000e1a0     ca09          jrz     sedmno_p1_change        ; br = yes
    2553 0000e1b0                   PUSH    a0,a1           ; make a sound
    2554 0000e1d0     09c0          movi    0c7h,a0
         0000e1e0     00c7  
    2555 0000e1f0     0d5f          calla   triple_sound
         0000e200 00000000! 
    2556 0000e220                   PULL    a0,a1
    2557 0000e240           sedmno_p1_change
    2558 0000e240     b020          move    a1,*a0(OYPOS)   ; Set p1 cursor ypos
         0000e250     00b0  
    2559 0000e260     9700          move    *a8+,a0,L       ; Get p1 digit object pointer
    2560 0000e270     0be1          subi    8,a1            ; adjust ypos
         0000e280     fff7  
    2561 0000e290     b020          move    a1,*a0(OYPOS)   ; Set p1 cursor digit ypos
         0000e2a0     00b0  
    2562                    
    2563                    
    2564 0000e2b0     09c1          movi    93+256,a1       ; Set top ypos
         0000e2c0     015d  
    2565 0000e2d0     1fc9          btst    1,a9            ; p2 curs position bottom ?
    2566 0000e2e0     ca02          jrz     sedmp2c_set     ; br = no
    2567 0000e2f0     09c1          movi    184+256,a1      ; Set bottom ypos
         0000e300     01b8  
    2568 0000e310           sedmp2c_set
    2569 0000e310     9700          move    *a8+,a0,L       ; Get pointer to p2 cursor object
    2570 0000e320     b402          move    *a0(OYPOS),a2   ; Get current position
         0000e330     00b0  
    2571 0000e340     4822          cmp     a1,a2           ; Same as requested position ?
    2572 0000e350     ca09          jrz     sedmno_p2_change        ; br = yes
    2573 0000e360                   PUSH    a0,a1           ; Make a sound
    2574 0000e380     09c0          movi    0c7h,a0
         0000e390     00c7  
    2575 0000e3a0     0d5f          calla   triple_sound
         0000e3b0 00000000! 
    2576 0000e3d0                   PULL    a0,a1
    2577 0000e3f0           sedmno_p2_change
    2578 0000e3f0     b020          move    a1,*a0(OYPOS)   ; Set p2 cursor ypos
         0000e400     00b0  
    2579 0000e410     9700          move    *a8+,a0,L       ; Get p2 digit object pointer
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   61

    2580 0000e420     0be1          subi    8,a1            ; adjust ypos
         0000e430     fff7  
    2581 0000e440     b020          move    a1,*a0(OYPOS)   ; Set p2 cursor digit ypos
         0000e450     00b0  
    2582 0000e460     0960          rets
    2583                    
    2584                    
    2585                    
    2586                    ******************************************************************************
    2587                    
    2588 0000e470           DO_SET_IMAGE_AND_FLASH
    2589 0000e470     0d5f          CALLA   BGND_UD1
         0000e480 00000000! 
    2590 0000e4a0     0d5f          CALLA   SET_IMAGE_AND_FLASH
         0000e4b0 000059a0' 
    2591 0000e4d0                   SLOOP   1,DO_SET_IMAGE_AND_FLASH
    2592                    
    2593                    ******************************************************************************
    2594                    
    2595 0000e540            SUBR   PUT_UP_PROGRESS
    2596 0000e540     0d5f          calla   SPECIAL_WIPEOUT
         0000e550 00000000! 
    2597                    
    2598 0000e570     0d5f          CALLA   CLEAR_PROCESSES
         0000e580 00000000! 
    2599                    
    2600 0000e5a0     09c3          movi    2056,a3
         0000e5b0     0808  
    2601 0000e5c0     0d5f          calla   SNDSND
         0000e5d0 00000000! 
    2602                    
    2603 0000e5f0                   CREATE0 VINCE_START_GAME
    2604                    
    2605 0000e660     5600          clr     a0
    2606 0000e670     0580          move    a0,@HALT
         0000e680 00000000! 
    2607                    
    2608 0000e6a0     0580          move    a0,@dtype               ;2d mode
         0000e6b0 00000000! 
    2609 0000e6d0     0580          move    a0,@IRQSKYE
         0000e6e0 00000000! 
    2610 0000e700     0780          move    a0,@WORLDTLX,L
         0000e710 00000000! 
    2611 0000e730     0780          move    a0,@WORLDTLY,L
         0000e740 00000000! 
    2612 0000e760     0580          move    a0,@FLASH_FLAG
         0000e770 000002d0- 
    2613                    
    2614 0000e790     1820          movk    1,a0                    ;page flipping on
    2615 0000e7a0     0580          move    a0,@dpageflip
         0000e7b0 00000000! 
    2616                    
    2617 0000e7d0     09e0          movi    SCRNEND,a0              ;[256,405]
         0000e7e0 00fe01b0  
    2618 0000e800     0780          move    a0,@SCRNLR,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   62

         0000e810 00000000! 
    2619                    
    2620 0000e830     09e0          movi    sedmPROGRESS_BMOD,a0
         0000e840 00010bc0' 
    2621 0000e860     0780          move    a0,@BAKMODS,L
         0000e870 00000000! 
    2622 0000e890     0d5f          calla   BGND_UD1                ;create objects for background
         0000e8a0 00000000! 
    2623                    
    2624 0000e8c0     0d5f          calla   show_progress_bicons
         0000e8d0 00000000! 
    2625                    
    2626 0000e8f0     09e2          movi    tonites_matchup,a2
         0000e900 0001bd70' 
    2627 0000e920     0d5f          calla   setup_message
         0000e930 00000000! 
    2628 0000e950     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000e960     0704  
    2629 0000e970     0580          move    a0,@mess_objid
         0000e980 00000000! 
    2630 0000e9a0     09e4          movi    tonites_str,a4
         0000e9b0 0001be10' 
    2631 0000e9d0     0d5f          calla   print_string2
         0000e9e0 00000000! 
    2632                    
    2633 0000ea00     0d5f          calla   start_credbox
         0000ea10 00000000! 
    2634                    
    2635 0000ea30     09e2          movi    tonites_matchup,a2
         0000ea40 0001bd70' 
    2636 0000ea60     0d5f          calla   setup_message
         0000ea70 00000000! 
    2637 0000ea90     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000eaa0     0704  
    2638 0000eab0     0580          move    a0,@mess_objid
         0000eac0 00000000! 
    2639 0000eae0     09e4          movi    tonites_str,a4
         0000eaf0 0001be10' 
    2640 0000eb10     0d5f          calla   print_string2
         0000eb20 00000000! 
    2641                    
    2642 0000eb40     09e2          movi    type_setup,a2
         0000eb50 0001bea0' 
    2643 0000eb70     0d5f          calla   setup_message
         0000eb80 00000000! 
    2644 0000eba0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000ebb0     0704  
    2645 0000ebc0     0580          move    a0,@mess_objid
         0000ebd0 00000000! 
    2646 0000ebf0     09e4          movi    wwf_belt_str,a4
         0000ec00 0001bfe0' 
    2647 0000ec20     05ae          move    @belt_type,a14
         0000ec30 00000000! 
    2648 0000ec50     cb03          jrnz    sedmwwf_belt
    2649 0000ec60     09e4          movi    inter_belt_str,a4
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   63

         0000ec70 0001c070' 
    2650 0000ec90           sedmwwf_belt
    2651 0000ec90     0d5f          calla   print_string_C2
         0000eca0 00000000! 
    2652                    
    2653 0000ecc0     0d5f          calla   start_credbox
         0000ecd0 00000000! 
    2654                    
    2655 0000ecf0     09e2          movi    belt_setup,a2
         0000ed00 0001bf40' 
    2656 0000ed20     0d5f          calla   setup_message
         0000ed30 00000000! 
    2657 0000ed50     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000ed60     0704  
    2658 0000ed70     0580          move    a0,@mess_objid
         0000ed80 00000000! 
    2659 0000eda0     09e4          movi    belt_str,a4
         0000edb0 0001c100' 
    2660 0000edd0     0d5f          calla   print_string_C2
         0000ede0 00000000! 
    2661                    
    2662 0000ee00     1940          movk    10,a0
    2663 0000ee10     0580          move    a0,@match_time
         0000ee20 00000000! 
    2664                    
    2665 0000ee40     07aa          MOVE    @CURRENT_LADDER,A10,L
         0000ee50 00000020- 
    2666                    
    2667 0000ee70     0b6a          CMPI    LADDER,A10
         0000ee80 ffffff9f- 
    2668 0000eea0     c41d          jrlt    NO_DEAD_BODIES
    2669                    
    2670 0000eeb0     8741          MOVE    *A10,A1,L
    2671 0000eec0     0d3f          CALLR   NUM_OF_OPPS
         0000eed0     f4c6  
    2672 0000eee0     0583          MOVE    A3,@NUM_OLD_OPPS
         0000eef0 00000350- 
    2673                    
    2674 0000ef10     8744          MOVE    *A10,A4,L
    2675 0000ef20     188a          MOVK    4,A10
    2676 0000ef30           CREATE_NEXT_DEAD_GUY
    2677 0000ef30     0d3f          CALLR   SORT_OUT_WRESTLER_NUM
         0000ef40     0194  
    2678 0000ef50     09c8          movi    PTYPE_DRONE,a8                  ;player type
         0000ef60     0001  
    2679 0000ef70     09c9          movi    PSIDE_PLYR1,a9                  ;side on
         0000ef80     0000  
    2680 0000ef90                   SCREATE WMAINT_PID,CREATE_TEMP_WRESTLER
    2681 0000f010     2f04          SRL     8,A4
    2682 0000f020     102a          INC     A10
    2683 0000f030     1423          DEC     A3
    2684 0000f040     cbee          JRNZ    CREATE_NEXT_DEAD_GUY
    2685                    
    2686 0000f050     07aa          MOVE    @CURRENT_LADDER,A10,L
         0000f060 00000020- 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   64

    2687                    
    2688 0000f080           NO_DEAD_BODIES
    2689 0000f080     0d3f          CALLR   NEXT_IN_LADDER
         0000f090     f473  
    2690                    
    2691 0000f0a0     192e          movk    INPREGAME2,a14          ;set GAMSTATE
    2692 0000f0b0     058e          move    a14,@GAMSTATE
         0000f0c0 00000000! 
    2693                    
    2694 0000f0e0     0d3f          CALLR   NUM_OF_OPPS
         0000f0f0     f4a4  
    2695                    
    2696 0000f100     09c8          movi    PTYPE_DRONE,a8                  ;player type
         0000f110     0001  
    2697 0000f120     09c9          movi    PSIDE_PLYR1,a9                  ;side on
         0000f130     0000  
    2698 0000f140     574a          clr     a10
    2699 0000f150     05ab          move    @index1,a11                     ;wrestler
         0000f160 00000000! 
    2700 0000f180     05a0          MOVE    @PSTATUS,A0
         0000f190 00000000! 
    2701 0000f1b0     2fe0          SRL     1,A0
    2702 0000f1c0     c803          JRC     INDEX_SET
    2703 0000f1d0     05ab          move    @index2,a11                     ;wrestler
         0000f1e0 00000000! 
    2704 0000f200           INDEX_SET
    2705 0000f200                   PUSH    A11
    2706 0000f210                   SCREATE WMAINT_PID,CREATE_TEMP_WRESTLER
    2707 0000f290                   PULL    A11
    2708                    
    2709 0000f2a0     05a0          MOVE    @MUSIC_HAP,A0
         0000f2b0 00000000! 
    2710 0000f2d0     cb08          JRNZ    MUSIC_ALREADY_GOING
    2711                    
    2712 0000f2e0     248b          SLL     4,A11
    2713 0000f2f0     0b2b          ADDI    WHICH_MUSIC,A11
         0000f300 00010020' 
    2714 0000f320     8563          MOVE    *A11,A3
    2715 0000f330     0d5f          calla   SNDSND
         0000f340 00000000! 
    2716                    
    2717 0000f360           MUSIC_ALREADY_GOING
    2718                    
    2719 0000f360     05a3          MOVE    @NUM_OPPS,A3
         0000f370 00000340- 
    2720 0000f390     07aa          MOVE    @CURRENT_LADDER,A10,L
         0000f3a0 00000020- 
    2721 0000f3c0     8744          MOVE    *A10,A4,L
    2722 0000f3d0     182a          MOVK    1,A10
    2723 0000f3e0           CREATE_NEXT_NEW_GUY
    2724 0000f3e0     0d3f          CALLR   SORT_OUT_WRESTLER_NUM
         0000f3f0     0149  
    2725 0000f400     09c8          movi    PTYPE_DRONE,a8                  ;player type
         0000f410     0001  
    2726 0000f420     09c9          movi    PSIDE_PLYR1,a9                  ;side on
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   65

         0000f430     0000  
    2727 0000f440                   SCREATE WMAINT_PID,CREATE_TEMP_WRESTLER
    2728 0000f4c0     2f04          SRL     8,A4
    2729 0000f4d0     102a          INC     A10
    2730 0000f4e0     1423          DEC     A3
    2731 0000f4f0     cbee          JRNZ    CREATE_NEXT_NEW_GUY
    2732                    
    2733                    *****************
    2734 0000f500     0d3f          CALLR   is_8_on_1
         0000f510     f94f  
    2735 0000f520     c925          JRNC    NO_IT_IS_NOT_8_ON_1
    2736 0000f530     0d3f          CALLR   INIT_TEMP_TABLE
         0000f540     f9ee  
    2737 0000f550     07aa          MOVE    @CURRENT_LADDER,A10,L
         0000f560 00000020- 
    2738 0000f580     8744          MOVE    *A10,A4,L
    2739 0000f590     1861          MOVK    3,A1
    2740 0000f5a0     1922          MOVK    9,A2
    2741 0000f5b0           CLEAR_NEXT_POSITION
    2742 0000f5b0     4c80          MOVE    A4,A0
    2743 0000f5c0     2700          SLL     24,A0
    2744 0000f5d0     2d00          SRL     24,A0
    2745 0000f5e0     18ee          MOVK    7,A14
    2746 0000f5f0     440e          SUB     A0,A14
    2747 0000f600     246e          SLL     3,A14
    2748 0000f610     0b2e          ADDI    TEMP_LADDER,A14
         0000f620 00000240- 
    2749 0000f640     8c4e          MOVB    A2,*A14
    2750 0000f650     2f04          SRL     8,A4
    2751 0000f660     3d81          DSJS    A1,CLEAR_NEXT_POSITION
    2752                    
    2753 0000f670     09ea          MOVI    TEMP_LADDER,A10
         0000f680 00000240- 
    2754 0000f6a0     576b          CLR     A11
    2755 0000f6b0           CREATE_NEXT_BODY
    2756 0000f6b0     0b6a          CMPI    TEMP_LADDER+(8*8),A10
         0000f6c0 fffffd7f- 
    2757 0000f6e0     ca09          JREQ    NO_IT_IS_NOT_8_ON_1
    2758 0000f6f0     8f42          MOVB    *A10,A2
    2759 0000f700     110a          ADDK    8,A10
    2760 0000f710     0b42          CMPI    9,A2
         0000f720     fff6  
    2761 0000f730     caf7          JREQ    CREATE_NEXT_BODY
    2762 0000f740     0d3f          CALLR   CREATE_OTHER_BODIES
         0000f750     0095  
    2763 0000f760     102b          INC     A11
    2764 0000f770     c0f3          JRUC    CREATE_NEXT_BODY
    2765                    
    2766 0000f780           NO_IT_IS_NOT_8_ON_1
    2767                    *****************
    2768                    
    2769 0000f780     0d3f          CALLR   SET_IMAGE_AND_FLASH
         0000f790     f620  
    2770                    
    2771 0000f7a0     0d3f          CALLR   DO_LADDER_BITS
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   66

         0000f7b0     093c  
    2772                    
    2773 0000f7c0                   CREATE0 DO_SET_IMAGE_AND_FLASH
    2774 0000f830                   PUSHP   A0
    2775                    
    2776                    ;       movk    15,a8
    2777                    ;       movk    4,a9
    2778 0000f840     1948          movk    10,a8
    2779 0000f850     1849          movk    2,a9
    2780                    
    2781                    
    2782 0000f860     03a9          NEG     A9
    2783 0000f870                   JSRP    OPEN_SCREEN_LINE
    2784 0000f8e0                   PULLP   A0
    2785 0000f8f0     0d5f          CALLA   KILL
         0000f900 00000000! 
    2786                    
    2787 0000f920     09e0          MOVI    RUN_SPEED,A0
         0000f930 00040000  
    2788 0000f950     0780          MOVE    A0,@TEMP_SPEED,L
         0000f960 00000000- 
    2789                    
    2790 0000f980                   PUSH    A13
    2791 0000f990     07ad          MOVE    @process_ptrs,a13,L
         0000f9a0 00000000! 
    2792 0000f9c0     09e2          movi    running_addr,a2
         0000f9d0 00012aa0' 
    2793 0000f9f0     0d3f          callr   start_them_doing_stuff
         0000fa00     027e  
    2794 0000fa10                   PULL    A13
    2795                    
    2796 0000fa20     09e9          MOVI    RUN_SPEED,A9
         0000fa30 00040000  
    2797 0000fa50     09c8          MOVI    100,A8
         0000fa60     0064  
    2798 0000fa70           MOVE_PROGRESS
    2799 0000fa70     0d5f          calla   BGND_UD1                ;create objects for background
         0000fa80 00000000! 
    2800 0000faa0                   pushp   a8,A9
    2801 0000fac0     0d3f          CALLR   SET_IMAGE_AND_FLASH
         0000fad0     f5ec  
    2802 0000fae0                   pullp   a8,A9
    2803 0000fb00     0d5f          CALLA   get_all_buttons_cur2
         0000fb10 00000000! 
    2804 0000fb30     cb41          JRNZ    EXIT_PROGRESS
    2805 0000fb40     0d3f          CALLR   SET_SCROLL_SPEED
         0000fb50     00db  
    2806 0000fb60                   SLEEPK  1
    2807 0000fba0     1428          DEC     A8
    2808 0000fbb0     cfeb          JRNN    MOVE_PROGRESS
    2809                    
    2810 0000fbc0                   PUSH    A13
    2811                    
    2812 0000fbd0     07ad          MOVE    @process_ptrs+020h,a13,L
         0000fbe0 00000020! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   67

    2813 0000fc00     09e2          movi    clever_addr,a2
         0000fc10 00012d20' 
    2814 0000fc30     0d3f          callr   start_them_doing_stuff
         0000fc40     025a  
    2815                    
    2816 0000fc50     07ad          MOVE    @process_ptrs+040h,a13,L
         0000fc60 00000040! 
    2817 0000fc80     ca0e          jrz     no_other_players
    2818 0000fc90     09e2          movi    clever_addr,a2
         0000fca0 00012d20' 
    2819 0000fcc0     0d3f          callr   start_them_doing_stuff
         0000fcd0     0251  
    2820                    
    2821 0000fce0     07ad          MOVE    @process_ptrs+060h,a13,L
         0000fcf0 00000060! 
    2822 0000fd10     ca05          jrz     no_other_players
    2823 0000fd20     09e2          movi    clever_addr,a2
         0000fd30 00012d20' 
    2824 0000fd50     0d3f          callr   start_them_doing_stuff
         0000fd60     0248  
    2825 0000fd70           no_other_players
    2826                    
    2827 0000fd70                   PULL    A13
    2828                    
    2829 0000fd80     09c8          MOVI    90,A8
         0000fd90     005a  
    2830 0000fda0           STILL_PROGRESS
    2831 0000fda0                   SLEEPK  1
    2832 0000fde0                   pushp   a8
    2833 0000fdf0     0d3f          CALLR   SET_IMAGE_AND_FLASH
         0000fe00     f5b9  
    2834 0000fe10                   pullp   a8
    2835 0000fe20     0d5f          CALLA   get_all_buttons_cur2
         0000fe30 00000000! 
    2836 0000fe50     cb0f          JRNZ    EXIT_PROGRESS
    2837 0000fe60     0b48          CMPI    80,A8
         0000fe70     ffaf  
    2838 0000fe80     cb0a          JRNE    NO_START_TAUNTS
    2839 0000fe90                   PUSH    A13
    2840 0000fea0     07ad          MOVE    @process_ptrs,a13,L
         0000feb0 00000000! 
    2841 0000fed0     09e2          movi    taunting_addr,a2
         0000fee0 00012320' 
    2842 0000ff00     0d3f          callr   start_them_doing_stuff
         0000ff10     022d  
    2843 0000ff20                   PULL    A13
    2844 0000ff30           NO_START_TAUNTS
    2845 0000ff30     1428          DEC     A8
    2846 0000ff40     cfe5          JRNN    STILL_PROGRESS
    2847                    
    2848 0000ff50           EXIT_PROGRESS
    2849                    
    2850                    ;Get rid of flashes under wipe
    2851                    ;       CREATE0 DO_SET_IMAGE_AND_FLASH
    2852                    ;       PUSHP   A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   68

    2853 0000ff50                   JSRP    CLOSE_PROGRESS_SCREEN
    2854                    ;       PULLP   A0
    2855                    ;       CALLA   KILL
    2856                    
    2857 0000ffc0     0d5f          calla   del_progress_icon
         0000ffd0 00000000! 
    2858                    
    2859 0000fff0                   RETP
    2860                    
    2861 00010020           WHICH_MUSIC
    2862 00010020     0005          .word   5,2,1,7,6,4,8,0,3
    2863                    
    2864                    ****************
    2865 000100b0           CREATE_OTHER_BODIES
    2866 000100b0     098f          MMTM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         000100c0     eff2  
    2867 000100d0                   PUSH    b0
    2868                    
    2869                    
    2870 000100e0     4c43          MOVE    A2,A3
    2871 000100f0     0b43          cmpi    7,a3            ; Is this Lex ?
         00010100     fff8  
    2872 00010110     cb01          jrnz    wnum_ok         ; br = no
    2873 00010120     1023          addk    1,a3            ; Yes - adjust for palette table
    2874 00010130           wnum_ok
    2875 00010130     24a3          SLL     5,A3
    2876 00010140     4e60          move    a3,b0
    2877 00010150     0b30          addi    sedmwrestler_pal,b0
         00010160 000120b0' 
    2878 00010180     8610          move    *b0,b0,L
    2879 00010190     0b23          ADDI    WHICH_WRESTLER_IMAGE,A3
         000101a0 000104f0' 
    2880 000101c0     9664          MOVE    *A3+,A4,L
    2881 000101d0                   PUSH    A4
    2882 000101e0                   PUSH    b0
    2883                    
    2884 000101f0     4d64          MOVE    A11,A4
    2885 00010200     24e4          SLL     7,A4
    2886 00010210     0b24          ADDI    WHERE_TEMP_WRESTLER,A4
         00010220 00010610' 
    2887                    
    2888 00010240     9680          MOVE    *A4+,A0,L
    2889 00010250                   PUSH    A0
    2890                    
    2891 00010260     9683          MOVE    *A4+,A3,L
    2892 00010270                   PUSH    A3
    2893 00010280     0ba3          ORI     1000H,A3
         00010290 00001000  
    2894                    
    2895 000102b0     8681          MOVE    *A4,A1,L
    2896 000102c0                   PUSH    A1
    2897                    
    2898 000102d0     09e2          MOVI    shadow,A2
         000102e0 00000000! 
    2899 00010300     09e4          MOVI    DMAWNZ,A4
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   69

         00010310 00008002  
    2900 00010330     56a5          CLR     A5
    2901 00010340     56c6          CLR     A6
    2902 00010350     56e7          CLR     A7
    2903 00010360     0d5f          CALLA   BEGINOBJ
         00010370 00000000! 
    2904                    
    2905 00010390                   PULL    A1
    2906 000103a0                   PULL    A3
    2907 000103b0     1423          DEC     A3
    2908 000103c0     0ba3          ORI     1000H,A3
         000103d0 00001000  
    2909 000103f0                   PULL    A0
    2910                    
    2911 00010400                   PULL    b0
    2912 00010410                   PULL    A2
    2913                    
    2914 00010420     09e4          movi    DMAWNZ|M_FLIPH,a4       ;DMA flags
         00010430 00008012  
    2915 00010450     56a5          CLR     A5
    2916 00010460     56c6          CLR     A6
    2917 00010470     56e7          CLR     A7
    2918                    ;       CALLA   BEGINOBJ
    2919 00010480     0d5f          calla   BEGINOBJP
         00010490 00000000! 
    2920 000104b0                   PULL    b0
    2921 000104c0     09af          MMFM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         000104d0     4ff7  
    2922 000104e0     0960          RETS
    2923                    
    2924 000104f0           WHICH_WRESTLER_IMAGE
    2925 000104f0 00000000!         .LONG   H4ST4A02
    2926 00010510 00000000!         .LONG   RAZOR_STAND
    2927 00010530 00000000!         .LONG   TAKER_STAND
    2928 00010550 00000000!         .LONG   YOKO_STAND
    2929 00010570 00000000!         .LONG   SHAWN_STAND
    2930 00010590 00000000!         .LONG   BAM_STAND
    2931 000105b0 00000000!         .LONG   DOINK_STAND
    2932 000105d0 00000000!         .LONG   LEX_STAND
    2933 000105f0 00000000!         .LONG   LEX_STAND
    2934                    
    2935 00010610           WHERE_TEMP_WRESTLER
    2936 00010610 02d50000          .LONG   [725,0],470H,[233,0],0
    2937 00010690 02f80000          .LONG   [760,0],420H,[223,0],0
    2938 00010710 02d00000          .LONG   [720,0],420H,[219,0],0
    2939 00010790 02b20000          .LONG   [690,0],420H,[219,0],0
    2940 00010810 028a0000          .LONG   [650,0],420H,[219,0],0
    2941                    
    2942                    ****************
    2943                    
    2944                    *********************
    2945                    *
    2946                    * Low byte of a4 is a wrestler num between 0-7.  7, of course, is an unused
    2947                    * slot so we promote a 7 to 8, then store the result in a11.
    2948                    *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   70

    2949                    
    2950 00010890           SORT_OUT_WRESTLER_NUM
    2951 00010890     4c8b          MOVE    A4,A11
    2952 000108a0     270b          SLL     24,A11
    2953 000108b0     2d0b          SRL     24,A11
    2954 000108c0     0b4b          CMPI    7,A11
         000108d0     fff8  
    2955 000108e0     cb01          JRNE    NO_AVOID_UNUSED_WRESTLER
    2956 000108f0     102b          INC     A11
    2957 00010900           NO_AVOID_UNUSED_WRESTLER
    2958 00010900     0960          RETS
    2959                    
    2960 00010910           SET_SCROLL_SPEED
    2961 00010910     4d00          MOVE    A8,A0
    2962 00010920     0b40          CMPI    16,A0
         00010930     ffef  
    2963 00010940     c718          JRGT    NO_CHANGE_SCROLL_SPEED
    2964 00010950     0380          ABS     A0
    2965 00010960     0be0          SUBI    16,A0
         00010970     ffef  
    2966 00010980     03a0          NEG     A0
    2967 00010990     2fc0          SRL     2,A0
    2968 000109a0     25e0          SLL     15,A0
    2969 000109b0     09e9          MOVI    RUN_SPEED,A9
         000109c0 00040000  
    2970 000109e0     4409          SUB     A0,A9
    2971 000109f0     5600          clr     a0
    2972 00010a00     0780          MOVE    A0,@TEMP_SPEED,L
         00010a10 00000000- 
    2973 00010a30                   PUSH    A13
    2974 00010a40     07ad          MOVE    @process_ptrs,a13,L
         00010a50 00000000! 
    2975 00010a70     09e2          movi    standing_addr,a2
         00010a80 000125a0' 
    2976 00010aa0     0d3f          callr   start_them_doing_stuff
         00010ab0     0173  
    2977 00010ac0                   PULL    A13
    2978 00010ad0           NO_CHANGE_SCROLL_SPEED
    2979 00010ad0     4d25          MOVE    A9,A5
    2980 00010ae0     0d5f          CALLA   get_all_buttons_cur2
         00010af0 00000000! 
    2981 00010b10     ca02          JRZ     NO_BUTTONS2
    2982 00010b20     2425          SLL     1,A5
    2983 00010b30     1428          DEC     A8
    2984 00010b40           NO_BUTTONS2
    2985 00010b40     07a4          MOVE    @WORLDTLX,A4,L
         00010b50 00000000! 
    2986 00010b70     40a4          ADD     A5,A4
    2987 00010b80     0784          move    a4,@WORLDTLX,L
         00010b90 00000000! 
    2988 00010bb0     0960          RETS
    2989                    
    2990 00010bc0           sedmPROGRESS_BMOD
    2991 00010bc0 00000000!         .long   LADDERBMOD
    2992 00010be0     ffc4          .word   -60,-45
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   71

    2993 00010c00 00000000          .long   0
    2994                    
    2995 00010c20           CREATE_TEMP_WRESTLER
    2996                    
    2997 00010c20     b10d          move    a8,*a13(PLYR_TYPE)
         00010c30     05a0  
    2998 00010c40     b12d          move    a9,*a13(PLYR_SIDE)
         00010c50     05b0  
    2999 00010c60     b14d          move    a10,*a13(PLYRNUM)
         00010c70     0580  
    3000 00010c80     b16d          move    a11,*a13(WRESTLERNUM)
         00010c90     0590  
    3001                    
    3002 00010ca0     09c0          movi    112,a0
         00010cb0     0070  
    3003 00010cc0     b00d          move    a0,*a13(OBJ_PRIORITY)
         00010cd0     0160  
    3004                    
    3005 00010ce0     4d41          move    a10,a1
    3006 00010cf0     0d5f          calla   set_process_ptr
         00010d00 00000000! 
    3007                    
    3008 00010d20     4d40          move    a10,a0
    3009 00010d30                   X32     a0
    3010 00010d40     0b20          addi    obj_look,a0
         00010d50 00000000! 
    3011 00010d70     8600          move    *a0,a0,L                ;* start of objects
    3012 00010d80     b20d          move    a0,*a13(OBJ_BASE),L
         00010d90     0760  
    3013 00010da0     4c0a          move    a0,a10
    3014 00010db0     0b0a          addi    32*MAX_PIECES,a10       ;start at end to reverse priorities
         00010dc0     00c0  
    3015                    
    3016 00010dd0     5621          clr     a1                      ;y pos
    3017 00010de0     09e2          movi    D2ST2B03,a2             ;* image
         00010df0 00000000! 
    3018 00010e10     09c3          movi    1000h|110,a3            ;z pos
         00010e20     106e  
    3019 00010e30     09e4          movi    DMAWNZ|M_3D,a4          ;DMA flags
         00010e40 00008102  
    3020 00010e60     b08d          move    a4,*a13(OBJ_CONTROL)
         00010e70     0780  
    3021 00010e80     09c5          movi    CLSPLYR | TYPPLYR,a5    ;object ID
         00010e90     4100  
    3022 00010ea0     56c6          clr     a6                      ;x vel
    3023 00010eb0     56e7          clr     a7                      ;y vel
    3024                    
    3025 00010ec0     4fa0          move    a13,b0
    3026 00010ed0     b410          move    *b0(WRESTLERNUM),b0
         00010ee0     0590  
    3027 00010ef0                   X32     b0
    3028                    
    3029 00010f00     18c9          movk    MAX_PIECES,a9
    3030                    
    3031 00010f10           sedmnopal_chng
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   72

    3032                    
    3033 00010f10     0b30          addi    sedmwrestler_pal,b0
         00010f20 000120b0' 
    3034 00010f40     8610          move    *b0,b0,L                ;* palette
    3035                    
    3036 00010f50           sedmnxt_obj
    3037 00010f50                   PUSH    b0
    3038 00010f60     0d5f          calla   BEGINOBJP
         00010f70 00000000! 
    3039 00010f90                   PULL    b0
    3040 00010fa0     a30a          move    a8,-*a10,L
    3041 00010fb0     3ce9          dsj     a9,sedmnxt_obj
    3042                    
    3043 00010fc0     0d5f          calla   BEGINOBJP
         00010fd0 00000000! 
    3044 00010ff0     b30d          move    a8,*a13(ATTIMG_IMG),L
         00011000     08c0  
    3045 00011010     5600          clr     a0
    3046 00011020     b20d          move    a0,*a13(ATTIMG_CUR_FRAME),L
         00011030     08e0  
    3047 00011040     b20d          move    a0,*a13(ATTIMG_LAST_FRAME),L
         00011050     0900  
    3048                    
    3049 00011060     b500          move    *a8(OPAL),a0
         00011070     0150  
    3050 00011080     b00d          move    a0,*a13(OBJ_PAL)
         00011090     07a0  
    3051                    
    3052 000110a0     09e0          movi    shadow_p,a0
         000110b0 00000000! 
    3053                    
    3054 000110d0     0d5f          calla   pal_getf
         000110e0 00000000! 
    3055 00011100     b7a8          move    *a13(OBJ_BASE),a8,L
         00011110     0760  
    3056 00011120     8708          move    *a8,a8,L                ;1st object
    3057 00011130     b008          move    a0,*a8(OPAL)            ;set palette for shadow
         00011140     0150  
    3058                    
    3059 00011150     5600          CLR     A0
    3060 00011160     b00d          move    a0,*a13(GROUND_Y)
         00011170     0570  
    3061                    
    3062 00011180     5600          clr     a0
    3063                    ;       move    a0,*a13(BURNOUT_COUNT)
    3064 00011190     b00d          move    a0,*a13(INRING)
         000111a0     0560  
    3065                    
    3066 000111b0     b20d          move    a0,*a13(OBJ_XVEL),L
         000111c0     02d0  
    3067 000111d0     b20d          move    a0,*a13(OBJ_YVEL),L
         000111e0     02f0  
    3068 000111f0     b20d          move    a0,*a13(OBJ_ZVEL),L
         00011200     0310  
    3069                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   73

    3070 00011210     b5a0          move    *a13(PLYRNUM),a0
         00011220     0580  
    3071 00011230     ca00          JRZ     RUNNING_MAN
         00011240     00ad  
    3072 00011250     0b40          CMPI    4,A0
         00011260     fffb  
    3073 00011270     c574          JRGE    DEAD_BODIES
    3074                    
    3075 00011280     09c0          MOVI    8,A0
         00011290     0008  
    3076 000112a0     b00d          MOVE    A0,*A13(FACING_DIR)
         000112b0     04c0  
    3077 000112c0     b00d          MOVE    A0,*A13(NEW_FACING_DIR)
         000112d0     04d0  
    3078                    
    3079 000112e0     05a0          MOVE    @NUM_OPPS,A0
         000112f0 00000340- 
    3080 00011310     24a0          SLL     5,A0
    3081 00011320     0b20          ADDI    WHICH_ZPOS_TABLE-020H,A0
         00011330 000115e0' 
    3082 00011350     8600          MOVE    *A0,A0,L
    3083 00011360     b5a1          move    *a13(PLYRNUM),A1
         00011370     0580  
    3084 00011380     1421          DEC     A1
    3085 00011390     24c1          SLL     6,A1
    3086 000113a0     4001          ADD     A0,A1
    3087 000113b0     8620          MOVE    *A1,A0,L
    3088 000113c0     b20d          MOVE    A0,*A13(OBJ_ZPOS),L
         000113d0     0140  
    3089 000113e0     b620          MOVE    *A1(020H),A0,L
         000113f0     0020  
    3090 00011400     0b20          ADDI    [375,0],A0
         00011410 01770000  
    3091 00011430     b20d          MOVE    A0,*A13(OBJ_XPOS),L
         00011440     0100  
    3092 00011450     09c0          movi    100,a0
         00011460     0064  
    3093 00011470     b20d          move    a0,*A13(OBJ_YPOS),L
         00011480     0120  
    3094                    
    3095 00011490     09e2          movi    waiting_addr,a2
         000114a0 00012fa0' 
    3096 000114c0     0d3f          callr   start_them_doing_stuff
         000114d0     00d1  
    3097                    
    3098 000114e0     05ae          move    @PCNT,a14
         000114f0 00000000! 
    3099 00011510     b1cd          move    a14,*a13(FOOT_PCNT),W   ;init foot timer
         00011520     0890  
    3100                    
    3101 00011530           sedmloop1
    3102 00011530     0d5f          calla   wrestler_veladd         
         00011540 00000000! 
    3103                    
    3104 00011560     0d5f          calla   animate_wrestler        
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   74

         00011570 00000000! 
    3105                    
    3106 00011590                   SLOOP   1,sedmloop1
    3107                    
    3108 00011600           WHICH_ZPOS_TABLE
    3109 00011600 00011660'         .LONG   ONLY_ONE_OPP
    3110 00011620 000116a0'         .LONG   TWO_OPPS
    3111 00011640 00011720'         .LONG   THREE_OPPS
    3112                    
    3113 00011660           ONLY_ONE_OPP
    3114 00011660 04700000          .LONG   [470H,0],[300,0]
    3115 000116a0           TWO_OPPS
    3116 000116a0 04900000          .LONG   [490H,0],[330,0]
    3117 000116e0 04500000          .LONG   [450H,0],[280,0]
    3118 00011720           THREE_OPPS
    3119 00011720 04a00000          .LONG   [4A0H,0],[345,0]
    3120 00011760 04700000          .LONG   [470H,0],[300,0]
    3121 000117a0 04400000          .LONG   [440H,0],[255,0]
    3122                    
    3123 000117e0           WHICH_ZPOS_TABLE_D
    3124 000117e0 00011840'         .LONG   ONLY_ONE_OPP_D
    3125 00011800 00011880'         .LONG   TWO_OPPS_D
    3126 00011820 00011900'         .LONG   THREE_OPPS_D
    3127                    
    3128 00011840           ONLY_ONE_OPP_D
    3129 00011840 04500000          .LONG   [450H,0],[300,0]
    3130 00011880           TWO_OPPS_D
    3131 00011880 04900000          .LONG   [490H,0],[330,0]
    3132 000118c0 04500000          .LONG   [450H,0],[280,0]
    3133 00011900           THREE_OPPS_D
    3134 00011900 04b00000          .LONG   [4B0H,0],[345,0]
    3135 00011940 04900000          .LONG   [490H,0],[300,0]
    3136 00011980 04400000          .LONG   [440H,0],[255,0]
    3137                    
    3138 000119c0           DEAD_BODIES
    3139 000119c0     09c0          MOVI    8,A0
         000119d0     0008  
    3140 000119e0     b00d          MOVE    A0,*A13(FACING_DIR)
         000119f0     04c0  
    3141 00011a00     b00d          MOVE    A0,*A13(NEW_FACING_DIR)
         00011a10     04d0  
    3142                    
    3143 00011a20     5600          CLR     A0
    3144 00011a30     b00d          MOVE    A0,*A13(STARS_FLAG)
         00011a40     07f0  
    3145                    
    3146 00011a50     09c0          movi    100,a0
         00011a60     0064  
    3147 00011a70     b20d          move    a0,*A13(OBJ_YPOS),L
         00011a80     0120  
    3148                    
    3149 00011a90     05a0          MOVE    @NUM_OLD_OPPS,A0
         00011aa0 00000350- 
    3150 00011ac0     24a0          SLL     5,A0
    3151 00011ad0     0b20          ADDI    WHICH_ZPOS_TABLE_D-020H,A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   75

         00011ae0 000117c0' 
    3152 00011b00     8600          MOVE    *A0,A0,L
    3153 00011b10     b5a1          move    *a13(PLYRNUM),A1
         00011b20     0580  
    3154 00011b30     0be1          SUBI    4,A1
         00011b40     fffb  
    3155 00011b50     24c1          SLL     6,A1
    3156 00011b60     4001          ADD     A0,A1
    3157 00011b70     8620          MOVE    *A1,A0,L
    3158 00011b80     b20d          MOVE    A0,*A13(OBJ_ZPOS),L
         00011b90     0140  
    3159 00011ba0     b620          MOVE    *A1(020H),A0,L
         00011bb0     0020  
    3160 00011bc0     b20d          MOVE    A0,*A13(OBJ_XPOS),L
         00011bd0     0100  
    3161                    
    3162 00011be0     09e2          movi    dead_addr,a2
         00011bf0 00012820' 
    3163 00011c10     0d3f          callr   start_them_doing_stuff
         00011c20     005c  
    3164                    
    3165 00011c30     05ae          move    @PCNT,a14
         00011c40 00000000! 
    3166 00011c60     b1cd          move    a14,*a13(FOOT_PCNT),W   ;init foot timer
         00011c70     0890  
    3167 00011c80           sedmloop2
    3168 00011c80     0d5f          calla   animate_wrestler        
         00011c90 00000000! 
    3169                    
    3170 00011cb0                   SLOOP   1,sedmloop2
    3171                    
    3172 00011d20           RUNNING_MAN
    3173 00011d20     09c0          MOVI    4,A0
         00011d30     0004  
    3174 00011d40     b00d          MOVE    A0,*A13(FACING_DIR)
         00011d50     04c0  
    3175 00011d60     b00d          MOVE    A0,*A13(NEW_FACING_DIR)
         00011d70     04d0  
    3176                    
    3177 00011d80     09e2          movi    standing_addr,a2
         00011d90 000125a0' 
    3178 00011db0     0d3f          callr   start_them_doing_stuff
         00011dc0     0042  
    3179                    
    3180 00011dd0     05ae          move    @PCNT,a14
         00011de0 00000000! 
    3181 00011e00     b1cd          move    a14,*a13(FOOT_PCNT),W   ;init foot timer
         00011e10     0890  
    3182                    
    3183 00011e20     09c0          movi    100,a0
         00011e30     0064  
    3184 00011e40     b20d          move    a0,*A13(OBJ_YPOS),L
         00011e50     0120  
    3185 00011e60     09e0          MOVI    [470h,0],A0
         00011e70 04700000  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   76

    3186 00011e90     b20d          MOVE    A0,*A13(OBJ_ZPOS),L
         00011ea0     0140  
    3187 00011eb0     09e0          MOVI    [140,0],A0
         00011ec0 008c0000  
    3188 00011ee0     b20d          MOVE    A0,*A13(OBJ_XPOS),L
         00011ef0     0100  
    3189 00011f00     5600          CLR     A0
    3190 00011f10     0780          MOVE    A0,@TEMP_SPEED,L
         00011f20 00000000- 
    3191                    
    3192 00011f40           sedmloop
    3193 00011f40     07a3          MOVE    @TEMP_SPEED,A3,L
         00011f50 00000000- 
    3194 00011f70     0d5f          CALLA   get_all_buttons_cur2
         00011f80 00000000! 
    3195 00011fa0     ca01          JRZ     sedmNO_BUTTONS
    3196 00011fb0     2423          SLL     1,A3
    3197 00011fc0           sedmNO_BUTTONS
    3198 00011fc0     b26d          move    a3,*a13(OBJ_XVEL),L
         00011fd0     02d0  
    3199                    
    3200 00011fe0     0d5f          calla   wrestler_veladd         
         00011ff0 00000000! 
    3201                    
    3202 00012010     0d5f          calla   animate_wrestler        
         00012020 00000000! 
    3203                    
    3204 00012040                   SLOOP   1,sedmloop
    3205                    
    3206 000120b0           sedmwrestler_pal
    3207 000120b0 00000000!         .long   HRTPNK_P        ;0      (Bret)
    3208 000120d0 00000000!         .long   RZRGRN_P        ;1      (Razor)
    3209 000120f0 00000000!         .long   UNDBLK_P        ;2      (Taker)
    3210 00012110 00000000!         .long   YOKRED_P        ;3      (Yoko)
    3211 00012130 00000000!         .long   SHNRED_P        ;4      (Shawn)
    3212 00012150 00000000!         .long   BAMBLU_P        ;5      (Bam Bam)
    3213 00012170 00000000!         .long   DNKBLU_P        ;6      (Doink)
    3214 00012190 00000000!         .long   DNKBLU_P        ;7      (spare)
    3215 000121b0 00000000!         .long   LEXWHT_P        ;8      (Lex)
    3216 000121d0 00000000          .long   0               ;9      (Referee)
    3217                    
    3218 000121f0           start_them_doing_stuff
    3219 000121f0     09c0          movi    100h,a0
         00012200     0100  
    3220 00012210     b00d          move    a0,*a13(ANI_SPEED)      ;normal speed animations
         00012220     0650  
    3221                    
    3222 00012230     b5a1          move    *a13(WRESTLERNUM),a1
         00012240     0590  
    3223 00012250     24c1          SLL     6,a1
    3224 00012260     4041          add     a2,a1
    3225 00012270     9620          move    *a1+,a0,L
    3226 00012280                   push    a1
    3227 00012290     0d5f          calla   change_anim1a
         000122a0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   77

    3228 000122c0                   pull    a1
    3229 000122d0     9620          move    *a1+,a0,L
    3230 000122e0     0d5f          calla   change_anim2a
         000122f0 00000000! 
    3231 00012310     0960          rets
    3232                    
    3233 00012320           taunting_addr
    3234 00012320 00015520'         .long   hrt_taunt4_anim
    3235 00012340 00000000!         .long   hrt_torso4_anim
    3236 00012360 000157c0'         .long   rzr_taunt4_anim
    3237 00012380 00000000!         .long   rzr_torso4_anim
    3238 000123a0 00015af0'         .long   und_taunt4_anim
    3239 000123c0 00000000!         .long   und_torso4_anim
    3240 000123e0 00015d60'          .long  yok_taunt4_anim
    3241 00012400 00000000!         .long   yok_torso4_anim
    3242 00012420 00015f10'         .long   shn_taunt4_anim
    3243 00012440 00000000!         .long   shn_torso4_anim
    3244 00012460 00016210'         .long   bam_taunt4_anim
    3245 00012480 00000000!         .long   bam_torso4_anim
    3246 000124a0 00016360'         .long   dnk_taunt4_anim
    3247 000124c0 00000000!         .long   dnk_torso4_anim
    3248 000124e0 00000000          .long   0,0             ;7 spare
    3249 00012520 000165d0'         .long   lex_taunt4_anim
    3250 00012540 00000000!         .long   lex_torso4_anim
    3251 00012560 00000000          .long   0,0             ;9 Referee
    3252                    
    3253 000125a0           standing_addr
    3254 000125a0 00000000!         .long   hrt_stand4_anim
    3255 000125c0 00000000!         .long   hrt_torso4_anim
    3256 000125e0 00000000!         .long   rzr_stand4_anim
    3257 00012600 00000000!         .long   rzr_torso4_anim
    3258 00012620 00000000!         .long   und_stand4_anim
    3259 00012640 00000000!         .long   und_torso4_anim
    3260 00012660 00000000!          .long  yok_stand4_anim
    3261 00012680 00000000!         .long   yok_torso4_anim
    3262 000126a0 00000000!         .long   shn_stand4_anim
    3263 000126c0 00000000!         .long   shn_torso4_anim
    3264 000126e0 00000000!         .long   bam_stand4_anim
    3265 00012700 00000000!         .long   bam_torso4_anim
    3266 00012720 00000000!         .long   dnk_stand4_anim
    3267 00012740 00000000!         .long   dnk_torso4_anim
    3268 00012760 00000000          .long   0,0             ;7 spare
    3269 000127a0 00000000!         .long   lex_stand4_anim
    3270 000127c0 00000000!         .long   lex_torso4_anim
    3271 000127e0 00000000          .long   0,0             ;9 Referee
    3272                    
    3273 00012820           dead_addr
    3274 00012820 00000000!         .long   hrt_dizzy_anim
    3275 00012840 00000000!         .long   hrt_torso4_anim
    3276 00012860 00000000!         .long   rzr_dizzy_anim
    3277 00012880 00000000!         .long   rzr_torso4_anim
    3278 000128a0 00000000!         .long   und_dizzy_anim
    3279 000128c0 00000000!         .long   und_torso4_anim
    3280 000128e0 00000000!          .long  yok_dizzy_anim
    3281 00012900 00000000!         .long   yok_torso4_anim
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   78

    3282 00012920 00000000!         .long   shn_dizzy_anim
    3283 00012940 00000000!         .long   shn_torso4_anim
    3284 00012960 00000000!         .long   bam_dizzy_anim
    3285 00012980 00000000!         .long   bam_torso4_anim
    3286 000129a0 00000000!         .long   dnk_dizzy_anim
    3287 000129c0 00000000!         .long   dnk_torso4_anim
    3288 000129e0 00000000          .long   0,0             ;7 spare
    3289 00012a20 00000000!         .long   lex_dizzy_anim
    3290 00012a40 00000000!         .long   lex_torso4_anim
    3291 00012a60 00000000          .long   0,0             ;9 Referee
    3292                    
    3293 00012aa0           running_addr
    3294 00012aa0 00000000!         .long   hrt_run2_anim   ;0 Bret Hart
    3295 00012ac0 00000000!         .long   hrt_torso4_anim
    3296 00012ae0 00000000!         .long   rzr_run2_anim   ;1 Razor Ramon
    3297 00012b00 00000000!         .long   rzr_torso4_anim
    3298 00012b20 00000000!         .long   und_run2_anim   ;2 Undertaker
    3299 00012b40 00000000!         .long   und_torso4_anim
    3300 00012b60 00000000!          .long  yok_run2_anim   ;3 Yokozuna
    3301 00012b80 00000000!         .long   yok_torso4_anim
    3302 00012ba0 00000000!         .long   shn_run2_anim   ;4 Shawn Michaels
    3303 00012bc0 00000000!         .long   shn_torso4_anim
    3304 00012be0 00000000!         .long   bam_run2_anim   ;5 Bam Bam
    3305 00012c00 00000000!         .long   bam_torso4_anim
    3306 00012c20 00000000!         .long   dnk_run2_anim   ;6 Doink
    3307 00012c40 00000000!         .long   dnk_torso4_anim
    3308 00012c60 00000000          .long   0,0             ;7 spare
    3309 00012ca0 00000000!         .long   lex_run2_anim   ;8 Lex Luger
    3310 00012cc0 00000000!         .long   lex_torso4_anim
    3311 00012ce0 00000000          .long   0,0             ;9 Referee
    3312                    
    3313 00012d20           clever_addr
    3314 00012d20 000134c0'         .long   hrt_clever_anim ;0 Bret Hart
    3315 00012d40 00000000!         .long   hrt_torso4_anim
    3316 00012d60 000135f0'         .long   rzr_clever_anim ;1 Razor Ramon
    3317 00012d80 00000000!         .long   rzr_torso4_anim
    3318 00012da0 00013780'         .long   und_clever_anim ;2 Undertaker
    3319 00012dc0 00000000!         .long   und_torso4_anim
    3320 00012de0 00013940'          .long  yok_clever_anim ;3 Yokozuna
    3321 00012e00 00000000!         .long   yok_torso4_anim
    3322 00012e20 00013ad0'         .long   shn_clever_anim ;4 Shawn Michaels
    3323 00012e40 00000000!         .long   shn_torso4_anim
    3324 00012e60 00013c60'         .long   bam_clever_anim ;5 Bam Bam
    3325 00012e80 00000000!         .long   bam_torso4_anim
    3326 00012ea0 00014b30'         .long   dnk_clever_anim ;6 Doink
    3327 00012ec0 00000000!         .long   dnk_torso4_anim
    3328 00012ee0 00000000          .long   0,0             ;7 spare
    3329 00012f20 00014ca0'         .long   lex_clever_anim ;8 Lex Luger
    3330 00012f40 00000000!         .long   lex_torso4_anim
    3331 00012f60 00000000          .long   0,0             ;9 Referee
    3332                    
    3333 00012fa0           waiting_addr
    3334 00012fa0 00013220'         .long   hrt_wait_anim   ;0 Bret Hart
    3335 00012fc0 00000000!         .long   hrt_torso4_anim
    3336 00012fe0 00013270'         .long   rzr_wait_anim   ;1 Razor Ramon
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   79

    3337 00013000 00000000!         .long   rzr_torso4_anim
    3338 00013020 000132b0'         .long   und_wait_anim   ;2 Undertaker
    3339 00013040 00000000!         .long   und_torso4_anim
    3340 00013060 00013300'          .long  yok_wait_anim   ;3 Yokozuna
    3341 00013080 00000000!         .long   yok_torso4_anim
    3342 000130a0 00013380'         .long   shn_wait_anim   ;4 Shawn Michaels
    3343 000130c0 00000000!         .long   shn_torso4_anim
    3344 000130e0 000133c0'         .long   bam_wait_anim   ;5 Bam Bam
    3345 00013100 00000000!         .long   bam_torso4_anim
    3346 00013120 00013440'         .long   dnk_wait_anim   ;6 Doink
    3347 00013140 00000000!         .long   dnk_torso4_anim
    3348 00013160 00000000          .long   0,0             ;7 spare
    3349 000131a0 00013480'         .long   lex_wait_anim   ;8 Lex Luger
    3350 000131c0 00000000!         .long   lex_torso4_anim
    3351 000131e0 00000000          .long   0,0             ;9 Referee
    3352                    
    3353                            .ref    B4RS4A
    3354                            .ref    Y4CO4D,Y4ST4Y
    3355                            .ref    D4CO4A
    3356                            .ref    U4CO4B
    3357                            .ref    S4CO4A
    3358                            .ref    R4CO4A
    3359                            .ref    L4CO4Z
    3360                            .ref    H4SL4C
    3361                            .ref    B4SW4B
    3362                    
    3363                            .ref    H4LD4A,R4LD4A,U4LD4A,Y4LD4A,S4LD4A
    3364                            .ref    B4RS4A,D4SQ4A,L4SW5A
    3365                    
    3366 00013220           hrt_wait_anim
    3367 00013220     800c          .WORD   ANI_XFLIP
    3368 00013230                   WL      100,H4LD4A+FR1
    3369 00013260     8049          .word   ANI_END
    3370 00013270           rzr_wait_anim
    3371 00013270                   WL      100,R4LD4A+FR1
    3372 000132a0     8049          .word   ANI_END
    3373 000132b0           und_wait_anim
    3374 000132b0     800c          .WORD   ANI_XFLIP
    3375 000132c0                   WL      100,U4LD4A+FR1
    3376 000132f0     8049          .word   ANI_END
    3377 00013300           yok_wait_anim
    3378 00013300                   WL      ANI_CODE,CREATE_FUJI
    3379 00013330     800c          .WORD   ANI_XFLIP
    3380 00013340                   WL      100,Y4ST4Y+FR2
    3381 00013370     8049          .word   ANI_END
    3382 00013380           shn_wait_anim
    3383 00013380                   WL      100,S4LD4A+FR1
    3384 000133b0     8049          .word   ANI_END
    3385 000133c0           bam_wait_anim
    3386 000133c0     8015          .WORD   ANI_OFFSET,-800,0,0
    3387 00013400                   WL      100,B4RS4A+FR1
    3388 00013430     8049          .word   ANI_END
    3389 00013440           dnk_wait_anim
    3390 00013440                   WL      100,D4SQ4A+FR1
    3391 00013470     8049          .word   ANI_END
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   80

    3392 00013480           lex_wait_anim
    3393 00013480                   WL      100,L4SW5A+FR2
    3394 000134b0     8049          .word   ANI_END
    3395                    
    3396 000134c0           hrt_clever_anim
    3397 000134c0                   WL      6,H4LD4A+FR1
    3398 000134f0                   WL      6,H4LD4A+FR2
    3399 00013520                   WL      6,H4LD4A+FR3
    3400 00013550                   WL      6,H4LD4A+FR4
    3401 00013580                   WL      6,H4LD4A+FR5
    3402 000135b0                   WL      6,H4LD4A+FR6
    3403 000135e0     8049          .word   ANI_END
    3404 000135f0           rzr_clever_anim
    3405 000135f0                   WL      6,R4LD4A+FR1
    3406 00013620                   WL      6,R4LD4A+FR2
    3407 00013650                   WL      6,R4LD4A+FR3
    3408 00013680                   WL      6,R4LD4A+FR4
    3409 000136b0                   WL      6,R4LD4A+FR5
    3410 000136e0                   WL      6,R4LD4A+FR6
    3411 00013710                   WL      6,R4LD4A+FR7
    3412 00013740                   WL      6,R4LD4A+FR2
    3413 00013770     8049          .word   ANI_END
    3414 00013780           und_clever_anim
    3415                    ;       .WORD   ANI_XFLIP
    3416 00013780                   WL      6,U4LD4A+FR1
    3417 000137b0                   WL      6,U4LD4A+FR2
    3418 000137e0                   WL      6,U4LD4A+FR3
    3419 00013810                   WL      6,U4LD4A+FR4
    3420 00013840                   WL      6,U4LD4A+FR5
    3421 00013870                   WL      6,U4LD4A+FR6
    3422 000138a0                   WL      6,U4LD4A+FR7
    3423 000138d0                   WL      6,U4LD4A+FR8
    3424 00013900                   WL      ANI_CODE,CREATE_URN
    3425 00013930     8049          .word   ANI_END
    3426 00013940           yok_clever_anim
    3427 00013940                   WL      ANI_CODE,DO_FUJI
    3428 00013970                   WL      20,Y4ST4Y+FR2
    3429 000139a0                   WL      5,Y4LD4A+FR1
    3430 000139d0                   WL      5,Y4LD4A+FR2
    3431 00013a00                   WL      5,Y4LD4A+FR3
    3432 00013a30                   WL      5,Y4LD4A+FR4
    3433 00013a60                   WL      5,Y4LD4A+FR5
    3434 00013a90                   WL      5,Y4LD4A+FR6
    3435 00013ac0     8049          .word   ANI_END
    3436 00013ad0           shn_clever_anim
    3437 00013ad0                   WL      6,S4LD4A+FR1
    3438 00013b00                   WL      6,S4LD4A+FR2
    3439 00013b30                   WL      6,S4LD4A+FR3
    3440 00013b60                   WL      6,S4LD4A+FR4
    3441 00013b90                   WL      6,S4LD4A+FR5
    3442 00013bc0                   WL      6,S4LD4A+FR6
    3443 00013bf0                   WL      45,S4LD4A+FR7
    3444 00013c20                   WL      6,S4LD4A+FR10
    3445 00013c50     8049          .word   ANI_END
    3446                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   81

    3447 00013c60           bam_clever_anim
    3448 00013c60     800c          .WORD   ANI_XFLIP
    3449 00013c70     8015          .WORD   ANI_OFFSET,800,0,0
    3450 00013cb0     8002          .word   ANI_SETMODE,MODE_NOSHADOW
    3451 00013cd0                   WL      ANI_CODE,BAM_RISE_SOUND
    3452 00013d00                   WL      6,B4RS4A+FR1
    3453 00013d30                   WL      6,B4RS4A+FR2
    3454 00013d60                   WL      6,B4RS4A+FR3
    3455 00013d90                   WL      6,B4RS4A+FR4
    3456 00013dc0     8002          .word   ANI_SETMODE,MODE_NORMAL
    3457 00013de0                   WL      6,B4RS4A+FR5
    3458 00013e10                   WL      6,B4RS4A+FR6
    3459                    
    3460                    ;Send smoke puffs off from bam bam!
    3461 00013e40                   WL      ANI_CODE,start_smoke
    3462                    
    3463 00013e70                   WL      4,B4SW4B+FR3
    3464 00013ea0                   WL      4,B4SW4B+FR4
    3465 00013ed0                   WL      4,B4SW4B+FR5
    3466 00013f00                   WL      4,B4SW4B+FR6
    3467 00013f30                   WL      4,B4SW4B+FR7
    3468 00013f60                   WL      4,B4SW4B+FR8
    3469                    
    3470 00013f90                   WL      4,B4SW4B+FR3
    3471 00013fc0                   WL      4,B4SW4B+FR4
    3472 00013ff0                   WL      4,B4SW4B+FR5
    3473 00014020                   WL      4,B4SW4B+FR6
    3474 00014050                   WL      4,B4SW4B+FR7
    3475 00014080                   WL      4,B4SW4B+FR8
    3476                    
    3477 000140b0                   WL      4,B4SW4B+FR3
    3478 000140e0                   WL      4,B4SW4B+FR4
    3479 00014110                   WL      4,B4SW4B+FR5
    3480 00014140                   WL      4,B4SW4B+FR6
    3481 00014170                   WL      4,B4SW4B+FR7
    3482 000141a0                   WL      4,B4SW4B+FR8
    3483                    
    3484 000141d0                   WL      ANI_CHANGEANIM,bam_stand4_anim
    3485                    
    3486 00014200           BAM_RISE_SOUND
    3487 00014200     09c0          movi    41h,a0
         00014210     0041  
    3488 00014220     0d5f          CALLA   triple_sound
         00014230 00000000! 
    3489 00014250     0960          RETS
    3490                    
    3491 00014260           start_smoke
    3492                    ;10% of time put smoke on bam bam
    3493 00014260     09c0          movi    100,a0
         00014270     0064  
    3494                            .ref    RNDPER
    3495 00014280     0d5f          calla   RNDPER
         00014290 00000000! 
    3496 000142b0     c208          jrls    sedmout
    3497 000142c0     4daa          move    a13,a10
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   82

    3498 000142d0                   CREATE0 body_smoke
    3499 00014340           sedmout
    3500 00014340     0960          rets
    3501                    
    3502                    *******************************
    3503                    * Smoke trail (Process)
    3504                    * A10=*wrestler proc
    3505                    
    3506 00014350           body_smoke
    3507                    
    3508 00014350     576b          clr     a11
    3509 00014360     186b          movk    3,a11
    3510 00014370           zrlllp  CREATE0 smokepuff
    3511                    ;Need an explosion sound
    3512 000143e0                   SLEEPK  3
    3513 00014420     102b          inc     a11
    3514 00014430     0b4b          cmpi    17,a11
         00014440     ffee  
    3515 00014450     c4f1          jrlt    zrlllp
    3516                    
    3517 00014460                   DIE
    3518                    
    3519                    *******************************
    3520                    * Smoke trail puff (Process)
    3521                    * A10=*wrestler proc
    3522                    
    3523 00014490           smokepuff
    3524                    
    3525 00014490     b543          move    *a10(OBJ_ZPOSINT),a3
         000144a0     0150  
    3526 000144b0     1860          movk    3,a0
    3527 000144c0     0d5f          calla   RNDRNG0
         000144d0 00000000! 
    3528                    ;       subk    2,a0
    3529 000144f0     4003          add     a0,a3                   ;-2 to 1
    3530                    ;       addk    16,a3
    3531 00014500     0ba3          ori     1000h,a3
         00014510 00001000  
    3532                    
    3533 00014530     1860          movk    3,a0
    3534 00014540     0d5f          calla   RNDRNG0
         00014550 00000000! 
    3535 00014570     24a0          sll     5,a0                    ;*32
    3536 00014580     0b20          addi    smoke_t,a0
         00014590 00000000! 
    3537 000145b0     8609          move    *a0,a9,L
    3538                    
    3539 000145c0     09e0          movi    30000h,a0
         000145d0 00030000  
    3540 000145f0     0d5f          calla   RNDRNG0
         00014600 00000000! 
    3541 00014620     0d00          subi    18000h,a0
         00014630 fffe7fff  
    3542 00014650     4c06          move    a0,a6
    3543                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   83

    3544                    ;       movi    [1,8000h],a6
    3545                    
    3546 00014660     09e0          movi    20000h,a0
         00014670 00020000  
    3547 00014690     0d5f          calla   RNDRNG0
         000146a0 00000000! 
    3548 000146c0     0b00          addi    6000h,a0
         000146d0     6000  
    3549 000146e0     03a0          neg     a0
    3550 000146f0     4c07          move    a0,a7
    3551                    ;       movi    [-2,0],a7
    3552                    
    3553 00014700     4d6e          move    a11,a14
    3554                    ;       sll     4,a14
    3555                    ;       addi    frjix_tbl,a14
    3556                    ;       move    *a14,a1
    3557                    
    3558                    
    3559 00014710     1bc0          movk    30,a0
    3560 00014720     0d5f          calla   RNDRNG0
         00014730 00000000! 
    3561 00014750     15e0          subk    15,a0
    3562 00014760     4c01          move    a0,a1
    3563                    
    3564 00014770     b540          move    *a10(OBJ_XPOSINT),a0
         00014780     0110  
    3565                    
    3566 00014790     b54e          move    *a10(OBJ_CONTROL),a14
         000147a0     0780  
    3567 000147b0     1f6e          btst    B_FLIPH,a14
    3568 000147c0     ca01          jrz     frjino_flip
    3569                    ;       neg     a6
    3570 000147d0     03a1          neg     a1
    3571 000147e0           frjino_flip
    3572                    
    3573 000147e0     4020          add     a1,a0
    3574 000147f0     2600          sll     16,a0                   ;X
    3575                    
    3576 00014800     4d6e          move    a11,a14
    3577 00014810     248e          sll     4,a14
    3578 00014820     0b2e          addi    frjiy_tbl,a14
         00014830 00014a20' 
    3579 00014850     85ce          move    *a14,a14
    3580                    
    3581 00014860     09c2          movi    Y_SCALE_MULTIPLIER,a2
         00014870     3566  
    3582 00014880     b541          move    *a10(OBJ_ZPOSINT),a1
         00014890     0150  
    3583 000148a0     5e41          mpyu    a2,a1
    3584 000148b0     b542          move    *a10(OBJ_YPOSINT),a2
         000148c0     0130  
    3585 000148d0     45c2          sub     a14,a2
    3586 000148e0     2602          sll     16,a2
    3587 000148f0     4441          sub     a2,a1
    3588                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   84

    3589 00014900     09e2          movi    CLDB1ORNG,a2
         00014910 00000000! 
    3590 00014930     09e4          movi    DMAWNZ|M_3D|M_NOCOLL,a4
         00014940 00008902  
    3591 00014960     09c5          movi    CLSDEAD,a5
         00014970     2000  
    3592                    
    3593 00014980     0d5f          calla   BEGINOBJ
         00014990 00000000! 
    3594                    
    3595 000149b0                   SLEEPK  3
    3596                    
    3597 000149f0     c080          jauc    FRQDELDIE
         00014a00 00000000! 
    3598                    
    3599                            .ref    smoke_t
    3600                    
    3601                    ;frjix_tbl      .word   -14,-3,10,25,30,31,30,39,26,-3,17,32,53,54,41,32,45
    3602 00014a20     ffae  frjiy_tbl       .word   -82,-85,-88,-91,-94,-97,-100,-83,-85,-87,-89,-91,-93,-95
    3603 00014b00     ff9f          .word   -97,-99,-99
    3604                    
    3605 00014b30           dnk_clever_anim
    3606 00014b30     800c          .WORD   ANI_XFLIP
    3607 00014b40                   WL      6,D4SQ4A+FR1
    3608 00014b70                   WL      6,D4SQ4A+FR2
    3609 00014ba0                   WL      6,D4SQ4A+FR3
    3610 00014bd0                   WL      ANI_CODE,CREATE_WATER
    3611 00014c00                   WL      5,D4SQ4A+FR3
    3612 00014c30                   WL      6,D4SQ4A+FR2
    3613 00014c60                   WL      6,D4SQ4A+FR1
    3614 00014c90     8049          .word   ANI_END
    3615                    
    3616 00014ca0           lex_clever_anim
    3617 00014ca0                   WL      6,L4SW5A+FR2
    3618 00014cd0                   WL      6,L4SW5A+FR3
    3619 00014d00                   WL      6,L4SW5A+FR4
    3620 00014d30                   WL      6,L4SW5A+FR5
    3621 00014d60                   WL      6,L4SW5A+FR6
    3622 00014d90                   WL      6,L4SW5A+FR7
    3623 00014dc0                   WL      6,L4SW5A+FR8
    3624 00014df0                   WL      6,L4SW5A+FR9
    3625 00014e20                   WL      6,L4SW5A+FR10
    3626 00014e50                   WL      2,L4SW5A+FR9
    3627 00014e80                   WL      2,L4SW5A+FR10
    3628 00014eb0                   WL      2,L4SW5A+FR9
    3629 00014ee0                   WL      2,L4SW5A+FR10
    3630 00014f10                   WL      2,L4SW5A+FR9
    3631 00014f40                   WL      2,L4SW5A+FR10
    3632 00014f70                   WL      2,L4SW5A+FR9
    3633 00014fa0                   WL      2,L4SW5A+FR10
    3634 00014fd0                   WL      2,L4SW5A+FR9
    3635 00015000                   WL      2,L4SW5A+FR10
    3636 00015030                   WL      2,L4SW5A+FR9
    3637 00015060                   WL      2,L4SW5A+FR10
    3638 00015090                   WL      2,L4SW5A+FR9
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   85

    3639 000150c0                   WL      2,L4SW5A+FR10
    3640 000150f0                   WL      2,L4SW5A+FR9
    3641 00015120                   WL      2,L4SW5A+FR10
    3642 00015150                   WL      2,L4SW5A+FR9
    3643 00015180                   WL      2,L4SW5A+FR10
    3644 000151b0                   WL      2,L4SW5A+FR9
    3645 000151e0                   WL      2,L4SW5A+FR10
    3646 00015210                   WL      2,L4SW5A+FR9
    3647 00015240                   WL      2,L4SW5A+FR10
    3648 00015270                   WL      2,L4SW5A+FR9
    3649 000152a0                   WL      2,L4SW5A+FR10
    3650 000152d0                   WL      2,L4SW5A+FR9
    3651 00015300                   WL      2,L4SW5A+FR10
    3652 00015330                   WL      2,L4SW5A+FR9
    3653 00015360                   WL      2,L4SW5A+FR10
    3654 00015390                   WL      6,L4SW5A+FR9
    3655 000153c0                   WL      6,L4SW5A+FR8
    3656 000153f0                   WL      6,L4SW5A+FR7
    3657 00015420                   WL      6,L4SW5A+FR6
    3658 00015450                   WL      6,L4SW5A+FR5
    3659 00015480                   WL      6,L4SW5A+FR4
    3660 000154b0                   WL      6,L4SW5A+FR3
    3661 000154e0                   WL      6,L4SW5A+FR2
    3662                    
    3663 00015510     8049          .word   ANI_END
    3664                    
    3665 00015520           hrt_taunt4_anim
    3666 00015520                   WL      5,H4SL4C+FR1
    3667 00015550                   WL      5,H4SL4C+FR2
    3668 00015580                   WL      5,H4SL4C+FR3
    3669                    
    3670 000155b0           BRT_TAUNT_LOOP
    3671 000155b0                   WL      5,H4SL4C+FR4
    3672 000155e0                   WL      5,H4SL4C+FR5
    3673 00015610                   WL      5,H4SL4C+FR6
    3674 00015640                   WL      5,H4SL4C+FR5
    3675 00015670                   WL      5,H4SL4C+FR4
    3676 000156a0                   WL      5,H4SL4C+FR7
    3677 000156d0                   WL      5,H4SL4C+FR8
    3678 00015700                   WL      5,H4SL4C+FR9
    3679 00015730                   WL      5,H4SL4C+FR8
    3680 00015760                   WL      5,H4SL4C+FR7
    3681                    
    3682 00015790                   WL      ANI_GOTO,BRT_TAUNT_LOOP
    3683                    
    3684 000157c0           rzr_taunt4_anim
    3685 000157c0                   WL      4,R4CO4A+FR1
    3686 000157f0                   WL      4,R4CO4A+FR2
    3687 00015820                   WL      4,R4CO4A+FR3
    3688 00015850                   WL      4,R4CO4A+FR4
    3689 00015880           RZR_TAUNT_LOOP
    3690 00015880                   WL      15,R4CO4A+FR5
    3691 000158b0                   WL      4,R4CO4A+FR6
    3692 000158e0                   WL      4,R4CO4A+FR7
    3693 00015910                   WL      4,R4CO4A+FR8
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   86

    3694 00015940                   WL      4,R4CO4A+FR7
    3695 00015970                   WL      4,R4CO4A+FR6
    3696 000159a0                   WL      4,R4CO4A+FR5
    3697 000159d0                   WL      4,R4CO4A+FR6
    3698 00015a00                   WL      4,R4CO4A+FR7
    3699 00015a30                   WL      4,R4CO4A+FR8
    3700 00015a60                   WL      4,R4CO4A+FR7
    3701 00015a90                   WL      4,R4CO4A+FR6
    3702                    
    3703 00015ac0                   WL      ANI_GOTO,RZR_TAUNT_LOOP
    3704                    
    3705 00015af0           und_taunt4_anim
    3706 00015af0                   WL      6,U4CO4B+FR1
    3707 00015b20                   WL      6,U4CO4B+FR2
    3708 00015b50           UND_TAUNT_LOOP
    3709 00015b50                   WL      15,U4CO4B+FR3
    3710 00015b80                   WL      6,U4CO4B+FR4
    3711 00015bb0                   WL      6,U4CO4B+FR5
    3712 00015be0                   WL      6,U4CO4B+FR6
    3713 00015c10                   WL      6,U4CO4B+FR7
    3714 00015c40                   WL      6,U4CO4B+FR8
    3715 00015c70                   WL      6,U4CO4B+FR7
    3716 00015ca0                   WL      6,U4CO4B+FR6
    3717 00015cd0                   WL      6,U4CO4B+FR5
    3718 00015d00                   WL      6,U4CO4B+FR4
    3719 00015d30                   WL      ANI_GOTO,UND_TAUNT_LOOP
    3720                    
    3721 00015d60           yok_taunt4_anim
    3722 00015d60                   WL      4,Y4CO4D+FR1
    3723 00015d90                   WL      4,Y4CO4D+FR2
    3724 00015dc0           YOK_TAUNT_LOOP
    3725 00015dc0                   WL      5,Y4CO4D+FR3
    3726 00015df0                   WL      5,Y4CO4D+FR4
    3727 00015e20                   WL      5,Y4CO4D+FR5
    3728 00015e50                   WL      5,Y4CO4D+FR6
    3729 00015e80                   WL      5,Y4CO4D+FR7
    3730 00015eb0                   WL      5,Y4CO4D+FR8
    3731 00015ee0                   WL      ANI_GOTO,YOK_TAUNT_LOOP
    3732                    
    3733 00015f10           shn_taunt4_anim
    3734 00015f10                   WL      4,S4CO4A+FR1
    3735 00015f40                   WL      4,S4CO4A+FR2
    3736 00015f70                   WL      4,S4CO4A+FR3
    3737 00015fa0           SHN_TAUNT_LOOP
    3738 00015fa0                   WL      4,S4CO4A+FR4
    3739 00015fd0                   WL      4,S4CO4A+FR5
    3740 00016000                   WL      4,S4CO4A+FR6
    3741 00016030                   WL      4,S4CO4A+FR7
    3742 00016060                   WL      4,S4CO4A+FR8
    3743 00016090                   WL      4,S4CO4A+FR7
    3744 000160c0                   WL      4,S4CO4A+FR6
    3745 000160f0                   WL      4,S4CO4A+FR5
    3746 00016120                   WL      4,S4CO4A+FR4
    3747 00016150                   WL      4,S4CO4A+FR3
    3748 00016180                   WL      4,S4CO4A+FR2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   87

    3749 000161b0                   WL      4,S4CO4A+FR3
    3750 000161e0                   WL      ANI_GOTO,SHN_TAUNT_LOOP
    3751                    
    3752 00016210           bam_taunt4_anim
    3753                    ;       WL      ANI_CODE,BAM_TAUNT_SOUND
    3754 00016210           bam_taunt4_anim_no_fx
    3755 00016210                   WL      4,B4SW4B+FR3
    3756 00016240                   WL      4,B4SW4B+FR4
    3757 00016270                   WL      4,B4SW4B+FR5
    3758 000162a0                   WL      4,B4SW4B+FR6
    3759 000162d0                   WL      4,B4SW4B+FR7
    3760 00016300                   WL      4,B4SW4B+FR8
    3761 00016330                   WL      ANI_GOTO,bam_taunt4_anim_no_fx
    3762                    
    3763                    ;BAM_TAUNT_SOUND
    3764                    ;       movi    42h,a0
    3765                    ;       CALLA   triple_sound
    3766                    ;       RETS
    3767                    
    3768 00016360           dnk_taunt4_anim
    3769 00016360                   WL      5,D4CO4A+FR1
    3770 00016390                   WL      5,D4CO4A+FR2
    3771 000163c0                   WL      5,D4CO4A+FR3
    3772 000163f0                   WL      5,D4CO4A+FR4
    3773 00016420                   WL      5,D4CO4A+FR5
    3774 00016450                   WL      5,D4CO4A+FR6
    3775 00016480           DNK_TAUNT_LOOP
    3776 00016480                   WL      5,D4CO4A+FR5
    3777 000164b0                   WL      5,D4CO4A+FR4
    3778 000164e0                   WL      5,D4CO4A+FR3
    3779 00016510                   WL      5,D4CO4A+FR4
    3780 00016540                   WL      5,D4CO4A+FR5
    3781 00016570                   WL      5,D4CO4A+FR6
    3782 000165a0                   WL      ANI_GOTO,DNK_TAUNT_LOOP
    3783                    
    3784 000165d0           lex_taunt4_anim
    3785 000165d0           LEX_TAUNT_LOOP
    3786 000165d0                   WL      5,L4CO4Z+FR1
    3787 00016600                   WL      5,L4CO4Z+FR2
    3788 00016630                   WL      5,L4CO4Z+FR3
    3789 00016660                   WL      5,L4CO4Z+FR4
    3790 00016690                   WL      5,L4CO4Z+FR5
    3791 000166c0                   WL      5,L4CO4Z+FR6
    3792 000166f0                   WL      5,L4CO4Z+FR7
    3793 00016720                   WL      5,L4CO4Z+FR8
    3794 00016750                   WL      5,L4CO4Z+FR9
    3795                    
    3796 00016780                   WL      5,L4CO4Z+FR8
    3797 000167b0                   WL      5,L4CO4Z+FR7
    3798 000167e0                   WL      5,L4CO4Z+FR6
    3799 00016810                   WL      5,L4CO4Z+FR5
    3800 00016840                   WL      5,L4CO4Z+FR4
    3801 00016870                   WL      5,L4CO4Z+FR3
    3802 000168a0                   WL      5,L4CO4Z+FR2
    3803 000168d0                   WL      ANI_GOTO,LEX_TAUNT_LOOP
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   88

    3804                    
    3805                    
    3806 00016900           CREATE_FUJI
    3807 00016900     098f          MMTM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00016910     eff2  
    3808 00016920     5708          CLR     A8
    3809 00016930     05a1          MOVE    @NUM_OPPS,A1
         00016940 00000340- 
    3810 00016960     1421          DEC     A1
    3811 00016970     cb3a          JRNZ    NO_CREATE_FUJI
    3812                    
    3813 00016980     b7a0          MOVE    *A13(OBJ_XPOS),A0,L
         00016990     0100  
    3814 000169a0     0b20          ADDI    [30,0],A0
         000169b0 001e0000  
    3815 000169d0     b20d          MOVE    A0,*A13(OBJ_XPOS),L
         000169e0     0100  
    3816 000169f0     0d00          SUBI    [80,0],A0
         00016a00 ffafffff  
    3817 00016a20     09e1          MOVI    [240,0],A1
         00016a30 00f00000  
    3818 00016a50     b7a3          MOVE    *A13(OBJ_ZPOS),A3,L
         00016a60     0140  
    3819 00016a70     2e03          SRL     16,A3
    3820 00016a80     1423          DEC     A3
    3821 00016a90     0ba3          ORI     1000H,A3
         00016aa0 00001000  
    3822 00016ac0     09e2          MOVI    shadow,A2
         00016ad0 00000000! 
    3823 00016af0     09e4          MOVI    DMAWNZ,A4
         00016b00 00008002  
    3824 00016b20     56a5          CLR     A5
    3825 00016b30     56c6          CLR     A6
    3826 00016b40     56e7          CLR     A7
    3827 00016b50     0d5f          CALLA   BEGINOBJ
         00016b60 00000000! 
    3828                    
    3829 00016b80     b7a0          MOVE    *A13(OBJ_XPOS),A0,L
         00016b90     0100  
    3830 00016ba0     0d00          SUBI    [80,0],A0
         00016bb0 ffafffff  
    3831 00016bd0     09e1          MOVI    [240,0],A1
         00016be0 00f00000  
    3832 00016c00     b7a3          MOVE    *A13(OBJ_ZPOS),A3,L
         00016c10     0140  
    3833 00016c20     2e03          SRL     16,A3
    3834 00016c30     0ba3          ORI     1000H,A3
         00016c40 00001000  
    3835                    
    3836 00016c60     09e2          MOVI    FUJI01,A2
         00016c70 00000010" 
    3837                    
    3838 00016c90     09e4          movi    DMAWNZ,a4       ;DMA flags
         00016ca0 00008002  
    3839 00016cc0     56a5          CLR     A5
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   89

    3840 00016cd0     56c6          CLR     A6
    3841 00016ce0     56e7          CLR     A7
    3842 00016cf0     0d5f          CALLA   BEGINOBJ
         00016d00 00000000! 
    3843 00016d20           NO_CREATE_FUJI
    3844 00016d20     0788          MOVE    A8,@FUJI_OBJ,L
         00016d30 000003a0- 
    3845 00016d50     09af          MMFM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00016d60     4ff7  
    3846 00016d70     0960          RETS
    3847                    
    3848 00016d80           DO_FUJI
    3849 00016d80     098f          MMTM    SP,A1,A7,A8,A9
         00016d90     41c0  
    3850 00016da0     07a8          MOVE    @FUJI_OBJ,A8,L
         00016db0 000003a0- 
    3851 00016dd0     ca0a          JRZ     MORE_THAN_ONE_OPP
    3852 00016de0     09e9          MOVI    FUJI_ANIM,A9
         00016df0 00016f90' 
    3853 00016e10                   CREATE0 ANIMATE_OBJ
    3854 00016e80           MORE_THAN_ONE_OPP
    3855 00016e80     09af          MMFM    SP,A1,A7,A8,A9
         00016e90     0382  
    3856 00016ea0     0960          RETS
    3857                    
    3858 00016eb0           ANIMATE_OBJ
    3859 00016eb0     4d21          MOVE    A9,A1
    3860 00016ec0     0d5f          CALLA   setup_back_anim
         00016ed0 00006b00' 
    3861 00016ef0                   JSRP    ANIM_CROWD
    3862 00016f60                   DIE
    3863                    
    3864 00016f90           FUJI_ANIM
    3865 00016f90                   WL      7,FUJI01
    3866 00016fc0                   WL      7,FUJI02
    3867 00016ff0                   WL      7,FUJI03
    3868 00017020                   WL      60,FUJI04
    3869 00017050                   WL      7,FUJI03
    3870 00017080                   WL      7,FUJI02
    3871 000170b0                   WL      7,FUJI01
    3872 000170e0     8002          .WORD   CANI_END
    3873                    
    3874 000170f0            SUBR   CREATE_URN2
    3875 000170f0     098f          MMTM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00017100     eff2  
    3876 00017110     b7a0          MOVE    *A13(OBJ_XPOS),A0,L
         00017120     0100  
    3877 00017130     09e1          MOVI    [026H,0],A1
         00017140 00260000  
    3878 00017160     b5a3          MOVE    *A13(OBJ_CONTROL),A3
         00017170     0780  
    3879 00017180     0b83          ANDI    M_FLIPH,A3
         00017190 ffffffef  
    3880 000171b0     cb01          JRNZ    NO_NEG_X_OFF
    3881 000171c0     03a1          NEG     A1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   90

    3882 000171d0           NO_NEG_X_OFF
    3883 000171d0     4020          ADD     A1,A0
    3884 000171e0     09c3          movi    Y_SCALE_MULTIPLIER,a3
         000171f0     3566  
    3885 00017200     b5a1          move    *a13(OBJ_ZPOSINT),a1
         00017210     0150  
    3886 00017220     5e61          mpyu    a3,a1
    3887 00017230     0d01          SUBI    [0C0H,0],A1
         00017240 ff3fffff  
    3888 00017260     c00c          JRUC    RE_ENTER_URN_CREATE
    3889                    
    3890 00017270            SUBRP  CREATE_URN
    3891 00017270     098f          MMTM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00017280     eff2  
    3892 00017290     b7a0          MOVE    *A13(OBJ_XPOS),A0,L
         000172a0     0100  
    3893 000172b0     09c3          movi    Y_SCALE_MULTIPLIER,a3
         000172c0     3566  
    3894 000172d0     b5a1          move    *a13(OBJ_ZPOSINT),a1
         000172e0     0150  
    3895 000172f0     5e61          mpyu    a3,a1
    3896 00017300     0d01          SUBI    [5aH,0],A1
         00017310 ffa5ffff  
    3897 00017330           RE_ENTER_URN_CREATE
    3898 00017330     b7a3          MOVE    *A13(OBJ_ZPOS),A3,L
         00017340     0140  
    3899 00017350     2e03          SRL     16,A3
    3900 00017360     1023          INC     A3
    3901 00017370     0ba3          ORI     1000H,A3
         00017380 00001000  
    3902 000173a0     09e2          MOVI    BLUURN01,A2
         000173b0 000009b0" 
    3903 000173d0     09e4          MOVI    DMAWNZ,A4
         000173e0 00008002  
    3904 00017400     56a5          CLR     A5
    3905 00017410     56c6          CLR     A6
    3906 00017420     56e7          CLR     A7
    3907 00017430     0d5f          CALLA   BEGINOBJ
         00017440 00000000! 
    3908 00017460     09e9          MOVI    URN_ANIM,A9
         00017470 00017590' 
    3909 00017490                   CREATE0 ANIMATE_OBJ
    3910 00017500     09af          MMFM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         00017510     4ff7  
    3911 00017520     0960          RETS
    3912                    
    3913 00017530           URN_SOUND
    3914 00017530     09c0          movi    40h,a0
         00017540     0040  
    3915 00017550     0d5f          CALLA   triple_sound
         00017560 00000000! 
    3916 00017580     0960          RETS
    3917                    
    3918 00017590           URN_ANIM
    3919 00017590                   WL      CANI_CODE,URN_SOUND
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   91

    3920 000175c0                   WL      6,BLUURN01
    3921 000175f0                   WL      6,BLUURN02
    3922 00017620                   WL      6,BLUURN03
    3923 00017650                   WL      6,BLUURN04
    3924 00017680                   WL      6,BLUURN05
    3925 000176b0     8002          .WORD   CANI_END
    3926                    
    3927 000176c0           CREATE_WATER
    3928 000176c0     098f          MMTM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         000176d0     eff2  
    3929 000176e0     b7a0          MOVE    *A13(OBJ_XPOS),A0,L
         000176f0     0100  
    3930 00017700     0d00          SUBI    [10,0],A0
         00017710 fff5ffff  
    3931 00017730     09c3          movi    Y_SCALE_MULTIPLIER,a3
         00017740     3566  
    3932 00017750     b5a1          move    *a13(OBJ_ZPOSINT),a1
         00017760     0150  
    3933 00017770     5e61          mpyu    a3,a1
    3934 00017780     0d01          SUBI    [58H,0],A1
         00017790 ffa7ffff  
    3935                    
    3936 000177b0     b7a3          MOVE    *A13(OBJ_ZPOS),A3,L
         000177c0     0140  
    3937 000177d0     2e03          SRL     16,A3
    3938 000177e0     1023          INC     A3
    3939 000177f0     0ba3          ORI     1000H,A3
         00017800 00001000  
    3940 00017820     09e2          MOVI    WATER01,A2
         00017830 00000390" 
    3941 00017850     09e4          MOVI    DMAWNZ,A4
         00017860 00008002  
    3942 00017880     56a5          CLR     A5
    3943 00017890     56c6          CLR     A6
    3944 000178a0     56e7          CLR     A7
    3945 000178b0     0d5f          CALLA   BEGINOBJ
         000178c0 00000000! 
    3946 000178e0     09e9          MOVI    WATER_ANIM,A9
         000178f0 000179e0' 
    3947 00017910                   CREATE0 ANIMATE_OBJ
    3948 00017980     b9a0          MOVE    *A13(PLYRNUM),*A0(PDATA+UNUSED)
         00017990     0580  
         000179a0     0170  
    3949 000179b0     09af          MMFM    SP,A0,A1,A2,A4,A5,A6,A7,A8,A9,A10,A11,A14
         000179c0     4ff7  
    3950 000179d0     0960          RETS
    3951                    
    3952 000179e0           WATER_ANIM
    3953 000179e0                   WL      CANI_CODE,WATER_SOUND
    3954 00017a10                   WL      4,WATER01
    3955 00017a40                   WL      4,WATER02
    3956 00017a70                   WL      CANI_CODE,START_WATER
    3957 00017aa0                   WL      15,WATER03
    3958 00017ad0                   WL      CANI_CODE,STOP_WATER
    3959 00017b00                   WL      4,WATER04
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   92

    3960 00017b30                   WL      4,WATER05
    3961 00017b60                   WL      4,WATER06
    3962 00017b90                   WL      4,WATER07
    3963 00017bc0                   WL      CANI_CODE,KILL_WATER
    3964 00017bf0     8002          .WORD   CANI_END
    3965                    
    3966 00017c00           KILL_WATER
    3967 00017c00     09c1          movi    -400,a1
         00017c10     fe70  
    3968 00017c20     b028          MOVE    A1,*A8(OXPOS)
         00017c30     0090  
    3969 00017c40     0960          rets
    3970                    
    3971 00017c50           START_WATER
    3972 00017c50     09c1          MOVI    WATER_PID,A1
         00017c60     0134  
    3973 00017c70     b5a2          MOVE    *A13(PDATA+UNUSED),A2
         00017c80     0170  
    3974 00017c90     1422          DEC     A2
    3975 00017ca0     4041          ADD     A2,A1
    3976 00017cb0     09e7          MOVI    MOVE_WATER,A7
         00017cc0 00017d90' 
    3977 00017ce0     b709          MOVE    *A8(OXVAL),A9,L
         00017cf0     0080  
    3978 00017d00     0d09          SUBI    [240H,0],A9
         00017d10 fdbfffff  
    3979 00017d30     09c5          MOVI    15,A5
         00017d40     000f  
    3980 00017d50     58a9          DIVS    A5,A9
    3981 00017d60     c080          JAUC    GETPRC
         00017d70 00000000! 
    3982                    
    3983 00017d90           MOVE_WATER
    3984 00017d90     b701          MOVE    *A8(OXVAL),A1,L
         00017da0     0080  
    3985 00017db0     4521          SUB     A9,A1
    3986 00017dc0     b228          MOVE    A1,*A8(OXVAL),L
         00017dd0     0080  
    3987 00017de0                   SLOOP   1,MOVE_WATER
    3988                    
    3989 00017e50           STOP_WATER
    3990 00017e50     09c0          MOVI    WATER_PID,A0
         00017e60     0134  
    3991 00017e70     b5a2          MOVE    *A13(PDATA+UNUSED),A2
         00017e80     0170  
    3992 00017e90     1422          DEC     A2
    3993 00017ea0     4040          ADD     A2,A0
    3994 00017eb0     4c01          MOVE    A0,A1
    3995 00017ec0     0d5f          CALLA   KILALL
         00017ed0 00000000! 
    3996 00017ef0     0960          RETS
    3997                    
    3998 00017f00           WATER_SOUND
    3999 00017f00     09c0          movi    3fh,a0
         00017f10     003f  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   93

    4000 00017f20     0d5f          CALLA   triple_sound
         00017f30 00000000! 
    4001 00017f50     0960          RETS
    4002                    
    4003                            .if 0
    4004                    ;JOY1 DOWN + PUNCH + BLOCK + SUPER PUNCH
    4005                    GETUP_METER_POWER1      .EQU    0008DH  
    4006                    ;JOY2 DOWN + PUNCH + BLOCK + SUPER PUNCH
    4007                    GETUP_METER_POWER2      .EQU    08D00H  
    4008                    ;JOY1 UP + PUNCH + BLOCK + SUPER PUNCH
    4009                    NAMES_POWER1_B          .EQU    0008EH  
    4010                    ;JOY2 UP + PUNCH + BLOCK + SUPER PUNCH
    4011                    NAMES_POWER2_B          .EQU    08E00H  
    4012                    ;JOY1 LEFT + PUNCH + BLOCK + JOY2 LEFT + PUNCH + BLOCK
    4013                    BONUS_POWER_B           .EQU    0CBCBH  
    4014                    
    4015                    LOOK_FOR_POWERUPS
    4016                            CLR     A2
    4017                            MOVE    A2,@NAMES_POWER1
    4018                            MOVE    A2,@NAMES_POWER2
    4019                    
    4020                            .if DEBUG
    4021                            movk    1,a2
    4022                            .endif
    4023                            MOVE    A2,@GETUP_POWER
    4024                    
    4025                            MOVK    16,A2
    4026                            MOVE    A2,@BONUS_POWER
    4027                    
    4028                            MOVE    @SWITCH,A0
    4029                            MOVE    A0,A1
    4030                            ANDI    0FFH,A1
    4031                            CMPI    GETUP_METER_POWER1,A1
    4032                            JRNE    NO_GETUP_P1
    4033                            MOVK    1,A2
    4034                            MOVE    A2,@GETUP_POWER
    4035                    NO_GETUP_P1
    4036                            MOVE    A0,A1
    4037                            ANDI    0FF00H,A1
    4038                            CMPI    GETUP_METER_POWER2,A1
    4039                            JRNE    NO_GETUP_P2
    4040                            MOVK    1,A2
    4041                            MOVE    A2,@GETUP_POWER
    4042                    NO_GETUP_P2
    4043                            MOVE    A0,A1
    4044                            ANDI    0FFH,A1
    4045                            CMPI    NAMES_POWER1_B,A1
    4046                            JRNE    NO_NAMES_P1
    4047                            MOVK    1,A2
    4048                            MOVE    A2,@NAMES_POWER1
    4049                    NO_NAMES_P1
    4050                            MOVE    A0,A1
    4051                            ANDI    0FF00H,A1
    4052                            CMPI    NAMES_POWER2_B,A1
    4053                            JRNE    NO_NAMES_P2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   94

    4054                            MOVK    1,A2
    4055                            MOVE    A2,@NAMES_POWER2
    4056                    NO_NAMES_P2
    4057                            MOVE    @PSTATUS,A2
    4058                            CMPI    3,A2
    4059                            JRNE    NO_ALLOW_BONUS_POWER
    4060                            MOVE    A0,A1
    4061                            SLL     16,A1
    4062                            SRL     16,A1
    4063                            CMPI    BONUS_POWER_B,A1
    4064                            JRNE    NO_ALLOW_BONUS_POWER
    4065                            MOVK    1,A2
    4066                            MOVE    A2,@BONUS_POWER
    4067                    NO_ALLOW_BONUS_POWER
    4068                            RETS
    4069                    
    4070                            .endif
    4071                    
    4072                    
    4073              0020  BLOCK_BUTT      .EQU    20H
    4074                    
    4075 00017f60           LOOK_FOR_PALS
    4076 00017f60     574a          CLR     A10
    4077 00017f70     058a          MOVE    A10,@WHICH_SKIRT_PAL
         00017f80 00000000! 
    4078 00017fa0     09c8          MOVI    P_DELAY+10,A8
         00017fb0     001e  
    4079 00017fc0     07a0          move    @_switch_addr,a0,L
         00017fd0 00000000! 
    4080 00017ff0     8400          move    *a0,a0
    4081 00018000     0b80          ANDI    BLOCK_BUTT,A0
         00018010 ffffffdf  
    4082 00018030     ca11          JRZ     CHECK_BUT_UP
    4083                    
    4084 00018040           CHECK_BUT_DOWN
    4085 00018040                   SLEEPK  1
    4086 00018080     1428          DEC     A8
    4087 00018090     07a0          move    @_switch_addr,a0,L
         000180a0 00000000! 
    4088 000180c0     8400          move    *a0,a0
    4089 000180d0     0b80          ANDI    BLOCK_BUTT,A0
         000180e0 ffffffdf  
    4090 00018100     ca03          JRZ     CHECK_BUT_UP_ADD
    4091 00018110     4d08          MOVE    A8,A8
    4092 00018120     c1f1          JRP     CHECK_BUT_DOWN
    4093 00018130     c010          JRUC    EXIT_LOOK_FOR_PALS
    4094                    
    4095 00018140           CHECK_BUT_UP_ADD
    4096 00018140     102a          INC     A10
    4097 00018150           CHECK_BUT_UP
    4098 00018150                   SLEEPK  1
    4099 00018190     1428          DEC     A8
    4100 000181a0     07a0          move    @_switch_addr,a0,L
         000181b0 00000000! 
    4101 000181d0     8400          move    *a0,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   95

    4102 000181e0     0b80          ANDI    BLOCK_BUTT,A0
         000181f0 ffffffdf  
    4103 00018210     cbe2          JRNZ    CHECK_BUT_DOWN
    4104 00018220     4d08          MOVE    A8,A8
    4105 00018230     c1f1          JRP     CHECK_BUT_UP
    4106 00018240           EXIT_LOOK_FOR_PALS
    4107 00018240     0b8a          ANDI    7,A10
         00018250 fffffff8  
    4108 00018270     248a          SLL     4,A10
    4109 00018280     0b2a          ADDI    WHICH_SKIRT_PALLETE,A10
         00018290 00018320' 
    4110 000182b0     8540          MOVE    *A10,A0
    4111 000182c0     0580          MOVE    A0,@WHICH_SKIRT_PAL
         000182d0 00000000! 
    4112 000182f0                   DIE
    4113                    
    4114 00018320           WHICH_SKIRT_PALLETE
    4115 00018320     0000          .WORD   0,0,0
    4116 00018350     0005          .WORD   5,7,2,5,1
    4117                    
    4118                    
    4119                    *****************************************************************************
    4120                    *
    4121                    * a1 is a progression table entry.  scramble it.
    4122                    * a10 is the pointer to the current table entry, which should be held in a1.
    4123                    *
    4124                    * Rules:
    4125                    * - On the first 1v2 match, don't choose a drone that matches player.
    4126                    * - Ditto for first 1v3 match. (exception:  the 1 in 32 doinks can
    4127                    *   happen even if the human is doink.)
    4128                    * - On any 1v2+ match, don't choose any drone that was used as a drone in
    4129                    *   the previous fight.
    4130                    * - On the final battle, generate a unique lineup, and put the first three
    4131                    *   guys in as starters.  Then initialize all the special data for that match.
    4132                    *
    4133                    
    4134 000183a0            SUBR   scramble_table_entry
    4135                    
    4136 000183a0                   PUSH    a0,a2,a3,a4,a5,a6,a7,a8
    4137                    
    4138                            ;figure out who our human is, and put his wrestlernum in a6
    4139                            ;if we're in attract mode (PSTATUS==0), look in index1.
    4140 000183c0     05ae          move    @PSTATUS,a14
         000183d0 00000000! 
    4141 000183f0     05a6          move    @index2,a6
         00018400 00000000! 
    4142 00018420     1fce          btst    1,a14
    4143 00018430     cb03          jrnz    miwepset
    4144 00018440     05a6          move    @index1,a6
         00018450 00000000! 
    4145 00018470           miwepset
    4146                    
    4147                            ;put the count in a2
    4148 00018470     4c22          move    a1,a2
    4149 00018480     2d02          srl     24,a2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   96

    4150 00018490     0b42          cmpi    3,a2
         000184a0     fffc  
    4151 000184b0     cb15          jrne    miwebegin
    4152                    
    4153                            ;it's three guys.  is it the final match?
    4154                            ; (we can't use is_final_match because CURRENT_LADDER
    4155                            ; hasn't been incremented yet.)
    4156 000184c0     05ae          move    @belt_type,a14
         000184d0 00000000! 
    4157 000184f0     ca07          jrz     miwenotfin
    4158                    
    4159 00018500     07ae          move    @CURRENT_LADDER,a14,L
         00018510 00000020- 
    4160 00018530     0b6e          cmpi    LADDER+((FINAL_BATTLE-2)*20h),a14
         00018540 fffffeff- 
    4161 00018560     ca41          jreq    miwefinal_match
    4162                    
    4163 00018570           miwenotfin      ;no.  one time in 32, make it three doinks.
    4164 00018570     05ae          move    @PCNT,a14
         00018580 00000000! 
    4165 000185a0     276e          sll     32-5,a14
    4166 000185b0     2cae          srl     32-5,a14
    4167 000185c0     cb04          jrnz    miwebegin
    4168                    
    4169 000185d0     09e1          movi    03060606h,a1
         000185e0 03060606  
    4170 00018600     c034          jruc    miwedone
    4171                    
    4172 00018610           miwebegin       ;first, figure out which wrestlers are excluded.  Use the low byte
    4173                            ;of a7 for this.  Set the bits corresponding to excluded wrestlers.
    4174 00018610     56e7          clr     a7
    4175                    
    4176                            ;first, exclude the human if this is the first 1v2 or 1v3
    4177 00018620     182e          movk    1,a14
    4178 00018630     62ce          sll     a6,a14
    4179 00018640     55c7          or      a14,a7
    4180                    
    4181                            ;now exclude the guys from the last match
    4182                            ; but not if this is the first match!
    4183 00018650     0b6a          cmpi    LADDER,a10
         00018660 ffffff9f- 
    4184 00018680     ca09          jreq    miwecount
    4185 00018690     b740          move    *a10(-20h),a0,L ;previous lineup
         000186a0     ffe0  
    4186 000186b0     4c01          move    a0,a1
    4187 000186c0     2d01          srl     24,a1           ;wrestler count
    4188 000186d0     182e  miwelp0 movk    1,a14
    4189 000186e0     680e          rl      a0,a14          ;note that rl only looks at low 5 bits...
    4190 000186f0     55c7          or      a14,a7
    4191 00018700     2f00          srl     8,a0
    4192 00018710     3ca1          dsj     a1,miwelp0
    4193                    
    4194                            ;now count excluded wrestlers.  We couldn't do this before because
    4195                            ; we weren't checking for redundant exclusions.  now just count
    4196                            ; set bits in a7.  Store the count in a8
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   97

    4197 00018720     4cee  miwecount       move    a7,a14
    4198 00018730     5708          clr     a8
    4199 00018740     1900          movk    8,a0
    4200 00018750     2fee  miwelp1 srl     1,a14
    4201 00018760     c901          jrnc    miwenxt1
    4202 00018770     1028          inc     a8
    4203 00018780     3c80  miwenxt1        dsj     a0,miwelp1
    4204                    
    4205                            ;commence scramble - begin by getting three random guys
    4206                            ; Since a8 wrestlers are excluded, we're choosing from a field of
    4207                            ; 8 - a8 wrestlers.
    4208                    
    4209                            ;to make repeats less likely, 'toss back' the first match on any
    4210                            ; previous wrestlers.
    4211                    
    4212                            ;first
    4213 00018790     0d3f          callr   get_rnd_wrestler
         000187a0     002f  
    4214 000187b0     4c03          move    a0,a3
    4215                    
    4216                            ;second
    4217 000187c0     0d3f          callr   get_rnd_wrestler
         000187d0     002c  
    4218 000187e0     4c04          move    a0,a4
    4219 000187f0     4883          cmp     a4,a3
    4220 00018800     cb03          jrne    miweok2
    4221 00018810     0d3f          callr   get_rnd_wrestler
         00018820     0027  
    4222 00018830     4c04          move    a0,a4
    4223                    
    4224 00018840           miweok2 ;third
    4225 00018840     0d3f          callr   get_rnd_wrestler
         00018850     0024  
    4226 00018860     4c05          move    a0,a5
    4227 00018870     4865          cmp     a3,a5
    4228 00018880     ca02          jreq    miwerepick
    4229 00018890     4885          cmp     a4,a5
    4230 000188a0     cb03          jrne    miweok3
    4231 000188b0     0d3f  miwerepick      callr   get_rnd_wrestler
         000188c0     001d  
    4232 000188d0     4c05          move    a0,a5
    4233 000188e0           miweok3
    4234                    
    4235                            ;lump it all together
    4236                    
    4237 000188e0     2702          sll     24,a2
    4238 000188f0     2603          sll     16,a3
    4239 00018900     2504          sll     8,a4
    4240                    
    4241 00018910     4c41          move    a2,a1
    4242 00018920     5461          or      a3,a1
    4243 00018930     5481          or      a4,a1
    4244 00018940     54a1          or      a5,a1
    4245                    
    4246                            ;leave the third guy in there even if there's only supposed to be
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   98

    4247                            ; two.  It can't matter since 0 is a valid WRESTLERNUM anyway.
    4248                    
    4249 00018950           miwedone        PULL    a0,a2,a3,a4,a5,a6,a7,a8
    4250 00018970     0960          rets
    4251                    
    4252 00018980           miwefinal_match
    4253                            ;first, generate a new lineup
    4254 00018980     0d3f          callr   get_final_lineup
         00018990     f053  
    4255                    
    4256                            ;now construct our starting lineupt from the first three guys.
    4257 000189a0     09e0          movi    FINAL_BATTLE_LINEUP,a0
         000189b0 00000280- 
    4258 000189d0     8601          move    *a0,a1,L
    4259 000189e0     0b81          andi    00FFFFFFh,a1            ;clear fourth guy
         000189f0 ff000000  
    4260 00018a10     0ba1          ori     03000000h,a1            ;set count
         00018a20 03000000  
    4261                    
    4262                            ;set FINAL_PTR to the next guy to fight.
    4263 00018a40     0b00          addi    3*8,a0
         00018a50     0018  
    4264 00018a60     0780          move    a0,@FINAL_PTR,L
         00018a70 00000300- 
    4265                    
    4266 00018a90     c0eb          jruc    miwedone
    4267                    
    4268                    **********
    4269                    * Get a random wrestler among those available.
    4270                    * 0a7H = excluded wrestler mask  0a8H = excluded wrestler count
    4271                    * <a0 = choice among those available
    4272                    
    4273 00018aa0            SUBR   get_rnd_wrestler
    4274                    
    4275                            ;first, get a random number between 0 and 7-(num excluded)
    4276 00018aa0     18e0          movk    7,a0
    4277 00018ab0     4500          sub     a8,a0
    4278 00018ac0     0d5f          calla   RNDRNG0
         00018ad0 00000000! 
    4279                    
    4280                            ;now translate.  a value of '0' means 'first available wrestler.'
    4281                            ;'3' means 'fourth available wrestler,' and so forth.
    4282 00018af0     1020          inc     a0
    4283 00018b00     09ce          movi    -1,a14
         00018b10     ffff  
    4284 00018b20     102e  miwelp2 inc     a14
    4285 00018b30     4bc7          btst    a14,a7
    4286 00018b40     cbfd          jrnz    miwelp2 ;not available.  keep looking
    4287 00018b50     3c80          dsj     a0,miwelp2
    4288                    
    4289                            ;found the n'th open spot, and a14 is the correct wrestlernum.
    4290 00018b60     4dc0          move    a14,a0
    4291 00018b70     0960          rets
    4292                    
    4293                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE   99

    4294                    *****************
    4295              001e  STATY   .EQU    30
    4296              0005  STATX   .EQU    5
    4297                    
    4298 00018b80           DO_LADDER_BITS
    4299 00018b80     09e9          MOVI    CHAMP_BITS_LIST,A9
         00018b90 0001a5e0' 
    4300 00018bb0     05a1          MOVE    @belt_type,A1
         00018bc0 00000000! 
    4301 00018be0     cb03          JRNZ    CORRECT_BITS_TABLE
    4302 00018bf0     09e9          MOVI    INTER_BITS_LIST,A9
         00018c00 00019b20' 
    4303 00018c20           CORRECT_BITS_TABLE
    4304                    
    4305 00018c20     0d3f          CALLR   MAKE_NEXT_BIT
         00018c30     00b6  
    4306                    
    4307 00018c40     09e9          MOVI    CHAMP_FLASH_BITS,A9
         00018c50 0001b0a0' 
    4308 00018c70     05a1          MOVE    @belt_type,A1
         00018c80 00000000! 
    4309 00018ca0     cb03          JRNZ    CORRECT_FLASH_BITS_TABLE
    4310 00018cb0     09e9          MOVI    INTER_FLASH_BITS,A9
         00018cc0 0001b500' 
    4311 00018ce0           CORRECT_FLASH_BITS_TABLE
    4312                    
    4313 00018ce0     07aa          MOVE    @CURRENT_LADDER,A10,L
         00018cf0 00000020- 
    4314 00018d10     0d0a          SUBI    LADDER-20h,A10
         00018d20 ffffffbf- 
    4315 00018d40     2f6a          SRL     5,A10
    4316 00018d50           NEXT_FLASH_BIT
    4317 00018d50     9722          MOVE    *A9+,A2,L
    4318 00018d60     0d3f          CALLR   CREATE_PART
         00018d70     00a8  
    4319 00018d80     3c8a          DSJS    A10,NEXT_FLASH_BIT
    4320 00018d90                   CREATE  ZSHIFT_PID,FLASH_THIS_BIT
    4321                    
    4322 00018e10     05a0          move    @match_cnt,a0
         00018e20 00000000! 
    4323 00018e40     0b40          cmpi    999,a0
         00018e50     fc18  
    4324 00018e60     c202          jrls    qclpmaxok
    4325 00018e70     09c0          movi    999,a0
         00018e80     03e7  
    4326 00018e90           qclpmaxok
    4327 00018e90     09e1          movi    9999999,a1
         00018ea0 0098967f  
    4328 00018ec0     0d5f          calla   dec_to_asc              ;convert to ASCII
         00018ed0 00000000! 
    4329 00018ef0     1840          movk    2,a0
    4330 00018f00     0580          move    a0,@mess_spacing
         00018f10 00000000! 
    4331 00018f30     0d5f          CALLA   copy_string
         00018f40 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE  100

    4332                    
    4333 00018f60     09e0          movi    win_ascii,a0
         00018f70 00000000! 
    4334 00018f90     0780          move    a0,@message_ascii,L
         00018fa0 00000000! 
    4335 00018fc0     09c0          movi    3,a0
         00018fd0     0003  
    4336 00018fe0     0580          move    a0,@mess_space_width
         00018ff0 00000000! 
    4337 00019010     09c0          MOVI    STATX+76,A0
         00019020     0051  
    4338 00019030     0580          move    a0,@mess_cursx
         00019040 00000000! 
    4339 00019060     09c0          MOVI    STATY+19+3+2,A0
         00019070     0036  
    4340 00019080     0580          move    a0,@mess_cursy
         00019090 00000000! 
    4341 000190b0     09eb          MOVI    WINFONT,A11
         000190c0 00000000! 
    4342 000190e0     078b          move    a11,@message_palette,L
         000190f0 00000000! 
    4343 00019110     0d5f          calla   print_string
         00019120 00000000! 
    4344                    
    4345 00019140     05a0          move    @p1winstreak,a0
         00019150 00000000! 
    4346 00019170     cb03          jrnz    win_streak_set
    4347 00019180     05a0          move    @p2winstreak,a0
         00019190 00000000! 
    4348 000191b0           win_streak_set
    4349 000191b0     09e1          movi    9999999,a1
         000191c0 0098967f  
    4350 000191e0     0d5f          calla   dec_to_asc              ;convert to ASCII
         000191f0 00000000! 
    4351 00019210     1840          movk    2,a0
    4352 00019220     0580          move    a0,@mess_spacing
         00019230 00000000! 
    4353 00019250     0d5f          CALLA   copy_string
         00019260 00000000! 
    4354 00019280     09c0          MOVI    STATX+7+50,A0
         00019290     003e  
    4355 000192a0     0580          move    a0,@mess_cursx
         000192b0 00000000! 
    4356 000192d0     09c0          MOVI    STATY+19+4+12+3,A0
         000192e0     0044  
    4357 000192f0     0580          move    a0,@mess_cursy
         00019300 00000000! 
    4358 00019320     0d5f          calla   print_string
         00019330 00000000! 
    4359                    
    4360 00019350     09e7          movi    BEATEN_TAB_ORIGIN+HS_SIZE,a7
         00019360 01409960  
    4361 00019380     05a1          MOVE    @belt_type,A1
         00019390 00000000! 
    4362 000193b0     cb03          JRNZ    CORRECT_TABLE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE  101

    4363 000193c0     09e7          movi    INTER_TAB_ORIGIN+HS_SIZE,a7
         000193d0 0140af60  
    4364 000193f0           CORRECT_TABLE
    4365                    
    4366 000193f0     09e1          movi    message_buffer,a1
         00019400 00000000! 
    4367 00019420     0b07          addi    HS_INITS,a7
         00019430     0040  
    4368 00019440     09c2          movi    5,a2
         00019450     0005  
    4369 00019460           qclpinitloop
    4370 00019460     0d5f          calla   RC_BYTEI
         00019470 00000000! 
    4371 00019490     8c01          movb    a0,*a1
    4372 000194a0     1101          addk    8,a1
    4373 000194b0     3cc2          dsj     a2,qclpinitloop
    4374 000194c0     5600          clr     a0                      ;null-terminate it
    4375 000194d0     8c01          movb    a0,*a1
    4376                    
    4377 000194e0     09e0          movi    wsf14_ascii,a0
         000194f0 00000000! 
    4378 00019510     0780          move    a0,@message_ascii,L
         00019520 00000000! 
    4379 00019540     09c0          MOVI    15fh,A0
         00019550     015f  
    4380 00019560     0580          move    a0,@mess_cursx
         00019570 00000000! 
    4381 00019590     09c0          MOVI    STATY+19+12+3,A0
         000195a0     0040  
    4382 000195b0     0580          move    a0,@mess_cursy
         000195c0 00000000! 
    4383 000195e0     09c0          movi    1901h,a0
         000195f0     1901  
    4384 00019600     0780          move    a0,@mess_z,L
         00019610 00000000! 
    4385 00019630     09eb          MOVI    WSF_Y_P,A11
         00019640 00000000! 
    4386 00019660     078b          move    a11,@message_palette,L
         00019670 00000000! 
    4387 00019690     0d5f          calla   print_string_Z2
         000196a0 00000000! 
    4388                    
    4389 000196c0     0960          RETS
    4390                    
    4391 000196d0           FLASH_THIS_BIT
    4392 000196d0     09e1          MOVI    FLASH_BIT_ANIM,A1
         000196e0 00019970' 
    4393 00019700     0d3f          callr   setup_back_anim
         00019710     ed3e  
    4394 00019720                   JSRP    ANIM_CROWD
    4395 00019790     c0f3          JRUC    FLASH_THIS_BIT
    4396                    
    4397 000197a0           MAKE_NEXT_BIT
    4398 000197a0     9722          MOVE    *A9+,A2,L
    4399 000197b0     ca03          JRZ     LAST_BIT
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE  102

    4400 000197c0     0d3f          CALLR   CREATE_PART
         000197d0     0002  
    4401 000197e0     c0fb          JRUC    MAKE_NEXT_BIT
    4402 000197f0           LAST_BIT
    4403 000197f0     0960          RETS
    4404                    
    4405 00019800           CREATE_PART
    4406 00019800     9720          MOVE    *A9+,A0,L
    4407 00019810     9721          MOVE    *A9+,A1,L
    4408 00019820     9723          MOVE    *A9+,A3,L
    4409 00019830     9724          MOVE    *A9+,A4,L
    4410 00019840     4e80          MOVE    A4,B0
    4411 00019850     09e4          movi    DMAWNZ|M_SCRNREL,a4
         00019860 0000a002  
    4412 00019880     0b62          CMPI    LBAR_GENB,A2
         00019890 ffffffff! 
    4413 000198b0     cb03          JRNE    DMA_SET_OKAY
    4414 000198c0     09e4          movi    M_FLIPH|DMAWNZ|M_SCRNREL,a4
         000198d0 0000a012  
    4415 000198f0           DMA_SET_OKAY
    4416 000198f0     09c5          movi    CLSNEUT,a5
         00019900     0000  
    4417 00019910     56c6          CLR     A6
    4418 00019920     56e7          CLR     A7
    4419 00019930     0d5f          CALLA   BEGINOBJP
         00019940 00000000! 
    4420 00019960     0960          RETS
    4421                    
    4422 00019970           FLASH_BIT_ANIM
    4423 00019970                   WL      2,FLASH01
    4424 000199a0                   WL      2,FLASH02
    4425 000199d0                   WL      2,FLASH03
    4426 00019a00                   WL      2,FLASH04
    4427 00019a30                   WL      2,FLASH05
    4428 00019a60                   WL      2,FLASH04
    4429 00019a90                   WL      2,FLASH03
    4430 00019ac0                   WL      2,FLASH02
    4431 00019af0                   WL      CANI_GOTO,FLASH_BIT_ANIM
    4432                    
    4433                    
    4434 00019b20           INTER_BITS_LIST
    4435 00019b20 00000000!         .LONG   STATBAR,[STATX,0],[STATY,0],1900H,DPLT_R_P
    4436 00019bc0 00000000!         .LONG   BLUESH,[STATX+50,0],[STATY+19,0],1900H,BARB_P
    4437 00019c60 00000000!         .LONG   TXTBAR1,[STATX+60,0],[STATY+19+2+5,0],1900H,DPLT_R_P
    4438 00019d00 00000000!         .LONG   WINS_IMG,[STATX+20,0],[STATY+19+4+12+3,0],1901H,WINFONT
    4439 00019da0 00000000!         .LONG   BLUESH,[STATX+36,0],[STATY+19+2+12,0],1900H,BARB_P
    4440 00019e40 00000000!         .LONG   TXTBAR1,[STATX+46,0],[STATY+19+4+12+5,0],1900H,DPLT_R_P
    4441 00019ee0 00000000!         .LONG   MATCH_IMG,[STATX+29,0],[STATY+19+2+3,0],1901H,WINFONT
    4442 00019f80 00000000!         .LONG   BLUESH,[STATX+23,0],[STATY+19+4+24,0],1900H,BARB_P
    4443                    
    4444 0001a020 00000000!         .LONG   TXTBAR1,[STATX+230,0],[STATY+19+4+12+5,0],18FFH,DPLT_R_P
    4445 0001a0c0 00000000!         .LONG   TXTBAR1,[STATX+297,0],[STATY+19+4+12+5,0],18FFH,DPLT_R_P
    4446 0001a160 00000000!         .LONG   TXTBAR1,[STATX+360,0],[STATY+19+4+12+5,0],18FFH,DPLT_R_P
    4447 0001a200 00000000!         .LONG   TXTPCE, [STATX+260,0],[STATY+19+4+12+5,0],1900H,DPLT_R_P
    4448 0001a2a0 00000000!         .LONG   TXTPCE, [STATX+335,0],[STATY+19+4+12+5,0],1900H,DPLT_R_P
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE  103

    4449                    
    4450 0001a340 00000000!         .LONG   RCHAMP,[STATX+235-36,0],[STATY+19+2+12+5,0],1901H,WINFONT
    4451                    
    4452 0001a3e0 00000000!         .LONG   SWWFBLT,[STATX+345,0],[STATY+9,0],1901H,SWWFBW_P
    4453 0001a480 00000000!         .LONG   LBAR_GENB,[STATX+111,0],[STATY,0],1900H,BARB_P
    4454 0001a520 00000000!         .LONG   LBAR_GENB,[STATX+64,0],[STATY+19+24+8,0],18ffH,BARB_P
    4455 0001a5c0 00000000          .LONG   0
    4456                    
    4457                    
    4458 0001a5e0           CHAMP_BITS_LIST
    4459 0001a5e0 00000000!         .LONG   STATBAR,[STATX,0],[STATY,0],1900H,DPLT_P_P
    4460 0001a680 00000000!         .LONG   BLUESH,[STATX+50,0],[STATY+19,0],1900H,BARB_P
    4461 0001a720 00000000!         .LONG   TXTBAR1,[STATX+60,0],[STATY+19+2+5,0],1900H,DPLT_P_P
    4462 0001a7c0 00000000!         .LONG   WINS_IMG,[STATX+20,0],[STATY+19+4+12+3,0],1901H,WINFONT
    4463 0001a860 00000000!         .LONG   BLUESH,[STATX+36,0],[STATY+19+2+12,0],1900H,BARB_P
    4464 0001a900 00000000!         .LONG   TXTBAR1,[STATX+46,0],[STATY+19+4+12+5,0],1900H,DPLT_P_P
    4465 0001a9a0 00000000!         .LONG   MATCH_IMG,[STATX+29,0],[STATY+19+2+3,0],1901H,WINFONT
    4466 0001aa40 00000000!         .LONG   BLUESH,[STATX+23,0],[STATY+19+4+24,0],1900H,BARB_P
    4467                    
    4468 0001aae0 00000000!         .LONG   TXTBAR1,[STATX+230,0],[STATY+19+4+12+5,0],18FFH,DPLT_P_P
    4469 0001ab80 00000000!         .LONG   TXTBAR1,[STATX+297,0],[STATY+19+4+12+5,0],18FFH,DPLT_P_P
    4470 0001ac20 00000000!         .LONG   TXTBAR1,[STATX+360,0],[STATY+19+4+12+5,0],18FFH,DPLT_P_P
    4471 0001acc0 00000000!         .LONG   TXTPCE, [STATX+260,0],[STATY+19+4+12+5,0],1900H,DPLT_P_P
    4472 0001ad60 00000000!         .LONG   TXTPCE, [STATX+335,0],[STATY+19+4+12+5,0],1900H,DPLT_P_P
    4473                    
    4474 0001ae00 00000000!         .LONG   RCHAMP,[STATX+235-36,0],[STATY+19+2+12+5,0],1901H,WINFONT
    4475                    
    4476 0001aea0 00000000!         .LONG   SWWFBLT,[STATX+345,0],[STATY+9,0],1901H,SWWFBB_P
    4477 0001af40 00000000!         .LONG   LBAR_GENB,[STATX+111,0],[STATY,0],1900H,BARB_P
    4478 0001afe0 00000000!         .LONG   LBAR_GENB,[STATX+64,0],[STATY+19+24+8,0],18ffH,BARB_P
    4479 0001b080 00000000          .LONG   0
    4480                    
    4481 0001b0a0           CHAMP_FLASH_BITS
    4482 0001b0a0 00000000!         .LONG   FLASH05,[STATX-5+31,0],[STATY+5+4,0],1901H,FLASHP_P
    4483 0001b140 00000000!         .LONG   FLASH05,[STATX-5+47,0],[STATY+5+4,0],1901H,FLASHP_P
    4484 0001b1e0 00000000!         .LONG   FLASH05,[STATX-5+63,0],[STATY+5+4,0],1901H,FLASHP_P
    4485 0001b280 00000000!         .LONG   FLASH05,[STATX-5+79,0],[STATY+5+4,0],1901H,FLASHP_P
    4486                    
    4487 0001b320 00000000!         .LONG   FLASH05,[STATX-5+95+13H,0],[STATY+5+4,0],1901H,FLASHP_P
    4488 0001b3c0 00000000!         .LONG   FLASH05,[STATX-5+111+13H,0],[STATY+5+4,0],1901H,FLASHP_P
    4489 0001b460 00000000!         .LONG   FLASH05,[STATX-5+127+26H,0],[STATY+5+4,0],1901H,FLASHP_P
    4490                    
    4491 0001b500           INTER_FLASH_BITS
    4492 0001b500 00000000!         .LONG   FLASH05,[STATX-5+31,0],[STATY+5+4,0],1901H,FLASHR_P
    4493 0001b5a0 00000000!         .LONG   FLASH05,[STATX-5+47,0],[STATY+5+4,0],1901H,FLASHR_P
    4494 0001b640 00000000!         .LONG   FLASH05,[STATX-5+63,0],[STATY+5+4,0],1901H,FLASHR_P
    4495 0001b6e0 00000000!         .LONG   FLASH05,[STATX-5+79,0],[STATY+5+4,0],1901H,FLASHR_P
    4496 0001b780 00000000!         .LONG   FLASH05,[STATX-5+95+13H,0],[STATY+5+4,0],1901H,FLASHR_P
    4497 0001b820 00000000!         .LONG   FLASH05,[STATX-5+111+13H,0],[STATY+5+4,0],1901H,FLASHR_P
    4498 0001b8c0 00000000!         .LONG   FLASH05,[STATX-5+127+26H,0],[STATY+5+4,0],1901H,FLASHR_P
    4499                    
    4500 0001b960           SWWFBW_P
    4501 0001b960     0020     .word   32 
    4502 0001b970     0000     .word   00000h,07b8ah,07b73h,07b2fh,07ae9h,06eefh,062aeh,06e8bh
    4503 0001b9f0     6e65     .word   06e65h,05e4ah,06226h,059e4h,041e8h,05961h,04d21h,04164h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:22:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

progression screen                                                   PAGE  104

    4504 0001ba70     3947     .word   03947h,03944h,04101h,02905h,030c2h,020a1h,05ef7h,05294h
    4505 0001baf0     4a52     .word   04a52h,04210h,035adh,02d6bh,02529h,018c6h,01084h,002c2h
    4506                    
    4507                    
    4508 0001bb70           DPLT_P_P
    4509 0001bb70     001f     .word   31 
    4510 0001bb80     0000     .word   00000h,06f7ch,06f3ch,06efch,06ebch,06e7ch,06e3ch,06dfch
    4511 0001bc00     6dbc     .word   06dbch,06d7ch,06d5ch,06d1ch,06cbch,06c9ch,06c3ch,06c1ch
    4512 0001bc80     6c1c     .word   06c1ch,0681bh,06019h,05c18h,05416h,04c14h,04412h,03c10h
    4513 0001bd00     380f     .word   0380fh,0300dh,0280bh,0240ah,01807h,01406h,01005h
    4514                    
    4515 0001bd70           tonites_matchup
    4516 0001bd70                   JAM_STR font9_ascii,8,0,22,13,FNT9YEL_P,0
    4517                    
    4518 0001be10           tonites_str
    4519 0001be10       54          .string "TONIGHT'S PROGRAM",0
    4520                    
    4521 0001bea0           type_setup
    4522 0001bea0                   JAM_STR font9_ascii,8,0,241,28,FNT9YEL_P,0
    4523 0001bf40                   .even
    4524 0001bf40           belt_setup
    4525 0001bf40                   JAM_STR font9_ascii,8,0,241,41,FNT9YEL_P,0
    4526 0001bfe0                   .even
    4527 0001bfe0           wwf_belt_str
    4528 0001bfe0       57          .string "WWF CHAMPIONSHIP",0
    4529 0001c070                   .even
    4530 0001c070           inter_belt_str
    4531 0001c070       49          .string "INTERCONTINENTAL",0
    4532 0001c100                   .even
    4533 0001c100           belt_str
    4534 0001c100       54          .string "TITLE",0
    4535 0001c130                   .even
    4536                    ******************************************************************************
    4537                    
    4538                            .end

 No Errors,  No Warnings
