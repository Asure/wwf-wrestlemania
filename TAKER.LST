TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "taker.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "jjxm.h"
      11                            .include        "mproc.equ"             ;Mproc equates
      12                            .include        "display.equ"           ;Display proc equates
      13                            .include        "gsp.equ"               ;Gsp asm equates
      14                            .include        "sys.equ"
      15                            .include        "game.equ"
      16                            .include        "plyr.equ"
      17                            .include        "anim.equ"
      18                            .include        "audit.equ"
      19                            .include        "sound.h"
      20                            .include        "ring.equ"
      21                            .include        "lifebar.h"
      22                            .include        "damage.equ"
      23                    
      24                    
      25                    
      26                            .ref    get_punch_dtime,ck_teammate_pin,raisearm_check
      27                            .ref    process_ptrs,can_pin
      28                            .ref    change_anim1,change_anim1a,set_raisearm_bit,hit_nearest
      29                            .ref    change_anim2,change_anim2a,std_taunt,std_walk_fast
      30                            .ref    keep_attached,master_keep_attached
      31                            .ref    get_opp_plyrmode,mode_dead,get_opp_process
      32                            .ref    check_secret_moves,round_award
      33                            .ref    mode_inair2,mode_puppet
      34                            .ref    execute_walk,do_taunt
      35                            .ref    bounce_off_ropes
      36                            .ref    climb_turnbuckle
      37                            .ref    ck_ignore,PCNT
      38                            .ref    CLIMB_ROPES,ADD_IF_SILENT,JUMP_ROPES
      39                            .ref    CHECK_COMBO_GO,FIND_AND_KILL_ENDLESS
      40                    
      41                            .ref    BONUS_MESS,DO_REVERSAL,DO_REVERSAL_MESS
      42                            .ref    BLOCK_WOOSH,drone_change_back
      43                            .ref    blocking_off
      44                            .ref    hyper_speed_on
      45                            .ref    in_finish_move
      46                            .ref    p1rounds,p2rounds
      47                            .if NUM_TAKER_FINISHES
      48                            .if NUM_TAKER_FINISHES > 1
      49                            .ref    und_finish2_move
      50                            .endif
      51                            .endif
      52                            .ref    finish_completed
      53                            .ref    p1pins,p2pins
      54                            .ref    und_coffin_up
      55                            .ref    close_the_door
      56                            .ref    wres_mv_done
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .ref    dead_wrestler
      58                            .ref    und_2_raise_dead_anim
      59                            .ref    guy_up,guy_in
      60                            .ref    BGND_UD1
      61                            .ref    KIL1C
      62                            .ref    RNDRNG0
      63                    
      64                    
      65                            .ref    und_4_block_anim
      66                            .ref    start_run_anim
      67                    
      68                            .ref    wres_slave_anim
      69                            .ref    und_zip_anim
      70                    
      71                            .ref    und_stand2_anim,und_stand8_anim
      72                            .ref    und_stand4_anim,und_stand6_anim
      73                            .ref    und_torso2_anim,und_torso8_anim
      74                            .ref    und_torso4_anim,und_torso6_anim
      75                    
      76                            .ref    und_2_to_4_turn_anim,und_8_to_6_turn_anim       ;stand
      77                            .ref    und_4_to_2_turn_anim,und_6_to_8_turn_anim
      78                            .ref    und_4_to_6_turn_anim,und_6_to_4_turn_anim
      79                            .ref    und_2_to_8_turn_anim,und_8_to_2_turn_anim
      80                            .ref    und_4_to_8_turn_anim,und_6_to_2_turn_anim
      81                            .ref    und_2_to_6_turn_anim,und_8_to_4_turn_anim
      82                    
      83                            .ref    und_2_to_4_turn2_anim,und_8_to_6_turn2_anim     ;torso
      84                            .ref    und_4_to_2_turn2_anim,und_6_to_8_turn2_anim
      85                            .ref    und_4_to_6_turn2_anim,und_6_to_4_turn2_anim
      86                            .ref    und_2_to_8_turn2_anim,und_8_to_2_turn2_anim
      87                            .ref    und_4_to_8_turn2_anim,und_6_to_2_turn2_anim
      88                            .ref    und_2_to_6_turn2_anim,und_8_to_4_turn2_anim
      89                    
      90                            .ref    und_walk1_f2_anim,und_walk2_f2_anim,und_walk4_f2_anim
      91                            .ref    und_walk5_f2_anim,und_walk6_f2_anim,und_walk8_f2_anim
      92                    
      93                            .ref    und_walk1_f4_anim,und_walk2_f4_anim,und_walk4_f4_anim
      94                            .ref    und_walk5_f4_anim,und_walk6_f4_anim,und_walk8_f4_anim
      95                    
      96                            .ref    und_run2_anim
      97                    
      98                            .ref    und_2_punch_anim,und_4_punch_anim
      99                            .ref    und_2_kick_anim,und_4_kick_anim
     100                    
     101                            .ref    und_2_butt_anim,und_4_butt_anim
     102                            .ref    und_2_butts_anim,und_4_butts_anim
     103                            .ref    und_2_knee_anim,und_4_knee_anim
     104                            .ref    und_4_bigboot_anim
     105                    
     106                            .ref    und_head_hit2_anim,und_head_hit_dizzy_anim
     107                            .ref    und_2_stomp_anim,und_4_stomp_anim
     108                    
     109                            .ref    und_4_push_anim
     110                            .ref    und_4_losebal_anim
     111                            .ref    und_2_slap_anim,und_4_slap_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                    
     113                            .ref    und_2_grabfling_anim,und_4_grabfling_anim
     114                    
     115                            .ref    und_2_uppercut_anim,und_4_uppercut_anim
     116                            .ref    und_2_hair_pickup_anim,und_4_hair_pickup_anim
     117                    
     118                            .ref    und_4_pin2_anim,und_2_raise_arm_anim
     119                            .ref    und_4_raise_arm_anim
     120                            .ref    und_fall_back_anim
     121                    
     122                            .ref    und_getup_anim
     123                            .ref    und_heldoh_anim
     124                    
     125                            .ref    und_2_super_kick_anim,und_4_super_kick_anim
     126                            .ref    und_4_knee_fall_anim
     127                            .ref    und_flying_kick_anim
     128                    
     129                            .ref    und_2_lbowdrop_anim,und_4_lbowdrop_anim
     130                            .ref    und_flying_butt_drop_anim,und_tbukl_butt_drop_anim
     131                    
     132                            .ref    und_sliding_choke_anim
     133                            .ref    und_tombstone_smash_anim
     134                            .ref    und_chokeslam_anim
     135                            .ref    und_pile_anim
     136                            .ref    und_neckbreaker_anim
     137                            .ref    und_2_snapmirror_anim,und_4_snapmirror_anim
     138                            .ref    und_2_snapmirror2_anim,und_4_snapmirror2_anim
     139                            .ref    und_climb_down_anim,und_climb_up_anim
     140                            .ref    und_spirit_push_anim,und_spirit_pull_anim
     141                            .ref    und_combo_kick_anim,und_combo_punch_anim
     142                            .ref    und_3_head_hold2_anim
     143                            .ref    und_3_head_hold_anim
     144                            .ref    und_neckbreaker2_anim,und_neckbreaker3_anim
     145                            .ref    und_4_knee_butts_anim
     146                            .ref    und_3_head_held_stand_anim
     147                            .ref    und_2_uppercut_anim,und_4_uppercut_anim
     148                            .ref    und_choke_face_slam_anim
     149                    
     150                    
     151                    
     152                    
     153 00000000           und_secret_moves
     154                    
     155                    
     156 00000000 000011a0'         .long   dfxobutton_hold
     157 00000020 00001a20'         .long   dfxograb_fling
     158 00000040 00000700'         .long   dfxohip_toss
     159 00000060 00001890'         .long   dfxograb_fling2
     160 00000080 000018e0'         .long   dfxohip_toss2
     161 000000a0 00000da0'         .long   dfxoneck_grab
     162 000000c0 000002a0'         .long   dfxotomb_smash
     163 000000e0 00000000          .long   0
     164                    
     165                    
     166 00000100            SUBR   und_smove_table
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167                    
     168 00000100 000034f0'         .long   und_hdhold_neckbrk
     169 00000120 00004040'         .long   und_hdhold_faceslam
     170 00000140 00004bf0'         .long   und_hdhold_pile         ;(tombstone)
     171 00000160 000066b0'         .long   und_spirit_pull
     172 00000180 00005eb0'         .long   und_spirit_push
     173 000001a0 00006eb0'         .long   und_grab_toss_air
     174 000001c0 00007a80'         .long   und_hdhold_combo1
     175 000001e0 00008220'         .long   und_hdhold_combo2
     176 00000200 00005740'         .long   und_choke_slide
     177 00000220 00000000!         .long   std_walk_fast
     178 00000240 00000000!         .long   std_taunt
     179                    
     180                            .if NUM_TAKER_FINISHES
     181 00000260 00002960'         .long   und_finish_move1
     182                            .endif
     183                            .if NUM_TAKER_FINISHES > 1
     184                            .long   und_finish_move2
     185                            .endif
     186 00000280 00000000          .long   0
     187                    
     188                    
     189 000002a0           dfxotomb_smash
     190 000002a0     0100          .word   B_SKICK,                J_ALL
     191 000002c0     0008          .word   J_TOWARD,               J_REAL_LR
     192 000002e0     0008          .word   J_TOWARD,               J_REAL_LR
     193 00000300     8020          .word   8000h | 32              ;max
     194 00000310 00000330'         .long   dfxoscrt_tomb
     195                    
     196 00000330           dfxoscrt_tomb
     197 00000330     b5a0          move    *a13(ANIMODE),a0
         00000340     0660  
     198 00000350     1fa0          btst    MODE_UNINT_BIT,a0
     199 00000360     cb00          jrnz    dfxoout
         00000370     01f8  
     200                    
     201                    
     202 00000380     b5a0          move    *a13(PLYRMODE),a0
         00000390     05c0  
     203 000003a0     0b40          cmpi    MODE_ONTURNBKL,a0
         000003b0     fff9  
     204 000003c0     ca00          jrz     dfxoout
         000003d0     01f2  
     205                    
     206 000003e0     5600          clr     a0
     207 000003f0     b20d          move    a0,*a13(ATTACH_PROC),L
         00000400     03e0  
     208                    
     209 00000410                   SETMODE NORMAL
     210                    
     211 000004c0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000004d0 00000000! 
     212 000004f0     09e0          movi    und_tombstone_smash_anim,a0
         00000500 00000000! 
     213 00000520     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

         00000530 00000000! 
     214                    
     215 00000550                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
     216                    
     217 000006f0     0960          rets
     218                    
     219                    
     220 00000700           dfxohip_toss
     221                    
     222 00000700     0010          .word   B_PUNCH,                J_ALL
     223 00000720     0004          .word   J_AWAY,         J_REAL_LR
     224 00000740     0004          .word   J_AWAY,         J_REAL_LR
     225 00000760     8020          .word   8000h | 32              ;max
     226 00000770 00000790'         .long   dfxoscrt_hiptoss
     227                    
     228 00000790           dfxoscrt_hiptoss
     229 00000790     b5a0          move    *a13(ANIMODE),a0
         000007a0     0660  
     230 000007b0     1fa0          btst    MODE_UNINT_BIT,a0
     231 000007c0     cb00          jrnz    dfxoout
         000007d0     01b2  
     232                    
     233 000007e0     0d5f          calla   get_opp_plyrmode
         000007f0 00000000! 
     234 00000810     0b40          cmpi    MODE_ONGROUND,a0
         00000820     fffb  
     235 00000830     ca00          jrz     dfxoout
         00000840     01ab  
     236 00000850     0b40          cmpi    MODE_DEAD,a0
         00000860     fff6  
     237 00000870     ca00          jrz     dfxoout
         00000880     01a7  
     238 00000890     0b40          cmpi    MODE_HEADHELD,a0
         000008a0     ffec  
     239 000008b0     ca42          jrz     dfxock1
     240 000008c0     0b40          cmpi    MODE_INAIR,a0
         000008d0     fffd  
     241 000008e0     ca09          jrz     dfxodoit
     242 000008f0     0b40          cmpi    MODE_INAIR2,a0
         00000900     ffea  
     243 00000910     ca06          jrz     dfxodoit
     244                    
     245 00000920     b5a0          move    *a13(CLOSEST_DIST),a0
         00000930     0360  
     246 00000940     0b40          cmpi    70h,a0
         00000950     ff8f  
     247 00000960     c700          jrgt    dfxoout
         00000970     0198  
     248                    
     249 00000980           dfxodoit
     250 00000980                   FACE24  und,snapmirror_anim
     251 00000a20     0d5f          calla   change_anim1a
         00000a30 00000000! 
     252                    
     253 00000a50     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

     254 00000a60     b20d          move    a0,*a13(ATTACH_PROC),L
         00000a70     03e0  
     255                    
     256 00000a80                   SETMODE NORMAL
     257                    
     258 00000b30                   WRSND   W_TAKER,GRABFLING_T1,PUNCH_T2
     259                    
     260 00000cd0     0960          rets
     261 00000ce0           dfxock1
     262 00000ce0     b5a0          move    *a13(CLOSEST_NUM),a0
         00000cf0     03a0  
     263 00000d00                   X32     a0
     264 00000d10     0b20          addi    process_ptrs,a0
         00000d20 00000000! 
     265 00000d40     8600          move    *a0,a0,L
     266 00000d50     b400          move    *a0(ANIMODE),a0
         00000d60     0660  
     267 00000d70     1f40          btst    MODE_NOGRAVITY_BIT,a0
     268 00000d80     cbbf          jrnz    dfxodoit
     269 00000d90     0960          rets
     270                    
     271                    
     272 00000da0           dfxoneck_grab
     273 00000da0     0040          .word   B_SPUNCH,               J_ALL
     274 00000dc0     0008          .word   J_TOWARD,               J_REAL_LR
     275 00000de0     0008          .word   J_TOWARD,               J_REAL_LR
     276 00000e00     801e          .word   8000h | 30              ;max
     277 00000e10 00000e30'         .long   dfxoscrt_neck
     278                    
     279 00000e30           dfxoscrt_neck
     280 00000e30     b5a0          move    *a13(ANIMODE),a0
         00000e40     0660  
     281 00000e50     1fa0          btst    MODE_UNINT_BIT,a0
     282 00000e60     cb00          jrnz    dfxoout
         00000e70     0148  
     283                    
     284 00000e80     0d5f          calla   get_opp_plyrmode
         00000e90 00000000! 
     285 00000eb0     0b40          cmpi    MODE_ONGROUND,a0
         00000ec0     fffb  
     286 00000ed0     ca00          jrz     dfxoout
         00000ee0     0141  
     287 00000ef0     0b40          cmpi    MODE_DEAD,a0
         00000f00     fff6  
     288 00000f10     ca00          jrz     dfxoout
         00000f20     013d  
     289 00000f30     0b40          cmpi    MODE_HEADHELD,a0
         00000f40     ffec  
     290 00000f50     ca00          jrz     dfxoout
         00000f60     0139  
     291                    
     292 00000f70     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         00000f80     0cd0  
     293 00000f90     07a0          move    @PCNT,a0,L
         00000fa0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     294 00000fc0     45c0          sub     a14,a0
     295 00000fd0     0b40          cmpi    2*60,a0
         00000fe0     ff87  
     296 00000ff0     c507          jrge    dfxook2
     297                    
     298                            .ref    und_3_fake_hold_anim
     299 00001000     09e0          movi    und_3_fake_hold_anim,a0
         00001010 00000000! 
     300 00001030     0d5f          calla   change_anim1a
         00001040 00000000! 
     301 00001060     0960          rets
     302                    
     303 00001070           dfxook2
     304 00001070     b5a1          move    *a13(CLOSEST_XDIST),a1
         00001080     0370  
     305 00001090     0b41          cmpi    85,a1
         000010a0     ffaa  
     306 000010b0     c707          jrgt    dfxostd_grab
     307                    
     308 000010c0     09e0          movi    und_3_head_hold2_anim,a0
         000010d0 00000000! 
     309 000010f0     0d5f          calla   change_anim1a
         00001100 00000000! 
     310 00001120     0960          rets
     311                    
     312 00001130           dfxostd_grab
     313 00001130     09e0          movi    und_3_head_hold_anim,a0
         00001140 00000000! 
     314 00001160     0d5f          calla   change_anim1a
         00001170 00000000! 
     315 00001190     0960          rets
     316                    
     317                    
     318 000011a0           dfxobutton_hold
     319                    
     320 000011a0     b5a0          move    *a13(BUT_VAL_UP),a0
         000011b0     0bb0  
     321 000011c0     1fe0          btst    PLAYER_PUNCH_BIT,a0
     322 000011d0     ca0c          jrz     dfxono_punch
     323                    
     324 000011e0     b5a0          move    *a13(PLYRNUM),a0
         000011f0     0580  
     325 00001200     0d5f          calla   get_punch_dtime
         00001210 00000000! 
     326 00001230     0b40          cmpi    110,a0                  ;> min?
         00001240     ff91  
     327 00001250     c404          jrlt    dfxono_punch
     328                    
     329 00001260     0d3f          callr   scrt_spirit
         00001270     0004  
     330 00001280     0de0          setc
     331 00001290     0960          rets
     332                    
     333 000012a0           dfxono_punch
     334 000012a0     0320          clrc
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     335 000012b0     0960          rets
     336                    
     337 000012c0           scrt_spirit
     338 000012c0     b5a0          move    *a13(PLYRMODE),a0
         000012d0     05c0  
     339 000012e0     0b40          cmpi    MODE_HEADHELD,a0
         000012f0     ffec  
     340 00001300     ca00          jrz     dfxoout
         00001310     00fe  
     341 00001320     0b40          cmpi    MODE_HEADHOLD,a0
         00001330     ffef  
     342 00001340     ca00          jrz     dfxoout
         00001350     00fa  
     343                    
     344 00001360     b5a0          move    *a13(ANIMODE),a0
         00001370     0660  
     345 00001380     1fa0          btst    MODE_UNINT_BIT,a0
     346 00001390     cb00          jrnz    dfxoout
         000013a0     00f5  
     347                    
     348 000013b0     0d5f          calla   get_opp_plyrmode
         000013c0 00000000! 
     349 000013e0     0b40          cmpi    MODE_ONGROUND,a0
         000013f0     fffb  
     350 00001400     ca00          jrz     dfxoout
         00001410     00ee  
     351                    
     352 00001420     b5a0          move    *a13(PLYRMODE),a0
         00001430     05c0  
     353 00001440     0b40          cmpi    MODE_RUNNING,a0
         00001450     fffe  
     354 00001460     ca21          jrz     dfxoleapbrk
     355                    
     356 00001470     09e0          movi    und_neckbreaker2_anim,a0
         00001480 00000000! 
     357 000014a0     0d5f          calla   change_anim1a
         000014b0 00000000! 
     358                    
     359 000014d0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
     360                    
     361 00001670     0960          rets
     362                    
     363 00001680           dfxoleapbrk
     364 00001680     09e0          movi    und_neckbreaker3_anim,a0
         00001690 00000000! 
     365 000016b0     0d5f          calla   change_anim1a
         000016c0 00000000! 
     366                    
     367 000016e0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
     368                    
     369 00001880     0960          rets
     370                    
     371                    
     372                    
     373 00001890           dfxograb_fling2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

     374 00001890     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     375 000018b0     800a          .word   8000h | 10              ;max
     376 000018c0 00001930'         .long   dfxoscrt_grabfling2
     377                    
     378 000018e0           dfxohip_toss2
     379 000018e0     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     380 00001900     800a          .word   8000h | 10              ;max
     381 00001910 00001930'         .long   dfxoscrt_grabfling2
     382                    
     383 00001930           dfxoscrt_grabfling2
     384 00001930     b5a0          move    *a13(ANIMODE),a0
         00001940     0660  
     385 00001950     1fa0          btst    MODE_UNINT_BIT,a0
     386 00001960     cb00          jrnz    dfxoout
         00001970     0098  
     387                    
     388 00001980     0d5f          calla   get_opp_plyrmode
         00001990 00000000! 
     389 000019b0     0b40          cmpi    MODE_BOUNCING,a0
         000019c0     fffa  
     390 000019d0     ca1b          jrz     dfxoyes
     391 000019e0     0b40          cmpi    MODE_RUNNING,a0
         000019f0     fffe  
     392 00001a00     ca18          jrz     dfxoyes
     393 00001a10     0960          rets
     394                    
     395                    
     396 00001a20           dfxograb_fling
     397                    
     398 00001a20     0040          .word   B_SPUNCH,               J_ALL
     399 00001a40     0004          .word   J_AWAY,         J_REAL_LR
     400 00001a60     0004          .word   J_AWAY,         J_REAL_LR
     401 00001a80     8020          .word   8000h | 32              ;max
     402 00001a90 00001ab0'         .long   dfxoscrt_grabfling
     403                    
     404 00001ab0           dfxoscrt_grabfling
     405 00001ab0     b5a0          move    *a13(ANIMODE),a0
         00001ac0     0660  
     406 00001ad0     1fa0          btst    MODE_UNINT_BIT,a0
     407 00001ae0     cb00          jrnz    dfxoout
         00001af0     0080  
     408                    
     409 00001b00     0d5f          calla   get_opp_plyrmode
         00001b10 00000000! 
     410 00001b30     0b40          cmpi    MODE_BOUNCING,a0
         00001b40     fffa  
     411 00001b50     ca03          jrz     dfxoyes
     412 00001b60     0b40          cmpi    MODE_RUNNING,a0
         00001b70     fffe  
     413 00001b80     cb36          jrnz    dfxonope
     414 00001b90           dfxoyes
     415 00001b90                   FACE24  und,snapmirror_anim
     416 00001c30     0d5f          calla   change_anim1a
         00001c40 00000000! 
     417                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     418 00001c60     5600          clr     a0
     419 00001c70     b20d          move    a0,*a13(ATTACH_PROC),L
         00001c80     03e0  
     420 00001c90                   SETMODE NORMAL
     421                    
     422 00001d40                   WRSND   W_TAKER,GRABFLING_T1,PUNCH_T2
     423 00001ee0     0960          rets
     424                    
     425 00001ef0           dfxonope
     426 00001ef0     0d5f          calla   get_opp_plyrmode
         00001f00 00000000! 
     427 00001f20     0b40          cmpi    MODE_HEADHELD,a0
         00001f30     ffec  
     428 00001f40     ca3c          jrz     dfxock2
     429 00001f50     0b40          cmpi    MODE_ONGROUND,a0
         00001f60     fffb  
     430 00001f70     ca38          jrz     dfxoout
     431 00001f80     0b40          cmpi    MODE_DEAD,a0
         00001f90     fff6  
     432 00001fa0     ca35          jrz     dfxoout
     433 00001fb0           dfxodoit0
     434 00001fb0     5600          clr     a0
     435 00001fc0     b20d          move    a0,*a13(ATTACH_PROC),L
         00001fd0     03e0  
     436                    
     437 00001fe0                   SETMODE NORMAL
     438                    
     439                    
     440 00002090                   FACE24  und,grabfling_anim
     441 00002130     0d5f          calla   change_anim1a
         00002140 00000000! 
     442                    
     443 00002160                   WRSND   W_TAKER,GRABFLING_T1,PUNCH_T2
     444 00002300           dfxoout
     445 00002300     0960          rets
     446 00002310           dfxock2
     447 00002310     b5a0          move    *a13(CLOSEST_NUM),a0
         00002320     03a0  
     448 00002330                   X32     a0
     449 00002340     0b20          addi    process_ptrs,a0
         00002350 00000000! 
     450 00002370     8600          move    *a0,a0,L
     451 00002380     b400          move    *a0(ANIMODE),a0
         00002390     0660  
     452 000023a0     1f40          btst    MODE_NOGRAVITY_BIT,a0
     453 000023b0     cbbf          jrnz    dfxodoit0
     454 000023c0     0960          rets
     455                            
     456                            .if NUM_TAKER_FINISHES
     457                    
     458 000023d0            SUBRP  shake_world
     459 000023d0     07a8          move    @WORLDTLX,a8,L
         000023e0 00000000! 
     460 00002400     07a9          move    @WORLDTLY,a9,L
         00002410 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     461 00002430           dcpwsw_loop
     462 00002430     1880          movk    4,a0
     463 00002440     0d5f          calla   RNDRNG0
         00002450 00000000! 
     464 00002470     184b          movk    2,a11
     465 00002480     440b          sub     a0,a11
     466 00002490     260b          sll     16,a11
     467 000024a0     4d0a          move    a8,a10
     468 000024b0     416a          add     a11,a10
     469 000024c0     078a          move    a10,@WORLDTLX,L
         000024d0 00000000! 
     470                    
     471 000024f0     1880          movk    4,a0
     472 00002500     0d5f          calla   RNDRNG0
         00002510 00000000! 
     473 00002530     184b          movk    2,a11
     474 00002540     440b          sub     a0,a11
     475 00002550     260b          sll     16,a11
     476 00002560     4d2a          move    a9,a10
     477 00002570     416a          add     a11,a10
     478 00002580     078a          move    a10,@WORLDTLY,L
         00002590 00000000! 
     479                    
     480 000025b0     0d5f          calla   BGND_UD1
         000025c0 00000000! 
     481                    
     482 000025e0                   SLEEPK  3
     483 00002620     c0e0          jruc    dcpwsw_loop
     484                            
     485 00002630                   DIE
     486                    
     487 00002660            SUBRP  adjust_view
     488 00002660     07ae          move    @WORLDTLX,a14,L
         00002670 00000000! 
     489                    
     490                            ; If we are positioned within 100 pixels to the left of the right
     491                            ; edge of the ring don't bother scrolling any further.
     492 00002690     4dc0          move    a14,a0
     493 000026a0     2e00          srl     16,a0
     494 000026b0     0b40          cmpi    1322-100,a0
         000026c0     fb39  
     495 000026d0     c51d          jrge    clewav_exit
     496                    
     497                            ; Get the midpoint between taker and the right edge of ring
     498 000026e0     b70e          move    *a8(OBJ_XPOS),a14,L
         000026f0     0100  
     499 00002700     0b2e          addi    [1200,0],a14
         00002710 04b00000  
     500 00002730     2fee          srl     1,a14
     501                    
     502                            ; Get the difference between taker and the midpoint
     503 00002740     b700          move    *a8(OBJ_XPOS),a0,L
         00002750     0100  
     504 00002760     440e          sub     a0,a14
     505                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     506                            ; Divide by 32
     507 00002770     2b6e          sra     5,a14
     508                    
     509                            ; Do the move
     510 00002780     09c9          movi    32,a9
         00002790     0020  
     511 000027a0           clewmv_loop
     512 000027a0     07a0          move    @WORLDTLX,a0,L
         000027b0 00000000! 
     513 000027d0     41c0          add     a14,a0
     514 000027e0     0780          move    a0,@WORLDTLX,L
         000027f0 00000000! 
     515 00002810                   PUSHP   a14
     516 00002820                   SLEEPK  1
     517 00002860     0d5f          calla   BGND_UD1
         00002870 00000000! 
     518 00002890                   PULLP   a14
     519 000028a0     3e29          dsjs    a9,clewmv_loop
     520                    
     521 000028b0           clewav_exit
     522                            ; Now start the world shakin' around
     523 000028b0                   CREATE  FIREWRK_PID,shake_world
     524                    
     525 00002930                   RETP
     526                    
     527                    
     528 00002960            SUBRP  und_finish_move1
     529                    
     530              0035  zrvtTIMEOUT     .equ    TSEC
     531                    
     532                            ; Set up the globals used to syncronize everythins
     533 00002960     57ce          clr             a14
     534 00002970     058e          move            a14,@in_finish_move
         00002980 00000000! 
     535 000029a0     058e          move            a14,@close_the_door
         000029b0 00000000! 
     536 000029d0     058e          move            a14,@guy_up
         000029e0 00000000! 
     537 00002a00     058e          move            a14,@guy_in
         00002a10 00000000! 
     538                    
     539                            ; Now wait on the correct buttons -n- sticks
     540 00002a30           zrvtreset
     541 00002a30     576b          clr             a11
     542 00002a40                   SLEEPK          1
     543 00002a80                   WAITSWITCH_DWN  J_UP,0,zrvtreset
     544 00002be0     09cb          movi            zrvtTIMEOUT,a11
         00002bf0     0035  
     545 00002c00                   WAITSWITCH_DWN  J_DOWN,0,zrvtreset
     546 00002d60                   WAITSWITCH_DWN  B_PUNCH,J_ALL,zrvtreset
     547                    
     548                    
     549                            ; Make sure the guy we are doin' this on is dead
     550 00002ec0                   PUSH            a13
     551 00002ed0     4d0d          move            a8,a13
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     552 00002ee0     0d5f          calla           get_opp_plyrmode
         00002ef0 00000000! 
     553 00002f10                   PULL            a13
     554 00002f20     0b40          cmpi            MODE_DEAD,a0
         00002f30     fff6  
     555 00002f40     cbae          jrnz            zrvtreset
     556                    
     557                            ; Check to make sure this is my 2nd pin attempt
     558 00002f50     05a0          move            @p1pins,a0
         00002f60 00000000! 
     559 00002f80     b50e          move            *a8(PLYR_SIDE),a14
         00002f90     05b0  
     560 00002fa0     ca03          jrz             zrvtis_p1
     561 00002fb0     05a0          move            @p2pins,a0
         00002fc0 00000000! 
     562 00002fe0           zrvtis_p1
     563 00002fe0     0b40          cmpi            2,a0
         00002ff0     fffd  
     564 00003000     c4a2          jrlt            zrvtreset
     565                    
     566                            ; Don't allow the move if I've been turned into a drone
     567                            ; by the autopin goop
     568 00003010     b50e          move            *a8(PLYR_TYPE),a14
         00003020     05a0  
     569 00003030     cb48          jrnz            zrvtfi1_exit
     570                    
     571                            ; Don't allow the move if I'm outside the ring
     572 00003040     b50e          move            *a8(RING_TIME),a14
         00003050     0c40  
     573 00003060     ce45          jrn             zrvtfi1_exit
     574                    
     575                            ; Don't allow the move if I've already pinned the guy
     576 00003070     b50e          move            *a8(STATUS_FLAGS),a14
         00003080     0b50  
     577 00003090     1fce          btst            B_DID_PIN,a14
     578 000030a0     cb41          jrnz            zrvtfi1_exit
     579                    
     580                            ; Set up globals used for this animation
     581 000030b0     b70e          move            *a8(WHOIHIT),a14,L
         000030c0     0500  
     582 000030d0     078e          move            a14,@dead_wrestler,L
         000030e0 00000000! 
     583                    
     584                            ; Don't allow move if dead guy is to right of center ring + 100 pix
     585 00003100     b5ce          move            *a14(OBJ_XPOSINT),a14
         00003110     0110  
     586 00003120     0b4e          cmpi            RING_X_CENTER+100,a14
         00003130     fb69  
     587 00003140     c737          jrgt            zrvtfi1_exit
     588                    
     589                            ; Don't allow move if taker is to right of center ring + 100 pix
     590 00003150     b50e          move            *a8(OBJ_XPOSINT),a14
         00003160     0110  
     591 00003170     0b4e          cmpi            RING_X_CENTER+100,a14
         00003180     fb69  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     592 00003190     c732          jrgt            zrvtfi1_exit
     593                    
     594                            ; OK - we made it - tell all who care we are going to
     595                            ; do a finishing move.  This also shuts down the scroller.
     596 000031a0     182e          movk            1,a14
     597 000031b0     058e          move            a14,@in_finish_move
         000031c0 00000000! 
     598                    
     599                            ; clear victim's DO_BUCKOFF bit and set his NO_BUCKOFF bit
     600 000031e0     07a0          move            @dead_wrestler,a0,L
         000031f0 00000000! 
     601 00003210     b60e          move            *a0(STATUS_FLAGS),a14,L
         00003220     0b50  
     602 00003230     0b8e          andni           M_DO_BUCKOFF,a14
         00003240 00001000  
     603 00003260     0bae          ori             M_NO_BUCKOFF,a14
         00003270 00002000  
     604 00003290     b3c0          move            a14,*a0(STATUS_FLAGS),L
         000032a0     0b50  
     605                    
     606                            ; Move the view to 1/2 way between taker and the coffin
     607 000032b0                   JSRP            adjust_view
     608                    
     609                            ; Let the dust settle before we start our animation
     610 00003320                   SLEEPK          15
     611                    
     612                            ; Start the animation for the finish move
     613 00003360     09ee          movi            und_2_raise_dead_anim,a14
         00003370 00000000! 
     614 00003390     b3c8          move            a14,*a8(SPECIAL_MOVE_ADDR),L
         000033a0     0930  
     615                    
     616                            ; Wait here until finish move is complete
     617 000033b0           zrvtfdone_wait
     618 000033b0                   SLEEPK          5
     619 000033f0     05ae          move            @finish_completed,a14
         00003400 00000000! 
     620 00003420     caf8          jrz             zrvtfdone_wait
     621                    
     622                            ; Tell everbody that cares that the finish move is done
     623 00003430     57ce          clr             a14
     624 00003440     058e          move            a14,@in_finish_move
         00003450 00000000! 
     625                    
     626                            ; Kill off shaker process
     627 00003470     09c0          movi            FIREWRK_PID,a0
         00003480     01a0  
     628 00003490     0d5f          calla           KIL1C
         000034a0 00000000! 
     629                    
     630 000034c0           zrvtfi1_exit
     631 000034c0                   DIE
     632                            .endif
     633                            
     634                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

     635                            .if NUM_TAKER_FINISHES > 1
     636                     SUBRP  und_finish_move2
     637                    
     638                    bglzTIMEOUT     .equ    TSEC
     639                    
     640                    bglzend_wait
     641                            SLEEP           TSEC/4
     642                            move            @p1rounds,a0                    ; Get player 1 rounds
     643                            move            @p2rounds,a1                    ; Get player 2 rounds
     644                            or              a1,a0                           ; Put em together
     645                            cmpi            2,a0                            ; Anybody got 2?
     646                            jrlt            bglzend_wait                    ; br = no
     647                    
     648                    bglzreset
     649                            clr             a11
     650                            move            a11,@in_finish_move
     651                            SLEEPK          1
     652                            WAITSWITCH_DWN  J_UP,0,bglzreset
     653                            movi            bglzTIMEOUT,a11
     654                            move            a11,@in_finish_move
     655                            WAITSWITCH_DWN  J_UP,0,bglzreset
     656                            WAITSWITCH_DWN  J_RIGHT,J_UP,bglzreset
     657                            WAITSWITCH_DWN  J_RIGHT,J_UP,bglzreset
     658                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,bglzreset
     659                    
     660                            movi            und_finish2_move,a0
     661                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     662                            DIE
     663                            .endif
     664                    
     665 000034f0           und_hdhold_neckbrk
     666                    
     667              003c  pziiTIMEOUT     .equ    60
     668                    
     669 000034f0           pziilp0
     670 000034f0                   SLEEPK  1
     671 00003530           pziilp
     672 00003530     b500          move    *a8(PLYRMODE),a0
         00003540     05c0  
     673 00003550     0b40          cmpi    MODE_HEADHOLD,a0
         00003560     ffef  
     674 00003570     ca03          jrz     pziicont
     675 00003580     0b40          cmpi    MODE_HEADHELD,a0
         00003590     ffec  
     676 000035a0     cbf4          jrnz    pziilp0
     677 000035b0           pziicont
     678 000035b0     576b          clr     a11
     679                    
     680 000035c0                   WAITSWITCH_DWN  J_TOWARD,0,pziilp
     681                    
     682 00003720     09cb          movi    pziiTIMEOUT,a11
         00003730     003c  
     683                    
     684 00003740                   WAITSWITCH_DWN  J_TOWARD,0,pziilp
     685 000038a0                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,pziilp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     686                    
     687                    
     688 00003a00     b500          move    *a8(PLYRMODE),a0
         00003a10     05c0  
     689 00003a20     0b40          cmpi    MODE_HEADHOLD,a0
         00003a30     ffef  
     690 00003a40     ca1c          jrz     pziislam
     691 00003a50     0b40          cmpi    MODE_HEADHELD,a0
         00003a60     ffec  
     692 00003a70     cba7          jrnz    pziilp0
     693 00003a80     b50e          move    *a8(I_WILL_DIE),A14
         00003a90     0b30  
     694 00003aa0     cba4          jrnz    pziilp0
     695                    
     696 00003ab0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003ac0     0ae0  
     697 00003ad0     cba1          jrnz    pziilp0                         ;ignore
     698                    
     699 00003ae0     0d5f          CALLA   DO_REVERSAL
         00003af0 00000000! 
     700 00003b10     0d5f          CALLA   DO_REVERSAL_MESS
         00003b20 00000000! 
     701                    
     702                            ;target WHOHITME -- don't hit anyone else
     703 00003b40                   SMRTTGT a8,WHOHITME
     704                    
     705                            ;immobilize WHOHITME
     706 00003be0     b700          move    *a8(WHOHITME),a0,L
         00003bf0     04e0  
     707 00003c00     c018          jruc    pziiis_reversal
     708                    
     709 00003c10           pziislam
     710 00003c10     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003c20     0ae0  
     711 00003c30     cb8b          jrnz    pziilp0                         ;ignore
     712                    
     713 00003c40     182a          movk    1,a10
     714 00003c50                   CREATE  MESSAGE_PID,BONUS_MESS
     715                    
     716                            ;target WHOIHIT -- don't hit anyone else
     717 00003cd0                   SMRTTGT a8,WHOIHIT
     718                    
     719                            ;immobilize WHOIHIT
     720 00003d70     b700          move    *a8(WHOIHIT),a0,L
         00003d80     0500  
     721                    
     722 00003d90           pziiis_reversal
     723 00003d90     19ee          movk    15,a14
     724 00003da0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00003db0     0ae0  
     725                    
     726 00003dc0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003dd0 00000000! 
     727                    
     728 00003df0     09ee          movi    und_neckbreaker_anim,a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

         00003e00 00000000! 
     729 00003e20     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003e30     0930  
     730                    
     731 00003e40                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     732                    
     733 00003fe0                   SLEEPK  20
     734                    
     735 00004020     c000          jruc    pziilp
         00004030     ff4f  
     736                    
     737 00004040           und_hdhold_faceslam
     738                    
     739              003c  wpxkTIMEOUT     .equ    60
     740                    
     741 00004040           wpxklp0
     742 00004040                   SLEEPK  1
     743 00004080           wpxklp
     744 00004080     b500          move    *a8(PLYRMODE),a0
         00004090     05c0  
     745 000040a0     0b40          cmpi    MODE_HEADHOLD,a0
         000040b0     ffef  
     746 000040c0     ca06          jrz     wpxkcont
     747 000040d0     0b40          cmpi    MODE_CHOKEHOLD,a0
         000040e0     ffe7  
     748 000040f0     ca03          jrz     wpxkcont
     749 00004100     0b40          cmpi    MODE_HEADHELD,a0
         00004110     ffec  
     750 00004120     cbf1          jrnz    wpxklp0
     751 00004130           wpxkcont
     752 00004130     576b          clr     a11
     753                    
     754 00004140                   WAITSWITCH_DWN  J_DOWN,0,wpxklp
     755                    
     756 000042a0     09cb          movi    wpxkTIMEOUT,a11
         000042b0     003c  
     757                    
     758 000042c0                   WAITSWITCH_DWN  J_DOWN,0,wpxklp
     759 00004420                   WAITSWITCH_DWN  B_KICK,J_ALL,wpxklp
     760                    
     761 00004580     b500          move    *a8(PLYRMODE),a0
         00004590     05c0  
     762 000045a0     0b40          cmpi    MODE_HEADHOLD,a0
         000045b0     ffef  
     763 000045c0     ca1f          jrz     wpxkslam
     764 000045d0     0b40          cmpi    MODE_CHOKEHOLD,a0
         000045e0     ffe7  
     765 000045f0     ca1c          jrz     wpxkslam
     766 00004600     0b40          cmpi    MODE_HEADHELD,a0
         00004610     ffec  
     767 00004620     cba1          jrnz    wpxklp0
     768 00004630     b50e          move    *a8(I_WILL_DIE),A14
         00004640     0b30  
     769 00004650     cb9e          jrnz    wpxklp0
     770                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     771 00004660     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004670     0ae0  
     772 00004680     cb9b          jrnz    wpxklp0                         ;ignore
     773                    
     774 00004690     0d5f          CALLA   DO_REVERSAL
         000046a0 00000000! 
     775 000046c0     0d5f          CALLA   DO_REVERSAL_MESS
         000046d0 00000000! 
     776                    
     777                            ;target WHOHITME -- don't hit anyone else
     778 000046f0                   SMRTTGT a8,WHOHITME
     779                    
     780                            ;immobilize WHOHITME
     781 00004790     b700          move    *a8(WHOHITME),a0,L
         000047a0     04e0  
     782 000047b0     c018          jruc    wpxkis_reversal
     783                    
     784 000047c0           wpxkslam
     785 000047c0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000047d0     0ae0  
     786 000047e0     cb85          jrnz    wpxklp0                         ;ignore
     787                    
     788 000047f0     182a          movk    1,a10
     789 00004800                   CREATE  MESSAGE_PID,BONUS_MESS
     790                    
     791                            ;target WHOIHIT -- don't hit anyone else
     792 00004880                   SMRTTGT a8,WHOIHIT
     793                    
     794                            ;immobilize WHOIHIT
     795 00004920     b700          move    *a8(WHOIHIT),a0,L
         00004930     0500  
     796                    
     797 00004940           wpxkis_reversal
     798 00004940     19ee          movk    15,a14
     799 00004950     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00004960     0ae0  
     800                    
     801 00004970     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004980 00000000! 
     802                    
     803 000049a0     09ee          movi    und_choke_face_slam_anim,a14
         000049b0 00000000! 
     804 000049d0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000049e0     0930  
     805                    
     806 000049f0                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     807                    
     808 00004b90                   SLEEPK  20
     809                    
     810 00004bd0     c000          jruc    wpxklp
         00004be0     ff49  
     811                    
     812 00004bf0           und_hdhold_pile
     813                    
     814              003c  fogtTIMEOUT     .equ    60
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     815                    
     816 00004bf0           fogtlp0
     817 00004bf0                   SLEEPK  1
     818 00004c30           fogtlp
     819 00004c30     b500          move    *a8(PLYRMODE),a0
         00004c40     05c0  
     820 00004c50     0b40          cmpi    MODE_HEADHOLD,a0
         00004c60     ffef  
     821 00004c70     ca03          jrz     fogtcont
     822 00004c80     0b40          cmpi    MODE_HEADHELD,a0
         00004c90     ffec  
     823 00004ca0     cbf4          jrnz    fogtlp0
     824 00004cb0           fogtcont
     825 00004cb0     576b          clr     a11
     826                    
     827 00004cc0                   WAITSWITCH_DWN  J_DOWN,0,fogtlp
     828                    
     829 00004e20     09cb          movi    fogtTIMEOUT,a11
         00004e30     003c  
     830                    
     831 00004e40                   WAITSWITCH_DWN  J_DOWN,0,fogtlp
     832 00004fa0                   WAITSWITCH_DWN  B_SKICK,J_ALL,fogtlp
     833                    
     834                    
     835 00005100     b500          move    *a8(PLYRMODE),a0
         00005110     05c0  
     836 00005120     0b40          cmpi    MODE_HEADHOLD,a0
         00005130     ffef  
     837 00005140     ca1c          jrz     fogtslam
     838 00005150     0b40          cmpi    MODE_HEADHELD,a0
         00005160     ffec  
     839 00005170     cba7          jrnz    fogtlp0
     840 00005180     b50e          move    *a8(I_WILL_DIE),A14
         00005190     0b30  
     841 000051a0     cba4          jrnz    fogtlp0
     842                    
     843 000051b0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000051c0     0ae0  
     844 000051d0     cba1          jrnz    fogtlp0                         ;ignore
     845                    
     846 000051e0     0d5f          CALLA   DO_REVERSAL
         000051f0 00000000! 
     847 00005210     0d5f          CALLA   DO_REVERSAL_MESS
         00005220 00000000! 
     848                    
     849                            ;target WHOHITME -- don't hit anyone else
     850 00005240                   SMRTTGT a8,WHOHITME
     851                    
     852                            ;target WHOHITME
     853 000052e0     b700          move    *a8(WHOHITME),a0,L
         000052f0     04e0  
     854 00005300     c018          jruc    fogtis_reversal
     855                    
     856 00005310           fogtslam
     857 00005310     b50e          move    *a8(IMMOBILIZE_TIME),a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

         00005320     0ae0  
     858 00005330     cb8b          jrnz    fogtlp0                         ;ignore
     859                    
     860 00005340     1baa          movk    29,a10
     861 00005350                   CREATE  MESSAGE_PID,BONUS_MESS
     862                    
     863                            ;target WHOIHIT -- don't hit anyone else
     864 000053d0                   SMRTTGT a8,WHOIHIT
     865                    
     866                            ;target WHOIHIT
     867 00005470     b700          move    *a8(WHOIHIT),a0,L
         00005480     0500  
     868                    
     869 00005490           fogtis_reversal
     870 00005490     19ee          movk    15,a14
     871 000054a0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000054b0     0ae0  
     872                    
     873 000054c0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000054d0 00000000! 
     874 000054f0     09ee          movi    und_pile_anim,a14
         00005500 00000000! 
     875 00005520     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005530     0930  
     876                    
     877 00005540                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     878                    
     879 000056e0                   SLEEPK  20
     880                    
     881 00005720     c000          jruc    fogtlp
         00005730     ff4f  
     882                    
     883 00005740           und_choke_slide
     884                    
     885              003c  ozwpTIMEOUT     .equ    60
     886                    
     887 00005740           ozwplp0
     888 00005740                   SLEEPK  1
     889 00005780           ozwplp
     890 00005780     576b          clr     a11
     891                    
     892 00005790                   WAITSWITCH_DWN  J_DOWN,0,ozwplp
     893                    
     894 000058f0     09cb          movi    ozwpTIMEOUT,a11
         00005900     003c  
     895                    
     896                    
     897 00005910                   WAITSWITCH_DWN  J_TOWARD,J_UP|J_DOWN,ozwplp
     898 00005a70                   WAITSWITCH_DWN  B_PUNCH,J_ALL,ozwplp
     899                    
     900 00005bd0     b500          move    *a8(ANIMODE),a0
         00005be0     0660  
     901 00005bf0     1fa0          btst    MODE_UNINT_BIT,a0
     902 00005c00     cbb3          jrnz    ozwplp0
     903                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     904 00005c10     b500          move    *a8(PLYRMODE),a0
         00005c20     05c0  
     905 00005c30     0b40          cmpi    MODE_ONTURNBKL,a0
         00005c40     fff9  
     906 00005c50     caae          jrz     ozwplp0
     907 00005c60     0b40          cmpi    MODE_RUNNING,a0
         00005c70     fffe  
     908 00005c80     caab          jrz     ozwplp0
     909 00005c90     b50e          move    *a8(I_WILL_DIE),A14
         00005ca0     0b30  
     910 00005cb0     cba8          jrnz    ozwplp0
     911                    
     912 00005cc0                   SWAP    a8,a13
     913 00005cf0     0d5f          calla   get_opp_plyrmode
         00005d00 00000000! 
     914 00005d20                   SWAP    a8,a13
     915 00005d50     0b40          cmpi    MODE_ONGROUND,a0
         00005d60     fffb  
     916 00005d70     ca9c          jrz     ozwplp0
     917 00005d80     0b40          cmpi    MODE_DEAD,a0
         00005d90     fff6  
     918 00005da0     ca99          jrz     ozwplp0
     919 00005db0     0b40          cmpi    MODE_HEADHELD,a0
         00005dc0     ffec  
     920 00005dd0     ca96          jrz     ozwplp0
     921 00005de0     0b40          cmpi    MODE_CHOKING,a0
         00005df0     ffe6  
     922 00005e00     ca93          jrz     ozwplp0
     923                    
     924 00005e10     09ee          movi    und_sliding_choke_anim,a14
         00005e20 00000000! 
     925 00005e40     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005e50     0930  
     926                    
     927 00005e60                   SLEEPK  20
     928                    
     929 00005ea0     c08d          jruc    ozwplp
     930                    
     931 00005eb0           und_spirit_push
     932                    
     933              003c  fxtgTIMEOUT     .equ    60
     934                    
     935 00005eb0           fxtglp0
     936 00005eb0                   SLEEPK  1
     937 00005ef0           fxtglp
     938 00005ef0     b500          move    *a8(PLYRMODE),a0
         00005f00     05c0  
     939 00005f10     0b40          cmpi    MODE_HEADHOLD,a0
         00005f20     ffef  
     940 00005f30     caf7          jrz     fxtglp0
     941 00005f40     0b40          cmpi    MODE_HEADHELD,a0
         00005f50     ffec  
     942 00005f60     caf4          jrz     fxtglp0
     943                    
     944 00005f70     576b          clr     a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     945                    
     946 00005f80                   WAITSWITCH_DWN  J_DOWN,0,fxtglp
     947                    
     948 000060e0     09cb          movi    fxtgTIMEOUT,a11
         000060f0     003c  
     949                    
     950 00006100                   WAITSWITCH_DWN  J_TOWARD,J_UP|J_DOWN,fxtglp
     951 00006260                   WAITSWITCH_DWN  B_KICK,J_ALL,fxtglp
     952                    
     953 000063c0     b500          move    *a8(ANIMODE),a0
         000063d0     0660  
     954 000063e0     1fa0          btst    MODE_UNINT_BIT,a0
     955 000063f0     cbab          jrnz    fxtglp0
     956                    
     957 00006400     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00006410     0ae0  
     958 00006420     cba8          jrnz    fxtglp0                         ;ignore
     959                        
     960 00006430                   SWAP    a8,a13
     961 00006460     0d5f          calla   get_opp_plyrmode
         00006470 00000000! 
     962 00006490                   SWAP    a8,a13
     963 000064c0     0b40          cmpi    MODE_CHOKING,a0
         000064d0     ffe6  
     964 000064e0     caa0          jrz     fxtglp
     965 000064f0     0b40          cmpi    MODE_HEADHELD,a0
         00006500     ffec  
     966 00006510     ca9d          jrz     fxtglp
     967                    
     968 00006520     09ee          movi    und_spirit_push_anim,a14
         00006530 00000000! 
     969 00006550     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00006560     0930  
     970                    
     971 00006570     5600          clr     a0
     972 00006580     b008          move    a0,*a8(RUN_TIME)
         00006590     07b0  
     973                    
     974 000065a0                   SETMODE NORMAL
     975                    
     976 00006650                   SLEEP   3*60
     977                    
     978 000066a0     c084          jruc    fxtglp
     979                    
     980                    
     981 000066b0           und_spirit_pull
     982                    
     983              003c  mycxTIMEOUT     .equ    60
     984                    
     985 000066b0           mycxlp0
     986 000066b0                   SLEEPK  1
     987 000066f0           mycxlp
     988 000066f0     b500          move    *a8(PLYRMODE),a0
         00006700     05c0  
     989 00006710     0b40          cmpi    MODE_HEADHOLD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

         00006720     ffef  
     990 00006730     caf7          jrz     mycxlp0
     991 00006740     0b40          cmpi    MODE_HEADHELD,a0
         00006750     ffec  
     992 00006760     caf4          jrz     mycxlp0
     993                    
     994 00006770     576b          clr     a11
     995                    
     996 00006780                   WAITSWITCH_DWN  J_DOWN,0,mycxlp
     997                    
     998 000068e0     09cb          movi    mycxTIMEOUT,a11
         000068f0     003c  
     999                    
    1000                    
    1001 00006900                   WAITSWITCH_DWN  J_AWAY,J_UP|J_DOWN,mycxlp
    1002 00006a60                   WAITSWITCH_DWN  B_KICK,J_ALL,mycxlp
    1003                    
    1004 00006bc0     b500          move    *a8(ANIMODE),a0
         00006bd0     0660  
    1005 00006be0     1fa0          btst    MODE_UNINT_BIT,a0
    1006 00006bf0     cbab          jrnz    mycxlp0
    1007                    
    1008 00006c00     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00006c10     0ae0  
    1009 00006c20     cba8          jrnz    mycxlp0                         ;ignore
    1010                    
    1011 00006c30                   SWAP    a8,a13
    1012 00006c60     0d5f          calla   get_opp_plyrmode
         00006c70 00000000! 
    1013 00006c90                   SWAP    a8,a13
    1014 00006cc0     0b40          cmpi    MODE_CHOKING,a0
         00006cd0     ffe6  
    1015 00006ce0     caa0          jrz     mycxlp
    1016 00006cf0     0b40          cmpi    MODE_HEADHELD,a0
         00006d00     ffec  
    1017 00006d10     ca9d          jrz     mycxlp
    1018                    
    1019 00006d20     09ee          movi    und_spirit_pull_anim,a14
         00006d30 00000000! 
    1020 00006d50     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00006d60     0930  
    1021                    
    1022 00006d70     5600          clr     a0
    1023 00006d80     b008          move    a0,*a8(RUN_TIME)
         00006d90     07b0  
    1024                    
    1025 00006da0                   SETMODE NORMAL
    1026                    
    1027 00006e50                   SLEEP   3*60
    1028                    
    1029 00006ea0     c084          jruc    mycxlp
    1030                    
    1031 00006eb0           und_grab_toss_air
    1032                    
    1033              0028  mldzTIMEOUT     .equ    40
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1034                    
    1035 00006eb0           mldzlp0
    1036 00006eb0                   SLEEPK  1
    1037 00006ef0           mldzlp
    1038 00006ef0     576b          clr     a11
    1039                    
    1040 00006f00                   WAITSWITCH_DWN  J_AWAY,0,mldzlp
    1041                    
    1042 00007060     09cb          movi    mldzTIMEOUT,a11
         00007070     0028  
    1043                    
    1044 00007080                   WAITSWITCH_DWN  J_AWAY,0,mldzlp
    1045 000071e0                   WAITSWITCH_DWN  B_PUNCH,J_ALL,mldzlp
    1046                    
    1047 00007340     b500          move    *a8(ANIMODE),a0
         00007350     0660  
    1048 00007360     1fa0          btst    MODE_UNINT_BIT,a0
    1049 00007370     cbb7          jrnz    mldzlp
    1050                    
    1051 00007380     b500          move    *a8(PLYRMODE),a0
         00007390     05c0  
    1052 000073a0     0b40          cmpi    MODE_HEADHOLD,a0
         000073b0     ffef  
    1053 000073c0     caae          jreq    mldzlp0
    1054                    
    1055 000073d0                   SWAP    a8,a13
    1056 00007400     0d5f          calla   get_opp_plyrmode
         00007410 00000000! 
    1057 00007430                   SWAP    a8,a13
    1058 00007460     0b40          cmpi    MODE_ONGROUND,a0
         00007470     fffb  
    1059 00007480     caa6          jrz     mldzlp
    1060 00007490     0b40          cmpi    MODE_DEAD,a0
         000074a0     fff6  
    1061 000074b0     caa3          jrz     mldzlp
    1062 000074c0     0b40          cmpi    MODE_INAIR,a0
         000074d0     fffd  
    1063 000074e0     ca1f          jrz     mldzdoit2
    1064 000074f0     0b40          cmpi    MODE_INAIR2,a0
         00007500     ffea  
    1065 00007510     ca1c          jrz     mldzdoit2
    1066                    
    1067 00007520     b500          move    *a8(CLOSEST_NUM),a0
         00007530     03a0  
    1068 00007540                   X32     a0
    1069 00007550     0b20          addi    process_ptrs,a0
         00007560 00000000! 
    1070 00007580     8600          move    *a0,a0,L
    1071 00007590     b400          move    *a0(ATTACK_TYPE),a0
         000075a0     05e0  
    1072 000075b0     0b40          cmpi    AT_LEAPING,a0
         000075c0     ffc6  
    1073 000075d0     ca10          jrz     mldzdoit2
    1074                    
    1075 000075e0     b500          move    *a8(CLOSEST_DIST),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

         000075f0     0360  
    1076 00007600     0b40          cmpi    68h,a0
         00007610     ff97  
    1077 00007620     c78c          jrgt    mldzlp
    1078                    
    1079 00007630                   FACE24  und,snapmirror_anim
    1080 000076d0     c00a          jruc    mldzcont
    1081                    
    1082 000076e0           mldzdoit2       FACE24  und,snapmirror2_anim
    1083 00007780           mldzcont
    1084 00007780     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00007790     0930  
    1085                    
    1086 000077a0                   WRSND   W_TAKER,HIPTOSS_T1,HIPTOSS_T2
    1087                    
    1088 00007940     5600          clr     a0
    1089 00007950     b208          move    a0,*a8(ATTACH_PROC),L
         00007960     03e0  
    1090                    
    1091 00007970                   SETMODE NORMAL
    1092                    
    1093 00007a20                   SLEEPK  20
    1094                    
    1095 00007a60     c000          jruc    mldzlp
         00007a70     ff47  
    1096                    
    1097 00007a80           und_hdhold_combo1
    1098                    
    1099              003c  vkgwTIMEOUT     .equ    60
    1100                    
    1101 00007a80           vkgwlp0
    1102 00007a80                   SLEEPK  1
    1103 00007ac0           vkgwlp
    1104 00007ac0     b500          move    *a8(PLYRMODE),a0
         00007ad0     05c0  
    1105 00007ae0     0b40          cmpi    MODE_HEADHOLD,a0
         00007af0     ffef  
    1106 00007b00     cbf7          jrnz    vkgwlp0
    1107 00007b10     0d5f          calla   CHECK_COMBO_GO
         00007b20 00000000! 
    1108 00007b40     c4f3          jrlt    vkgwlp0
    1109                    
    1110                    
    1111 00007b50     576b          clr     a11
    1112                    
    1113 00007b60                   WAITSWITCH_DWN  J_TOWARD,0,vkgwlp
    1114                    
    1115 00007cc0     09cb          movi    vkgwTIMEOUT,a11
         00007cd0     003c  
    1116                    
    1117 00007ce0                   WAITSWITCH_DWN  J_TOWARD,0,vkgwlp
    1118 00007e40                   WAITSWITCH_DWN  B_SKICK,J_ALL,vkgwlp
    1119                    
    1120 00007fa0     b700          move    *a8(ANIBASE),a0,L
         00007fb0     0670  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1121 00007fc0     0b60          cmpi    und_sliding_choke_anim,a0
         00007fd0 ffffffff! 
    1122 00007ff0     caa8          jrz     vkgwlp0
    1123                    
    1124 00008000     b500          move    *a8(PLYRMODE),a0
         00008010     05c0  
    1125 00008020     0b40          cmpi    MODE_HEADHOLD,a0
         00008030     ffef  
    1126 00008040     ca03          jrz     vkgwslam
    1127 00008050     0b40          cmpi    MODE_HEADHELD,a0
         00008060     ffec  
    1128 00008070     cba0          jrnz    vkgwlp0
    1129                    
    1130                    
    1131 00008080           vkgwslam
    1132 00008080     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00008090     0ae0  
    1133 000080a0     cb9d          jrnz    vkgwlp0                         ;ignore
    1134                    
    1135                    
    1136                            ;target WHOIHIT
    1137 000080b0                   SMRTTGT a8,WHOIHIT
    1138                    
    1139 00008150     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00008160 00000000! 
    1140 00008180     09ee          movi    und_combo_punch_anim,a14
         00008190 00000000! 
    1141 000081b0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000081c0     0930  
    1142                    
    1143 000081d0                   SLEEPK  20
    1144                    
    1145 00008210     c08a          jruc    vkgwlp
    1146                    
    1147 00008220           und_hdhold_combo2
    1148                    
    1149              003c  evlgTIMEOUT     .equ    60
    1150                    
    1151 00008220           evlglp0
    1152 00008220                   SLEEPK  1
    1153 00008260           evlglp
    1154 00008260     b500          move    *a8(PLYRMODE),a0
         00008270     05c0  
    1155 00008280     0b40          cmpi    MODE_HEADHOLD,a0
         00008290     ffef  
    1156 000082a0     cbf7          jrnz    evlglp0
    1157 000082b0     0d5f          calla   CHECK_COMBO_GO
         000082c0 00000000! 
    1158 000082e0     c4f3          jrlt    evlglp0
    1159                    
    1160                    
    1161 000082f0     576b          clr     a11
    1162                    
    1163 00008300                   WAITSWITCH_DWN  J_TOWARD,0,evlglp
    1164                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1165 00008460     09cb          movi    evlgTIMEOUT,a11
         00008470     003c  
    1166                    
    1167 00008480                   WAITSWITCH_DWN  J_TOWARD,0,evlglp
    1168 000085e0                   WAITSWITCH_DWN  B_KICK,J_ALL,evlglp
    1169                    
    1170 00008740     b700          move    *a8(ANIBASE),a0,L
         00008750     0670  
    1171 00008760     0b60          cmpi    und_sliding_choke_anim,a0
         00008770 ffffffff! 
    1172 00008790     caa8          jrz     evlglp0
    1173                    
    1174 000087a0     b500          move    *a8(PLYRMODE),a0
         000087b0     05c0  
    1175 000087c0     0b40          cmpi    MODE_HEADHOLD,a0
         000087d0     ffef  
    1176 000087e0     ca03          jrz     evlgslam
    1177 000087f0     0b40          cmpi    MODE_HEADHELD,a0
         00008800     ffec  
    1178 00008810     cba0          jrnz    evlglp0
    1179                    
    1180                    
    1181 00008820           evlgslam
    1182 00008820     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00008830     0ae0  
    1183 00008840     cb9d          jrnz    evlglp0                         ;ignore
    1184                    
    1185                    
    1186                            ;target WHOIHIT
    1187 00008850                   SMRTTGT a8,WHOIHIT
    1188                    
    1189 000088f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00008900 00000000! 
    1190 00008920     09ee          movi    und_combo_kick_anim,A14
         00008930 00000000! 
    1191 00008950     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00008960     0930  
    1192                    
    1193 00008970                   SLEEPK  20
    1194                    
    1195 000089b0     c08a          jruc    evlglp
    1196                    
    1197                    
    1198                    
    1199 000089c0            SUBR   taker_ani_init
    1200                    
    1201 000089c0     5600          clr     a0
    1202 000089d0     b20d          move    a0,*a13(ATTIMG_CUR_FRAME),L
         000089e0     08e0  
    1203                    
    1204 000089f0     b5a0          move    *a13(FACING_DIR),a0
         00008a00     04c0  
    1205 00008a10     1f80          btst    PLAYER_RIGHT_BIT,a0
    1206 00008a20     cb18          jrnz    skvwp1
    1207 00008a30     09e0          movi    und_stand4_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

         00008a40 00000000! 
    1208 00008a60     0d5f          calla   change_anim1a
         00008a70 00000000! 
    1209                    
    1210 00008a90     09e0          movi    und_torso4_anim,a0
         00008aa0 00000000! 
    1211 00008ac0     0d5f          calla   change_anim2a
         00008ad0 00000000! 
    1212                    
    1213 00008af0                   PUSH    a10
    1214 00008b00     4daa          move    a13,a10
    1215 00008b10                   CREATE  TAUNT_PID,do_taunt
    1216 00008b90                   PULL    a10
    1217                    
    1218 00008ba0     0960          rets
    1219                    
    1220 00008bb0           skvwp1
    1221 00008bb0     09e0          movi    und_stand2_anim,a0
         00008bc0 00000000! 
    1222 00008be0     0d5f          calla   change_anim1a
         00008bf0 00000000! 
    1223                    
    1224 00008c10     09e0          movi    und_torso2_anim,a0
         00008c20 00000000! 
    1225 00008c40     0d5f          calla   change_anim2a
         00008c50 00000000! 
    1226                    
    1227 00008c70     0960          rets
    1228                    
    1229                    
    1230                    
    1231 00008c80            SUBR   move_taker
    1232                    
    1233                    
    1234                    
    1235 00008c80     09eb          movi    und_secret_moves,a11
         00008c90 00000000' 
    1236 00008cb0     0d5f          calla   check_secret_moves
         00008cc0 00000000! 
    1237                    
    1238 00008ce0     b5a0          move    *a13(PLYRMODE),a0
         00008cf0     05c0  
    1239 00008d00     24a0          sll     5,a0                    ;x 32
    1240 00008d10     0b20          addi    qchgmode_table,a0
         00008d20 00008d70' 
    1241 00008d40     8600          move    *a0,a0,L
    1242 00008d50     0920          call    a0
    1243 00008d60     0960          rets
    1244                    
    1245 00008d70           qchgmode_table
    1246 00008d70 000090b0'         .long   mode_normal             ;0
    1247 00008d90 00011010'         .long   mode_running            ;1
    1248 00008db0 00013330'         .long   mode_inair              ;2
    1249 00008dd0 00013340'         .long   mode_attached           ;3
    1250 00008df0 000134b0'         .long   mode_onground           ;4
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1251 00008e10 000134c0'         .long   mode_bouncing           ;5
    1252 00008e30 00013760'         .long   mode_onturnbkl          ;6
    1253 00008e50 00014100'         .long   mode_block              ;7
    1254 00008e70 00014b80'         .long   mode_dizzy              ;8
    1255 00008e90 00000000!         .long   mode_dead               ;9
    1256 00008eb0 00014b90'         .long   mode_oppoverhead        ;10
    1257 00008ed0 00014ba0'         .long   mode_climbturnbkl       ;11
    1258 00008ef0 00014bb0'         .long   mode_waitanim           ;12
    1259 00008f10 00014c30'         .long   mode_grapple            ;13
    1260 00008f30 00014c40'         .long   mode_master             ;14
    1261 00008f50 00014c80'         .long   mode_slave              ;15
    1262 00008f70 00014c90'         .long   mode_headhold           ;16
    1263 00008f90 00015d10'         .long   mode_puppet2            ;17
    1264 00008fb0 000090b0'         .long   mode_normal     ;18
    1265 00008fd0 00015d20'         .long   mode_headheld           ;19
    1266 00008ff0 00000000!         .long   mode_puppet             ;20
    1267 00009010 00000000!         .long   mode_inair2             ;21
    1268 00009030 000090b0'         .long   mode_normal     ;22
    1269 00009050 000090b0'         .long   mode_normal     ;23
    1270 00009070 000161e0'         .long   mode_chokehold          ;24
    1271 00009090 00017a60'         .long   mode_choking            ;25
    1272                    
    1273                    
    1274                    
    1275 000090b0           mode_normal
    1276                    
    1277 000090b0     b5a0          move    *a13(ANIMODE),a0
         000090c0     0660  
    1278 000090d0     1fa0          btst    MODE_UNINT_BIT,a0
    1279 000090e0     cb00          jrnz    zfkxno_interrupt
         000090f0     00ba  
    1280                    
    1281 00009100     b5a0          move    *a13(I_WILL_DIE),a0
         00009110     0b30  
    1282 00009120     ca1f          jrz     zfkxnope
    1283 00009130     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00009140     0ae0  
    1284 00009150     cb1c          jrnz    zfkxnope
    1285 00009160     09e0          movi    und_fall_back_anim,a0
         00009170 00000000! 
    1286 00009190     0d5f          calla   change_anim1a
         000091a0 00000000! 
    1287                    
    1288 000091c0     09c0          movi    -10,a0
         000091d0     fff6  
    1289 000091e0     b5a1          move    *a13(PLYRNUM),a1
         000091f0     0580  
    1290 00009200     0d5f          calla   adjust_health
         00009210 00000000! 
    1291                    
    1292 00009230                   SETMODE DEAD
    1293                    
    1294 000092e0     5600          clr     a0
    1295 000092f0     b00d          move    a0,*a13(I_WILL_DIE)
         00009300     0b30  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1296                    
    1297 00009310     0960          rets
    1298                    
    1299 00009320           zfkxnope
    1300                    
    1301 00009320     0d5f          calla   get_opp_plyrmode
         00009330 00000000! 
    1302 00009350     0b40          cmpi    MODE_DEAD,a0
         00009360     fff6  
    1303 00009370     cb53          jrne    zfkxopp_not_dead
    1304                    
    1305                            ;if closest is a zombie, skip pin section.
    1306 00009380     0d5f          calla   get_opp_process
         00009390 00000000! 
    1307 000093b0     b40e          move    *a0(STATUS_FLAGS),a14
         000093c0     0b50  
    1308 000093d0     1f8e          btst    B_ZOMBIE,a14
    1309 000093e0     cb4c          jrnz    zfkxopp_not_dead
    1310                            
    1311                            ;all opponents are dead.  Check for pins/raisearms
    1312                    
    1313                            ;if we're attached to someone, don't interrupt it.
    1314 000093f0     b7a1          move    *a13(ATTACH_PROC),a1,L
         00009400     03e0  
    1315 00009410     ca04          jrz     zfkxno_attch
    1316 00009420     b622          move    *a1(ATTACH_PROC),a2,L
         00009430     03e0  
    1317 00009440     484d          cmp     a2,a13
    1318 00009450     ca45          jreq    zfkxno_pin_yet
    1319 00009460           zfkxno_attch
    1320                    
    1321                            ;if a teammate has pinned, raise yer arm.
    1322 00009460     0d5f          calla   ck_teammate_pin 
         00009470 00000000! 
    1323 00009490     c82d          jrc     zfkxraisearm
    1324                    
    1325                            ;nobody has pinned.  if we're outside or all our opponents are
    1326                            ; outside, do a raisearm.
    1327 000094a0     0d5f          calla   raisearm_check
         000094b0 00000000! 
    1328 000094d0     c829          jrc     zfkxraisearm
    1329                    
    1330                            ;we're inside with a pinnable opponent.  any button pins.
    1331 000094e0     b5a0          move    *a13(BUT_VAL_CUR),a0
         000094f0     0b90  
    1332 00009500     ca3a          jrz     zfkxno_pin_yet
    1333                    
    1334                            ;we have a press -- make sure opponent is on the ground
    1335 00009510     0d5f          calla   can_pin
         00009520 00000000! 
    1336 00009540     c936          jrnc    zfkxopp_notgnd
    1337                    
    1338                            ;opponent is on the ground and close enough for anyone else
    1339                            ; to pin.  Taker is funny, tho, and if you're not real close
    1340                            ; and BEHIND the guy in Z, he just does a raise arm instead.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1341                    
    1342                            ;But he STILL sets the 'I did a pin flag' anyway.
    1343 00009550     b5ae          move    *a13(STATUS_FLAGS),a14
         00009560     0b50  
    1344 00009570     0bae          ori     M_DID_PIN,a14
         00009580 00000002  
    1345 000095a0     b1cd          move    a14,*a13(STATUS_FLAGS)
         000095b0     0b50  
    1346                    
    1347                            ;And we also set all the PINNED/WHOIPINNED/WHOPINNED me stuff
    1348 000095c0     0d5f          calla   hit_nearest
         000095d0 00000000! 
    1349                    
    1350 000095f0     b5a0          move    *a13(NEW_FACING_DIR),a0
         00009600     04d0  
    1351 00009610     1fc0          btst    MOVE_DOWN_BIT,a0
    1352 00009620     ca14          jrz     zfkxraisearm
    1353                    
    1354 00009630     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00009640     0390  
    1355 00009650     0b40          cmpi    40h,a0
         00009660     ffbf  
    1356 00009670     c50f          jrge    zfkxraisearm
    1357                            
    1358 00009680     b5a0          move    *a13(CLOSEST_XDIST),a0
         00009690     0370  
    1359 000096a0     0b40          cmpi    35,a0
         000096b0     ffdc  
    1360 000096c0     c50a          jrge    zfkxraisearm
    1361                    
    1362 000096d0     09e0          movi    und_4_pin2_anim,a0
         000096e0 00000000! 
    1363 00009700     0d5f          calla   change_anim1a
         00009710 00000000! 
    1364                    
    1365                            ;if we're a temp drone for auto-pin purposes, turn back into
    1366                            ; a normal player here.
    1367 00009730     0d5f          calla   drone_change_back
         00009740 00000000! 
    1368                    
    1369 00009760     0960          rets
    1370                    
    1371 00009770           zfkxraisearm
    1372 00009770                   FACE24  und,raise_arm_anim
    1373 00009810     0d5f          calla   change_anim1a
         00009820 00000000! 
    1374 00009840     0d5f          calla   set_raisearm_bit
         00009850 00000000! 
    1375                    
    1376                            ;if we're a temp drone for auto-pin purposes, turn back into
    1377                            ; a normal player here.
    1378 00009870     0d5f          calla   drone_change_back
         00009880 00000000! 
    1379                    
    1380 000098a0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1381                    
    1382 000098b0           zfkxtoo_far_to_pin
    1383 000098b0           zfkxopp_notgnd
    1384 000098b0           zfkxopp_not_dead
    1385 000098b0           zfkxno_pin_yet
    1386                    
    1387 000098b0     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         000098c0     0ae0  
    1388 000098d0     cb36          jrnz    zfkximmobilized
    1389                    
    1390 000098e0     b5a0          move    *a13(BUT_VAL_CUR),a0
         000098f0     0b90  
    1391 00009900     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1392 00009910     ca07          jrz     zfkxnblk                        ;1 for down transitions
    1393 00009920     0d3f          callr   zfkxblock                       ;& 1 for current buttons
         00009930     01f0  
    1394 00009940     c804          jrc     zfkxnblk
    1395 00009950     5600          clr     a0
    1396 00009960     b00d          move    a0,*a13(ATTACK_TYPE)
         00009970     05e0  
    1397 00009980     0960          rets
    1398 00009990           zfkxnblk
    1399 00009990     b5a0          move    *a13(BUT_VAL_CUR),a0
         000099a0     0b90  
    1400 000099b0     0b80          andi    011111b,a0
         000099c0 ffffffe0  
    1401 000099e0     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         000099f0     fff6  
    1402 00009a00     ca00          jrz     zfkxpunchkick
         00009a10     05a9  
    1403                    
    1404 00009a20     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00009a30     0ba0  
    1405 00009a40     0b80          andi    011111b,a0
         00009a50 ffffffe0  
    1406 00009a70                   X32     a0
    1407 00009a80     0b20          addi    zfkxaction_table,a0
         00009a90 00009cb0' 
    1408 00009ab0     8600          move    *a0,a0,L
    1409 00009ac0     0920          call    a0
    1410                    
    1411 00009ad0     b5a0          move    *a13(ANIMODE),a0
         00009ae0     0660  
    1412 00009af0     1fa0          btst    MODE_UNINT_BIT,a0
    1413 00009b00     cb19          jrnz    zfkxno_interrupt
    1414                    
    1415                    
    1416 00009b10     b5a0          move    *a13(STICK_VAL_CUR),a0
         00009b20     0bc0  
    1417 00009b30     b00d          move    a0,*a13(MOVE_DIR)
         00009b40     04b0  
    1418 00009b50     0d5f          calla   climb_turnbuckle
         00009b60 00000000! 
    1419 00009b80     c90e          jrnc    zfkxno_climb
    1420 00009b90     b5a5          move    *a13(WRESTLERNUM),A5
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

         00009ba0     0590  
    1421 00009bb0     09e2          MOVI    CLIMB_ROPES,A2
         00009bc0 00000000! 
    1422 00009be0     09c0          MOVI    1000,A0
         00009bf0     03e8  
    1423 00009c00     0d5f          CALLA   ADD_IF_SILENT
         00009c10 00000000! 
    1424 00009c30     0960          rets
    1425                    
    1426 00009c40           zfkximmobilized
    1427 00009c40     57ce          clr     a14
    1428 00009c50     b1cd          move    a14,*a13(MOVE_DIR)
         00009c60     04b0  
    1429 00009c70           zfkxno_climb
    1430 00009c70     0d5f          calla   execute_walk
         00009c80 00000000! 
    1431                    
    1432 00009ca0           zfkxno_interrupt
    1433 00009ca0     0960          rets
    1434                    
    1435 00009cb0           zfkxaction_table
    1436 00009cb0 0000a0b0'         .long   zfkxz,zfkxpunch,zfkxblock,zfkxblock                     ;0-3
    1437 00009d30 0000ba20'         .long   zfkxsuper_punch,zfkxsuper_punch,zfkxblock,zfkxblock     ;4-7
    1438 00009db0 0000d890'         .long   zfkxkick,zfkxpunchkick,zfkxblock,zfkxblock              ;8-11
    1439 00009e30 0000ba20'         .long   zfkxsuper_punch,zfkxpunchkick,zfkxblock,zfkxblock       ;12-15
    1440 00009eb0 0000f520'         .long   zfkxsuper_kick,zfkxsuper_kick,zfkxblock,zfkxblock       ;16-19
    1441 00009f30 0000c960'         .long   zfkxgraboh,zfkxgraboh,zfkxblock,zfkxblock               ;20-23
    1442 00009fb0 0000f520'         .long   zfkxsuper_kick,zfkxpunchkick,zfkxblock,zfkxblock        ;24-27
    1443 0000a030 0000c960'         .long   zfkxgraboh,zfkxgraboh,zfkxblock,zfkxblock               ;28-31
    1444                    
    1445                    
    1446 0000a0b0           zfkxz
    1447                    
    1448                    
    1449 0000a0b0     0960          rets
    1450                    
    1451 0000a0c0           zfkxpunch               ;1
    1452 0000a0c0                   JJXM_INIT
    1453 0000a130                   JJXM    NORMAL,          75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1454 0000a200                   JJXM    RUNNING,         75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1455 0000a2d0                   JJXM    BLOCK,           75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1456 0000a3a0                   JJXM    DIZZY,           75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1457 0000a470                   JJXM    ONGROUND,       160,140,zfkxpunch_lbowdrop,zfkxpunch_punch
    1458 0000a540                   JJXM    BOUNCING,        75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1459 0000a610                   JJXM    ONTURNBKL,       75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1460 0000a6e0                   JJXM    CLIMBTURNBKL,           zfkxpunch_punch
    1461 0000a730                   JJXM    INAIR,           75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1462 0000a800                   JJXM    ATTACHED,        75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1463 0000a8d0                   JJXM    DEAD,           160,140,zfkxpunch_lbowdrop,zfkxpunch_punch
    1464 0000a980                   JJXM    OPPOVERHEAD,     75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1465 0000aa30                   JJXM    WAITANIM,        75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1466 0000aae0                   JJXM    GRAPPLE,         75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1467 0000ab80                   JJXM    MASTER,          75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1468 0000ac20                   JJXM    SLAVE,           75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1469 0000acc0                   JJXM    HEADHOLD,        75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1470 0000ad60                   JJXM    HEADHELD,        75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1471 0000ae00                   JJXM    CHOKEHOLD,       75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1472 0000aea0                   JJXM    PUPPET,          75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1473 0000af40                   JJXM    PUPPET2,         75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1474 0000afe0                   JJXM    INAIR2,          75, 45,zfkxpunch_hdbutt,zfkxpunch_punch
    1475 0000b080                   JJXM_END
    1476                    
    1477 0000b0a0           zfkxpunch_rets
    1478 0000b0a0     0960          rets
    1479                    
    1480 0000b0b0           zfkxpunch_punch
    1481 0000b0b0           std_punch
    1482                    
    1483 0000b0b0                   FACE24  und,punch_anim
    1484 0000b150     0d5f          calla   change_anim1a
         0000b160 00000000! 
    1485                    
    1486 0000b180                   WRSND   W_TAKER,PUNCH_T1,PUNCH_T2
    1487                    
    1488 0000b320     0960          rets
    1489                    
    1490 0000b330           zfkxpunch_hdbutt
    1491                    
    1492 0000b330                   FACE24  und,butt_anim
    1493 0000b3d0     0d5f          calla   change_anim1a
         0000b3e0 00000000! 
    1494                    
    1495 0000b400                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1496                    
    1497 0000b5a0     0960          rets
    1498                    
    1499 0000b5b0           zfkxpunch_lbowdrop
    1500                    
    1501 0000b5b0                   FACE24  und,lbowdrop_anim
    1502 0000b650     0d5f          calla   change_anim1a
         0000b660 00000000! 
    1503                    
    1504 0000b680                   WRSND   W_TAKER,LBOWDROP_T1,LBOWDROP_T2
    1505                    
    1506 0000b820     0960          rets
    1507                    
    1508 0000b830           zfkxpunch_hiptoss
    1509                    
    1510 0000b830     0960          rets
    1511                    
    1512                    
    1513 0000b840           zfkxblock               ;2
    1514                    
    1515 0000b840           std_block
    1516 0000b840     05a0          move    @blocking_off,a0
         0000b850 00000000! 
    1517 0000b870     cb18          jrnz    zfkxno_blocking
    1518                    
    1519 0000b880                   RND_AWARD       a13,BLOCKS_AWD
    1520                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1521 0000b920     09e0          movi    und_4_block_anim,a0
         0000b930 00000000! 
    1522 0000b950     0d5f          calla   change_anim1
         0000b960 00000000! 
    1523                    
    1524 0000b980     0d5f          calla   BLOCK_WOOSH
         0000b990 00000000! 
    1525                    
    1526 0000b9b0     5600          clr     a0
    1527 0000b9c0     b00d          move    a0,*a13(BLOCK_TIME)
         0000b9d0     0d30  
    1528 0000b9e0     0320          clrc
    1529 0000b9f0     0960          rets
    1530                    
    1531 0000ba00           zfkxno_blocking
    1532 0000ba00     0de0          setc
    1533 0000ba10     0960          rets
    1534                            
    1535                    
    1536 0000ba20           zfkxsuper_punch ;4
    1537 0000ba20                   JJXM_INIT
    1538 0000ba90                   JJXM    NORMAL,          95, 35,zfkxspunch_special,zfkxspunch_slap      ;0
    1539 0000bb60                   JJXM    RUNNING,         95, 35,zfkxspunch_special,zfkxspunch_slap      ;1
    1540 0000bc30                   JJXM    INAIR,           95, 35,zfkxspunch_special,zfkxspunch_slap      ;2
    1541 0000bd00                   JJXM    ATTACHED,        95, 35,zfkxspunch_special,zfkxspunch_slap      ;3
    1542 0000bdd0                   JJXM    ONGROUND,       160,140,zfkxspunch_lbowdrop,std_punch   ;4
    1543 0000bea0                   JJXM    BOUNCING,        95, 35,zfkxspunch_special,zfkxspunch_slap      ;1
    1544 0000bf70                   JJXM    ONTURNBKL,              zfkxspunch_slap                 ;6
    1545 0000bfc0                   JJXM    BLOCK,           95, 35,zfkxspunch_special,zfkxspunch_slap      ;7
    1546 0000c090                   JJXM    DIZZY,           95, 35,zfkxspunch_special,zfkxspunch_slap      ;8
    1547 0000c160                   JJXM    DEAD,           160,140,zfkxspunch_lbowdrop,std_punch   ;9
    1548 0000c230                   JJXM    OPPOVERHEAD,     95, 35,zfkxspunch_special,zfkxspunch_slap      ;10
    1549 0000c2e0                   JJXM    CLIMBTURNBKL,           std_punch                       ;11
    1550 0000c330                   JJXM    WAITANIM,        95, 35,zfkxspunch_special,zfkxspunch_slap      ;12
    1551 0000c3e0                   JJXM    GRAPPLE,         95, 35,zfkxspunch_special,zfkxspunch_slap      ;13
    1552 0000c480                   JJXM    MASTER,          95, 35,zfkxspunch_special,zfkxspunch_slap      ;14
    1553 0000c520                   JJXM    SLAVE,           95, 35,zfkxspunch_special,zfkxspunch_slap      ;15
    1554 0000c5c0                   JJXM    HEADHOLD,        95, 35,zfkxspunch_special,zfkxspunch_slap      ;16
    1555                    
    1556 0000c660                   JJXM    HEADHELD,               do_pile
    1557 0000c6b0                   JJXM    CHOKEHOLD,       95, 35,zfkxspunch_special,zfkxspunch_slap      ;16
    1558 0000c750                   JJXM    PUPPET,          95, 35,zfkxspunch_special,zfkxspunch_slap      ;20
    1559 0000c7f0                   JJXM    PUPPET2,         95, 35,zfkxspunch_special,zfkxspunch_slap      ;20
    1560 0000c890                   JJXM    INAIR2,          95, 35,zfkxspunch_special,zfkxspunch_slap      ;21
    1561 0000c930                   JJXM_END
    1562                    
    1563 0000c950           zfkxspunch_rets
    1564 0000c950     0960          rets
    1565                    
    1566 0000c960           zfkxgraboh              ;8
    1567 0000c960           zfkxspunch_slap
    1568 0000c960                   FACE24  und,slap_anim
    1569 0000ca00     0d5f          calla   change_anim1a
         0000ca10 00000000! 
    1570                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1571 0000ca30                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    1572                    
    1573 0000cbd0     0960          rets
    1574                    
    1575 0000cbe0           zfkxspunch_special
    1576 0000cbe0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000cbf0     0bc0  
    1577 0000cc00     1fc0          btst    MOVE_DOWN_BIT,a0
    1578 0000cc10     cb2d          jrnz    zfkxck_up
    1579                    
    1580 0000cc20     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000cc30     0370  
    1581 0000cc40     0b41          cmpi    70,a1
         0000cc50     ffb9  
    1582 0000cc60     c7cf          jrgt    zfkxspunch_slap
    1583                    
    1584                    
    1585 0000cc70                   FACE24  und,butts_anim
    1586 0000cd10     0d5f          calla   change_anim1
         0000cd20 00000000! 
    1587                    
    1588 0000cd40                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1589                    
    1590 0000cee0     0960          rets
    1591 0000cef0           zfkxck_up
    1592 0000cef0                   FACE24  und,uppercut_anim
    1593 0000cf90     0d5f          calla   change_anim1
         0000cfa0 00000000! 
    1594                    
    1595 0000cfc0                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1596 0000d160     0960          rets
    1597                    
    1598                    
    1599 0000d170           zfkxspunch_lbowdrop
    1600                    
    1601                    
    1602 0000d170     b5ae          move    *a13(CLOSEST_NUM),a14
         0000d180     03a0  
    1603 0000d190                   X32     a14
    1604                    
    1605 0000d1a0     0b2e          addi    process_ptrs,a14
         0000d1b0 00000000! 
    1606 0000d1d0     87ce          move    *a14,a14,L
    1607 0000d1e0     b5c2          move    *a14(PLYRMODE),a2
         0000d1f0     05c0  
    1608 0000d200     0b42          cmpi    MODE_DEAD,a2
         0000d210     fff6  
    1609 0000d220     ca3e          jrz     zfkxno
    1610 0000d230     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000d240     0100  
    1611 0000d250     b7c2          move    *a14(OBJ_XPOS),a2,L
         0000d260     0100  
    1612 0000d270     4441          sub     a2,a1
    1613 0000d280     0381          abs     a1
    1614 0000d290     2e01          srl     16,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1615 0000d2a0     0b41          cmpi    20h,a1  ;28
         0000d2b0     ffdf  
    1616 0000d2c0     c434          jrlt    zfkxno
    1617                    
    1618                    
    1619 0000d2d0     b5ce          move    *a14(OBJ_CONTROL),a14
         0000d2e0     0780  
    1620 0000d2f0     0b8e          andi    M_FLIPH,a14
         0000d300 ffffffef  
    1621 0000d320     b5a0          move    *a13(OBJ_CONTROL),a0
         0000d330     0780  
    1622 0000d340     0b80          andi    M_FLIPH,a0
         0000d350 ffffffef  
    1623 0000d370     480e          cmp     a0,a14
    1624 0000d380     ca28          jrz     zfkxno
    1625                    
    1626                    
    1627 0000d390                   FACE24  und,hair_pickup_anim
    1628 0000d430     0d5f          calla   change_anim1
         0000d440 00000000! 
    1629 0000d460                   WRSND   W_TAKER,LBOWDROP_T1,LBOWDROP_T2
    1630 0000d600     0960          rets
    1631                    
    1632 0000d610           zfkxno  FACE24  und,lbowdrop_anim
    1633 0000d6b0     0d5f          calla   change_anim1
         0000d6c0 00000000! 
    1634 0000d6e0                   WRSND   W_TAKER,LBOWDROP_T1,LBOWDROP_T2
    1635 0000d880     0960          rets
    1636                    
    1637                    
    1638 0000d890           zfkxkick                ;8
    1639 0000d890                   JJXM_INIT
    1640 0000d900                   JJXM    NORMAL,          65, 92,zfkxkick_knee,zfkxkick_kick
    1641 0000d9d0                   JJXM    RUNNING,         65, 92,zfkxkick_knee,zfkxkick_kick
    1642 0000daa0                   JJXM    INAIR,           65, 92,zfkxkick_knee,zfkxkick_kick
    1643 0000db70                   JJXM    ATTACHED,        65, 92,zfkxkick_knee,zfkxkick_kick
    1644 0000dc40                   JJXM    ONGROUND,       160,140,zfkxkick_stomp,zfkxkick_kick
    1645 0000dd10                   JJXM    BOUNCING,        65, 92,zfkxkick_knee,zfkxkick_kick
    1646 0000dde0                   JJXM    ONTURNBKL,              zfkxkick_kick
    1647 0000de30                   JJXM    BLOCK,           65, 92,zfkxkick_knee,zfkxkick_kick
    1648 0000df00                   JJXM    DIZZY,           65, 92,zfkxkick_knee,zfkxkick_kick
    1649 0000dfd0                   JJXM    DEAD,           160,140,zfkxkick_stomp,zfkxkick_kick
    1650 0000e0a0                   JJXM    OPPOVERHEAD,     65, 92,zfkxkick_knee,zfkxkick_kick
    1651 0000e170                   JJXM    CLIMBTURNBKL,           zfkxkick_kick
    1652 0000e1c0                   JJXM    WAITANIM,        65, 92,zfkxkick_knee,zfkxkick_kick
    1653 0000e290                   JJXM    GRAPPLE,         65, 92,zfkxkick_knee,zfkxkick_kick
    1654 0000e340                   JJXM    MASTER,          65, 92,zfkxkick_knee,zfkxkick_kick
    1655 0000e3f0                   JJXM    SLAVE,           65, 92,zfkxkick_knee,zfkxkick_kick
    1656 0000e4a0                   JJXM    HEADHOLD,        65, 92,zfkxkick_knee,zfkxkick_kick
    1657 0000e550                   JJXM    HEADHELD,        65, 92,zfkxkick_knee,zfkxkick_kick
    1658 0000e600                   JJXM    CHOKEHOLD,       65, 92,zfkxkick_knee,zfkxkick_kick
    1659 0000e6b0                   JJXM    PUPPET,          65, 92,zfkxkick_knee,zfkxkick_kick
    1660 0000e760                   JJXM    PUPPET2,         65, 92,zfkxkick_knee,zfkxkick_kick
    1661 0000e800                   JJXM    INAIR2,                 zfkxkick_TB
    1662 0000e840                   JJXM_END
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1663                    
    1664 0000e860           zfkxkick_TB
    1665                    
    1666                            .ref    und_kick_TB_anim
    1667 0000e860     09e0          movi    und_kick_TB_anim,a0
         0000e870 00000000! 
    1668 0000e890     0d5f          calla   change_anim1a
         0000e8a0 00000000! 
    1669                    
    1670 0000e8c0                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1671                    
    1672 0000ea60     0960          rets
    1673                    
    1674 0000ea70           zfkxkick_kick
    1675 0000ea70           std_kick
    1676                    
    1677 0000ea70                   FACE24  und,kick_anim
    1678 0000eb10     0d5f          calla   change_anim1a
         0000eb20 00000000! 
    1679                    
    1680 0000eb40                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1681                    
    1682 0000ece0     0960          rets
    1683                    
    1684 0000ecf0           zfkxkick_flyingkick
    1685                    
    1686 0000ecf0     09e0          movi    und_flying_kick_anim,a0
         0000ed00 00000000! 
    1687 0000ed20     0d5f          calla   change_anim1a
         0000ed30 00000000! 
    1688                    
    1689 0000ed50                   SETMODE INAIR
    1690                    
    1691 0000ee00                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    1692                    
    1693 0000efa0     0960          rets
    1694                    
    1695 0000efb0           zfkxkick_knee
    1696 0000efb0           std_knee
    1697                    
    1698 0000efb0                   FACE24  und,knee_anim
    1699 0000f050     0d5f          calla   change_anim1a
         0000f060 00000000! 
    1700                    
    1701 0000f080                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1702                    
    1703 0000f220     0960          rets
    1704                    
    1705 0000f230           zfkxkick_stomp
    1706 0000f230           attack_stomp
    1707                    
    1708 0000f230                   FACE24  und,stomp_anim
    1709 0000f2d0     0d5f          calla   change_anim1a
         0000f2e0 00000000! 
    1710                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1711 0000f300                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1712                    
    1713 0000f4a0     0960          rets
    1714                    
    1715                    
    1716 0000f4b0           zfkxpunchkick   ;9
    1717                    
    1718 0000f4b0     09e0          movi    start_run_anim,a0
         0000f4c0 00000000! 
    1719 0000f4e0     0d5f          calla   change_anim1a
         0000f4f0 00000000! 
    1720                    
    1721 0000f510     0960          rets
    1722                    
    1723 0000f520           zfkxsuper_kick  ;16
    1724 0000f520                   JJXM_INIT
    1725 0000f590                   JJXM    NORMAL,          60, 60,zfkxskick_special,zfkxskick_kick        ;0
    1726 0000f660                   JJXM    RUNNING,                zfkxskick_bigboot                       ;1
    1727 0000f6b0                   JJXM    INAIR,           60, 60,zfkxskick_special,zfkxskick_kick        ;2
    1728 0000f780                   JJXM    ATTACHED,        60, 60,zfkxskick_special,zfkxskick_kick        ;3
    1729 0000f850                   JJXM    ONGROUND,       160,140,zfkxskick_stomp,std_kick                ;4
    1730 0000f920                   JJXM    BOUNCING,               zfkxskick_bigboot                       ;5
    1731 0000f970                   JJXM    ONTURNBKL,       60, 96,zfkxskick_kick,std_kick         ;6
    1732 0000fa40                   JJXM    BLOCK,           60, 60,zfkxskick_special,zfkxskick_kick        ;7
    1733 0000fb10                   JJXM    DIZZY,           60, 60,zfkxskick_special,zfkxskick_kick        ;8
    1734 0000fbe0                   JJXM    DEAD,           160,140,zfkxskick_stomp,std_kick                ;9
    1735 0000fcb0                   JJXM    OPPOVERHEAD,     60, 60,zfkxskick_special,zfkxskick_kick        ;10
    1736 0000fd60                   JJXM    CLIMBTURNBKL,    60, 96,zfkxskick_kick,std_kick         ;11
    1737 0000fe20                   JJXM    WAITANIM,        60, 62,zfkxskick_special,zfkxskick_kick        ;12
    1738 0000fec0                   JJXM    GRAPPLE,         60, 62,zfkxskick_special,zfkxskick_kick        ;13
    1739 0000ff60                   JJXM    MASTER,          60, 62,zfkxskick_special,zfkxskick_kick        ;14
    1740 00010000                   JJXM    SLAVE,           60, 62,zfkxskick_special,zfkxskick_kick        ;15
    1741 000100a0                   JJXM    HEADHOLD,        60, 62,zfkxskick_special,zfkxskick_kick        ;16
    1742 00010140                   JJXM    HEADHELD,               std_kick
    1743 00010190                   JJXM    CHOKEHOLD,       60, 62,zfkxskick_special,zfkxskick_kick        ;16
    1744 00010230                   JJXM    PUPPET,          60, 62,zfkxskick_special,zfkxskick_kick        ;20
    1745 000102d0                   JJXM    PUPPET2,         60, 62,zfkxskick_special,zfkxskick_kick        ;20
    1746 00010370                   JJXM    INAIR2,                 zfkxkick_TB
    1747 000103c0                   JJXM_END
    1748                    
    1749 000103e0           zfkxskick_kick
    1750 000103e0                   FACE24  und,super_kick_anim
    1751 00010480     0d5f          calla   change_anim1a
         00010490 00000000! 
    1752                    
    1753 000104b0                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    1754 00010650     0960          rets
    1755                    
    1756                    
    1757 00010660           zfkxskick_special
    1758 00010660     b5a0          move    *a13(STICK_VAL_CUR),a0
         00010670     0bc0  
    1759 00010680     b5a1          move    *a13(NEW_FACING_DIR),a1
         00010690     04d0  
    1760 000106a0     0b81          andi    0ch,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

         000106b0 fffffff3  
    1761 000106d0     4801          cmp     a0,a1
    1762 000106e0     ca28          jrz     zfkxcont2
    1763                    
    1764 000106f0                   FACE24  und,knee_anim
    1765 00010790     0d5f          calla   change_anim1a
         000107a0 00000000! 
    1766                    
    1767 000107c0                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1768                    
    1769 00010960     0960          rets
    1770                    
    1771 00010970           zfkxcont2
    1772 00010970     09e0          movi    und_4_knee_fall_anim,a0
         00010980 00000000! 
    1773 000109a0     0d5f          calla   change_anim1
         000109b0 00000000! 
    1774                    
    1775 000109d0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    1776 00010b70     0960          rets
    1777                    
    1778 00010b80           zfkxskick_stomp
    1779                    
    1780 00010b80                   FACE24  und,stomp_anim
    1781 00010c20     0d5f          calla   change_anim1a
         00010c30 00000000! 
    1782                    
    1783 00010c50                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1784                    
    1785 00010df0     0960          rets
    1786                    
    1787 00010e00           zfkxskick_bigboot       ;we can probably get away with just a zfkx4 big boot
    1788                    
    1789 00010e00     09e0          movi    und_4_bigboot_anim,a0           ;*****
         00010e10 00000000! 
    1790 00010e30     0d5f          calla   change_anim1a
         00010e40 00000000! 
    1791                    
    1792 00010e60                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    1793                    
    1794 00011000     0960          rets
    1795                    
    1796                    
    1797                    
    1798          00064000  timlXRUN_VAL    equ     UND_XRUN
    1799          00028000  timlZDRIFT_VAL  equ     UND_ZDRIFT
    1800                    
    1801 00011010           mode_running
    1802                    
    1803 00011010     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         00011020     07b0  
    1804 00011030     1020          addk    1,a0
    1805 00011040     b00d          move    a0,*a13(RUN_TIME)
         00011050     07b0  
    1806                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1807 00011060     b5a0          move    *a13(USR_VAR1),a0
         00011070     0850  
    1808 00011080     cb11          jrnz    timlno_vel
    1809                    
    1810 00011090     0d5f          calla   bounce_off_ropes
         000110a0 00000000! 
    1811                    
    1812 000110c0     09e0          movi    timlXRUN_VAL,a0
         000110d0 00064000  
    1813 000110f0     b5ae          move    *a13(MOVE_DIR),a14
         00011100     04b0  
    1814 00011110     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1815 00011120     cb01          jrnz    timlpos
    1816 00011130     03a0          neg     a0
    1817 00011140           timlpos
    1818 00011140     05ae          move    @hyper_speed_on,a14
         00011150 00000000! 
    1819 00011170     63c0          sll     a14,a0
    1820 00011180     b20d          move    a0,*a13(OBJ_XVEL),L
         00011190     02d0  
    1821                    
    1822 000111a0           timlno_vel
    1823                    
    1824 000111a0     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         000111b0     0460  
    1825 000111c0     cb38          jrnz    timlout_of_control
    1826                    
    1827 000111d0     b5a0          move    *a13(ANIMODE),a0
         000111e0     0660  
    1828 000111f0     1fa0          btst    MODE_UNINT_BIT,a0
    1829 00011200     cb16          jrnz    timlno_interrupt
    1830                    
    1831 00011210     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011220     0bc0  
    1832 00011230     b5a1          move    *a13(MOVE_DIR),a1
         00011240     04b0  
    1833 00011250     5401          or      a0,a1
    1834 00011260     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00011270 fffffff3  
    1835 00011290     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         000112a0     fff3  
    1836 000112b0     cb0b          jrne    timlcontinue_run
    1837                    
    1838                            ;braking with stick.  abort run.
    1839                    
    1840 000112c0                   SETMODE NORMAL
    1841                    
    1842 00011370           timlcontinue_run
    1843 00011370           timlno_interrupt
    1844                    
    1845 00011370     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011380     0bc0  
    1846 00011390     5621          clr     a1
    1847                    
    1848 000113a0     09e1          movi    -timlZDRIFT_VAL,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

         000113b0 fffd8000  
    1849 000113d0     1fe0          btst    PLAYER_UP_BIT,a0
    1850 000113e0     cb06          jrnz    timlsetvel
    1851                    
    1852 000113f0     09e1          movi    timlZDRIFT_VAL,a1
         00011400 00028000  
    1853 00011420     1fc0          btst    PLAYER_DOWN_BIT,a0
    1854 00011430     cb01          jrnz    timlsetvel
    1855                    
    1856 00011440     5621          clr     a1
    1857 00011450           timlsetvel
    1858 00011450     b22d          move    a1,*a13(OBJ_ZVEL),L
         00011460     0310  
    1859                    
    1860 00011470     b5a0          move    *a13(DELAY_BUTNS),a0
         00011480     0ab0  
    1861 00011490     cb0b          jrnz    timlout_of_control
    1862                    
    1863                    
    1864 000114a0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000114b0     0ba0  
    1865 000114c0     0b80          andi    011111b,a0
         000114d0 ffffffe0  
    1866 000114f0                   X32     a0
    1867 00011500     0b20          addi    timlaction_table,a0
         00011510 00011560' 
    1868 00011530     8600          move    *a0,a0,L
    1869 00011540     0920          call    a0
    1870 00011550           timlout_of_control
    1871 00011550     0960          rets
    1872                    
    1873 00011560           timlaction_table
    1874 00011560 00011960'         .long   timlz,timlpunch,timlblock,timlblock                     ;0-3
    1875 000115e0 00011970'         .long   timlsuper_punch,timlsuper_punch,timlblock,timlblock     ;4-7
    1876 00011660 00012a00'         .long   timlkick,timlpunchkick,timlblock,timlblock              ;8-11
    1877 000116e0 00011970'         .long   timlsuper_punch,timlpunchkick,timlblock,timlblock       ;12-15
    1878 00011760 00012a00'         .long   timlsuper_kick,timlsuper_kick,timlblock,timlblock       ;16-19
    1879 000117e0 00011970'         .long   timlgraboh,timlgraboh,timlblock,timlblock               ;20-23
    1880 00011860 00012a00'         .long   timlsuper_kick,timlpunchkick,timlblock,timlblock        ;24-27
    1881 000118e0 00011970'         .long   timlgraboh,timlgraboh,timlblock,timlblock               ;28-31
    1882                    
    1883                    
    1884 00011960           timlz
    1885 00011960     0960          rets
    1886                    
    1887 00011970           timlpunch               ;1
    1888 00011970           timlsuper_punch ;4
    1889 00011970           timlpunchkick
    1890 00011970           timlgraboh
    1891 00011970                   JJXM_INIT
    1892 000119e0                   JJXM    NORMAL,                 timlpunch_clothesline
    1893 00011a20                   JJXM    BLOCK,                  timlpunch_clothesline
    1894 00011a60                   JJXM    DIZZY,                  timlpunch_clothesline
    1895 00011aa0                   JJXM    ONGROUND,       176,176,timlpunch_bellyflop,timlpunch_rets
    1896 00011b50                   JJXM    RUNNING,                timlpunch_clothesline
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1897 00011b90                   JJXM    BOUNCING,               timlpunch_clothesline
    1898 00011bd0                   JJXM    ONTURNBKL,              timlpunch_clothesline
    1899 00011c10                   JJXM    CLIMBTURNBKL,           timlpunch_clothesline
    1900 00011c50                   JJXM    INAIR,                  timlpunch_clothesline
    1901 00011c90                   JJXM    ATTACHED,               timlpunch_clothesline
    1902 00011cd0                   JJXM    DEAD,                   attack_bellyflop
    1903 00011d20                   JJXM    OPPOVERHEAD,            timlpunch_clothesline
    1904 00011d60                   JJXM    WAITANIM,               timlpunch_clothesline
    1905 00011da0                   JJXM    GRAPPLE,                timlpunch_clothesline
    1906 00011de0                   JJXM    MASTER,                 timlpunch_clothesline
    1907 00011e20                   JJXM    SLAVE,                  timlpunch_clothesline
    1908 00011e60                   JJXM    HEADHOLD,               timlpunch_clothesline
    1909 00011ea0                   JJXM    HEADHELD,               timlpunch_clothesline
    1910 00011ee0                   JJXM    CHOKEHOLD,              timlpunch_clothesline
    1911 00011f20                   JJXM    PUPPET,                 timlpunch_clothesline
    1912 00011f60                   JJXM    PUPPET2,                timlpunch_clothesline
    1913 00011fa0                   JJXM    INAIR2,                 timlpunch_clothesline
    1914 00011fe0                   JJXM_END
    1915                    
    1916 00012000           timlpunch_rets
    1917 00012000     0960          rets
    1918                    
    1919 00012010           timlpunch_clothesline
    1920                    
    1921                            ;don't do it if you're running away from your opponent.
    1922 00012010     b5a0          move    *a13(FACING_DIR),a0
         00012020     04c0  
    1923 00012030     b5a1          move    *a13(NEW_FACING_DIR),a1
         00012040     04d0  
    1924 00012050     5001          and     a0,a1
    1925 00012060     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00012070 fffffff3  
    1926 00012090     ca8c          jrz     timlz
    1927                    
    1928 000120a0     5600          clr     a0
    1929 000120b0     b00d          move    a0,*a13(RUN_TIME)
         000120c0     07b0  
    1930                    
    1931 000120d0                   SETMODE NORMAL
    1932                    
    1933 00012180     b5a1          move    *a13(CLOSEST_XDIST),a1
         00012190     0370  
    1934 000121a0     0b41          cmpi    70,a1
         000121b0     ffb9  
    1935 000121c0     c428          jrlt    timlhdbutt
    1936                    
    1937                            .ref    und_2_run_slap_anim
    1938                            .ref    und_4_run_slap_anim
    1939 000121d0                   FACE24  und,run_slap_anim
    1940 00012270     0d5f          calla   change_anim1a
         00012280 00000000! 
    1941                    
    1942 000122a0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    1943                    
    1944 00012440     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

    1945                    
    1946 00012450           timlhdbutt
    1947                    
    1948 00012450                   FACE24  und,butt_anim
    1949 000124f0     0d5f          calla   change_anim1
         00012500 00000000! 
    1950                    
    1951 00012520                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1952                    
    1953 000126c0     0960          rets
    1954                    
    1955 000126d0           timlpunch_bellyflop
    1956 000126d0           attack_bellyflop
    1957                    
    1958 000126d0     09e0          movi    und_flying_butt_drop_anim,a0
         000126e0 00000000! 
    1959 00012700     0d5f          calla   change_anim1a
         00012710 00000000! 
    1960                    
    1961 00012730                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    1962                    
    1963 000128d0     0960          rets
    1964                    
    1965 000128e0           timlblock               ;2
    1966                    
    1967 000128e0     b7a0          move    *a13(OBJ_XVEL),a0,L
         000128f0     02d0  
    1968 00012900     2be0          sra     1,a0
    1969 00012910     b20d          move    a0,*a13(OBJ_XVEL),L
         00012920     02d0  
    1970 00012930                   SETMODE NORMAL
    1971 000129e0     c000          jruc    std_block
         000129f0     f8e4  
    1972                    
    1973 00012a00           timlkick                ;8
    1974 00012a00           timlsuper_kick  ;16
    1975 00012a00                   JJXM_INIT
    1976 00012a70                   JJXM    NORMAL,                 timlkick_flyingkick
    1977 00012ab0                   JJXM    BLOCK,                  timlkick_flyingkick
    1978 00012af0                   JJXM    DIZZY,                  timlkick_flyingkick
    1979 00012b30                   JJXM    ONGROUND,               attack_bellyflop
    1980 00012b70                   JJXM    RUNNING,                timlkick_flyingkick
    1981 00012bb0                   JJXM    BOUNCING,               timlkick_flyingkick
    1982 00012bf0                   JJXM    ONTURNBKL,              timlkick_flyingkick
    1983 00012c30                   JJXM    CLIMBTURNBKL,           timlkick_flyingkick
    1984 00012c70                   JJXM    INAIR,                  timlkick_flyingkick
    1985 00012cb0                   JJXM    ATTACHED,               timlkick_flyingkick
    1986 00012cf0                   JJXM    DEAD,                   attack_bellyflop
    1987 00012d30                   JJXM    OPPOVERHEAD,            timlkick_flyingkick
    1988 00012d70                   JJXM    WAITANIM,               timlkick_flyingkick
    1989 00012db0                   JJXM    GRAPPLE,                timlkick_flyingkick
    1990 00012df0                   JJXM    MASTER,                 timlkick_flyingkick
    1991 00012e30                   JJXM    SLAVE,                  timlkick_flyingkick
    1992 00012e70                   JJXM    HEADHOLD,               timlkick_flyingkick
    1993 00012eb0                   JJXM    HEADHELD,               timlkick_flyingkick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    1994 00012ef0                   JJXM    CHOKEHOLD,              timlkick_flyingkick
    1995 00012f30                   JJXM    PUPPET,                 timlkick_flyingkick
    1996 00012f70                   JJXM    PUPPET2,                timlkick_flyingkick
    1997 00012fb0                   JJXM    INAIR2,                 timlkick_flyingkick
    1998 00012ff0                   JJXM_END
    1999                    
    2000 00013010           timlkick_rets
    2001 00013010     0960          rets
    2002                    
    2003 00013020           timlkick_flyingkick
    2004                    
    2005 00013020     0d5f          calla   ck_ignore
         00013030 00000000! 
    2006 00013050     c800          jrc     timlz
         00013060     fe8f  
    2007                    
    2008 00013070     09e0          movi    und_flying_kick_anim,a0
         00013080 00000000! 
    2009 000130a0     0d5f          calla   change_anim1a
         000130b0 00000000! 
    2010                    
    2011 000130d0                   SETMODE INAIR
    2012                    
    2013 00013180                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2014                    
    2015 00013320     0960          rets
    2016                    
    2017                    
    2018                    
    2019 00013330           mode_inair      ;2
    2020                    
    2021 00013330     0960          rets
    2022                    
    2023                    
    2024 00013340           mode_attached   ;3
    2025                    
    2026 00013340     0d5f          calla   keep_attached
         00013350 00000000! 
    2027 00013370     cb12          jrnz    iktwstill_attached
    2028                    
    2029 00013380     5600          clr     a0
    2030 00013390     b20d          move    a0,*a13(ATTACH_PROC),L
         000133a0     03e0  
    2031                    
    2032 000133b0                   SETMODE NORMAL
    2033                    
    2034 00013460     09c0          movi    MODE_NORMAL,a0
         00013470     0000  
    2035 00013480     b00d          move    a0,*a13(ANIMODE)
         00013490     0660  
    2036                    
    2037 000134a0           iktwstill_attached
    2038                    
    2039 000134a0     0960          rets
    2040                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2041                    
    2042 000134b0           mode_onground   ;4
    2043                    
    2044 000134b0     0960          rets
    2045                    
    2046                    
    2047                    
    2048 000134c0           mode_bouncing   ;5
    2049                    
    2050 000134c0     5600          clr     a0
    2051 000134d0     b20d          move    a0,*a13(OBJ_XVEL),L
         000134e0     02d0  
    2052 000134f0     b20d          move    a0,*a13(OBJ_ZVEL),L
         00013500     0310  
    2053                    
    2054 00013510     b5a0          move    *a13(ANIMODE),a0
         00013520     0660  
    2055 00013530     1fe0          btst    MODE_END_BIT,a0
    2056 00013540     ca20          jrz     aroznot_ended
    2057                    
    2058 00013550     b5a0          move    *a13(MOVE_DIR),a0
         00013560     04b0  
    2059 00013570     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         00013580 0000000c  
    2060 000135a0     b00d          move    a0,*a13(MOVE_DIR)
         000135b0     04b0  
    2061                    
    2062 000135c0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000135d0     04d0  
    2063 000135e0     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         000135f0 fffffffc  
    2064 00013610     5401          or      a0,a1                   ;LEFT or RIGHT
    2065 00013620     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         00013630     04c0  
    2066                    
    2067 00013640     09e0          movi    und_run2_anim,a0
         00013650 00000000! 
    2068 00013670     0d5f          calla   change_anim1a
         00013680 00000000! 
    2069                    
    2070 000136a0                   SETMODE RUNNING
    2071                    
    2072                    
    2073 00013750           aroznot_ended
    2074 00013750     0960          rets
    2075                    
    2076                    
    2077 00013760           mode_onturnbkl  ;6
    2078                    
    2079                    
    2080 00013760     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013770     0bc0  
    2081 00013780     1fc0          btst    PLAYER_DOWN_BIT,a0
    2082 00013790     ca12          jrz     tlpzno_climbdown
    2083                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2084 000137a0     09e0          movi    und_climb_down_anim,a0
         000137b0 00000000! 
    2085 000137d0     0d5f          calla   change_anim1a
         000137e0 00000000! 
    2086                    
    2087 00013800                   SETMODE CLIMBTURNBKL
    2088                    
    2089 000138b0           tlpzno_interrupt
    2090 000138b0     0960          rets
    2091                    
    2092 000138c0           tlpzno_climbdown
    2093 000138c0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000138d0     0ba0  
    2094 000138e0     0b80          andi    011111b,a0
         000138f0 ffffffe0  
    2095 00013910     ca51          jrz     tlpzz
    2096                    
    2097 00013920                   X32     a0
    2098 00013930     0b20          addi    tlpzaction_table,a0
         00013940 00013a30' 
    2099 00013960     8600          move    *a0,a0,L
    2100 00013970     0920          call    a0
    2101                    
    2102 00013980     b5a5          move    *a13(PLYRNUM),a5
         00013990     0580  
    2103 000139a0     09e2          movi    JUMP_ROPES,a2
         000139b0 00000000! 
    2104 000139d0     09c0          movi    1000,a0
         000139e0     03e8  
    2105 000139f0     0d5f          calla   ADD_IF_SILENT
         00013a00 00000000! 
    2106                    
    2107 00013a20     0960          rets
    2108                    
    2109                    
    2110                    
    2111 00013a30           tlpzaction_table
    2112 00013a30 00013e30'         .long   tlpzz,tlpzpunch,tlpzblock,tlpzblock                     ;0-3
    2113 00013ab0 00013e40'         .long   tlpzsuper_punch,tlpzsuper_punch,tlpzblock,tlpzblock     ;4-7
    2114 00013b30 00013e40'         .long   tlpzkick,tlpzpunchkick,tlpzblock,tlpzblock              ;8-11
    2115 00013bb0 00013e40'         .long   tlpzsuper_punch,tlpzpunchkick,tlpzblock,tlpzblock       ;12-15
    2116 00013c30 00013e40'         .long   tlpzsuper_kick,tlpzsuper_kick,tlpzblock,tlpzblock       ;16-19
    2117 00013cb0 00013e40'         .long   tlpzgraboh,tlpzgraboh,tlpzblock,tlpzblock               ;20-23
    2118 00013d30 00013e40'         .long   tlpzsuper_kick,tlpzpunchkick,tlpzblock,tlpzblock        ;24-27
    2119 00013db0 00013e40'         .long   tlpzgraboh,tlpzgraboh,tlpzblock,tlpzblock               ;28-31
    2120                    
    2121 00013e30           tlpzz
    2122 00013e30     0960          rets
    2123                    
    2124 00013e40           tlpzpunch               ;1
    2125 00013e40           tlpzblock               ;2
    2126 00013e40           tlpzsuper_punch ;4
    2127 00013e40           tlpzkick                ;8
    2128 00013e40           tlpzsuper_kick  ;16
    2129 00013e40           tlpzgraboh
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2130 00013e40           tlpzpunchkick
    2131                    
    2132 00013e40                   SETMODE INAIR
    2133                    
    2134 00013ef0     09e0          movi    und_tbukl_butt_drop_anim,a0
         00013f00 00000000! 
    2135 00013f20     0d5f          calla   change_anim1a
         00013f30 00000000! 
    2136                    
    2137 00013f50                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2138                    
    2139 000140f0     0960          rets
    2140                    
    2141                    
    2142 00014100           mode_block      ;7
    2143                    
    2144 00014100     b5a0          move    *a13(BLOCK_TIME),a0
         00014110     0d30  
    2145 00014120     1020          inc     a0
    2146 00014130     b00d          move    a0,*a13(BLOCK_TIME)
         00014140     0d30  
    2147 00014150     0b40          cmpi    160,a0
         00014160     ff5f  
    2148 00014170     c413          jrlt    khnmno
    2149                    
    2150 00014180     0d5f          calla   get_opp_plyrmode
         00014190 00000000! 
    2151 000141b0     0b40          cmpi    MODE_BLOCK,a0
         000141c0     fff8  
    2152 000141d0     cb0d          jrnz    khnmno
    2153 000141e0     b5a0          move    *a13(CLOSEST_XDIST),a0
         000141f0     0370  
    2154 00014200     0b40          cmpi    61h,a0
         00014210     ff9e  
    2155 00014220     c508          jrge    khnmno
    2156 00014230     0b40          cmpi    45,a0
         00014240     ffd2  
    2157 00014250     c405          jrlt    khnmno
    2158 00014260     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00014270     0390  
    2159 00014280     0b40          cmpi    30,a0
         00014290     ffe1  
    2160 000142a0     c461          jrlt    khnmpunchblock
    2161                    
    2162 000142b0           khnmno
    2163 000142b0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000142c0     0ba0  
    2164 000142d0     0b80          andi    011111b,a0
         000142e0 ffffffe0  
    2165 00014300     ca0c          jrz     khnmno_interrupt
    2166                    
    2167                            ;press.  if block isn't down, let mode_normal handle it
    2168 00014310     4c02          move    a0,a2                   ;save a0 from ...val_down
    2169 00014320     b5a0          move    *a13(BUT_VAL_CUR),a0
         00014330     0b90  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2170 00014340     1fc0          btst    PLAYER_BLOCK_BIT,a0
    2171 00014350     ca08          jrz     khnmset_mode_normal
    2172 00014360     4c40          move    a2,a0                   ;restore a0 from ...val_down
    2173                    
    2174 00014370                   X32     a0
    2175 00014380     0b20          addi    khnmaction_table,a0
         00014390 000144b0' 
    2176 000143b0     8600          move    *a0,a0,L
    2177 000143c0     0920          call    a0
    2178                    
    2179 000143d0           khnmno_interrupt
    2180 000143d0     0960          rets
    2181                    
    2182 000143e0           khnmset_mode_normal
    2183 000143e0                   SETMODE NORMAL
    2184 00014490     c000          jruc    mode_normal
         000144a0     f4c0  
    2185                    
    2186 000144b0           khnmaction_table
    2187 000144b0 000148b0'         .long   khnmz,khnmpunchblock,khnmz      ;0-2
    2188 00014510 000148c0'         .long   khnmpunchblock          ;3
    2189 00014530 000148b0'         .long   khnmz,khnmz,khnmz,khnmz,khnmz,khnmz,khnmz       ;4-10
    2190 00014610 000148b0'         .long   khnmz,khnmz,khnmz,khnmz,khnmz,khnmz,khnmz       ;11-17
    2191 000146f0 000148b0'         .long   khnmz,khnmz,khnmz,khnmz,khnmz,khnmz,khnmz       ;18-24
    2192 000147d0 000148b0'         .long   khnmz,khnmz,khnmz,khnmz,khnmz,khnmz,khnmz       ;25-31
    2193                    
    2194 000148b0           khnmz
    2195 000148b0     0960          rets
    2196                    
    2197 000148c0           khnmpunchblock  ;3
    2198                    
    2199                    
    2200 000148c0                   SETMODE NORMAL
    2201                    
    2202 00014970     09e0          movi    und_4_push_anim,a0
         00014980 00000000! 
    2203 000149a0     0d5f          calla   change_anim1a
         000149b0 00000000! 
    2204                    
    2205 000149d0                   WRSND   W_TAKER,PUSH_T1,PUSH_T2
    2206                    
    2207 00014b70     0960          rets
    2208                    
    2209                    
    2210                    
    2211 00014b80           mode_dizzy      ;8
    2212                    
    2213 00014b80     0960          rets
    2214                    
    2215                    
    2216 00014b90           mode_oppoverhead ;10
    2217                    
    2218 00014b90     0960          rets
    2219                    
    2220                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2221 00014ba0           mode_climbturnbkl       ;11
    2222                    
    2223 00014ba0     0960          rets
    2224                    
    2225                    
    2226                    
    2227 00014bb0           mode_waitanim   ;12
    2228                    
    2229 00014bb0     b5a0          move    *a13(ANIMODE),a0
         00014bc0     0660  
    2230 00014bd0     1fe0          btst    MODE_END_BIT,a0
    2231 00014be0     ca03          jrz     sndcnot_ended
    2232                    
    2233 00014bf0     b7a0          move    *a13(CODE_ADDR),a0,L
         00014c00     0430  
    2234 00014c10     0920          call    a0
    2235                    
    2236 00014c20           sndcnot_ended
    2237 00014c20     0960          rets
    2238                    
    2239                    
    2240                    
    2241 00014c30           mode_grapple    ;13
    2242                    
    2243 00014c30     0960          rets
    2244                    
    2245                    
    2246 00014c40           mode_master     ;14
    2247                    
    2248 00014c40     0d5f          calla   master_keep_attached    ;keep slave attached to me
         00014c50 00000000! 
    2249                    
    2250 00014c70     0960          rets
    2251                    
    2252                    
    2253 00014c80           mode_slave      ;15
    2254 00014c80     0960          rets
    2255                    
    2256                    
    2257 00014c90           mode_headhold   ;16
    2258 00014c90     b7a0          move    *a13(ANIBASE),a0,L
         00014ca0     0670  
    2259 00014cb0     0b60          cmpi    und_sliding_choke_anim,a0
         00014cc0 ffffffff! 
    2260 00014ce0     cb0a          jrnz    aqfonorm
    2261 00014cf0     b7a0          move    *a13(CUR_FRAME),a0,L
         00014d00     06c0  
    2262                            .ref    U2LN2A
    2263 00014d10     09e1          movi    U2LN2A+FR6,a1
         00014d20 000000c0! 
    2264 00014d40     8621          move    *a1,a1,L
    2265 00014d50     4820          cmp     a1,a0
    2266 00014d60     ca00          jrz     mode_chokehold
         00014d70     0146  
    2267 00014d80     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2268 00014d90           aqfonorm
    2269                            .ref    bozo_check
    2270 00014d90     0d5f          calla   bozo_check
         00014da0 00000000! 
    2271 00014dc0     c929          jrnc    aqfofail
    2272                    
    2273 00014dd0                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2274                    
    2275 00014f70     09e0          movi    und_neckbreaker_anim,a0
         00014f80 00000000! 
    2276 00014fa0     05ae          move    @PCNT,a14
         00014fb0 00000000! 
    2277 00014fd0     1fee          btst    0,a14
    2278 00014fe0     ca03          jrz     aqfotag
    2279 00014ff0     09e0          movi    und_pile_anim,a0
         00015000 00000000! 
    2280 00015020     0d5f  aqfotag calla   change_anim1a
         00015030 00000000! 
    2281                    
    2282 00015050     0960          rets
    2283                    
    2284 00015060           aqfofail
    2285 00015060     b7a0          move    *a13(WHOIHIT),a0,L
         00015070     0500  
    2286 00015080     b400          move    *a0(PLYRMODE),a0
         00015090     05c0  
    2287 000150a0     0b40          cmpi    MODE_HEADHELD,a0
         000150b0     ffec  
    2288 000150c0     cb10          jrnz    aqfoexit
    2289                    
    2290                    
    2291 000150d0     b5a0          move    *a13(ANIMODE),a0
         000150e0     0660  
    2292 000150f0     1fa0          btst    MODE_UNINT_BIT,a0
    2293 00015100     cb0b          jrnz    aqfono_interrupt
    2294                    
    2295 00015110     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00015120     0ba0  
    2296 00015130     0b80          andi    011111b,a0
         00015140 ffffffe0  
    2297 00015160                   X32     a0
    2298 00015170     0b20          addi    aqfoaction_table,a0
         00015180 000153a0' 
    2299 000151a0     8600          move    *a0,a0,L
    2300 000151b0     0920          call    a0
    2301                    
    2302 000151c0           aqfono_interrupt
    2303 000151c0     0960          rets
    2304                    
    2305 000151d0           aqfoexit
    2306 000151d0     b7ae          move    *a13(OBJ_ZPOS),a14,L
         000151e0     0140  
    2307 000151f0     0d0e          subi    [6,0],a14
         00015200 fff9ffff  
    2308 00015220     b3cd          move    a14,*a13(OBJ_ZPOS),L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   52

         00015230     0140  
    2309                    
    2310 00015240     1941          movk    MOVE_DOWN_RIGHT,a1
    2311 00015250     b5a0          move    *a13(OBJ_CONTROL),a0
         00015260     0780  
    2312 00015270     1f60          btst    B_FLIPH,a0
    2313 00015280     ca01          jrz     aqforight
    2314 00015290     18c1          movk    MOVE_DOWN_LEFT,a1
    2315 000152a0     b02d  aqforight       move    a1,*a13(FACING_DIR)
         000152b0     04c0  
    2316 000152c0     b02d          move    a1,*a13(NEW_FACING_DIR)
         000152d0     04d0  
    2317                    
    2318 000152e0                   SETMODE NORMAL
    2319                    
    2320 00015390     0960          rets
    2321                    
    2322 000153a0           aqfoaction_table
    2323 000153a0 000157a0'         .long   aqfoz,aqfopunch,aqfoblock,aqfoblock                     ;0-3
    2324 00015420 00015950'         .long   aqfosuper_punch,aqfosuper_punch,aqfoblock,aqfoblock     ;4-7
    2325 000154a0 00015bb0'         .long   aqfokick,aqfopunchkick,aqfoblock,aqfoblock              ;8-11
    2326 00015520 00015950'         .long   aqfosuper_punch,aqfopunchkick,aqfoblock,aqfoblock       ;12-15
    2327 000155a0 00015d00'         .long   aqfosuper_kick,aqfosuper_kick,aqfoblock,aqfoblock       ;16-19
    2328 00015620 000157a0'         .long   aqfograboh,aqfograboh,aqfoblock,aqfoblock               ;20-23
    2329 000156a0 00015d00'         .long   aqfosuper_kick,aqfopunchkick,aqfoblock,aqfoblock        ;24-27
    2330 00015720 000157a0'         .long   aqfograboh,aqfograboh,aqfoblock,aqfoblock               ;28-31
    2331                    
    2332                    
    2333 000157a0           aqfoblock
    2334 000157a0           aqfograboh
    2335 000157a0           aqfoz           ;0
    2336 000157a0     0960          rets
    2337                    
    2338                    
    2339 000157b0           aqfopunch               ;1
    2340 000157b0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000157c0 00000000! 
    2341 000157e0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000157f0     0bc0  
    2342 00015800     b5a1          move    *a13(NEW_FACING_DIR),a1
         00015810     04d0  
    2343 00015820     0b81          andi    0ch,a1
         00015830 fffffff3  
    2344 00015850     4801          cmp     a0,a1
    2345 00015860     cb07          jrnz    aqfotag2
    2346 00015870     09e0          movi    und_4_knee_butts_anim,a0
         00015880 00000000! 
    2347 000158a0     0d5f          calla   change_anim1a
         000158b0 00000000! 
    2348 000158d0     0960          rets
    2349                    
    2350 000158e0           aqfotag2
    2351                            .ref    und_4_knee2_anim
    2352 000158e0     09e0          movi    und_4_knee2_anim,a0
         000158f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   53

    2353 00015910     0d5f          calla   change_anim1a
         00015920 00000000! 
    2354 00015940     0960          rets
    2355                    
    2356 00015950           aqfosuper_punch ;4
    2357 00015950           do_pile
    2358                    
    2359 00015950     b5a0          move    *a13(USR_VAR2),a0
         00015960     0860  
    2360 00015970     ca0e          jrz     aqfoupper
    2361                    
    2362 00015980     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00015990 00000000! 
    2363                    
    2364 000159b0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000159c0     0bc0  
    2365 000159d0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2366 000159e0     cadb          jrz     aqfoz
    2367                    
    2368 000159f0     09e0          movi    und_pile_anim,a0
         00015a00 00000000! 
    2369 00015a20     0d5f          calla   change_anim1a
         00015a30 00000000! 
    2370 00015a50     0960          rets
    2371                    
    2372 00015a60           aqfoupper
    2373 00015a60     b5a0          move    *a13(STICK_VAL_CUR),a0
         00015a70     0bc0  
    2374 00015a80     1fc0          btst    PLAYER_DOWN_BIT,a0
    2375 00015a90     cad0          jrz     aqfoz
    2376                    
    2377                    
    2378 00015aa0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00015ab0 00000000! 
    2379 00015ad0                   FACE24  und,uppercut_anim
    2380 00015b70     0d5f          calla   change_anim1a
         00015b80 00000000! 
    2381 00015ba0     0960          rets
    2382                    
    2383                    
    2384 00015bb0           aqfopunchkick
    2385 00015bb0           aqfokick
    2386 00015bb0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00015bc0 00000000! 
    2387 00015be0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00015bf0     0bc0  
    2388 00015c00     1fc0          btst    PLAYER_DOWN_BIT,a0
    2389 00015c10     ca07          jrz     aqfoknee
    2390                    
    2391 00015c20     09e0          movi    und_4_knee2_anim,a0
         00015c30 00000000! 
    2392 00015c50     0d5f          calla   change_anim1a
         00015c60 00000000! 
    2393 00015c80     0960          rets
    2394                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   54

    2395 00015c90           aqfoknee
    2396 00015c90     09e0          movi    und_4_knee2_anim,a0
         00015ca0 00000000! 
    2397 00015cc0     0d5f          calla   change_anim1a
         00015cd0 00000000! 
    2398 00015cf0     0960          rets
    2399                    
    2400 00015d00           aqfosuper_kick  ;16
    2401                    
    2402 00015d00     0960          rets
    2403                    
    2404 00015d10           mode_puppet2    ;17
    2405                    
    2406 00015d10     0960          rets
    2407                    
    2408 00015d20           mode_headheld   ;19
    2409 00015d20     b5a0          move    *a13(ANIMODE),a0
         00015d30     0660  
    2410 00015d40     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2411 00015d50     cb80          janz    mode_choking
         00015d60 00017a60' 
    2412                    
    2413                    
    2414 00015d80     0d5f          calla   bozo_check
         00015d90 00000000! 
    2415 00015db0     c932          jrnc    iyzhfail
    2416                    
    2417 00015dc0                   PUSH    a8
    2418 00015dd0     4da8          move    a13,a8
    2419 00015de0     0d5f          CALLA   DO_REVERSAL
         00015df0 00000000! 
    2420 00015e10     0d5f          CALLA   DO_REVERSAL_MESS
         00015e20 00000000! 
    2421 00015e40                   PULL    a8
    2422                    
    2423 00015e50                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2424                    
    2425 00015ff0     09e0          movi    und_neckbreaker_anim,a0
         00016000 00000000! 
    2426 00016020     05ae          move    @PCNT,a14
         00016030 00000000! 
    2427 00016050     1fee          btst    0,a14
    2428 00016060     ca03          jrz     iyzhtag
    2429 00016070     09e0          movi    und_pile_anim,a0
         00016080 00000000! 
    2430 000160a0     0d5f  iyzhtag calla   change_anim1a
         000160b0 00000000! 
    2431                    
    2432 000160d0     0960          rets
    2433 000160e0           iyzhfail
    2434                    
    2435 000160e0     b7a0          move    *a13(ATTACH_PROC),a0,L
         000160f0     03e0  
    2436 00016100     cb0c          jrnz    iyzhno_luck
    2437                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   55

    2438 00016110     b5a0          move    *a13(OBJ_YPOSINT),a0
         00016120     0130  
    2439 00016130     b5a1          move    *a13(GROUND_Y),a1
         00016140     0570  
    2440 00016150     4820          cmp     a1,a0                   ;a0-a1
    2441 00016160     c706          jrgt    iyzhno_luck
    2442                    
    2443                    
    2444 00016170     09e0          movi    und_3_head_held_stand_anim,a0
         00016180 00000000! 
    2445 000161a0     0d5f          calla   change_anim1a
         000161b0 00000000! 
    2446                    
    2447 000161d0           iyzhno_luck
    2448 000161d0     0960          rets
    2449                    
    2450 000161e0           mode_chokehold  ;24
    2451                    
    2452 000161e0     b7a0          move    *a13(ATTACH_PROC),a0,L
         000161f0     03e0  
    2453 00016200     ca00          jrz     jukvlost_him
         00016210     016e  
    2454 00016220     b600          move    *a0(ATTACH_PROC),a0,L
         00016230     03e0  
    2455 00016240     49a0          cmp     a13,a0
    2456 00016250     cb00          jrne    jukvlost_him
         00016260     0169  
    2457                    
    2458 00016270     b5a0          move    *a13(ANIMODE),a0
         00016280     0660  
    2459 00016290     1fa0          btst    MODE_UNINT_BIT,a0
    2460 000162a0     cb11          jrnz    jukvno_interrupt
    2461                    
    2462 000162b0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000162c0     0ba0  
    2463 000162d0     0b80          andi    011111b,a0
         000162e0 ffffffe0  
    2464 00016300     ca0b          jrz     jukvno_interrupt
    2465                    
    2466 00016310     b7a1          move    *a13(ATTACH_PROC),a1,L
         00016320     03e0  
    2467 00016330     1bce          movk    30,a14
    2468 00016340     b1c1          move    a14,*a1(IMMOBILIZE_TIME)
         00016350     0ae0  
    2469                    
    2470 00016360                   X32     a0
    2471 00016370     0b20          addi    jukvaction_table,a0
         00016380 000163d0' 
    2472 000163a0     8600          move    *a0,a0,L
    2473 000163b0     0920          call    a0
    2474                    
    2475 000163c0           jukvno_interrupt
    2476 000163c0     0960          rets
    2477                    
    2478 000163d0           jukvaction_table
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   56

    2479 000163d0 000167d0'         .long   jukvz,jukvpunch,jukvblock,jukvblock                     ;0-3
    2480 00016450 00016f00'         .long   jukvsuper_punch,jukvsuper_punch,jukvblock,jukvblock     ;4-7
    2481 000164d0 00017490'         .long   jukvkick,jukvpunchkick,jukvblock,jukvblock              ;8-11
    2482 00016550 00016f00'         .long   jukvsuper_punch,jukvpunchkick,jukvblock,jukvblock       ;12-15
    2483 000165d0 000172d0'         .long   jukvsuper_kick,jukvsuper_kick,jukvblock,jukvblock       ;16-19
    2484 00016650 00016f00'         .long   jukvgraboh,jukvgraboh,jukvblock,jukvblock               ;20-23
    2485 000166d0 000172d0'         .long   jukvsuper_kick,jukvpunchkick,jukvblock,jukvblock        ;24-27
    2486 00016750 00016f00'         .long   jukvgraboh,jukvgraboh,jukvblock,jukvblock               ;28-31
    2487                    
    2488 000167d0           jukvz           ;0
    2489 000167d0           jukvblock               ;2
    2490 000167d0     0960          rets
    2491                    
    2492 000167e0           jukvpunch               ;1
    2493 000167e0           jukvpunchkick
    2494                    
    2495 000167e0     5600          clr     a0
    2496 000167f0     b20d          move    a0,*a13(ATTACH_PROC),L
         00016800     03e0  
    2497                    
    2498 00016810                   SETMODE NORMAL
    2499                    
    2500 000168c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000168d0     0bc0  
    2501 000168e0     1fe0          btst    MOVE_UP_BIT,a0
    2502 000168f0     ca3c          jrz     jukvreg
    2503                    
    2504 00016900     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00016910 00000000! 
    2505                    
    2506 00016930                   SETMODE HEADHOLD
    2507                    
    2508 000169e0     b7a0          move    *a13(WHOIHIT),a0,L
         000169f0     0500  
    2509 00016a00     09ce          movi    MODE_HEADHELD,a14
         00016a10     0013  
    2510 00016a20     b1c0          move    a14,*a0(PLYRMODE)
         00016a30     05c0  
    2511                    
    2512 00016a40     b40e          move    *a0(ANIMODE),a14
         00016a50     0660  
    2513 00016a60     0b8e          andni   MODE_NOGRAVITY,a14
         00016a70 00000020  
    2514 00016a90     b1c0          move    a14,*a0(ANIMODE)
         00016aa0     0660  
    2515                    
    2516 00016ab0     09e0          movi    und_4_knee_butts_anim,a0
         00016ac0 00000000! 
    2517 00016ae0     0d5f          calla   change_anim1a
         00016af0 00000000! 
    2518 00016b10                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    2519                    
    2520 00016cb0     0960          rets
    2521 00016cc0           jukvreg
    2522 00016cc0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   57

         00016cd0 00000000! 
    2523 00016cf0     09e0          movi    und_2_butt_anim,a0
         00016d00 00000000! 
    2524 00016d20     0d5f          calla   change_anim1a
         00016d30 00000000! 
    2525 00016d50                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    2526                    
    2527 00016ef0     0960          rets
    2528                    
    2529 00016f00           jukvsuper_punch ;4
    2530 00016f00           jukvgraboh
    2531                    
    2532 00016f00     b5a0          move    *a13(STICK_VAL_CUR),a0
         00016f10     0bc0  
    2533 00016f20     1fc0          btst    MOVE_DOWN_BIT,a0
    2534 00016f30     ca8a          jrz     jukvpunch
    2535                    
    2536 00016f40     5600          clr     a0
    2537 00016f50     b20d          move    a0,*a13(ATTACH_PROC),L
         00016f60     03e0  
    2538                    
    2539 00016f70                   SETMODE NORMAL
    2540                    
    2541 00017020     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017030 00000000! 
    2542 00017050                   FACE24  und,uppercut_anim
    2543 000170f0     0d5f          calla   change_anim1
         00017100 00000000! 
    2544                    
    2545 00017120                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    2546 000172c0     0960          rets
    2547                    
    2548 000172d0           jukvsuper_kick  ;16
    2549 000172d0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000172e0     0bc0  
    2550 000172f0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2551 00017300     cb30          jrnz    jukvtag
    2552 00017310     5600          clr     a0
    2553 00017320     b20d          move    a0,*a13(ATTACH_PROC),L
         00017330     03e0  
    2554                    
    2555 00017340                   SETMODE NORMAL
    2556                    
    2557 000173f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017400 00000000! 
    2558 00017420     09e0          movi    und_2_knee_anim,a0
         00017430 00000000! 
    2559 00017450     0d5f          calla   change_anim1a
         00017460 00000000! 
    2560 00017480     0960          rets
    2561                    
    2562 00017490           jukvkick                ;8
    2563                    
    2564 00017490     5600          clr     a0
    2565 000174a0     b20d          move    a0,*a13(ATTACH_PROC),L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   58

         000174b0     03e0  
    2566                    
    2567 000174c0                   SETMODE NORMAL
    2568                    
    2569 00017570     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017580 00000000! 
    2570 000175a0     09e0          movi    und_2_knee_anim,a0
         000175b0 00000000! 
    2571 000175d0     0d5f          calla   change_anim1a
         000175e0 00000000! 
    2572 00017600     0960          rets
    2573                    
    2574 00017610           jukvtag
    2575 00017610                   SETMODE NORMAL
    2576                    
    2577 000176c0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000176d0 00000000! 
    2578 000176f0     09e0          movi    und_chokeslam_anim,a0
         00017700 00000000! 
    2579 00017720     0d5f          calla   change_anim1a
         00017730 00000000! 
    2580                    
    2581 00017750                   WRSND   W_TAKER,KICK_T1,KICK_T2
    2582                    
    2583 000178f0     0960          rets
    2584                    
    2585                    
    2586 00017900           jukvlost_him
    2587 00017900     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017910 00000000! 
    2588 00017930     5600          clr     a0
    2589 00017940     b20d          move    a0,*a13(ATTACH_PROC),L
         00017950     03e0  
    2590                    
    2591 00017960                   SETMODE NORMAL
    2592 00017a10     09c0          movi    MODE_NORMAL,a0
         00017a20     0000  
    2593 00017a30     b00d          move    a0,*a13(ANIMODE)
         00017a40     0660  
    2594                    
    2595 00017a50     0960          rets
    2596                    
    2597                    
    2598 00017a60            SUBR   mode_choking    ;25
    2599                    
    2600 00017a60     b7a0          move    *a13(ATTACH_PROC),a0,L
         00017a70     03e0  
    2601 00017a80     ca05          jrz     wmtwfall_out
    2602 00017a90     b600          move    *a0(ATTACH_PROC),a0,L
         00017aa0     03e0  
    2603 00017ab0     49a0          cmp     a13,a0
    2604 00017ac0     cb01          jrne    wmtwfall_out
    2605                    
    2606 00017ad0     0960          rets
    2607                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   59

    2608                    
    2609 00017ae0           wmtwfall_out
    2610 00017ae0     5600          clr     a0
    2611 00017af0     b20d          move    a0,*a13(ATTACH_PROC),L
         00017b00     03e0  
    2612                    
    2613 00017b10     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017b20 00000000! 
    2614 00017b40                   SETMODE NORMAL
    2615 00017bf0     09c0          movi    MODE_NORMAL,a0
         00017c00     0000  
    2616 00017c10     b00d          move    a0,*a13(ANIMODE)
         00017c20     0660  
    2617                    
    2618 00017c30     0960          rets
    2619                    
    2620                    
    2621                    
    2622          0003a000  uocxVEL equ     3a000h          ;38000h ;30000h
    2623          00031000  uocxDVEL        equ     31000h          ;27978h ;21f0eh
    2624                    
    2625                    
    2626 00017c40            SUBR und_velocity_table
    2627                    
    2628                    
    2629 00017c40 00000000          .long   0,      -uocxVEL        ;0 UP
    2630                    
    2631 00017c80 00031000          .long   uocxDVEL,       -uocxDVEL       ;1 UP-RIGHT
    2632                    
    2633 00017cc0 0003a000          .long   uocxVEL,        0       ;2 RIGHT
    2634                    
    2635 00017d00 00031000          .long   uocxDVEL,       uocxDVEL        ;3 DOWN-RIGHT
    2636                    
    2637 00017d40 00000000          .long   0,      uocxVEL ;4 DOWN
    2638                    
    2639 00017d80 fffcf000          .long   -uocxDVEL,      uocxDVEL        ;5 DOWN-LEFT
    2640                    
    2641 00017dc0 fffc6000          .long   -uocxVEL,       0       ;6 LEFT
    2642                    
    2643 00017e00 fffcf000          .long   -uocxDVEL,      -uocxDVEL       ;7 UP-LEFT
    2644                    
    2645                    
    2646                    
    2647 00017e40            SUBR und_rotate_anims_table
    2648 00017e40 00000000!         .long   und_stand2_anim         ;new = up right
    2649 00017e60 00000000!         .long   und_2_to_4_turn_anim    ;    = down right
    2650 00017e80 00000000!         .long   und_2_to_6_turn_anim    ;    = down left
    2651 00017ea0 00000000!         .long   und_2_to_8_turn_anim    ;    = up left
    2652                    
    2653 00017ec0 00000000!         .long   und_4_to_2_turn_anim    ;new = up right
    2654 00017ee0 00000000!         .long   und_stand4_anim         ;    = down right
    2655 00017f00 00000000!         .long   und_4_to_6_turn_anim    ;    = down left
    2656 00017f20 00000000!         .long   und_4_to_8_turn_anim    ;    = up left
    2657                    
    2658 00017f40 00000000!         .long   und_6_to_2_turn_anim    ;new = up right
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   60

    2659 00017f60 00000000!         .long   und_6_to_4_turn_anim    ;    = down right
    2660 00017f80 00000000!         .long   und_stand6_anim         ;    = down left
    2661 00017fa0 00000000!         .long   und_6_to_8_turn_anim    ;    = up left
    2662                    
    2663 00017fc0 00000000!         .long   und_8_to_2_turn_anim    ;new = up right
    2664 00017fe0 00000000!         .long   und_8_to_4_turn_anim    ;    = down right
    2665 00018000 00000000!         .long   und_8_to_6_turn_anim    ;    = down left
    2666 00018020 00000000!         .long   und_stand8_anim         ;    = up left
    2667                    
    2668                    
    2669 00018040            SUBR und_leg_anims_table
    2670 00018040 00000000!         .long   und_walk1_f2_anim       ;1 (UP)
    2671 00018060 00000000!         .long   und_walk1_f2_anim       ;2 (UP_RIGHT)
    2672 00018080 00000000!         .long   und_walk1_f4_anim       ;3 (RIGHT)
    2673 000180a0 00000000!         .long   und_walk1_f4_anim       ;4 (DOWN_RIGHT)
    2674 000180c0 00000000!         .long   und_walk1_f4_anim       ;5 (DOWN)
    2675 000180e0 00000000!         .long   und_walk1_f4_anim       ;6 (DOWN_LEFT)
    2676 00018100 00000000!         .long   und_walk1_f2_anim       ;7 (LEFT)
    2677 00018120 00000000!         .long   und_walk1_f2_anim       ;8 (UP-LEFT)
    2678                    
    2679 00018140 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    2680 00018160 00000000!         .long   und_walk2_f2_anim       ;2 (UP_RIGHT)
    2681 00018180 00000000!         .long   und_walk2_f2_anim       ;3 (RIGHT)
    2682 000181a0 00000000!         .long   und_walk2_f4_anim       ;4 (DOWN_RIGHT)
    2683 000181c0 00000000!         .long   und_walk8_f4_anim       ;5 (DOWN)
    2684 000181e0 00000000!         .long   und_walk8_f4_anim       ;6 (DOWN_LEFT)
    2685 00018200 00000000!         .long   und_walk4_f2_anim       ;7 (LEFT)
    2686 00018220 00000000!         .long   und_walk4_f2_anim       ;8 (UP-LEFT)
    2687                    
    2688 00018240 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    2689 00018260 00000000!         .long   und_walk2_f2_anim       ;2 (UP_RIGHT)
    2690 00018280 00000000!         .long   und_walk2_f2_anim       ;3 (RIGHT)
    2691 000182a0 00000000!         .long   und_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2692 000182c0 00000000!         .long   und_walk4_f4_anim       ;5 (DOWN)
    2693 000182e0 00000000!         .long   und_walk8_f4_anim       ;6 (DOWN_LEFT)
    2694 00018300 00000000!         .long   und_walk6_f2_anim       ;7 (LEFT)
    2695 00018320 00000000!         .long   und_walk6_f2_anim       ;8 (UP-LEFT)
    2696                    
    2697                    
    2698 00018340 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    2699 00018360 00000000!         .long   und_walk8_f2_anim       ;2 (UP_RIGHT)
    2700 00018380 00000000!         .long   und_walk4_f4_anim       ;3 (RIGHT)
    2701 000183a0 00000000!         .long   und_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2702 000183c0 00000000!         .long   und_walk2_f4_anim       ;5 (DOWN)
    2703 000183e0 00000000!         .long   und_walk6_f4_anim       ;6 (DOWN_LEFT)
    2704 00018400 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    2705 00018420 00000000!         .long   und_walk6_f2_anim       ;8 (UP-LEFT)
    2706                    
    2707 00018440 00000000!         .long   und_walk5_f2_anim       ;1 (UP)
    2708 00018460 00000000!         .long   und_walk5_f2_anim       ;2 (UP_RIGHT)
    2709 00018480 00000000!         .long   und_walk5_f4_anim       ;3 (RIGHT)
    2710 000184a0 00000000!         .long   und_walk5_f4_anim       ;4 (DOWN_RIGHT)
    2711 000184c0 00000000!         .long   und_walk5_f4_anim       ;5 (DOWN)
    2712 000184e0 00000000!         .long   und_walk5_f4_anim       ;6 (DOWN_LEFT)
    2713 00018500 00000000!         .long   und_walk5_f2_anim       ;7 (LEFT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:14 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   61

    2714 00018520 00000000!         .long   und_walk5_f2_anim       ;8 (UP-LEFT)
    2715                    
    2716 00018540 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    2717 00018560 00000000!         .long   und_walk6_f2_anim       ;2 (UP_RIGHT)
    2718 00018580 00000000!         .long   und_walk2_f2_anim       ;3 (RIGHT)
    2719 000185a0 00000000!         .long   und_walk6_f4_anim       ;4 (DOWN_RIGHT)
    2720 000185c0 00000000!         .long   und_walk2_f4_anim       ;5 (DOWN)
    2721 000185e0 00000000!         .long   und_walk4_f4_anim       ;6 (DOWN_LEFT)
    2722 00018600 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    2723 00018620 00000000!         .long   und_walk8_f2_anim       ;8 (UP-LEFT)
    2724                    
    2725 00018640 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    2726 00018660 00000000!         .long   und_walk6_f2_anim       ;2 (UP_RIGHT)
    2727 00018680 00000000!         .long   und_walk6_f2_anim       ;3 (RIGHT)
    2728 000186a0 00000000!         .long   und_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2729 000186c0 00000000!         .long   und_walk4_f4_anim       ;5 (DOWN)
    2730 000186e0 00000000!         .long   und_walk4_f4_anim       ;6 (DOWN_LEFT)
    2731 00018700 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    2732 00018720 00000000!         .long   und_walk2_f2_anim       ;8 (UP-LEFT)
    2733                    
    2734 00018740 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    2735 00018760 00000000!         .long   und_walk4_f2_anim       ;2 (UP_RIGHT)
    2736 00018780 00000000!         .long   und_walk6_f2_anim       ;3 (RIGHT)
    2737 000187a0 00000000!         .long   und_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2738 000187c0 00000000!         .long   und_walk6_f4_anim       ;5 (DOWN)
    2739 000187e0 00000000!         .long   und_walk2_f4_anim       ;6 (DOWN_LEFT)
    2740 00018800 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    2741 00018820 00000000!         .long   und_walk2_f2_anim       ;8 (UP-LEFT)
    2742                    
    2743                    
    2744 00018840            SUBR und_torso_anims_table
    2745 00018840 00000000!         .long   und_torso2_anim         ;new = up right
    2746 00018860 00000000!         .long   und_2_to_4_turn2_anim   ;    = down right
    2747 00018880 00000000!         .long   und_2_to_6_turn2_anim   ;    = down left
    2748 000188a0 00000000!         .long   und_2_to_8_turn2_anim   ;    = up left
    2749                    
    2750 000188c0 00000000!         .long   und_4_to_2_turn2_anim   ;new = up right
    2751 000188e0 00000000!         .long   und_torso4_anim         ;    = down right
    2752 00018900 00000000!         .long   und_4_to_6_turn2_anim   ;    = down left
    2753 00018920 00000000!         .long   und_4_to_8_turn2_anim   ;    = up left
    2754                    
    2755 00018940 00000000!         .long   und_6_to_2_turn2_anim   ;new = up right
    2756 00018960 00000000!         .long   und_6_to_4_turn2_anim   ;    = down right
    2757 00018980 00000000!         .long   und_torso6_anim         ;    = down left
    2758 000189a0 00000000!         .long   und_6_to_8_turn2_anim   ;    = up left
    2759                    
    2760 000189c0 00000000!         .long   und_8_to_2_turn2_anim   ;new = up right
    2761 000189e0 00000000!         .long   und_8_to_4_turn2_anim   ;    = down right
    2762 00018a00 00000000!         .long   und_8_to_6_turn2_anim   ;    = down left
    2763 00018a20 00000000!         .long   und_torso8_anim         ;    = up left
    2764                    
    2765                    
    2766                    
    2767                            .end

 No Errors,  No Warnings
