TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Jamie Rivett
       4                    * Initiated:            5/18/94
       5                    *
       6                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    **************************************************************
       9                    
      10                            .file   "taker.asm"
      12                            .width  132
      13                            .option b,d,l,t
      14                            .mnolist
      15                    
      16                    
      17                            .include        "macros.h"
      18                            .include        "jjxm.h"
      19                            .include        "mproc.equ"             ;Mproc equates
      20                            .include        "display.equ"           ;Display proc equates
      21                            .include        "gsp.equ"               ;Gsp asm equates
      22                            .include        "sys.equ"
      23                            .include        "game.equ"
      24                            .include        "plyr.equ"
      25                            .include        "anim.equ"
      26                            .include        "audit.equ"
      27                            .include        "sound.h"
      28                            .include        "ring.equ"
      29                            .include        "lifebar.h"
      30                            .include        "damage.equ"
      31                    
      32                    
      33                    ******************************************************************************
      34                    * EXTERNAL REFERENCES
      35                    
      36                            .ref    get_punch_dtime,ck_teammate_pin,raisearm_check
      37                            .ref    process_ptrs,can_pin
      38                            .ref    change_anim1,change_anim1a,set_raisearm_bit,hit_nearest
      39                            .ref    change_anim2,change_anim2a,std_taunt,std_walk_fast
      40                            .ref    keep_attached,master_keep_attached
      41                            .ref    get_opp_plyrmode,mode_dead,get_opp_process
      42                            .ref    check_secret_moves,round_award
      43                            .ref    mode_inair2,mode_puppet
      44                            .ref    execute_walk,do_taunt
      45                            .ref    bounce_off_ropes
      46                            .ref    climb_turnbuckle
      47                            .ref    ck_ignore,PCNT
      48                            .ref    CLIMB_ROPES,ADD_IF_SILENT,JUMP_ROPES
      49                            .ref    CHECK_COMBO_GO,FIND_AND_KILL_ENDLESS
      50                    
      51                            .ref    BONUS_MESS,DO_REVERSAL,DO_REVERSAL_MESS
      52                            .ref    BLOCK_WOOSH,drone_change_back
      53                            .ref    blocking_off
      54                            .ref    hyper_speed_on
      55                            .ref    in_finish_move
      56                            .ref    p1rounds,p2rounds
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .if NUM_TAKER_FINISHES
      58                            .if NUM_TAKER_FINISHES > 1
      59                            .ref    und_finish2_move
      60                            .endif
      61                            .endif
      62                            .ref    finish_completed
      63                            .ref    p1pins,p2pins
      64                            .ref    und_coffin_up
      65                            .ref    close_the_door
      66                            .ref    wres_mv_done
      67                            .ref    dead_wrestler
      68                            .ref    und_2_raise_dead_anim
      69                            .ref    guy_up,guy_in
      70                            .ref    BGND_UD1
      71                            .ref    KIL1C
      72                            .ref    RNDRNG0
      73                    
      74                    ******************************************************************************
      75                    * ANIMATION SEQUENCES
      76                    
      77                            .ref    und_4_block_anim
      78                            .ref    start_run_anim
      79                    
      80                            .ref    wres_slave_anim
      81                            .ref    und_zip_anim
      82                    
      83                            .ref    und_stand2_anim,und_stand8_anim
      84                            .ref    und_stand4_anim,und_stand6_anim
      85                            .ref    und_torso2_anim,und_torso8_anim
      86                            .ref    und_torso4_anim,und_torso6_anim
      87                    
      88                            .ref    und_2_to_4_turn_anim,und_8_to_6_turn_anim       ;stand
      89                            .ref    und_4_to_2_turn_anim,und_6_to_8_turn_anim
      90                            .ref    und_4_to_6_turn_anim,und_6_to_4_turn_anim
      91                            .ref    und_2_to_8_turn_anim,und_8_to_2_turn_anim
      92                            .ref    und_4_to_8_turn_anim,und_6_to_2_turn_anim
      93                            .ref    und_2_to_6_turn_anim,und_8_to_4_turn_anim
      94                    
      95                            .ref    und_2_to_4_turn2_anim,und_8_to_6_turn2_anim     ;torso
      96                            .ref    und_4_to_2_turn2_anim,und_6_to_8_turn2_anim
      97                            .ref    und_4_to_6_turn2_anim,und_6_to_4_turn2_anim
      98                            .ref    und_2_to_8_turn2_anim,und_8_to_2_turn2_anim
      99                            .ref    und_4_to_8_turn2_anim,und_6_to_2_turn2_anim
     100                            .ref    und_2_to_6_turn2_anim,und_8_to_4_turn2_anim
     101                    
     102                            .ref    und_walk1_f2_anim,und_walk2_f2_anim,und_walk4_f2_anim
     103                            .ref    und_walk5_f2_anim,und_walk6_f2_anim,und_walk8_f2_anim
     104                    
     105                            .ref    und_walk1_f4_anim,und_walk2_f4_anim,und_walk4_f4_anim
     106                            .ref    und_walk5_f4_anim,und_walk6_f4_anim,und_walk8_f4_anim
     107                    
     108                            .ref    und_run2_anim
     109                    
     110                            .ref    und_2_punch_anim,und_4_punch_anim
     111                            .ref    und_2_kick_anim,und_4_kick_anim
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                    
     113                            .ref    und_2_butt_anim,und_4_butt_anim
     114                            .ref    und_2_butts_anim,und_4_butts_anim
     115                            .ref    und_2_knee_anim,und_4_knee_anim
     116                            .ref    und_4_bigboot_anim
     117                    
     118                            .ref    und_head_hit2_anim,und_head_hit_dizzy_anim
     119                            .ref    und_2_stomp_anim,und_4_stomp_anim
     120                    
     121                            .ref    und_4_push_anim
     122                            .ref    und_4_losebal_anim
     123                            .ref    und_2_slap_anim,und_4_slap_anim
     124                    
     125                            .ref    und_2_grabfling_anim,und_4_grabfling_anim
     126                    
     127                            .ref    und_2_uppercut_anim,und_4_uppercut_anim
     128                            .ref    und_2_hair_pickup_anim,und_4_hair_pickup_anim
     129                    
     130                            .ref    und_4_pin2_anim,und_2_raise_arm_anim
     131                            .ref    und_4_raise_arm_anim
     132                    ;       .ref    und_ocrun_anim
     133                            .ref    und_fall_back_anim
     134                    
     135                    ;       .ref    und_summon_anim,und_summon2_anim
     136                            .ref    und_getup_anim
     137                    ;       .ref    und_4_graboh_anim
     138                            .ref    und_heldoh_anim
     139                    
     140                            .ref    und_2_super_kick_anim,und_4_super_kick_anim
     141                            .ref    und_4_knee_fall_anim
     142                            .ref    und_flying_kick_anim
     143                    
     144                            .ref    und_2_lbowdrop_anim,und_4_lbowdrop_anim
     145                            .ref    und_flying_butt_drop_anim,und_tbukl_butt_drop_anim
     146                    
     147                            .ref    und_sliding_choke_anim
     148                            .ref    und_tombstone_smash_anim
     149                            .ref    und_chokeslam_anim
     150                            .ref    und_pile_anim
     151                            .ref    und_neckbreaker_anim
     152                            .ref    und_2_snapmirror_anim,und_4_snapmirror_anim
     153                            .ref    und_2_snapmirror2_anim,und_4_snapmirror2_anim
     154                            .ref    und_climb_down_anim,und_climb_up_anim
     155                            .ref    und_spirit_push_anim,und_spirit_pull_anim
     156                            .ref    und_combo_kick_anim,und_combo_punch_anim
     157                            .ref    und_3_head_hold2_anim
     158                            .ref    und_3_head_hold_anim
     159                            .ref    und_neckbreaker2_anim,und_neckbreaker3_anim
     160                            .ref    und_4_knee_butts_anim
     161                            .ref    und_3_head_held_stand_anim
     162                            .ref    und_2_uppercut_anim,und_4_uppercut_anim
     163                            .ref    und_choke_face_slam_anim
     164                    
     165                    ******************************************************************************
     166                    * SYMBOLS DEFINED IN THIS FILE
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167                    
     168                    ******************************************************************************
     169                    * EQUATES FOR THIS FILE
     170                    
     171                    *****************************************************************************
     172                    
     173 00000000           und_secret_moves
     174                    
     175                    ;These secret moves are triggered only after a move list seq has ended!  You
     176                    ;can't hold on the last button press and have it trigger!
     177                    
     178                    ;Button held down moves need to be first entry
     179 00000000 000011a0'         .long   zoptbutton_hold
     180 00000020 00001a20'         .long   zoptgrab_fling
     181 00000040 00000700'         .long   zopthip_toss
     182 00000060 00001890'         .long   zoptgrab_fling2
     183 00000080 000018e0'         .long   zopthip_toss2
     184 000000a0 00000da0'         .long   zoptneck_grab
     185 000000c0 000002a0'         .long   zopttomb_smash
     186 000000e0 00000000          .long   0
     187                    
     188                    *****************************************************************************
     189                    *
     190                    * SPECIAL MOVE PROCESSES
     191                    *
     192                    
     193 00000100            SUBR   und_smove_table
     194                    
     195 00000100 000034f0'         .long   und_hdhold_neckbrk
     196 00000120 00004040'         .long   und_hdhold_faceslam
     197 00000140 00004bf0'         .long   und_hdhold_pile         ;(tombstone)
     198 00000160 000066b0'         .long   und_spirit_pull
     199 00000180 00005eb0'         .long   und_spirit_push
     200 000001a0 00006eb0'         .long   und_grab_toss_air
     201 000001c0 00007a80'         .long   und_hdhold_combo1
     202 000001e0 00008220'         .long   und_hdhold_combo2
     203                    ;       .long   und_hdhold_anti_combo
     204 00000200 00005740'         .long   und_choke_slide
     205 00000220 00000000!         .long   std_walk_fast
     206 00000240 00000000!         .long   std_taunt
     207                    
     208                            .if NUM_TAKER_FINISHES
     209 00000260 00002960'         .long   und_finish_move1
     210                            .endif
     211                            .if NUM_TAKER_FINISHES > 1
     212                            .long   und_finish_move2
     213                            .endif
     214 00000280 00000000          .long   0
     215                    
     216                    *******************************************************************************
     217                    
     218 000002a0           zopttomb_smash
     219 000002a0     0100          .word   B_SKICK,                J_ALL
     220 000002c0     0008          .word   J_TOWARD,               J_REAL_LR
     221 000002e0     0008          .word   J_TOWARD,               J_REAL_LR
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

     222 00000300     8020          .word   8000h | 32              ;max
     223 00000310 00000330'         .long   zoptscrt_tomb
     224                    
     225 00000330           zoptscrt_tomb
     226 00000330     b5a0          move    *a13(ANIMODE),a0
         00000340     0660  
     227 00000350     1fa0          btst    MODE_UNINT_BIT,a0
     228 00000360     cb00          jrnz    zoptout
         00000370     01f8  
     229                    
     230                    ;       calla   get_opp_plyrmode
     231                    ;       cmpi    MODE_DEAD,a0
     232                    ;       jrz     zoptout
     233                    
     234 00000380     b5a0          move    *a13(PLYRMODE),a0
         00000390     05c0  
     235 000003a0     0b40          cmpi    MODE_ONTURNBKL,a0
         000003b0     fff9  
     236 000003c0     ca00          jrz     zoptout
         000003d0     01f2  
     237                    
     238 000003e0     5600          clr     a0
     239 000003f0     b20d          move    a0,*a13(ATTACH_PROC),L
         00000400     03e0  
     240                    
     241 00000410                   SETMODE NORMAL
     242                    
     243 000004c0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000004d0 00000000! 
     244 000004f0     09e0          movi    und_tombstone_smash_anim,a0
         00000500 00000000! 
     245 00000520     0d5f          calla   change_anim1a
         00000530 00000000! 
     246                    
     247 00000550                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
     248                    
     249 000006f0     0960          rets
     250                    
     251                    *******************************************************************************
     252                    
     253 00000700           zopthip_toss
     254                    ;       .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     255                    ;       .word   8000h | 10              ;max
     256                    ;       .long   zoptscrt_hiptoss
     257                    
     258 00000700     0010          .word   B_PUNCH,                J_ALL
     259 00000720     0004          .word   J_AWAY,         J_REAL_LR
     260 00000740     0004          .word   J_AWAY,         J_REAL_LR
     261 00000760     8020          .word   8000h | 32              ;max
     262 00000770 00000790'         .long   zoptscrt_hiptoss
     263                    
     264 00000790           zoptscrt_hiptoss
     265 00000790     b5a0          move    *a13(ANIMODE),a0
         000007a0     0660  
     266 000007b0     1fa0          btst    MODE_UNINT_BIT,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

     267 000007c0     cb00          jrnz    zoptout
         000007d0     01b2  
     268                    
     269                    ;Don't do it when he is on ground
     270 000007e0     0d5f          calla   get_opp_plyrmode
         000007f0 00000000! 
     271 00000810     0b40          cmpi    MODE_ONGROUND,a0
         00000820     fffb  
     272 00000830     ca00          jrz     zoptout
         00000840     01ab  
     273 00000850     0b40          cmpi    MODE_DEAD,a0
         00000860     fff6  
     274 00000870     ca00          jrz     zoptout
         00000880     01a7  
     275 00000890     0b40          cmpi    MODE_HEADHELD,a0
         000008a0     ffec  
     276 000008b0     ca42          jrz     zoptck1
     277 000008c0     0b40          cmpi    MODE_INAIR,a0
         000008d0     fffd  
     278 000008e0     ca09          jrz     zoptdoit
     279 000008f0     0b40          cmpi    MODE_INAIR2,a0
         00000900     ffea  
     280 00000910     ca06          jrz     zoptdoit
     281                    
     282 00000920     b5a0          move    *a13(CLOSEST_DIST),a0
         00000930     0360  
     283 00000940     0b40          cmpi    70h,a0
         00000950     ff8f  
     284 00000960     c700          jrgt    zoptout
         00000970     0198  
     285                    
     286 00000980           zoptdoit
     287 00000980                   FACE24  und,snapmirror_anim
     288 00000a20     0d5f          calla   change_anim1a
         00000a30 00000000! 
     289                    
     290 00000a50     5600          clr     a0
     291 00000a60     b20d          move    a0,*a13(ATTACH_PROC),L
         00000a70     03e0  
     292                    
     293 00000a80                   SETMODE NORMAL
     294                    
     295 00000b30                   WRSND   W_TAKER,GRABFLING_T1,PUNCH_T2
     296                    
     297 00000cd0     0960          rets
     298 00000ce0           zoptck1
     299 00000ce0     b5a0          move    *a13(CLOSEST_NUM),a0
         00000cf0     03a0  
     300 00000d00                   X32     a0
     301 00000d10     0b20          addi    process_ptrs,a0
         00000d20 00000000! 
     302 00000d40     8600          move    *a0,a0,L
     303 00000d50     b400          move    *a0(ANIMODE),a0
         00000d60     0660  
     304 00000d70     1f40          btst    MODE_NOGRAVITY_BIT,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     305 00000d80     cbbf          jrnz    zoptdoit
     306 00000d90     0960          rets
     307                    
     308                    *******************************************************************************
     309                    
     310 00000da0           zoptneck_grab
     311 00000da0     0040          .word   B_SPUNCH,               J_ALL
     312 00000dc0     0008          .word   J_TOWARD,               J_REAL_LR
     313 00000de0     0008          .word   J_TOWARD,               J_REAL_LR
     314 00000e00     801e          .word   8000h | 30              ;max
     315 00000e10 00000e30'         .long   zoptscrt_neck
     316                    
     317 00000e30           zoptscrt_neck
     318 00000e30     b5a0          move    *a13(ANIMODE),a0
         00000e40     0660  
     319 00000e50     1fa0          btst    MODE_UNINT_BIT,a0
     320 00000e60     cb00          jrnz    zoptout
         00000e70     0148  
     321                    
     322                    ;Don't do it when he is on ground
     323 00000e80     0d5f          calla   get_opp_plyrmode
         00000e90 00000000! 
     324 00000eb0     0b40          cmpi    MODE_ONGROUND,a0
         00000ec0     fffb  
     325 00000ed0     ca00          jrz     zoptout
         00000ee0     0141  
     326 00000ef0     0b40          cmpi    MODE_DEAD,a0
         00000f00     fff6  
     327 00000f10     ca00          jrz     zoptout
         00000f20     013d  
     328 00000f30     0b40          cmpi    MODE_HEADHELD,a0
         00000f40     ffec  
     329 00000f50     ca00          jrz     zoptout
         00000f60     0139  
     330                    
     331 00000f70     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         00000f80     0cd0  
     332 00000f90     07a0          move    @PCNT,a0,L
         00000fa0 00000000! 
     333 00000fc0     45c0          sub     a14,a0
     334 00000fd0     0b40          cmpi    2*60,a0
         00000fe0     ff87  
     335 00000ff0     c507          jrge    zoptok2
     336                    
     337                    ;This head grab is too close (in terms of time) to most recent grab
     338                            .ref    und_3_fake_hold_anim
     339 00001000     09e0          movi    und_3_fake_hold_anim,a0
         00001010 00000000! 
     340 00001030     0d5f          calla   change_anim1a
         00001040 00000000! 
     341 00001060     0960          rets
     342                    
     343 00001070           zoptok2
     344 00001070     b5a1          move    *a13(CLOSEST_XDIST),a1
         00001080     0370  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     345 00001090     0b41          cmpi    85,a1
         000010a0     ffaa  
     346 000010b0     c707          jrgt    zoptstd_grab
     347                    
     348 000010c0     09e0          movi    und_3_head_hold2_anim,a0
         000010d0 00000000! 
     349 000010f0     0d5f          calla   change_anim1a
         00001100 00000000! 
     350 00001120     0960          rets
     351                    
     352 00001130           zoptstd_grab
     353 00001130     09e0          movi    und_3_head_hold_anim,a0
         00001140 00000000! 
     354 00001160     0d5f          calla   change_anim1a
         00001170 00000000! 
     355 00001190     0960          rets
     356                    
     357                    *******************************************************************************
     358                    
     359 000011a0           zoptbutton_hold
     360                    
     361 000011a0     b5a0          move    *a13(BUT_VAL_UP),a0
         000011b0     0bb0  
     362 000011c0     1fe0          btst    PLAYER_PUNCH_BIT,a0
     363 000011d0     ca0c          jrz     zoptno_punch
     364                    
     365 000011e0     b5a0          move    *a13(PLYRNUM),a0
         000011f0     0580  
     366 00001200     0d5f          calla   get_punch_dtime
         00001210 00000000! 
     367 00001230     0b40          cmpi    110,a0                  ;> min?
         00001240     ff91  
     368 00001250     c404          jrlt    zoptno_punch
     369                    
     370 00001260     0d3f          callr   scrt_spirit
         00001270     0004  
     371 00001280     0de0          setc
     372 00001290     0960          rets
     373                    
     374 000012a0           zoptno_punch
     375 000012a0     0320          clrc
     376 000012b0     0960          rets
     377                    
     378 000012c0           scrt_spirit
     379 000012c0     b5a0          move    *a13(PLYRMODE),a0
         000012d0     05c0  
     380 000012e0     0b40          cmpi    MODE_HEADHELD,a0
         000012f0     ffec  
     381 00001300     ca00          jrz     zoptout
         00001310     00fe  
     382 00001320     0b40          cmpi    MODE_HEADHOLD,a0
         00001330     ffef  
     383 00001340     ca00          jrz     zoptout
         00001350     00fa  
     384                    ;       cmpi    MODE_RUNNING,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

     385                    ;       jrz     zoptout
     386                    
     387 00001360     b5a0          move    *a13(ANIMODE),a0
         00001370     0660  
     388 00001380     1fa0          btst    MODE_UNINT_BIT,a0
     389 00001390     cb00          jrnz    zoptout
         000013a0     00f5  
     390                    
     391                    ;Don't do it when he is on ground
     392 000013b0     0d5f          calla   get_opp_plyrmode
         000013c0 00000000! 
     393 000013e0     0b40          cmpi    MODE_ONGROUND,a0
         000013f0     fffb  
     394 00001400     ca00          jrz     zoptout
         00001410     00ee  
     395                    ;       cmpi    MODE_DEAD,a0
     396                    ;       jrz     zoptout
     397                    
     398 00001420     b5a0          move    *a13(PLYRMODE),a0
         00001430     05c0  
     399 00001440     0b40          cmpi    MODE_RUNNING,a0
         00001450     fffe  
     400 00001460     ca21          jrz     zoptleapbrk
     401                    
     402 00001470     09e0          movi    und_neckbreaker2_anim,a0
         00001480 00000000! 
     403 000014a0     0d5f          calla   change_anim1a
         000014b0 00000000! 
     404                    
     405 000014d0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
     406                    
     407 00001670     0960          rets
     408                    
     409 00001680           zoptleapbrk
     410                    ;Sliding neck breaker
     411 00001680     09e0          movi    und_neckbreaker3_anim,a0
         00001690 00000000! 
     412 000016b0     0d5f          calla   change_anim1a
         000016c0 00000000! 
     413                    
     414 000016e0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
     415                    
     416 00001880     0960          rets
     417                    
     418                    
     419                    *******************************************************************************
     420                    
     421 00001890           zoptgrab_fling2
     422 00001890     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     423 000018b0     800a          .word   8000h | 10              ;max
     424 000018c0 00001930'         .long   zoptscrt_grabfling2
     425                    
     426 000018e0           zopthip_toss2
     427 000018e0     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     428 00001900     800a          .word   8000h | 10              ;max
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     429 00001910 00001930'         .long   zoptscrt_grabfling2
     430                    
     431 00001930           zoptscrt_grabfling2
     432 00001930     b5a0          move    *a13(ANIMODE),a0
         00001940     0660  
     433 00001950     1fa0          btst    MODE_UNINT_BIT,a0
     434 00001960     cb00          jrnz    zoptout
         00001970     0098  
     435                    
     436                    ;If opponent is running, do a hip toss
     437 00001980     0d5f          calla   get_opp_plyrmode
         00001990 00000000! 
     438 000019b0     0b40          cmpi    MODE_BOUNCING,a0
         000019c0     fffa  
     439 000019d0     ca1b          jrz     zoptyes
     440 000019e0     0b40          cmpi    MODE_RUNNING,a0
         000019f0     fffe  
     441 00001a00     ca18          jrz     zoptyes
     442 00001a10     0960          rets
     443                    
     444                    *******************************************************************************
     445                    
     446 00001a20           zoptgrab_fling
     447                    ;       .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     448                    ;       .word   8000h | 10              ;max
     449                    ;       .long   zoptscrt_grabfling
     450                    
     451 00001a20     0040          .word   B_SPUNCH,               J_ALL
     452 00001a40     0004          .word   J_AWAY,         J_REAL_LR
     453 00001a60     0004          .word   J_AWAY,         J_REAL_LR
     454 00001a80     8020          .word   8000h | 32              ;max
     455 00001a90 00001ab0'         .long   zoptscrt_grabfling
     456                    
     457 00001ab0           zoptscrt_grabfling
     458 00001ab0     b5a0          move    *a13(ANIMODE),a0
         00001ac0     0660  
     459 00001ad0     1fa0          btst    MODE_UNINT_BIT,a0
     460 00001ae0     cb00          jrnz    zoptout
         00001af0     0080  
     461                    
     462                    ;If opponent is running, do a hip toss
     463 00001b00     0d5f          calla   get_opp_plyrmode
         00001b10 00000000! 
     464 00001b30     0b40          cmpi    MODE_BOUNCING,a0
         00001b40     fffa  
     465 00001b50     ca03          jrz     zoptyes
     466 00001b60     0b40          cmpi    MODE_RUNNING,a0
         00001b70     fffe  
     467 00001b80     cb36          jrnz    zoptnope
     468 00001b90           zoptyes
     469 00001b90                   FACE24  und,snapmirror_anim
     470 00001c30     0d5f          calla   change_anim1a
         00001c40 00000000! 
     471                    
     472 00001c60     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     473 00001c70     b20d          move    a0,*a13(ATTACH_PROC),L
         00001c80     03e0  
     474 00001c90                   SETMODE NORMAL
     475                    
     476 00001d40                   WRSND   W_TAKER,GRABFLING_T1,PUNCH_T2
     477 00001ee0     0960          rets
     478                    
     479 00001ef0           zoptnope
     480                    ;Don't fling when he is on ground
     481 00001ef0     0d5f          calla   get_opp_plyrmode
         00001f00 00000000! 
     482 00001f20     0b40          cmpi    MODE_HEADHELD,a0
         00001f30     ffec  
     483 00001f40     ca3c          jrz     zoptck2
     484 00001f50     0b40          cmpi    MODE_ONGROUND,a0
         00001f60     fffb  
     485 00001f70     ca38          jrz     zoptout
     486 00001f80     0b40          cmpi    MODE_DEAD,a0
         00001f90     fff6  
     487 00001fa0     ca35          jrz     zoptout
     488 00001fb0           zoptdoit0
     489 00001fb0     5600          clr     a0
     490 00001fc0     b20d          move    a0,*a13(ATTACH_PROC),L
         00001fd0     03e0  
     491                    
     492 00001fe0                   SETMODE NORMAL
     493                    
     494                    ;       move    *a13(LAST_FLING_ATTEMPT),a14,L
     495                    ;       move    @PCNT,a0,L
     496                    ;       sub     a14,a0
     497                    ;       cmpi    3*60,a0
     498                    ;       jrge    zoptok2a
     499                    ;
     500                    ;;This head grab is too close (in terms of time) to most recent grab
     501                    ;       FACE24  und,slap_anim
     502                    ;       calla   change_anim1a
     503                    ;
     504                    ;       WRSND   W_TAKER,SPUNCH_T1,SPUNCH_T2
     505                    ;       rets
     506                    ;
     507                    ;zoptok2a
     508                    ;       move    @PCNT,a14,L                     ;use 32-bit PCNT!
     509                    ;       move    a14,*a13(LAST_FLING_ATTEMPT),L
     510                    
     511 00002090                   FACE24  und,grabfling_anim
     512 00002130     0d5f          calla   change_anim1a
         00002140 00000000! 
     513                    
     514 00002160                   WRSND   W_TAKER,GRABFLING_T1,PUNCH_T2
     515 00002300           zoptout
     516 00002300     0960          rets
     517 00002310           zoptck2
     518 00002310     b5a0          move    *a13(CLOSEST_NUM),a0
         00002320     03a0  
     519 00002330                   X32     a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     520 00002340     0b20          addi    process_ptrs,a0
         00002350 00000000! 
     521 00002370     8600          move    *a0,a0,L
     522 00002380     b400          move    *a0(ANIMODE),a0
         00002390     0660  
     523 000023a0     1f40          btst    MODE_NOGRAVITY_BIT,a0
     524 000023b0     cbbf          jrnz    zoptdoit0
     525 000023c0     0960          rets
     526                            
     527                            .if NUM_TAKER_FINISHES
     528                    
     529                    ******************************************************************************
     530                    *
     531                    * Shake world - shakes the world around for takers finish move
     532                    *
     533 000023d0            SUBRP  shake_world
     534 000023d0     07a8          move    @WORLDTLX,a8,L
         000023e0 00000000! 
     535 00002400     07a9          move    @WORLDTLY,a9,L
         00002410 00000000! 
     536 00002430           iuwysw_loop
     537 00002430     1880          movk    4,a0
     538 00002440     0d5f          calla   RNDRNG0
         00002450 00000000! 
     539 00002470     184b          movk    2,a11
     540 00002480     440b          sub     a0,a11
     541 00002490     260b          sll     16,a11
     542 000024a0     4d0a          move    a8,a10
     543 000024b0     416a          add     a11,a10
     544 000024c0     078a          move    a10,@WORLDTLX,L
         000024d0 00000000! 
     545                    
     546 000024f0     1880          movk    4,a0
     547 00002500     0d5f          calla   RNDRNG0
         00002510 00000000! 
     548 00002530     184b          movk    2,a11
     549 00002540     440b          sub     a0,a11
     550 00002550     260b          sll     16,a11
     551 00002560     4d2a          move    a9,a10
     552 00002570     416a          add     a11,a10
     553 00002580     078a          move    a10,@WORLDTLY,L
         00002590 00000000! 
     554                    
     555 000025b0     0d5f          calla   BGND_UD1
         000025c0 00000000! 
     556                    
     557 000025e0                   SLEEPK  3
     558 00002620     c0e0          jruc    iuwysw_loop
     559                            
     560 00002630                   DIE
     561                    
     562                    ******************************************************************************
     563                    *
     564                    * Adjusts the view to midpoint between taker and the coffin
     565                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     566 00002660            SUBRP  adjust_view
     567 00002660     07ae          move    @WORLDTLX,a14,L
         00002670 00000000! 
     568                    
     569                            ; If we are positioned within 100 pixels to the left of the right
     570                            ; edge of the ring don't bother scrolling any further.
     571 00002690     4dc0          move    a14,a0
     572 000026a0     2e00          srl     16,a0
     573 000026b0     0b40          cmpi    1322-100,a0
         000026c0     fb39  
     574 000026d0     c51d          jrge    izqgav_exit
     575                    
     576                            ; Get the midpoint between taker and the right edge of ring
     577 000026e0     b70e          move    *a8(OBJ_XPOS),a14,L
         000026f0     0100  
     578 00002700     0b2e          addi    [1200,0],a14
         00002710 04b00000  
     579 00002730     2fee          srl     1,a14
     580                    
     581                            ; Get the difference between taker and the midpoint
     582 00002740     b700          move    *a8(OBJ_XPOS),a0,L
         00002750     0100  
     583 00002760     440e          sub     a0,a14
     584                    
     585                            ; Divide by 32
     586 00002770     2b6e          sra     5,a14
     587                    
     588                            ; Do the move
     589 00002780     09c9          movi    32,a9
         00002790     0020  
     590 000027a0           izqgmv_loop
     591 000027a0     07a0          move    @WORLDTLX,a0,L
         000027b0 00000000! 
     592 000027d0     41c0          add     a14,a0
     593 000027e0     0780          move    a0,@WORLDTLX,L
         000027f0 00000000! 
     594 00002810                   PUSHP   a14
     595 00002820                   SLEEPK  1
     596 00002860     0d5f          calla   BGND_UD1
         00002870 00000000! 
     597 00002890                   PULLP   a14
     598 000028a0     3e29          dsjs    a9,izqgmv_loop
     599                    
     600 000028b0           izqgav_exit
     601                            ; Now start the world shakin' around
     602 000028b0                   CREATE  FIREWRK_PID,shake_world
     603                    
     604 00002930                   RETP
     605                    
     606                    
     607                    ******************************************************************************
     608 00002960            SUBRP  und_finish_move1
     609                    
     610              0035  zimwTIMEOUT     .equ    TSEC
     611                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     612                            ; Set up the globals used to syncronize everythins
     613 00002960     57ce          clr             a14
     614 00002970     058e          move            a14,@in_finish_move
         00002980 00000000! 
     615 000029a0     058e          move            a14,@close_the_door
         000029b0 00000000! 
     616 000029d0     058e          move            a14,@guy_up
         000029e0 00000000! 
     617 00002a00     058e          move            a14,@guy_in
         00002a10 00000000! 
     618                    
     619                            ; Now wait on the correct buttons -n- sticks
     620 00002a30           zimwreset
     621 00002a30     576b          clr             a11
     622 00002a40                   SLEEPK          1
     623 00002a80                   WAITSWITCH_DWN  J_UP,0,zimwreset
     624 00002be0     09cb          movi            zimwTIMEOUT,a11
         00002bf0     0035  
     625 00002c00                   WAITSWITCH_DWN  J_DOWN,0,zimwreset
     626 00002d60                   WAITSWITCH_DWN  B_PUNCH,J_ALL,zimwreset
     627                    
     628                    
     629                            ; Make sure the guy we are doin' this on is dead
     630 00002ec0                   PUSH            a13
     631 00002ed0     4d0d          move            a8,a13
     632 00002ee0     0d5f          calla           get_opp_plyrmode
         00002ef0 00000000! 
     633 00002f10                   PULL            a13
     634 00002f20     0b40          cmpi            MODE_DEAD,a0
         00002f30     fff6  
     635 00002f40     cbae          jrnz            zimwreset
     636                    
     637                            ; Check to make sure this is my 2nd pin attempt
     638 00002f50     05a0          move            @p1pins,a0
         00002f60 00000000! 
     639 00002f80     b50e          move            *a8(PLYR_SIDE),a14
         00002f90     05b0  
     640 00002fa0     ca03          jrz             zimwis_p1
     641 00002fb0     05a0          move            @p2pins,a0
         00002fc0 00000000! 
     642 00002fe0           zimwis_p1
     643 00002fe0     0b40          cmpi            2,a0
         00002ff0     fffd  
     644 00003000     c4a2          jrlt            zimwreset
     645                    
     646                            ; Don't allow the move if I've been turned into a drone
     647                            ; by the autopin goop
     648 00003010     b50e          move            *a8(PLYR_TYPE),a14
         00003020     05a0  
     649 00003030     cb48          jrnz            zimwfi1_exit
     650                    
     651                            ; Don't allow the move if I'm outside the ring
     652 00003040     b50e          move            *a8(RING_TIME),a14
         00003050     0c40  
     653 00003060     ce45          jrn             zimwfi1_exit
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

     654                    
     655                            ; Don't allow the move if I've already pinned the guy
     656 00003070     b50e          move            *a8(STATUS_FLAGS),a14
         00003080     0b50  
     657 00003090     1fce          btst            B_DID_PIN,a14
     658 000030a0     cb41          jrnz            zimwfi1_exit
     659                    
     660                            ; Set up globals used for this animation
     661 000030b0     b70e          move            *a8(WHOIHIT),a14,L
         000030c0     0500  
     662 000030d0     078e          move            a14,@dead_wrestler,L
         000030e0 00000000! 
     663                    
     664                            ; Don't allow move if dead guy is to right of center ring + 100 pix
     665 00003100     b5ce          move            *a14(OBJ_XPOSINT),a14
         00003110     0110  
     666 00003120     0b4e          cmpi            RING_X_CENTER+100,a14
         00003130     fb69  
     667 00003140     c737          jrgt            zimwfi1_exit
     668                    
     669                            ; Don't allow move if taker is to right of center ring + 100 pix
     670 00003150     b50e          move            *a8(OBJ_XPOSINT),a14
         00003160     0110  
     671 00003170     0b4e          cmpi            RING_X_CENTER+100,a14
         00003180     fb69  
     672 00003190     c732          jrgt            zimwfi1_exit
     673                    
     674                            ; OK - we made it - tell all who care we are going to
     675                            ; do a finishing move.  This also shuts down the scroller.
     676 000031a0     182e          movk            1,a14
     677 000031b0     058e          move            a14,@in_finish_move
         000031c0 00000000! 
     678                    
     679                            ; clear victim's DO_BUCKOFF bit and set his NO_BUCKOFF bit
     680 000031e0     07a0          move            @dead_wrestler,a0,L
         000031f0 00000000! 
     681 00003210     b60e          move            *a0(STATUS_FLAGS),a14,L
         00003220     0b50  
     682 00003230     0b8e          andni           M_DO_BUCKOFF,a14
         00003240 00001000  
     683 00003260     0bae          ori             M_NO_BUCKOFF,a14
         00003270 00002000  
     684 00003290     b3c0          move            a14,*a0(STATUS_FLAGS),L
         000032a0     0b50  
     685                    
     686                            ; Move the view to 1/2 way between taker and the coffin
     687 000032b0                   JSRP            adjust_view
     688                    
     689                            ; Let the dust settle before we start our animation
     690 00003320                   SLEEPK          15
     691                    
     692                            ; Start the animation for the finish move
     693 00003360     09ee          movi            und_2_raise_dead_anim,a14
         00003370 00000000! 
     694 00003390     b3c8          move            a14,*a8(SPECIAL_MOVE_ADDR),L
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

         000033a0     0930  
     695                    
     696                            ; Wait here until finish move is complete
     697 000033b0           zimwfdone_wait
     698 000033b0                   SLEEPK          5
     699 000033f0     05ae          move            @finish_completed,a14
         00003400 00000000! 
     700 00003420     caf8          jrz             zimwfdone_wait
     701                    
     702                            ; Tell everbody that cares that the finish move is done
     703 00003430     57ce          clr             a14
     704 00003440     058e          move            a14,@in_finish_move
         00003450 00000000! 
     705                    
     706                            ; Kill off shaker process
     707 00003470     09c0          movi            FIREWRK_PID,a0
         00003480     01a0  
     708 00003490     0d5f          calla           KIL1C
         000034a0 00000000! 
     709                    
     710 000034c0           zimwfi1_exit
     711 000034c0                   DIE
     712                            .endif
     713                            
     714                    
     715                            .if NUM_TAKER_FINISHES > 1
     716                    ******************************************************************************
     717                     SUBRP  und_finish_move2
     718                    
     719                    zkpbTIMEOUT     .equ    TSEC
     720                    
     721                    zkpbend_wait
     722                            SLEEP           TSEC/4
     723                            move            @p1rounds,a0                    ; Get player 1 rounds
     724                            move            @p2rounds,a1                    ; Get player 2 rounds
     725                            or              a1,a0                           ; Put em together
     726                            cmpi            2,a0                            ; Anybody got 2?
     727                            jrlt            zkpbend_wait                    ; br = no
     728                    
     729                    zkpbreset
     730                            clr             a11
     731                            move            a11,@in_finish_move
     732                            SLEEPK          1
     733                            WAITSWITCH_DWN  J_UP,0,zkpbreset
     734                            movi            zkpbTIMEOUT,a11
     735                            move            a11,@in_finish_move
     736                            WAITSWITCH_DWN  J_UP,0,zkpbreset
     737                            WAITSWITCH_DWN  J_RIGHT,J_UP,zkpbreset
     738                            WAITSWITCH_DWN  J_RIGHT,J_UP,zkpbreset
     739                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,zkpbreset
     740                    
     741                            movi            und_finish2_move,a0
     742                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     743                            DIE
     744                            .endif
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

     745                    
     746                    *******************************************************************************
     747                    *
     748 000034f0           und_hdhold_neckbrk
     749                    
     750              003c  bihwTIMEOUT     .equ    60
     751                    
     752 000034f0           bihwlp0
     753 000034f0                   SLEEPK  1
     754 00003530           bihwlp
     755 00003530     b500          move    *a8(PLYRMODE),a0
         00003540     05c0  
     756 00003550     0b40          cmpi    MODE_HEADHOLD,a0
         00003560     ffef  
     757 00003570     ca03          jrz     bihwcont
     758 00003580     0b40          cmpi    MODE_HEADHELD,a0
         00003590     ffec  
     759 000035a0     cbf4          jrnz    bihwlp0
     760 000035b0           bihwcont
     761 000035b0     576b          clr     a11
     762                    
     763                    ;       WAITSWITCH_DWN  J_AWAY,0,bihwlp
     764 000035c0                   WAITSWITCH_DWN  J_TOWARD,0,bihwlp
     765                    
     766 00003720     09cb          movi    bihwTIMEOUT,a11
         00003730     003c  
     767                    
     768 00003740                   WAITSWITCH_DWN  J_TOWARD,0,bihwlp
     769 000038a0                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,bihwlp
     770                    
     771                    ;       move    *a8(ANIBASE),a0,L
     772                    ;       cmpi    und_sliding_choke_anim,a0
     773                    ;       jrz     bihwlp0
     774                    
     775 00003a00     b500          move    *a8(PLYRMODE),a0
         00003a10     05c0  
     776 00003a20     0b40          cmpi    MODE_HEADHOLD,a0
         00003a30     ffef  
     777 00003a40     ca1c          jrz     bihwslam
     778 00003a50     0b40          cmpi    MODE_HEADHELD,a0
         00003a60     ffec  
     779 00003a70     cba7          jrnz    bihwlp0
     780 00003a80     b50e          move    *a8(I_WILL_DIE),A14
         00003a90     0b30  
     781 00003aa0     cba4          jrnz    bihwlp0
     782                    
     783 00003ab0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003ac0     0ae0  
     784 00003ad0     cba1          jrnz    bihwlp0                         ;ignore
     785                    
     786 00003ae0     0d5f          CALLA   DO_REVERSAL
         00003af0 00000000! 
     787 00003b10     0d5f          CALLA   DO_REVERSAL_MESS
         00003b20 00000000! 
     788                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     789                            ;target WHOHITME -- don't hit anyone else
     790 00003b40                   SMRTTGT a8,WHOHITME
     791                    
     792                            ;immobilize WHOHITME
     793 00003be0     b700          move    *a8(WHOHITME),a0,L
         00003bf0     04e0  
     794 00003c00     c018          jruc    bihwis_reversal
     795                    
     796 00003c10           bihwslam
     797 00003c10     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003c20     0ae0  
     798 00003c30     cb8b          jrnz    bihwlp0                         ;ignore
     799                    
     800 00003c40     182a          movk    1,a10
     801 00003c50                   CREATE  MESSAGE_PID,BONUS_MESS
     802                    
     803                            ;target WHOIHIT -- don't hit anyone else
     804 00003cd0                   SMRTTGT a8,WHOIHIT
     805                    
     806                            ;immobilize WHOIHIT
     807 00003d70     b700          move    *a8(WHOIHIT),a0,L
         00003d80     0500  
     808                    
     809 00003d90           bihwis_reversal
     810 00003d90     19ee          movk    15,a14
     811 00003da0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00003db0     0ae0  
     812                    
     813 00003dc0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003dd0 00000000! 
     814                    
     815 00003df0     09ee          movi    und_neckbreaker_anim,a14
         00003e00 00000000! 
     816 00003e20     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003e30     0930  
     817                    
     818                    ;Use this bam grunt
     819 00003e40                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     820                    
     821 00003fe0                   SLEEPK  20
     822                    
     823 00004020     c000          jruc    bihwlp
         00004030     ff4f  
     824                    
     825                    *******************************************************************************
     826                    *
     827 00004040           und_hdhold_faceslam
     828                    
     829              003c  hqidTIMEOUT     .equ    60
     830                    
     831 00004040           hqidlp0
     832 00004040                   SLEEPK  1
     833 00004080           hqidlp
     834 00004080     b500          move    *a8(PLYRMODE),a0
         00004090     05c0  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     835 000040a0     0b40          cmpi    MODE_HEADHOLD,a0
         000040b0     ffef  
     836 000040c0     ca06          jrz     hqidcont
     837 000040d0     0b40          cmpi    MODE_CHOKEHOLD,a0
         000040e0     ffe7  
     838 000040f0     ca03          jrz     hqidcont
     839 00004100     0b40          cmpi    MODE_HEADHELD,a0
         00004110     ffec  
     840 00004120     cbf1          jrnz    hqidlp0
     841 00004130           hqidcont
     842 00004130     576b          clr     a11
     843                    
     844 00004140                   WAITSWITCH_DWN  J_DOWN,0,hqidlp
     845                    
     846 000042a0     09cb          movi    hqidTIMEOUT,a11
         000042b0     003c  
     847                    
     848 000042c0                   WAITSWITCH_DWN  J_DOWN,0,hqidlp
     849 00004420                   WAITSWITCH_DWN  B_KICK,J_ALL,hqidlp
     850                    
     851 00004580     b500          move    *a8(PLYRMODE),a0
         00004590     05c0  
     852 000045a0     0b40          cmpi    MODE_HEADHOLD,a0
         000045b0     ffef  
     853 000045c0     ca1f          jrz     hqidslam
     854 000045d0     0b40          cmpi    MODE_CHOKEHOLD,a0
         000045e0     ffe7  
     855 000045f0     ca1c          jrz     hqidslam
     856 00004600     0b40          cmpi    MODE_HEADHELD,a0
         00004610     ffec  
     857 00004620     cba1          jrnz    hqidlp0
     858 00004630     b50e          move    *a8(I_WILL_DIE),A14
         00004640     0b30  
     859 00004650     cb9e          jrnz    hqidlp0
     860                    
     861 00004660     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004670     0ae0  
     862 00004680     cb9b          jrnz    hqidlp0                         ;ignore
     863                    
     864 00004690     0d5f          CALLA   DO_REVERSAL
         000046a0 00000000! 
     865 000046c0     0d5f          CALLA   DO_REVERSAL_MESS
         000046d0 00000000! 
     866                    
     867                            ;target WHOHITME -- don't hit anyone else
     868 000046f0                   SMRTTGT a8,WHOHITME
     869                    
     870                            ;immobilize WHOHITME
     871 00004790     b700          move    *a8(WHOHITME),a0,L
         000047a0     04e0  
     872 000047b0     c018          jruc    hqidis_reversal
     873                    
     874 000047c0           hqidslam
     875 000047c0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000047d0     0ae0  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

     876 000047e0     cb85          jrnz    hqidlp0                         ;ignore
     877                    
     878 000047f0     182a          movk    1,a10
     879 00004800                   CREATE  MESSAGE_PID,BONUS_MESS
     880                    
     881                            ;target WHOIHIT -- don't hit anyone else
     882 00004880                   SMRTTGT a8,WHOIHIT
     883                    
     884                            ;immobilize WHOIHIT
     885 00004920     b700          move    *a8(WHOIHIT),a0,L
         00004930     0500  
     886                    
     887 00004940           hqidis_reversal
     888 00004940     19ee          movk    15,a14
     889 00004950     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00004960     0ae0  
     890                    
     891 00004970     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004980 00000000! 
     892                    
     893                    ;       movi    und_neckbreaker_anim,a14
     894 000049a0     09ee          movi    und_choke_face_slam_anim,a14
         000049b0 00000000! 
     895 000049d0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000049e0     0930  
     896                    
     897                    ;Use this bam grunt
     898 000049f0                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     899                    
     900 00004b90                   SLEEPK  20
     901                    
     902 00004bd0     c000          jruc    hqidlp
         00004be0     ff49  
     903                    
     904                    *******************************************************************************
     905                    *
     906 00004bf0           und_hdhold_pile
     907                    
     908              003c  gekzTIMEOUT     .equ    60
     909                    
     910 00004bf0           gekzlp0
     911 00004bf0                   SLEEPK  1
     912 00004c30           gekzlp
     913 00004c30     b500          move    *a8(PLYRMODE),a0
         00004c40     05c0  
     914 00004c50     0b40          cmpi    MODE_HEADHOLD,a0
         00004c60     ffef  
     915 00004c70     ca03          jrz     gekzcont
     916 00004c80     0b40          cmpi    MODE_HEADHELD,a0
         00004c90     ffec  
     917 00004ca0     cbf4          jrnz    gekzlp0
     918 00004cb0           gekzcont
     919 00004cb0     576b          clr     a11
     920                    
     921                    ;       WAITSWITCH_DWN  J_UP,0,gekzlp
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     922 00004cc0                   WAITSWITCH_DWN  J_DOWN,0,gekzlp
     923                    
     924 00004e20     09cb          movi    gekzTIMEOUT,a11
         00004e30     003c  
     925                    
     926 00004e40                   WAITSWITCH_DWN  J_DOWN,0,gekzlp
     927 00004fa0                   WAITSWITCH_DWN  B_SKICK,J_ALL,gekzlp
     928                    
     929                    ;       move    *a8(ANIBASE),a0,L
     930                    ;       cmpi    und_sliding_choke_anim,a0
     931                    ;       jrz     gekzlp0
     932                    
     933 00005100     b500          move    *a8(PLYRMODE),a0
         00005110     05c0  
     934 00005120     0b40          cmpi    MODE_HEADHOLD,a0
         00005130     ffef  
     935 00005140     ca1c          jrz     gekzslam
     936 00005150     0b40          cmpi    MODE_HEADHELD,a0
         00005160     ffec  
     937 00005170     cba7          jrnz    gekzlp0
     938 00005180     b50e          move    *a8(I_WILL_DIE),A14
         00005190     0b30  
     939 000051a0     cba4          jrnz    gekzlp0
     940                    
     941 000051b0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000051c0     0ae0  
     942 000051d0     cba1          jrnz    gekzlp0                         ;ignore
     943                    
     944 000051e0     0d5f          CALLA   DO_REVERSAL
         000051f0 00000000! 
     945 00005210     0d5f          CALLA   DO_REVERSAL_MESS
         00005220 00000000! 
     946                    
     947                            ;target WHOHITME -- don't hit anyone else
     948 00005240                   SMRTTGT a8,WHOHITME
     949                    
     950                            ;target WHOHITME
     951 000052e0     b700          move    *a8(WHOHITME),a0,L
         000052f0     04e0  
     952 00005300     c018          jruc    gekzis_reversal
     953                    
     954 00005310           gekzslam
     955 00005310     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00005320     0ae0  
     956 00005330     cb8b          jrnz    gekzlp0                         ;ignore
     957                    
     958 00005340     1baa          movk    29,a10
     959 00005350                   CREATE  MESSAGE_PID,BONUS_MESS
     960                    
     961                            ;target WHOIHIT -- don't hit anyone else
     962 000053d0                   SMRTTGT a8,WHOIHIT
     963                    
     964                            ;target WHOIHIT
     965 00005470     b700          move    *a8(WHOIHIT),a0,L
         00005480     0500  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     966                    
     967 00005490           gekzis_reversal
     968 00005490     19ee          movk    15,a14
     969 000054a0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000054b0     0ae0  
     970                    
     971 000054c0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000054d0 00000000! 
     972 000054f0     09ee          movi    und_pile_anim,a14
         00005500 00000000! 
     973 00005520     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005530     0930  
     974                    
     975                    ;Use this bam grunt
     976 00005540                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     977                    
     978 000056e0                   SLEEPK  20
     979                    
     980 00005720     c000          jruc    gekzlp
         00005730     ff4f  
     981                    
     982                    *******************************************************************************
     983                    *
     984 00005740           und_choke_slide
     985                    
     986              003c  xsqyTIMEOUT     .equ    60
     987                    
     988 00005740           xsqylp0
     989 00005740                   SLEEPK  1
     990 00005780           xsqylp
     991 00005780     576b          clr     a11
     992                    
     993 00005790                   WAITSWITCH_DWN  J_DOWN,0,xsqylp
     994                    
     995 000058f0     09cb          movi    xsqyTIMEOUT,a11
         00005900     003c  
     996                    
     997                    ;       WAITSWITCH_DWN  J_DOWN_TOWARD,0,xsqylp
     998                    
     999 00005910                   WAITSWITCH_DWN  J_TOWARD,J_UP|J_DOWN,xsqylp
    1000 00005a70                   WAITSWITCH_DWN  B_PUNCH,J_ALL,xsqylp
    1001                    
    1002 00005bd0     b500          move    *a8(ANIMODE),a0
         00005be0     0660  
    1003 00005bf0     1fa0          btst    MODE_UNINT_BIT,a0
    1004 00005c00     cbb3          jrnz    xsqylp0
    1005                    
    1006 00005c10     b500          move    *a8(PLYRMODE),a0
         00005c20     05c0  
    1007 00005c30     0b40          cmpi    MODE_ONTURNBKL,a0
         00005c40     fff9  
    1008 00005c50     caae          jrz     xsqylp0
    1009 00005c60     0b40          cmpi    MODE_RUNNING,a0
         00005c70     fffe  
    1010 00005c80     caab          jrz     xsqylp0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

    1011 00005c90     b50e          move    *a8(I_WILL_DIE),A14
         00005ca0     0b30  
    1012 00005cb0     cba8          jrnz    xsqylp0
    1013                    
    1014                    ;Don't do it when he is on ground
    1015 00005cc0                   SWAP    a8,a13
    1016 00005cf0     0d5f          calla   get_opp_plyrmode
         00005d00 00000000! 
    1017 00005d20                   SWAP    a8,a13
    1018 00005d50     0b40          cmpi    MODE_ONGROUND,a0
         00005d60     fffb  
    1019 00005d70     ca9c          jrz     xsqylp0
    1020 00005d80     0b40          cmpi    MODE_DEAD,a0
         00005d90     fff6  
    1021 00005da0     ca99          jrz     xsqylp0
    1022 00005db0     0b40          cmpi    MODE_HEADHELD,a0
         00005dc0     ffec  
    1023 00005dd0     ca96          jrz     xsqylp0
    1024 00005de0     0b40          cmpi    MODE_CHOKING,a0
         00005df0     ffe6  
    1025 00005e00     ca93          jrz     xsqylp0
    1026                    
    1027 00005e10     09ee          movi    und_sliding_choke_anim,a14
         00005e20 00000000! 
    1028 00005e40     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005e50     0930  
    1029                    
    1030 00005e60                   SLEEPK  20
    1031                    
    1032 00005ea0     c08d          jruc    xsqylp
    1033                    
    1034                    *******************************************************************************
    1035                    *
    1036 00005eb0           und_spirit_push
    1037                    
    1038              003c  mxbtTIMEOUT     .equ    60
    1039                    
    1040 00005eb0           mxbtlp0
    1041 00005eb0                   SLEEPK  1
    1042 00005ef0           mxbtlp
    1043 00005ef0     b500          move    *a8(PLYRMODE),a0
         00005f00     05c0  
    1044 00005f10     0b40          cmpi    MODE_HEADHOLD,a0
         00005f20     ffef  
    1045 00005f30     caf7          jrz     mxbtlp0
    1046 00005f40     0b40          cmpi    MODE_HEADHELD,a0
         00005f50     ffec  
    1047 00005f60     caf4          jrz     mxbtlp0
    1048                    
    1049 00005f70     576b          clr     a11
    1050                    
    1051 00005f80                   WAITSWITCH_DWN  J_DOWN,0,mxbtlp
    1052                    
    1053 000060e0     09cb          movi    mxbtTIMEOUT,a11
         000060f0     003c  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1054                    
    1055 00006100                   WAITSWITCH_DWN  J_TOWARD,J_UP|J_DOWN,mxbtlp
    1056 00006260                   WAITSWITCH_DWN  B_KICK,J_ALL,mxbtlp
    1057                    
    1058 000063c0     b500          move    *a8(ANIMODE),a0
         000063d0     0660  
    1059 000063e0     1fa0          btst    MODE_UNINT_BIT,a0
    1060 000063f0     cbab          jrnz    mxbtlp0
    1061                    
    1062 00006400     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00006410     0ae0  
    1063 00006420     cba8          jrnz    mxbtlp0                         ;ignore
    1064                        
    1065 00006430                   SWAP    a8,a13
    1066 00006460     0d5f          calla   get_opp_plyrmode
         00006470 00000000! 
    1067 00006490                   SWAP    a8,a13
    1068                    ;       cmpi    MODE_DEAD,a0
    1069                    ;       jrz     mxbtlp
    1070 000064c0     0b40          cmpi    MODE_CHOKING,a0
         000064d0     ffe6  
    1071 000064e0     caa0          jrz     mxbtlp
    1072 000064f0     0b40          cmpi    MODE_HEADHELD,a0
         00006500     ffec  
    1073 00006510     ca9d          jrz     mxbtlp
    1074                    ;       cmpi    MODE_ONGROUND,a0
    1075                    ;       jrz     mxbtlp
    1076                    
    1077 00006520     09ee          movi    und_spirit_push_anim,a14
         00006530 00000000! 
    1078 00006550     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00006560     0930  
    1079                    
    1080 00006570     5600          clr     a0
    1081 00006580     b008          move    a0,*a8(RUN_TIME)
         00006590     07b0  
    1082                    
    1083 000065a0                   SETMODE NORMAL
    1084                    
    1085 00006650                   SLEEP   3*60
    1086                    
    1087 000066a0     c084          jruc    mxbtlp
    1088                    
    1089                    
    1090                    *******************************************************************************
    1091                    *
    1092 000066b0           und_spirit_pull
    1093                    
    1094              003c  euocTIMEOUT     .equ    60
    1095                    
    1096 000066b0           euoclp0
    1097 000066b0                   SLEEPK  1
    1098 000066f0           euoclp
    1099 000066f0     b500          move    *a8(PLYRMODE),a0
         00006700     05c0  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

    1100 00006710     0b40          cmpi    MODE_HEADHOLD,a0
         00006720     ffef  
    1101 00006730     caf7          jrz     euoclp0
    1102 00006740     0b40          cmpi    MODE_HEADHELD,a0
         00006750     ffec  
    1103 00006760     caf4          jrz     euoclp0
    1104                    
    1105 00006770     576b          clr     a11
    1106                    
    1107 00006780                   WAITSWITCH_DWN  J_DOWN,0,euoclp
    1108                    
    1109 000068e0     09cb          movi    euocTIMEOUT,a11
         000068f0     003c  
    1110                    
    1111                    ;       WAITSWITCH_DWN  J_DOWN_TOWARD,0,euoclp
    1112                    
    1113 00006900                   WAITSWITCH_DWN  J_AWAY,J_UP|J_DOWN,euoclp
    1114 00006a60                   WAITSWITCH_DWN  B_KICK,J_ALL,euoclp
    1115                    
    1116 00006bc0     b500          move    *a8(ANIMODE),a0
         00006bd0     0660  
    1117 00006be0     1fa0          btst    MODE_UNINT_BIT,a0
    1118 00006bf0     cbab          jrnz    euoclp0
    1119                    
    1120 00006c00     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00006c10     0ae0  
    1121 00006c20     cba8          jrnz    euoclp0                         ;ignore
    1122                    
    1123 00006c30                   SWAP    a8,a13
    1124 00006c60     0d5f          calla   get_opp_plyrmode
         00006c70 00000000! 
    1125 00006c90                   SWAP    a8,a13
    1126                    ;       cmpi    MODE_DEAD,a0
    1127                    ;       jrz     euoclp
    1128 00006cc0     0b40          cmpi    MODE_CHOKING,a0
         00006cd0     ffe6  
    1129 00006ce0     caa0          jrz     euoclp
    1130 00006cf0     0b40          cmpi    MODE_HEADHELD,a0
         00006d00     ffec  
    1131 00006d10     ca9d          jrz     euoclp
    1132                    ;       cmpi    MODE_ONGROUND,a0
    1133                    ;       jrz     euoclp
    1134                    
    1135 00006d20     09ee          movi    und_spirit_pull_anim,a14
         00006d30 00000000! 
    1136 00006d50     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00006d60     0930  
    1137                    
    1138 00006d70     5600          clr     a0
    1139 00006d80     b008          move    a0,*a8(RUN_TIME)
         00006d90     07b0  
    1140                    
    1141 00006da0                   SETMODE NORMAL
    1142                    
    1143 00006e50                   SLEEP   3*60
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1144                    
    1145 00006ea0     c084          jruc    euoclp
    1146                    
    1147                    *******************************************************************************
    1148                    *
    1149 00006eb0           und_grab_toss_air
    1150                    
    1151              0028  andjTIMEOUT     .equ    40
    1152                    
    1153 00006eb0           andjlp0
    1154 00006eb0                   SLEEPK  1
    1155 00006ef0           andjlp
    1156 00006ef0     576b          clr     a11
    1157                    
    1158 00006f00                   WAITSWITCH_DWN  J_AWAY,0,andjlp
    1159                    
    1160 00007060     09cb          movi    andjTIMEOUT,a11
         00007070     0028  
    1161                    
    1162 00007080                   WAITSWITCH_DWN  J_AWAY,0,andjlp
    1163 000071e0                   WAITSWITCH_DWN  B_PUNCH,J_ALL,andjlp
    1164                    
    1165 00007340     b500          move    *a8(ANIMODE),a0
         00007350     0660  
    1166 00007360     1fa0          btst    MODE_UNINT_BIT,a0
    1167 00007370     cbb7          jrnz    andjlp
    1168                    
    1169 00007380     b500          move    *a8(PLYRMODE),a0
         00007390     05c0  
    1170 000073a0     0b40          cmpi    MODE_HEADHOLD,a0
         000073b0     ffef  
    1171 000073c0     caae          jreq    andjlp0
    1172                    
    1173                    ;Don't do it when he is on ground
    1174 000073d0                   SWAP    a8,a13
    1175 00007400     0d5f          calla   get_opp_plyrmode
         00007410 00000000! 
    1176 00007430                   SWAP    a8,a13
    1177                    ;Don't do it when he is on ground
    1178 00007460     0b40          cmpi    MODE_ONGROUND,a0
         00007470     fffb  
    1179 00007480     caa6          jrz     andjlp
    1180 00007490     0b40          cmpi    MODE_DEAD,a0
         000074a0     fff6  
    1181 000074b0     caa3          jrz     andjlp
    1182 000074c0     0b40          cmpi    MODE_INAIR,a0
         000074d0     fffd  
    1183 000074e0     ca1f          jrz     andjdoit2
    1184 000074f0     0b40          cmpi    MODE_INAIR2,a0
         00007500     ffea  
    1185 00007510     ca1c          jrz     andjdoit2
    1186                    
    1187 00007520     b500          move    *a8(CLOSEST_NUM),a0
         00007530     03a0  
    1188 00007540                   X32     a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1189 00007550     0b20          addi    process_ptrs,a0
         00007560 00000000! 
    1190 00007580     8600          move    *a0,a0,L
    1191 00007590     b400          move    *a0(ATTACK_TYPE),a0
         000075a0     05e0  
    1192 000075b0     0b40          cmpi    AT_LEAPING,a0
         000075c0     ffc6  
    1193 000075d0     ca10          jrz     andjdoit2
    1194                    
    1195 000075e0     b500          move    *a8(CLOSEST_DIST),a0
         000075f0     0360  
    1196 00007600     0b40          cmpi    68h,a0
         00007610     ff97  
    1197 00007620     c78c          jrgt    andjlp
    1198                    
    1199 00007630                   FACE24  und,snapmirror_anim
    1200 000076d0     c00a          jruc    andjcont
    1201                    
    1202 000076e0           andjdoit2       FACE24  und,snapmirror2_anim
    1203 00007780           andjcont
    1204 00007780     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00007790     0930  
    1205                    
    1206 000077a0                   WRSND   W_TAKER,HIPTOSS_T1,HIPTOSS_T2
    1207                    
    1208 00007940     5600          clr     a0
    1209 00007950     b208          move    a0,*a8(ATTACH_PROC),L
         00007960     03e0  
    1210                    
    1211 00007970                   SETMODE NORMAL
    1212                    
    1213 00007a20                   SLEEPK  20
    1214                    
    1215 00007a60     c000          jruc    andjlp
         00007a70     ff47  
    1216                    
    1217                    *******************************************************************************
    1218                    *
    1219 00007a80           und_hdhold_combo1
    1220                    
    1221              003c  sucaTIMEOUT     .equ    60
    1222                    
    1223 00007a80           sucalp0
    1224 00007a80                   SLEEPK  1
    1225 00007ac0           sucalp
    1226 00007ac0     b500          move    *a8(PLYRMODE),a0
         00007ad0     05c0  
    1227 00007ae0     0b40          cmpi    MODE_HEADHOLD,a0
         00007af0     ffef  
    1228 00007b00     cbf7          jrnz    sucalp0
    1229                    ;       jrz     sucacont
    1230                    ;       cmpi    MODE_HEADHELD,a0
    1231                    ;       jrnz    sucalp0
    1232                    ;sucacont
    1233                    ;In combo mode?
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1234 00007b10     0d5f          calla   CHECK_COMBO_GO
         00007b20 00000000! 
    1235 00007b40     c4f3          jrlt    sucalp0
    1236                    
    1237                    
    1238 00007b50     576b          clr     a11
    1239                    
    1240 00007b60                   WAITSWITCH_DWN  J_TOWARD,0,sucalp
    1241                    
    1242 00007cc0     09cb          movi    sucaTIMEOUT,a11
         00007cd0     003c  
    1243                    
    1244 00007ce0                   WAITSWITCH_DWN  J_TOWARD,0,sucalp
    1245 00007e40                   WAITSWITCH_DWN  B_SKICK,J_ALL,sucalp
    1246                    
    1247 00007fa0     b700          move    *a8(ANIBASE),a0,L
         00007fb0     0670  
    1248 00007fc0     0b60          cmpi    und_sliding_choke_anim,a0
         00007fd0 ffffffff! 
    1249 00007ff0     caa8          jrz     sucalp0
    1250                    
    1251 00008000     b500          move    *a8(PLYRMODE),a0
         00008010     05c0  
    1252 00008020     0b40          cmpi    MODE_HEADHOLD,a0
         00008030     ffef  
    1253 00008040     ca03          jrz     sucaslam
    1254 00008050     0b40          cmpi    MODE_HEADHELD,a0
         00008060     ffec  
    1255 00008070     cba0          jrnz    sucalp0
    1256                    
    1257                    
    1258 00008080           sucaslam
    1259 00008080     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00008090     0ae0  
    1260 000080a0     cb9d          jrnz    sucalp0                         ;ignore
    1261                    
    1262                    ;Start combo rules here
    1263                    ;       move    *a8(ATTACH_PROC),a14,L
    1264                    ;       movk    15,a0
    1265                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1266                    
    1267                            ;target WHOIHIT
    1268 000080b0                   SMRTTGT a8,WHOIHIT
    1269                    
    1270 00008150     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00008160 00000000! 
    1271 00008180     09ee          movi    und_combo_punch_anim,a14
         00008190 00000000! 
    1272 000081b0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000081c0     0930  
    1273                    
    1274 000081d0                   SLEEPK  20
    1275                    
    1276 00008210     c08a          jruc    sucalp
    1277                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1278                    *******************************************************************************
    1279                    *
    1280 00008220           und_hdhold_combo2
    1281                    
    1282              003c  sjnyTIMEOUT     .equ    60
    1283                    
    1284 00008220           sjnylp0
    1285 00008220                   SLEEPK  1
    1286 00008260           sjnylp
    1287 00008260     b500          move    *a8(PLYRMODE),a0
         00008270     05c0  
    1288 00008280     0b40          cmpi    MODE_HEADHOLD,a0
         00008290     ffef  
    1289 000082a0     cbf7          jrnz    sjnylp0
    1290                    ;       jrz     sjnycont
    1291                    ;       cmpi    MODE_HEADHELD,a0
    1292                    ;       jrnz    sjnylp0
    1293                    ;sjnycont
    1294                    ;In combo mode?
    1295 000082b0     0d5f          calla   CHECK_COMBO_GO
         000082c0 00000000! 
    1296 000082e0     c4f3          jrlt    sjnylp0
    1297                    
    1298                    
    1299 000082f0     576b          clr     a11
    1300                    
    1301 00008300                   WAITSWITCH_DWN  J_TOWARD,0,sjnylp
    1302                    
    1303 00008460     09cb          movi    sjnyTIMEOUT,a11
         00008470     003c  
    1304                    
    1305 00008480                   WAITSWITCH_DWN  J_TOWARD,0,sjnylp
    1306 000085e0                   WAITSWITCH_DWN  B_KICK,J_ALL,sjnylp
    1307                    
    1308 00008740     b700          move    *a8(ANIBASE),a0,L
         00008750     0670  
    1309 00008760     0b60          cmpi    und_sliding_choke_anim,a0
         00008770 ffffffff! 
    1310 00008790     caa8          jrz     sjnylp0
    1311                    
    1312 000087a0     b500          move    *a8(PLYRMODE),a0
         000087b0     05c0  
    1313 000087c0     0b40          cmpi    MODE_HEADHOLD,a0
         000087d0     ffef  
    1314 000087e0     ca03          jrz     sjnyslam
    1315 000087f0     0b40          cmpi    MODE_HEADHELD,a0
         00008800     ffec  
    1316 00008810     cba0          jrnz    sjnylp0
    1317                    
    1318                    
    1319 00008820           sjnyslam
    1320 00008820     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00008830     0ae0  
    1321 00008840     cb9d          jrnz    sjnylp0                         ;ignore
    1322                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1323                    ;Start combo rules here
    1324                    ;       move    *a8(ATTACH_PROC),a14,L
    1325                    ;       movk    15,a0
    1326                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1327                    
    1328                            ;target WHOIHIT
    1329 00008850                   SMRTTGT a8,WHOIHIT
    1330                    
    1331 000088f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00008900 00000000! 
    1332 00008920     09ee          movi    und_combo_kick_anim,A14
         00008930 00000000! 
    1333 00008950     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00008960     0930  
    1334                    
    1335 00008970                   SLEEPK  20
    1336                    
    1337 000089b0     c08a          jruc    sjnylp
    1338                    
    1339                    ******************************************************************************
    1340                    ;und_hdhold_anti_combo
    1341                    ;
    1342                    ;zeycTIMEOUT    .equ    80
    1343                    ;
    1344                    ;zeyclp0
    1345                    ;       SLEEPK  1
    1346                    ;zeyclp
    1347                    ;;Is my opponent in combo mode?
    1348                    ;;      move    *a8(IMMOBILIZE_TIME),a14
    1349                    ;;      jrz     zeyclp0
    1350                    ;;      move    *a8(CLOSEST_NUM),a0
    1351                    ;;      X32     a0
    1352                    ;;      addi    process_ptrs,a0
    1353                    ;;      move    *a0,a0,L
    1354                    ;;      move    *a0(COMBO_COUNT),a0
    1355                    ;;      jrz     zeyclp0
    1356                    ;
    1357                    ;       clr     a11
    1358                    ;
    1359                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,zeyclp
    1360                    ;
    1361                    ;       movi    zeycTIMEOUT,a11
    1362                    ;
    1363                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,zeyclp
    1364                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,zeyclp
    1365                    ;
    1366                    ;;Is my opponent in combo mode?
    1367                    ;       move    *a8(CLOSEST_NUM),a0
    1368                    ;       X32     a0
    1369                    ;       addi    process_ptrs,a0
    1370                    ;       move    *a0,a0,L
    1371                    ;       move    *a0(COMBO_COUNT),a0
    1372                    ;       jrz     zeyclp0
    1373                    ;
    1374                    ;       move    *a8(ANTI_COMBO_TIME),a0         ;Time stamp
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1375                    ;       move    @PCNT,a14
    1376                    ;       sub     a0,a14
    1377                    ;       abs     a14
    1378                    ;       cmpi    80,a14
    1379                    ;       jrge    zeyclp0
    1380                    ;       move    *a8(I_WILL_DIE),A14
    1381                    ;       jrnz    zeyclp0
    1382                    ;
    1383                    ;;Combo breaker message!
    1384                    ;       CALLA   DO_REVERSAL
    1385                    ;       CALLA   DO_REVERSAL_MESS
    1386                    ;
    1387                    ;       clr     a0
    1388                    ;       move    a0,*a8(IMMOBILIZE_TIME)
    1389                    ;
    1390                    ;       move    *a8(WHOHITME),a14,L
    1391                    ;       movk    15,a0
    1392                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1393                    ;
    1394                    ;       ;target WHOHITME
    1395                    ;       SMRTTGT a8,WHOHITME
    1396                    ;
    1397                    ;       CALLA   FIND_AND_KILL_ENDLESS
    1398                    ;       movi    und_pile_anim,a14
    1399                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
    1400                    ;
    1401                    ;       WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    1402                    ;
    1403                    ;       SLEEPK  20
    1404                    ;
    1405                    ;       jruc    zeyclp
    1406                    
    1407                    *****************************************************************************
    1408                    
    1409 000089c0            SUBR   taker_ani_init
    1410                    
    1411 000089c0     5600          clr     a0
    1412 000089d0     b20d          move    a0,*a13(ATTIMG_CUR_FRAME),L
         000089e0     08e0  
    1413                    
    1414 000089f0     b5a0          move    *a13(FACING_DIR),a0
         00008a00     04c0  
    1415 00008a10     1f80          btst    PLAYER_RIGHT_BIT,a0
    1416 00008a20     cb18          jrnz    uzpwp1
    1417                    ;Plyr 2
    1418 00008a30     09e0          movi    und_stand4_anim,a0
         00008a40 00000000! 
    1419 00008a60     0d5f          calla   change_anim1a
         00008a70 00000000! 
    1420                    
    1421 00008a90     09e0          movi    und_torso4_anim,a0
         00008aa0 00000000! 
    1422 00008ac0     0d5f          calla   change_anim2a
         00008ad0 00000000! 
    1423                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1424 00008af0                   PUSH    a10
    1425 00008b00     4daa          move    a13,a10
    1426 00008b10                   CREATE  TAUNT_PID,do_taunt
    1427 00008b90                   PULL    a10
    1428                    
    1429 00008ba0     0960          rets
    1430                    
    1431 00008bb0           uzpwp1
    1432 00008bb0     09e0          movi    und_stand2_anim,a0
         00008bc0 00000000! 
    1433 00008be0     0d5f          calla   change_anim1a
         00008bf0 00000000! 
    1434                    
    1435 00008c10     09e0          movi    und_torso2_anim,a0
         00008c20 00000000! 
    1436 00008c40     0d5f          calla   change_anim2a
         00008c50 00000000! 
    1437                    
    1438 00008c70     0960          rets
    1439                    
    1440                    
    1441                    *****************************************************************************
    1442                    *
    1443                    * UNDERTAKER CONTROL CODE
    1444                    *
    1445                    * a13 = * taker process
    1446                    
    1447 00008c80            SUBR   move_taker
    1448                    
    1449                    
    1450                    ;       movi    100h,a0                 ;temp fix!
    1451                    ;       move    a0,*a13(ANI_SPEED)
    1452                    
    1453 00008c80     09eb          movi    und_secret_moves,a11
         00008c90 00000000' 
    1454 00008cb0     0d5f          calla   check_secret_moves
         00008cc0 00000000! 
    1455                    
    1456 00008ce0     b5a0          move    *a13(PLYRMODE),a0
         00008cf0     05c0  
    1457 00008d00     24a0          sll     5,a0                    ;x 32
    1458 00008d10     0b20          addi    gircmode_table,a0
         00008d20 00008d70' 
    1459 00008d40     8600          move    *a0,a0,L
    1460 00008d50     0920          call    a0
    1461 00008d60     0960          rets
    1462                    
    1463 00008d70           gircmode_table
    1464 00008d70 000090b0'         .long   mode_normal             ;0
    1465 00008d90 00011010'         .long   mode_running            ;1
    1466 00008db0 00013330'         .long   mode_inair              ;2
    1467 00008dd0 00013340'         .long   mode_attached           ;3
    1468 00008df0 000134b0'         .long   mode_onground           ;4
    1469 00008e10 000134c0'         .long   mode_bouncing           ;5
    1470 00008e30 00013760'         .long   mode_onturnbkl          ;6
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1471 00008e50 00014100'         .long   mode_block              ;7
    1472 00008e70 00014b80'         .long   mode_dizzy              ;8
    1473 00008e90 00000000!         .long   mode_dead               ;9
    1474 00008eb0 00014b90'         .long   mode_oppoverhead        ;10
    1475 00008ed0 00014ba0'         .long   mode_climbturnbkl       ;11
    1476 00008ef0 00014bb0'         .long   mode_waitanim           ;12
    1477 00008f10 00014c30'         .long   mode_grapple            ;13
    1478 00008f30 00014c40'         .long   mode_master             ;14
    1479 00008f50 00014c80'         .long   mode_slave              ;15
    1480 00008f70 00014c90'         .long   mode_headhold           ;16
    1481 00008f90 00015d10'         .long   mode_puppet2            ;17
    1482 00008fb0 000090b0'         .long   mode_normal     ;18
    1483 00008fd0 00015d20'         .long   mode_headheld           ;19
    1484 00008ff0 00000000!         .long   mode_puppet             ;20
    1485 00009010 00000000!         .long   mode_inair2             ;21
    1486 00009030 000090b0'         .long   mode_normal     ;22
    1487 00009050 000090b0'         .long   mode_normal     ;23
    1488 00009070 000161e0'         .long   mode_chokehold          ;24
    1489 00009090 00017a60'         .long   mode_choking            ;25
    1490                    
    1491                    
    1492                    *****************************************************************************
    1493                    
    1494 000090b0           mode_normal
    1495                    
    1496 000090b0     b5a0          move    *a13(ANIMODE),a0
         000090c0     0660  
    1497 000090d0     1fa0          btst    MODE_UNINT_BIT,a0
    1498 000090e0     cb00          jrnz    tvlbno_interrupt
         000090f0     00ba  
    1499                    
    1500 00009100     b5a0          move    *a13(I_WILL_DIE),a0
         00009110     0b30  
    1501 00009120     ca1f          jrz     tvlbnope
    1502 00009130     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00009140     0ae0  
    1503 00009150     cb1c          jrnz    tvlbnope
    1504                    ;Player has died amidst a combo...
    1505                    ;Knock me down.
    1506 00009160     09e0          movi    und_fall_back_anim,a0
         00009170 00000000! 
    1507 00009190     0d5f          calla   change_anim1a
         000091a0 00000000! 
    1508                    
    1509                    ;Zero health bar
    1510 000091c0     09c0          movi    -10,a0
         000091d0     fff6  
    1511 000091e0     b5a1          move    *a13(PLYRNUM),a1
         000091f0     0580  
    1512 00009200     0d5f          calla   adjust_health
         00009210 00000000! 
    1513                    
    1514 00009230                   SETMODE DEAD
    1515                    
    1516 000092e0     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1517 000092f0     b00d          move    a0,*a13(I_WILL_DIE)
         00009300     0b30  
    1518                    
    1519 00009310     0960          rets
    1520                    
    1521 00009320           tvlbnope
    1522                    ;Perhaps we need to interrupt any sequence when a wrstler has won?
    1523                    
    1524 00009320     0d5f          calla   get_opp_plyrmode
         00009330 00000000! 
    1525 00009350     0b40          cmpi    MODE_DEAD,a0
         00009360     fff6  
    1526 00009370     cb53          jrne    tvlbopp_not_dead
    1527                    
    1528                            ;if closest is a zombie, skip pin section.
    1529 00009380     0d5f          calla   get_opp_process
         00009390 00000000! 
    1530 000093b0     b40e          move    *a0(STATUS_FLAGS),a14
         000093c0     0b50  
    1531 000093d0     1f8e          btst    B_ZOMBIE,a14
    1532 000093e0     cb4c          jrnz    tvlbopp_not_dead
    1533                            
    1534                            ;all opponents are dead.  Check for pins/raisearms
    1535                    
    1536                            ;if we're attached to someone, don't interrupt it.
    1537 000093f0     b7a1          move    *a13(ATTACH_PROC),a1,L
         00009400     03e0  
    1538 00009410     ca04          jrz     tvlbno_attch
    1539 00009420     b622          move    *a1(ATTACH_PROC),a2,L
         00009430     03e0  
    1540 00009440     484d          cmp     a2,a13
    1541 00009450     ca45          jreq    tvlbno_pin_yet
    1542 00009460           tvlbno_attch
    1543                    
    1544                            ;if a teammate has pinned, raise yer arm.
    1545 00009460     0d5f          calla   ck_teammate_pin 
         00009470 00000000! 
    1546 00009490     c82d          jrc     tvlbraisearm
    1547                    
    1548                            ;nobody has pinned.  if we're outside or all our opponents are
    1549                            ; outside, do a raisearm.
    1550 000094a0     0d5f          calla   raisearm_check
         000094b0 00000000! 
    1551 000094d0     c829          jrc     tvlbraisearm
    1552                    
    1553                            ;we're inside with a pinnable opponent.  any button pins.
    1554 000094e0     b5a0          move    *a13(BUT_VAL_CUR),a0
         000094f0     0b90  
    1555 00009500     ca3a          jrz     tvlbno_pin_yet
    1556                    
    1557                            ;we have a press -- make sure opponent is on the ground
    1558 00009510     0d5f          calla   can_pin
         00009520 00000000! 
    1559 00009540     c936          jrnc    tvlbopp_notgnd
    1560                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1561                            ;opponent is on the ground and close enough for anyone else
    1562                            ; to pin.  Taker is funny, tho, and if you're not real close
    1563                            ; and BEHIND the guy in Z, he just does a raise arm instead.
    1564                    
    1565                            ;But he STILL sets the 'I did a pin flag' anyway.
    1566 00009550     b5ae          move    *a13(STATUS_FLAGS),a14
         00009560     0b50  
    1567 00009570     0bae          ori     M_DID_PIN,a14
         00009580 00000002  
    1568 000095a0     b1cd          move    a14,*a13(STATUS_FLAGS)
         000095b0     0b50  
    1569                    
    1570                            ;And we also set all the PINNED/WHOIPINNED/WHOPINNED me stuff
    1571 000095c0     0d5f          calla   hit_nearest
         000095d0 00000000! 
    1572                    
    1573 000095f0     b5a0          move    *a13(NEW_FACING_DIR),a0
         00009600     04d0  
    1574 00009610     1fc0          btst    MOVE_DOWN_BIT,a0
    1575 00009620     ca14          jrz     tvlbraisearm
    1576                    
    1577 00009630     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00009640     0390  
    1578 00009650     0b40          cmpi    40h,a0
         00009660     ffbf  
    1579 00009670     c50f          jrge    tvlbraisearm
    1580                            
    1581 00009680     b5a0          move    *a13(CLOSEST_XDIST),a0
         00009690     0370  
    1582 000096a0     0b40          cmpi    35,a0
         000096b0     ffdc  
    1583 000096c0     c50a          jrge    tvlbraisearm
    1584                    
    1585 000096d0     09e0          movi    und_4_pin2_anim,a0
         000096e0 00000000! 
    1586 00009700     0d5f          calla   change_anim1a
         00009710 00000000! 
    1587                    
    1588                            ;if we're a temp drone for auto-pin purposes, turn back into
    1589                            ; a normal player here.
    1590 00009730     0d5f          calla   drone_change_back
         00009740 00000000! 
    1591                    
    1592 00009760     0960          rets
    1593                    
    1594 00009770           tvlbraisearm
    1595 00009770                   FACE24  und,raise_arm_anim
    1596 00009810     0d5f          calla   change_anim1a
         00009820 00000000! 
    1597 00009840     0d5f          calla   set_raisearm_bit
         00009850 00000000! 
    1598                    
    1599                            ;if we're a temp drone for auto-pin purposes, turn back into
    1600                            ; a normal player here.
    1601 00009870     0d5f          calla   drone_change_back
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

         00009880 00000000! 
    1602                    
    1603 000098a0     0960          rets
    1604                    
    1605 000098b0           tvlbtoo_far_to_pin
    1606 000098b0           tvlbopp_notgnd
    1607 000098b0           tvlbopp_not_dead
    1608 000098b0           tvlbno_pin_yet
    1609                    
    1610 000098b0     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         000098c0     0ae0  
    1611 000098d0     cb36          jrnz    tvlbimmobilized
    1612                    
    1613 000098e0     b5a0          move    *a13(BUT_VAL_CUR),a0
         000098f0     0b90  
    1614 00009900     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1615 00009910     ca07          jrz     tvlbnblk                        ;1 for down transitions
    1616 00009920     0d3f          callr   tvlbblock                       ;& 1 for current buttons
         00009930     01f0  
    1617 00009940     c804          jrc     tvlbnblk
    1618 00009950     5600          clr     a0
    1619 00009960     b00d          move    a0,*a13(ATTACK_TYPE)
         00009970     05e0  
    1620 00009980     0960          rets
    1621 00009990           tvlbnblk
    1622 00009990     b5a0          move    *a13(BUT_VAL_CUR),a0
         000099a0     0b90  
    1623 000099b0     0b80          andi    011111b,a0
         000099c0 ffffffe0  
    1624 000099e0     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         000099f0     fff6  
    1625 00009a00     ca00          jrz     tvlbpunchkick
         00009a10     05a9  
    1626                    
    1627 00009a20     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00009a30     0ba0  
    1628 00009a40     0b80          andi    011111b,a0
         00009a50 ffffffe0  
    1629 00009a70                   X32     a0
    1630 00009a80     0b20          addi    tvlbaction_table,a0
         00009a90 00009cb0' 
    1631 00009ab0     8600          move    *a0,a0,L
    1632 00009ac0     0920          call    a0
    1633                    
    1634 00009ad0     b5a0          move    *a13(ANIMODE),a0
         00009ae0     0660  
    1635 00009af0     1fa0          btst    MODE_UNINT_BIT,a0
    1636 00009b00     cb19          jrnz    tvlbno_interrupt
    1637                    
    1638                    
    1639 00009b10     b5a0          move    *a13(STICK_VAL_CUR),a0
         00009b20     0bc0  
    1640 00009b30     b00d          move    a0,*a13(MOVE_DIR)
         00009b40     04b0  
    1641 00009b50     0d5f          calla   climb_turnbuckle
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

         00009b60 00000000! 
    1642 00009b80     c90e          jrnc    tvlbno_climb
    1643 00009b90     b5a5          move    *a13(WRESTLERNUM),A5
         00009ba0     0590  
    1644 00009bb0     09e2          MOVI    CLIMB_ROPES,A2
         00009bc0 00000000! 
    1645 00009be0     09c0          MOVI    1000,A0
         00009bf0     03e8  
    1646 00009c00     0d5f          CALLA   ADD_IF_SILENT
         00009c10 00000000! 
    1647 00009c30     0960          rets
    1648                    
    1649 00009c40           tvlbimmobilized
    1650 00009c40     57ce          clr     a14
    1651 00009c50     b1cd          move    a14,*a13(MOVE_DIR)
         00009c60     04b0  
    1652 00009c70           tvlbno_climb
    1653 00009c70     0d5f          calla   execute_walk
         00009c80 00000000! 
    1654                    
    1655 00009ca0           tvlbno_interrupt
    1656 00009ca0     0960          rets
    1657                    
    1658 00009cb0           tvlbaction_table
    1659 00009cb0 0000a0b0'         .long   tvlbz,tvlbpunch,tvlbblock,tvlbblock                     ;0-3
    1660 00009d30 0000ba20'         .long   tvlbsuper_punch,tvlbsuper_punch,tvlbblock,tvlbblock     ;4-7
    1661 00009db0 0000d890'         .long   tvlbkick,tvlbpunchkick,tvlbblock,tvlbblock              ;8-11
    1662 00009e30 0000ba20'         .long   tvlbsuper_punch,tvlbpunchkick,tvlbblock,tvlbblock       ;12-15
    1663 00009eb0 0000f520'         .long   tvlbsuper_kick,tvlbsuper_kick,tvlbblock,tvlbblock       ;16-19
    1664 00009f30 0000c960'         .long   tvlbgraboh,tvlbgraboh,tvlbblock,tvlbblock               ;20-23
    1665 00009fb0 0000f520'         .long   tvlbsuper_kick,tvlbpunchkick,tvlbblock,tvlbblock        ;24-27
    1666 0000a030 0000c960'         .long   tvlbgraboh,tvlbgraboh,tvlbblock,tvlbblock               ;28-31
    1667                    
    1668                    
    1669                    ************
    1670 0000a0b0           tvlbz
    1671                    
    1672                    
    1673 0000a0b0     0960          rets
    1674                    
    1675                    ************
    1676 0000a0c0           tvlbpunch               ;1
    1677                    *
    1678                    * MODE             DX  DZ       ACTION
    1679                    * ----------------------------------------------------
    1680                    * normal        <  50   92      headbutt
    1681                    * dizzy                 "               "
    1682                    * normal        >               normal punch
    1683                    * dizzy                 "               "
    1684                    *
    1685                    * onground      < 120  120      elbow drop
    1686                    * onground      >               normal punch
    1687                    *
    1688                    * running                       hiptoss
    1689                    * bouncing                      nothing
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1690                    *
    1691                    * onturnbkl     <  60   96      yank down
    1692                    * onturnbkl     >               normal punch
    1693                    * climbturnbkl                  normal punch
    1694                    *
    1695 0000a0c0                   JJXM_INIT
    1696 0000a130                   JJXM    NORMAL,          75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1697 0000a200                   JJXM    RUNNING,         75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1698 0000a2d0                   JJXM    BLOCK,           75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1699 0000a3a0                   JJXM    DIZZY,           75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1700 0000a470                   JJXM    ONGROUND,       160,140,tvlbpunch_lbowdrop,tvlbpunch_punch
    1701 0000a540                   JJXM    BOUNCING,        75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1702 0000a610                   JJXM    ONTURNBKL,       75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1703 0000a6e0                   JJXM    CLIMBTURNBKL,           tvlbpunch_punch
    1704 0000a730                   JJXM    INAIR,           75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1705 0000a800                   JJXM    ATTACHED,        75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1706 0000a8d0                   JJXM    DEAD,           160,140,tvlbpunch_lbowdrop,tvlbpunch_punch
    1707 0000a980                   JJXM    OPPOVERHEAD,     75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1708 0000aa30                   JJXM    WAITANIM,        75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1709 0000aae0                   JJXM    GRAPPLE,         75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1710 0000ab80                   JJXM    MASTER,          75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1711 0000ac20                   JJXM    SLAVE,           75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1712 0000acc0                   JJXM    HEADHOLD,        75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1713 0000ad60                   JJXM    HEADHELD,        75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1714 0000ae00                   JJXM    CHOKEHOLD,       75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1715 0000aea0                   JJXM    PUPPET,          75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1716 0000af40                   JJXM    PUPPET2,         75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1717 0000afe0                   JJXM    INAIR2,          75, 45,tvlbpunch_hdbutt,tvlbpunch_punch
    1718 0000b080                   JJXM_END
    1719                    
    1720 0000b0a0           tvlbpunch_rets
    1721 0000b0a0     0960          rets
    1722                    
    1723                    *****
    1724 0000b0b0           tvlbpunch_punch
    1725 0000b0b0           std_punch
    1726                    
    1727 0000b0b0                   FACE24  und,punch_anim
    1728 0000b150     0d5f          calla   change_anim1a
         0000b160 00000000! 
    1729                    
    1730 0000b180                   WRSND   W_TAKER,PUNCH_T1,PUNCH_T2
    1731                    
    1732 0000b320     0960          rets
    1733                    
    1734                    *****
    1735 0000b330           tvlbpunch_hdbutt
    1736                    
    1737 0000b330                   FACE24  und,butt_anim
    1738 0000b3d0     0d5f          calla   change_anim1a
         0000b3e0 00000000! 
    1739                    
    1740 0000b400                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1741                    
    1742 0000b5a0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1743                    
    1744                    *****
    1745 0000b5b0           tvlbpunch_lbowdrop
    1746                    
    1747 0000b5b0                   FACE24  und,lbowdrop_anim
    1748 0000b650     0d5f          calla   change_anim1a
         0000b660 00000000! 
    1749                    
    1750 0000b680                   WRSND   W_TAKER,LBOWDROP_T1,LBOWDROP_T2
    1751                    
    1752 0000b820     0960          rets
    1753                    
    1754                    *****
    1755 0000b830           tvlbpunch_hiptoss
    1756                    ;std_hiptoss
    1757                    
    1758 0000b830     0960          rets
    1759                    
    1760                    
    1761                    ************
    1762 0000b840           tvlbblock               ;2
    1763                    
    1764 0000b840           std_block
    1765 0000b840     05a0          move    @blocking_off,a0
         0000b850 00000000! 
    1766 0000b870     cb18          jrnz    tvlbno_blocking
    1767                    
    1768 0000b880                   RND_AWARD       a13,BLOCKS_AWD
    1769                    
    1770 0000b920     09e0          movi    und_4_block_anim,a0
         0000b930 00000000! 
    1771 0000b950     0d5f          calla   change_anim1
         0000b960 00000000! 
    1772                    
    1773 0000b980     0d5f          calla   BLOCK_WOOSH
         0000b990 00000000! 
    1774                    
    1775 0000b9b0     5600          clr     a0
    1776 0000b9c0     b00d          move    a0,*a13(BLOCK_TIME)
         0000b9d0     0d30  
    1777 0000b9e0     0320          clrc
    1778 0000b9f0     0960          rets
    1779                    
    1780 0000ba00           tvlbno_blocking
    1781 0000ba00     0de0          setc
    1782 0000ba10     0960          rets
    1783                            
    1784                    
    1785                    ************
    1786 0000ba20           tvlbsuper_punch ;4
    1787                    *
    1788                    * MODE             DX  DZ       ACTION
    1789                    * ----------------------------------------------------
    1790                    * normal        <  50   92      close in super move
    1791                    * dizzy                 "               "
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1792                    * normal        >               jumping punch move
    1793                    * dizzy                 "               "
    1794                    *
    1795                    * onground      < 120  120      super elbow drop
    1796                    * onground      >               normal punch
    1797                    *
    1798                    * running                       hip toss
    1799                    * bouncing                      nothing
    1800                    *
    1801                    * onturnbkl     <  60   96      yank down
    1802                    * onturnbkl     >               normal punch
    1803                    * climbturnbkl                  normal punch
    1804                    *
    1805 0000ba20                   JJXM_INIT
    1806 0000ba90                   JJXM    NORMAL,          95, 35,tvlbspunch_special,tvlbspunch_slap      ;0
    1807 0000bb60                   JJXM    RUNNING,         95, 35,tvlbspunch_special,tvlbspunch_slap      ;1
    1808 0000bc30                   JJXM    INAIR,           95, 35,tvlbspunch_special,tvlbspunch_slap      ;2
    1809 0000bd00                   JJXM    ATTACHED,        95, 35,tvlbspunch_special,tvlbspunch_slap      ;3
    1810 0000bdd0                   JJXM    ONGROUND,       160,140,tvlbspunch_lbowdrop,std_punch   ;4
    1811 0000bea0                   JJXM    BOUNCING,        95, 35,tvlbspunch_special,tvlbspunch_slap      ;1
    1812 0000bf70                   JJXM    ONTURNBKL,              tvlbspunch_slap                 ;6
    1813 0000bfc0                   JJXM    BLOCK,           95, 35,tvlbspunch_special,tvlbspunch_slap      ;7
    1814 0000c090                   JJXM    DIZZY,           95, 35,tvlbspunch_special,tvlbspunch_slap      ;8
    1815 0000c160                   JJXM    DEAD,           160,140,tvlbspunch_lbowdrop,std_punch   ;9
    1816 0000c230                   JJXM    OPPOVERHEAD,     95, 35,tvlbspunch_special,tvlbspunch_slap      ;10
    1817 0000c2e0                   JJXM    CLIMBTURNBKL,           std_punch                       ;11
    1818 0000c330                   JJXM    WAITANIM,        95, 35,tvlbspunch_special,tvlbspunch_slap      ;12
    1819 0000c3e0                   JJXM    GRAPPLE,         95, 35,tvlbspunch_special,tvlbspunch_slap      ;13
    1820 0000c480                   JJXM    MASTER,          95, 35,tvlbspunch_special,tvlbspunch_slap      ;14
    1821 0000c520                   JJXM    SLAVE,           95, 35,tvlbspunch_special,tvlbspunch_slap      ;15
    1822 0000c5c0                   JJXM    HEADHOLD,        95, 35,tvlbspunch_special,tvlbspunch_slap      ;16
    1823                    
    1824 0000c660                   JJXM    HEADHELD,               do_pile
    1825                    ;PILE
    1826 0000c6b0                   JJXM    CHOKEHOLD,       95, 35,tvlbspunch_special,tvlbspunch_slap      ;16
    1827 0000c750                   JJXM    PUPPET,          95, 35,tvlbspunch_special,tvlbspunch_slap      ;20
    1828 0000c7f0                   JJXM    PUPPET2,         95, 35,tvlbspunch_special,tvlbspunch_slap      ;20
    1829 0000c890                   JJXM    INAIR2,          95, 35,tvlbspunch_special,tvlbspunch_slap      ;21
    1830 0000c930                   JJXM_END
    1831                    
    1832 0000c950           tvlbspunch_rets
    1833 0000c950     0960          rets
    1834                    
    1835 0000c960           tvlbgraboh              ;8
    1836 0000c960           tvlbspunch_slap
    1837                    ;jumping punch attack
    1838 0000c960                   FACE24  und,slap_anim
    1839 0000ca00     0d5f          calla   change_anim1a
         0000ca10 00000000! 
    1840                    
    1841 0000ca30                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    1842                    
    1843 0000cbd0     0960          rets
    1844                    
    1845                    *****
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1846 0000cbe0           tvlbspunch_special
    1847                    ;If stick is toward opponent, then do quick head hold
    1848 0000cbe0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000cbf0     0bc0  
    1849 0000cc00     1fc0          btst    MOVE_DOWN_BIT,a0
    1850 0000cc10     cb2d          jrnz    tvlbck_up
    1851                    ;       move    *a13(NEW_FACING_DIR),a1
    1852                    ;       andi    0ch,a1
    1853                    ;       cmp     a0,a1
    1854                    ;       jrz     tvlbcont
    1855                    
    1856 0000cc20     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000cc30     0370  
    1857 0000cc40     0b41          cmpi    70,a1
         0000cc50     ffb9  
    1858 0000cc60     c7cf          jrgt    tvlbspunch_slap
    1859                    
    1860                    ;tvlbcont
    1861                    ;       movi    und_3_head_hold2_anim,a0
    1862                    ;       calla   change_anim1a
    1863                    ;
    1864                    ;       WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    1865                    ;       rets
    1866                    ;tvlbhdbutt
    1867                    
    1868 0000cc70                   FACE24  und,butts_anim
    1869 0000cd10     0d5f          calla   change_anim1
         0000cd20 00000000! 
    1870                    
    1871 0000cd40                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1872                    
    1873 0000cee0     0960          rets
    1874 0000cef0           tvlbck_up
    1875                    ;Do uppercut
    1876 0000cef0                   FACE24  und,uppercut_anim
    1877 0000cf90     0d5f          calla   change_anim1
         0000cfa0 00000000! 
    1878                    
    1879 0000cfc0                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    1880 0000d160     0960          rets
    1881                    
    1882                    
    1883                    *****
    1884 0000d170           tvlbspunch_lbowdrop
    1885                    ;If near opponents head, and facing down, do the hair grab!
    1886                    ;Allow hair grab from below!
    1887                    
    1888                    ;       move    *a13(FACING_DIR),a14
    1889                    ;       btst    MOVE_DOWN_BIT,a14
    1890                    ;       jrz     tvlbno
    1891                    
    1892 0000d170     b5ae          move    *a13(CLOSEST_NUM),a14
         0000d180     03a0  
    1893 0000d190                   X32     a14
    1894                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

    1895 0000d1a0     0b2e          addi    process_ptrs,a14
         0000d1b0 00000000! 
    1896 0000d1d0     87ce          move    *a14,a14,L
    1897 0000d1e0     b5c2          move    *a14(PLYRMODE),a2
         0000d1f0     05c0  
    1898 0000d200     0b42          cmpi    MODE_DEAD,a2
         0000d210     fff6  
    1899 0000d220     ca3e          jrz     tvlbno
    1900 0000d230     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000d240     0100  
    1901 0000d250     b7c2          move    *a14(OBJ_XPOS),a2,L
         0000d260     0100  
    1902 0000d270     4441          sub     a2,a1
    1903 0000d280     0381          abs     a1
    1904 0000d290     2e01          srl     16,a1
    1905 0000d2a0     0b41          cmpi    20h,a1  ;28
         0000d2b0     ffdf  
    1906 0000d2c0     c434          jrlt    tvlbno
    1907                    
    1908                    ;At head or feet!
    1909                    
    1910 0000d2d0     b5ce          move    *a14(OBJ_CONTROL),a14
         0000d2e0     0780  
    1911 0000d2f0     0b8e          andi    M_FLIPH,a14
         0000d300 ffffffef  
    1912 0000d320     b5a0          move    *a13(OBJ_CONTROL),a0
         0000d330     0780  
    1913 0000d340     0b80          andi    M_FLIPH,a0
         0000d350 ffffffef  
    1914 0000d370     480e          cmp     a0,a14
    1915 0000d380     ca28          jrz     tvlbno
    1916                    
    1917                    ;At head!  Do hair pickup.
    1918                    
    1919 0000d390                   FACE24  und,hair_pickup_anim
    1920 0000d430     0d5f          calla   change_anim1
         0000d440 00000000! 
    1921 0000d460                   WRSND   W_TAKER,LBOWDROP_T1,LBOWDROP_T2
    1922 0000d600     0960          rets
    1923                    
    1924 0000d610           tvlbno  FACE24  und,lbowdrop_anim
    1925 0000d6b0     0d5f          calla   change_anim1
         0000d6c0 00000000! 
    1926 0000d6e0                   WRSND   W_TAKER,LBOWDROP_T1,LBOWDROP_T2
    1927 0000d880     0960          rets
    1928                    
    1929                    
    1930                    ************
    1931 0000d890           tvlbkick                ;8
    1932                    *
    1933                    * MODE             DX  DZ       ACTION
    1934                    * ----------------------------------------------------
    1935                    * normal        <  50   92      knee
    1936                    * dizzy                 "               "
    1937                    * normal        >               normal kick
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1938                    * dizzy                 "               "
    1939                    *
    1940                    * onground      < 120  120      stomp
    1941                    * onground      >               normal kick
    1942                    *
    1943                    * running                       normal kick
    1944                    * bouncing                      normal kick
    1945                    *
    1946                    * onturnbkl                     normal kick
    1947                    * climbturnbkl                  normal kick
    1948                    *
    1949 0000d890                   JJXM_INIT
    1950 0000d900                   JJXM    NORMAL,          65, 92,tvlbkick_knee,tvlbkick_kick
    1951 0000d9d0                   JJXM    RUNNING,         65, 92,tvlbkick_knee,tvlbkick_kick
    1952 0000daa0                   JJXM    INAIR,           65, 92,tvlbkick_knee,tvlbkick_kick
    1953 0000db70                   JJXM    ATTACHED,        65, 92,tvlbkick_knee,tvlbkick_kick
    1954 0000dc40                   JJXM    ONGROUND,       160,140,tvlbkick_stomp,tvlbkick_kick
    1955 0000dd10                   JJXM    BOUNCING,        65, 92,tvlbkick_knee,tvlbkick_kick
    1956 0000dde0                   JJXM    ONTURNBKL,              tvlbkick_kick
    1957 0000de30                   JJXM    BLOCK,           65, 92,tvlbkick_knee,tvlbkick_kick
    1958 0000df00                   JJXM    DIZZY,           65, 92,tvlbkick_knee,tvlbkick_kick
    1959 0000dfd0                   JJXM    DEAD,           160,140,tvlbkick_stomp,tvlbkick_kick
    1960 0000e0a0                   JJXM    OPPOVERHEAD,     65, 92,tvlbkick_knee,tvlbkick_kick
    1961 0000e170                   JJXM    CLIMBTURNBKL,           tvlbkick_kick
    1962 0000e1c0                   JJXM    WAITANIM,        65, 92,tvlbkick_knee,tvlbkick_kick
    1963 0000e290                   JJXM    GRAPPLE,         65, 92,tvlbkick_knee,tvlbkick_kick
    1964 0000e340                   JJXM    MASTER,          65, 92,tvlbkick_knee,tvlbkick_kick
    1965 0000e3f0                   JJXM    SLAVE,           65, 92,tvlbkick_knee,tvlbkick_kick
    1966 0000e4a0                   JJXM    HEADHOLD,        65, 92,tvlbkick_knee,tvlbkick_kick
    1967 0000e550                   JJXM    HEADHELD,        65, 92,tvlbkick_knee,tvlbkick_kick
    1968 0000e600                   JJXM    CHOKEHOLD,       65, 92,tvlbkick_knee,tvlbkick_kick
    1969 0000e6b0                   JJXM    PUPPET,          65, 92,tvlbkick_knee,tvlbkick_kick
    1970 0000e760                   JJXM    PUPPET2,         65, 92,tvlbkick_knee,tvlbkick_kick
    1971 0000e800                   JJXM    INAIR2,                 tvlbkick_TB
    1972 0000e840                   JJXM_END
    1973                    
    1974                    *****
    1975 0000e860           tvlbkick_TB
    1976                    
    1977                            .ref    und_kick_TB_anim
    1978 0000e860     09e0          movi    und_kick_TB_anim,a0
         0000e870 00000000! 
    1979 0000e890     0d5f          calla   change_anim1a
         0000e8a0 00000000! 
    1980                    
    1981 0000e8c0                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1982                    
    1983 0000ea60     0960          rets
    1984                    
    1985                    *****
    1986 0000ea70           tvlbkick_kick
    1987 0000ea70           std_kick
    1988                    
    1989 0000ea70                   FACE24  und,kick_anim
    1990 0000eb10     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

         0000eb20 00000000! 
    1991                    
    1992 0000eb40                   WRSND   W_TAKER,KICK_T1,KICK_T2
    1993                    
    1994 0000ece0     0960          rets
    1995                    
    1996                    *****
    1997 0000ecf0           tvlbkick_flyingkick
    1998                    
    1999 0000ecf0     09e0          movi    und_flying_kick_anim,a0
         0000ed00 00000000! 
    2000 0000ed20     0d5f          calla   change_anim1a
         0000ed30 00000000! 
    2001                    
    2002 0000ed50                   SETMODE INAIR
    2003                    
    2004 0000ee00                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2005                    
    2006 0000efa0     0960          rets
    2007                    
    2008                    *****
    2009 0000efb0           tvlbkick_knee
    2010 0000efb0           std_knee
    2011                    
    2012 0000efb0                   FACE24  und,knee_anim
    2013 0000f050     0d5f          calla   change_anim1a
         0000f060 00000000! 
    2014                    
    2015 0000f080                   WRSND   W_TAKER,KICK_T1,KICK_T2
    2016                    
    2017 0000f220     0960          rets
    2018                    
    2019                    *****
    2020 0000f230           tvlbkick_stomp
    2021 0000f230           attack_stomp
    2022                    
    2023 0000f230                   FACE24  und,stomp_anim
    2024 0000f2d0     0d5f          calla   change_anim1a
         0000f2e0 00000000! 
    2025                    
    2026 0000f300                   WRSND   W_TAKER,KICK_T1,KICK_T2
    2027                    
    2028 0000f4a0     0960          rets
    2029                    
    2030                    
    2031                    ************
    2032 0000f4b0           tvlbpunchkick   ;9
    2033                    
    2034 0000f4b0     09e0          movi    start_run_anim,a0
         0000f4c0 00000000! 
    2035 0000f4e0     0d5f          calla   change_anim1a
         0000f4f0 00000000! 
    2036                    
    2037 0000f510     0960          rets
    2038                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    2039                    ************
    2040 0000f520           tvlbsuper_kick  ;16
    2041                    *
    2042                    * MODE             DX  DZ       ACTION
    2043                    * ----------------------------------------------------
    2044                    * normal        <  60   60      close in super move
    2045                    * dizzy                 "               "
    2046                    * normal        >               jumping kick move
    2047                    * dizzy                 "               "
    2048                    *
    2049                    * onground      < 120  120      super stomp
    2050                    * onground      >               normal kick
    2051                    *
    2052                    * running                       big boot
    2053                    * bouncing                      big boot
    2054                    *
    2055                    * onturnbkl     <  60   96      jumping kick move
    2056                    * climbturnbkl          "               "
    2057                    * onturnbkl     >               normal kick
    2058                    * climbturnbkl          "               "
    2059                    *
    2060 0000f520                   JJXM_INIT
    2061 0000f590                   JJXM    NORMAL,          60, 60,tvlbskick_special,tvlbskick_kick        ;0
    2062 0000f660                   JJXM    RUNNING,                tvlbskick_bigboot                       ;1
    2063 0000f6b0                   JJXM    INAIR,           60, 60,tvlbskick_special,tvlbskick_kick        ;2
    2064 0000f780                   JJXM    ATTACHED,        60, 60,tvlbskick_special,tvlbskick_kick        ;3
    2065 0000f850                   JJXM    ONGROUND,       160,140,tvlbskick_stomp,std_kick                ;4
    2066 0000f920                   JJXM    BOUNCING,               tvlbskick_bigboot                       ;5
    2067 0000f970                   JJXM    ONTURNBKL,       60, 96,tvlbskick_kick,std_kick         ;6
    2068 0000fa40                   JJXM    BLOCK,           60, 60,tvlbskick_special,tvlbskick_kick        ;7
    2069 0000fb10                   JJXM    DIZZY,           60, 60,tvlbskick_special,tvlbskick_kick        ;8
    2070 0000fbe0                   JJXM    DEAD,           160,140,tvlbskick_stomp,std_kick                ;9
    2071 0000fcb0                   JJXM    OPPOVERHEAD,     60, 60,tvlbskick_special,tvlbskick_kick        ;10
    2072 0000fd60                   JJXM    CLIMBTURNBKL,    60, 96,tvlbskick_kick,std_kick         ;11
    2073 0000fe20                   JJXM    WAITANIM,        60, 62,tvlbskick_special,tvlbskick_kick        ;12
    2074 0000fec0                   JJXM    GRAPPLE,         60, 62,tvlbskick_special,tvlbskick_kick        ;13
    2075 0000ff60                   JJXM    MASTER,          60, 62,tvlbskick_special,tvlbskick_kick        ;14
    2076 00010000                   JJXM    SLAVE,           60, 62,tvlbskick_special,tvlbskick_kick        ;15
    2077 000100a0                   JJXM    HEADHOLD,        60, 62,tvlbskick_special,tvlbskick_kick        ;16
    2078 00010140                   JJXM    HEADHELD,               std_kick
    2079 00010190                   JJXM    CHOKEHOLD,       60, 62,tvlbskick_special,tvlbskick_kick        ;16
    2080 00010230                   JJXM    PUPPET,          60, 62,tvlbskick_special,tvlbskick_kick        ;20
    2081 000102d0                   JJXM    PUPPET2,         60, 62,tvlbskick_special,tvlbskick_kick        ;20
    2082 00010370                   JJXM    INAIR2,                 tvlbkick_TB
    2083 000103c0                   JJXM_END
    2084                    
    2085                    *****
    2086 000103e0           tvlbskick_kick
    2087 000103e0                   FACE24  und,super_kick_anim
    2088 00010480     0d5f          calla   change_anim1a
         00010490 00000000! 
    2089                    
    2090 000104b0                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2091 00010650     0960          rets
    2092                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2093                    
    2094                    *****
    2095 00010660           tvlbskick_special
    2096                    ;If stick is toward opponent, then do quick punches
    2097 00010660     b5a0          move    *a13(STICK_VAL_CUR),a0
         00010670     0bc0  
    2098 00010680     b5a1          move    *a13(NEW_FACING_DIR),a1
         00010690     04d0  
    2099 000106a0     0b81          andi    0ch,a1
         000106b0 fffffff3  
    2100 000106d0     4801          cmp     a0,a1
    2101 000106e0     ca28          jrz     tvlbcont2
    2102                    
    2103 000106f0                   FACE24  und,knee_anim
    2104 00010790     0d5f          calla   change_anim1a
         000107a0 00000000! 
    2105                    
    2106 000107c0                   WRSND   W_TAKER,KICK_T1,KICK_T2
    2107                    
    2108 00010960     0960          rets
    2109                    
    2110 00010970           tvlbcont2
    2111 00010970     09e0          movi    und_4_knee_fall_anim,a0
         00010980 00000000! 
    2112 000109a0     0d5f          calla   change_anim1
         000109b0 00000000! 
    2113                    
    2114 000109d0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    2115 00010b70     0960          rets
    2116                    
    2117 00010b80           tvlbskick_stomp
    2118                    
    2119 00010b80                   FACE24  und,stomp_anim
    2120 00010c20     0d5f          calla   change_anim1a
         00010c30 00000000! 
    2121                    
    2122 00010c50                   WRSND   W_TAKER,KICK_T1,KICK_T2
    2123                    
    2124 00010df0     0960          rets
    2125                    
    2126                    *****
    2127 00010e00           tvlbskick_bigboot       ;we can probably get away with just a tvlb4 big boot
    2128                    
    2129 00010e00     09e0          movi    und_4_bigboot_anim,a0           ;*****
         00010e10 00000000! 
    2130 00010e30     0d5f          calla   change_anim1a
         00010e40 00000000! 
    2131                    
    2132 00010e60                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2133                    
    2134 00011000     0960          rets
    2135                    
    2136                    
    2137                    *****************************************************************************
    2138                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2139                    * RUNNING (if GETUP_TIME > 0 then player is out of control)
    2140                    *
    2141                    
    2142          00064000  dfcnXRUN_VAL    equ     UND_XRUN
    2143          00028000  dfcnZDRIFT_VAL  equ     UND_ZDRIFT
    2144                    
    2145 00011010           mode_running
    2146                    
    2147 00011010     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         00011020     07b0  
    2148 00011030     1020          addk    1,a0
    2149 00011040     b00d          move    a0,*a13(RUN_TIME)
         00011050     07b0  
    2150                    
    2151 00011060     b5a0          move    *a13(USR_VAR1),a0
         00011070     0850  
    2152 00011080     cb11          jrnz    dfcnno_vel
    2153                    
    2154 00011090     0d5f          calla   bounce_off_ropes
         000110a0 00000000! 
    2155                    
    2156 000110c0     09e0          movi    dfcnXRUN_VAL,a0
         000110d0 00064000  
    2157 000110f0     b5ae          move    *a13(MOVE_DIR),a14
         00011100     04b0  
    2158 00011110     1f8e          btst    PLAYER_RIGHT_BIT,a14
    2159 00011120     cb01          jrnz    dfcnpos
    2160 00011130     03a0          neg     a0
    2161 00011140           dfcnpos
    2162 00011140     05ae          move    @hyper_speed_on,a14
         00011150 00000000! 
    2163 00011170     63c0          sll     a14,a0
    2164 00011180     b20d          move    a0,*a13(OBJ_XVEL),L
         00011190     02d0  
    2165                    
    2166 000111a0           dfcnno_vel
    2167                    
    2168 000111a0     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         000111b0     0460  
    2169 000111c0     cb38          jrnz    dfcnout_of_control
    2170                    
    2171 000111d0     b5a0          move    *a13(ANIMODE),a0
         000111e0     0660  
    2172 000111f0     1fa0          btst    MODE_UNINT_BIT,a0
    2173 00011200     cb16          jrnz    dfcnno_interrupt
    2174                    
    2175 00011210     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011220     0bc0  
    2176 00011230     b5a1          move    *a13(MOVE_DIR),a1
         00011240     04b0  
    2177 00011250     5401          or      a0,a1
    2178 00011260     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00011270 fffffff3  
    2179 00011290     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         000112a0     fff3  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2180 000112b0     cb0b          jrne    dfcncontinue_run
    2181                    
    2182                            ;braking with stick.  abort run.
    2183                    
    2184 000112c0                   SETMODE NORMAL
    2185                    
    2186 00011370           dfcncontinue_run
    2187 00011370           dfcnno_interrupt
    2188                    
    2189 00011370     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011380     0bc0  
    2190 00011390     5621          clr     a1
    2191                    
    2192 000113a0     09e1          movi    -dfcnZDRIFT_VAL,a1
         000113b0 fffd8000  
    2193 000113d0     1fe0          btst    PLAYER_UP_BIT,a0
    2194 000113e0     cb06          jrnz    dfcnsetvel
    2195                    
    2196 000113f0     09e1          movi    dfcnZDRIFT_VAL,a1
         00011400 00028000  
    2197 00011420     1fc0          btst    PLAYER_DOWN_BIT,a0
    2198 00011430     cb01          jrnz    dfcnsetvel
    2199                    
    2200 00011440     5621          clr     a1
    2201 00011450           dfcnsetvel
    2202 00011450     b22d          move    a1,*a13(OBJ_ZVEL),L
         00011460     0310  
    2203                    
    2204                    ;Delay reading buttons after just getting out of an out of control run
    2205                    ;so a mistaken move isn't fired off
    2206 00011470     b5a0          move    *a13(DELAY_BUTNS),a0
         00011480     0ab0  
    2207 00011490     cb0b          jrnz    dfcnout_of_control
    2208                    
    2209                    
    2210 000114a0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000114b0     0ba0  
    2211 000114c0     0b80          andi    011111b,a0
         000114d0 ffffffe0  
    2212 000114f0                   X32     a0
    2213 00011500     0b20          addi    dfcnaction_table,a0
         00011510 00011560' 
    2214 00011530     8600          move    *a0,a0,L
    2215 00011540     0920          call    a0
    2216 00011550           dfcnout_of_control
    2217 00011550     0960          rets
    2218                    
    2219 00011560           dfcnaction_table
    2220 00011560 00011960'         .long   dfcnz,dfcnpunch,dfcnblock,dfcnblock                     ;0-3
    2221 000115e0 00011970'         .long   dfcnsuper_punch,dfcnsuper_punch,dfcnblock,dfcnblock     ;4-7
    2222 00011660 00012a00'         .long   dfcnkick,dfcnpunchkick,dfcnblock,dfcnblock              ;8-11
    2223 000116e0 00011970'         .long   dfcnsuper_punch,dfcnpunchkick,dfcnblock,dfcnblock       ;12-15
    2224 00011760 00012a00'         .long   dfcnsuper_kick,dfcnsuper_kick,dfcnblock,dfcnblock       ;16-19
    2225 000117e0 00011970'         .long   dfcngraboh,dfcngraboh,dfcnblock,dfcnblock               ;20-23
    2226 00011860 00012a00'         .long   dfcnsuper_kick,dfcnpunchkick,dfcnblock,dfcnblock        ;24-27
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2227 000118e0 00011970'         .long   dfcngraboh,dfcngraboh,dfcnblock,dfcnblock               ;28-31
    2228                    
    2229                    
    2230                    ************
    2231 00011960           dfcnz
    2232 00011960     0960          rets
    2233                    
    2234                    ************
    2235 00011970           dfcnpunch               ;1
    2236 00011970           dfcnsuper_punch ;4
    2237 00011970           dfcnpunchkick
    2238 00011970           dfcngraboh
    2239                    *
    2240                    * MODE             DX  DZ       ACTION
    2241                    * ----------------------------------------------------
    2242                    * normal                        flying clothesline
    2243                    * dizzy                                 "
    2244                    *
    2245                    * onground      < 176 176       butt-drop
    2246                    * onground      >               nothing
    2247                    *
    2248                    * running                       flying clothesline
    2249                    * bouncing                      flying clothesline
    2250                    *
    2251                    * onturnbkl                     flying clothesline
    2252                    * climbturnbkl                  flying clothesline
    2253                    *
    2254 00011970                   JJXM_INIT
    2255 000119e0                   JJXM    NORMAL,                 dfcnpunch_clothesline
    2256 00011a20                   JJXM    BLOCK,                  dfcnpunch_clothesline
    2257 00011a60                   JJXM    DIZZY,                  dfcnpunch_clothesline
    2258 00011aa0                   JJXM    ONGROUND,       176,176,dfcnpunch_bellyflop,dfcnpunch_rets
    2259 00011b50                   JJXM    RUNNING,                dfcnpunch_clothesline
    2260 00011b90                   JJXM    BOUNCING,               dfcnpunch_clothesline
    2261 00011bd0                   JJXM    ONTURNBKL,              dfcnpunch_clothesline
    2262 00011c10                   JJXM    CLIMBTURNBKL,           dfcnpunch_clothesline
    2263 00011c50                   JJXM    INAIR,                  dfcnpunch_clothesline
    2264 00011c90                   JJXM    ATTACHED,               dfcnpunch_clothesline
    2265 00011cd0                   JJXM    DEAD,                   attack_bellyflop
    2266 00011d20                   JJXM    OPPOVERHEAD,            dfcnpunch_clothesline
    2267 00011d60                   JJXM    WAITANIM,               dfcnpunch_clothesline
    2268 00011da0                   JJXM    GRAPPLE,                dfcnpunch_clothesline
    2269 00011de0                   JJXM    MASTER,                 dfcnpunch_clothesline
    2270 00011e20                   JJXM    SLAVE,                  dfcnpunch_clothesline
    2271 00011e60                   JJXM    HEADHOLD,               dfcnpunch_clothesline
    2272 00011ea0                   JJXM    HEADHELD,               dfcnpunch_clothesline
    2273 00011ee0                   JJXM    CHOKEHOLD,              dfcnpunch_clothesline
    2274 00011f20                   JJXM    PUPPET,                 dfcnpunch_clothesline
    2275 00011f60                   JJXM    PUPPET2,                dfcnpunch_clothesline
    2276 00011fa0                   JJXM    INAIR2,                 dfcnpunch_clothesline
    2277 00011fe0                   JJXM_END
    2278                    
    2279 00012000           dfcnpunch_rets
    2280 00012000     0960          rets
    2281                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2282                    *****
    2283 00012010           dfcnpunch_clothesline
    2284                    
    2285                            ;don't do it if you're running away from your opponent.
    2286 00012010     b5a0          move    *a13(FACING_DIR),a0
         00012020     04c0  
    2287 00012030     b5a1          move    *a13(NEW_FACING_DIR),a1
         00012040     04d0  
    2288 00012050     5001          and     a0,a1
    2289 00012060     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00012070 fffffff3  
    2290 00012090     ca8c          jrz     dfcnz
    2291                    
    2292 000120a0     5600          clr     a0
    2293 000120b0     b00d          move    a0,*a13(RUN_TIME)
         000120c0     07b0  
    2294                    
    2295 000120d0                   SETMODE NORMAL
    2296                    
    2297 00012180     b5a1          move    *a13(CLOSEST_XDIST),a1
         00012190     0370  
    2298 000121a0     0b41          cmpi    70,a1
         000121b0     ffb9  
    2299 000121c0     c428          jrlt    dfcnhdbutt
    2300                    
    2301                            .ref    und_2_run_slap_anim
    2302                            .ref    und_4_run_slap_anim
    2303 000121d0                   FACE24  und,run_slap_anim
    2304 00012270     0d5f          calla   change_anim1a
         00012280 00000000! 
    2305                    
    2306 000122a0                   WRSND   W_TAKER,GRABHOLD_T1,GRABHOLD_T2
    2307                    
    2308 00012440     0960          rets
    2309                    
    2310 00012450           dfcnhdbutt
    2311                    
    2312 00012450                   FACE24  und,butt_anim
    2313 000124f0     0d5f          calla   change_anim1
         00012500 00000000! 
    2314                    
    2315 00012520                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    2316                    
    2317 000126c0     0960          rets
    2318                    
    2319                    *****
    2320 000126d0           dfcnpunch_bellyflop
    2321 000126d0           attack_bellyflop
    2322                    
    2323 000126d0     09e0          movi    und_flying_butt_drop_anim,a0
         000126e0 00000000! 
    2324 00012700     0d5f          calla   change_anim1a
         00012710 00000000! 
    2325                    
    2326 00012730                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2327                    
    2328 000128d0     0960          rets
    2329                    
    2330                    ************
    2331 000128e0           dfcnblock               ;2
    2332                    
    2333 000128e0     b7a0          move    *a13(OBJ_XVEL),a0,L
         000128f0     02d0  
    2334 00012900     2be0          sra     1,a0
    2335 00012910     b20d          move    a0,*a13(OBJ_XVEL),L
         00012920     02d0  
    2336 00012930                   SETMODE NORMAL
    2337 000129e0     c000          jruc    std_block
         000129f0     f8e4  
    2338                    
    2339                    ************
    2340 00012a00           dfcnkick                ;8
    2341 00012a00           dfcnsuper_kick  ;16
    2342                    *
    2343                    * MODE             DX  DZ       ACTION
    2344                    * ----------------------------------------------------
    2345                    * normal                        flying kick
    2346                    * dizzy                                 "
    2347                    *
    2348                    * onground      < 176 176       butt-drop
    2349                    * onground      >               nothing
    2350                    *
    2351                    * running                       flying kick
    2352                    * bouncing                      flying kick
    2353                    *
    2354                    * onturnbkl                     flying kick
    2355                    * climbturnbkl                  flying kick
    2356                    *
    2357 00012a00                   JJXM_INIT
    2358 00012a70                   JJXM    NORMAL,                 dfcnkick_flyingkick
    2359 00012ab0                   JJXM    BLOCK,                  dfcnkick_flyingkick
    2360 00012af0                   JJXM    DIZZY,                  dfcnkick_flyingkick
    2361 00012b30                   JJXM    ONGROUND,               attack_bellyflop
    2362 00012b70                   JJXM    RUNNING,                dfcnkick_flyingkick
    2363 00012bb0                   JJXM    BOUNCING,               dfcnkick_flyingkick
    2364 00012bf0                   JJXM    ONTURNBKL,              dfcnkick_flyingkick
    2365 00012c30                   JJXM    CLIMBTURNBKL,           dfcnkick_flyingkick
    2366 00012c70                   JJXM    INAIR,                  dfcnkick_flyingkick
    2367 00012cb0                   JJXM    ATTACHED,               dfcnkick_flyingkick
    2368 00012cf0                   JJXM    DEAD,                   attack_bellyflop
    2369 00012d30                   JJXM    OPPOVERHEAD,            dfcnkick_flyingkick
    2370 00012d70                   JJXM    WAITANIM,               dfcnkick_flyingkick
    2371 00012db0                   JJXM    GRAPPLE,                dfcnkick_flyingkick
    2372 00012df0                   JJXM    MASTER,                 dfcnkick_flyingkick
    2373 00012e30                   JJXM    SLAVE,                  dfcnkick_flyingkick
    2374 00012e70                   JJXM    HEADHOLD,               dfcnkick_flyingkick
    2375 00012eb0                   JJXM    HEADHELD,               dfcnkick_flyingkick
    2376 00012ef0                   JJXM    CHOKEHOLD,              dfcnkick_flyingkick
    2377 00012f30                   JJXM    PUPPET,                 dfcnkick_flyingkick
    2378 00012f70                   JJXM    PUPPET2,                dfcnkick_flyingkick
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   52

    2379 00012fb0                   JJXM    INAIR2,                 dfcnkick_flyingkick
    2380 00012ff0                   JJXM_END
    2381                    
    2382 00013010           dfcnkick_rets
    2383 00013010     0960          rets
    2384                    
    2385                    *****
    2386 00013020           dfcnkick_flyingkick
    2387                    
    2388 00013020     0d5f          calla   ck_ignore
         00013030 00000000! 
    2389 00013050     c800          jrc     dfcnz
         00013060     fe8f  
    2390                    
    2391 00013070     09e0          movi    und_flying_kick_anim,a0
         00013080 00000000! 
    2392 000130a0     0d5f          calla   change_anim1a
         000130b0 00000000! 
    2393                    
    2394 000130d0                   SETMODE INAIR
    2395                    
    2396 00013180                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2397                    
    2398 00013320     0960          rets
    2399                    
    2400                    
    2401                    *****************************************************************************
    2402                    *
    2403                    
    2404 00013330           mode_inair      ;2
    2405                    
    2406 00013330     0960          rets
    2407                    
    2408                    *****************************************************************************
    2409                    *
    2410                    
    2411 00013340           mode_attached   ;3
    2412                    
    2413 00013340     0d5f          calla   keep_attached
         00013350 00000000! 
    2414 00013370     cb12          jrnz    lbvhstill_attached
    2415                    
    2416 00013380     5600          clr     a0
    2417 00013390     b20d          move    a0,*a13(ATTACH_PROC),L
         000133a0     03e0  
    2418                    
    2419 000133b0                   SETMODE NORMAL
    2420                    
    2421 00013460     09c0          movi    MODE_NORMAL,a0
         00013470     0000  
    2422 00013480     b00d          move    a0,*a13(ANIMODE)
         00013490     0660  
    2423                    
    2424 000134a0           lbvhstill_attached
    2425                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   53

    2426 000134a0     0960          rets
    2427                    
    2428                    *****************************************************************************
    2429                    
    2430 000134b0           mode_onground   ;4
    2431                    
    2432 000134b0     0960          rets
    2433                    
    2434                    
    2435                    *****************************************************************************
    2436                    *
    2437                    * bouncing off ropes while running
    2438                    
    2439 000134c0           mode_bouncing   ;5
    2440                    
    2441 000134c0     5600          clr     a0
    2442 000134d0     b20d          move    a0,*a13(OBJ_XVEL),L
         000134e0     02d0  
    2443 000134f0     b20d          move    a0,*a13(OBJ_ZVEL),L
         00013500     0310  
    2444                    
    2445 00013510     b5a0          move    *a13(ANIMODE),a0
         00013520     0660  
    2446 00013530     1fe0          btst    MODE_END_BIT,a0
    2447 00013540     ca20          jrz     vtjgnot_ended
    2448                    
    2449 00013550     b5a0          move    *a13(MOVE_DIR),a0
         00013560     04b0  
    2450 00013570     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         00013580 0000000c  
    2451 000135a0     b00d          move    a0,*a13(MOVE_DIR)
         000135b0     04b0  
    2452                    
    2453 000135c0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000135d0     04d0  
    2454 000135e0     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         000135f0 fffffffc  
    2455 00013610     5401          or      a0,a1                   ;LEFT or RIGHT
    2456 00013620     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         00013630     04c0  
    2457                    
    2458 00013640     09e0          movi    und_run2_anim,a0
         00013650 00000000! 
    2459 00013670     0d5f          calla   change_anim1a
         00013680 00000000! 
    2460                    
    2461 000136a0                   SETMODE RUNNING
    2462                    
    2463                    ;       clr     a0
    2464                    ;       move    a0,*a13(GETUP_TIME)     ;in control
    2465                    
    2466 00013750           vtjgnot_ended
    2467 00013750     0960          rets
    2468                    
    2469                    *****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   54

    2470                    *
    2471                    * STANDING ON TOP OF TURNBUCKLE
    2472                    
    2473 00013760           mode_onturnbkl  ;6
    2474                    
    2475                    ;       ;check unint
    2476                    ;       move    *a13(ANIMODE),a14
    2477                    ;       btst    MODE_UNINT_BIT,a14
    2478                    ;       jrnz    qnycno_interrupt
    2479                    
    2480 00013760     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013770     0bc0  
    2481 00013780     1fc0          btst    PLAYER_DOWN_BIT,a0
    2482 00013790     ca12          jrz     qnycno_climbdown
    2483                    
    2484 000137a0     09e0          movi    und_climb_down_anim,a0
         000137b0 00000000! 
    2485 000137d0     0d5f          calla   change_anim1a
         000137e0 00000000! 
    2486                    
    2487 00013800                   SETMODE CLIMBTURNBKL
    2488                    
    2489 000138b0           qnycno_interrupt
    2490 000138b0     0960          rets
    2491                    
    2492 000138c0           qnycno_climbdown
    2493 000138c0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000138d0     0ba0  
    2494 000138e0     0b80          andi    011111b,a0
         000138f0 ffffffe0  
    2495 00013910     ca51          jrz     qnycz
    2496                    
    2497 00013920                   X32     a0
    2498 00013930     0b20          addi    qnycaction_table,a0
         00013940 00013a30' 
    2499 00013960     8600          move    *a0,a0,L
    2500 00013970     0920          call    a0
    2501                    
    2502 00013980     b5a5          move    *a13(PLYRNUM),a5
         00013990     0580  
    2503 000139a0     09e2          movi    JUMP_ROPES,a2
         000139b0 00000000! 
    2504 000139d0     09c0          movi    1000,a0
         000139e0     03e8  
    2505 000139f0     0d5f          calla   ADD_IF_SILENT
         00013a00 00000000! 
    2506                    
    2507 00013a20     0960          rets
    2508                    
    2509                    
    2510                    ;For standing on top of turnbuckles
    2511                    
    2512 00013a30           qnycaction_table
    2513 00013a30 00013e30'         .long   qnycz,qnycpunch,qnycblock,qnycblock                     ;0-3
    2514 00013ab0 00013e40'         .long   qnycsuper_punch,qnycsuper_punch,qnycblock,qnycblock     ;4-7
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   55

    2515 00013b30 00013e40'         .long   qnyckick,qnycpunchkick,qnycblock,qnycblock              ;8-11
    2516 00013bb0 00013e40'         .long   qnycsuper_punch,qnycpunchkick,qnycblock,qnycblock       ;12-15
    2517 00013c30 00013e40'         .long   qnycsuper_kick,qnycsuper_kick,qnycblock,qnycblock       ;16-19
    2518 00013cb0 00013e40'         .long   qnycgraboh,qnycgraboh,qnycblock,qnycblock               ;20-23
    2519 00013d30 00013e40'         .long   qnycsuper_kick,qnycpunchkick,qnycblock,qnycblock        ;24-27
    2520 00013db0 00013e40'         .long   qnycgraboh,qnycgraboh,qnycblock,qnycblock               ;28-31
    2521                    
    2522                    ************
    2523 00013e30           qnycz
    2524 00013e30     0960          rets
    2525                    
    2526                    ************
    2527 00013e40           qnycpunch               ;1
    2528 00013e40           qnycblock               ;2
    2529 00013e40           qnycsuper_punch ;4
    2530 00013e40           qnyckick                ;8
    2531 00013e40           qnycsuper_kick  ;16
    2532 00013e40           qnycgraboh
    2533 00013e40           qnycpunchkick
    2534                    
    2535 00013e40                   SETMODE INAIR
    2536                    
    2537 00013ef0     09e0          movi    und_tbukl_butt_drop_anim,a0
         00013f00 00000000! 
    2538 00013f20     0d5f          calla   change_anim1a
         00013f30 00000000! 
    2539                    
    2540 00013f50                   WRSND   W_TAKER,FLYKICK_T1,FLYKICK_T2
    2541                    
    2542 000140f0     0960          rets
    2543                    
    2544                    *****************************************************************************
    2545                    * blocking
    2546                    
    2547 00014100           mode_block      ;7
    2548                    
    2549 00014100     b5a0          move    *a13(BLOCK_TIME),a0
         00014110     0d30  
    2550 00014120     1020          inc     a0
    2551 00014130     b00d          move    a0,*a13(BLOCK_TIME)
         00014140     0d30  
    2552 00014150     0b40          cmpi    160,a0
         00014160     ff5f  
    2553 00014170     c413          jrlt    fjbuno
    2554                    
    2555 00014180     0d5f          calla   get_opp_plyrmode
         00014190 00000000! 
    2556 000141b0     0b40          cmpi    MODE_BLOCK,a0
         000141c0     fff8  
    2557 000141d0     cb0d          jrnz    fjbuno
    2558 000141e0     b5a0          move    *a13(CLOSEST_XDIST),a0
         000141f0     0370  
    2559 00014200     0b40          cmpi    61h,a0
         00014210     ff9e  
    2560 00014220     c508          jrge    fjbuno
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   56

    2561 00014230     0b40          cmpi    45,a0
         00014240     ffd2  
    2562 00014250     c405          jrlt    fjbuno
    2563 00014260     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00014270     0390  
    2564 00014280     0b40          cmpi    30,a0
         00014290     ffe1  
    2565 000142a0     c461          jrlt    fjbupunchblock
    2566                    
    2567 000142b0           fjbuno
    2568 000142b0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000142c0     0ba0  
    2569 000142d0     0b80          andi    011111b,a0
         000142e0 ffffffe0  
    2570 00014300     ca0c          jrz     fjbuno_interrupt
    2571                    
    2572                            ;press.  if block isn't down, let mode_normal handle it
    2573 00014310     4c02          move    a0,a2                   ;save a0 from ...val_down
    2574 00014320     b5a0          move    *a13(BUT_VAL_CUR),a0
         00014330     0b90  
    2575 00014340     1fc0          btst    PLAYER_BLOCK_BIT,a0
    2576 00014350     ca08          jrz     fjbuset_mode_normal
    2577 00014360     4c40          move    a2,a0                   ;restore a0 from ...val_down
    2578                    
    2579 00014370                   X32     a0
    2580 00014380     0b20          addi    fjbuaction_table,a0
         00014390 000144b0' 
    2581 000143b0     8600          move    *a0,a0,L
    2582 000143c0     0920          call    a0
    2583                    
    2584 000143d0           fjbuno_interrupt
    2585 000143d0     0960          rets
    2586                    
    2587 000143e0           fjbuset_mode_normal
    2588 000143e0                   SETMODE NORMAL
    2589 00014490     c000          jruc    mode_normal
         000144a0     f4c0  
    2590                    
    2591 000144b0           fjbuaction_table
    2592 000144b0 000148b0'         .long   fjbuz,fjbupunchblock,fjbuz      ;0-2
    2593 00014510 000148c0'         .long   fjbupunchblock          ;3
    2594 00014530 000148b0'         .long   fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz       ;4-10
    2595 00014610 000148b0'         .long   fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz       ;11-17
    2596 000146f0 000148b0'         .long   fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz       ;18-24
    2597 000147d0 000148b0'         .long   fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz,fjbuz       ;25-31
    2598                    
    2599                    ************
    2600 000148b0           fjbuz
    2601 000148b0     0960          rets
    2602                    
    2603                    ************
    2604 000148c0           fjbupunchblock  ;3
    2605                    *
    2606                    * MODE             DX  DZ       ACTION
    2607                    * ----------------------------------------------------
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   57

    2608                    * all                           push
    2609                    *
    2610                    
    2611                    ;This push has no collisions set!
    2612                    
    2613 000148c0                   SETMODE NORMAL
    2614                    
    2615 00014970     09e0          movi    und_4_push_anim,a0
         00014980 00000000! 
    2616 000149a0     0d5f          calla   change_anim1a
         000149b0 00000000! 
    2617                    
    2618 000149d0                   WRSND   W_TAKER,PUSH_T1,PUSH_T2
    2619                    
    2620 00014b70     0960          rets
    2621                    
    2622                    
    2623                    *****************************************************************************
    2624                    * taker with zero health
    2625                    
    2626 00014b80           mode_dizzy      ;8
    2627                    
    2628                    ;       move    *a13(GETUP_TIME),a0
    2629                    ;       jrnz    kodpstill_going
    2630                    ;
    2631                    ;       calla   clear_damage_log
    2632                    ;
    2633                    ;       clr     a0
    2634                    ;       move    a0,*a13(STARS_FLAG)
    2635                    ;
    2636                    ;       SETMODE NORMAL
    2637                    ;
    2638                    ;kodpstill_going
    2639 00014b80     0960          rets
    2640                    
    2641                    *****************************************************************************
    2642                    * opponent held overhead
    2643                    
    2644 00014b90           mode_oppoverhead ;10
    2645                    
    2646 00014b90     0960          rets
    2647                    
    2648                    *****************************************************************************
    2649                    *
    2650                    * CLIMBING UP OR DOWN THE TURNBUCKLE
    2651                    
    2652 00014ba0           mode_climbturnbkl       ;11
    2653                    
    2654 00014ba0     0960          rets
    2655                    
    2656                    
    2657                    *****************************************************************************
    2658                    
    2659 00014bb0           mode_waitanim   ;12
    2660                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   58

    2661 00014bb0     b5a0          move    *a13(ANIMODE),a0
         00014bc0     0660  
    2662 00014bd0     1fe0          btst    MODE_END_BIT,a0
    2663 00014be0     ca03          jrz     nqrtnot_ended
    2664                    
    2665 00014bf0     b7a0          move    *a13(CODE_ADDR),a0,L
         00014c00     0430  
    2666 00014c10     0920          call    a0
    2667                    
    2668 00014c20           nqrtnot_ended
    2669 00014c20     0960          rets
    2670                    
    2671                    
    2672                    *****************************************************************************
    2673                    
    2674 00014c30           mode_grapple    ;13
    2675                    
    2676 00014c30     0960          rets
    2677                    
    2678                    *****************************************************************************
    2679                    
    2680 00014c40           mode_master     ;14
    2681                    
    2682 00014c40     0d5f          calla   master_keep_attached    ;keep slave attached to me
         00014c50 00000000! 
    2683                    
    2684 00014c70     0960          rets
    2685                    
    2686                    *****************************************************************************
    2687                    
    2688 00014c80           mode_slave      ;15
    2689 00014c80     0960          rets
    2690                    
    2691                    *****************************************************************************
    2692                    
    2693 00014c90           mode_headhold   ;16
    2694 00014c90     b7a0          move    *a13(ANIBASE),a0,L
         00014ca0     0670  
    2695 00014cb0     0b60          cmpi    und_sliding_choke_anim,a0
         00014cc0 ffffffff! 
    2696 00014ce0     cb0a          jrnz    qibhnorm
    2697 00014cf0     b7a0          move    *a13(CUR_FRAME),a0,L
         00014d00     06c0  
    2698                            .ref    U2LN2A
    2699 00014d10     09e1          movi    U2LN2A+FR6,a1
         00014d20 000000c0! 
    2700 00014d40     8621          move    *a1,a1,L
    2701 00014d50     4820          cmp     a1,a0
    2702 00014d60     ca00          jrz     mode_chokehold
         00014d70     0146  
    2703 00014d80     0960          rets
    2704 00014d90           qibhnorm
    2705                    ;Bozo power move
    2706                            .ref    bozo_check
    2707 00014d90     0d5f          calla   bozo_check
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   59

         00014da0 00000000! 
    2708 00014dc0     c929          jrnc    qibhfail
    2709                    
    2710 00014dd0                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2711                    
    2712 00014f70     09e0          movi    und_neckbreaker_anim,a0
         00014f80 00000000! 
    2713 00014fa0     05ae          move    @PCNT,a14
         00014fb0 00000000! 
    2714 00014fd0     1fee          btst    0,a14
    2715 00014fe0     ca03          jrz     qibhtag
    2716 00014ff0     09e0          movi    und_pile_anim,a0
         00015000 00000000! 
    2717 00015020     0d5f  qibhtag calla   change_anim1a
         00015030 00000000! 
    2718                    
    2719 00015050     0960          rets
    2720                    
    2721 00015060           qibhfail
    2722 00015060     b7a0          move    *a13(WHOIHIT),a0,L
         00015070     0500  
    2723 00015080     b400          move    *a0(PLYRMODE),a0
         00015090     05c0  
    2724 000150a0     0b40          cmpi    MODE_HEADHELD,a0
         000150b0     ffec  
    2725 000150c0     cb10          jrnz    qibhexit
    2726                    
    2727                    ;       move    *a13(ATTACH_PROC),a10,L
    2728                    ;       jrz     qibhexit
    2729                    
    2730 000150d0     b5a0          move    *a13(ANIMODE),a0
         000150e0     0660  
    2731 000150f0     1fa0          btst    MODE_UNINT_BIT,a0
    2732 00015100     cb0b          jrnz    qibhno_interrupt
    2733                    
    2734 00015110     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00015120     0ba0  
    2735 00015130     0b80          andi    011111b,a0
         00015140 ffffffe0  
    2736 00015160                   X32     a0
    2737 00015170     0b20          addi    qibhaction_table,a0
         00015180 000153a0' 
    2738 000151a0     8600          move    *a0,a0,L
    2739 000151b0     0920          call    a0
    2740                    
    2741 000151c0           qibhno_interrupt
    2742 000151c0     0960          rets
    2743                    
    2744 000151d0           qibhexit
    2745 000151d0     b7ae          move    *a13(OBJ_ZPOS),a14,L
         000151e0     0140  
    2746 000151f0     0d0e          subi    [6,0],a14
         00015200 fff9ffff  
    2747 00015220     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00015230     0140  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   60

    2748                    
    2749 00015240     1941          movk    MOVE_DOWN_RIGHT,a1
    2750 00015250     b5a0          move    *a13(OBJ_CONTROL),a0
         00015260     0780  
    2751 00015270     1f60          btst    B_FLIPH,a0
    2752 00015280     ca01          jrz     qibhright
    2753 00015290     18c1          movk    MOVE_DOWN_LEFT,a1
    2754 000152a0     b02d  qibhright       move    a1,*a13(FACING_DIR)
         000152b0     04c0  
    2755 000152c0     b02d          move    a1,*a13(NEW_FACING_DIR)
         000152d0     04d0  
    2756                    
    2757 000152e0                   SETMODE NORMAL
    2758                    
    2759 00015390     0960          rets
    2760                    
    2761 000153a0           qibhaction_table
    2762 000153a0 000157a0'         .long   qibhz,qibhpunch,qibhblock,qibhblock                     ;0-3
    2763 00015420 00015950'         .long   qibhsuper_punch,qibhsuper_punch,qibhblock,qibhblock     ;4-7
    2764 000154a0 00015bb0'         .long   qibhkick,qibhpunchkick,qibhblock,qibhblock              ;8-11
    2765 00015520 00015950'         .long   qibhsuper_punch,qibhpunchkick,qibhblock,qibhblock       ;12-15
    2766 000155a0 00015d00'         .long   qibhsuper_kick,qibhsuper_kick,qibhblock,qibhblock       ;16-19
    2767 00015620 000157a0'         .long   qibhgraboh,qibhgraboh,qibhblock,qibhblock               ;20-23
    2768 000156a0 00015d00'         .long   qibhsuper_kick,qibhpunchkick,qibhblock,qibhblock        ;24-27
    2769 00015720 000157a0'         .long   qibhgraboh,qibhgraboh,qibhblock,qibhblock               ;28-31
    2770                    
    2771                    
    2772                    ************
    2773 000157a0           qibhblock
    2774 000157a0           qibhgraboh
    2775 000157a0           qibhz           ;0
    2776 000157a0     0960          rets
    2777                    
    2778                    ************
    2779                    
    2780 000157b0           qibhpunch               ;1
    2781                    ;If stick is toward opponent, then do quick punches
    2782 000157b0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000157c0 00000000! 
    2783 000157e0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000157f0     0bc0  
    2784 00015800     b5a1          move    *a13(NEW_FACING_DIR),a1
         00015810     04d0  
    2785 00015820     0b81          andi    0ch,a1
         00015830 fffffff3  
    2786 00015850     4801          cmp     a0,a1
    2787 00015860     cb07          jrnz    qibhtag2
    2788 00015870     09e0          movi    und_4_knee_butts_anim,a0
         00015880 00000000! 
    2789 000158a0     0d5f          calla   change_anim1a
         000158b0 00000000! 
    2790 000158d0     0960          rets
    2791                    
    2792 000158e0           qibhtag2
    2793                            .ref    und_4_knee2_anim
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   61

    2794 000158e0     09e0          movi    und_4_knee2_anim,a0
         000158f0 00000000! 
    2795 00015910     0d5f          calla   change_anim1a
         00015920 00000000! 
    2796 00015940     0960          rets
    2797                    
    2798                    ************
    2799 00015950           qibhsuper_punch ;4
    2800 00015950           do_pile
    2801                    ;This flag is only set if taker has done repeated uppercuts!
    2802                    
    2803 00015950     b5a0          move    *a13(USR_VAR2),a0
         00015960     0860  
    2804 00015970     ca0e          jrz     qibhupper
    2805                    
    2806 00015980     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00015990 00000000! 
    2807                    
    2808 000159b0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000159c0     0bc0  
    2809 000159d0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2810 000159e0     cadb          jrz     qibhz
    2811                    
    2812 000159f0     09e0          movi    und_pile_anim,a0
         00015a00 00000000! 
    2813 00015a20     0d5f          calla   change_anim1a
         00015a30 00000000! 
    2814 00015a50     0960          rets
    2815                    
    2816 00015a60           qibhupper
    2817 00015a60     b5a0          move    *a13(STICK_VAL_CUR),a0
         00015a70     0bc0  
    2818 00015a80     1fc0          btst    PLAYER_DOWN_BIT,a0
    2819 00015a90     cad0          jrz     qibhz
    2820                    
    2821                    ;       SPCDMG  D_UPRCUT/2,15
    2822                    
    2823 00015aa0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00015ab0 00000000! 
    2824 00015ad0                   FACE24  und,uppercut_anim
    2825 00015b70     0d5f          calla   change_anim1a
         00015b80 00000000! 
    2826 00015ba0     0960          rets
    2827                    
    2828                    
    2829 00015bb0           qibhpunchkick
    2830 00015bb0           qibhkick
    2831 00015bb0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00015bc0 00000000! 
    2832 00015be0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00015bf0     0bc0  
    2833 00015c00     1fc0          btst    PLAYER_DOWN_BIT,a0
    2834 00015c10     ca07          jrz     qibhknee
    2835                    
    2836 00015c20     09e0          movi    und_4_knee2_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   62

         00015c30 00000000! 
    2837 00015c50     0d5f          calla   change_anim1a
         00015c60 00000000! 
    2838 00015c80     0960          rets
    2839                    
    2840 00015c90           qibhknee
    2841 00015c90     09e0          movi    und_4_knee2_anim,a0
         00015ca0 00000000! 
    2842 00015cc0     0d5f          calla   change_anim1a
         00015cd0 00000000! 
    2843 00015cf0     0960          rets
    2844                    
    2845 00015d00           qibhsuper_kick  ;16
    2846                    ;If stick is toward opponent, then do quick knees
    2847                    ;       move    *a13(STICK_VAL_CUR),a0
    2848                    ;       move    *a13(NEW_FACING_DIR),a1
    2849                    ;       andi    0ch,a1
    2850                    ;       cmp     a0,a1
    2851                    ;       jrnz    qibhkick
    2852                    ;
    2853                    ;;Quick knees
    2854                    ;;      movi    dnk_3_knees_to_head_anim,a0
    2855                    ;       movi    und_4_knee_anim,a0
    2856                    ;       calla   change_anim1a
    2857                    
    2858 00015d00     0960          rets
    2859                    
    2860                    *****************************************************************************
    2861 00015d10           mode_puppet2    ;17
    2862                    
    2863                    ;       ;check for the head-grab breaker
    2864                    ;       move    *a13(BUT_VAL_DOWN),a0
    2865                    ;       btst    PLAYER_KICK_BIT,a0
    2866                    ;       jrz     vrjnout
    2867                    ;
    2868                    ;       ;check the time - must do it within 20 ticks
    2869                    ;       move    *a13(HEAD_GRAB_TIME),a14
    2870                    ;       move    @PCNT,a0
    2871                    ;       sub     a14,a0
    2872                    ;       cmpi    KICK_OUT,a0
    2873                    ;       jrgt    vrjnout
    2874                    ;
    2875                    ;       move    *a13(PLYR_TYPE),a14
    2876                    ;       cmpi    PTYPE_DRONE,a14
    2877                    ;       jrz     vrjnout
    2878                    ;
    2879                    ;       ;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
    2880                    ;       move    *a13(ATTACH_PROC),a0,L
    2881                    ;       clr     a14
    2882                    ;       move    a14,*a13(ATTACH_PROC),L
    2883                    ;       move    a14,*a0(ATTACH_PROC),L
    2884                    ;       movi    15,a14
    2885                    ;       move    a14,*a0(IMMOBILIZE_TIME)
    2886                    ;       SETMODE NORMAL
    2887                    ;       jruc    std_knee
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   63

    2888                    ;
    2889                    ;vrjnout
    2890 00015d10     0960          rets
    2891                    
    2892                    *****************************************************************************
    2893 00015d20           mode_headheld   ;19
    2894 00015d20     b5a0          move    *a13(ANIMODE),a0
         00015d30     0660  
    2895 00015d40     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2896 00015d50     cb80          janz    mode_choking
         00015d60 00017a60' 
    2897                    
    2898                    
    2899                    ;Bozo reversal
    2900 00015d80     0d5f          calla   bozo_check
         00015d90 00000000! 
    2901 00015db0     c932          jrnc    zdnqfail
    2902                    
    2903 00015dc0                   PUSH    a8
    2904 00015dd0     4da8          move    a13,a8
    2905 00015de0     0d5f          CALLA   DO_REVERSAL
         00015df0 00000000! 
    2906 00015e10     0d5f          CALLA   DO_REVERSAL_MESS
         00015e20 00000000! 
    2907 00015e40                   PULL    a8
    2908                    
    2909 00015e50                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2910                    
    2911 00015ff0     09e0          movi    und_neckbreaker_anim,a0
         00016000 00000000! 
    2912 00016020     05ae          move    @PCNT,a14
         00016030 00000000! 
    2913 00016050     1fee          btst    0,a14
    2914 00016060     ca03          jrz     zdnqtag
    2915 00016070     09e0          movi    und_pile_anim,a0
         00016080 00000000! 
    2916 000160a0     0d5f  zdnqtag calla   change_anim1a
         000160b0 00000000! 
    2917                    
    2918 000160d0     0960          rets
    2919 000160e0           zdnqfail
    2920                    
    2921                    ;He may have let me go by hitting his block butn!
    2922 000160e0     b7a0          move    *a13(ATTACH_PROC),a0,L
         000160f0     03e0  
    2923 00016100     cb0c          jrnz    zdnqno_luck
    2924                    
    2925                    ;Make sure this guy is on ground
    2926 00016110     b5a0          move    *a13(OBJ_YPOSINT),a0
         00016120     0130  
    2927 00016130     b5a1          move    *a13(GROUND_Y),a1
         00016140     0570  
    2928 00016150     4820          cmp     a1,a0                   ;a0-a1
    2929 00016160     c706          jrgt    zdnqno_luck
    2930                    
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   64

    2931                    ;hit_gnd
    2932                    
    2933 00016170     09e0          movi    und_3_head_held_stand_anim,a0
         00016180 00000000! 
    2934 000161a0     0d5f          calla   change_anim1a
         000161b0 00000000! 
    2935                    
    2936 000161d0           zdnqno_luck
    2937 000161d0     0960          rets
    2938                    
    2939                    *****************************************************************************
    2940 000161e0           mode_chokehold  ;24
    2941                    
    2942 000161e0     b7a0          move    *a13(ATTACH_PROC),a0,L
         000161f0     03e0  
    2943 00016200     ca00          jrz     wmqrlost_him
         00016210     016e  
    2944 00016220     b600          move    *a0(ATTACH_PROC),a0,L
         00016230     03e0  
    2945 00016240     49a0          cmp     a13,a0
    2946 00016250     cb00          jrne    wmqrlost_him
         00016260     0169  
    2947                    
    2948 00016270     b5a0          move    *a13(ANIMODE),a0
         00016280     0660  
    2949 00016290     1fa0          btst    MODE_UNINT_BIT,a0
    2950 000162a0     cb11          jrnz    wmqrno_interrupt
    2951                    
    2952 000162b0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000162c0     0ba0  
    2953 000162d0     0b80          andi    011111b,a0
         000162e0 ffffffe0  
    2954 00016300     ca0b          jrz     wmqrno_interrupt
    2955                    
    2956 00016310     b7a1          move    *a13(ATTACH_PROC),a1,L
         00016320     03e0  
    2957 00016330     1bce          movk    30,a14
    2958 00016340     b1c1          move    a14,*a1(IMMOBILIZE_TIME)
         00016350     0ae0  
    2959                    
    2960 00016360                   X32     a0
    2961 00016370     0b20          addi    wmqraction_table,a0
         00016380 000163d0' 
    2962 000163a0     8600          move    *a0,a0,L
    2963 000163b0     0920          call    a0
    2964                    
    2965 000163c0           wmqrno_interrupt
    2966 000163c0     0960          rets
    2967                    
    2968 000163d0           wmqraction_table
    2969 000163d0 000167d0'         .long   wmqrz,wmqrpunch,wmqrblock,wmqrblock                     ;0-3
    2970 00016450 00016f00'         .long   wmqrsuper_punch,wmqrsuper_punch,wmqrblock,wmqrblock     ;4-7
    2971 000164d0 00017490'         .long   wmqrkick,wmqrpunchkick,wmqrblock,wmqrblock              ;8-11
    2972 00016550 00016f00'         .long   wmqrsuper_punch,wmqrpunchkick,wmqrblock,wmqrblock       ;12-15
    2973 000165d0 000172d0'         .long   wmqrsuper_kick,wmqrsuper_kick,wmqrblock,wmqrblock       ;16-19
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   65

    2974 00016650 00016f00'         .long   wmqrgraboh,wmqrgraboh,wmqrblock,wmqrblock               ;20-23
    2975 000166d0 000172d0'         .long   wmqrsuper_kick,wmqrpunchkick,wmqrblock,wmqrblock        ;24-27
    2976 00016750 00016f00'         .long   wmqrgraboh,wmqrgraboh,wmqrblock,wmqrblock               ;28-31
    2977                    
    2978                    ************
    2979 000167d0           wmqrz           ;0
    2980 000167d0           wmqrblock               ;2
    2981 000167d0     0960          rets
    2982                    
    2983                    ************
    2984 000167e0           wmqrpunch               ;1
    2985 000167e0           wmqrpunchkick
    2986                    
    2987 000167e0     5600          clr     a0
    2988 000167f0     b20d          move    a0,*a13(ATTACH_PROC),L
         00016800     03e0  
    2989                    
    2990 00016810                   SETMODE NORMAL
    2991                    
    2992 000168c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000168d0     0bc0  
    2993 000168e0     1fe0          btst    MOVE_UP_BIT,a0
    2994 000168f0     ca3c          jrz     wmqrreg
    2995                    
    2996 00016900     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00016910 00000000! 
    2997                    
    2998 00016930                   SETMODE HEADHOLD
    2999                    
    3000 000169e0     b7a0          move    *a13(WHOIHIT),a0,L
         000169f0     0500  
    3001 00016a00     09ce          movi    MODE_HEADHELD,a14
         00016a10     0013  
    3002 00016a20     b1c0          move    a14,*a0(PLYRMODE)
         00016a30     05c0  
    3003                    
    3004                    ;Make sure victim knows he is not in chokehold anymore
    3005 00016a40     b40e          move    *a0(ANIMODE),a14
         00016a50     0660  
    3006 00016a60     0b8e          andni   MODE_NOGRAVITY,a14
         00016a70 00000020  
    3007 00016a90     b1c0          move    a14,*a0(ANIMODE)
         00016aa0     0660  
    3008                    
    3009 00016ab0     09e0          movi    und_4_knee_butts_anim,a0
         00016ac0 00000000! 
    3010 00016ae0     0d5f          calla   change_anim1a
         00016af0 00000000! 
    3011 00016b10                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    3012                    
    3013 00016cb0     0960          rets
    3014 00016cc0           wmqrreg
    3015 00016cc0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00016cd0 00000000! 
    3016 00016cf0     09e0          movi    und_2_butt_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   66

         00016d00 00000000! 
    3017 00016d20     0d5f          calla   change_anim1a
         00016d30 00000000! 
    3018 00016d50                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    3019                    
    3020 00016ef0     0960          rets
    3021                    
    3022                    ************
    3023 00016f00           wmqrsuper_punch ;4
    3024 00016f00           wmqrgraboh
    3025                    
    3026                    ;Check for uppercut
    3027 00016f00     b5a0          move    *a13(STICK_VAL_CUR),a0
         00016f10     0bc0  
    3028 00016f20     1fc0          btst    MOVE_DOWN_BIT,a0
    3029 00016f30     ca8a          jrz     wmqrpunch
    3030                    
    3031 00016f40     5600          clr     a0
    3032 00016f50     b20d          move    a0,*a13(ATTACH_PROC),L
         00016f60     03e0  
    3033                    
    3034 00016f70                   SETMODE NORMAL
    3035                    
    3036 00017020     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017030 00000000! 
    3037 00017050                   FACE24  und,uppercut_anim
    3038 000170f0     0d5f          calla   change_anim1
         00017100 00000000! 
    3039                    
    3040 00017120                   WRSND   W_TAKER,HDBUTT_T1,HDBUTT_T2
    3041 000172c0     0960          rets
    3042                    
    3043 000172d0           wmqrsuper_kick  ;16
    3044                    ;If stick is toward opponent, then do quick punches
    3045 000172d0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000172e0     0bc0  
    3046 000172f0     1fc0          btst    PLAYER_DOWN_BIT,a0
    3047 00017300     cb30          jrnz    wmqrtag
    3048 00017310     5600          clr     a0
    3049 00017320     b20d          move    a0,*a13(ATTACH_PROC),L
         00017330     03e0  
    3050                    
    3051 00017340                   SETMODE NORMAL
    3052                    
    3053 000173f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017400 00000000! 
    3054 00017420     09e0          movi    und_2_knee_anim,a0
         00017430 00000000! 
    3055 00017450     0d5f          calla   change_anim1a
         00017460 00000000! 
    3056 00017480     0960          rets
    3057                    
    3058 00017490           wmqrkick                ;8
    3059                    ;       move    *a13(STICK_VAL_CUR),a0
    3060                    ;       btst    PLAYER_DOWN_BIT,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   67

    3061                    ;       jrnz    wmqrtag0
    3062                    
    3063 00017490     5600          clr     a0
    3064 000174a0     b20d          move    a0,*a13(ATTACH_PROC),L
         000174b0     03e0  
    3065                    
    3066 000174c0                   SETMODE NORMAL
    3067                    
    3068 00017570     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017580 00000000! 
    3069 000175a0     09e0          movi    und_2_knee_anim,a0
         000175b0 00000000! 
    3070 000175d0     0d5f          calla   change_anim1a
         000175e0 00000000! 
    3071 00017600     0960          rets
    3072                    
    3073                    ;wmqrtag0
    3074                    ;       SETMODE NORMAL
    3075                    ;
    3076                    ;       CALLA   FIND_AND_KILL_ENDLESS
    3077                    ;
    3078                    ;       movi    und_choke_face_slam_anim,a0
    3079                    ;       calla   change_anim1a
    3080                    ;
    3081                    ;       WRSND   W_TAKER,KICK_T1,KICK_T2
    3082                    ;
    3083                    ;       rets
    3084 00017610           wmqrtag
    3085 00017610                   SETMODE NORMAL
    3086                    
    3087 000176c0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000176d0 00000000! 
    3088 000176f0     09e0          movi    und_chokeslam_anim,a0
         00017700 00000000! 
    3089 00017720     0d5f          calla   change_anim1a
         00017730 00000000! 
    3090                    
    3091 00017750                   WRSND   W_TAKER,KICK_T1,KICK_T2
    3092                    
    3093 000178f0     0960          rets
    3094                    
    3095                    ************
    3096                    
    3097 00017900           wmqrlost_him
    3098 00017900     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017910 00000000! 
    3099 00017930     5600          clr     a0
    3100 00017940     b20d          move    a0,*a13(ATTACH_PROC),L
         00017950     03e0  
    3101                    
    3102 00017960                   SETMODE NORMAL
    3103 00017a10     09c0          movi    MODE_NORMAL,a0
         00017a20     0000  
    3104 00017a30     b00d          move    a0,*a13(ANIMODE)
         00017a40     0660  
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   68

    3105                    
    3106 00017a50     0960          rets
    3107                    
    3108                    
    3109                    *****************************************************************************
    3110 00017a60            SUBR   mode_choking    ;25
    3111                    
    3112 00017a60     b7a0          move    *a13(ATTACH_PROC),a0,L
         00017a70     03e0  
    3113 00017a80     ca05          jrz     hseifall_out
    3114 00017a90     b600          move    *a0(ATTACH_PROC),a0,L
         00017aa0     03e0  
    3115 00017ab0     49a0          cmp     a13,a0
    3116 00017ac0     cb01          jrne    hseifall_out
    3117                    
    3118                    ;       move    *a13(GETUP_TIME),a0
    3119                    ;       jrz     hseifall_out
    3120 00017ad0     0960          rets
    3121                    
    3122                    
    3123 00017ae0           hseifall_out
    3124 00017ae0     5600          clr     a0
    3125 00017af0     b20d          move    a0,*a13(ATTACH_PROC),L
         00017b00     03e0  
    3126                    
    3127 00017b10     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017b20 00000000! 
    3128 00017b40                   SETMODE NORMAL
    3129 00017bf0     09c0          movi    MODE_NORMAL,a0
         00017c00     0000  
    3130 00017c10     b00d          move    a0,*a13(ANIMODE)
         00017c20     0660  
    3131                    
    3132 00017c30     0960          rets
    3133                    
    3134                    
    3135                    *****************************************************************************
    3136                    
    3137                    ;lsggVEL        equ     30000h          ;38000h ;30000h
    3138                    ;lsggDVEL       equ     21f0eh          ;27978h ;21f0eh
    3139                    ;lsggVEL        equ     38000h          ;38000h ;30000h
    3140                    ;lsggDVEL       equ     30000h          ;27978h ;21f0eh
    3141          0003a000  lsggVEL equ     3a000h          ;38000h ;30000h
    3142          00031000  lsggDVEL        equ     31000h          ;27978h ;21f0eh
    3143                    
    3144                    
    3145 00017c40            SUBR und_velocity_table
    3146                    
    3147                    ;               X,      Z
    3148                    
    3149 00017c40 00000000          .long   0,      -lsggVEL        ;0 UP
    3150                    
    3151 00017c80 00031000          .long   lsggDVEL,       -lsggDVEL       ;1 UP-RIGHT
    3152                    
    3153 00017cc0 0003a000          .long   lsggVEL,        0       ;2 RIGHT
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   69

    3154                    
    3155 00017d00 00031000          .long   lsggDVEL,       lsggDVEL        ;3 DOWN-RIGHT
    3156                    
    3157 00017d40 00000000          .long   0,      lsggVEL ;4 DOWN
    3158                    
    3159 00017d80 fffcf000          .long   -lsggDVEL,      lsggDVEL        ;5 DOWN-LEFT
    3160                    
    3161 00017dc0 fffc6000          .long   -lsggVEL,       0       ;6 LEFT
    3162                    
    3163 00017e00 fffcf000          .long   -lsggDVEL,      -lsggDVEL       ;7 UP-LEFT
    3164                    
    3165                    
    3166                    *****************************************************************************
    3167                    
    3168 00017e40            SUBR und_rotate_anims_table
    3169                    ; old = up right
    3170 00017e40 00000000!         .long   und_stand2_anim         ;new = up right
    3171 00017e60 00000000!         .long   und_2_to_4_turn_anim    ;    = down right
    3172 00017e80 00000000!         .long   und_2_to_6_turn_anim    ;    = down left
    3173 00017ea0 00000000!         .long   und_2_to_8_turn_anim    ;    = up left
    3174                    
    3175                    ; old = down right
    3176 00017ec0 00000000!         .long   und_4_to_2_turn_anim    ;new = up right
    3177 00017ee0 00000000!         .long   und_stand4_anim         ;    = down right
    3178 00017f00 00000000!         .long   und_4_to_6_turn_anim    ;    = down left
    3179 00017f20 00000000!         .long   und_4_to_8_turn_anim    ;    = up left
    3180                    
    3181                    ; old = down left
    3182 00017f40 00000000!         .long   und_6_to_2_turn_anim    ;new = up right
    3183 00017f60 00000000!         .long   und_6_to_4_turn_anim    ;    = down right
    3184 00017f80 00000000!         .long   und_stand6_anim         ;    = down left
    3185 00017fa0 00000000!         .long   und_6_to_8_turn_anim    ;    = up left
    3186                    
    3187                    ; old = up left
    3188 00017fc0 00000000!         .long   und_8_to_2_turn_anim    ;new = up right
    3189 00017fe0 00000000!         .long   und_8_to_4_turn_anim    ;    = down right
    3190 00018000 00000000!         .long   und_8_to_6_turn_anim    ;    = down left
    3191 00018020 00000000!         .long   und_stand8_anim         ;    = up left
    3192                    
    3193                    
    3194 00018040            SUBR und_leg_anims_table
    3195                    ;  MOVE
    3196                    ;(huap1 - UP)                           FACING
    3197 00018040 00000000!         .long   und_walk1_f2_anim       ;1 (UP)
    3198 00018060 00000000!         .long   und_walk1_f2_anim       ;2 (UP_RIGHT)
    3199 00018080 00000000!         .long   und_walk1_f4_anim       ;3 (RIGHT)
    3200 000180a0 00000000!         .long   und_walk1_f4_anim       ;4 (DOWN_RIGHT)
    3201 000180c0 00000000!         .long   und_walk1_f4_anim       ;5 (DOWN)
    3202 000180e0 00000000!         .long   und_walk1_f4_anim       ;6 (DOWN_LEFT)
    3203 00018100 00000000!         .long   und_walk1_f2_anim       ;7 (LEFT)
    3204 00018120 00000000!         .long   und_walk1_f2_anim       ;8 (UP-LEFT)
    3205                    
    3206                    ;(huap2 - UP-RIGHT)
    3207 00018140 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    3208 00018160 00000000!         .long   und_walk2_f2_anim       ;2 (UP_RIGHT)
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   70

    3209 00018180 00000000!         .long   und_walk2_f2_anim       ;3 (RIGHT)
    3210 000181a0 00000000!         .long   und_walk2_f4_anim       ;4 (DOWN_RIGHT)
    3211 000181c0 00000000!         .long   und_walk8_f4_anim       ;5 (DOWN)
    3212 000181e0 00000000!         .long   und_walk8_f4_anim       ;6 (DOWN_LEFT)
    3213 00018200 00000000!         .long   und_walk4_f2_anim       ;7 (LEFT)
    3214 00018220 00000000!         .long   und_walk4_f2_anim       ;8 (UP-LEFT)
    3215                    
    3216                    ;(huap3 - RIGHT)
    3217 00018240 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    3218 00018260 00000000!         .long   und_walk2_f2_anim       ;2 (UP_RIGHT)
    3219 00018280 00000000!         .long   und_walk2_f2_anim       ;3 (RIGHT)
    3220 000182a0 00000000!         .long   und_walk4_f4_anim       ;4 (DOWN_RIGHT)
    3221 000182c0 00000000!         .long   und_walk4_f4_anim       ;5 (DOWN)
    3222 000182e0 00000000!         .long   und_walk8_f4_anim       ;6 (DOWN_LEFT)
    3223 00018300 00000000!         .long   und_walk6_f2_anim       ;7 (LEFT)
    3224 00018320 00000000!         .long   und_walk6_f2_anim       ;8 (UP-LEFT)
    3225                    
    3226                    
    3227                    ;(huap4 - DOWN-RIGHT)
    3228 00018340 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    3229 00018360 00000000!         .long   und_walk8_f2_anim       ;2 (UP_RIGHT)
    3230 00018380 00000000!         .long   und_walk4_f4_anim       ;3 (RIGHT)
    3231 000183a0 00000000!         .long   und_walk4_f4_anim       ;4 (DOWN_RIGHT)
    3232 000183c0 00000000!         .long   und_walk2_f4_anim       ;5 (DOWN)
    3233 000183e0 00000000!         .long   und_walk6_f4_anim       ;6 (DOWN_LEFT)
    3234 00018400 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    3235 00018420 00000000!         .long   und_walk6_f2_anim       ;8 (UP-LEFT)
    3236                    
    3237                    ;(huap5 - DOWN)
    3238 00018440 00000000!         .long   und_walk5_f2_anim       ;1 (UP)
    3239 00018460 00000000!         .long   und_walk5_f2_anim       ;2 (UP_RIGHT)
    3240 00018480 00000000!         .long   und_walk5_f4_anim       ;3 (RIGHT)
    3241 000184a0 00000000!         .long   und_walk5_f4_anim       ;4 (DOWN_RIGHT)
    3242 000184c0 00000000!         .long   und_walk5_f4_anim       ;5 (DOWN)
    3243 000184e0 00000000!         .long   und_walk5_f4_anim       ;6 (DOWN_LEFT)
    3244 00018500 00000000!         .long   und_walk5_f2_anim       ;7 (LEFT)
    3245 00018520 00000000!         .long   und_walk5_f2_anim       ;8 (UP-LEFT)
    3246                    
    3247                    ;(huap6 - DOWN-LEFT)
    3248 00018540 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    3249 00018560 00000000!         .long   und_walk6_f2_anim       ;2 (UP_RIGHT)
    3250 00018580 00000000!         .long   und_walk2_f2_anim       ;3 (RIGHT)
    3251 000185a0 00000000!         .long   und_walk6_f4_anim       ;4 (DOWN_RIGHT)
    3252 000185c0 00000000!         .long   und_walk2_f4_anim       ;5 (DOWN)
    3253 000185e0 00000000!         .long   und_walk4_f4_anim       ;6 (DOWN_LEFT)
    3254 00018600 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    3255 00018620 00000000!         .long   und_walk8_f2_anim       ;8 (UP-LEFT)
    3256                    
    3257                    ;(huap7 - LEFT)
    3258 00018640 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    3259 00018660 00000000!         .long   und_walk6_f2_anim       ;2 (UP_RIGHT)
    3260 00018680 00000000!         .long   und_walk6_f2_anim       ;3 (RIGHT)
    3261 000186a0 00000000!         .long   und_walk8_f4_anim       ;4 (DOWN_RIGHT)
    3262 000186c0 00000000!         .long   und_walk4_f4_anim       ;5 (DOWN)
    3263 000186e0 00000000!         .long   und_walk4_f4_anim       ;6 (DOWN_LEFT)
TMS340 COFF Macro Assembler Version 6.10     Wed Nov 01 05:53:53 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   71

    3264 00018700 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    3265 00018720 00000000!         .long   und_walk2_f2_anim       ;8 (UP-LEFT)
    3266                    
    3267                    ;(huap8 - UP-LEFT)
    3268 00018740 00000000!         .long   und_walk2_f2_anim       ;1 (UP)
    3269 00018760 00000000!         .long   und_walk4_f2_anim       ;2 (UP_RIGHT)
    3270 00018780 00000000!         .long   und_walk6_f2_anim       ;3 (RIGHT)
    3271 000187a0 00000000!         .long   und_walk8_f4_anim       ;4 (DOWN_RIGHT)
    3272 000187c0 00000000!         .long   und_walk6_f4_anim       ;5 (DOWN)
    3273 000187e0 00000000!         .long   und_walk2_f4_anim       ;6 (DOWN_LEFT)
    3274 00018800 00000000!         .long   und_walk2_f2_anim       ;7 (LEFT)
    3275 00018820 00000000!         .long   und_walk2_f2_anim       ;8 (UP-LEFT)
    3276                    
    3277                    
    3278 00018840            SUBR und_torso_anims_table
    3279                    ; old = up right
    3280 00018840 00000000!         .long   und_torso2_anim         ;new = up right
    3281 00018860 00000000!         .long   und_2_to_4_turn2_anim   ;    = down right
    3282 00018880 00000000!         .long   und_2_to_6_turn2_anim   ;    = down left
    3283 000188a0 00000000!         .long   und_2_to_8_turn2_anim   ;    = up left
    3284                    
    3285                    ; old = down right
    3286 000188c0 00000000!         .long   und_4_to_2_turn2_anim   ;new = up right
    3287 000188e0 00000000!         .long   und_torso4_anim         ;    = down right
    3288 00018900 00000000!         .long   und_4_to_6_turn2_anim   ;    = down left
    3289 00018920 00000000!         .long   und_4_to_8_turn2_anim   ;    = up left
    3290                    
    3291                    ; old = down left
    3292 00018940 00000000!         .long   und_6_to_2_turn2_anim   ;new = up right
    3293 00018960 00000000!         .long   und_6_to_4_turn2_anim   ;    = down right
    3294 00018980 00000000!         .long   und_torso6_anim         ;    = down left
    3295 000189a0 00000000!         .long   und_6_to_8_turn2_anim   ;    = up left
    3296                    
    3297                    ; old = up left
    3298 000189c0 00000000!         .long   und_8_to_2_turn2_anim   ;new = up right
    3299 000189e0 00000000!         .long   und_8_to_4_turn2_anim   ;    = down right
    3300 00018a00 00000000!         .long   und_8_to_6_turn2_anim   ;    = down left
    3301 00018a20 00000000!         .long   und_torso8_anim         ;    = up left
    3302                    
    3303                    
    3304                    ******************************************************************************
    3305                    
    3306                            .end

 No Errors,  No Warnings
