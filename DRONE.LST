TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                     ;Yoko tb on out of ring opp
       2                     ;UT pin bug
       3                     ;Atk sometimes instead of blk
       4                     ;No leap head grab
       5                     ;Drones wait in your face for too long.
       6                     ;DL blk for hiptoss
       7                     ;Harder
       8                     ;Atk down opp
       9                     ;Anti run code, esp out of ctrl
      10                     ;Fling and chase
      11                     ;Short repeat atks
      12                     ;Do more head holds from in close - thru block
      13                     ;Seek on a blocker, do headhold
      14                     ;Make multi drones easier...
      15                     ;Too many runs
      16                     ;Break out of runs more...
      17                     ;Sometimes, drone won't move from top of TB
      18                     ;Don't let go charge moves if opp is blocking
      19                     ;In multi-wrestler matches, delay longer on power moves from headhold or revs
      20                     ;Ignore pushes from opponent, try an attack
      21                     ;Pin fast
      22                     ;Multi wres spacing
      23                     ;Get in ring
      24                     ;Check blocking
      25                     ;Slide htoss on flying opp
      26                            .file   "drone.asm"
      28                            .width  132
      29                            .option b,d,l,t
      30                            .mnolist
      31                    
      32                    
      33                            .include        "macros.h"
      34                            .include        "mproc.equ"
      35                            .include        "display.equ"
      36                            .include        "gsp.equ"
      37                            .include        "sys.equ"
      38                            .include        "audit.equ"
      39                            .include        "game.equ"
      40                            .include        "anim.equ"
      41                            .include        "plyr.equ"
      42                            .include        "ring.equ"
      43                            .include        "damage.equ"
      44                    
      45                    
      46                    
      47                    
      48                    
      49                            .ref    process_ptrs,PSTATUS,PSTATUS2
      50                            .ref    PCNT,round_tickcount
      51                    
      52                            .ref    CHECK_COMBO_GO
      53                    
      54                            .ref    GET_ADJ
      55                            .ref    p1winstreakd,p1rounds,current_round
      56                            .ref    LADDER,CURRENT_LADDER
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    2

      57                    
      58                            .ref    change_anim1a
      59                            .ref    hrt_4_taunt_anim,rzr_4_taunt_anim,und_4_taunt_anim
      60                            .ref    yok_4_taunt_anim,shn_4_taunt_anim,bam_4_taunt_anim
      61                            .ref    dnk_4_taunt_anim,lex_4_taunt_anim
      62                    
      63                    
      64                    
      65                    
      66                    
      67 00000000                   BSSX    droneoff        ,16             ;!0=Drone code off
      68 00000010                   .bss    atkcnt_t,AT_NUM*NUM_WRES*16     ;# times hit by each atk
      69                    
      70                    
      71                    
      72              0000  BLKTEST .equ    0
      73                    
      74              0020  U_M     .equ    MOVE_UP<<5
      75              0040  D_M     .equ    MOVE_DOWN<<5
      76              0080  L_M     .equ    MOVE_LEFT<<5
      77              0100  R_M     .equ    MOVE_RIGHT<<5
      78                    
      79              0001  P_M     .equ    PLAYER_PUNCH_VAL
      80              0002  B_M     .equ    PLAYER_BLOCK_VAL
      81              0004  SP_M    .equ    PLAYER_SPUNCH_VAL
      82              0008  K_M     .equ    PLAYER_KICK_VAL
      83              0010  SK_M    .equ    PLAYER_SKICK_VAL
      84                    
      85                            .if     MODE_NORMAL!=0
      86                            .emsg   "FIX code!"
      87                            .endif
      88                    
      89                    
      90 00000000                   .text
      91                    
      92                    
      93 00000000            SUBR   drone_main
      94                    
      95                            .if     DEBUG
      96                            move    @droneoff,a0
      97                            jrnz    plqbxx
      98                            .endif
      99                    
     100                    
     101 00000000     b5a6          move    *a13(DRN_BUT),a6        ;A6=Old buts
         00000010     0960  
     102 00000020     b5a7          move    *a13(DRN_JOY),a7        ;A7=Old joy
         00000030     0990  
     103                    
     104 00000040     b5ae          move    *a13(CLOSEST_NUM),a14
         00000050     03a0  
     105 00000060                   X32     a14
     106 00000070     0b2e          addi    process_ptrs,a14
         00000080 00000000! 
     107 000000a0     87c8          move    *a14,a8,L               ;A8=*Closest's proc
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    3

     108                    
     109 000000b0     b5aa          move    *a13(DRN_SKILL),a10
         000000c0     0a70  
     110 000000d0                   X16     a10                     ;A10=Skill for indexing (*16)
     111                    
     112 000000e0     b5a0          move    *a13(PLYRMODE),a0
         000000f0     05c0  
     113 00000100     4e06          move    a0,b6                   ;B6=My pmode
     114 00000110     b500          move    *a8(PLYRMODE),a0
         00000120     05c0  
     115 00000130     4e07          move    a0,b7                   ;B7=Opp pmode
     116                    
     117                    
     118 00000140     09e2          movi    process_ptrs,a2
         00000150 00000000! 
     119 00000170     18f0          movk    NUM_WRES,b0
     120 00000180     5652          clr     b2                      ;B2=Team dist ranking (0-2)
     121 00000190     5673          clr     b3                      ;B3=# alive on my team (0-3)
     122 000001a0           plqbfflp
     123 000001a0     9643          move    *a2+,a3,L
     124 000001b0     ca18          jrz     plqbffnxt
     125                    
     126 000001c0     b5a0          move    *a13(PLYR_SIDE),a0
         000001d0     05b0  
     127 000001e0     b461          move    *a3(PLYR_SIDE),a1
         000001f0     05b0  
     128 00000200     4801          cmp     a0,a1
     129 00000210     cb12          jrne    plqbffnxt                       ;Not on my team?
     130                    
     131 00000220     b460          move    *a3(PLYRMODE),a0
         00000230     05c0  
     132 00000240     1520          subk    MODE_DEAD,a0
     133 00000250     ca0e          jreq    plqbffnxt
     134                    
     135 00000260     1033          addk    1,b3
     136                    
     137 00000270     b5a0          move    *a13(CLOSEST_NUM),a0
         00000280     03a0  
     138 00000290     b461          move    *a3(CLOSEST_NUM),a1
         000002a0     03a0  
     139 000002b0     4801          cmp     a0,a1
     140 000002c0     cb07          jrne    plqbffnxt                       ;Diff opponents?
     141                    
     142 000002d0     b5a0          move    *a13(CLOSEST_DIST),a0
         000002e0     0360  
     143 000002f0     b461          move    *a3(CLOSEST_DIST),a1
         00000300     0360  
     144 00000310     4820          cmp     a1,a0
     145 00000320     c601          jrle    plqbffnxt                       ;I'm closer?
     146                    
     147 00000330     1032          addk    1,b2
     148 00000340           plqbffnxt
     149 00000340     3f70          dsj     b0,plqbfflp
     150                    
     151 00000350           plqbffdn
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    4

     152 00000350     4c52          move    b2,b2
     153 00000360     ca0c          jrz     plqbffdoit                      ;I'm closest?
     154                    
     155 00000370     b7a9          move    *a13(DRN_ACT_p),a9,L
         00000380     0a10  
     156 00000390     cb0d          jrnz    plqbffx                 ;Script running?
     157                    
     158 000003a0     b5a0          move    *a13(DRN_MODE),a0
         000003b0     0a30  
     159 000003c0     09c1          movi    -3,a1
         000003d0     fffd  
     160 000003e0     b02d          move    a1,*a13(DRN_MODE)       ;Set mode
         000003f0     0a30  
     161 00000400     1060          addk    3,a0
     162 00000410     cb2a          jrne    plqbnewmdm3             ;Init hang back?
     163 00000420     c004          jruc    plqbffx
     164                    
     165 00000430           plqbffdoit
     166 00000430     b5a0          move    *a13(DRN_MODE),a0
         00000440     0a30  
     167 00000450     1060          addk    3,a0
     168 00000460     ca0d          jreq    plqbnewmd                       ;Set new mode if in hang back?
     169                    
     170 00000470           plqbffx
     171                    
     172 00000470     05a0          move    @PCNT,a0
         00000480 00000000! 
     173 000004a0     2760          sll     32-5,a0
     174 000004b0     cb38          jrnz    plqbnomdchk
     175                    
     176 000004c0     1860          movk    3,a0
     177 000004d0     0d3f          callr   rnd
         000004e0     1101  
     178 000004f0     cb34          jrnz    plqbnomdchk
     179                    
     180 00000500     b5a0          move    *a13(DRN_MODE),a0
         00000510     0a30  
     181 00000520     1060          addk    3,a0
     182 00000530     c618          jrle    plqbmcnosc                      ;Hang back?
     183 00000540           plqbnewmd
     184 00000540     1820          movk    1,a0                    ;No aggressive
     185 00000550     07a1          move    @CURRENT_LADDER,a1,L    ;* to position
         00000560 00000000! 
     186 00000580     0b61          cmpi    LADDER,a1
         00000590 ffffffff! 
     187 000005b0     ca05          jreq    plqbmdeasy                      ;1st ladder?
     188                    
     189 000005c0     1860          movk    3,a0                    ;Range
     190 000005d0     0b4a          cmpi    13*16,a10
         000005e0     ff2f  
     191 000005f0     c601          jrle    plqbmdeasy
     192 00000600     1020          addk    1,a0                    ;More aggressive
     193 00000610           plqbmdeasy
     194 00000610     0d3f          callr   rndrng0
         00000620     10fb  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    5

     195 00000630     1440          subk    2,a0
     196 00000640     b00d          move    a0,*a13(DRN_MODE)       ;-2 to 2
         00000650     0a30  
     197                    
     198 00000660     b7a9          move    *a13(DRN_ACT_p),a9,L
         00000670     0a10  
     199 00000680     cb03          jrnz    plqbmcnosc                      ;Script running?
     200 00000690     5600          clr     a0
     201 000006a0     b00d          move    a0,*a13(DRN_JOY)        ;So we don't walk into ropes
         000006b0     0990  
     202 000006c0           plqbmcnosc
     203 000006c0           plqbnewmdm3
     204 000006c0     1882          movk    4,a2                    ;Rgt side
     205 000006d0     b5a0          move    *a13(OBJ_XPOSINT),a0
         000006e0     0110  
     206 000006f0     b501          move    *a8(OBJ_XPOSINT),a1
         00000700     0110  
     207 00000710     4420          sub     a1,a0
     208 00000720     c501          jrge    plqbmetorgt
     209 00000730     1982          movk    12,a2                   ;Left side
     210 00000740           plqbmetorgt
     211 00000740     b04d          move    a2,*a13(DRN_SEEKDIR)
         00000750     0a50  
     212                    
     213 00000760     1880          movk    4,a0
     214 00000770     0d3f          callr   rndrng0
         00000780     10e5  
     215                    
     216 00000790     b5a1          move    *a13(DRN_MODE),a1
         000007a0     0a30  
     217 000007b0     1061          addk    3,a1
     218 000007c0     cb05          jrne    plqbnodhb                       ;!Hang back?
     219 000007d0                   ANDK    1,a0                    ;Make 3-4 or 4-5
     220 000007f0     1040          addk    2,a0
     221 00000800     4e5e          move    b2,a14
     222 00000810     41c0          add     a14,a0
     223 00000820           plqbnodhb
     224 00000820     b00d          move    a0,*a13(DRN_SEEKDIST)
         00000830     0a60  
     225                    
     226 00000840           plqbnomdchk
     227                    
     228                            .if     BLKTEST
     229                            jruc    plqbskmv
     230                            .endif
     231                    
     232 00000840     b5a0          move    *a13(DRN_MODE),a0
         00000850     0a30  
     233 00000860     c507          jrge    plqbskmv                        ;Aggressive?
     234                    
     235 00000870     4cd6          move    b6,b6
     236 00000880     cb05          jrnz    plqbskmv                        ;!MODE_NORMAL?
     237                    
     238 00000890     b7a9          move    *a13(DRN_ACT_p),a9,L
         000008a0     0a10  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    6

     239 000008b0     cb02          jrnz    plqbskmv                        ;Script running?
     240                    
     241 000008c0     0d3f          callr   drone_seekdirdist
         000008d0     0f7f  
     242 000008e0           plqbskmv
     243                    
     244                    
     245 000008e0     b5a0          move    *a13(DRN_BUTCHRG),a0
         000008f0     09c0  
     246 00000900     ca05          jrz     plqbnochrgn
     247                    
     248 00000910     b5a0          move    *a13(DRN_BUTCHRGDLY),a0
         00000920     09d0  
     249 00000930     1420          subk    1,a0
     250 00000940     b00d          move    a0,*a13(DRN_BUTCHRGDLY)
         00000950     09d0  
     251 00000960           plqbnochrgn
     252                    
     253                    
     254 00000960     b5a2          move    *a13(GETUP_TIME),a2
         00000970     0460  
     255 00000980     c613          jrle    plqbnogt
     256                    
     257 00000990     09c0          movi    99,a0
         000009a0     0063  
     258 000009b0     0d3f          callr   rndrng0
         000009c0     10c1  
     259 000009d0     4d41          move    a10,a1
     260 000009e0     0b21          addi    plqbgetup_t,a1
         000009f0 000032f0' 
     261 00000a10     8421          move    *a1,a1
     262 00000a20     4820          cmp     a1,a0
     263 00000a30     c500          jrge    plqbdsabt
         00000a40     026d  
     264                    
     265 00000a50     14a2          subk    5,a2
     266 00000a60     c501          jrge    plqbgtok
     267 00000a70     5642          clr     a2
     268 00000a80     b04d  plqbgtok        move    a2,*a13(GETUP_TIME)
         00000a90     0460  
     269 00000aa0     c000          jruc    plqbdsabt
         00000ab0     0266  
     270 00000ac0           plqbnogt
     271                    
     272 00000ac0     b5a0          move    *a13(DRN_DELAY),a0
         00000ad0     0a00  
     273 00000ae0     1420          subk    1,a0
     274 00000af0     c604          jrle    plqbnewact
     275 00000b00     b00d          move    a0,*a13(DRN_DELAY)
         00000b10     0a00  
     276 00000b20     c000          jruc    plqbx
         00000b30     0261  
     277 00000b40           plqbnewact
     278                    
     279 00000b40     b504          move    *a8(ATTACK_TIME),a4
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    7

         00000b50     05f0  
     280 00000b60     05a5          move    @round_tickcount,a5
         00000b70 00000000! 
     281 00000b90     44a4          sub     a5,a4                   ;-=Attack passed, +=Ticks till atk
     282 00000ba0     c46e          jrlt    plqbnoblk
     283                    
     284 00000bb0     09c1          movi    50,a1                   ;Closer Z allowed
         00000bc0     0032  
     285 00000bd0     b502          move    *a8(ATTACK_TYPE),a2
         00000be0     05e0  
     286 00000bf0     0b42          cmpi    AT_PUSH,a2
         00000c00     fff6  
     287 00000c10     ca67          jreq    plqbnoblk
     288 00000c20     0b42          cmpi    AT_MSL,a2
         00000c30     ffc5  
     289 00000c40     ca07          jreq    plqbmsla                        ;Missile atk?
     290                    
     291 00000c50     b5a0          move    *a13(CLOSEST_XDIST),a0
         00000c60     0370  
     292 00000c70     0b40          cmpi    180,a0
         00000c80     ff4b  
     293 00000c90     c75f          jrgt    plqbnoblk                       ;Too far?
     294 00000ca0     09c1          movi    100,a1
         00000cb0     0064  
     295 00000cc0           plqbmsla
     296 00000cc0     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00000cd0     0390  
     297 00000ce0     4820          cmp     a1,a0
     298 00000cf0     c759          jrgt    plqbnoblk                       ;Too far?
     299                    
     300 00000d00     b50e          move    *a8(GETUP_TIME),a14
         00000d10     0460  
     301 00000d20     c756          jrgt    plqbnoblk                       ;Out of control?
     302                    
     303 00000d30     0b57          cmpi    MODE_INAIR2,b7
         00000d40     ffea  
     304 00000d50     ca53          jreq    plqbnoblk                       ;Jumping on me?
     305                    
     306 00000d60     1fc6          btst    PLAYER_BLOCK_BIT,a6
     307 00000d70     cb00          jrnz    plqbx                   ;Trying to blk?
         00000d80     023c  
     308                    
     309 00000d90     b502          move    *a8(ATTACK_TYPE),a2
         00000da0     05e0  
     310 00000db0     b5a0          move    *a13(PLYRNUM),a0
         00000dc0     0580  
     311 00000dd0     09c3          movi    AT_NUM,a3
         00000de0     003b  
     312 00000df0     5c03          mpys    a0,a3
     313 00000e00     4043          add     a2,a3
     314 00000e10                   X16     a3
     315 00000e20     0b23          addi    atkcnt_t,a3
         00000e30 00000010- 
     316                    
     317 00000e50     8462          move    *a3,a2                  ;# missed blks
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    8

     318 00000e60     0b42          cmpi    10,a2
         00000e70     fff5  
     319 00000e80     c801          jrlo    plqbacok
     320 00000e90     1922          movk    9,a2
     321 00000ea0           plqbacok
     322 00000ea0                   X16     a2
     323 00000eb0     0b22          addi    plqbblkatk_t,a2
         00000ec0 000036b0' 
     324 00000ee0     8442          move    *a2,a2                  ;Get %
     325                    
     326 00000ef0     4e7e          move    b3,a14                  ;# on team
     327 00000f00     142e          subk    1,a14
     328 00000f10                   X32     a14
     329 00000f20     45c2          sub     a14,a2                  ;Decrease per extra bud
     330                    
     331                            .if     BLKTEST
     332                            movi    100,a2
     333                            .endif
     334                    
     335 00000f30     09c0          movi    99,a0
         00000f40     0063  
     336 00000f50     0d3f          callr   rndrng0
         00000f60     1067  
     337 00000f70     4d41          move    a10,a1
     338 00000f80     0b21          addi    plqbblkbase_t,a1
         00000f90 000034d0' 
     339 00000fb0     8421          move    *a1,a1                  ;Base %
     340 00000fc0     4041          add     a2,a1
     341 00000fd0     4820          cmp     a1,a0
     342 00000fe0     c525          jrge    plqbmissb
     343                    
     344 00000ff0     0b44          cmpi    15,a4
         00001000     fff0  
     345 00001010     c501          jrge    plqbminbtok             ;Min time OK?
     346 00001020     19e4          movk    15,a4
     347 00001030           plqbminbtok
     348                    
     349 00001030     b502          move    *a8(ATTACK_TYPE),a2
         00001040     05e0  
     350 00001050     0b42          cmpi    AT_LEAPING,a2
         00001060     ffc6  
     351 00001070     cb0d          jrne    plqbsblk                        ;!Leaping?
     352                    
     353                    
     354 00001080     4d40          move    a10,a0
     355 00001090     2f40          srl     4+2,a0                  ;Skill/4
     356 000010a0     0d3f          callr   rndrng0
         000010b0     1052  
     357 000010c0     4c00          move    a0,a0
     358 000010d0     ca07          jrz     plqbsblk                        ;Skip?
     359                    
     360 000010e0     b0a8          move    a5,*a8(ATTACK_TIME)     ;Cancel
         000010f0     05f0  
     361                    
     362 00001100     09e9          movi    slhtoss,a9              ;Flip opp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE    9

         00001110 0000a4e0' 
     363 00001130     c000          jruc    plqbnewsc
         00001140     0155  
     364                    
     365 00001150           plqbsblk
     366 00001150     b08d          move    a4,*a13(DRN_DELAY)
         00001160     0a00  
     367                    
     368 00001170     1840          movk    B_M,a0                  ;Block it
     369 00001180     b00d          move    a0,*a13(DRN_BUT)
         00001190     0960  
     370                    
     371 000011a0     0b42          cmpi    AT_PUPPET,a2
         000011b0     ffeb  
     372 000011c0     cb00          jrne    plqbdsabt                       ;!Hip toss?
         000011d0     01f4  
     373                    
     374 000011e0     09c0          movi    B_M+L_M+D_M,a0          ;Special block
         000011f0     00c2  
     375 00001200     4c83          move    a4,a3                   ;Dly
     376 00001210     5729          clr     a9
     377 00001220     c000          jruc    plqbsetbx
         00001230     01d4  
     378                    
     379 00001240           plqbmissb
     380 00001240     b0a8          move    a5,*a8(ATTACK_TIME)     ;Cancel
         00001250     05f0  
     381                    
     382 00001260     8460          move    *a3,a0                  ;Cnt+1
     383 00001270     1020          addk    1,a0
     384 00001280     8003          move    a0,*a3
     385                    
     386 00001290           plqbnoblk
     387                    
     388 00001290     b7a9          move    *a13(DRN_ACT_p),a9,L    ;A9=*Script
         000012a0     0a10  
     389 000012b0     cb00          jrnz    plqbcact                        ;Continue script?
         000012c0     017e  
     390                    
     391                    
     392 000012d0     5642          clr     a2
     393                    
     394 000012e0     0b56          cmpi    MODE_BLOCK,b6
         000012f0     fff8  
     395 00001300     cb16          jrne    plqbnps                 ;!Blking?
     396 00001310     1fe6          btst    PLAYER_PUNCH_BIT,a6
     397 00001320     cb14          jrnz    plqbnps                 ;Already pushed?
     398                    
     399                            .if     BLKTEST
     400                            jruc    plqbnps
     401                            .endif
     402                    
     403 00001330     18e0          movk    7,a0
     404 00001340     0d3f          callr   rndrng0
         00001350     1028  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   10

     405 00001360     4c00          move    a0,a0
     406 00001370     cb0f          jrnz    plqbnps                 ;Skip 88%?
     407                    
     408 00001380     b5a0          move    *a13(CLOSEST_XDIST),a0
         00001390     0370  
     409 000013a0     0b40          cmpi    110,a0
         000013b0     ff91  
     410 000013c0     c70a          jrgt    plqbnps                 ;Too far?
     411 000013d0     b5a0          move    *a13(CLOSEST_ZDIST),a0
         000013e0     0390  
     412 000013f0     0b40          cmpi    40,a0
         00001400     ffd7  
     413 00001410     c705          jrgt    plqbnps                 ;Too far?
     414 00001420     1862          movk    P_M+B_M,a2              ;Push
     415 00001430     b04d          move    a2,*a13(DRN_BUT)
         00001440     0960  
     416 00001450     c000          jruc    plqbx
         00001460     01ce  
     417 00001470           plqbnps
     418 00001470     b04d          move    a2,*a13(DRN_BUT)
         00001480     0960  
     419                    
     420                            .if     BLKTEST
     421                            jruc    plqbx
     422                            .endif
     423                    
     424                    
     425 00001490     4cd6          move    b6,b6
     426 000014a0     cb71          jrnz    plqbdoact                       ;!MODE_NORMAL?
     427                    
     428                    
     429 000014b0     b5a0          move    *a13(INRING),a0
         000014c0     0560  
     430 000014d0     ca08          jrz     plqbringok                      ;In ring?
     431                    
     432 000014e0     b500          move    *a8(INRING),a0
         000014f0     0560  
     433 00001500     cb05          jrnz    plqbringok                      ;Opp out?
     434                    
     435 00001510     09e9          movi    drn_enterring,a9
         00001520 0000f8d0' 
     436 00001540     c000          jruc    plqbnewsc
         00001550     0114  
     437 00001560           plqbringok
     438                    
     439 00001560     b5a3          move    *a13(DRN_MODE),a3
         00001570     0a30  
     440 00001580     0b43          cmpi    -3,a3
         00001590     0002  
     441 000015a0     c62a          jrle    plqbpass                        ;Hang back?
     442                    
     443 000015b0     0b57          cmpi    MODE_ONGROUND,b7
         000015c0     fffb  
     444 000015d0     ca5e          jreq    plqbdoact                       ;Atk?
     445                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   11

     446 000015e0     0b57          cmpi    MODE_INAIR2,b7
         000015f0     ffea  
     447 00001600     cb05          jrne    plqbonia
     448 00001610     09e9          movi    drn_opinair,a9          ;Avoid jump
         00001620 0000f6e0' 
     449 00001640     c000          jruc    plqbnewsc
         00001650     0104  
     450 00001660           plqbonia
     451 00001660     0b57          cmpi    MODE_RUNNING,b7
         00001670     fffe  
     452 00001680     cb0a          jrne    plqbonrun
     453 00001690     b5a0          move    *a13(CLOSEST_XDIST),a0
         000016a0     0370  
     454 000016b0     0b40          cmpi    80,a0
         000016c0     ffaf  
     455 000016d0     c605          jrle    plqbonrun                       ;Too close?
     456 000016e0     09e9          movi    drn_oprun,a9            ;Anti run
         000016f0 0000ed10' 
     457 00001710     c000          jruc    plqbnewsc
         00001720     00f7  
     458 00001730           plqbonrun
     459                    
     460 00001730     b500          move    *a8(ATTACK_TIME),a0
         00001740     05f0  
     461 00001750     05a1          move    @round_tickcount,a1
         00001760 00000000! 
     462 00001780     4420          sub     a1,a0                   ;-=Attack passed, +=Ticks till atk
     463 00001790     11e0          addk    15,a0
     464 000017a0     c541          jrge    plqbdoact                       ;Get him after his atk (or no blk)?
     465                    
     466                    
     467 000017b0     4c63          move    a3,a3
     468 000017c0     c408          jrlt    plqbpass                        ;Passive?
     469                    
     470 000017d0     1be0          movk    1fh,a0                  ;.6 sec
     471 000017e0     0b4a          cmpi    22*16,a10
         000017f0     fe9f  
     472 00001800     c601          jrle    plqbcat
     473 00001810     18e0          movk    7,a0                    ;.15 sec
     474 00001820           plqbcat
     475 00001820     0d3f          callr   rnd
         00001830     0fcc  
     476 00001840     ca24          jrz     plqbdoactpup            ;Atk?
     477                    
     478                    
     479 00001850           plqbpass
     480 00001850     05a0          move    @PCNT,a0                ;Chk every 16
         00001860 00000000! 
     481 00001880     1020          addk    1,a0
     482 00001890     2780          sll     32-4,a0
     483 000018a0     cb00          jrnz    plqbx
         000018b0     0189  
     484                    
     485 000018c0     b5a1          move    *a13(CLOSEST_XDIST),a1
         000018d0     0370  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   12

     486 000018e0     b5ae          move    *a13(CLOSEST_ZDIST),a14
         000018f0     0390  
     487 00001900     482e          cmp     a1,a14
     488 00001910     c501          jrge    plqbbig
     489 00001920     4c2e          move    a1,a14
     490 00001930           plqbbig
     491 00001930     0b4e          cmpi    70,a14
         00001940     ffb9  
     492 00001950     c413          jrlt    plqbdoactpup            ;Opp in my face? Attack!
     493                    
     494 00001960     b5a0          move    *a13(DRN_MODE),a0
         00001970     0a30  
     495 00001980     1060          addk    3,a0
     496 00001990     c600          jrle    plqbx                   ;Hang back?
         000019a0     017a  
     497                    
     498 000019b0     07a1          move    @CURRENT_LADDER,a1,L    ;* to position
         000019c0 00000000! 
     499 000019e0     0b61          cmpi    LADDER,a1
         000019f0 ffffffff! 
     500 00001a10     ca04          jreq    plqbnratk                       ;1st ladder?
     501                    
     502 00001a20     19e0          movk    0fh,a0                  ;Avg 4.8 sec
     503 00001a30     0d3f          callr   rnd
         00001a40     0fab  
     504 00001a50     ca03          jrz     plqbdoactpup            ;Random attack?
     505 00001a60           plqbnratk
     506 00001a60     4cf7          move    b7,b7
     507 00001a70     ca00          jrz     plqbx                   ;Opp MODE_NORMAL? Be passive
         00001a80     016c  
     508 00001a90           plqbdoactpup
     509 00001a90     4ef0          move    b7,a0
     510 00001aa0     1620          subk    MODE_PUPPET2,a0
     511 00001ab0     ca00          jreq    plqbx
         00001ac0     0168  
     512 00001ad0     1460          subk    MODE_PUPPET-MODE_PUPPET2,a0
     513 00001ae0     ca00          jreq    plqbx
         00001af0     0165  
     514 00001b00     0b57          cmpi    MODE_HEADHELD,b7
         00001b10     ffec  
     515 00001b20     ca00          jreq    plqbx
         00001b30     0161  
     516 00001b40     0b57          cmpi    MODE_HEADHOLD,b7
         00001b50     ffef  
     517 00001b60     ca00          jreq    plqbx
         00001b70     015d  
     518 00001b80     0b57          cmpi    MODE_ATTACHED,b7
         00001b90     fffc  
     519 00001ba0     ca00          jreq    plqbx
         00001bb0     0159  
     520                    
     521                    
     522 00001bc0           plqbdoact
     523 00001bc0     0b56          cmpi    MODE_HEADHELD,b6
         00001bd0     ffec  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   13

     524 00001be0     ca74          jreq    plqbslctscrpt
     525                    
     526 00001bf0     0b56          cmpi    MODE_ONGROUND,b6
         00001c00     fffb  
     527 00001c10     cb05          jrne    plqbnognd
     528 00001c20     09e9          movi    drn_roll,a9
         00001c30 0000eee0' 
     529 00001c50     c000          jruc    plqbnewsc
         00001c60     00a3  
     530 00001c70           plqbnognd
     531 00001c70     0b56          cmpi    MODE_INAIR2,b6
         00001c80     ffea  
     532 00001c90     cb05          jrne    plqbnin2
     533 00001ca0     09e9          movi    drn_inair,a9
         00001cb0 0000f640' 
     534 00001cd0     c000          jruc    plqbnewsc
         00001ce0     009b  
     535 00001cf0           plqbnin2
     536 00001cf0     0b56          cmpi    MODE_ONTURNBKL,b6
         00001d00     fff9  
     537 00001d10     cb05          jrne    plqbnotb
     538 00001d20     09e9          movi    drn_ontb,a9
         00001d30 0000f1e0' 
     539 00001d50     c000          jruc    plqbnewsc
         00001d60     0093  
     540 00001d70           plqbnotb
     541 00001d70     0b56          cmpi    MODE_DEAD,b6
         00001d80     fff6  
     542 00001d90     cb05          jrne    plqbndead
     543 00001da0     18e0          movk    7,a0
     544 00001db0     0d3f          callr   rnd
         00001dc0     0f73  
     545 00001dd0     c000          jruc    plqbbutx
         00001de0     0138  
     546 00001df0           plqbndead
     547 00001df0     b5a0          move    *a13(ANIMODE),a0
         00001e00     0660  
     548 00001e10     1fa0          btst    MODE_UNINT_BIT,a0
     549 00001e20     cb00          jrnz    plqbunint                       ;Wait?
         00001e30     0131  
     550                    
     551 00001e40     0b56          cmpi    MODE_RUNNING,b6
         00001e50     fffe  
     552 00001e60     cb04          jrne    plqbnrun
     553 00001e70     09e9          movi    drn_run,a9
         00001e80 0000e410' 
     554 00001ea0     c07f          jruc    plqbnewsc
     555 00001eb0           plqbnrun
     556                    
     557 00001eb0     0b56          cmpi    MODE_HEADHOLD,b6
         00001ec0     ffef  
     558 00001ed0     cb0f          jrne    plqbnhh
     559                    
     560 00001ee0     5600          clr     a0
     561 00001ef0     b00d          move    a0,*a13(DRN_BUTCHRG)    ;Clr it
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   14

         00001f00     09c0  
     562                    
     563                    
     564 00001f10     4d03          move    a8,a3
     565 00001f20     4da8          move    a13,a8
     566 00001f30     0d5f          calla   CHECK_COMBO_GO
         00001f40 00000000! 
     567 00001f60     c405          jrlt    plqbncmb                        ;Can't combo?
     568 00001f70     4c68          move    a3,a8
     569 00001f80     09e9          movi    drn_combo,a9
         00001f90 0000c880' 
     570 00001fb0     c06e          jruc    plqbnewsc
     571 00001fc0           plqbncmb
     572 00001fc0     4c68          move    a3,a8
     573 00001fd0           plqbnhh
     574                    
     575 00001fd0     b5a0          move    *a13(DRN_BUTCHRG),a0
         00001fe0     09c0  
     576 00001ff0     ca09          jrz     plqbnochrg
     577                    
     578 00002000     b5a0          move    *a13(DRN_BUTCHRGDLY),a0
         00002010     09d0  
     579 00002020     c706          jrgt    plqbnochrg
     580                    
     581 00002030     0b57          cmpi    MODE_BLOCK,b7
         00002040     fff8  
     582 00002050     ca03          jreq    plqbnochrg                      ;Opp blking?
     583                    
     584 00002060     b7a9          move    *a13(DRN_BUTCHRG_p),a9,L ;Fire charge
         00002070     09e0  
     585 00002080     c061          jruc    plqbnewsc
     586 00002090           plqbnochrg
     587                    
     588 00002090     b5ae          move    *a13(CLOSEST_DIST),a14
         000020a0     0360  
     589 000020b0     0b4e          cmpi    200,a14
         000020c0     ff37  
     590 000020d0     c71e          jrgt    plqbopnb
     591                    
     592 000020e0     0b57          cmpi    MODE_BLOCK,b7
         000020f0     fff8  
     593 00002100     cb1b          jrne    plqbopnb                        ;!Blking?
     594                    
     595 00002110     b5ae          move    *a13(CLOSEST_ZDIST),a14
         00002120     0390  
     596 00002130     0b4e          cmpi    40,a14
         00002140     ffd7  
     597 00002150     c712          jrgt    plqbbsk
     598                    
     599 00002160     b5ae          move    *a13(CLOSEST_XDIST),a14
         00002170     0370  
     600 00002180     0b4e          cmpi    60,a14
         00002190     ffc3  
     601 000021a0     c70d          jrgt    plqbbsk
     602                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   15

     603 000021b0     b50e          move    *a8(STICK_REL_CUR),a14
         000021c0     0bf0  
     604 000021d0     0b4e          cmpi    MOVE_DOWN_LEFT,a14
         000021e0     fff9  
     605 000021f0     ca04          jreq    plqbbht                 ;Hip toss blocked?
     606                    
     607 00002200     09e9          movi    M_shrtblkr,a9           ;Attack
         00002210 00009ad0' 
     608 00002230     c03a          jruc    plqbgetscrpt
     609 00002240           plqbbht
     610 00002240     09e9          movi    M_shrtblkrdl,a9         ;Attack
         00002250 00009b20' 
     611 00002270     c036          jruc    plqbgetscrpt
     612 00002280           plqbbsk
     613 00002280     09e9          movi    drn_seekclose,a9
         00002290 0000dce0' 
     614 000022b0     c03e          jruc    plqbnewsc
     615 000022c0           plqbopnb
     616                    
     617 000022c0     0b57          cmpi    MODE_DEAD,b7
         000022d0     fff6  
     618 000022e0     cb04          jrne    plqbopnd
     619                    
     620 000022f0     09e9          movi    drn_oppdead,a9
         00002300 0000fea0' 
     621 00002320     c037          jruc    plqbnewsc
     622 00002330           plqbopnd
     623                    
     624 00002330           plqbslctscrpt
     625                    
     626 00002330     b5a0          move    *a13(WRESTLERNUM),a0
         00002340     0590  
     627 00002350                   X32     a0
     628 00002360     0b20          addi    plqbwnshort_t,a0
         00002370 00003cf0' 
     629                    
     630 00002390     b5a1          move    *a13(CLOSEST_XDIST),a1
         000023a0     0370  
     631 000023b0     b5ae          move    *a13(CLOSEST_ZDIST),a14
         000023c0     0390  
     632 000023d0                   X2      a14                     ;Z*2
     633 000023e0     482e          cmp     a1,a14
     634 000023f0     c501          jrge    plqbhavebig
     635 00002400     4c2e          move    a1,a14
     636 00002410           plqbhavebig
     637 00002410     0b4e          cmpi    100,a14
         00002420     ff9b  
     638 00002430     c409          jrlt    plqbshrt
     639 00002440     0b20          addi    plqbwnmed_t-plqbwnshort_t,a0
         00002450 00000120  
     640                    
     641 00002470     0b4e          cmpi    180,a14
         00002480     ff4b  
     642 00002490     c403          jrlt    plqbmed
     643 000024a0     0b20          addi    plqbwnlong_t-plqbwnmed_t,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   16

         000024b0 00000120  
     644 000024d0           plqbshrt
     645 000024d0           plqbmed
     646 000024d0     8609          move    *a0,a9,L                ;Get * mode list
     647 000024e0     4ed2          move    b6,a2
     648 000024f0     4ef3          move    b7,a3
     649 00002500           plqbmdlp
     650 00002500     8f20          movb    *a9,a0                  ;My mode #
     651 00002510     1109          addk    8,a9
     652 00002520     8f2e          movb    *a9,a14                 ;His mode #
     653 00002530     1109          addk    8,a9
     654 00002540     9721          move    *a9+,a1,L               ;* script * table
     655                    
     656 00002550     4c00          move    a0,a0
     657 00002560     ce02          jrn     plqbinochk                      ;Don't chk?
     658 00002570     4840          cmp     a2,a0
     659 00002580     cbf7          jrne    plqbmdlp                        ;Not in mode?
     660 00002590           plqbinochk
     661 00002590     4dce          move    a14,a14
     662 000025a0     ce02          jrn     plqbdef                 ;Don't chk?
     663 000025b0     486e          cmp     a3,a14
     664 000025c0     cbf3          jrne    plqbmdlp                        ;Not in mode?
     665 000025d0           plqbdef
     666 000025d0     4c29          move    a1,a9
     667 000025e0           plqbgetscrpt
     668 000025e0     9520          move    *a9+,a0                 ;# entries
     669 000025f0     c505          jrge    plqbneok                        ;!Headhold?
     670 00002600     0380          abs     a0
     671 00002610     0b4a          cmpi    26*16,a10
         00002620     fe5f  
     672 00002630     c601          jrle    plqbneok                        ;!Hard?
     673 00002640     1820          movk    1,a0                    ;Only do first two
     674 00002650           plqbneok
     675 00002650     0d3f          callr   rndrng0
         00002660     0ef7  
     676 00002670                   X32     a0
     677 00002680     4009          add     a0,a9
     678 00002690     8729          move    *a9,a9,L                ;* new script
     679                    
     680 000026a0           plqbnewsc
     681 000026a0     4ed0          move    b6,a0
     682 000026b0     b00d          move    a0,*a13(DRN_SPMODE)
         000026c0     0a40  
     683                    
     684                    
     685 000026d0     0b56          cmpi    MODE_HEADHOLD,b6
         000026e0     ffef  
     686 000026f0     cb19          jrne    plqbnhh2
     687                    
     688 00002700     1823          movk    1,a3
     689 00002710     0b53          cmpi    2,b3
         00002720     fffd  
     690 00002730     c401          jrlt    plqbhhd1                        ;1 opp?
     691 00002740     1ac3          movk    22,a3
     692 00002750           plqbhhd1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   17

     693 00002750     09e0          movi    sklhhdly_t,a0
         00002760 00003750' 
     694 00002780     4140          add     a10,a0                  ;+Offset
     695 00002790     8400          move    *a0,a0
     696 000027a0     0d3f          callr   rndrng0
         000027b0     0ee2  
     697 000027c0     4003          add     a0,a3                   ;Increase per extra bud
     698                    
     699 000027d0     05a0          move    @PCNT,a0
         000027e0 00000000! 
     700 00002800     27e0          sll     32-1,a0
     701 00002810     ca05          jrz     plqbhhdok                       ;Skip half of checks?
     702                    
     703 00002820     0b43          cmpi    65,a3
         00002830     ffbe  
     704 00002840     c602          jrle    plqbhhdok
     705 00002850     09c3          movi    65,a3                   ;Max delay
         00002860     0041  
     706 00002870           plqbhhdok
     707 00002870     5600          clr     a0
     708 00002880     c06f          jruc    plqbsetbx
     709 00002890           plqbnhh2
     710                    
     711 00002890     0b56          cmpi    MODE_HEADHELD,b6
         000028a0     ffec  
     712 000028b0     cb1f          jrne    plqbnhhe
     713                    
     714 000028c0     5600          clr     a0
     715 000028d0     b00d          move    a0,*a13(DRN_BUTCHRG)    ;Clr it
         000028e0     09c0  
     716                    
     717 000028f0     4e73          move    b3,a3                   ;# on team
     718 00002900     18e0          movk    7,a0
     719 00002910     0d3f          callr   rnd
         00002920     0ebd  
     720 00002930     ca02          jrz     plqbhrskmp                      ;12% skip multiplyr delay?
     721 00002940     1423          subk    1,a3
     722 00002950                   X16     a3
     723 00002960           plqbhrskmp
     724 00002960     09e0          movi    sklhrdly_t,a0
         00002970 00003930' 
     725 00002990     4140          add     a10,a0                  ;+Offset
     726 000029a0     8400          move    *a0,a0
     727 000029b0     0d3f          callr   rndrng0
         000029c0     0ec1  
     728 000029d0     1020          addk    1,a0
     729 000029e0     4003          add     a0,a3                   ;Increase per extra bud
     730                    
     731 000029f0     05a0          move    @PCNT,a0
         00002a00 00000000! 
     732 00002a20     27e0          sll     32-1,a0
     733 00002a30     ca05          jrz     plqbhrdok                       ;Skip half of checks?
     734                    
     735 00002a40     0b43          cmpi    70,a3
         00002a50     ffb9  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   18

     736 00002a60     c602          jrle    plqbhrdok
     737 00002a70     09c3          movi    70,a3                   ;Max delay
         00002a80     0046  
     738 00002a90           plqbhrdok
     739 00002a90     5600          clr     a0
     740 00002aa0     c04d          jruc    plqbsetbx
     741 00002ab0           plqbnhhe
     742                    
     743                    
     744 00002ab0           plqbcact
     745                    
     746 00002ab0     4ed0          move    b6,a0
     747 00002ac0     ca07          jrz     plqbmdsame                      ;MODE_NORMAL?
     748 00002ad0     14e0          subk    MODE_BLOCK,a0
     749 00002ae0     ca05          jreq    plqbmdsame                      ;Treat as normal?
     750 00002af0     b5a0          move    *a13(DRN_SPMODE),a0
         00002b00     0a40  
     751 00002b10     4ed1          move    b6,a1
     752 00002b20     4820          cmp     a1,a0
     753                            .if     DEBUG
     754                            jreq    plqbdsok
     755                            jruc    plqbdsabt                       ;For breakpoint
     756                    plqbdsok
     757                            .endif
     758 00002b30     cb5e          jrne    plqbdsabt
     759                    
     760 00002b40           plqbmdsame
     761                    
     762                            .if     DEBUG
     763                            move    a9,a9                   ;Chk script *
     764                            jrz     plqba9ok
     765                            cmpi    0ff000000h,a9
     766                            jrhs    plqba9ok
     767                            LOCKUP
     768                    plqba9ok
     769                            .endif
     770                    
     771 00002b40           plqbscplp
     772 00002b40     9520          move    *a9+,a0
     773 00002b50     c541          jrge    plqbnocd                        ;No command?
     774                    
     775 00002b60     2640          sll     32-14,a0
     776 00002b70     c85b          jrc     plqbdsdone                      ;Done? (Bit 14)
     777                    
     778 00002b80     2dc0          srl     32-14,a0
     779                    
     780                    
     781 00002b90     1420          subk    1,a0                    ;plqb1
     782 00002ba0     cb05          jrne    plqbnseekt0
     783                    
     784 00002bb0     0d3f          callr   drone_seek
         00002bc0     0e22  
     785 00002bd0     caf6          jrz     plqbscplp
     786                    
     787 00002be0     1609          subk    16,a9
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   19

     788 00002bf0     c053          jruc    plqbdsdone
     789 00002c00           plqbnseekt0
     790                    
     791 00002c00     1420          subk    1,a0                    ;plqb2
     792 00002c10     cb10          jrne    plqbnrnda
     793                    
     794 00002c20     0b57          cmpi    MODE_BLOCK,b7
         00002c30     fff8  
     795 00002c40     ca4d          jreq    plqbdsabt                       ;Blking?
     796                    
     797 00002c50     9723          move    *a9+,a3,L               ;*Skill table
     798                    
     799 00002c60     09c0          movi    99,a0
         00002c70     0063  
     800 00002c80     0d3f          callr   rndrng0
         00002c90     0e94  
     801 00002ca0     4143          add     a10,a3                  ;+Offset
     802 00002cb0     8461          move    *a3,a1
     803 00002cc0     4820          cmp     a1,a0
     804 00002cd0     c4e6          jrlt    plqbscplp                       ;Cont?
     805                    
     806 00002ce0     1940          movk    10,a0
     807 00002cf0     b00d          move    a0,*a13(DRN_DELAY)
         00002d00     0a00  
     808                    
     809 00002d10     c040          jruc    plqbdsabt
     810 00002d20           plqbnrnda
     811                    
     812 00002d20     1420          subk    1,a0                    ;plqb3
     813 00002d30     cb06          jrne    plqbnwtint
     814                    
     815 00002d40     b5a0          move    *a13(ANIMODE),a0
         00002d50     0660  
     816 00002d60     1fa0          btst    MODE_UNINT_BIT,a0
     817 00002d70     cadc          jrz     plqbscplp                       ;Off?
     818                    
     819 00002d80     1609          subk    16,a9
     820 00002d90     c039          jruc    plqbdsdone
     821 00002da0           plqbnwtint
     822                    
     823 00002da0     1420          subk    1,a0                    ;plqb4
     824 00002db0     cb04          jrne    plqbnaib
     825                    
     826 00002dc0     0b57          cmpi    MODE_BLOCK,b7
         00002dd0     fff8  
     827 00002de0     cbd5          jrne    plqbscplp                       ;!Blocked?
     828                    
     829 00002df0     c032          jruc    plqbdsabt
     830 00002e00           plqbnaib
     831                    
     832 00002e00     1420          subk    1,a0                    ;plqb5
     833 00002e10     cb03          jrne    plqbncall
     834                    
     835 00002e20     9720          move    *a9+,a0,L
     836 00002e30     0920          call    a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   20

     837                    
     838 00002e40     c0cf          jruc    plqbscplp
     839 00002e50           plqbncall
     840                    
     841 00002e50     1420          subk    1,a0                    ;plqb6
     842 00002e60     cb0a          jrne    plqbnrj
     843                    
     844 00002e70     09c0          movi    99,a0
         00002e80     0063  
     845 00002e90     0d3f          callr   rndrng0
         00002ea0     0e73  
     846 00002eb0     9521          move    *a9+,a1                 ;Percent to jmp
     847 00002ec0     9722          move    *a9+,a2,L
     848 00002ed0     4820          cmp     a1,a0
     849 00002ee0     c5c5          jrge    plqbscplp
     850                    
     851 00002ef0     4c49          move    a2,a9                   ;New addr
     852 00002f00     c0c3          jruc    plqbscplp
     853 00002f10           plqbnrj
     854                    
     855 00002f10     1420          subk    1,a0                    ;plqb7
     856 00002f20     cb02          jrne    plqbnjmp
     857                    
     858 00002f30     9729          move    *a9+,a9,L
     859 00002f40     c0bf          jruc    plqbscplp
     860 00002f50           plqbnjmp
     861                    
     862 00002f50     0129          exgpc   a9
     863 00002f60     c0bd          jruc    plqbscplp
     864 00002f70           plqbnocd
     865                    
     866 00002f70     9523          move    *a9+,a3                 ;Get delay
     867 00002f80           plqbsetbx
     868 00002f80     4c01          move    a0,a1
     869 00002f90     2760          sll     32-5,a0
     870 00002fa0     2ca0          srl     32-5,a0
     871 00002fb0     b00d          move    a0,*a13(DRN_BUT)
         00002fc0     0960  
     872                    
     873 00002fd0     2f61          srl     5,a1
     874 00002fe0     b5ae          move    *a13(FACING_DIR),a14
         00002ff0     04c0  
     875 00003000     1f8e          btst    PLAYER_RIGHT_BIT,a14
     876 00003010     cb0a          jrnz    plqbrgt                 ;Facing rgt?
     877                    
     878 00003020     4c20          move    a1,a0                   ;0FHlip L&R bits
     879 00003030     4c2e          move    a1,a14
     880 00003040     27c1          sll     32-2,a1
     881 00003050     2fa0          srl     3,a0                    ;Bit0=Rgt
     882 00003060     27ae          sll     32-3,a14
     883 00003070     2c2e          srl     31,a14
     884 00003080     242e          sll     1,a14                   ;Bit1=Left
     885 00003090     5401          or      a0,a1
     886 000030a0     55c1          or      a14,a1
     887 000030b0     3041          rl      2,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   21

     888 000030c0           plqbrgt
     889 000030c0     b02d          move    a1,*a13(DRN_JOY)
         000030d0     0990  
     890                    
     891 000030e0     b06d          move    a3,*a13(DRN_DELAY)
         000030f0     0a00  
     892 00003100     4c63          move    a3,a3
     893 00003110     c701          jrgt    plqbdsdone
     894 00003120           plqbdsabt
     895 00003120     5729          clr     a9
     896 00003130           plqbdsdone
     897 00003130     b32d          move    a9,*a13(DRN_ACT_p),L
         00003140     0a10  
     898                    
     899 00003150           plqbunint
     900                    
     901 00003150           plqbx
     902 00003150     b5a0          move    *a13(DRN_BUT),a0
         00003160     0960  
     903 00003170           plqbbutx
     904 00003170     b5ae          move    *a13(DRN_BUTCHRG),a14
         00003180     09c0  
     905 00003190     55c0          or      a14,a0
     906 000031a0     b00d          move    a0,*a13(DRN_BUT)
         000031b0     0960  
     907 000031c0     5606          xor     a0,a6
     908 000031d0     4cc1          move    a6,a1
     909 000031e0     5006          and     a0,a6
     910 000031f0     b0cd          move    a6,*a13(DRN_BUTDT)
         00003200     0970  
     911 00003210     5201          andn    a0,a1
     912 00003220     b02d          move    a1,*a13(DRN_BUTUT)
         00003230     0980  
     913                    
     914 00003240     b5a0          move    *a13(DRN_JOY),a0
         00003250     0990  
     915 00003260     5607          xor     a0,a7
     916 00003270     4ce1          move    a7,a1
     917 00003280     5007          and     a0,a7
     918 00003290     b0ed          move    a7,*a13(DRN_JOYDT)
         000032a0     09a0  
     919 000032b0     5201          andn    a0,a1
     920 000032c0     b02d          move    a1,*a13(DRN_JOYUT)
         000032d0     09b0  
     921                    
     922 000032e0           plqbxx
     923 000032e0     0960          rets
     924                    
     925                    
     926                    SKLM    .macro  w,ad
     927                            .word   :w:,:w:+:ad:,:w:+:ad:*2,:w:+:ad:*3,:w:+:ad:*4
     928                            .endm
     929                    
     930 000032f0           plqbgetup_t                             ;% to bump getup time
     931 000032f0                   SKLM    10,2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   22

     932 00003340                   SKLM    20,2
     933 00003390                   SKLM    30,2
     934 000033e0                   SKLM    40,2
     935 00003430                   SKLM    50,2
     936 00003480                   SKLM    60,10
     937 000034d0           plqbblkbase_t                           ;Base % to block
     938 000034d0                   SKLM    10,2
     939 00003520                   SKLM    20,2
     940 00003570                   SKLM    30,1
     941 000035c0                   SKLM    35,1
     942 00003610                   SKLM    40,1
     943 00003660                   SKLM    47,7
     944 000036b0           plqbblkatk_t                            ;% to block per attack
     945 000036b0     0000          .word   0,10,20,30,40
     946 00003700     0032          .word   50,50,50,50,50
     947 00003750           sklhhdly_t                              ;Max delay on hh
     948 00003750                   SKLM    150,-6
     949 000037a0                   SKLM    120,-6
     950 000037f0                   SKLM    90,-6
     951 00003840                   SKLM    60,-6
     952 00003890                   SKLM    28,-3
     953 000038e0                   SKLM    13,-2
     954 00003930           sklhrdly_t                              ;Max delay on hh rev
     955 00003930                   SKLM    150,-6
     956 00003980                   SKLM    120,-6
     957 000039d0                   SKLM    90,-6
     958 00003a20                   SKLM    60,-6
     959 00003a70                   SKLM    28,-3
     960 00003ac0                   SKLM    13,-2
     961 00003b10           sklrep_t                                ;% to repeat
     962 00003b10                   SKLM    20,4
     963 00003b60                   SKLM    45,2
     964 00003bb0                   SKLM    55,4
     965 00003c00                   SKLM    75,2
     966 00003c50                   SKLM    85,2
     967 00003ca0                   SKLM    90,3
     968                    
     969                    
     970                    
     971 00003cf0           plqbwnshort_t
     972 00003cf0 00007f20'         .long   bret_s_t,raz_s_t,utak_s_t,yoko_s_t
     973 00003d70 00007740'         .long   shawn_s_t,bam_s_t,doink_s_t,doink_s_t,lex_s_t
     974 00003e10           plqbwnmed_t
     975 00003e10 00008040'         .long   bret_m_t,raz_m_t,utak_m_t,yoko_m_t
     976 00003e90 00007860'         .long   shawn_m_t,bam_m_t,doink_m_t,doink_m_t,lex_m_t
     977 00003f30           plqbwnlong_t
     978 00003f30 0000ba50'         .long   bret_l_t,raz_l_t,utak_l_t,yoko_l_t
     979 00003fb0 0000ba50'         .long   shawn_l_t,bam_l_t,doink_l_t,doink_l_t,lex_l_t
     980                    
     981                    
     982                    
     983                    BBL     .macro  w,w2,l
     984                            .byte   :w:,:w2:
     985                            .long   :l:
     986                            .endm
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   23

     987                    
     988                    DS_CODE .macro
     989                            .word   8000h+0
     990                            .endm
     991                    DS_CODEEND      .macro
     992                            exgpc   a9
     993                            .endm
     994                    DS_SEEKTIL0     .macro
     995                            .word   8000h+1
     996                            .endm
     997                    DS_RNDA .macro  l
     998                            .word   8000h+2
     999                            .long   :l:
    1000                            .endm
    1001                    DS_WTINT        .macro
    1002                            .word   8000h+3
    1003                            .endm
    1004                    DS_ABIFBLK      .macro
    1005                            .word   8000h+4
    1006                            .endm
    1007                    DS_CALL .macro  a
    1008                            .word   8000h+5
    1009                            .long   :a:
    1010                            .endm
    1011                    DS_RJMP .macro  p,a
    1012                            .word   8000h+6,:p:
    1013                            .long   :a:
    1014                            .endm
    1015                    DS_JMP  .macro  a
    1016                            .word   8000h+7
    1017                            .long   :a:
    1018                            .endm
    1019                    DS_SLP1 .macro
    1020                            .word   0c000h+0
    1021                            .endm
    1022                    DS_END  .macro
    1023                            .word   0,0
    1024                            .endm
    1025                    
    1026                    
    1027 00004050           bam_s_t
    1028 00004050                   BBL     MODE_HEADHOLD,-1,baM_hh
    1029 00004080                   BBL     MODE_HEADHELD,-1,baM_hhr
    1030 000040b0                   BBL     MODE_OPPOVERHEAD,-1,baM_ooh
    1031 000040e0                   BBL     -1,MODE_ONGROUND,M_og
    1032 00004110                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1033 00004140                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1034 00004170                   WL      -1,baM_n
    1035 000041a0           bam_m_t
    1036 000041a0                   BBL     MODE_HEADHOLD,-1,baM_hh
    1037 000041d0                   BBL     MODE_HEADHELD,-1,baM_hhr
    1038 00004200                   BBL     MODE_OPPOVERHEAD,-1,baM_ooh
    1039 00004230                   BBL     -1,MODE_ONGROUND,Mm_og
    1040 00004260                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1041 00004290                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   24

    1042 000042c0                   WL      -1,baMm_n
    1043                    
    1044 000042f0           baM_n   ;Normal
    1045 000042f0     000d          .word   (baM_n_-$)/32-1
    1046 00004300 0000a390'         .long   ctjbrun
    1047 00004320 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1048 000043a0 00009b70'         .long   ctjbspx
    1049 000043c0 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1050 00004420 0000a480'         .long   ctjbflng
    1051 00004440 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1052 00004480 0000a1f0'         .long   ctjbllsk                ;Karate kick
    1053 000044a0 00009d30'         .long   ctjbspsk                ;Pickup
    1054 000044c0           baM_n_
    1055 000044c0           baMm_n
    1056 000044c0     0009          .word   (baMm_n_-$)/32-1
    1057 000044d0 0000dbc0'         .long   drn_seek
    1058 000044f0 0000dea0'         .long   drn_retreat
    1059 00004510 0000a390'         .long   ctjbrun
    1060 00004530 00009cd0'         .long   ctjbsp
    1061 00004550 00009d10'         .long   ctjbsk
    1062 00004570 0000a480'         .long   ctjbflng
    1063 00004590 0000a1f0'         .long   ctjbllsk                ;Karate kick
    1064 000045b0 00009d30'         .long   ctjbspsk                ;Pickup
    1065 000045d0 0000a6d0'         .long   ctjbfast                ;Hyper
    1066 000045f0 0000a640'         .long   ctjbchrg
    1067 00004610           baMm_n_
    1068 00004610           baM_hh  ;Holding head
    1069 00004610     fffa          .word   -(7-1)
    1070 00004620 00004a70'         .long   ctjbbahhpg              ;Pogo
    1071 00004640 0000b890'         .long   ctjblrrsp               ;Pile drvr
    1072 00004660 0000aed0'         .long   ctjbjk          ;Pickup
    1073 00004680 000047e0'         .long   ctjbbahhrsk     ;Knees (3 way)
    1074 000046a0 000047e0'         .long   ctjbbahhrsk
    1075 000046c0 000047e0'         .long   ctjbbahhrsk
    1076 000046e0 0000b9d0'         .long   ctjbspsk2               ;Neck brkr
    1077                    
    1078 00004700           baM_hhr ;Head held reversals
    1079 00004700     0003          .word   4-1
    1080 00004710 00009cf0'         .long   ctjbk
    1081 00004730 00004a70'         .long   ctjbbahhpg              ;Pogo
    1082 00004750 0000b890'         .long   ctjblrrsp               ;Pile drvr
    1083 00004770 0000b9d0'         .long   ctjbspsk2               ;Neck brkr
    1084                    
    1085 00004790           baM_ooh ;Holding opp over head
    1086 00004790     0001          .word   2-1
    1087 000047a0 00009cf0'         .long   ctjbk           ;Slam
    1088 000047c0 0000a2b0'         .long   ctjbdsk         ;Back brkr
    1089                    
    1090 000047e0           ctjbbahhrsk ;Knees
    1091 000047e0     0110          .word   R_M+SK_M,2
    1092 00004800     0000          .word   0,5
    1093 00004820     0010          .word   SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, 0,4
    1094 000048e0                   DS_RNDA sklrep_t
    1095 00004910     0010          .word   SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, 0,4
    1096 000049d0                   DS_RJMP 33,ctjbk                ;Hip toss
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   25

    1097 00004a10                   DS_RJMP 33,ctjbsp               ;Pickup
    1098 00004a50     0044          .word   D_M+SP_M,0      ;Pile drvr
    1099 00004a70           ctjbbahhpg
    1100 00004a70     0020          .word   U_M,2, D_M,2, 0,2, D_M,2, SK_M,50
    1101 00004b10                   DS_RNDA sklrep_t
    1102 00004b40     0004          .word   SP_M,2, 0,2, SP_M,2, 0,2, SP_M,2, 0,15  ;Repeat
    1103 00004c00                   DS_RNDA sklrep_t
    1104 00004c30     0004          .word   SP_M,2, 0,2, SP_M,2, 0,2, SP_M,2, 0,15
    1105 00004cf0     0004          .word   SP_M,2, 0,2, SP_M,2, 0,2, SP_M,0
    1106                    
    1107                    
    1108                    
    1109 00004d90           utak_s_t
    1110 00004d90                   BBL     MODE_HEADHOLD,-1,utM_hh
    1111 00004dc0                   BBL     MODE_HEADHELD,-1,M_hhr
    1112 00004df0                   BBL     MODE_CHOKEHOLD,-1,utM_chold
    1113 00004e20                   BBL     -1,MODE_ONGROUND,M_og
    1114 00004e50                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1115 00004e80                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1116 00004eb0                   WL      -1,utM_n
    1117 00004ee0           utak_m_t
    1118 00004ee0                   BBL     MODE_HEADHOLD,-1,utM_hh
    1119 00004f10                   BBL     MODE_HEADHELD,-1,M_hhr
    1120 00004f40                   BBL     MODE_CHOKEHOLD,-1,utM_chold
    1121 00004f70                   BBL     -1,MODE_ONGROUND,Mm_og
    1122 00004fa0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1123 00004fd0                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1124 00005000                   WL      -1,utMm_n
    1125                    
    1126 00005030           utM_n   ;Normal
    1127 00005030     0010          .word   (utM_n_-$)/32-1
    1128 00005040 0000a390'         .long   ctjbrun
    1129 00005060 00009b70'         .long   ctjbspx
    1130 00005080 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1131 00005100 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1132 00005160 0000a480'         .long   ctjbflng
    1133 00005180 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1134 000051c0 0000a5c0'         .long   ctjbucut
    1135 000051e0 000055b0'         .long   ctjbutshootps   ;Fire push ghosts
    1136 00005200 00005690'         .long   ctjbutshootpl   ;Fire pull ghosts
    1137 00005220 00005770'         .long   ctjbuttombhit   ;Smash with tombstone
    1138 00005240 0000adb0'         .long   ctjbjp          ;Slide choke
    1139 00005260           utM_n_
    1140 00005260           utMm_n
    1141 00005260     000b          .word   (utMm_n_-$)/32-1
    1142 00005270 0000dbc0'         .long   drn_seek
    1143 00005290 0000dea0'         .long   drn_retreat
    1144 000052b0 0000a390'         .long   ctjbrun
    1145 000052d0 00009cd0'         .long   ctjbsp
    1146 000052f0 00009d10'         .long   ctjbsk
    1147 00005310 0000a480'         .long   ctjbflng
    1148 00005330 000055b0'         .long   ctjbutshootps   ;Fire push ghosts
    1149 00005350 00005690'         .long   ctjbutshootpl   ;Fire pull ghosts
    1150 00005370 00005770'         .long   ctjbuttombhit   ;Smash with tombstone
    1151 00005390 0000adb0'         .long   ctjbjp          ;Slide choke
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   26

    1152 000053b0 0000a6d0'         .long   ctjbfast                ;Hyper
    1153 000053d0 0000a640'         .long   ctjbchrg
    1154 000053f0           utMm_n_
    1155 000053f0           utM_hh  ;Holding head
    1156 000053f0     fffb          .word   -(6-1)
    1157 00005400 0000b2a0'         .long   ctjbuddsk               ;Pile drv
    1158 00005420 0000b890'         .long   ctjblrrsp               ;Neck brkr
    1159 00005440 00005a80'         .long   ctjbuthhrp
    1160 00005460 0000a5c0'         .long   ctjbucut
    1161 00005480 00005770'         .long   ctjbuttombhit   ;Smash with tombstone
    1162 000054a0 00005f20'         .long   ctjbutdk                ;Face slam
    1163                    
    1164 000054c0           utM_chold ;Choke holding opp by neck
    1165 000054c0     0006          .word   7-1
    1166 000054d0 00009cb0'         .long   ctjbp
    1167 000054f0 00009cf0'         .long   ctjbk
    1168 00005510 0000a560'         .long   ctjbhtoss
    1169 00005530 0000a5c0'         .long   ctjbucut
    1170 00005550 00005cd0'         .long   ctjbutchup
    1171 00005570 00005f20'         .long   ctjbutdk                ;Face slam
    1172 00005590 0000a2b0'         .long   ctjbdsk         ;Slam
    1173                    
    1174 000055b0           ctjbutshootps
    1175 000055b0     0100          .word   R_M,2, 0,2, R_M,2, K_M,2, 0,2
    1176 00005650                   DS_WTINT
    1177 00005660                   DS_ABIFBLK
    1178 00005670     0009          .word   P_M+K_M,0
    1179 00005690           ctjbutshootpl
    1180 00005690     0080          .word   L_M,2, 0,2, L_M,2, K_M,2, 0,2
    1181 00005730                   DS_WTINT
    1182 00005740                   DS_ABIFBLK
    1183 00005750     0044          .word   D_M+SP_M,0
    1184 00005770           ctjbuttombhit
    1185 00005770     0100          .word   R_M,2, 0,2, R_M,2, SK_M,5
    1186 000057f0                   DS_RNDA sklrep_t
    1187 00005820     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4      ;Repeat
    1188 000058e0                   DS_ABIFBLK
    1189 000058f0                   DS_RNDA sklrep_t
    1190 00005920     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4
    1191 000059e0     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,0
    1192                    
    1193 00005a80           ctjbuthhrp ;Knee & hdbuts
    1194 00005a80     0101          .word   R_M+P_M,2
    1195 00005aa0     0000          .word   0,5
    1196 00005ac0     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1197 00005b80                   DS_RNDA sklrep_t
    1198 00005bb0     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1199 00005c70                   DS_RJMP 50,ctjbsp               ;Fly kick
    1200 00005cb0     0008          .word   K_M,0           ;Neck brkr
    1201                    
    1202 00005cd0           ctjbutchup ;Knee & hdbuts
    1203 00005cd0     0021          .word   U_M+P_M,2
    1204 00005cf0     0000          .word   0,5
    1205 00005d10     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1206 00005dd0                   DS_RNDA sklrep_t
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   27

    1207 00005e00     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1208 00005ec0                   DS_RJMP 50,ctjbsp               ;Fly kick
    1209 00005f00     0008          .word   K_M,0           ;Neck brkr
    1210                    
    1211 00005f20           ctjbutdk        ;Face slam
    1212 00005f20     0040          .word   D_M,2, 0,2, D_M+K_M,2
    1213 00005f80                   DS_RNDA sklrep_t
    1214 00005fb0     0000          .word   0,5
    1215 00005fd0     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4      ;Repeat
    1216 00006090     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1217 00006150                   DS_RNDA sklrep_t
    1218 00006180     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,0
    1219                    
    1220                    
    1221                    
    1222 00006220           doink_s_t
    1223 00006220                   BBL     MODE_HEADHOLD,-1,doM_hh
    1224 00006250                   BBL     MODE_HEADHELD,-1,doM_hhr
    1225 00006280                   BBL     -1,MODE_ONGROUND,M_og
    1226 000062b0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1227 000062e0                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1228 00006310                   WL      -1,doM_n
    1229 00006340           doink_m_t
    1230 00006340                   BBL     MODE_HEADHOLD,-1,doM_hh
    1231 00006370                   BBL     MODE_HEADHELD,-1,doM_hhr
    1232 000063a0                   BBL     -1,MODE_ONGROUND,Mm_og
    1233 000063d0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1234 00006400                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1235 00006430                   WL      -1,doMm_n
    1236                    
    1237 00006460           doM_n   ;Normal
    1238 00006460     000f          .word   (doM_n_-$)/32-1
    1239 00006470 0000a390'         .long   ctjbrun
    1240 00006490 00009b70'         .long   ctjbspx
    1241 000064b0 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1242 00006530 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1243 00006590 0000a480'         .long   ctjbflng
    1244 000065b0 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1245 000065f0 0000a5c0'         .long   ctjbucut
    1246 00006610 00006940'         .long   ctjbdoham               ;Hammer
    1247 00006630 00006c40'         .long   ctjbdoeslap     ;Ear slap
    1248 00006650 00006ea0'         .long   ctjbdopbig              ;Boxing punch
    1249 00006670           doM_n_
    1250 00006670           doMm_n
    1251 00006670     0009          .word   (doMm_n_-$)/32-1
    1252 00006680 0000dbc0'         .long   drn_seek
    1253 000066a0 0000dea0'         .long   drn_retreat
    1254 000066c0 0000a390'         .long   ctjbrun
    1255 000066e0 00009cd0'         .long   ctjbsp
    1256 00006700 00009d10'         .long   ctjbsk
    1257 00006720 0000a480'         .long   ctjbflng
    1258 00006740 00006940'         .long   ctjbdoham               ;Hammer
    1259 00006760 00006c40'         .long   ctjbdoeslap     ;Ear slap
    1260 00006780 0000a6d0'         .long   ctjbfast                ;Hyper
    1261 000067a0 0000a640'         .long   ctjbchrg
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   28

    1262 000067c0           doMm_n_
    1263 000067c0           doM_hh  ;Holding head
    1264 000067c0     fff9          .word   -(8-1)
    1265 000067d0 0000b340'         .long   ctjbuddskk              ;Face slam
    1266 000067f0 0000b890'         .long   ctjblrrsp               ;Pile drv
    1267 00006810 00006940'         .long   ctjbdoham
    1268 00006830 0000ad90'         .long   ctjbj2p         ;Buzz
    1269 00006850 0000a7d0'         .long   ctjbhhp3k               ;P & fly kick
    1270 00006870 0000a930'         .long   ctjbhhp4
    1271 00006890 0000aad0'         .long   ctjbhhp3pd              ;P & pdrv
    1272 000068b0 0000ac30'         .long   ctjbhhsk3pd     ;K & pdrv
    1273                    
    1274 000068d0           doM_hhr ;Head held reversals
    1275 000068d0     0002          .word   3-1
    1276 000068e0 00009cf0'         .long   ctjbk
    1277 00006900 0000b340'         .long   ctjbuddskk              ;Face slam
    1278 00006920 0000b890'         .long   ctjblrrsp               ;Pile drv
    1279                    
    1280 00006940     0100  ctjbdoham       .word   R_M,2, 0,2, R_M,2, SK_M,10
    1281 000069c0                   DS_RNDA sklrep_t
    1282 000069f0     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4      ;Repeat
    1283 00006ab0                   DS_RNDA sklrep_t
    1284 00006ae0     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4
    1285 00006ba0     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,0
    1286                    
    1287 00006c40           ctjbdoeslap
    1288 00006c40     0040          .word   D_M,2, D_M+R_M,2, R_M,2, P_M,2
    1289 00006cc0                   DS_RNDA sklrep_t
    1290 00006cf0     0000          .word   0,5, P_M,5, 0,5, P_M,5                  ;Repeat
    1291 00006d70                   DS_RNDA sklrep_t
    1292 00006da0     0000          .word   0,5, P_M,5, 0,5, P_M,5
    1293 00006e20     0000          .word   0,5, P_M,5, 0,5, P_M,0
    1294                    
    1295 00006ea0     0001  ctjbdopbig      .word   P_M,2, 0,2, P_M,2, 0,2, P_M,2, 0,2, P_M,2, 0,2
    1296 00006fa0     0001          .word   P_M,2, 0,2, P_M,2, 0,2, P_M,0
    1297                    
    1298                    
    1299                    
    1300 00007040           yoko_s_t
    1301 00007040                   BBL     MODE_HEADHOLD,-1,yoM_hh
    1302 00007070                   BBL     MODE_HEADHELD,-1,M_hhr
    1303 000070a0                   BBL     MODE_OPPOVERHEAD,-1,yoM_ooh
    1304 000070d0                   BBL     -1,MODE_ONGROUND,M_og
    1305 00007100                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1306 00007130                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1307 00007160                   WL      -1,yoM_n
    1308 00007190           yoko_m_t
    1309 00007190                   BBL     MODE_HEADHOLD,-1,yoM_hh
    1310 000071c0                   BBL     MODE_HEADHELD,-1,M_hhr
    1311 000071f0                   BBL     MODE_OPPOVERHEAD,-1,yoM_ooh
    1312 00007220                   BBL     -1,MODE_ONGROUND,Mm_og
    1313 00007250                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1314 00007280                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1315 000072b0                   WL      -1,yoMm_n
    1316                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   29

    1317 000072e0           yoM_n   ;Normal
    1318 000072e0     000f          .word   (yoM_n_-$)/32-1
    1319 000072f0 0000a390'         .long   ctjbrun
    1320 00007310 00009b70'         .long   ctjbspx
    1321 00007330 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1322 000073b0 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1323 00007410 0000a480'         .long   ctjbflng
    1324 00007430 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1325 00007470 0000adb0'         .long   ctjbjp          ;Speed jab
    1326 00007490 0000a170'         .long   ctjbrrsk                ;Scissor squish
    1327 000074b0 0000a070'         .long   ctjbrrp         ;Gut push
    1328 000074d0 00009d30'         .long   ctjbspsk                ;Pickup
    1329 000074f0           yoM_n_
    1330 000074f0           yoMm_n
    1331 000074f0     000a          .word   (yoMm_n_-$)/32-1
    1332 00007500 0000dbc0'         .long   drn_seek
    1333 00007520 0000dea0'         .long   drn_retreat
    1334 00007540 0000a390'         .long   ctjbrun
    1335 00007560 00009cd0'         .long   ctjbsp
    1336 00007580 00009d10'         .long   ctjbsk
    1337 000075a0 0000a480'         .long   ctjbflng
    1338 000075c0 0000adb0'         .long   ctjbjp          ;Speed jab
    1339 000075e0 0000a170'         .long   ctjbrrsk                ;Scissor squish
    1340 00007600 00009d30'         .long   ctjbspsk                ;Pickup
    1341 00007620 0000a6d0'         .long   ctjbfast                ;Hyper
    1342 00007640 0000a640'         .long   ctjbchrg
    1343 00007660           yoMm_n_
    1344 00007660           yoM_hh  ;Holding head
    1345 00007660     fffd          .word   -(4-1)
    1346 00007670 0000b2a0'         .long   ctjbuddsk               ;Vert suplex
    1347 00007690 0000b890'         .long   ctjblrrsp               ;Scissor squish
    1348 000076b0 0000ad90'         .long   ctjbj2p         ;Salt
    1349 000076d0 0000a5c0'         .long   ctjbucut
    1350                    
    1351 000076f0           yoM_ooh ;Holding opp over head
    1352 000076f0     0001          .word   2-1
    1353 00007700 00009cf0'         .long   ctjbk           ;Slam
    1354 00007720 0000a2b0'         .long   ctjbdsk         ;Spinning slam
    1355                    
    1356                    
    1357                    
    1358 00007740           shawn_s_t
    1359 00007740                   BBL     MODE_HEADHOLD,-1,shM_hh
    1360 00007770                   BBL     MODE_HEADHELD,-1,shM_hhr
    1361 000077a0                   BBL     -1,MODE_ONGROUND,M_og
    1362 000077d0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1363 00007800                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1364 00007830                   WL      -1,shM_n
    1365 00007860           shawn_m_t
    1366 00007860                   BBL     MODE_HEADHOLD,-1,shM_hh
    1367 00007890                   BBL     MODE_HEADHELD,-1,shM_hhr
    1368 000078c0                   BBL     -1,MODE_ONGROUND,Mm_og
    1369 000078f0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1370 00007920                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1371 00007950                   WL      -1,shMm_n
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   30

    1372                    
    1373 00007980           shM_n   ;Normal
    1374 00007980     0010          .word   (shM_n_-$)/32-1
    1375 00007990 0000a390'         .long   ctjbrun
    1376 000079b0 00009b70'         .long   ctjbspx
    1377 000079d0 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1378 00007a50 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1379 00007ab0 0000a480'         .long   ctjbflng
    1380 00007ad0 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1381 00007b10 0000a1f0'         .long   ctjbllsk                ;Karate kick
    1382 00007b30 0000af50'         .long   ctjbjkk         ;Speed kick
    1383 00007b50 0000a170'         .long   ctjbrrsk                ;Frankensteiner
    1384 00007b70 0000a0f0'         .long   ctjbrrk         ;Sliding kick toss
    1385 00007b90 0000b0d0'         .long   ctjbjisp                ;Flipslam
    1386 00007bb0           shM_n_
    1387 00007bb0           shMm_n
    1388 00007bb0     000c          .word   (shMm_n_-$)/32-1
    1389 00007bc0 0000dbc0'         .long   drn_seek
    1390 00007be0 0000dea0'         .long   drn_retreat
    1391 00007c00 0000a390'         .long   ctjbrun
    1392 00007c20 00009cd0'         .long   ctjbsp
    1393 00007c40 00009d10'         .long   ctjbsk
    1394 00007c60 0000a480'         .long   ctjbflng
    1395 00007c80 0000a1f0'         .long   ctjbllsk                ;Karate kick
    1396 00007ca0 0000af50'         .long   ctjbjkk         ;Speed kick
    1397 00007cc0 0000a170'         .long   ctjbrrsk                ;Frankensteiner
    1398 00007ce0 0000a0f0'         .long   ctjbrrk         ;Sliding kick toss
    1399 00007d00 0000b0d0'         .long   ctjbjisp                ;Flipslam
    1400 00007d20 0000a6d0'         .long   ctjbfast                ;Hyper
    1401 00007d40 0000a640'         .long   ctjbchrg
    1402 00007d60           shMm_n_
    1403 00007d60           shM_hh  ;Holding head
    1404 00007d60     fff9          .word   -(8-1)
    1405 00007d70 0000b2a0'         .long   ctjbuddsk               ;German suplex
    1406 00007d90 0000b890'         .long   ctjblrrsp               ;Frankensteiner
    1407 00007db0 00009f70'         .long   ctjbrsk4k               ;Quick knees
    1408 00007dd0 0000af50'         .long   ctjbjkk         ;Speed kick
    1409 00007df0 00009d50'         .long   ctjbrp          ;Arm break
    1410 00007e10 00009d90'         .long   ctjbrsp4                ;Jmp head butt
    1411 00007e30 00009e70'         .long   ctjbrk4         ;Speed kick
    1412 00007e50 0000b930'         .long   ctjblrrk                ;Kick toss
    1413                    
    1414 00007e70           shM_hhr ;Head held reversals
    1415 00007e70     0004          .word   5-1
    1416 00007e80 00009cf0'         .long   ctjbk
    1417 00007ea0 0000b2a0'         .long   ctjbuddsk               ;German suplex
    1418 00007ec0 0000b890'         .long   ctjblrrsp               ;Frankensteiner
    1419 00007ee0 0000b930'         .long   ctjblrrk                ;Kick toss
    1420 00007f00 0000af50'         .long   ctjbjkk         ;Speed kick
    1421                    
    1422                    
    1423                    
    1424 00007f20           bret_s_t
    1425 00007f20                   BBL     MODE_HEADHOLD,-1,brM_hh
    1426 00007f50                   BBL     MODE_HEADHELD,-1,brM_hhr
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   31

    1427 00007f80                   BBL     -1,MODE_ONGROUND,M_og
    1428 00007fb0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1429 00007fe0                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1430 00008010                   WL      -1,brM_n
    1431 00008040           bret_m_t
    1432 00008040                   BBL     MODE_HEADHOLD,-1,brM_hh
    1433 00008070                   BBL     MODE_HEADHELD,-1,brM_hhr
    1434 000080a0                   BBL     -1,MODE_ONGROUND,Mm_og
    1435 000080d0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1436 00008100                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1437 00008130                   WL      -1,brMm_n
    1438                    
    1439 00008160           brM_n   ;Normal
    1440 00008160     0010          .word   (brM_n_-$)/32-1
    1441 00008170 0000a390'         .long   ctjbrun
    1442 00008190 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1443 00008210 00009b70'         .long   ctjbspx
    1444 00008230 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1445 00008290 0000a480'         .long   ctjbflng
    1446 000082b0 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1447 000082f0 0000a5c0'         .long   ctjbucut
    1448 00008310 0000a2d0'         .long   ctjbddp         ;Leap ucut
    1449 00008330 0000adb0'         .long   ctjbjp          ;Face rake
    1450 00008350 0000ae30'         .long   ctjbj2sp                ;Rolling ucut
    1451 00008370 0000a1f0'         .long   ctjbllsk                ;Fast kick
    1452 00008390           brM_n_
    1453 00008390           brMm_n
    1454 00008390     000b          .word   (brMm_n_-$)/32-1
    1455 000083a0 0000dbc0'         .long   drn_seek
    1456 000083c0 0000dea0'         .long   drn_retreat
    1457 000083e0 0000a390'         .long   ctjbrun
    1458 00008400 00009cd0'         .long   ctjbsp
    1459 00008420 00009d10'         .long   ctjbsk
    1460 00008440 0000a480'         .long   ctjbflng
    1461 00008460 0000a2d0'         .long   ctjbddp         ;Leap ucut
    1462 00008480 0000adb0'         .long   ctjbjp          ;Face rake
    1463 000084a0 0000ae30'         .long   ctjbj2sp                ;Rolling ucut
    1464 000084c0 0000a1f0'         .long   ctjbllsk                ;Fast kick
    1465 000084e0 0000a6d0'         .long   ctjbfast                ;Hyper
    1466 00008500 0000a640'         .long   ctjbchrg
    1467 00008520           brMm_n_
    1468 00008520           brM_hh  ;Holding head
    1469 00008520     fffa          .word   -(7-1)
    1470 00008530 0000b2a0'         .long   ctjbuddsk               ;Neck DDT
    1471 00008550 0000b890'         .long   ctjblrrsp               ;Pile drvr
    1472 00008570 0000a5c0'         .long   ctjbucut
    1473 00008590 0000b150'         .long   ctjbjpx         ;Face drvr
    1474 000085b0 00009d50'         .long   ctjbrp          ;Arm break
    1475 000085d0 00009d70'         .long   ctjbrsp         ;Head to knee
    1476 000085f0 0000b7f0'         .long   ctjblrrp                ;Knee to face
    1477                    
    1478 00008610           brM_hhr ;Head held reversals
    1479 00008610     0003          .word   4-1
    1480 00008620 00009cf0'         .long   ctjbk
    1481 00008640 0000b2a0'         .long   ctjbuddsk               ;Neck DDT
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   32

    1482 00008660 0000b890'         .long   ctjblrrsp               ;Pile drvr
    1483 00008680 0000b7f0'         .long   ctjblrrp                ;Kick toss
    1484                    
    1485                    
    1486                    
    1487 000086a0           raz_s_t
    1488 000086a0                   BBL     MODE_HEADHOLD,-1,rzM_hh
    1489 000086d0                   BBL     MODE_HEADHELD,-1,rzM_hhr
    1490 00008700                   BBL     -1,MODE_ONGROUND,M_og
    1491 00008730                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1492 00008760                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1493 00008790                   WL      -1,rzM_n
    1494 000087c0           raz_m_t
    1495 000087c0                   BBL     MODE_HEADHOLD,-1,rzM_hh
    1496 000087f0                   BBL     MODE_HEADHELD,-1,rzM_hhr
    1497 00008820                   BBL     -1,MODE_ONGROUND,Mm_og
    1498 00008850                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1499 00008880                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1500 000088b0                   WL      -1,rzMm_n
    1501                    
    1502 000088e0           rzM_n   ;Normal
    1503 000088e0     000e          .word   (rzM_n_-$)/32-1
    1504 000088f0 0000a390'         .long   ctjbrun
    1505 00008910 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1506 00008990 00009b70'         .long   ctjbspx
    1507 000089b0 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1508 00008a10 0000a480'         .long   ctjbflng
    1509 00008a30 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1510 00008a70 0000a5c0'         .long   ctjbucut
    1511 00008a90 0000adb0'         .long   ctjbjp          ;Down slash
    1512 00008ab0 0000a0f0'         .long   ctjbrrk         ;Rug slam
    1513 00008ad0           rzM_n_
    1514 00008ad0           rzMm_n
    1515 00008ad0     0008          .word   (rzMm_n_-$)/32-1
    1516 00008ae0 0000dbc0'         .long   drn_seek
    1517 00008b00 0000dea0'         .long   drn_retreat
    1518 00008b20 0000a390'         .long   ctjbrun
    1519 00008b40 00009cd0'         .long   ctjbsp
    1520 00008b60 00009d10'         .long   ctjbsk
    1521 00008b80 0000a480'         .long   ctjbflng
    1522 00008ba0 0000adb0'         .long   ctjbjp          ;Down slash
    1523 00008bc0 0000a6d0'         .long   ctjbfast                ;Hyper
    1524 00008be0 0000a640'         .long   ctjbchrg
    1525 00008c00           rzMm_n_
    1526 00008c00           rzM_hh  ;Holding head
    1527 00008c00     fffb          .word   -(6-1)
    1528 00008c10 0000b2a0'         .long   ctjbuddsk               ;P drvr
    1529 00008c30 0000b890'         .long   ctjblrrsp               ;Razors edge
    1530 00008c50 00008d60'         .long   ctjbrzup4               ;Slashes up
    1531 00008c70 00008e40'         .long   ctjbrzdp4               ;Slashes dn
    1532 00008c90 0000a5c0'         .long   ctjbucut
    1533 00008cb0 00008f20'         .long   ctjbrzuddksp    ;Rug shake
    1534                    
    1535 00008cd0           rzM_hhr ;Head held reversals
    1536 00008cd0     0003          .word   4-1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   33

    1537 00008ce0 00009cf0'         .long   ctjbk
    1538 00008d00 0000b2a0'         .long   ctjbuddsk               ;P drvr
    1539 00008d20 0000b890'         .long   ctjblrrsp               ;Razors edge
    1540 00008d40 00008f20'         .long   ctjbrzuddksp    ;Rug shake
    1541                    
    1542 00008d60     0021  ctjbrzup4       .word   U_M+P_M,5, 0,5, P_M,5, 0,5, P_M,5, 0,5, P_M,0
    1543 00008e40     0041  ctjbrzdp4       .word   D_M+P_M,5, 0,5, P_M,5, 0,5, P_M,5, 0,5, P_M,0
    1544                    
    1545 00008f20           ctjbrzuddksp
    1546 00008f20     0020          .word   U_M,2, D_M,2, 0,2, D_M,2, K_M,2
    1547 00008fc0                   DS_RNDA sklrep_t
    1548 00008ff0     0000          .word   0,20
    1549 00009010     0004          .word   SP_M,6, 0,6, SP_M,6, 0,6, SP_M,6, 0,6   ;Repeat
    1550 000090d0                   DS_RNDA sklrep_t
    1551 00009100     0004          .word   SP_M,6, 0,6, SP_M,6, 0,6, SP_M,0
    1552                    
    1553                    
    1554                    
    1555 000091a0           lex_s_t
    1556 000091a0                   BBL     MODE_HEADHOLD,-1,lxM_hh
    1557 000091d0                   BBL     MODE_HEADHELD,-1,lxM_hhr
    1558 00009200                   BBL     MODE_OPPOVERHEAD,-1,lxM_ooh
    1559 00009230                   BBL     -1,MODE_ONGROUND,M_og
    1560 00009260                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1561 00009290                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1562 000092c0                   WL      -1,lxM_n
    1563 000092f0           lex_m_t
    1564 000092f0                   BBL     MODE_HEADHOLD,-1,lxM_hh
    1565 00009320                   BBL     MODE_HEADHELD,-1,lxM_hhr
    1566 00009350                   BBL     MODE_OPPOVERHEAD,-1,lxM_ooh
    1567 00009380                   BBL     -1,MODE_ONGROUND,Mm_og
    1568 000093b0                   BBL     -1,MODE_ONTURNBKL,M_opptbkl
    1569 000093e0                   BBL     -1,MODE_CLIMBTURNBKL,M_opptbkl
    1570 00009410                   WL      -1,lxMm_n
    1571                    
    1572 00009440           lxM_n   ;Normal
    1573 00009440     000d          .word   (lxM_n_-$)/32-1
    1574 00009450 0000a390'         .long   ctjbrun
    1575 00009470 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1576 000094f0 00009b70'         .long   ctjbspx
    1577 00009510 0000a400'         .long   ctjbhgrab,ctjbhgrab,ctjbhgrab
    1578 00009570 0000a480'         .long   ctjbflng
    1579 00009590 0000a560'         .long   ctjbhtoss,ctjbhtoss
    1580 000095d0 0000a070'         .long   ctjbrrp         ;Elbow to gut
    1581 000095f0 00009d30'         .long   ctjbspsk                ;Pickup
    1582 00009610           lxM_n_
    1583 00009610           lxMm_n
    1584 00009610     0009          .word   (lxMm_n_-$)/32-1
    1585 00009620 0000dbc0'         .long   drn_seek
    1586 00009640 0000dea0'         .long   drn_retreat
    1587 00009660 0000a390'         .long   ctjbrun
    1588 00009680 00009cd0'         .long   ctjbsp
    1589 000096a0 00009d10'         .long   ctjbsk
    1590 000096c0 0000a480'         .long   ctjbflng
    1591 000096e0 0000a070'         .long   ctjbrrp         ;Elbow to gut
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   34

    1592 00009700 00009d30'         .long   ctjbspsk                ;Pickup
    1593 00009720 0000a6d0'         .long   ctjbfast                ;Hyper
    1594 00009740 0000a640'         .long   ctjbchrg
    1595 00009760           lxMm_n_
    1596 00009760           lxM_hh  ;Holding head
    1597 00009760     fffd          .word   -(4-1)
    1598 00009770 0000b2a0'         .long   ctjbuddsk               ;Neck DDT
    1599 00009790 0000b890'         .long   ctjblrrsp               ;Vert suplex
    1600 000097b0 00009f70'         .long   ctjbrsk4k               ;Quick knees & v suplex
    1601 000097d0 0000aed0'         .long   ctjbjk          ;Pickup
    1602                    
    1603 000097f0           lxM_hhr ;Head held reversals
    1604 000097f0     0003          .word   4-1
    1605 00009800 00009cf0'         .long   ctjbk
    1606 00009820 0000b2a0'         .long   ctjbuddsk               ;Neck DDT
    1607 00009840 0000b890'         .long   ctjblrrsp               ;V suplex
    1608 00009860 0000aed0'         .long   ctjbjk          ;Pickup
    1609                    
    1610 00009880           lxM_ooh ;Holding opp over head
    1611 00009880     0002          .word   3-1
    1612 00009890 00009cb0'         .long   ctjbp           ;Slam
    1613 000098b0 0000a350'         .long   ctjbusp         ;Head slam
    1614 000098d0 0000a370'         .long   ctjbusk         ;Back brkr
    1615                    
    1616                    
    1617                    
    1618 000098f0           M_og    ;Opp on gnd
    1619 000098f0     0005          .word   6-1
    1620 00009900 00009cb0'         .long   ctjbp,ctjbsp,ctjbk,ctjbsk
    1621 00009980 0000a690'         .long   ctjboghg,ctjboghg
    1622 000099c0           Mm_og
    1623 000099c0     0002          .word   3-1
    1624 000099d0 0000dbc0'         .long   drn_seek
    1625 000099f0 0000a5e0'         .long   ctjbseeksp
    1626 00009a10 0000a610'         .long   ctjbseeksk
    1627                    
    1628 00009a30           M_opptbkl ;Opp on turnbkl
    1629 00009a30     0000          .word   1-1
    1630 00009a40 0000a390'         .long   ctjbrun
    1631                    
    1632 00009a60           M_hhr   ;Head held reversals
    1633 00009a60     0002          .word   3-1
    1634 00009a70 00009cf0'         .long   ctjbk
    1635 00009a90 0000b2a0'         .long   ctjbuddsk
    1636 00009ab0 0000b890'         .long   ctjblrrsp
    1637                    
    1638 00009ad0           M_shrtblkr
    1639 00009ad0     0001          .word   2-1
    1640 00009ae0 0000a400'         .long   ctjbhgrab
    1641 00009b00 0000a560'         .long   ctjbhtoss
    1642 00009b20           M_shrtblkrdl
    1643 00009b20     0001          .word   2-1
    1644 00009b30 0000a400'         .long   ctjbhgrab
    1645 00009b50 00009b70'         .long   ctjbspx
    1646                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   35

    1647 00009b70     0004  ctjbspx .word   SP_M,2, 0,2, SP_M,2, 0,2, SP_M,2
    1648 00009c10     0004          .word   SP_M,2, 0,2, SP_M,2, 0,2, SP_M,0
    1649                    
    1650 00009cb0     0001  ctjbp   .word   P_M,0
    1651 00009cd0     0004  ctjbsp  .word   SP_M,0
    1652 00009cf0     0008  ctjbk   .word   K_M,0
    1653 00009d10     0010  ctjbsk  .word   SK_M,0
    1654 00009d30     0014  ctjbspsk        .word   SP_M+SK_M,0
    1655 00009d50     0101  ctjbrp  .word   R_M+P_M,0
    1656 00009d70     0104  ctjbrsp .word   R_M+SP_M,0
    1657 00009d90     0104  ctjbrsp4        .word   R_M+SP_M,4, 0,4, SP_M,4, 0,4, SP_M,4, 0,4, SP_M,0
    1658 00009e70     0108  ctjbrk4 .word   R_M+K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4, K_M,0
    1659 00009f50     0110  ctjbrsk .word   R_M+SK_M,0
    1660 00009f70     0110  ctjbrsk4k       .word   R_M+SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, K_M,0
    1661 0000a070     0100  ctjbrrp .word   R_M,2, 0,2, R_M,2, P_M,0
    1662 0000a0f0     0100  ctjbrrk .word   R_M,2, 0,2, R_M,2, K_M,0
    1663 0000a170     0100  ctjbrrsk        .word   R_M,2, 0,2, R_M,2, SK_M,0
    1664 0000a1f0     0080  ctjbllsk        .word   L_M,2, 0,2, L_M,2, SK_M,0
    1665 0000a270     0041  ctjbdp  .word   D_M+P_M,0
    1666 0000a290     0048  ctjbdk  .word   D_M+K_M,0
    1667 0000a2b0     0050  ctjbdsk .word   D_M+SK_M,0
    1668 0000a2d0     0040  ctjbddp .word   D_M,2, 0,2, D_M,2, P_M,0
    1669 0000a350     0024  ctjbusp .word   U_M+SP_M,0
    1670 0000a370     0030  ctjbusk .word   U_M+SK_M,0
    1671                    
    1672 0000a390           ctjbrun
    1673 0000a390                   DS_CALL drone_chkrun
    1674 0000a3c0     0009          .word   P_M+K_M,0       ;Skipped if bad
    1675 0000a3e0                   DS_END
    1676 0000a400           hgrab
    1677 0000a400     0100  ctjbhgrab       .word   R_M,2, 0,2, R_M,2, SP_M,0
    1678 0000a480     0080  ctjbflng        .word   L_M,2, 0,2, L_M+SP_M,0          ;Grab fling
    1679 0000a4e0     0080  slhtoss .word   L_M,2, 0,2, L_M,2, P_M,0        ;Hip toss
    1680 0000a560     0080  ctjbhtoss       .word   L_M,2, 0,2, L_M+P_M,0           ;Hip toss
    1681 0000a5c0     0044  ctjbucut        .word   D_M+SP_M,0                      ;Uppercut
    1682                    
    1683 0000a5e0           ctjbseeksp
    1684 0000a5e0                   DS_SEEKTIL0
    1685 0000a5f0     0004          .word   SP_M,0
    1686 0000a610           ctjbseeksk
    1687 0000a610                   DS_SEEKTIL0
    1688 0000a620     0010          .word   SK_M,0
    1689 0000a640           ctjbchrg
    1690 0000a640                   DS_CALL drone_chrg
    1691 0000a670                   DS_END
    1692                    
    1693 0000a690           ctjboghg        ;Opp on gnd head grab
    1694 0000a690     0040          .word   D_M,2, SP_M,0
    1695                    
    1696 0000a6d0           ctjbfast        ;Works once
    1697 0000a6d0     0080          .word   L_M,2, L_M+D_M,2, D_M,2, D_M+R_M,2
    1698 0000a750     0100          .word   R_M,2, R_M+U_M,2, U_M,2, U_M+L_M,0
    1699                    
    1700                    
    1701 0000a7d0           ctjbhhp3k       ;Punch*3, kick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   36

    1702                            .asg    6,T
    1703 0000a7d0     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
    1704 0000a850     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
    1705 0000a8d0     0108          .word   R_M+K_M,2
    1706 0000a8f0     0000          .word   0,10
    1707 0000a910                   DS_END
    1708                    
    1709 0000a930           ctjbhhp4        ;Punch*4
    1710                            .asg    6,T
    1711 0000a930     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
    1712 0000a9b0     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
    1713 0000aa30     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,2
    1714 0000aa90     0000          .word   0,10
    1715 0000aab0                   DS_END
    1716                    
    1717 0000aad0           ctjbhhp3pd      ;Punch*3, piledriver
    1718                            .asg    6,T
    1719 0000aad0     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
    1720 0000ab50     0101          .word   R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T+5
    1721 0000abd0     0044          .word   D_M+SP_M,2
    1722 0000abf0     0000          .word   0,10
    1723 0000ac10                   DS_END
    1724                    
    1725 0000ac30           ctjbhhsk3pd ;Knee*3, piledriver
    1726                            .asg    6,T
    1727 0000ac30     0110          .word   R_M+SK_M,T, R_M,T, R_M+SK_M,T, R_M,T
    1728 0000acb0     0110          .word   R_M+SK_M,T, R_M,T, R_M+SK_M,T, R_M,T
    1729 0000ad30     0004          .word   SP_M,2
    1730 0000ad50     0000          .word   0,10
    1731 0000ad70                   DS_END
    1732                    
    1733 0000ad90     00c0  ctjbj2p .word   L_M+D_M,2
    1734 0000adb0     0040  ctjbjp  .word   D_M,2, D_M+R_M,2, R_M,2, P_M,0
    1735 0000ae30     00c0  ctjbj2sp        .word   L_M+D_M,2
    1736 0000ae50     0040  ctjbjsp .word   D_M,2, D_M+R_M,2, R_M,2, SP_M,0
    1737 0000aed0     0040  ctjbjk  .word   D_M,2, D_M+R_M,2, R_M,2, K_M,0
    1738 0000af50     0040  ctjbjkk .word   D_M,2, D_M+R_M,2, R_M,2, K_M,4
    1739 0000afd0     0000          .word   0,4, K_M,4, 0,4, K_M,4
    1740 0000b050     0000          .word   0,4, K_M,4, 0,4, K_M,0
    1741 0000b0d0     0020  ctjbjisp        .word   U_M,2, U_M+R_M,2, R_M,2, SP_M,0
    1742                    
    1743 0000b150     0040  ctjbjpx .word   D_M,2, D_M+R_M,2, R_M,2, P_M,0
    1744 0000b1d0                   DS_RNDA sklrep_t
    1745 0000b200     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,0
    1746                    
    1747                            ;Reversals
    1748                    
    1749 0000b2a0           ctjbuddsk
    1750 0000b2a0     0020          .word   U_M,2, D_M,2, 0,2, D_M,2, SK_M,0
    1751                    
    1752 0000b340           ctjbuddskk      ;Face slam/Pile drv
    1753 0000b340     0020          .word   U_M,2, D_M,2, 0,2, D_M,2, SK_M,2
    1754 0000b3e0                   DS_RNDA sklrep_t
    1755 0000b410     0000          .word   0,8
    1756 0000b430     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4      ;Repeat
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   37

    1757 0000b4f0                   DS_RNDA sklrep_t
    1758 0000b520     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4
    1759 0000b5e0     0008          .word   K_M,4, 0,4, K_M,4, 0,4, K_M,0
    1760                    
    1761 0000b680           ctjbuddsksp ;Repeat SP
    1762 0000b680     0020          .word   U_M,2, D_M,2, 0,2, D_M,2, SK_M,2
    1763 0000b720                   DS_RNDA sklrep_t
    1764 0000b750     0004          .word   SP_M,4, 0,4, SP_M,4, 0,4, SP_M,0
    1765 0000b7f0           ctjblrrp
    1766 0000b7f0     0080          .word   L_M,2, R_M,2, 0,2, R_M,2, P_M,0
    1767 0000b890           ctjblrrsp
    1768 0000b890     0080          .word   L_M,2, R_M,2, 0,2, R_M,2, SP_M,0
    1769 0000b930           ctjblrrk
    1770 0000b930     0080          .word   L_M,2, R_M,2, 0,2, R_M,2, K_M,0
    1771 0000b9d0           ctjbspsk2
    1772 0000b9d0     0004          .word   SP_M,2, SK_M,2, SP_M,2, SK_M,0
    1773                    
    1774                    
    1775                    
    1776 0000ba50           bret_l_t
    1777 0000ba50           raz_l_t
    1778 0000ba50           utak_l_t
    1779 0000ba50           yoko_l_t
    1780 0000ba50           shawn_l_t
    1781 0000ba50           bam_l_t
    1782 0000ba50           doink_l_t
    1783 0000ba50           lex_l_t
    1784 0000ba50                   BBL     -1,MODE_ONGROUND,ctjbmdog
    1785 0000ba80                   WL      -1,ctjbmdn
    1786 0000bab0           ctjbmdn
    1787 0000bab0     0003          .word   4-1
    1788 0000bac0 0000dbc0'         .long   drn_seek
    1789 0000bae0 0000a390'         .long   ctjbrun
    1790 0000bb00 0000f140'         .long   drn_climbtb
    1791 0000bb20 0000fb40'         .long   drn_taunt
    1792 0000bb40           ctjbmdog
    1793 0000bb40     0002          .word   3-1
    1794 0000bb50 0000dbc0'         .long   drn_seek
    1795 0000bb70 0000dbc0'         .long   drn_seek
    1796 0000bb90 0000a390'         .long   ctjbrun
    1797                    
    1798                    
    1799                    
    1800 0000bbb0            SUBRP  drone_chrg
    1801                    
    1802 0000bbb0     b5ae          move    *a13(DRN_BUTCHRG),a14
         0000bbc0     09c0  
    1803 0000bbd0     cb13          jrnz    gcdux                   ;Already charging?
    1804                    
    1805 0000bbe0     1800          movk    20h,a0
    1806 0000bbf0     0d3f          callr   rnd
         0000bc00     058f  
    1807                    
    1808 0000bc10     b5a1          move    *a13(WRESTLERNUM),a1
         0000bc20     0590  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   38

    1809 0000bc30                   X64     a1
    1810 0000bc40     0b21          addi    gcduwres_t,a1
         0000bc50 0000bd20' 
    1811 0000bc70     4001          add     a0,a1
    1812 0000bc80     8621          move    *a1,a1,L                ;Get * script
    1813                    
    1814 0000bc90     9420          move    *a1+,a0
    1815 0000bca0     b00d          move    a0,*a13(DRN_BUTCHRG)
         0000bcb0     09c0  
    1816 0000bcc0     9420          move    *a1+,a0
    1817 0000bcd0     b00d          move    a0,*a13(DRN_BUTCHRGDLY)
         0000bce0     09d0  
    1818 0000bcf0     b22d          move    a1,*a13(DRN_BUTCHRG_p),L
         0000bd00     09e0  
    1819                    
    1820 0000bd10           gcdux
    1821 0000bd10     0960          rets
    1822                    
    1823 0000bd20           gcduwres_t
    1824 0000bd20 0000c680'         .long   gcdubrt,gcdubrt
    1825 0000bd60 0000bf60'         .long   gcduraz,gcduraz2
    1826 0000bda0 0000bfb0'         .long   gcduut,gcduut2
    1827 0000bde0 0000c000'         .long   gcduyok,gcduyok
    1828 0000be20 0000c0a0'         .long   gcdushn,gcdushn2
    1829 0000be60 0000c0f0'         .long   gcdubam,gcdubam2
    1830 0000bea0 0000c510'         .long   gcdudnk,gcdudnk2
    1831 0000bee0 00000000          .long   0,0
    1832 0000bf20 0000c630'         .long   gcdulex,gcdulex2
    1833                    
    1834 0000bf60           gcduraz
    1835 0000bf60     0004          .word   SP_M,TSEC*2             ;Slashes
    1836 0000bf80                   DS_JMP  gcdurun
    1837 0000bfb0           gcduut
    1838 0000bfb0     0001          .word   P_M,TSEC*2              ;Neck breaker
    1839 0000bfd0                   DS_JMP  gcdurun
    1840 0000c000           gcduyok
    1841 0000c000     0001          .word   P_M,TSEC*2              ;Salt throw
    1842 0000c020                   DS_CODE
    1843 0000c030     1820          movk    1,a0
    1844 0000c040     b00d          move    a0,*a13(DRN_MODE)       ;Aggressive
         0000c050     0a30  
    1845 0000c060                   DS_CODEEND
    1846 0000c070                   DS_JMP  gcdurun
    1847 0000c0a0           gcdushn
    1848 0000c0a0     0001          .word   P_M,TSEC*2              ;Suplex
    1849 0000c0c0                   DS_JMP  gcdurun
    1850 0000c0f0           gcdubam
    1851 0000c0f0     0001          .word   P_M,TSEC*2              ;Fire punch
    1852 0000c110                   DS_CODE
    1853 0000c120     5600          clr     a0
    1854 0000c130     b00d          move    a0,*a13(DRN_BUTCHRG)    ;Fire it
         0000c140     09c0  
    1855 0000c150                   DS_CODEEND
    1856 0000c160     0000          .word   0,4
    1857 0000c180     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4      ;Repeat
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   39

    1858 0000c240                   DS_RNDA sklrep_t
    1859 0000c270     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1860 0000c330                   DS_RNDA sklrep_t
    1861 0000c360     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
    1862 0000c420     0001          .word   P_M,4, 0,4, P_M,4, 0,4, P_M,0
    1863 0000c4c0           gcdubam2
    1864 0000c4c0     0004          .word   SP_M,TSEC*2             ;Neck brkr
    1865 0000c4e0                   DS_JMP  gcdurun
    1866 0000c510           gcdudnk
    1867 0000c510     0001          .word   P_M,TSEC*2              ;Buzzer
    1868 0000c530                   DS_JMP  gcdurun
    1869 0000c560           gcdudnk2
    1870 0000c560     0001          .word   P_M,TSEC*2              ;Buzzer (leap)
    1871 0000c580     0100          .word   R_M,2
    1872 0000c5a0                   DS_CODE
    1873 0000c5b0     5600          clr     a0
    1874 0000c5c0     b00d          move    a0,*a13(DRN_BUTCHRG)    ;Fire it
         0000c5d0     09c0  
    1875 0000c5e0                   DS_CODEEND
    1876 0000c5f0     0100          .word   R_M,2                   ;Need?
    1877 0000c610                   DS_END
    1878 0000c630           gcdulex
    1879 0000c630     0001          .word   P_M,TSEC*2              ;Smash
    1880 0000c650                   DS_JMP  gcdurun
    1881 0000c680           gcdulex2
    1882 0000c680           gcdubrt
    1883 0000c680           gcduraz2
    1884 0000c680           gcduut2
    1885 0000c680           gcdushn2
    1886 0000c680     0010          .word   SK_M,TSEC*2             ;Flying kick
    1887                    
    1888 0000c6a0           gcdurun
    1889 0000c6a0                   DS_CALL drone_chkrun
    1890 0000c6d0     0009          .word   P_M+K_M,0               ;Run & end
    1891 0000c6f0                   DS_CODE
    1892                    
    1893 0000c700     b5a0          move    *a13(OBJ_XPOSINT),a0
         0000c710     0110  
    1894 0000c720     b50e          move    *a8(OBJ_XPOSINT),a14
         0000c730     0110  
    1895 0000c740     45c0          sub     a14,a0
    1896 0000c750     0380          abs     a0
    1897 0000c760     0b40          cmpi    150,a0
         0000c770     ff69  
    1898 0000c780     c50c          jrge    gcdurx                  ;X too far?
    1899                    
    1900 0000c790     b5a1          move    *a13(OBJ_ZPOSINT),a1
         0000c7a0     0150  
    1901 0000c7b0     b50e          move    *a8(OBJ_ZPOSINT),a14
         0000c7c0     0150  
    1902 0000c7d0     45c1          sub     a14,a1
    1903 0000c7e0     0381          abs     a1
    1904 0000c7f0     0b41          cmpi    40,a1
         0000c800     ffd7  
    1905 0000c810     c503          jrge    gcdurx                  ;Z too far?
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   40

    1906                    
    1907 0000c820     5600          clr     a0
    1908 0000c830     b00d          move    a0,*a13(DRN_BUTCHRG)    ;Fire it
         0000c840     09c0  
    1909 0000c850           gcdurx
    1910 0000c850                   DS_CODEEND
    1911 0000c860                   DS_END
    1912                    
    1913                    
    1914                    
    1915                    
    1916 0000c880            SUBRP  drn_combo
    1917                    
    1918 0000c880                   DS_CODE
    1919                    
    1920 0000c890     b5a0          move    *a13(WRESTLERNUM),a0
         0000c8a0     0590  
    1921 0000c8b0                   X32     a0
    1922 0000c8c0     0b20          addi    exqjwres_t,a0
         0000c8d0 0000c920' 
    1923 0000c8f0     4d21          move    a9,a1
    1924 0000c900     8609          move    *a0,a9,L                ;Get * script
    1925 0000c910     0161          jump    a1                      ;Ret
    1926                    
    1927 0000c920           exqjwres_t
    1928 0000c920 0000ca40'         .long   exqjbrt,exqjraz,exqjut,exqjyok
    1929 0000c9a0 0000cfc0'         .long   exqjshn,exqjbam,exqjdnk,exqjdnk,exqjlex
    1930 0000ca40           exqjbrt
    1931 0000ca40     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1932 0000cac0                   DS_RJMP 50,exqjbrt2
    1933 0000cb00     0001          .word   P_M,2
    1934 0000cb20                   DS_JMP  exqjcstrt
    1935 0000cb50           exqjbrt2
    1936 0000cb50     0010          .word   SK_M,2
    1937 0000cb70                   DS_JMP  exqjcstrt
    1938                    
    1939 0000cba0           exqjraz
    1940 0000cba0     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1941 0000cc20                   DS_RJMP 50,exqjraz2
    1942 0000cc60     0004          .word   SP_M,2
    1943 0000cc80                   DS_JMP  exqjcstrt
    1944 0000ccb0           exqjraz2
    1945 0000ccb0     0008          .word   K_M,2
    1946 0000ccd0                   DS_JMP  exqjcstrt
    1947                    
    1948 0000cd00           exqjut
    1949 0000cd00     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1950 0000cd80                   DS_RJMP 50,exqjut2
    1951 0000cdc0     0010          .word   SK_M,2
    1952 0000cde0                   DS_JMP  exqjcstrt
    1953 0000ce10           exqjut2
    1954 0000ce10     0008          .word   K_M,2
    1955 0000ce30                   DS_JMP  exqjcstrt
    1956                    
    1957 0000ce60           exqjyok
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   41

    1958 0000ce60     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1959 0000cee0                   DS_RJMP 50,exqjyok2
    1960 0000cf20     0004          .word   SP_M,2
    1961 0000cf40                   DS_JMP  exqjcstrt
    1962 0000cf70           exqjyok2
    1963 0000cf70     0001          .word   P_M,2
    1964 0000cf90                   DS_JMP  exqjcstrt
    1965                    
    1966 0000cfc0           exqjshn
    1967 0000cfc0     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1968 0000d040                   DS_RJMP 50,exqjshn2
    1969 0000d080     0001          .word   P_M,2
    1970 0000d0a0                   DS_JMP  exqjcstrt
    1971 0000d0d0           exqjshn2
    1972 0000d0d0     0008          .word   K_M,2
    1973 0000d0f0                   DS_JMP  exqjcstrt
    1974                    
    1975 0000d120           exqjbam
    1976 0000d120     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1977 0000d1a0                   DS_RJMP 50,exqjbam2
    1978 0000d1e0     0004          .word   SP_M,2
    1979 0000d200                   DS_JMP  exqjcstrt
    1980 0000d230           exqjbam2
    1981 0000d230     0001          .word   P_M,2
    1982 0000d250                   DS_JMP  exqjcstrt
    1983                    
    1984 0000d280           exqjdnk
    1985 0000d280     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1986 0000d300                   DS_RJMP 50,exqjdnk2
    1987 0000d340     0004          .word   SP_M,2
    1988 0000d360                   DS_JMP  exqjcstrt
    1989 0000d390           exqjdnk2
    1990 0000d390     0010          .word   SK_M,2
    1991 0000d3b0                   DS_JMP  exqjcstrt
    1992                    
    1993 0000d3e0           exqjlex
    1994 0000d3e0     0100          .word   R_M,2, 0,2, R_M,2, 0,2
    1995 0000d460                   DS_RJMP 50,exqjlex2
    1996 0000d4a0     0010          .word   SK_M,2
    1997 0000d4c0                   DS_JMP  exqjcstrt
    1998 0000d4f0           exqjlex2
    1999 0000d4f0     0008          .word   K_M,2
    2000 0000d510                   DS_JMP  exqjcstrt
    2001                    
    2002                            .asg    6,T
    2003 0000d540           exqjcstrt
    2004 0000d540     0000          .word   0,2
    2005 0000d560                   DS_RJMP 25,exqjcsk
    2006 0000d5a0                   DS_RJMP 25,exqjcp
    2007 0000d5e0                   DS_RJMP 25,exqjck
    2008 0000d620           exqjcsp
    2009 0000d620     0004          .word   SP_M,T, 0,T, SP_M,T, 0,T
    2010 0000d6a0     0004          .word   SP_M,T, 0,T, SP_M,T, 0,T
    2011 0000d720                   DS_RNDA sklrep_t
    2012 0000d750                   DS_JMP  exqjcstrt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   42

    2013 0000d780           exqjcsk
    2014 0000d780     0010          .word   SK_M,T, 0,T, SK_M,T, 0,T
    2015 0000d800     0010          .word   SK_M,T, 0,T, SK_M,T, 0,T
    2016 0000d880                   DS_RNDA sklrep_t
    2017 0000d8b0                   DS_JMP  exqjcstrt
    2018 0000d8e0           exqjcp
    2019 0000d8e0     0001          .word   P_M,T, 0,T, P_M,T, 0,T
    2020 0000d960     0001          .word   P_M,T, 0,T, P_M,T, 0,T
    2021 0000d9e0                   DS_RNDA sklrep_t
    2022 0000da10                   DS_JMP  exqjcstrt
    2023 0000da40           exqjck
    2024 0000da40     0008          .word   K_M,T, 0,T, K_M,T, 0,T
    2025 0000dac0     0008          .word   K_M,T, 0,T, K_M,T, 0,T
    2026 0000db40                   DS_RNDA sklrep_t
    2027 0000db70                   DS_JMP  exqjcstrt
    2028                    
    2029                    
    2030                    
    2031                    
    2032 0000dba0           talglp
    2033 0000dba0                   DS_CODEEND
    2034 0000dbb0                   DS_SLP1
    2035                    
    2036 0000dbc0            SUBRP  drn_seek
    2037                    
    2038 0000dbc0                   DS_CODE
    2039                    
    2040 0000dbd0     4ed0          move    b6,a0
    2041 0000dbe0     ca02          jrz     talgskok
    2042 0000dbf0     14e0          subk    MODE_BLOCK,a0
    2043 0000dc00     cb08          jrne    talgx
    2044 0000dc10           talgskok
    2045 0000dc10     09c0          movi    3fh,a0
         0000dc20     003f  
    2046 0000dc30     0d3f          callr   rnd
         0000dc40     038b  
    2047 0000dc50     ca03          jrz     talgx
    2048 0000dc60     0d3f          callr   drone_seek
         0000dc70     0317  
    2049 0000dc80     cbf1          jrnz    talglp
    2050 0000dc90           talgx
    2051 0000dc90                   DS_CODEEND
    2052 0000dca0                   DS_END
    2053                    
    2054                    
    2055                    
    2056 0000dcc0           fshslp
    2057 0000dcc0                   DS_CODEEND
    2058 0000dcd0                   DS_SLP1
    2059                    
    2060 0000dce0            SUBRP  drn_seekclose
    2061                    
    2062 0000dce0                   DS_CODE
    2063                    
    2064 0000dcf0     4ed0          move    b6,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   43

    2065 0000dd00     ca02          jrz     fshsskok
    2066 0000dd10     14e0          subk    MODE_BLOCK,a0
    2067 0000dd20     cb14          jrne    fshsx
    2068 0000dd30           fshsskok
    2069 0000dd30     09c0          movi    3fh,a0
         0000dd40     003f  
    2070 0000dd50     0d3f          callr   rnd
         0000dd60     0379  
    2071 0000dd70     ca0f          jrz     fshsx
    2072                    
    2073 0000dd80     b5ae          move    *a13(OBJ_XPOSINT),a14
         0000dd90     0110  
    2074 0000dda0     1802          movk    32,a2
    2075 0000ddb0     b500          move    *a8(OBJ_XPOSINT),a0
         0000ddc0     0110  
    2076 0000ddd0     480e          cmp     a0,a14
    2077 0000dde0     c501          jrge    fshstorgt
    2078 0000ddf0     03a2          neg     a2
    2079 0000de00           fshstorgt
    2080 0000de00     4040          add     a2,a0
    2081                    
    2082 0000de10     b501          move    *a8(OBJ_ZPOSINT),a1
         0000de20     0150  
    2083 0000de30     1ae2          movk    23,a2
    2084 0000de40     0d3f          callr   drone_seekxz
         0000de50     02ff  
    2085 0000de60     cbe5          jrnz    fshslp
    2086 0000de70           fshsx
    2087 0000de70                   DS_CODEEND
    2088 0000de80                   DS_END
    2089                    
    2090                    
    2091                    
    2092 0000dea0            SUBRP  drn_retreat
    2093                    
    2094 0000dea0                   DS_CODE
    2095 0000deb0     1880          movk    4,a0                    ;Far
    2096 0000dec0     b00d          move    a0,*a13(DRN_SEEKDIST)
         0000ded0     0a60  
    2097 0000dee0           fifplp
    2098 0000dee0     0d3f          callr   drone_seekdirdist
         0000def0     021d  
    2099 0000df00                   DS_CODEEND
    2100 0000df10                   DS_SLP1
    2101 0000df20                   DS_CODE
    2102 0000df30     1be0          movk    1fh,a0
    2103 0000df40     0d3f          callr   rnd
         0000df50     035a  
    2104 0000df60     cbf7          jrnz    fifplp
    2105                    
    2106 0000df70                   DS_CODEEND
    2107 0000df80                   DS_END
    2108                    
    2109                    
    2110                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   44

    2111 0000dfa0            SUBRP  drone_chkrun
    2112                    
    2113 0000dfa0     b5a0          move    *a13(OBJ_XPOSINT),a0
         0000dfb0     0110  
    2114 0000dfc0     b5a1          move    *a13(OBJ_ZPOSINT),a1
         0000dfd0     0150  
    2115                    
    2116 0000dfe0     b5a2          move    *a13(FACING_DIR),a2
         0000dff0     04c0  
    2117                    
    2118 0000e000     b5ae          move    *a13(INRING),a14
         0000e010     0560  
    2119 0000e020     cb10          jrnz    efxuout                 ;Out of ring?
    2120                    
    2121                    
    2122 0000e030     0b57          cmpi    MODE_ONGROUND,b7
         0000e040     fffb  
    2123 0000e050     ca30          jreq    efxux
    2124                    
    2125 0000e060     b5a1          move    *a13(CLOSEST_ZDIST),a1
         0000e070     0390  
    2126 0000e080     0b41          cmpi    70,a1
         0000e090     ffb9  
    2127 0000e0a0     c52b          jrge    efxux                   ;Z far enough?
    2128                    
    2129 0000e0b0     17c1          subk    30,a1
    2130 0000e0c0     c629          jrle    efxux                   ;Z close enough?
    2131                    
    2132 0000e0d0     b5a0          move    *a13(CLOSEST_XDIST),a0
         0000e0e0     0370  
    2133 0000e0f0     0b40          cmpi    150,a0
         0000e100     ff69  
    2134 0000e110     c524          jrge    efxux                   ;X far enough?
    2135                    
    2136                    
    2137 0000e120     c022          jruc    efxubad
    2138                    
    2139                    
    2140 0000e130           efxuout
    2141 0000e130     1f82          btst    PLAYER_RIGHT_BIT,a2
    2142 0000e140     ca10          jrz     efxuol                  ;Facing left?
    2143                    
    2144 0000e150     0b40          cmpi    RING_X_CENTER+500,a0
         0000e160     f9d9  
    2145 0000e170     c51d          jrge    efxubad                 ;Hit rgt crowd?
    2146                    
    2147 0000e180     0b41          cmpi    RING_TOP-10,a1
         0000e190     fc0a  
    2148 0000e1a0     c409          jrlt    efxurrok
    2149 0000e1b0     0b41          cmpi    RING_BOT+10,a1
         0000e1c0     fab4  
    2150 0000e1d0     c706          jrgt    efxurrok
    2151 0000e1e0     0b40          cmpi    RING_X_CENTER,a0
         0000e1f0     fbcd  
    2152 0000e200     c503          jrge    efxurrok
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   45

    2153 0000e210     0b40          cmpi    RING_X_CENTER-300,a0
         0000e220     fcf9  
    2154 0000e230     c511          jrge    efxubad                 ;Hit rgt ring?
    2155 0000e240           efxurrok
    2156 0000e240     c011          jruc    efxux
    2157 0000e250           efxuol
    2158 0000e250     0b40          cmpi    RING_X_CENTER-500,a0
         0000e260     fdc1  
    2159 0000e270     c60d          jrle    efxubad                 ;Hit lft crowd?
    2160                    
    2161 0000e280     0b41          cmpi    RING_TOP-10,a1
         0000e290     fc0a  
    2162 0000e2a0     c409          jrlt    efxulrok
    2163 0000e2b0     0b41          cmpi    RING_BOT+10,a1
         0000e2c0     fab4  
    2164 0000e2d0     c706          jrgt    efxulrok
    2165 0000e2e0     0b40          cmpi    RING_X_CENTER,a0
         0000e2f0     fbcd  
    2166 0000e300     c603          jrle    efxulrok
    2167 0000e310     0b40          cmpi    RING_X_CENTER+300,a0
         0000e320     faa1  
    2168 0000e330     c601          jrle    efxubad                 ;Hit lft ring?
    2169 0000e340           efxulrok
    2170 0000e340     c001          jruc    efxux
    2171                    
    2172                    
    2173 0000e350           efxubad
    2174 0000e350     1009          addk    32,a9                   ;Skip script run buttons
    2175                    
    2176 0000e360           efxux
    2177 0000e360     0960          rets
    2178                    
    2179                    
    2180                    
    2181 0000e370           rvzarsk
    2182 0000e370     1942          movk    10,a2
    2183 0000e380     0d3f          callr   drone_seek2
         0000e390     02a7  
    2184 0000e3a0     0b80          andni   MOVE_LEFT+MOVE_RIGHT,a0         ;0 lft & rgt
         0000e3b0 0000000c  
    2185 0000e3d0     b00d          move    a0,*a13(DRN_JOY)
         0000e3e0     0990  
    2186 0000e3f0                   DS_CODEEND
    2187 0000e400                   DS_SLP1
    2188                    
    2189 0000e410            SUBRP  drn_run
    2190                    
    2191 0000e410                   DS_CODE
    2192 0000e420     4ed0          move    b6,a0
    2193 0000e430     1420          subk    MODE_RUNNING,a0
    2194 0000e440     ca02          jreq    rvzamdok
    2195 0000e450     1480          subk    MODE_BOUNCING-MODE_RUNNING,a0
    2196 0000e460     cb78          jrne    rvzaabrt
    2197 0000e470           rvzamdok
    2198 0000e470     09c0          movi    01ffh,a0                ;9.6 sec
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   46

         0000e480     01ff  
    2199 0000e490     0d3f          callr   rnd
         0000e4a0     0305  
    2200 0000e4b0     ca76          jrz     rvzabrkrun                      ;Breakout?
    2201                    
    2202 0000e4c0     b5a4          move    *a13(OBJ_XVEL+16),a4
         0000e4d0     02e0  
    2203 0000e4e0     2464          sll     3,a4                    ;*8
    2204 0000e4f0     b501          move    *a8(OBJ_XVEL+16),a1
         0000e500     02e0  
    2205 0000e510     24a1          sll     5,a1                    ;*32
    2206                    
    2207 0000e520     b500          move    *a8(OBJ_XPOSINT),a0
         0000e530     0110  
    2208 0000e540     4020          add     a1,a0
    2209 0000e550     b5a1          move    *a13(OBJ_XPOSINT),a1
         0000e560     0110  
    2210 0000e570     4081          add     a4,a1
    2211 0000e580     4c23          move    a1,a3
    2212 0000e590     4420          sub     a1,a0
    2213 0000e5a0     4c81          move    a4,a1
    2214 0000e5b0     5601          xor     a0,a1
    2215 0000e5c0     0380          abs     a0
    2216                    
    2217 0000e5d0     b5a2          move    *a13(CLOSEST_ZDIST),a2
         0000e5e0     0390  
    2218                    
    2219 0000e5f0     b5ae          move    *a13(INRING),a14
         0000e600     0560  
    2220 0000e610     ca08          jrz     rvzainr                 ;In ring?
    2221                    
    2222 0000e620     0b40          cmpi    300,a0
         0000e630     fed3  
    2223 0000e640     c760          jrgt    rvzaering                       ;Too far?
    2224                    
    2225 0000e650     4c21          move    a1,a1
    2226 0000e660     ce5b          jrn     rvzabrkrun                      ;Running away?
    2227                    
    2228 0000e670     17c2          subk    30,a2
    2229 0000e680     c762          jrgt    rvzabrkseek             ;Too far?
    2230                    
    2231 0000e690     c01d          jruc    rvzacont
    2232                    
    2233 0000e6a0           rvzainr
    2234 0000e6a0     4c84          move    a4,a4
    2235 0000e6b0     ce04          jrn     rvzalrp                 ;Towards L rope?
    2236                    
    2237 0000e6c0     0b43          cmpi    RING_X_CENTER+210,a3
         0000e6d0     fafb  
    2238 0000e6e0     c416          jrlt    rvzarpok                        ;Won't hit R rope?
    2239 0000e6f0     c003          jruc    rvzachkopp
    2240 0000e700           rvzalrp
    2241 0000e700     0b43          cmpi    RING_X_CENTER-210,a3
         0000e710     fc9f  
    2242 0000e720     c712          jrgt    rvzarpok                        ;Won't hit L rope?
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   47

    2243 0000e730           rvzachkopp
    2244 0000e730     b50e          move    *a8(GETUP_TIME),a14
         0000e740     0460  
    2245 0000e750     c70f          jrgt    rvzarpok                        ;Out of control?
    2246                    
    2247 0000e760     0b57          cmpi    MODE_ONGROUND,b7
         0000e770     fffb  
    2248 0000e780     ca0c          jreq    rvzarpok
    2249                    
    2250 0000e790     0b40          cmpi    300,a0
         0000e7a0     fed3  
    2251 0000e7b0     c709          jrgt    rvzarpok                        ;Opp X far?
    2252                    
    2253 0000e7c0     0b57          cmpi    MODE_RUNNING,b7
         0000e7d0     fffe  
    2254 0000e7e0     ca03          jreq    rvzaoprun
    2255                    
    2256 0000e7f0     0b40          cmpi    180,a0
         0000e800     ff4b  
    2257 0000e810     c703          jrgt    rvzarpok                        ;Opp X far?
    2258 0000e820           rvzaoprun
    2259 0000e820     0b42          cmpi    90,a2
         0000e830     ffa5  
    2260 0000e840     c43d          jrlt    rvzabrkrun                      ;Opp Z close?
    2261                    
    2262 0000e850           rvzarpok
    2263                    
    2264 0000e850     4c21          move    a1,a1
    2265 0000e860     ceb0          jrn     rvzarsk                 ;Running away?
    2266 0000e870           rvzacont
    2267 0000e870     0b57          cmpi    MODE_INAIR2,b7
         0000e880     ffea  
    2268 0000e890     ca38          jreq    rvzabrkrun
    2269                    
    2270                    
    2271 0000e8a0     17c2          subk    30,a2
    2272 0000e8b0     c7ab          jrgt    rvzarsk                 ;Z too far?
    2273                    
    2274 0000e8c0     0b40          cmpi    250,a0
         0000e8d0     ff05  
    2275 0000e8e0     c7a8          jrgt    rvzarsk                 ;X too far?
    2276                    
    2277 0000e8f0     4c02          move    a0,a2
    2278                    
    2279 0000e900     09c0          movi    120,a0
         0000e910     0078  
    2280 0000e920     0d3f          callr   rndrng0
         0000e930     02ca  
    2281 0000e940     0b00          addi    130,a0
         0000e950     0082  
    2282                    
    2283 0000e960     4802          cmp     a0,a2
    2284 0000e970     c79f          jrgt    rvzarsk                 ;X too far?
    2285                    
    2286                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   48

    2287                    
    2288 0000e980     4ef0          move    b7,a0
    2289 0000e990     1620          subk    MODE_PUPPET2,a0
    2290 0000e9a0     ca27          jreq    rvzabrkrun
    2291 0000e9b0     1460          subk    MODE_PUPPET-MODE_PUPPET2,a0
    2292 0000e9c0     ca25          jreq    rvzabrkrun
    2293 0000e9d0     0b57          cmpi    MODE_HEADHELD,b7
         0000e9e0     ffec  
    2294 0000e9f0     ca22          jreq    rvzabrkrun
    2295 0000ea00     0b57          cmpi    MODE_HEADHOLD,b7
         0000ea10     ffef  
    2296 0000ea20     ca1f          jreq    rvzabrkrun
    2297 0000ea30     0b57          cmpi    MODE_ATTACHED,b7
         0000ea40     fffc  
    2298 0000ea50     ca1c          jreq    rvzabrkrun
    2299                    
    2300 0000ea60     b5a0          move    *a13(DRN_BUTCHRG),a0
         0000ea70     09c0  
    2301 0000ea80     ca07          jrz     rvzanchrg
    2302 0000ea90     b5a0          move    *a13(DRN_BUTCHRGDLY),a0
         0000eaa0     09d0  
    2303 0000eab0     c704          jrgt    rvzanchrg
    2304 0000eac0     5600          clr     a0
    2305 0000ead0     b00d          move    a0,*a13(DRN_BUTCHRG)    ;Fire it
         0000eae0     09c0  
    2306 0000eaf0     c00f          jruc    rvzaabrt
    2307 0000eb00           rvzanchrg
    2308 0000eb00                   DS_CODEEND
    2309 0000eb10                   DS_RJMP 33,rvzak
    2310 0000eb50                   DS_RJMP 33,rvzask
    2311 0000eb90     0004          .word   SP_M,0
    2312 0000ebb0     0008  rvzak   .word   K_M,0
    2313 0000ebd0     0010  rvzask  .word   SK_M,0
    2314                    
    2315 0000ebf0           rvzaabrt
    2316 0000ebf0                   DS_CODEEND
    2317 0000ec00                   DS_END
    2318                    
    2319 0000ec20           rvzabrkrun
    2320 0000ec20                   DS_CODEEND
    2321 0000ec30     0080          .word   L_M,0
    2322                    
    2323 0000ec50           rvzaering
    2324 0000ec50                   DS_CODEEND
    2325 0000ec60     0080          .word   L_M,2
    2326 0000ec80                   DS_JMP  drn_enterring
    2327                    
    2328 0000ecb0           rvzabrkseek
    2329 0000ecb0                   DS_CODEEND
    2330 0000ecc0     0080          .word   L_M,2
    2331 0000ece0                   DS_JMP  drn_seek
    2332                    
    2333                    
    2334                    
    2335                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   49

    2336 0000ed10            SUBRP  drn_oprun
    2337                    
    2338 0000ed10                   DS_CODE
    2339                    
    2340 0000ed20     18e0          movk    7,a0
    2341 0000ed30     0d3f          callr   rnd
         0000ed40     027b  
    2342 0000ed50     cb12          jrnz    ppbbabrt                        ;Skip?
    2343                    
    2344 0000ed60     b500          move    *a8(OBJ_XPOSINT),a0
         0000ed70     0110  
    2345 0000ed80     b5a1          move    *a13(OBJ_XPOSINT),a1
         0000ed90     0110  
    2346 0000eda0     4420          sub     a1,a0
    2347 0000edb0     b501          move    *a8(OBJ_XVEL+16),a1
         0000edc0     02e0  
    2348 0000edd0     5601          xor     a0,a1
    2349 0000ede0     0380          abs     a0
    2350                    
    2351 0000edf0     b5a2          move    *a13(CLOSEST_ZDIST),a2
         0000ee00     0390  
    2352 0000ee10     4802          cmp     a0,a2
    2353 0000ee20     c705          jrgt    ppbbabrt                        ;Z dist > X dist?
    2354                    
    2355 0000ee30     4c21          move    a1,a1
    2356 0000ee40     ce06          jrn     ppbbrun                 ;Running away?
    2357                    
    2358 0000ee50     b50e          move    *a8(GETUP_TIME),a14
         0000ee60     0460  
    2359 0000ee70     c703          jrgt    ppbbrun                 ;Out of control?
    2360                    
    2361 0000ee80           ppbbabrt
    2362 0000ee80                   DS_CODEEND
    2363 0000ee90                   DS_END
    2364                    
    2365 0000eeb0           ppbbrun
    2366 0000eeb0                   DS_CODEEND
    2367 0000eec0     0009          .word   P_M+K_M,0       ;Run
    2368                    
    2369                    
    2370                    
    2371                    
    2372 0000eee0            SUBRP  drn_roll
    2373                    
    2374 0000eee0                   DS_CODE
    2375 0000eef0     0d3f          callr   drone_chrg
         0000ef00     fcca  
    2376                    
    2377 0000ef10     c003          jruc    ozmvstrt
    2378                    
    2379 0000ef20           ozmvlp
    2380 0000ef20                   DS_CODEEND
    2381 0000ef30                   DS_SLP1
    2382 0000ef40                   DS_CODE
    2383 0000ef50           ozmvstrt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   50

    2384 0000ef50     0b56          cmpi    MODE_ONGROUND,b6
         0000ef60     fffb  
    2385 0000ef70     cb17          jrne    ozmvx
    2386                    
    2387 0000ef80     b5a0          move    *a13(CLOSEST_XDIST),a0
         0000ef90     0370  
    2388 0000efa0     0b40          cmpi    150,a0
         0000efb0     ff69  
    2389 0000efc0     c712          jrgt    ozmvx                   ;Safe dist?
    2390                    
    2391 0000efd0     b5a0          move    *a13(CLOSEST_ZDIST),a0
         0000efe0     0390  
    2392 0000eff0     0b40          cmpi    70,a0
         0000f000     ffb9  
    2393 0000f010     c70d          jrgt    ozmvx                   ;Safe dist?
    2394                    
    2395 0000f020     5642          clr     a2
    2396 0000f030     0d3f          callr   drone_seek2
         0000f040     01dc  
    2397 0000f050     ca09          jrz     ozmvx
    2398                    
    2399 0000f060     1861          movk    3,a1                    ;Flip up & down
    2400 0000f070     5620          xor     a1,a0
    2401 0000f080     b00d          move    a0,*a13(DRN_JOY)
         0000f090     0990  
    2402                    
    2403 0000f0a0     09c0          movi    7fh,a0
         0000f0b0     007f  
    2404 0000f0c0     0d3f          callr   rnd
         0000f0d0     0242  
    2405 0000f0e0     cbe3          jrnz    ozmvlp
    2406                    
    2407 0000f0f0           ozmvx
    2408 0000f0f0                   DS_CODEEND
    2409 0000f100     0002          .word   B_M,TSEC-10             ;Block while standing
    2410 0000f120                   DS_END
    2411                    
    2412                    
    2413                    
    2414 0000f140            SUBRP  drn_climbtb
    2415                    
    2416 0000f140                   DS_CODE
    2417 0000f150     4e70          move    b3,a0
    2418 0000f160     1420          subk    1,a0
    2419 0000f170     c604          jrle    cllmlp                  ;Only 1 on team?
    2420                    
    2421 0000f180     1820          movk    1,a0
    2422 0000f190     0d3f          callr   rnd
         0000f1a0     0235  
    2423 0000f1b0     cb38          jrnz    cllmx                   ;Skip 50%?
    2424                    
    2425 0000f1c0           cllmlp
    2426 0000f1c0                   DS_CODEEND
    2427 0000f1d0                   DS_SLP1
    2428                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   51

    2429 0000f1e0            SUBRP  drn_ontb
    2430                    
    2431 0000f1e0                   DS_CODE
    2432                    
    2433 0000f1f0     4ef2          move    b7,a2
    2434                    
    2435 0000f200     0b56          cmpi    MODE_ONTURNBKL,b6
         0000f210     fff9  
    2436 0000f220     cb03          jrne    cllmnot
    2437                    
    2438 0000f230     14c2          subk    MODE_ONTURNBKL,a2
    2439 0000f240     ca36          jreq    cllmdn                  ;He's up, so get dn?
    2440                    
    2441 0000f250     c031          jruc    cllmjmp
    2442                    
    2443 0000f260           cllmnot
    2444 0000f260     b5a0          move    *a13(INRING),a0
         0000f270     0560  
    2445 0000f280     cb35          jrnz    cllmering                       ;!In ring?
    2446                    
    2447 0000f290     b5a0          move    *a13(WRESTLERNUM),a0
         0000f2a0     0590  
    2448 0000f2b0     1460          subk    3,a0
    2449 0000f2c0     cb03          jrne    cllmny                  ;!Yoko?
    2450 0000f2d0     b500          move    *a8(INRING),a0
         0000f2e0     0560  
    2451 0000f2f0     cb24          jrnz    cllmx                   ;!In ring?
    2452 0000f300           cllmny
    2453 0000f300     14c2          subk    MODE_ONTURNBKL,a2
    2454 0000f310     ca22          jreq    cllmx
    2455 0000f320     15e2          subk    MODE_INAIR2-MODE_ONTURNBKL,a2
    2456 0000f330     ca20          jreq    cllmx
    2457                    
    2458 0000f340     09c0          movi    RING_X_CENTER-225,a0
         0000f350     0351  
    2459 0000f360     b5a1          move    *a13(OBJ_XPOSINT),a1
         0000f370     0110  
    2460 0000f380     0b41          cmpi    RING_X_CENTER,a1
         0000f390     fbcd  
    2461 0000f3a0     c602          jrle    cllmlrp
    2462 0000f3b0     09c0          movi    RING_X_CENTER+225,a0
         0000f3c0     0513  
    2463 0000f3d0           cllmlrp
    2464 0000f3d0     4c03          move    a0,a3
    2465 0000f3e0     09c1          movi    RING_TOP,a1
         0000f3f0     03ff  
    2466 0000f400     1802          movk    32,a2
    2467 0000f410     0d3f          callr   drone_seekxz            ;Seek to visinity
         0000f420     01a2  
    2468 0000f430     cb06          jrnz    cllmnclose
    2469                    
    2470 0000f440     4c60          move    a3,a0
    2471 0000f450     09c1          movi    RING_TOP-10,a1
         0000f460     03f5  
    2472 0000f470     5642          clr     a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   52

    2473 0000f480     0d3f          callr   drone_seekxz            ;Push into turnbuckle
         0000f490     019b  
    2474                    
    2475 0000f4a0           cllmnclose
    2476 0000f4a0     b5a0          move    *a13(CLOSEST_XDIST),a0
         0000f4b0     0370  
    2477 0000f4c0     0b40          cmpi    120,a0
         0000f4d0     ff87  
    2478 0000f4e0     c7cd          jrgt    cllmlp                  ;Safe dist?
    2479                    
    2480 0000f4f0     b5a0          move    *a13(CLOSEST_ZDIST),a0
         0000f500     0390  
    2481 0000f510     0b40          cmpi    70,a0
         0000f520     ffb9  
    2482 0000f530     c7c8          jrgt    cllmlp                  ;Safe dist?
    2483                    
    2484 0000f540           cllmx
    2485 0000f540                   DS_CODEEND
    2486 0000f550                   DS_END
    2487                    
    2488 0000f570           cllmjmp
    2489 0000f570     56c6          clr     a6                      ;So we get dn transition
    2490 0000f580                   DS_CODEEND
    2491 0000f590     0008          .word   K_M,0
    2492 0000f5b0           cllmdn
    2493 0000f5b0                   DS_CODEEND
    2494 0000f5c0     0040          .word   D_M,0
    2495 0000f5e0           cllmering
    2496 0000f5e0                   DS_CODEEND
    2497 0000f5f0                   DS_JMP  drn_enterring
    2498                    
    2499                    
    2500                    
    2501 0000f620           qahilp
    2502 0000f620                   DS_CODEEND
    2503 0000f630                   DS_SLP1
    2504                    
    2505 0000f640            SUBRP  drn_inair
    2506                    
    2507 0000f640                   DS_CODE
    2508 0000f650     5642          clr     a2
    2509 0000f660     0d3f          callr   drone_seek2
         0000f670     0179  
    2510                    
    2511 0000f680     0b56          cmpi    MODE_INAIR2,b6
         0000f690     ffea  
    2512 0000f6a0     caf7          jreq    qahilp
    2513                    
    2514 0000f6b0                   DS_CODEEND
    2515 0000f6c0                   DS_END
    2516                    
    2517                    
    2518                    
    2519 0000f6e0            SUBRP  drn_opinair
    2520                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   53

    2521 0000f6e0                   DS_CODE
    2522                    
    2523 0000f6f0     1820          movk    1,a0
    2524 0000f700     0d3f          callr   rnd
         0000f710     01de  
    2525 0000f720     cb13          jrnz    cfnqrun                 ;Skip?
    2526 0000f730           cfnqlp
    2527 0000f730     0b57          cmpi    MODE_INAIR2,b7
         0000f740     ffea  
    2528 0000f750     cb0d          jrne    cfnqk
    2529                    
    2530 0000f760                   DS_CODEEND
    2531 0000f770                   DS_SLP1
    2532 0000f780                   DS_CODE
    2533                    
    2534 0000f790     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000f7a0     0370  
    2535 0000f7b0     b5ae          move    *a13(CLOSEST_ZDIST),a14
         0000f7c0     0390  
    2536 0000f7d0     482e          cmp     a1,a14
    2537 0000f7e0     c501          jrge    cfnqbig
    2538 0000f7f0     4c2e          move    a1,a14
    2539 0000f800           cfnqbig
    2540 0000f800     0b4e          cmpi    150,a14
         0000f810     ff69  
    2541 0000f820     c7f0          jrgt    cfnqlp                  ;Opp far?
    2542 0000f830           cfnqk
    2543 0000f830                   DS_CODEEND
    2544 0000f840     0008          .word   K_M,0                   ;Jump up
    2545                    
    2546 0000f860           cfnqrun
    2547 0000f860                   DS_CODEEND
    2548 0000f870     0089          .word   L_M+P_M+K_M,2   ;Run away
    2549 0000f890                   DS_END
    2550                    
    2551                    
    2552                    
    2553                    
    2554 0000f8b0           xnielp
    2555 0000f8b0                   DS_CODEEND
    2556 0000f8c0                   DS_SLP1
    2557                    
    2558 0000f8d0            SUBRP  drn_enterring
    2559                    
    2560 0000f8d0                   DS_CODE
    2561                    
    2562 0000f8e0     b500          move    *a8(INRING),a0
         0000f8f0     0560  
    2563 0000f900     cb20          jrnz    xniex                   ;Opp out?
    2564                    
    2565 0000f910     b5a0          move    *a13(INRING),a0
         0000f920     0560  
    2566 0000f930     ca1d          jrz     xniex                   ;In ring?
    2567                    
    2568 0000f940     b5ae          move    *a13(OBJ_XPOSINT),a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   54

         0000f950     0110  
    2569                    
    2570 0000f960     09c1          movi    RING_Z_CENTER,a1
         0000f970     04a0  
    2571 0000f980     09c0          movi    RING_X_CENTER-260,a0
         0000f990     032e  
    2572 0000f9a0     480e          cmp     a0,a14
    2573 0000f9b0     c60e          jrle    xniesk
    2574 0000f9c0     09c0          movi    RING_X_CENTER+260,a0
         0000f9d0     0536  
    2575 0000f9e0     480e          cmp     a0,a14
    2576 0000f9f0     c50a          jrge    xniesk
    2577                    
    2578 0000fa00     b5ae          move    *a13(OBJ_ZPOSINT),a14
         0000fa10     0150  
    2579                    
    2580 0000fa20     09c0          movi    RING_X_CENTER,a0
         0000fa30     0432  
    2581 0000fa40     09c1          movi    RING_TOP-10,a1
         0000fa50     03f5  
    2582 0000fa60     482e          cmp     a1,a14
    2583 0000fa70     c602          jrle    xniesk
    2584 0000fa80     09c1          movi    RING_BOT+10,a1
         0000fa90     054b  
    2585 0000faa0           xniesk
    2586 0000faa0     1942          movk    10,a2
    2587 0000fab0     0d3f          callr   drone_seekxz            ;Seek to visinity
         0000fac0     0138  
    2588 0000fad0     cbdd          jrnz    xnielp
    2589                    
    2590 0000fae0                   DS_CODEEND
    2591 0000faf0     001f          .word   P_M+SP_M+K_M+SK_M+B_M,0 ;Enter
    2592                    
    2593 0000fb10           xniex
    2594 0000fb10                   DS_CODEEND
    2595 0000fb20                   DS_END
    2596                    
    2597                    
    2598                    
    2599 0000fb40            SUBRP  drn_taunt
    2600                    
    2601 0000fb40                   DS_CODE
    2602                    
    2603 0000fb50     b500          move    *a8(OBJ_ZPOSINT),a0
         0000fb60     0150  
    2604 0000fb70     b5a1          move    *a13(OBJ_ZPOSINT),a1
         0000fb80     0150  
    2605 0000fb90     4420          sub     a1,a0
    2606 0000fba0     0b40          cmpi    100,a0
         0000fbb0     ff9b  
    2607 0000fbc0     c418          jrlt    hjlax
    2608                    
    2609 0000fbd0     b500          move    *a8(OBJ_XPOSINT),a0
         0000fbe0     0110  
    2610 0000fbf0     b5a1          move    *a13(OBJ_XPOSINT),a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   55

         0000fc00     0110  
    2611 0000fc10     4420          sub     a1,a0
    2612 0000fc20     0380          abs     a0
    2613 0000fc30     0b40          cmpi    300,a0
         0000fc40     fed3  
    2614 0000fc50     c70f          jrgt    hjlax
    2615                    
    2616 0000fc60     09e0          movi    8000h+6*60,a0
         0000fc70 00008168  
    2617 0000fc90     b00d          move    a0,*a13(RISK)
         0000fca0     0950  
    2618                    
    2619 0000fcb0     b5a0          move    *a13(WRESTLERNUM),a0
         0000fcc0     0590  
    2620 0000fcd0                   X32     a0
    2621 0000fce0     0b20          addi    hjlataunt_t,a0
         0000fcf0 0000fd80' 
    2622 0000fd10     8600          move    *a0,a0,L
    2623 0000fd20     0d5f          calla   change_anim1a
         0000fd30 00000000! 
    2624 0000fd50           hjlax
    2625 0000fd50                   DS_CODEEND
    2626 0000fd60                   DS_END
    2627                    
    2628                    
    2629 0000fd80           hjlataunt_t
    2630 0000fd80 00000000!         .long   hrt_4_taunt_anim                ;0 Bret Hart
    2631 0000fda0 00000000!         .long   rzr_4_taunt_anim                ;1 Razor Ramon
    2632 0000fdc0 00000000!         .long   und_4_taunt_anim                ;2 Undertaker
    2633 0000fde0 00000000!         .long   yok_4_taunt_anim                ;3 Yokozuna
    2634 0000fe00 00000000!         .long   shn_4_taunt_anim                ;4 Shawn Michaels
    2635 0000fe20 00000000!         .long   bam_4_taunt_anim                ;5 Bam Bam
    2636 0000fe40 00000000!         .long   dnk_4_taunt_anim                ;6 Doink
    2637 0000fe60 00000000          .long   0                               ;7 spare
    2638 0000fe80 00000000!         .long   lex_4_taunt_anim                ;8 Lex Luger
    2639                    
    2640                    
    2641                    
    2642 0000fea0            SUBRP  drn_oppdead
    2643                    
    2644 0000fea0                   DS_CODE
    2645 0000feb0           ozpclp
    2646 0000feb0     5600          clr     a0                      ;Close
    2647 0000fec0     b00d          move    a0,*a13(DRN_SEEKDIR)
         0000fed0     0a50  
    2648 0000fee0     b00d          move    a0,*a13(DRN_SEEKDIST)
         0000fef0     0a60  
    2649                    
    2650 0000ff00     0d3f          callr   drone_seekdirdist
         0000ff10     001b  
    2651 0000ff20                   DS_CODEEND
    2652 0000ff30                   DS_SLP1
    2653 0000ff40                   DS_CODE
    2654                    
    2655 0000ff50     1801          movk    32,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   56

    2656 0000ff60     b5a0          move    *a13(WRESTLERNUM),a0
         0000ff70     0590  
    2657 0000ff80     1440          subk    2,a0
    2658 0000ff90     ca02          jreq    ozpcut                  ;Undertaker?
    2659 0000ffa0     09c1          movi    90,a1
         0000ffb0     005a  
    2660 0000ffc0           ozpcut
    2661 0000ffc0     b5a0          move    *a13(CLOSEST_DIST),a0
         0000ffd0     0360  
    2662 0000ffe0     4820          cmp     a1,a0
    2663 0000fff0     c60a          jrle    ozpcx
    2664                    
    2665 00010000     b500          move    *a8(ANIMODE),a0         ;Let ut walk through dead opps
         00010010     0660  
    2666 00010020     0ba0          ori     MODE_OVERLAP,a0
         00010030 00000400  
    2667 00010050     b008          move    a0,*a8(ANIMODE)
         00010060     0660  
    2668 00010070           ozpcnotut
    2669                    
    2670 00010070     b5a0          move    *a13(DRN_JOY),a0
         00010080     0990  
    2671 00010090     cbe1          jrnz    ozpclp
    2672 000100a0           ozpcx
    2673 000100a0                   DS_CODEEND
    2674 000100b0     0001          .word   P_M,0
    2675                    
    2676                    
    2677                    
    2678                    
    2679 000100d0            SUBRP  drone_seekdirdist
    2680                    
    2681 000100d0     b5a4          move    *a13(DRN_SEEKDIR),a4    ;0-f
         000100e0     0a50  
    2682 000100f0     b5a3          move    *a13(DRN_SEEKDIST),a3   ;0-4
         00010100     0a60  
    2683 00010110     4c60          move    a3,a0
    2684 00010120                   X16     a3
    2685 00010130                   X4      a0
    2686 00010140     4003          add     a0,a3                   ;*20
    2687                    
    2688 00010150     4c82          move    a4,a2
    2689 00010160     0d3f          callr   mrycdrn_getxz
         00010170     0032  
    2690 00010180     cb18          jrnz    mrycok
    2691                    
    2692 00010190     18f0          movk    7,b0
    2693 000101a0     4c85          move    a4,a5
    2694 000101b0           mryclp
    2695 000101b0     1024          addk    1,a4
    2696 000101c0     2784          sll     32-4,a4
    2697 000101d0     2c84          srl     32-4,a4
    2698 000101e0     4c82          move    a4,a2
    2699 000101f0     0d3f          callr   mrycdrn_getxz
         00010200     0029  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   57

    2700 00010210     cb0d          jrnz    mrycnewok
    2701                    
    2702 00010220     1425          subk    1,a5
    2703 00010230     2785          sll     32-4,a5
    2704 00010240     2c85          srl     32-4,a5
    2705 00010250     4ca2          move    a5,a2
    2706 00010260     0d3f          callr   mrycdrn_getxz
         00010270     0022  
    2707 00010280     cb05          jrnz    mrycnew5ok
    2708                    
    2709 00010290     3df0          dsj     b0,mryclp
    2710                    
    2711 000102a0     5600          clr     a0
    2712 000102b0     b00d          move    a0,*a13(DRN_JOY)
         000102c0     0990  
    2713                    
    2714 000102d0     0960          rets
    2715                    
    2716 000102e0           mrycnew5ok
    2717 000102e0     4ca4          move    a5,a4
    2718 000102f0           mrycnewok
    2719 000102f0     b08d          move    a4,*a13(DRN_SEEKDIR)
         00010300     0a50  
    2720 00010310           mrycok
    2721 00010310     1bc2          movk    30,a2
    2722 00010320     0d3f          callr   drone_seekxz
         00010330     00b1  
    2723 00010340     cb14          jrnz    mrycx
    2724                    
    2725 00010350     b5a0          move    *a13(DRN_MODE),a0
         00010360     0a30  
    2726 00010370     1020          addk    1,a0
    2727 00010380     c510          jrge    mrycx                   ;Was -1? Skip dir change
    2728                    
    2729 00010390     b0ed          move    a7,*a13(DRN_JOY)        ;Restore to lessen glitch
         000103a0     0990  
    2730                    
    2731 000103b0     1860          movk    3,a0                    ;>Get rnd +-2/3
    2732 000103c0     0d3f          callr   rnd
         000103d0     0112  
    2733 000103e0     1420          subk    1,a0
    2734 000103f0     cb01          jrnz    mrycrnz
    2735 00010400     1440          subk    2,a0                    ;0 into -2
    2736 00010410           mrycrnz
    2737 00010410     1020          addk    1,a0
    2738 00010420     c701          jrgt    mrycrpos
    2739 00010430     1440          subk    2,a0
    2740 00010440           mrycrpos
    2741                    
    2742 00010440     4004          add     a0,a4
    2743 00010450     2784          sll     32-4,a4
    2744 00010460     2c84          srl     32-4,a4
    2745 00010470     b08d          move    a4,*a13(DRN_SEEKDIR)
         00010480     0a50  
    2746                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   58

    2747 00010490           mrycx
    2748 00010490     0960          rets
    2749                    
    2750                    
    2751 000104a0           mrycdrn_getxz
    2752 000104a0     4062          add     a3,a2
    2753 000104b0                   X16     a2
    2754 000104c0     0b22          addi    mrycsine_t,a2
         000104d0 00010670' 
    2755                    
    2756 000104f0     b44e          move    *a2(4*16),a14
         00010500     0040  
    2757 00010510     b500          move    *a8(OBJ_XPOSINT),a0
         00010520     0110  
    2758 00010530     41c0          add     a14,a0
    2759                    
    2760 00010540     0b40          cmpi    RING_X_CENTER-220,a0
         00010550     fca9  
    2761 00010560     c40d          jrlt    mrycxzbad
    2762 00010570     0b40          cmpi    RING_X_CENTER+220,a0
         00010580     faf1  
    2763 00010590     c70a          jrgt    mrycxzbad
    2764                    
    2765 000105a0     844e          move    *a2,a14
    2766 000105b0     b501          move    *a8(OBJ_ZPOSINT),a1
         000105c0     0150  
    2767 000105d0     41c1          add     a14,a1
    2768                    
    2769 000105e0     0b41          cmpi    RING_TOP,a1
         000105f0     fc00  
    2770 00010600     c403          jrlt    mrycxzbad
    2771 00010610     0b41          cmpi    RING_BOT,a1
         00010620     fabe  
    2772 00010630     c601          jrle    mrycxzok
    2773 00010640           mrycxzbad
    2774 00010640     5642          clr     a2                      ;Set Z
    2775 00010650           mrycxzok
    2776 00010650     4c42          move    a2,a2
    2777 00010660     0960          rets
    2778                    
    2779 00010670           mrycsine_t
    2780 00010670     ffce          .word   -50,-46,-35,-19
    2781 000106b0     0000          .word   0,19,35,46,50,46,35,19
    2782 00010730     0000          .word   0,-19,-35,-46,-50,-46,-35,-19
    2783                    
    2784 000107b0     ff9c          .word   -100,-92,-71,-38
    2785 000107f0     0000          .word   0,38,71,92,100,92,71,38
    2786 00010870     0000          .word   0,-38,-71,-92,-100,-92,-71,-38
    2787                    
    2788 000108f0     ff6a          .word   -150,-139,-106,-57
    2789 00010930     0000          .word   0,57,106,139,150,139,106,57
    2790 000109b0     0000          .word   0,-57,-106,-139,-150,-139,-106,-57
    2791                    
    2792 00010a30     ff38          .word   -200,-185,-141,-76
    2793 00010a70     0000          .word   0,76,141,185,200,185,141,76
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   59

    2794 00010af0     0000          .word   0,-76,-141,-185,-200,-185,-141,-76
    2795                    
    2796 00010b70     ff06          .word   -250,-231,-177,-95
    2797 00010bb0     0000          .word   0,95,177,231,250,231,177,95
    2798 00010c30     0000          .word   0,-95,-177,-231,-250,-231,-177,-95
    2799                    
    2800 00010cb0     fed4          .word   -300,-277,-212,-115
    2801 00010cf0     0000          .word   0,114,212,277,300,277,212,114
    2802 00010d70     0000          .word   0,-114,-212,-277,-300,-277,-212,-115
    2803                    
    2804                    
    2805                    
    2806 00010df0            SUBRP  drone_seek
    2807                    
    2808 00010df0     09c2          movi    70,a2
         00010e00     0046  
    2809                    
    2810 00010e10            SUBRP  drone_seek2
    2811                    
    2812 00010e10     b500          move    *a8(OBJ_XPOSINT),a0
         00010e20     0110  
    2813 00010e30     b501          move    *a8(OBJ_ZPOSINT),a1
         00010e40     0150  
    2814                    
    2815                    
    2816                    
    2817 00010e50            SUBRP  drone_seekxz
    2818                    
    2819 00010e50     4e60          move    a3,b0
    2820                    
    2821 00010e60     b5a3          move    *a13(OBJ_XPOSINT),a3
         00010e70     0110  
    2822 00010e80     4403          sub     a0,a3
    2823                    
    2824 00010e90     5600          clr     a0
    2825                    
    2826 00010ea0     4c6e          move    a3,a14
    2827 00010eb0     0383          abs     a3
    2828 00010ec0     4443          sub     a2,a3
    2829 00010ed0     c604          jrle    syxqonx
    2830 00010ee0     4dce          move    a14,a14
    2831 00010ef0     c401          jrlt    syxqnolft
    2832 00010f00     1480          subk    4,a0                    ;Left
    2833                    
    2834 00010f10     1100  syxqnolft       addk    8,a0                    ;Rgt
    2835 00010f20           syxqonx
    2836 00010f20     b5a3          move    *a13(OBJ_ZPOSINT),a3
         00010f30     0150  
    2837                    
    2838 00010f40     4423          sub     a1,a3
    2839 00010f50     4c6e          move    a3,a14
    2840 00010f60     0383          abs     a3
    2841 00010f70     4443          sub     a2,a3
    2842 00010f80     c604          jrle    syxqonz
    2843 00010f90     4dce          move    a14,a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   60

    2844 00010fa0     c401          jrlt    syxqnoup
    2845 00010fb0     1420          subk    1,a0                    ;Up
    2846                    
    2847 00010fc0     1040  syxqnoup        addk    2,a0                    ;Dn
    2848 00010fd0           syxqonz
    2849 00010fd0     b00d          move    a0,*a13(DRN_JOY)
         00010fe0     0990  
    2850                    
    2851 00010ff0     4e13          move    b0,a3
    2852 00011000     4c00          move    a0,a0
    2853 00011010     0960          rets
    2854                    
    2855                    
    2856                    
    2857 00011020            SUBR   drone_calcskill
    2858                    
    2859 00011020     b5a0          move    *a13(PLYR_TYPE),a0
         00011030     05a0  
    2860 00011040     ca4a          jrz     ikclx                   ;Human?
    2861                    
    2862 00011050     b5a0          move    *a13(DRN_SKILLRNDM),a0
         00011060     0a80  
    2863                    
    2864 00011070     05a3          move    @current_round,a3       ;1-3
         00011080 00000000! 
    2865 000110a0     1423          subk    1,a3
    2866 000110b0     c706          jrgt    ikcln1st
    2867                    
    2868 000110c0     1880          movk    4,a0
    2869 000110d0     0d3f          callr   rndrng0
         000110e0     004f  
    2870 000110f0     1440          subk    2,a0
    2871 00011100     b00d          move    a0,*a13(DRN_SKILLRNDM)
         00011110     0a80  
    2872 00011120           ikcln1st
    2873 00011120     07a5          move    @CURRENT_LADDER,a5,L    ;* to position
         00011130 00000000! 
    2874 00011150     0d05          subi    LADDER,a5
         00011160 ffffffff! 
    2875 00011180     2b65          sra     5,a5                    ;/32 (Gives 0-6)
    2876 00011190     4ca1          move    a5,a1
    2877 000111a0     2be1          sra     1,a1                    ;0-3
    2878 000111b0     4025          add     a1,a5                   ;A5=0-9
    2879 000111c0     4005          add     a0,a5                   ;-2 to 2 randomness
    2880                    
    2881 000111d0     5684          clr     a4
    2882 000111e0     05a0          move    @PSTATUS2,a0
         000111f0 00000000! 
    2883 00011210     1fe0          btst    0,a0
    2884 00011220     cb01          jrnz    ikclp1
    2885 00011230     1a04          movk    16,a4
    2886 00011240           ikclp1
    2887 00011240     09e0          movi    p1winstreakd,a0
         00011250 00000000! 
    2888 00011270     4080          add     a4,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   61

    2889 00011280     8400          move    *a0,a0
    2890 00011290     c402          jrlt    ikclloser                       ;Lost? (-2 per match lost)
    2891                    
    2892                    
    2893                    
    2894 000112a0                   X2      a0
    2895                    
    2896                    
    2897                    
    2898 000112b0     4005          add     a0,a5                   ;+1 per match won
    2899 000112c0           ikclloser
    2900 000112c0                   X2      a0
    2901 000112d0     4005          add     a0,a5                   ;+2 per match won
    2902                    
    2903                    
    2904 000112e0     09e0          movi    p1rounds,a0
         000112f0 00000000! 
    2905 00011310     4080          add     a4,a0
    2906 00011320     8400          move    *a0,a0
    2907 00011330     4005          add     a0,a5                   ;+3 per round won
    2908 00011340                   X2      a0
    2909 00011350     4005          add     a0,a5
    2910                    
    2911 00011360                   X2      a3
    2912 00011370     4465          sub     a3,a5                   ;-2 per round past 1st
    2913                    
    2914                    
    2915 00011380     19c0          movk    ADJDIFF,a0              ;Get difficulty level (1-10)
    2916 00011390     0d5f          calla   GET_ADJ
         000113a0 00000000! 
    2917 000113c0     1440          subk    2,a0
    2918 000113d0                   X2      a0
    2919 000113e0     4005          add     a0,a5                   ;+8 default
    2920 000113f0     c501          jrge    ikclminok
    2921 00011400     56a5          clr     a5
    2922 00011410           ikclminok
    2923 00011410     0b45          cmpi    29,a5
         00011420     ffe2  
    2924 00011430     c601          jrle    ikclmaxok
    2925 00011440     1ba5          movk    29,a5
    2926 00011450           ikclmaxok
    2927 00011450     b0ad          move    a5,*a13(DRN_SKILL)
         00011460     0a70  
    2928                    
    2929                    
    2930 00011470     5600          clr     a0
    2931 00011480     09e1          movi    atkcnt_t,a1
         00011490 00000010- 
    2932 000114b0     09d0          movi    AT_NUM*NUM_WRES,b0
         000114c0     019d  
    2933 000114d0           ikclaclp
    2934 000114d0     9001          move    a0,*a1+
    2935 000114e0     3c50          dsj     b0,ikclaclp
    2936                    
    2937 000114f0           ikclx
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:28 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling drone code                                                 PAGE   62

    2938 000114f0     0960          rets
    2939                    
    2940                    
    2941                    
    2942                    
    2943 00011500            SUBRP  rnd
    2944                    
    2945 00011500     07a1          move    @RAND,a1,L
         00011510 00000000! 
    2946 00011530     6821          rl      a1,a1
    2947 00011540     05ae          move    @HCOUNT,a14
         00011550 c00001c0  
    2948 00011570     69c1          rl      a14,a1
    2949 00011580     41e1          add     sp,a1
    2950 00011590     0781          move    a1,@RAND,L
         000115a0 00000000! 
    2951                    
    2952 000115c0     5020          and     a1,a0
    2953 000115d0     0960          rets
    2954                    
    2955                    
    2956                    
    2957 000115e0            SUBRP  rndrng0
    2958                    
    2959 000115e0     07a1          move    @RAND,a1,L
         000115f0 00000000! 
    2960 00011610     6821          rl      a1,a1
    2961 00011620     05ae          move    @HCOUNT,a14
         00011630 c00001c0  
    2962 00011650     69c1          rl      a14,a1
    2963 00011660     41e1          add     sp,a1
    2964 00011670     0781          move    a1,@RAND,L
         00011680 00000000! 
    2965                    
    2966 000116a0     1020          addk    1,a0
    2967 000116b0     5e20          mpyu    a1,a0           ;Condition codes not valid!
    2968                    
    2969 000116c0     0960          rets
    2970                    
    2971                    
    2972                    
    2973                    
    2974                    
    2975                    
    2976                    
    2977                            .end

 No Errors,  No Warnings
