TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Ed Boon
       4                    * Initiated:            ?
       5                    *
       6                    * Modified:             Jason Skiles,   23 Nov 93 - WWF conversion
       7                    *                       Jake Simpson,   Announcers, new scheduling,
       8                    *                                       and various other features.
       9                    *
      10                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
      11                    *
      12                    *.Last mod - 1/10/94 12:02
      13                    **************************************************************
      14                    
      15                            .file   "dcssound.asm"
      17                            .width  132
      18                            .option b,d,l,t
      19                            .mnolist
      20                    
      21                            .include        "macros.h"
      22                            .include        "mproc.equ"
      23                            .include        "sys.equ"
      24                            .include        "game.equ"
      25                            .include        "plyr.equ"
      26                            .include        "audit.equ"
      27                            .include        "macros.h"
      28                            .include        "display.equ"
      29                            .INCLUDE        "GSP.EQU"
      30                            .INCLUDE        "SOUND.equ"
      31                            .include        "snddebug.h"
      32                    
      33 00000000                   .text
      34                    ;************************************************************************
      35                    ;*                                                                      *
      36                    ;* OK people, there are several ready made speech call routines for     *
      37                    ;* you to use. I'll go through them, with where you should call them    *
      38                    ;* from and what they are for.                                          *
      39                    ;* vvvvvv All These to be called from scripts VVVVVVVV                  *
      40                    ;* CALL_MISSES - If you attempt to do something and miss,               *
      41                    ;*      E.g. head grab....                                              *
      42                    ;* CALL_SPECIAL_MOVE - For the 5 dollar moves, the pile drivers etc     *
      43                    ;* CALL_ANI_AVERAGE_MOVE - For the Average moves that are fairly easy to*
      44                    ;*      fire off. E.g. Back hand slap, Shawns spin kick                 *
      45                    ;* DO_REVERSAL - When a move is reversed against the opponent           *
      46                    ;* CALL_MISS_YOKO -  For use when you try to do a move against YOKO and *
      47                    ;*                   fail.                                              *
      48                    ;* CALL_THROWN_OUT - Been chucked out of the ring                       *
      49                    ;* CALL_OTHER_AVERAGE - Another Average move speech call, to provide    *
      50                    ;*                      variety.                                        *
      51                    ;* CALL_NASTY_MOVE - When you do something against the rules,           *
      52                    ;*      E.g. Doink buzzer, Doink Hammer, Shawn arm break                *
      53                    ;* CALL_SETUP - Set up for a better move, E.g. Head grab, Picking up    *
      54                    ;*              over                                                    *
      55                    ;*                                                                      *
      56                    ;* vvvvvv All these calls come from the REACT subroutines VVVVV         *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    2

      57                    ;* CALL_FACE_HIT - Any thing that *JUST* hits the face Eg. Head butts   *
      58                    ;* CALL_MID_HIT - Any thing that *JUST* hits the midsection             *
      59                    ;* CALL_DROP_KICK - For any move that results in both wrestlers         *
      60                    ;*      hitting the ground.                                             *
      61                    ;*                                                                      *
      62                    ;************************************************************************
      63                    
      64                            .DEF    MAYBE_SHOCKING
      65                            .DEF    MAYBE_TOUGH_ENOUGH
      66                            .DEF    MAYBE_HIGH_RISK
      67                            .DEF    MAYBE_BOUNCE_ROPE
      68                            .DEF    CALL_BONE_BREAK
      69                            .DEF    MAYBE_GIDDUP
      70                            .DEF    FIND_AND_KILL_ENDLESS
      71                            .DEF    DO_DOINK_SLAM
      72                            .DEF    DO_NONO,DO_OTHERNONO
      73                            .DEF    DO_RAZOR_RUG_SPEECH
      74                            .def    DO_RAZOR_PUSH
      75                            .DEF    DO_WAIL
      76                            .DEF    DO_CHOKE
      77                            .DEF    DO_SCREAM
      78                            .DEF    DO_BLOCKED
      79                            .DEF    MAKE_HIM_SCREAM
      80                    
      81                            .DEF    DO_BLOCK_SND
      82                            .DEF    DO_FLAME_HIT_SND
      83                            .DEF    DO_FLAME_SND
      84                            .DEF    CALL_ANI_AVERAGE_MOVE
      85                    
      86                            .def    SNDSND, SET_LOWER_VOL, FADE_MASTER_VOL
      87                            .DEF    CALL_NASTY_MOVE
      88                    
      89                            .DEF    CLEAR_SPEECH_REPEAT
      90                            .def    CALL_MISS_YOKO
      91                    
      92                            .DEF    CALL_OTHER_AVERAGE
      93                    
      94                            .DEF    ADD_VOICE, RESET_VOICE_QUEUE
      95                            .DEF    IF_SILENT_ADD_VOICE
      96 00000000                   BSSX    DONE_HOWARD,16
      97                            .DEF    VINCE_START_GAME
      98                            .def    WALK_SOUND
      99                            .DEF    SMALL_RUN
     100                            .REF    RNDPER
     101                            .DEF    ADD_TO_QUEUE
     102                            .DEF    ADD_IF_SILENT
     103                            .DEF    CLIMB_ROPES
     104                            .DEF    JUMP_ROPES
     105                            .DEF    CALL_DROP_KICK
     106                            .DEF    DO_REVERSAL,CALL_THROWN_OUT
     107                            .DEF    CALL_FACE_HIT,CALL_MID_HIT
     108                            .DEF    CALL_MISSES,CALL_SETUP
     109                            .DEF    CALL_MATCH_OVER,CALL_AVERAGE_MOVE
     110                            .DEF    CALL_SPECIAL_MOVE
     111                            .DEF    HIT_THE_MAT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    3

     112                            .def    SMALL_BOUNCE
     113                            .DEF    VINCE_START_ROUND2_3
     114                            .ref    index1,index2,process_ptrs,PSTATUS,PSTATUS2
     115                    
     116                            ;for various files
     117                            .def    DEFAULT_SOUND_TABLE,MASTER_SOUND_TABLE
     118                    
     119                            ;from AUDIT.ASM
     120                            .ref    PUT_ADJ,GET_ADJ,F_ADC_S
     121                    
     122                            ;from UTIL.ASM
     123                            .ref    RNDRNG0
     124                    
     125                            ;from WRESTLE.ASM
     126                            .ref    GAMSTATE
     127                            .REF    p1winstreak
     128                    
     129                            .ref    crowd_cheer
     130                            .REF    get_health
     131                    
     132                            .ref    _coin_addr
     133                            .ref    _sound_addr
     134                            .ref    _soundirq_addr
     135                            .ref    _coin_counter_addr
     136                    
     137              0001  send    .set    00001H                  ; script command --> send sound code
     138              0002  setpri  .set    00002H                  ; script command --> set priority
     139              0003  endtune .set    00003H                  ; script command --> end of tune script
     140              0004  sleep   .set    00004H                  ; script command --> sleep next byte
     141              0005  send2   .set    00005H
     142                    
     143                    
     144              0000  sndpri  .set    0                       ; priority offset
     145              0010  snddur  .set    10h                     ; duration offset
     146              0020  sndscp  .set    20h                     ; script pointer offset
     147                    
     148              8000  ex      .set    08000H                  ; flag: extended sound call !!
     149                    
     150 00000010                   .bss    chan1ram,0,1
     151 00000000                   BSSX    chan1pri,16,1           ; sound channel #1 priority
     152 00000000                   BSSX    chan1dur,16,1           ; sound channel #1 duration (timer)
     153 00000030                   .bss    chan1scp,32,1           ; sound channel #1 script pointer
     154 00000000                   BSSX    chan1snd,16,1           ; sound channel #1 current sound
     155                    
     156 00000000                   BSSX    chan2pri,16,1           ; sound channel #2 priority
     157 00000000                   BSSX    chan2dur,16,1           ; sound channel #2 duration (timer)
     158 00000080                   .bss    chan2scp,32,1           ; sound channel #2 script pointer
     159 00000000                   BSSX    chan2snd,16,1           ; sound channel #2 current sound
     160                    
     161 00000000                   BSSX    chan3pri,16,1           ; sound channel #3 priority
     162 00000000                   BSSX    chan3dur,16,1           ; sound channel #3 duration (timer)
     163 000000d0                   .bss    chan3scp,32,1           ; sound channel #3 script pointer
     164 00000000                   BSSX    chan3snd,16,1           ; sound channel #3 current sound
     165                    
     166 00000000                   BSSX    chan4pri,16,1           ; sound channel #4 priority
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    4

     167 00000000                   BSSX    chan4dur,16,1           ; sound channel #4 duration (timer)
     168 00000120                   .bss    chan4scp,32,1           ; sound channel #4 script pointer
     169 00000000                   BSSX    chan4snd,16,1           ; sound channel #4 current sound
     170                    
     171 00000150                   .bss    vincechan,16,1          ; channel vince is on, if any
     172 00000160                   .bss    vincedur,16,1           ; vince duration
     173                    
     174 00000170                   .bss    randychan,16,1          ; channel randy is on, if any
     175 00000180                   .bss    randydur,16,1           ; randy duration
     176                    
     177 00000190                   .bss    howardchan,16,1         ; channel howard is on, if any
     178 000001a0                   .bss    howarddur,16,1          ; howard duration
     179                    
     180 00000000                   BSSX    SOUNDSUP,16,1           ; SOUND ENABLED FLAG
     181 000001c0                   .BSS    LAST_VOICE,64           ;LAST SPEECH CALL MADE
     182 00000200                   .BSS    WHICH_LAST_VOICE,32
     183 00000000                   BSSX    REPEAT_STATE,16
     184                    
     185 00000000                   bssx    ANNOUNCE_QUEUE,32*20
     186 000004b0                   .BSS    EOF_ANNOUNCE_QUEUE,0
     187 00000000                   BSSX    NEXT_ANN_QUEUE,32
     188 00000000                   BSSX    CURRENT_ANN_QUEUE,32
     189                    
     190 00000000                   BSSX    ENDLESS_SOUND,16
     191 00000000                   BSSX    doing_dcs_reset,16
     192                    
     193                            .if SND_DEBUG
     194                            ;keep these in order and adjacent
     195                            BSSX    SDRAM,SNDCALSIZ*64
     196                            BSSX    sdram_ptr,32
     197                            .endif
     198                    
     199 00000510                   .bss    crowd_dummy_exists,16
     200 00000520                   .bss    repeat_mode_exists,16
     201 00000530                   .bss    razor_swear_exists,16
     202                    
     203                    **************************************************************************
     204                    *                                                                                               *
     205                    *       Sound type priorities
     206                    *                                                                                               *
     207                    **************************************************************************
     208                    
     209              0100  sp_robo         equ      1 << 8                 ; robotron sounds
     210              0400  sp_mat1         equ      4 << 8                 ; mat noises
     211              0800  sp_woosh        equ      8 << 8                 ; attack whoosh
     212              0c00  sp_attkv        equ     12 << 8                 ; attack grunt
     213              0e00  sp_reacv        equ     14 << 8                 ; react grunt
     214              0f00  sp_losmack      equ     15 << 8                 ; just under smack
     215              1000  sp_smack        equ     16 << 8                 ; smack
     216              1400  sp_mat2         equ     20 << 8                 ; mat noises
     217              1800  sp_wspch        equ     24 << 8                 ; wrestler speech
     218              2400  sp_system1      equ     36 << 8                 ; system stuff
     219              2800  sp_system2      equ     40 << 8                 ; system stuff
     220              2c00  sp_system3      equ     44 << 8                 ; system stuff
     221              6400  sp_anncer       equ     100 << 8                ; announcer speech
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    5

     222                    
     223                    
     224                    **************************************************************************
     225                    *                                                                                            *
     226                    *    TRIPLE SOUND TABLE format:                                                              *
     227                    *                                                                                            *
     228                    *              .word   0aaaaH,0bbbbH                                                         *
     229                    *                                                                                            *
     230                    *       where:  aaaa = priority / duration                                                   *
     231                    *               bbbb = channel 1 sound call                                          *
     232                    *                                                                                            *
     233                    **************************************************************************
     234                    
     235 00000000           triple_sndtab
     236 00000000     0000          .word   0,0                     ;  0 =
     237 00000020     1011          .word   sp_smack|17,080H                ;  1 = face hit #0
     238 00000040     100e          .word   sp_smack|14,084H                ;  2 = face hit #1
     239 00000060     285a          .word   sp_system2|90,1480      ;  3 = combo earned sound
     240 00000080     140f          .word   sp_mat2|15,088H         ;  4 = body hit #0
     241 000000a0     1011          .word   sp_smack|17,08cH                ;  5 = body hit #1
     242 000000c0     100f          .word   sp_smack|15,090H                ;  6 = kick #0
     243 000000e0     140d          .word   sp_mat2|13,094H         ;  7 = kick #1
     244 00000100     140f          .word   sp_mat2|15,098H         ;  8 = kick #2
     245                    
     246 00000120     140d          .word   sp_mat2|13,156          ;  9 = fall to mat #0
     247 00000140     0446          .word   sp_mat1|70,460          ;  a = clock tick
     248 00000160     043e          .word   sp_mat1|62,412          ;  b = mat crash #0
     249 00000180     0435          .word   sp_mat1|53,416          ;  c = mat rattle #0
     250 000001a0     0427          .word   sp_mat1|39,424          ;  d = mat rattle #2
     251                    
     252 000001c0     0815          .word   sp_woosh|21,0a8H                ;  e = whoosh #0
     253 000001e0     0814          .word   sp_woosh|20,0acH                ;  f = whoosh #1
     254 00000200     0815          .word   sp_woosh|21,0b0H                ; 10 = whoosh #2
     255 00000220     080d          .word   sp_woosh|13,0b4H                ; 11 = whoosh #3
     256 00000240     080c          .word   sp_woosh|12,0b8H                ; 12 = whoosh #4
     257 00000260     080a          .word   sp_woosh|10,0bcH                ; 13 = whoosh #5
     258 00000280     080d          .word   sp_woosh|13,0c0H                ; 14 = whoosh #6
     259 000002a0     080f          .word   sp_woosh|15,0c4H                ; 15 = whoosh #7
     260 000002c0     080e          .word   sp_woosh|14,0c8H                ; 16 = whoosh #8
     261 000002e0     080b          .word   sp_woosh|11,0ccH                ; 17 = whoosh #9
     262                    
     263 00000300     1014          .word   sp_smack|20,0d0H                ; 18 = hard hit #0
     264 00000320     100b          .word   sp_smack|11,0d4H                ; 19 = hard hit #1
     265 00000340     1015          .word   sp_smack|21,0d8H                ; 1a = hard hit #2
     266 00000360     1018          .word   sp_smack|24,0dcH                ; 1b = hard hit #3
     267 00000380     1014          .word   sp_smack|20,0e0H                ; 1c = hard hit #4
     268                    
     269 000003a0     2438          .word   sp_system1|56,0e4H              ; 1d = New Deep Crunchy bone break (ALLDUCK)
     270 000003c0     0c28          .word   sp_attkv|40,0e8H                ; 1e = long effort grunt #1
     271 000003e0     0c1d          .word   sp_attkv|29,0ecH                ; 1f = long effort grunt #2
     272 00000400     0c2a          .word   sp_attkv|42,0f0H                ; 20 = long effort grunt #3
     273 00000420     0c24          .word   sp_attkv|36,0f4H                ; 21 = long effort grunt #4
     274 00000440     0c1a          .word   sp_attkv|26,0f8H                ; 22 = long effort grunt #5
     275 00000460     0c1f          .word   sp_attkv|31,0fcH                ; 23 = long effort grunt #6
     276 00000480     0c22          .word   sp_attkv|34,0100H       ; 24 = long effort grunt #7
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    6

     277 000004a0     0c21          .word   sp_attkv|33,0104H       ; 25 = long effort grunt #8
     278 000004c0     0c1e          .word   sp_attkv|30,0108H       ; 26 = long effort grunt #9
     279 000004e0     0c1d          .word   sp_attkv|29,010cH       ; 27 = long effort grunt #10
     280 00000500     0c1c          .word   sp_attkv|28,0110H       ; 28 = long effort grunt #11
     281 00000520     0c2a          .word   sp_attkv|42,0114H       ; 29 = long effort grunt #12
     282                    
     283 00000540     0c13          .word   sp_attkv|19,0118H       ; 2a = short effort grunt #0
     284 00000560     0c17          .word   sp_attkv|23,011cH       ; 2b = short effort grunt #1
     285 00000580     0c18          .word   sp_attkv|24,0120H       ; 2c = short effort grunt #2
     286 000005a0     0c0d          .word   sp_attkv|13,0124H       ; 2d = short effort grunt #3
     287 000005c0     0c10          .word   sp_attkv|16,0128H       ; 2e = short effort grunt #4
     288 000005e0     0c1a          .word   sp_attkv|26,012cH       ; 2f = short effort grunt #5
     289 00000600     0c14          .word   sp_attkv|20,0130H       ; 30 = short effort grunt #6
     290 00000620     0c16          .word   sp_attkv|22,0134H       ; 31 = short effort grunt #7
     291 00000640     0c17          .word   sp_attkv|23,0138H       ; 32 = short effort grunt #8
     292 00000660     1046          .word   sp_smack|70,236         ; 33 = baseball bat smack
     293 00000680     2818          .word   sp_system2|24,0dcH      ; 34 = hard hit #3 (with higher priority)
     294 000006a0     2c15          .word   sp_system3|21,0b0H      ; 35 = whoosh (screen close)
     295 000006c0     0000          .word   0,0     ; 36
     296 000006e0     144d          .word   sp_mat2|77,0104H                ; 37 = CEMENT body slam outside the ring
     297 00000700     0000          .word   0,0     ; 38
     298 00000720     2860          .word   sp_system2|96,1616              ; 39 = robo coinin
     299 00000740     0000          .word   0,0     ; 3a
     300 00000760     0000          .word   0,0     ; 3b
     301 00000780     0825          .word   sp_woosh|37,1284        ; 3c    = rope twang
     302 000007a0     143e          .word   sp_mat2|62,408          ; 3d    = ring mat crash #0
     303 000007c0     185c          .word   sp_wspch|92,1448        ; 3e    = doink joy buzzer
     304 000007e0     0c43          .word   sp_attkv|67,1452        ; 3f    = doink water spray
     305 00000800     0c15          .word   sp_attkv|21,176         ; 40    = urn materialisation
     306 00000820     0c39          .word   sp_attkv|57,1236        ; 41    = Bam Bam rising in flames
     307 00000840     0cb9          .word   sp_attkv|185,904        ; 42    = Bam Bam taunt
     308 00000860     1046          .word   sp_smack|70,1436        ; 43    = doink big glove slap
     309 00000880     1054          .word   sp_smack|84,1440        ; 44    = doink big foot hit
     310 000008a0     1450          .word   sp_mat2|80,1444         ; 45    = doink big hammer hit
     311 000008c0     0c0b          .word   sp_attkv|11,428         ; 46    = footsteps on mat #0
     312 000008e0     0c0f          .word   sp_attkv|15,432         ; 47    = footsteps on mat #1
     313 00000900     2883          .word   sp_system2|131,1376   ; 48      = COIN IN SOUNDS
     314                    
     315 00000920     6435          .word   sp_anncer|53,1512    ; 49       = buy in sound
     316 00000940     0813          .word   sp_woosh|19,1556        ; 4a    = flashbulb #0
     317 00000960     0820          .word   sp_woosh|32,1560        ; 4b    = flashbulb #1
     318 00000980     0828          .word   sp_woosh|40,1564        ; 4c    = flashbulb #2
     319 000009a0     1023          .word   sp_smack|35,1568        ; 4d    = flash the "W" after a victory
     320 000009c0     0e63          .word   sp_reacv|99,160         ; 4e    =BOWLING PINS strike #0
     321 000009e0     0e5d          .word   sp_reacv|93,164         ; 4f    =BOWLING PINS strike #1
     322                    
     323                            ;DOINK SPEECH
     324 00000a00     1835          .word   sp_wspch|53,020cH       ; 50 = wait a minute, wait a minute
     325 00000a20     181d          .word   sp_wspch|29,0210H       ; 51 = time out
     326 00000a40     0000          .word   0,0                     ; 52 = 
     327 00000a60     1817          .word   sp_wspch|23,0218H       ; 53 = times
     328 00000a80     1827          .word   sp_wspch|39,021cH       ; 54 = wait, wait
     329 00000aa0     184f          .word   sp_wspch|79,0220H       ; 55 = laugh #0
     330 00000ac0     188c          .word   sp_wspch|140,0224H      ; 56 = laugh #1
     331 00000ae0     182a          .word   sp_wspch|42,0228H       ; 57 = laugh #2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    7

     332 00000b00     187b          .word   sp_wspch|123,022cH      ; 58 = laugh #3
     333 00000b20     185b          .word   sp_wspch|91,0230H       ; 59 = yell as tossed
     334                    
     335                            ;RAZOR SPEECH
     336 00000b40     185e          .word   sp_wspch|94,0300H       ; 5a = you picked the right guy
     337 00000b60     1845          .word   sp_wspch|69,0304H       ; 5b = check me out, maing...
     338 00000b80     0000          .word   0,0                     ; 5c
     339 00000ba0     0000          .word   0,0                     ; 5d
     340 00000bc0     0000          .word   0,0                     ; 5e
     341 00000be0     0000          .word   0,0                     ; 5f
     342                    
     343                            ;SHAWN SPEECH
     344                    ;       .word   sp_wspch|269,0280H      ; 60 = lucky you...breaking bones
     345 00000c00     18ff          .word   sp_wspch|255,0280H      ; 60 = lucky you...breaking bones
     346 00000c20     1882          .word   sp_wspch|130,0284H      ; 61 = wrestler o' 90's
     347 00000c40     1884          .word   sp_wspch|132,0288H      ; 62 = how could...hurt so bad
     348 00000c60     181a          .word   sp_wspch|26,028cH       ; 63 = no no
     349 00000c80     1815          .word   sp_wspch|21,0290H       ; 64 = please
     350                    
     351                            ;BAM BAM SPEECH
     352 00000ca0     0000          .word   0,0                  ; 65 = 
     353 00000cc0     1893          .word   sp_wspch|147,900        ; 66 = the beast from the east
     354 00000ce0     18b9          .word   sp_wspch|185,904        ; 67 = bam bam - bam bam - yeah!
     355 00000d00     18a2          .word   sp_wspch|162,908        ; 68 = bam bam bigelow
     356 00000d20     18a0          .word   sp_wspch|160,912        ; 69 = burn, baby, burn!
     357 00000d40     1818          .word   sp_wspch|24,916      ; 6a = hey! #0
     358 00000d60     1817          .word   sp_wspch|23,920      ; 6b = no no
     359 00000d80     0000          .word   0,0                  ; 6c = 
     360 00000da0     0000          .word   0,0                  ; 6d = 
     361 00000dc0     1824          .word   sp_wspch|36,932      ; 6e = no no no
     362 00000de0     1867          .word   sp_wspch|103,936        ; 6f = get out of my ring
     363                    
     364                    
     365 00000e00     0000          .word   0,0                     ; 70
     366 00000e20     0e1e          .word   sp_reacv|30,045cH       ; 71 = DOINK pain #1
     367 00000e40     0e28          .word   sp_reacv|40,0460H       ; 72 = DOINK pain #2
     368                    
     369 00000e60     0e2a          .word   sp_reacv|42,0464H       ; 73 = DOINK gut hit #0
     370 00000e80     0e28          .word   sp_reacv|40,0468H       ; 74 = DOINK gut hit #1
     371 00000ea0     0e12          .word   sp_reacv|18,046cH       ; 75 = DOINK gut hit #2
     372                    
     373                            ;low-priority mat crashes
     374 00000ec0     0f32          .word   sp_losmack|75-25,0500H  ; 76 = Plywood crash #0
     375 00000ee0     0f34          .word   sp_losmack|77-25,0508H  ; 77 = Plywood crash #2
     376 00000f00     0f3a          .word   sp_losmack|83-25,0510H  ; 78 = Plywood crash #4
     377                    
     378 00000f20     0e18          .word   sp_reacv|24,047cH       ; 79 = RAZOR generic grunt #0
     379 00000f40     0000          .word   0,0                     ; 7a
     380 00000f60     0000          .word   0,0                     ; 7b
     381                    
     382 00000f80     0e1d          .word   sp_reacv|29,0488H       ; 7c = RAZOR gut hit #0
     383 00000fa0     2440          .word   sp_system1|64,1528      ; 7d    =SCREEN WIPE upward in pitch #1
     384 00000fc0     2440          .word   sp_system1|64,1536      ; 7e    =SCREEN WIPE upward in pitch #3
     385 00000fe0     2446          .word   sp_system1|70,1544      ; 7f    =SCREEN WIPE downward in pitch #1
     386 00001000     2449          .word   sp_system1|73,1552      ; 80    =SCREEN WIPE downward in pitch #3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    8

     387 00001020     0000          .word   0,0                     ; 81
     388                    
     389 00001040     0e3e          .word   sp_reacv|62,1196        ; 82 = BAM BAM effort #1
     390                    
     391 00001060     0000          .word   0,0     ;* 83 = JASON effort grunt #0
     392 00001080     0000          .word   0,0     ;* 84 = JASON effort grunt #1
     393 000010a0     0c27          .word   sp_attkv|39,0415H       ; 85 = JASON effort grunt #2
     394 000010c0     0c1f          .word   sp_attkv|31,0418H       ; 86 = JASON effort grunt #3
     395 000010e0     0c1f          .word   sp_attkv|31,041bH       ; 87 = JASON effort grunt #4
     396 00001100     0c27          .word   sp_attkv|39,041eH       ; 88 = JASON effort grunt #5
     397 00001120     0c28          .word   sp_attkv|40,0421H       ; 89 = JASON effort grunt #6
     398 00001140     0c22          .word   sp_attkv|34,0424H       ; 8a = JASON effort grunt #7
     399 00001160     0c1b          .word   sp_attkv|27,0427H       ; 8b = JASON effort grunt #8
     400 00001180     0c23          .word   sp_attkv|35,042aH       ; 8c = CG effort grunt #0
     401 000011a0     0c2c          .word   sp_attkv|44,042dH       ; 8d = CG effort grunt #1
     402 000011c0     0c23          .word   sp_attkv|35,0430H       ; 8e = CG effort grunt #2
     403 000011e0     0c24          .word   sp_attkv|36,0433H       ; 8f = CG effort grunt #3
     404 00001200     0c24          .word   sp_attkv|36,0433H       ; 90 = CG effort grunt #4
     405 00001220     0c19          .word   sp_attkv|25,0436H       ; 91 = CG effort grunt #5
     406 00001240     0c22          .word   sp_attkv|34,0439H       ; 92 = CG effort grunt #6
     407 00001260     0c31          .word   sp_attkv|49,043cH       ; 93 = CG effort grunt #7
     408 00001280     0c39          .word   sp_attkv|57,043fH       ; 94 = CG effort grunt #8
     409 000012a0     0000          .word   0,0     ;* 95 = SAL pain grunt #0
     410 000012c0     0000          .word   0,0     ;* 96 = SAL pain grunt #1
     411 000012e0     0000          .word   0,0     ;* 97 = SAL pain grunt #2
     412 00001300     243a          .word   sp_system1|58,464   ; 98        =BONEBREAK for Lex/BamBam/Piledrivers
     413                    
     414 00001320     1026          .word   sp_smack|38,1228        ; 99    =BAMBAM flaming punch woosh #0
     415 00001340     1024          .word   sp_smack|36,1232        ; 9a    =BAMBAM flaming punch woosh #1
     416 00001360     2420          .word   sp_system1|32,1492   ; 9b       =BONEBREAK for Lex/BamBam/Piledrivers
     417 00001380     0c4a          .word   sp_attkv|74,1240        ; 9c    =BAMBAM flaming splash
     418 000013a0     103c          .word   sp_smack|60,1244        ; 9d    =BAMBAM lands flaming punch #0
     419 000013c0     103b          .word   sp_smack|59,1248        ; 9e    =BAMBAM lands flaming punch #1
     420 000013e0     103d          .word   sp_smack|61,1252        ; 9f    =BAMBAM lands flaming blow #2
     421 00001400     101c          .word   sp_smack|28,1256        ; a0    =BAMBAM lands flaming blow #3
     422 00001420     1018          .word   sp_smack|24,1260        ; a1    =BAMBAM lands flaming blow #4
     423 00001440     0c51          .word   sp_attkv|81,1264        ; a2    =BAMBAM jumps off the turnbuckle & flames up
     424 00001460     0ceb          .word   sp_attkv|235,1268       ; a3    =BAMBAM's opponent explodes in flames
     425 00001480     0000          .word   0,0                     ; a4    =
     426 000014a0     2834          .word   sp_system2|77-25,0508H  ; a5 = Plywood crash #2 (duplicate with higher priority)
     427 000014c0     0000          .word   0,0                     ; a6    =
     428 000014e0     0000          .word   0,0                     ; a7    =
     429 00001500     24d4          .word   sp_system1|212,232      ; a8    = PERFECT VICTORY sparkly
     430 00001520     2429          .word   sp_system1|41,0628H     ; a9 = RAZOR slash whoosh
     431 00001540     242a          .word   sp_system1|42,0168H     ; aa = CARTOON richocet bonk
     432 00001560     1848          .word   sp_wspch|72,04D4H       ; ab = BAMBAM morph out of mat
     433 00001580     1028          .word   sp_smack|40,015CH       ; ac = CARTOON bong #2
     434 000015a0     103a          .word   sp_smack|58,0170H       ; ad = CARTOON crash/bong #0
     435 000015c0     0e21          .word   sp_reacv|33,1220        ; ae = SHAWN pain #1
     436 000015e0     0e21          .word   sp_reacv|33,1224        ; af = SHAWN gut hit #0
     437                    
     438                            ;MISCELLANEOUS SOUNDS
     439 00001600     041d          .word   sp_mat1|29,0315H             ; b0 = some blip sound
     440 00001620     645a          .word   sp_anncer|90,0148h      ; b1 = round start bell
     441 00001640     1013          .word   sp_smack|19,0160H       ; b2 = squeeze horn honk #0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE    9

     442 00001660     104b          .word   sp_smack|75,014fh       ; b3 = twist - slam
     443 00001680     042e          .word   sp_mat1|46,344       ; b4 = bong (temp!)
     444 000016a0     040f          .word   sp_mat1|15,01b2H                ; b5 = footstep on mat #1
     445                    
     446 000016c0     2422          .word   sp_system1|34,0178H     ; b6 = Quick whistle for transitions
     447                    
     448 000016e0     2409          .word   sp_system1|9,1364       ; b7 = timer tick #0 
     449 00001700     240b          .word   sp_system1|11,1368      ; b8 = timer tock #0
     450 00001720     2454          .word   sp_system1|84,1484      ; b9 = danger sound
     451 00001740     2466          .word   sp_system1|102,1488     ; ba    = combo performed
     452 00001760     247d          .word   sp_system1|125,1520     ; bb    = reversal_sound 
     453                    
     454 00001780     2476          .word   sp_system1|118,1472     ; bc    =ALARM companion to 1520
     455 000017a0     247e          .word   sp_system1|126,1476     ; bd    =ALARM snarl alarm #0
     456 000017c0     0433          .word   sp_mat1|51,017cH                ; be = wobble (danger!)
     457 000017e0     1432          .word   sp_mat2|75-25,0500H     ; bf = Plywood crash #0
     458 00001800     0427          .word   sp_mat1|39,316          ; c0 = fall to mat #0
     459 00001820     1434          .word   sp_mat2|77-25,0508H     ; c1 = Plywood crash #2
     460 00001840     041a          .word   sp_mat1|26,320          ; c2 = fall to mat #1
     461 00001860     143a          .word   sp_mat2|83-25,0510H     ; c3 = Plywood crash #4
     462 00001880     144a          .word   sp_mat2|74,1516         ; c4    = VICTORY "w" flys up the screen
     463 000018a0     1465          .word   sp_mat2|101,0518H       ; c5 = Chair crash #1
     464 000018c0     102e          .word   sp_smack|46,1580        ; c6    = HORIZON RING clatter/crash against fence #0
     465 000018e0     2409          .word   sp_system1|9,1456       ; c7    = player 1 moves cursor #1
     466 00001900     2409          .word   sp_system1|9,1460       ; c8    = player 2 moves cursor #1
     467 00001920     0000          .word   0,0     ; c9    = player 1 moves cursor #2
     468 00001940     0000          .word   0,0     ; ca    = player 2 moves cursor #2
     469 00001960     283f          .word   sp_system2|63,244       ; cb    = player 1 selects #1
     470 00001980     283f          .word   sp_system2|63,248       ; cc    = player 2 selects #1
     471 000019a0     105a          .word   sp_smack|90,324         ; cd    = FX wild metallic clang/chain drag
     472 000019c0     248e          .word   sp_system1|142,1180     ; ce    =UNDERTAKER fires a ghost at you (try for both)
     473 000019e0     1464          .word   sp_mat2|100,1184        ; cf    =UNDERTAKER bats flutter (endless)
     474 00001a00     240e          .word   sp_system1|14,1188      ; d0    =UNDERTAKER tombstone morphs into his hands
     475 00001a20     2418          .word   sp_system1|24,1192      ; d1    =UNDERTAKER hits you with his tombstone
     476 00001a40     2430          .word   sp_system1|48,1208      ; d2    =UNDERTAKER multi-exposures over & grabs you
     477 00001a60     1839          .word   sp_wspch|57,588         ; d3    =FROM THE CROWD "pin him!!" #0
     478 00001a80     1848          .word   sp_wspch|72,592         ; d4    =FROM THE CROWD "pin him!!" #1
     479 00001aa0     1832          .word   sp_wspch|50,596         ; d5    =FROM THE CROWD "pin him!!" #2
     480 00001ac0     1841          .word   sp_wspch|65,600         ; d6    =FROM THE CROWD female scream
     481 00001ae0     0e07          .word   sp_reacv|7,468          ; d7    =SHAWN hearts kissy-face #0
     482 00001b00     0e1d          .word   sp_reacv|29,472         ; d8    =SHAWN hearts kissy-face #1
     483 00001b20     0e0b          .word   sp_reacv|11,476         ; d9    =YOKO hams circle #0
     484 00001b40     0e13          .word   sp_reacv|19,480         ; da    =YOKO hams circle #1
     485 00001b60     0e12          .word   sp_reacv|18,484         ; db    =YOKO fishes circle #0
     486 00001b80     0e1f          .word   sp_reacv|31,488         ; dc    =YOKO fishes circle #1
     487 00001ba0     2414          .word   sp_system1|20,0d0H      ; dd = random select sound (hard hit)
     488 00001bc0     0000          .word   0,0                     ; de
     489 00001be0     0000          .word   0,0                     ; df
     490                    
     491                            ;ANNOUNCER SPEECH - must be contiguous
     492 00001c00           announcer_start
     493                            ;VINCE MCMAHON
     494 00001c00     6459          .word   sp_anncer|89,3072       ; e0 = VINCE greeting
     495 00001c20     6412          .word   sp_anncer|18,3076       ; e1 = VINCE ascending Doink #1
     496 00001c40     6413          .word   sp_anncer|19,3080       ; e2 = VINCE ascending Doink #2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   10

     497 00001c60     6415          .word   sp_anncer|21,3084       ; e3 = VINCE ascending Doink #3
     498 00001c80     6418          .word   sp_anncer|24,3088       ; e4 = VINCE ascending Doink #4
     499                    
     500 00001ca0     641a          .word   sp_anncer|26,3092       ; e5 = VINCE ascending Shawn #1
     501 00001cc0     641a          .word   sp_anncer|26,3096       ; e6 = VINCE ascending Shawn #2
     502 00001ce0     641c          .word   sp_anncer|28,3100       ; e7 = VINCE ascending Shawn #3
     503 00001d00     641f          .word   sp_anncer|31,3104       ; e8 = VINCE ascending Shawn #4
     504                    
     505 00001d20     641a          .word   sp_anncer|26,3108       ; e9 = VINCE ascending Razor #1
     506 00001d40     641b          .word   sp_anncer|27,3112       ; ea = VINCE ascending Razor #2
     507 00001d60     641e          .word   sp_anncer|30,3116       ; eb = VINCE ascending Razor #3
     508 00001d80     641f          .word   sp_anncer|31,3120       ; ec = VINCE ascending Razor #4
     509                    
     510 00001da0     6469          .word   sp_anncer|105,3124      ; ed = VINCE Unbeeleeevable! #0
     511 00001dc0     6442          .word   sp_anncer|66,3128       ; ee = VINCE Forget about it!
     512 00001de0     6430          .word   sp_anncer|48,3132       ; ef = VINCE Here's the setup...
     513 00001e00     6456          .word   sp_anncer|86,3136       ; f0 = VINCE aaaaannnnd OH!
     514 00001e20     6431          .word   sp_anncer|49,3140       ; f1 = VINCE Oh, my!
     515 00001e40     643d          .word   sp_anncer|61,3144       ; f2 = VINCE Congratulations
     516                    
     517 00001e60     6422          .word   sp_anncer|34,3148       ; f3 = VINCE ascending Undertaker #1
     518 00001e80     6425          .word   sp_anncer|37,3152       ; f4 = VINCE ascending Undertaker #2
     519 00001ea0     6424          .word   sp_anncer|36,3156       ; f5 = VINCE ascending Undertaker #3
     520 00001ec0     642c          .word   sp_anncer|44,3160       ; f6 = VINCE ascending Undertaker #4
     521                    
     522 00001ee0     6420          .word   sp_anncer|32,3164       ; f7 = VINCE ascending Bam Bam #1
     523 00001f00     641e          .word   sp_anncer|30,3168       ; f8 = VINCE ascending Bam Bam #2
     524 00001f20     6420          .word   sp_anncer|32,3172       ; f9 = VINCE ascending Bam Bam #3
     525 00001f40     6422          .word   sp_anncer|34,3176       ; fa = VINCE ascending Bam Bam #4
     526                    
     527 00001f60     6416          .word   sp_anncer|22,3180       ; fb = VINCE ascending Luger #1
     528 00001f80     6415          .word   sp_anncer|21,3184       ; fc = VINCE ascending Luger #2
     529 00001fa0     6415          .word   sp_anncer|21,3188       ; fd = VINCE ascending Luger #3
     530 00001fc0     641a          .word   sp_anncer|26,3192       ; fe = VINCE ascending Luger #4
     531                    
     532 00001fe0     641a          .word   sp_anncer|26,3196       ; ff = VINCE ascending Hitman #1
     533 00002000     641a          .word   sp_anncer|26,3200       ;100 = VINCE ascending Hitman #2
     534 00002020     641b          .word   sp_anncer|27,3204       ;101 = VINCE ascending Hitman #3
     535 00002040     6419          .word   sp_anncer|25,3208       ;102 = VINCE ascending Hitman #4
     536                    
     537 00002060     641b          .word   sp_anncer|27,3212       ;103 = VINCE ascending Yoko #1
     538 00002080     641a          .word   sp_anncer|26,3216       ;104 = VINCE ascending Yoko #2
     539 000020a0     641e          .word   sp_anncer|30,3220       ;105 = VINCE ascending Yoko #3
     540 000020c0     6420          .word   sp_anncer|32,3224       ;106 = VINCE ascending Yoko #4
     541                    
     542 000020e0     643f          .word   sp_anncer|63,3228       ;107 = VINCE Here we go!
     543 00002100     645d          .word   sp_anncer|93,3232       ;108 = VINCE What a matchup this is!
     544                    
     545                                                            ;      VINCE Very impressive move by
     546 00002120     645c          .word   sp_anncer|92,3236       ;109 = ...Doink!
     547 00002140     6471          .word   sp_anncer|113,3240      ;10a = ...Shawn Michaels!
     548 00002160     646c          .word   sp_anncer|108,3244      ;10b = ...Razor Ramon!
     549 00002180     6471          .word   sp_anncer|113,3248      ;10c = ...the Undertaker!
     550 000021a0     647d          .word   sp_anncer|125,3252      ;10d = ...Bam Bam Bigelow!
     551 000021c0     646b          .word   sp_anncer|107,3256      ;10e = ...Lex Luger!
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   11

     552 000021e0     646e          .word   sp_anncer|110,3260      ;10f = ...Bret Hart!
     553 00002200     6479          .word   sp_anncer|121,3264      ;110 = ...Yokozuna!
     554                    ;LEAVE PLENTY OF SPACE FOR FUTURE SOUNDS
     555                                                            ;Tonites match up....
     556 00002220     6464          .word   sp_anncer|100,3412   ;111       = ...Doink!
     557 00002240     6464          .word   sp_anncer|100,3416   ;112       = ...Shawn Michaels!
     558 00002260     6463          .word   sp_anncer|99,3420    ;113       = ...Razor Ramon!
     559 00002280     647f          .word   sp_anncer|127,3424   ;114       = ...Bam Bam Bigelow!
     560 000022a0     6469          .word   sp_anncer|105,3428   ;115       = ...the Undertaker!
     561 000022c0     6462          .word   sp_anncer|98,3432    ;116       = ...Lex Luger!
     562 000022e0     6479          .word   sp_anncer|121,3436   ;117       = ...Bret Hart!
     563 00002300     6474          .word   sp_anncer|116,3440   ;118       = ...Yokozuna!
     564                                                            ;In the square circle tonite..
     565 00002320     647e          .word   sp_anncer|126,3444   ;119       =...Doink! 
     566 00002340     647e          .word   sp_anncer|126,3448   ;11a       =...Shawn Michaels! 
     567 00002360     647d          .word   sp_anncer|125,3452   ;11b       =...Razor Ramon! 
     568 00002380     6499          .word   sp_anncer|153,3456   ;11c       =...Bam Bam Bigelow!
     569 000023a0     6483          .word   sp_anncer|131,3460   ;11d       =...the Undertaker!
     570 000023c0     647c          .word   sp_anncer|124,3464   ;11e       =...Lex Luger! 
     571 000023e0     6493          .word   sp_anncer|147,3468   ;11f       =...Bret Hart! 
     572 00002400     648e          .word   sp_anncer|142,3472   ;120       =...Yokozuna! 
     573 00002420     6452          .word   sp_anncer|82,3476    ;121       =versus Doink! 
     574 00002440     6453          .word   sp_anncer|83,3480    ;122       =versus Shawn Michaels! 
     575 00002460     6448          .word   sp_anncer|72,3484    ;123       =versus Razor Ramon! 
     576 00002480     6468          .word   sp_anncer|104,3488   ;124       =versus Bam Bam Bigelow!
     577 000024a0     6453          .word   sp_anncer|83,3492    ;125       =versus the Undertaker!
     578 000024c0     644b          .word   sp_anncer|75,3496    ;126       =versus Lex Luger! 
     579 000024e0     6462          .word   sp_anncer|98,3500    ;127       =versus Bret Hart! 
     580 00002500     6457          .word   sp_anncer|87,3504    ;128       =versus Yokozuna! 
     581 00002520     6487          .word   sp_anncer|135,3360   ;129       =this is a complete disaster 
     582 00002540     6456          .word   sp_anncer|86,3356    ;12a       =this is a debacle 
     583 00002560     6436          .word   sp_anncer|54,3640    ;12b       =doink the clown 
     584 00002580     6437          .word   sp_anncer|55,3644    ;12c       =shawn michaels 
     585 000025a0     642c          .word   sp_anncer|44,3648    ;12d       =razor ramon 
     586 000025c0     644c          .word   sp_anncer|76,3652    ;12e       =bam bam 
     587 000025e0     6436          .word   sp_anncer|54,3656    ;12f       =undertaker 
     588 00002600     642f          .word   sp_anncer|47,3660    ;130       =lex luger 
     589 00002620     6446          .word   sp_anncer|70,3664    ;131       =bret hart
     590 00002640     643b          .word   sp_anncer|59,3668    ;132       =yoko
     591 00002660     641c          .word   sp_anncer|28,3672    ;133       =and
     592 00002680     643e          .word   sp_anncer|62,3228    ;134 =here we go
     593 000026a0     645d          .word   sp_anncer|93,3232    ;135       =what a matchup this is
     594 000026c0     6468          .word   sp_anncer|104,3628   ;136       =a capacity crowd here
     595 000026e0     644b          .word   sp_anncer|75,3528    ;137       =at wrestlemania
     596 00002700     6449          .word   sp_anncer|73,3508    ;138       =who will be the victor ?
     597 00002720     6449          .word   sp_anncer|73,3512    ;139       =its anybody's guess
     598 00002740     6496          .word   sp_anncer|150,3516   ;13a       =anything can happen here in wwf
     599 00002760     6430          .word   sp_anncer|48,3532    ;13b       =theres the bell
     600 00002780     6449          .word   sp_anncer|73,3564       ;13c    =he's going to the top rope
     601 000027a0     644b          .word   sp_anncer|75,3300       ;13d    =he's going to the top
     602 000027c0     6434          .word   sp_anncer|52,3328       ;13e    =here it comes
     603 000027e0     6439          .word   sp_anncer|57,3368       ;13f    =boomshakalaka
     604 00002800     6453          .word   sp_anncer|83,3380       ;140    =and....        #1
     605 00002820     6439          .word   sp_anncer|57,3384       ;141    =and....        #2
     606 00002840     645a          .word   sp_anncer|90,3388       ;142    =and....        #3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   12

     607 00002860     643f          .word   sp_anncer|63,3556       ;143    =look at this
     608 00002880     6445          .word   sp_anncer|69,3568       ;144    =off the top rope
     609 000028a0     646c          .word   sp_anncer|108,3396      ;145    =ooh (for kaboom)
     610 000028c0     644a          .word   sp_anncer|74,3400       ;146    =kaboom
     611 000028e0     646d          .word   sp_anncer|109,3392      ;147    =long oooh
     612 00002900     643b          .word   sp_anncer|59,3316       ;148    =with authority
     613 00002920     6461          .word   sp_anncer|97,3320       ;149    =oh my goodness #0
     614 00002940     6422          .word   sp_anncer|34,3324       ;14a    =look out
     615 00002960     6438          .word   sp_anncer|56,3332       ;14b    =did you see that
     616 00002980     6427          .word   sp_anncer|39,3336       ;14c    =and..... #0
     617 000029a0     641f          .word   sp_anncer|31,3340       ;14d    =oh ! #0
     618 000029c0     6444          .word   sp_anncer|68,3352       ;14e    =oooh! #0
     619 000029e0     6435          .word   sp_anncer|53,3364       ;14f    =thats gotta hurt
     620 00002a00     6454          .word   sp_anncer|84,3372       ;150    =wow! #0
     621 00002a20     643d          .word   sp_anncer|61,3376       ;151    =wow! #1
     622 00002a40     6441          .word   sp_anncer|65,3404       ;152    =almost
     623 00002a60     6432          .word   sp_anncer|50,3536       ;153    =nicely done
     624 00002a80     645d          .word   sp_anncer|93,3540       ;154    =heaves him clear out of the ring
     625 00002aa0     6430          .word   sp_anncer|48,3544       ;155    =nice escape
     626 00002ac0     6440          .word   sp_anncer|64,3548       ;156    =nice execution
     627 00002ae0     6480          .word   sp_anncer|128,3312      ;157    =can he get up in time
     628 00002b00     6455          .word   sp_anncer|85,3308       ;158 =trying to get back to his feet    
     629 00002b20     641f          .word   sp_anncer|31,3580       ;159    =a miss
     630 00002b40     643e          .word   sp_anncer|62,3584       ;15a    =and misses
     631 00002b60     6438          .word   sp_anncer|56,3588       ;15b    =into the ropes
     632 00002b80     642b          .word   sp_anncer|43,3592       ;15c    =a quick reversal
     633 00002ba0     0000          .word   0,0     ;15d
     634 00002bc0     6433          .word   sp_anncer|51,3600       ;15e    =this could be it
     635 00002be0     6435          .word   sp_anncer|53,3604       ;15f    =no, wait a minute
     636 00002c00     643f          .word   sp_anncer|63,3608       ;160    =Unbeeleeevable! #1
     637 00002c20     645c          .word   sp_anncer|92,3612       ;161    =Unbeeleeevable! #2
     638 00002c40     6436          .word   sp_anncer|54,3616       ;162    =oh my goodness #1
     639 00002c60     0000          .word   0,0     ;163
     640 00002c80     645f          .word   sp_anncer|95,3624       ;164    =listen to the crowd
     641 00002ca0     6447          .word   sp_anncer|71,3632       ;165    =did you hear that
     642 00002cc0     646a          .word   sp_anncer|106,3636      ;166    =ive never seen anything like that
     643 00002ce0     6456          .word   sp_anncer|86,3268       ;167    =give credit to doink
     644 00002d00     646e          .word   sp_anncer|110,3272      ;168    =give credit to shawn
     645 00002d20     646c          .word   sp_anncer|108,3276      ;169    =give credit to razor
     646 00002d40     6477          .word   sp_anncer|119,3280      ;16a    =give credit to bam
     647 00002d60     6470          .word   sp_anncer|112,3284      ;16b    =give credit to undertaker
     648 00002d80     6468          .word   sp_anncer|104,3288      ;16c    =give credit to lex luger
     649 00002da0     6469          .word   sp_anncer|105,3292      ;16d    =give credit to bret hart
     650 00002dc0     6476          .word   sp_anncer|118,3296      ;16e    =give credit to yoko
     651 00002de0     645a          .word   sp_anncer|90,3680       ;16f    =not a good idea
     652 00002e00     6446          .word   sp_anncer|70,3684       ;170    =what was he thinking
     653 00002e20     645e          .word   sp_anncer|94,3688       ;171    =you cant get any closer than that
     654 00002e40     6478          .word   sp_anncer|120,3692      ;172    =now its doink coming back
     655 00002e60     6478          .word   sp_anncer|120,3696      ;173    =now its shawn michaels coming back
     656 00002e80     6477          .word   sp_anncer|119,3700      ;174    =now its razor ramone coming back
     657 00002ea0     647e          .word   sp_anncer|126,3704      ;175    =now its the undertaker coming back
     658 00002ec0     6493          .word   sp_anncer|147,3708      ;176    =now its bam bam bigelow        coming back
     659 00002ee0     6476          .word   sp_anncer|118,3712      ;177    =now its lex luger coming back
     660 00002f00     648e          .word   sp_anncer|142,3716      ;178    =now its bret hart coming back
     661 00002f20     6488          .word   sp_anncer|136,3720      ;179    =now its yokozuna coming back
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   13

     662 00002f40     6470          .word   sp_anncer|112,3724      ;17a =whats keeping these guys up
     663 00002f60     646d          .word   sp_anncer|109,3728      ;17b    =it looks like its all over
     664 00002f80     0000          .word   0,0     ;17c 
     665 00002fa0     6482          .word   sp_anncer|130,3736      ;17d    =its pandemonium in the ring
     666 00002fc0     6427          .word   sp_anncer|39,3740       ;17e =whats this
     667 00002fe0     6464          .word   sp_anncer|100,3744      ;17f    =what a turn of events this is
     668 00003000     645f          .word   sp_anncer|95,3748    ;180       =magnificent!
     669 00003020     6450          .word   sp_anncer|80,3752    ;181       =can you believe that!
     670 00003040     6458          .word   sp_anncer|88,3756    ;182       =rejected!!
     671 00003060     643e          .word   sp_anncer|62,3760    ;183       =what a beating!
     672 00003080     6428          .word   sp_anncer|40,3764    ;184       =to the face!
     673 000030a0     6436          .word   sp_anncer|54,3768    ;185       =to the midsection!
     674 000030c0     0000          .word   0,0    ;186     =and another!
     675 000030e0     6470          .word   sp_anncer|112,3776   ;187       =I wouldn't want to be on the receiving end of that!
     676 00003100     6436          .word   sp_anncer|54,3780    ;188       =what power!
     677 00003120     0000          .word   0,0    ;189   
     678 00003140     6443          .word   sp_anncer|67,3788    ;18a       =what skill!
     679 00003160     6443          .word   sp_anncer|67,3792       ;18b    =what a blow!
     680 00003180     6434          .word   sp_anncer|52,3796       ;18c    =awesome...
     681 000031a0     6459          .word   sp_anncer|89,3800       ;18d    =just awesome!
     682 000031c0     6452          .word   sp_anncer|82,3804       ;18e    =good night!
     683 000031e0     641c          .word   sp_anncer|28,3808       ;18f    =hello!
     684 00003200     6482          .word   sp_anncer|130,3992      ;190    =this is for all the marbles
     685 00003220     64ae          .word   sp_anncer|174,3996      ;191    =are you tough enough to step into the squared circle
     686 00003240     6480          .word   sp_anncer|128,4000      ;*192   =what an unbelievable comeback
     687 00003260     0000          .word   0,0     ;193    =
     688 00003280     0000          .word   0,0     ;194    =
     689 000032a0     0000          .word   0,0     ;195    =
     690 000032c0     0000          .word   0,0     ;196    =
     691 000032e0     0000          .word   0,0     ;197    =
     692 00003300     644a          .word   sp_anncer|74,3844       ;198    =can anybody stop him!?
     693 00003320     0000          .word   0,0     ;199  
     694 00003340     641c          .word   sp_anncer|28,3852       ;19a    =What the --
     695 00003360     6422          .word   sp_anncer|34,3856       ;19b    =Wait a minute --
     696 00003380     6431          .word   sp_anncer|49,3860       ;19c    =He can't do that
     697 000033a0     642a          .word   sp_anncer|42,3864       ;19d    =Is that legal?
     698 000033c0     6442          .word   sp_anncer|66,3868       ;19e    =Now that was cheap!
     699 000033e0     643e          .word   sp_anncer|62,3872       ;19f    =That's not very fair!
     700 00003400     6446          .word   sp_anncer|70,3876       ;1A0    =Somebody call security!
     701 00003420     6442          .word   sp_anncer|66,3880       ;1A1    =That wasn't very nice!
     702 00003440     6440          .word   sp_anncer|64,3884       ;1A2    =I can't watch this!
     703 00003460     6457          .word   sp_anncer|87,3888       ;1A3    =Most impressive!
     704 00003480     6482          .word   sp_anncer|130,3892      ;1A4    =incredible combination move!
     705 000034a0     6419          .word   sp_anncer|25,3896       ;1A5    =No!!
     706 000034c0     641c          .word   sp_anncer|28,3900       ;1A6    =Yess!!
     707 000034e0     644a          .word   sp_anncer|74,3904       ;1A7    =High-Risk Manuever --
     708 00003500     644b          .word   sp_anncer|75,3908       ;1A8    =What a slam!
     709 00003520     6400          .word   sp_anncer|0,0   ;1A9    =it's a donnybrook
     710 00003540     647c          .word   sp_anncer|124,3916      ;1Aa    =he's just gone berserk
     711 00003560     0000          .word   0,0     ;1Ab    =the joybuzzer
     712 00003580     6440          .word   sp_anncer|64,3924       ;1Ac    =shocking
     713 000035a0     646e          .word   sp_anncer|110,3928      ;1Ad    =can you believe what you've just seen?
     714 000035c0     642c          .word   sp_anncer|44,3932       ;1Ae    =he's got him
     715 000035e0     0000          .word   0,0     ;1Af    
     716 00003600     0000          .word   0,0     ;1B0    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   14

     717 00003620     0000          .word   0,0     ;1B1    
     718 00003640     0000          .word   0,0     ;1B2    
     719 00003660     0000          .word   0,0     ;1B3    
     720 00003680     0000          .word   0,0     ;1B4    
     721 000036a0     0000          .word   0,0     ;1B5    
     722 000036c0     0000          .word   0,0     ;1B6    
     723 000036e0     0000          .word   0,0     ;1B7    
     724 00003700     0000          .word   0,0     ;1B8    
     725 00003720     0000          .word   0,0     ;1B9    
     726 00003740     6488          .word   sp_anncer|136,3980      ;1Ba    =Somehow I don't think this grudge will end here
     727 00003760     6450          .word   sp_anncer|80,3984       ;1Bb    =Sign here please
     728 00003780     6443          .word   sp_anncer|67,3988       ;1Bc    =good night!
     729 000037a0     0000          .word   0,0     ;1Bd    
     730 000037c0     0000          .word   0,0     ;1Be    
     731 000037e0     0000          .word   0,0     ;1Bf    
     732 00003800     0000          .word   0,0     ;1C0    
     733 00003820     0000          .word   0,0     ;1C1
     734 00003840     0000          .word   0,0     ;1C2
     735 00003860     0000          .word   0,0     ;1C3
     736 00003880     0000          .word   0,0     ;1C4
     737 000038a0     0000          .word   0,0     ;1C5
     738 000038c0     0000          .word   0,0     ;1C6
     739 000038e0     0000          .word   0,0     ;1C7
     740 00003900     0000          .word   0,0     ;1C8
     741 00003920     0000          .word   0,0     ;1C9
     742 00003940     0000          .word   0,0     ;1Ca
     743 00003960     0000          .word   0,0     ;1Cb
     744 00003980     0000          .word   0,0     ;1Cc
     745 000039a0     0000          .word   0,0     ;1Cd
     746 000039c0     0000          .word   0,0     ;1Ce
     747 000039e0     0000          .word   0,0     ;1Cf
     748 00003a00           vince_end       ;end of vince speech section
     749                            ;RANDY SAVAGE
     750 00003a00     6439          .word   sp_anncer|57,6400       ;1D0 =Dawuz beautiful
     751 00003a20     645d          .word   sp_anncer|93,6364       ;1D1    =taste of his own medicine
     752 00003a40     642f          .word   sp_anncer|47,6368       ;1D2    =look at this
     753 00003a60     6439          .word   sp_anncer|57,6464       ;1D3    =right to the kisser
     754 00003a80     643e          .word   sp_anncer|62,6468       ;1D4    =Wudda moron
     755 00003aa0     6434          .word   sp_anncer|52,6448       ;1D5    =Thawuz close
     756 00003ac0     643a          .word   sp_anncer|58,6436       ;1D6    =did you see that 
     757 00003ae0     6464          .word   sp_anncer|100,6444      ;1D7    =ive never seen anything like that
     758 00003b00     6432          .word   sp_anncer|50,6388       ;1D8    =oh yeah
     759 00003b20     6436          .word   sp_anncer|54,6380       ;1D9    =this could be it
     760 00003b40     6439          .word   sp_anncer|57,6384       ;1Da    =no, wait a minute
     761 00003b60     6453          .word   sp_anncer|83,6164       ;1Db    =what a move by Shawn Michaels
     762 00003b80     6441          .word   sp_anncer|65,6156       ;1Dc    =what a move by Doink
     763 00003ba0     6456          .word   sp_anncer|86,6168       ;1Dd    =what a move by Razor Ramone
     764 00003bc0     644e          .word   sp_anncer|78,6172       ;1De    =what a move by the Undertaker
     765 00003be0     6458          .word   sp_anncer|88,6176       ;1Df    =what a move by Bam Bam
     766 00003c00     6448          .word   sp_anncer|72,6180       ;1E0    =what a move by Lex
     767 00003c20     644c          .word   sp_anncer|76,6192       ;1E1    =what a move by the Hitman
     768 00003c40     6452          .word   sp_anncer|82,6196       ;1E2    =what a move by Yokozuna
     769 00003c60     644b          .word   sp_anncer|75,6476       ;1E3    =That'll cost him
     770 00003c80     6450          .word   sp_anncer|80,6392       ;1E4    =Ha what an idiot
     771 00003ca0     6442          .word   sp_anncer|66,6480       ;1E5    =Oooh that hurts
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   15

     772 00003cc0     6434          .word   sp_anncer|52,6484       ;1E6    =Game over
     773 00003ce0     6433          .word   sp_anncer|51,6500       ;1E7    =What power
     774 00003d00     6436          .word   sp_anncer|54,6504       ;1E8    =What speed
     775 00003d20     643b          .word   sp_anncer|59,6396       ;1E9    =Dawuz great
     776 00003d40     642f          .word   sp_anncer|47,6508       ;1Ea    =awesome
     777 00003d60     6427          .word   sp_anncer|39,6404       ;1Eb    =Alright
     778 00003d80     643e          .word   sp_anncer|62,6408       ;1Ec    =Wuzat cheater up to?
     779 00003da0     644c          .word   sp_anncer|76,6536       ;1Ed    =What's going on?
     780 00003dc0     643b          .word   sp_anncer|59,6532       ;1Ee    =He can't do that
     781 00003de0     6433          .word   sp_anncer|51,6540       ;1Ef    =That was cheap
     782 00003e00     644b          .word   sp_anncer|75,6564       ;1F0    =Somebody call security
     783 00003e20     643d          .word   sp_anncer|61,6572       ;1F1    =That wasn't very nice
     784 00003e40     645d          .word   sp_anncer|93,6580       ;1F2    =I can't watch
     785 00003e60     642f          .word   sp_anncer|47,6588       ;1F3    =Incredible
     786 00003e80     6472          .word   sp_anncer|114,6584      ;1F4    =I could watch this all day long
     787 00003ea0     643c          .word   sp_anncer|60,6600       ;1F5    =I think he broke it
     788 00003ec0     6454          .word   sp_anncer|84,6604       ;1F6    =Nobody gets up from that
     789 00003ee0     6446          .word   sp_anncer|70,6696       ;1F7    =Lights out
     790 00003f00     6440          .word   sp_anncer|64,6556       ;1F8    =Aw c'mon #1
     791 00003f20     6473          .word   sp_anncer|115,6144   ;*1F9 =Here we are at Midway's Wrestlemania
     792 00003f40     646a          .word   sp_anncer|106,6148   ;*1Fa =And me Jerry the King Lawler
     793 00003f60           randy_end       ;end of randy speech section
     794                            ;HOWARD FINKEL
     795 00003f60     6475          .word   sp_anncer|117,2560      ;1Fb    =good evening ladies and gents
     796 00003f80     6482          .word   sp_anncer|130,2564      ;1Fc    =my name is howard finkel
     797 00003fa0     64e2          .word   sp_anncer|226,2568      ;1Fd    =and welcome to wrestlmainia by midway
     798 00003fc0     64c0          .word   sp_anncer|192,2576      ;1Fe    =we have a winner
     799 00003fe0     64bc          .word   sp_anncer|188,2572      ;1Ff    =this match is scheduled for 2 falls
     800                    
     801 00004000           howards_end     ;extremely dull british film - YOU SAID IT !
     802 00004000     0e14          .word   sp_reacv|20,4500        ; 200 =DOINK takes a punch to the face
     803 00004020     0e1a          .word   sp_reacv|26,4504        ; 201 =DOINK takes a head-butt
     804 00004040     0e1b          .word   sp_reacv|27,4508        ; 202 =DOINK takes a special weapon to the face/head
     805 00004060     0e15          .word   sp_reacv|21,4512        ; 203 =DOINK takes a hit to the gut
     806 00004080     0e15          .word   sp_reacv|21,4516        ; 204 =DOINK takes a kick/knee to the gut
     807 000040a0     0e21          .word   sp_reacv|33,4520        ; 205 =DOINK takes a gut hit (alternate)
     808 000040c0     0c15          .word   sp_attkv|21,4524        ; 206 =DOINK short effort grunt before kick/punch #0
     809 000040e0     0c2c          .word   sp_attkv|44,4536        ; 207 =DOINK medium effort grunt before lifting/reaching for som
     810 00004100     0c3d          .word   sp_attkv|61,4540        ; 208 =DOINK long effort grunt before throwing something
     811 00004120     0c46          .word   sp_attkv|70,4544        ; 209 =DOINK long effort grunt before jumping from top rope mayb
     812 00004140     0e27          .word   sp_reacv|39,4548        ; 20a =DOINK short scream of pain #0
     813 00004160     0e32          .word   sp_reacv|50,4552        ; 20b =DOINK short scream of pain #1
     814 00004180     0e2e          .word   sp_reacv|46,4556        ; 20c =DOINK medium scream of pain #0
     815 000041a0     183f          .word   sp_wspch|63,4560        ; 20d =DOINK medium scream of pain #1
     816 000041c0     0e68          .word   sp_reacv|104,4564       ; 20e =DOINK long scream of pain #0
     817 000041e0     0c47          .word   sp_attkv|71,4568        ; 20f =DOINK JOYBUZZER: put'er there pal
     818 00004200     0c36          .word   sp_attkv|54,4572        ; 210 =DOINK JOYBUZZER: pleased to meet you
     819 00004220     0c42          .word   sp_attkv|66,4576        ; 211 =DOINK JOYBUZZER BLOCKED allllrighty then!
     820 00004240     0c46          .word   sp_attkv|70,4580        ; 212 =DOINK REVERSAL I don't think so!
     821 00004260     0c30          .word   sp_attkv|48,4584        ; 213 =DOINK REVERSAL O no you don't
     822 00004280     0c4d          .word   sp_attkv|77,4588        ; 214 =DOINK 1st Fall victory (?)
     823 000042a0     1811          .word   sp_wspch|17,4592        ; 215 =DOINK Jarvis laugh for repeat punch #0
     824 000042c0     1812          .word   sp_wspch|18,4596        ; 216 =DOINK Jarvis laugh for repeat punch #1
     825 000042e0     1815          .word   sp_wspch|21,4600        ; 217 =DOINK Jarvis laugh for repeat punch #2
     826 00004300     1828          .word   sp_wspch|40,4604        ; 218 =DOINK Jarvis laugh for repeat punch #3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   16

     827 00004320     18c8          .word   sp_wspch|200,4608       ; 219 =DOINK nonono loop - endless 
     828 00004340     0ca0          .word   sp_attkv|160,4612       ; 21a =DOINK choking loop (endless)
     829                    
     830 00004360     0c15          .WORD   sp_attkv|21,4616        ;21b =DOINK short effort grunt #3
     831 00004380     0c12          .WORD   sp_attkv|18,4620        ;21c =DOINK short effort grunt #4
     832 000043a0     0c30          .WORD   sp_attkv|48,4624        ;21d =DOINK double effort grunt #0
     833 000043c0     0c2f          .WORD   sp_attkv|47,4628        ;21e =DOINK double effort grunt #1
     834 000043e0     0c34          .WORD   sp_attkv|52,4632        ;21f =DOINK double effort grunt #2
     835 00004400     0c37          .WORD   sp_attkv|55,4636        ;220 =DOINK reaches out/down & grabs you #0
     836 00004420     0c28          .WORD   sp_attkv|40,4640        ;221 =DOINK reaches out/down & grabs you #1
     837 00004440     0c4c          .WORD   sp_attkv|76,4644        ;222 =DOINK lifts you up #0
     838 00004460     0c4a          .WORD   sp_attkv|74,4648        ;223 =DOINK lifts you up #1
     839 00004480     0c1a          .WORD   sp_attkv|26,4652        ;224 =DOINK shakes you like a rug #0
     840 000044a0     0c19          .WORD   sp_attkv|25,4656        ;225 =DOINK shakes you like a rug #1
     841 000044c0     0c1b          .WORD   sp_attkv|27,4660        ;226 =DOINK shakes you like a rug #2
     842 000044e0     0c11          .WORD   sp_attkv|17,4664        ;227 =DOINK pushes you #0
     843 00004500     0c0d          .WORD   sp_attkv|13,4668        ;228 =DOINK pushes you #1
     844 00004520     0c43          .WORD   sp_attkv|67,4672        ;229 =DOINK jumps from the turnbuckle #0
     845 00004540     0c44          .WORD   sp_attkv|68,4676        ;22a =DOINK jumps from the turnbuckle #1
     846 00004560     0c1d          .WORD   sp_attkv|29,4680        ;22b =DOINK takes a head butt #0
     847 00004580     0c1d          .WORD   sp_attkv|29,4684        ;22c =DOINK takes a hit to the gut #3
     848 000045a0     0c21          .WORD   sp_attkv|33,4688        ;22d =DOINK takes a hit to the gut #4
     849 000045c0     0c37          .WORD   sp_attkv|55,4692        ;22e =DOINK gets lifted up #0
     850 000045e0     0c3b          .WORD   sp_attkv|59,4696        ;22f =DOINK gets lifted up #1
     851 00004600     0c2c          .WORD   sp_attkv|44,4700        ;230 =DOINK gets pushed #0
     852 00004620     0c2a          .WORD   sp_attkv|42,4704        ;231 =DOINK gets pushed #1
     853 00004640     0c24          .WORD   sp_attkv|36,4708        ;232 =DOINK gets tossed #0
     854 00004660     0c34          .WORD   sp_attkv|52,4712        ;233 =DOINK gets tossed #1
     855 00004680     0c13          .WORD   sp_attkv|19,4528        ;234 =DOINK short effort grunt before kick/punch #1
     856 000046a0     0c10          .WORD   sp_attkv|16,4532        ;235 =DOINK short effort grunt before kick/punch #2
     857                    
     858 000046c0     0c3e          .WORD   sp_attkv|62,4800        ;236 =SAL as BRET REVERSAL o no you 
     859 000046e0     0c3e          .WORD   sp_attkv|62,4804        ;237 =SAL as BRET REVERSAL right bac
     860 00004700     0c2a          .WORD   sp_attkv|42,4808        ;238 =SAL as BRET excellent!
     861 00004720     0c14          .WORD   sp_attkv|20,4812        ;239 =SAL as BRET GRABS AN OPPONENT 
     862 00004740     0c27          .WORD   sp_attkv|39,4816        ;23a =SAL as BRET GRABS AN OPPONENT 
     863 00004760     0c1f          .WORD   sp_attkv|31,4820        ;23b =SAL as BRET TAUNTS AN OPPONENT
     864 00004780     0cc8          .WORD   sp_attkv|200,4824       ;23c =SAL as BRET nonono loop - endl
     865 000047a0     0c17          .WORD   sp_attkv|23,4828        ;23d =SAL short effort grunt #0
     866 000047c0     0c23          .WORD   sp_attkv|35,4832        ;23e =SAL short effort grunt #1
     867 000047e0     0c1f          .WORD   sp_attkv|31,4836        ;23f =SAL short effort grunt #2
     868 00004800     0c1c          .WORD   sp_attkv|28,4840        ;240 =SAL short effort grunt #3
     869 00004820     0c18          .WORD   sp_attkv|24,4844        ;241 =SAL short effort grunt #4
     870 00004840     0c16          .WORD   sp_attkv|22,4848        ;242 =SAL short effort grunt #5
     871 00004860     0c25          .WORD   sp_attkv|37,4852        ;243 =SAL medium effort grunt #0
     872 00004880     0c24          .WORD   sp_attkv|36,4856        ;244 =SAL medium effort grunt #1
     873 000048a0     0c3e          .WORD   sp_attkv|62,4860        ;245 =SAL long effort grunt #0
     874 000048c0     0c40          .WORD   sp_attkv|64,4864        ;246 =SAL long effort grunt #1
     875 000048e0     0c32          .WORD   sp_attkv|50,4868        ;247 =SAL double effort grunt #0
     876 00004900     0c2f          .WORD   sp_attkv|47,4872        ;248 =SAL double effort grunt #1
     877 00004920     0c2d          .WORD   sp_attkv|45,4876        ;249 =SAL double effort grunt #2
     878 00004940     0c15          .WORD   sp_attkv|21,4880        ;24a =SAL throws a head butt #0
     879 00004960     0c21          .WORD   sp_attkv|33,4884        ;24b =SAL reaches & grabs #0
     880 00004980     0c1e          .WORD   sp_attkv|30,4888        ;24c =SAL reaches & grabs #1
     881 000049a0     0c19          .WORD   sp_attkv|25,4892        ;24d =SAL throws a kick #0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   17

     882 000049c0     0c2c          .WORD   sp_attkv|44,4896        ;24e =SAL leaps from the turnbuckle 
     883 000049e0     0c1c          .WORD   sp_attkv|28,4900        ;24f =SAL pushes #0
     884 00004a00     0e1b          .WORD   sp_reacv|27,4904        ;250 =SAL takes a face hit #0
     885 00004a20     0e14          .WORD   sp_reacv|20,4908        ;251 =SAL takes a face hit #1
     886 00004a40     0e1e          .WORD   sp_reacv|30,4912        ;252 =SAL takes a face hit #2
     887 00004a60     0e1c          .WORD   sp_reacv|28,4916        ;253 =SAL takes a face hit #3
     888 00004a80     0e1c          .WORD   sp_reacv|28,4920        ;254 =SAL takes a gut hit #0
     889 00004aa0     0e24          .WORD   sp_reacv|36,4924        ;255 =SAL takes a gut hit #1
     890 00004ac0     0e22          .WORD   sp_reacv|34,4928        ;256 =SAL takes a gut hit #2
     891 00004ae0     0e15          .WORD   sp_reacv|21,4932        ;257 =SAL takes a gut hit #3
     892 00004b00     0c1d          .WORD   sp_attkv|29,4936        ;258 =SAL gets grabbed #0
     893 00004b20     0c29          .WORD   sp_attkv|41,4940        ;259 =SAL gets grabbed #1
     894 00004b40     0c2e          .WORD   sp_attkv|46,4944        ;25a =SAL gets lifted #0
     895 00004b60     0c2b          .WORD   sp_attkv|43,4948        ;25b =SAL gets lifted #1
     896 00004b80     0c1f          .WORD   sp_attkv|31,4952        ;25c =SAL gets head-butted
     897 00004ba0     0c1e          .WORD   sp_attkv|30,4956        ;25d =SAL gets pushed #0
     898 00004bc0     0c22          .WORD   sp_attkv|34,4960        ;25e =SAL gets pushed #1
     899 00004be0     182e          .WORD   sp_wspch|46,4964        ;25f =SAL gets tossed #0
     900 00004c00     0c6f          .WORD   sp_attkv|111,4968       ;260 =SAL gets tossed #1
     901 00004c20     0c32          .WORD   sp_attkv|50,4972        ;261 =SAL gets turnbuckle-dived #0
     902 00004c40     0c2c          .WORD   sp_attkv|44,4976        ;262 =SAL short pain yell #0
     903 00004c60     0c2a          .WORD   sp_attkv|42,4980        ;263 =SAL short pain yell #1
     904 00004c80     0c46          .WORD   sp_attkv|70,4984        ;264 =SAL medium pain yell #0
     905 00004ca0     0c37          .WORD   sp_attkv|55,4988        ;265 =SAL medium pain yell #1
     906 00004cc0     0c38          .WORD   sp_attkv|56,4992        ;266 =SAL medium pain yell #2
     907                    
     908 00004ce0     0e1c          .WORD   sp_reacv|28,5000        ;267 =BOON face hit #0
     909 00004d00     0e1c          .WORD   sp_reacv|28,5004        ;268 =BOON face hit #1
     910 00004d20     0e1b          .WORD   sp_reacv|27,5008        ;269 =BOON head butted #0
     911 00004d40     0e18          .WORD   sp_reacv|24,5012        ;26A =BOON gut hit #0
     912 00004d60     0e15          .WORD   sp_reacv|21,5016        ;26b =BOON gut hit #1
     913 00004d80     0e1b          .WORD   sp_reacv|27,5020        ;26c =BOON gut hit #2
     914 00004da0     0c2e          .WORD   sp_attkv|46,5024        ;26d =BOON grabbed
     915 00004dc0     0c37          .WORD   sp_attkv|55,5028        ;26e =BOON lifted
     916 00004de0     0e2d          .WORD   sp_reacv|45,5032        ;26f =BOON short pain scream #0
     917 00004e00     1848          .WORD   sp_wspch|72,5036        ;270 =BOON tossed #0
     918 00004e20     0e2c          .WORD   sp_reacv|44,5040        ;271 =BOON medium pain scream
     919 00004e40     0c0e          .WORD   sp_attkv|14,5044        ;272 =BOON short effort grunt #0
     920 00004e60     0c11          .WORD   sp_attkv|17,5048        ;273 =BOON short effort grunt #1
     921 00004e80     0c0d          .WORD   sp_attkv|13,5052        ;274 =BOON head butts an opponent
     922 00004ea0     0c23          .WORD   sp_attkv|35,5056        ;275 =BOON double effort grunt #0
     923 00004ec0     0c22          .WORD   sp_attkv|34,5060        ;276 =BOON double effort grunt #1
     924 00004ee0     0c21          .WORD   sp_attkv|33,5064        ;277 =BOON double effort grunt #2
     925 00004f00     0c38          .WORD   sp_attkv|56,5068        ;278 =BOON dives from the turnbuckle
     926 00004f20     0c39          .WORD   sp_attkv|57,5072        ;279 =BOON lifts someone
     927 00004f40     241d          .WORD   sp_system1|29,5076      ;27A =BOON as RAZOR special repeat body slam #0
     928 00004f60     241b          .WORD   sp_system1|27,5080      ;27B =BOON as RAZOR special repeat body slam #1
     929 00004f80     240e          .WORD   sp_system1|14,5084      ;27C =BOON as RAZOR special repeat body slam #2
     930 00004fa0     2427          .WORD   sp_system1|39,5088      ;27D =BOON as RAZOR special repeat body slam #3
     931 00004fc0     0c40          .WORD   sp_attkv|64,5092        ;27E =BOON as RAZOR special being pushed
     932 00004fe0     0c56          .WORD   sp_attkv|86,5096        ;27F =BOON as RAZOR special being grabbed
     933 00005000     0c78          .WORD   sp_attkv|120,5100       ;280 =BOON as RAZOR special being grabbed #2
     934 00005020     0cc8          .WORD   sp_attkv|200,5104       ;281 =BOON as RAZOR nonono loop
     935                                                               
     936 00005040     0c5b          .WORD   sp_attkv|91,564      ;282 =VP as DOINK pushed
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   18

     937 00005060     0c70          .WORD   sp_attkv|112,568        ;283 =BOOTY as SHAWN pushed
     938 00005080     0c28          .WORD   sp_attkv|40,572      ;284 =BOOTY as SHAWN blocks
     939 000050a0     0c3f          .WORD   sp_attkv|63,576      ;285 =SAL as BRET pushed
     940 000050c0     0c61          .WORD   sp_attkv|97,580      ;286 =GRANNER as LEX pushed
     941 000050e0     0c37          .WORD   sp_attkv|55,584      ;287 =GRANNER as LEX blocks
     942 00005100     0000          .word   0,0     ;288 
     943 00005120     0000          .word   0,0     ;289 
     944 00005140     0000          .word   0,0     ;28a 
     945 00005160     0000          .word   0,0     ;28b 
     946 00005180     0000          .word   0,0     ;28c
     947 000051a0     0000          .word   0,0     ;28d
     948 000051c0     0000          .word   0,0     ;28e
     949 000051e0     0000          .word   0,0     ;28f
     950                    
     951 00005200     0147          .word   sp_robo|71,1600         ;290 = ROBOTRON shot
     952 00005220     01d4          .word   sp_robo|212,1604        ;291 = ROBOTRON human dies
     953 00005240     013a          .word   sp_robo|58,1608         ;292 = ROBOTRON spawn enforcer
     954 00005260     0106          .word   sp_robo|6,1612          ;293 = ROBOTRON robot footstep
     955 00005280     0160          .word   sp_robo|96,1616         ;294 = ROBOTRON effect (?)
     956 000052a0     01a4          .word   sp_robo|164,1620        ;295 = ROBOTRON player dies
     957 000052c0     0127          .word   sp_robo|39,1624         ;296 = ROBOTRON rescue
     958 000052e0     0117          .word   sp_robo|23,1628         ;297 = ROBOTRON grunt dies
     959 00005300     01b2          .word   sp_robo|178,1632        ;298 = ROBOTRON wave start/end
     960 00005320     0111          .word   sp_robo|17,1636         ;299 = ROBOTRON hit hulk
     961                    
     962 00005340     0000          .word   0,0     ;29a
     963 00005360     0000          .word   0,0     ;29b
     964 00005380     0000          .word   0,0     ;29c
     965 000053a0     0000          .word   0,0     ;29d
     966 000053c0     0000          .word   0,0     ;29e
     967 000053e0     0000          .word   0,0     ;29f
     968 00005400     0000          .word   0,0     ;2a0
     969 00005420     0000          .word   0,0     ;2a1
     970 00005440     0000          .word   0,0     ;2a2
     971 00005460     0000          .word   0,0     ;2a3
     972 00005480     0000          .word   0,0     ;2a4
     973 000054a0     0000          .word   0,0     ;2a5
     974 000054c0     0000          .word   0,0     ;2a6
     975 000054e0     0000          .word   0,0     ;2a7
     976 00005500     0000          .word   0,0     ;2a8
     977 00005520     0000          .word   0,0     ;2a9
     978 00005540     0000          .word   0,0     ;2aa
     979 00005560     0000          .word   0,0     ;2ab
     980 00005580     0000          .word   0,0     ;2ac
     981 000055a0     0000          .word   0,0     ;2ad
     982 000055c0     0000          .word   0,0     ;2ae
     983 000055e0     0000          .word   0,0     ;2af
     984 00005600           more_jerry
     985 00005600     0000          .word   0,0     ;2b0  
     986 00005620     6400          .word   sp_anncer|0,0   ;2b1    = 
     987 00005640     6400          .word   sp_anncer|0,0   ;2b2    = 
     988 00005660     6400          .word   sp_anncer|0,0   ;2b3    = 
     989 00005680     6456          .word   sp_anncer|86,6200       ;2b4    = It duddin look good fer Doink
     990 000056a0     6400          .word   sp_anncer|0,0   ;2b5    = 
     991 000056c0     6465          .word   sp_anncer|101,6208      ;2b6    = It duddin look good fer Shawn Michaels
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   19

     992 000056e0     6469          .word   sp_anncer|105,6212      ;2b7    = It duddin look good fer Razor Ramone
     993 00005700     646b          .word   sp_anncer|107,6216      ;2b8    = It duddin look good fer the Undertaker
     994 00005720     6477          .word   sp_anncer|119,6220      ;2b9    = It duddin look good fer BamBam Bigelow
     995 00005740     6466          .word   sp_anncer|102,6224      ;2ba    = It duddin look good fer Hox Lugie
     996 00005760     6462          .word   sp_anncer|98,6236       ;2bb    = It duddin look good fer the hit man
     997 00005780     6400          .word   sp_anncer|0,0   ;2bc    = 
     998 000057a0     6400          .word   sp_anncer|0,0   ;2bd    = 
     999 000057c0     646a          .word   sp_anncer|106,6240      ;2be    = It duddin look good fer Yucko Zima
    1000 000057e0     6400          .word   sp_anncer|0,0   ;2bf    = 
    1001 00005800     6400          .word   sp_anncer|0,0   ;2c0    = 
    1002 00005820     6400          .word   sp_anncer|0,0   ;2c1    = 
    1003 00005840     6400          .word   sp_anncer|0,0   ;2c2    = 
    1004 00005860     6400          .word   sp_anncer|0,0   ;2c3    = 
    1005 00005880     6400          .word   sp_anncer|0,0   ;2c4    = 
    1006 000058a0     6400          .word   sp_anncer|0,0   ;2c5    = 
    1007 000058c0     6400          .word   sp_anncer|0,0   ;2c6    = 
    1008 000058e0     642c          .word   sp_anncer|44,6276       ;2c7    = (non-partisan) Giddup Doink
    1009 00005900     642e          .word   sp_anncer|46,6280       ;2c8    = (non-partisan) Giddup Shawn
    1010 00005920     642f          .word   sp_anncer|47,6284       ;2c9    = (non-partisan) Giddup Ramone
    1011 00005940     643a          .word   sp_anncer|58,6288       ;2ca    = (non-partisan) Giddup Undertaker
    1012 00005960     6435          .word   sp_anncer|53,6292       ;2cb    = (non-partisan) Giddup BamBam
    1013 00005980     642b          .word   sp_anncer|43,6296       ;2cc    = (non-partisan) Giddup Luger
    1014 000059a0     6433          .word   sp_anncer|51,6300       ;2cd    = (non-partisan) Giddup Hitman
    1015 000059c0     643d          .word   sp_anncer|61,6304       ;2ce    = (non-partisan) Giddup Yokozuna
    1016 000059e0     6468          .word   sp_anncer|104,6308      ;2cf    = Doink got exactly what he deserved
    1017 00005a00     6400          .word   sp_anncer|0,0   ;2d0    = 
    1018 00005a20     6482          .word   sp_anncer|130,6316      ;2d1    = Shawn Michaels got exactly what he deserved
    1019 00005a40     6481          .word   sp_anncer|129,6320      ;2d2    = Razor Ramone got exactly what he deserved
    1020 00005a60     6486          .word   sp_anncer|134,6324      ;2d3    = the Undertaker got exactly what he deserved
    1021 00005a80     6483          .word   sp_anncer|131,6328      ;2d4    = BamBam Bigelow got exactly what he deserved
    1022 00005aa0     6480          .word   sp_anncer|128,6332      ;2d5    = Hox Lugie got exactly what he deserved
    1023 00005ac0     6475          .word   sp_anncer|117,6336      ;2d6    = Wet Fart got exactly what he deserved
    1024 00005ae0     6400          .word   sp_anncer|0,0   ;2d7    = 
    1025 00005b00     6481          .word   sp_anncer|129,6344      ;2d8    = Yucko Zima got exactly what he deserved
    1026 00005b20     648c          .word   sp_anncer|140,6348      ;2d9    = Anything can happen here at the WWF
    1027 00005b40     646f          .word   sp_anncer|111,6352      ;2da    = Anything can happen here at Wrestlemania
    1028 00005b60     6467          .word   sp_anncer|103,6356      ;2db    = Quiet McMahon I'm trying to watch this
    1029 00005b80     6446          .word   sp_anncer|70,6360       ;2dc    = heaves him over the ropes
    1030 00005ba0     6449          .word   sp_anncer|73,6376       ;2dd    = He's goin' fer the top rope
    1031 00005bc0     6436          .word   sp_anncer|54,6412       ;2de    = who does he think he is?
    1032 00005be0     6400          .word   sp_anncer|0,0   ;2df    = 
    1033 00005c00     0000          .word   0,0     ;2e0 
    1034 00005c20     6441          .word   sp_anncer|65,6424       ;2e1    = Listen to the crowd
    1035 00005c40     645a          .word   sp_anncer|90,6428       ;2e2    = They're cheering for me McMahon
    1036 00005c60     6444          .word   sp_anncer|68,6432       ;2e3    = What morons
    1037 00005c80     6434          .word   sp_anncer|52,6440       ;2e4    = Jew hear that?
    1038 00005ca0     6436          .word   sp_anncer|54,6452       ;2e5    = Wuwuzzee thinkin'?
    1039 00005cc0     6436          .word   sp_anncer|54,6456       ;2e6    = Wussy up to?
    1040 00005ce0     6447          .word   sp_anncer|71,6460       ;2e7    = Nadda good idea
    1041 00005d00     6430          .word   sp_anncer|48,6472       ;2e8    = Wudda jerk
    1042 00005d20     6435          .word   sp_anncer|53,6488       ;2e9    = Wudda comeback
    1043 00005d40     646a          .word   sp_anncer|106,6492      ;2ea    = I wooden wanna beonna recieving end uh that
    1044 00005d60     6463          .word   sp_anncer|99,6496       ;2eb    = I think I saw some teeth pop out
    1045 00005d80     644a          .word   sp_anncer|74,6512       ;2ec    = Yes the chair
    1046 00005da0     6451          .word   sp_anncer|81,6516       ;2ed    = The chair the chair
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   20

    1047 00005dc0     6437          .word   sp_anncer|55,6520       ;2ee    = Hiddim hiddim
    1048 00005de0     6436          .word   sp_anncer|54,6528       ;2ef    = Mr Fuji ? 
    1049 00005e00     0000          .word   0,0     ;2f0    = 
    1050 00005e20     6433          .word   sp_anncer|51,6540       ;2f1    = Aawuz cheap
    1051 00005e40     6455          .word   sp_anncer|85,6544       ;2f2    = Hey I didn't see anything
    1052 00005e60     6456          .word   sp_anncer|86,6548       ;2f3    = What kyna cheap move wuzzat?
    1053 00005e80     6437          .word   sp_anncer|55,6552       ;2f4    = Wudda ripoff
    1054 00005ea0     6450          .word   sp_anncer|80,6560       ;2f5    = Aw wudda scam
    1055 00005ec0     6434          .word   sp_anncer|52,6568       ;2f6    = Don't bother
    1056 00005ee0     643e          .word   sp_anncer|62,6576       ;2f7    = Sure it was
    1057 00005f00     6462          .word   sp_anncer|98,6592       ;2f8    = If I didn't see it I wouldn't believe it
    1058 00005f20     6443          .word   sp_anncer|67,6608       ;2f9    = No one kin touch im
    1059 00005f40     6428          .word   sp_anncer|40,6612       ;2fa    = He did it
    1060 00005f60     6451          .word   sp_anncer|81,6616       ;2fb    = I can't believe he pulled that off
    1061 00005f80     6449          .word   sp_anncer|73,6620       ;2fc    = Adwuddneevena challenge
    1062 00005fa0     644f          .word   sp_anncer|79,6624       ;2fd    = And stay down
    1063 00005fc0     6478          .word   sp_anncer|120,6628      ;2fe    = He got exactly what he deserved
    1064 00005fe0     64df          .word   sp_anncer|223,6632      ;2ff    = Congratulations to the new WWF champion
    1065 00006000     64a3          .word   sp_anncer|163,6636      ;300    = Sign yer name to the Midway Hall of Fame
    1066 00006020     6458          .word   sp_anncer|88,6640       ;301    = Back to the sandbox
    1067 00006040     6442          .word   sp_anncer|66,6644       ;302    = Aw c'mon #2
    1068 00006060           wrestle_end
    1069                    
    1070 00006060           triple_end      ;end of triple sound tables
    1071                    
    1072                    
    1073                    ******************************************************************************
    1074                    *
    1075                    * sound table format:  each row contains the triple_sound_table indices of
    1076                    * the four sound calls associated with a given move.  the first two are the
    1077                    * noises a wrestler makes when he throws the move, and the second two are
    1078                    * the noises he makes when he's hit with the move.  if the value is DEFLT,
    1079                    * the value will be read from DEFAULT_SOUND_TABLE instead of the wrestler's
    1080                    * custom table.
    1081                    *
    1082                    
    1083              8000  DEFLT   .equ    8000h
    1084                    
    1085 00006060           DEFAULT_SOUND_TABLE
    1086                            ;       whsh  grunt smak  ouch
    1087 00006060     0012          .word   0012h,0032h,1001h,002Dh ;punch
    1088 000060a0     0017          .word   0017h,0000h,001Bh,002Eh ;headbutt
    1089 000060e0     0011          .word   0011h,0032h,0018h,007Ch ;kick
    1090 00006120     0011          .word   0011h,0079h,001Bh,0071h ;flykick
    1091                    
    1092 00006160     0000          .word   0000h,0028h,0000h,001Ah ;grabthrow
    1093 000061a0     0016          .word   0016h,002Ch,0001h,0072h ;uppercut
    1094 000061e0     0011          .word   0011h,0032h,0005h,0073h ;elbow drop
    1095 00006220     0000          .word   0000h,0028h,0000h,0000h ;grabhold
    1096                    
    1097 00006260     0000          .word   0000h,0028h,0000h,001Ah ;grabfling
    1098                    
    1099 000062a0     0000          .word   0000h,0079h,0007h,0026h ;push
    1100 000062e0     0000          .word   0000h,0028h,0000h,001ah ;hiptoss
    1101 00006320     0017          .word   0017h,007Ah,0074h,0000h ;big boot
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   21

    1102 00006360     0012          .word   0012h,0032h,001Bh,002Dh ;super punch
    1103                    
    1104 000063a0     0000          .word   0000h,0079h             ;turndive
    1105 000063c0     1002          .word               1002h,1003h ;rug slam
    1106                    
    1107 000063e0     00a9          .word               00A9h,0072h ;rzr slash
    1108 00006400     0059          .word   0059h                   ;yellthrow
    1109                    
    1110 00006410           MASTER_SOUND_TABLE
    1111                    ;Bret Hart      00
    1112                            ;       whsh  grunt smak  ouch
    1113 00006410     8000          .word   DEFLT,1022H,DEFLT,1030H ;punch
    1114 00006450     8000          .word   DEFLT,1023H,DEFLT,1031H ;headbutt
    1115 00006490     8000          .word   DEFLT,1024H,DEFLT,1032H ;kick
    1116 000064d0     8000          .word   DEFLT,1025H,DEFLT,1033H ;flykick
    1117                    
    1118 00006510     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabthrow
    1119 00006550     8000          .word   DEFLT,1026H,DEFLT,1034H ;uppercut
    1120 00006590     8000          .word   DEFLT,1029H,DEFLT,1037H ;elbow drop
    1121 000065d0     8000          .word   DEFLT,1028H,DEFLT,1036H ;grabhold
    1122                    
    1123 00006610     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabfling
    1124 00006650     8000          .word   DEFLT,102BH,DEFLT,1039H ;push
    1125 00006690     8000          .word   DEFLT,102CH,DEFLT,103AH ;hiptoss
    1126 000066d0     8000          .word   DEFLT,102AH,DEFLT,1038H ;big boot
    1127                    
    1128 00006710     8000          .word   DEFLT,102EH,DEFLT,103CH ;super punch
    1129                    
    1130 00006750     8000          .word   DEFLT,DEFLT             ;turndive
    1131 00006770     8000          .word               DEFLT,103DH ;rug slam
    1132 00006790     8000          .word               DEFLT,DEFLT ;rzr slash
    1133 000067b0     8000          .word   DEFLT                   ;yellthrow
    1134                    
    1135                    ;Razor Ramon    01
    1136                            ;       whsh  grunt smak  ouch
    1137 000067c0     8000          .word   DEFLT,0031h,DEFLT,103fh ;punch
    1138 00006800     8000          .word   DEFLT,0274H,DEFLT,0269H ;headbutt
    1139 00006840     8000          .word   DEFLT,1040h,DEFLT,103fh ;kick
    1140 00006880     8000          .word   DEFLT,1041h,DEFLT,103eh ;flykick
    1141                    
    1142 000068c0     8000          .word   DEFLT,1041h,DEFLT,026EH ;grabthrow
    1143 00006900     8000          .word   DEFLT,1040h,DEFLT,103eh ;uppercut
    1144 00006940     8000          .word   DEFLT,0278H,DEFLT,103eh ;elbow drop
    1145 00006980     8000          .word   DEFLT,0279H,DEFLT,026eH ;grabhold
    1146                    
    1147 000069c0     8000          .word   DEFLT,1041h,DEFLT,026dH ;grabfling
    1148 00006a00     8000          .word   DEFLT,1040h,DEFLT,026fh ;push
    1149 00006a40     8000          .word   DEFLT,1041h,DEFLT,0270h ;hiptoss
    1150 00006a80     8000          .word   DEFLT,0271H,DEFLT,0077h ;big boot
    1151                    
    1152 00006ac0     8000          .word   DEFLT,1041h,DEFLT,103eh ;super punch
    1153                    
    1154 00006b00     8000          .word   DEFLT,1041h             ;turndive
    1155 00006b20     8000          .word               DEFLT,DEFLT ;rug slam
    1156 00006b40     8000          .word               DEFLT,026fH ;rzr slash
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   22

    1157 00006b60     8000          .word   DEFLT                   ;yellthrow
    1158                    
    1159                    ;Undertaker     02
    1160 00006b70     8000          .word   DEFLT,1022H,DEFLT,1030H ;punch
    1161 00006bb0     8000          .word   DEFLT,1023H,DEFLT,1031H ;headbutt
    1162 00006bf0     8000          .word   DEFLT,1024H,DEFLT,1032H ;kick
    1163 00006c30     8000          .word   DEFLT,1025H,DEFLT,1033H ;flykick
    1164                    
    1165 00006c70     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabthrow
    1166 00006cb0     8000          .word   DEFLT,1026H,DEFLT,1034H ;uppercut
    1167 00006cf0     8000          .word   DEFLT,1029H,DEFLT,1037H ;elbow drop
    1168 00006d30     8000          .word   DEFLT,1028H,DEFLT,1036H ;grabhold
    1169                    
    1170 00006d70     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabfling
    1171 00006db0     8000          .word   DEFLT,102BH,DEFLT,1039H ;push
    1172 00006df0     8000          .word   DEFLT,102CH,DEFLT,103AH ;hiptoss
    1173 00006e30     8000          .word   DEFLT,102AH,DEFLT,1038H ;big boot
    1174                    
    1175 00006e70     8000          .word   DEFLT,102EH,DEFLT,103CH ;super punch
    1176                    
    1177 00006eb0     8000          .word   DEFLT,DEFLT             ;turndive
    1178 00006ed0     8000          .word               DEFLT,103DH ;rug slam
    1179 00006ef0     8000          .word               DEFLT,DEFLT ;rzr slash
    1180 00006f10     8000          .word   DEFLT                   ;yellthrow
    1181                    
    1182                    ;Yokozuna       03
    1183 00006f20     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;punch
    1184 00006f60     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;headbutt
    1185 00006fa0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;kick
    1186 00006fe0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;flykick
    1187                    
    1188 00007020     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabthrow
    1189 00007060     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;uppercut
    1190 000070a0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;elbow drop
    1191 000070e0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabhold
    1192                    
    1193 00007120     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabfling
    1194 00007160     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;push
    1195 000071a0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;hiptoss
    1196 000071e0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;big boot
    1197                    
    1198 00007220     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;super punch
    1199                    
    1200 00007260     8000          .word   DEFLT,DEFLT             ;turndive
    1201 00007280     8000          .word               DEFLT,DEFLT ;rug slam
    1202 000072a0     8000          .word               DEFLT,DEFLT ;rzr slash
    1203 000072c0     8000          .word   DEFLT                   ;yellthrow
    1204                    
    1205                    ;Shawn Michaels 04
    1206                            ;       whsh  grunt smak  ouch
    1207 000072d0     8000          .word   DEFLT,1022H,DEFLT,1030H ;punch
    1208 00007310     8000          .word   DEFLT,1023H,DEFLT,1031H ;headbutt
    1209 00007350     8000          .word   DEFLT,1024H,DEFLT,1032H ;kick
    1210 00007390     8000          .word   DEFLT,1025H,DEFLT,1033H ;flykick
    1211                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   23

    1212 000073d0     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabthrow
    1213 00007410     8000          .word   DEFLT,1026H,DEFLT,1034H ;uppercut
    1214 00007450     8000          .word   DEFLT,1029H,DEFLT,1037H ;elbow drop
    1215 00007490     8000          .word   DEFLT,1028H,DEFLT,1036H ;grabhold
    1216                    
    1217 000074d0     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabfling
    1218 00007510     8000          .word   DEFLT,102BH,DEFLT,1039H ;push
    1219 00007550     8000          .word   DEFLT,102CH,DEFLT,103AH ;hiptoss
    1220 00007590     8000          .word   DEFLT,102AH,DEFLT,1038H ;big boot
    1221                    
    1222 000075d0     8000          .word   DEFLT,102EH,DEFLT,103CH ;super punch
    1223                    
    1224 00007610     8000          .word   DEFLT,DEFLT             ;turndive
    1225 00007630     8000          .word               DEFLT,103DH ;rug slam
    1226 00007650     8000          .word               DEFLT,DEFLT ;rzr slash
    1227 00007670     8000          .word   DEFLT                   ;yellthrow
    1228                    
    1229                    
    1230                    ;Bam Bam Bigelow 05
    1231 00007680     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;punch
    1232 000076c0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;headbutt
    1233 00007700     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;kick
    1234 00007740     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;flykick
    1235                    
    1236 00007780     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabthrow
    1237 000077c0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;uppercut
    1238 00007800     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;elbow drop
    1239 00007840     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabhold
    1240                    
    1241 00007880     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabfling
    1242 000078c0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;push
    1243 00007900     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;hiptoss
    1244 00007940     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;big boot
    1245                    
    1246 00007980     1042          .word   1042h,DEFLT,DEFLT,DEFLT ;super punch
    1247                    
    1248 000079c0     8000          .word   DEFLT,DEFLT             ;turndive
    1249 000079e0     8000          .word               DEFLT,DEFLT ;rug slam
    1250 00007a00     8000          .word               DEFLT,DEFLT ;rzr slash
    1251 00007a20     8000          .word   DEFLT                   ;yellthrow
    1252                    
    1253                    ;Doink the Clown 06
    1254                            ;       whsh  grunt smak  ouch
    1255 00007a30     8000          .word   DEFLT,1006h,DEFLT,1013H ;punch
    1256 00007a70     8000          .word   DEFLT,1007h,1000h,1014H ;headbutt
    1257 00007ab0     8000          .word   DEFLT,1008h,DEFLT,1015H ;kick
    1258 00007af0     8000          .word   DEFLT,1009h,DEFLT,1016H ;flykick
    1259                    
    1260 00007b30     8000          .word   DEFLT,1020h,DEFLT,1021H ;grabthrow
    1261 00007b70     8000          .word   DEFLT,1011h,DEFLT,101eH ;uppercut
    1262 00007bb0     8000          .word   DEFLT,100ch,DEFLT,1019H ;elbow drop
    1263 00007bf0     8000          .word   DEFLT,100bh,DEFLT,1018H ;grabhold
    1264                    
    1265 00007c30     8000          .word   DEFLT,1020h,DEFLT,1021H ;grabfling
    1266 00007c70     8000          .word   DEFLT,100eh,DEFLT,101bH ;push
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   24

    1267 00007cb0     8000          .word   DEFLT,100fh,DEFLT,101cH ;hiptoss
    1268 00007cf0     8000          .word   DEFLT,0202h,DEFLT,020ch ;big boot
    1269                    
    1270 00007d30     8000          .word   DEFLT,1011h,DEFLT,101eH ;super punch
    1271                    
    1272 00007d70     8000          .word   DEFLT,DEFLT             ;turndive
    1273 00007d90     8000          .word               DEFLT,101FH ;rug slam
    1274 00007db0     8000          .word               DEFLT,DEFLT ;rzr slash
    1275 00007dd0     8000          .word   DEFLT                   ;yellthrow
    1276                    
    1277                    ;Adam Bomb      07
    1278 00007de0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;punch
    1279 00007e20     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;headbutt
    1280 00007e60     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;kick
    1281 00007ea0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;flykick
    1282                    
    1283 00007ee0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabthrow
    1284 00007f20     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;uppercut
    1285 00007f60     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;elbow drop
    1286 00007fa0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabhold
    1287                    
    1288 00007fe0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;grabfling
    1289 00008020     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;push
    1290 00008060     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;hiptoss
    1291 000080a0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;big boot
    1292                    
    1293 000080e0     8000          .word   DEFLT,DEFLT,DEFLT,DEFLT ;super punch
    1294                    
    1295 00008120     8000          .word   DEFLT,DEFLT             ;turndive
    1296 00008140     8000          .word               DEFLT,DEFLT ;rug slam
    1297 00008160     8000          .word               DEFLT,DEFLT ;rzr slash
    1298 00008180     8000          .word   DEFLT                   ;yellthrow
    1299                    
    1300                    ;Lex Luger      08
    1301 00008190     8000          .word   DEFLT,1022H,DEFLT,1030H ;punch
    1302 000081d0     8000          .word   DEFLT,1023H,DEFLT,1031H ;headbutt
    1303 00008210     8000          .word   DEFLT,1024H,DEFLT,1032H ;kick
    1304 00008250     8000          .word   DEFLT,1025H,DEFLT,1033H ;flykick
    1305                    
    1306 00008290     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabthrow
    1307 000082d0     8000          .word   DEFLT,1026H,DEFLT,1034H ;uppercut
    1308 00008310     8000          .word   DEFLT,1029H,DEFLT,1037H ;elbow drop
    1309 00008350     8000          .word   DEFLT,1028H,DEFLT,1036H ;grabhold
    1310                    
    1311 00008390     8000          .word   DEFLT,1027H,DEFLT,1035H ;grabfling
    1312 000083d0     8000          .word   DEFLT,102BH,DEFLT,1039H ;push
    1313 00008410     8000          .word   DEFLT,102CH,DEFLT,103AH ;hiptoss
    1314 00008450     8000          .word   DEFLT,102AH,DEFLT,1038H ;big boot
    1315                    
    1316 00008490     8000          .word   DEFLT,102EH,DEFLT,103CH ;super punch
    1317                    
    1318 000084d0     8000          .word   DEFLT,DEFLT             ;turndive
    1319 000084f0     8000          .word               DEFLT,103DH ;rug slam
    1320 00008510     8000          .word               DEFLT,DEFLT ;rzr slash
    1321 00008530     8000          .word   DEFLT                   ;yellthrow
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   25

    1322                    ;MISSING LINES
    1323                    
    1324                    *****************************************************************************
    1325                    *
    1326                    * Play a sound from the tables.
    1327                    * 0a0H = sound number (or'ed with 1000h for a random table)
    1328                    *
    1329                    
    1330 00008540            SUBR   table_sound
    1331                    
    1332 00008540     1e60          btst    12,a0
    1333 00008550     ca00          jreq    triple_sound
         00008560     0342  
    1334                    
    1335                            ;it's a random sound
    1336 00008570                   PUSH    a2
    1337 00008580     0bc0          xori    1000h,a0
         00008590 00001000  
    1338 000085b0                   X32     a0
    1339 000085c0     0b20          addi    gqarrandom_sound_tables,a0
         000085d0 000086a0' 
    1340 000085f0     8602          move    *a0,a2,L
    1341 00008600     9440          move    *a2+,a0,W
    1342 00008610     0d5f          calla   RNDRNG0
         00008620 00000000! 
    1343 00008640                   X16     a0
    1344 00008650     4002          add     a0,a2
    1345 00008660     8440          move    *a2,a0,W
    1346 00008670                   PULL    a2
    1347 00008680     c000          jruc    triple_sound
         00008690     032f  
    1348                    
    1349 000086a0           gqarrandom_sound_tables
    1350 000086a0 00008f00'         .long   gqardoink_hdbutt_l              ; 0
    1351 000086c0 00008f50'         .long   gqargeneric_punch_l     ; 1
    1352 000086e0 00008fa0'         .long   gqargeneric_rugslam_l   ; 2
    1353 00008700 00009010'         .long   gqargeneric_rslam_impact_l      ; 3
    1354 00008720 00009040'         .long   gqardoink_rugslam_l     ; 4
    1355 00008740 000090b0'         .long   gqardoink_rugslam_impact_l      ; 5
    1356                    
    1357 00008760 00009120'         .long   gqardoink_face_a           ;6
    1358 00008780 00009150'         .long   gqardoink_head_a           ;7
    1359 000087a0 00009180'         .long   gqardoink_kick_a           ;8
    1360 000087c0 000091c0'         .long   gqardoink_drop_a           ;9
    1361 000087e0 00009180'         .long   gqardoink_knee_a           ;a
    1362 00008800 00009200'         .long   gqardoink_reach_a          ;b
    1363 00008820 000091c0'         .long   gqardoink_elbow_a          ;c
    1364 00008840 00009260'         .long   gqardoink_stomp_a          ;d
    1365 00008860 000092b0'         .long   gqardoink_push_a           ;e
    1366 00008880 000092e0'         .long   gqardoink_hip_a    ;f
    1367 000088a0 00009350'         .long   gqardoink_jump_a           ;10
    1368 000088c0 00009380'         .long   gqardoink_super_a          ;11
    1369 000088e0 00009180'         .long   gqardoink_slam_a           ;12
    1370                    
    1371 00008900 000093b0'         .long   gqardoink_face_v           ;13
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   26

    1372 00008920 000093f0'         .long   gqardoink_head_v           ;14
    1373 00008940 00009420'         .long   gqardoink_kick_v           ;15
    1374 00008960 00009450'         .long   gqardoink_drop_v           ;16
    1375 00008980 000094c0'         .long   gqardoink_knee_v           ;17
    1376 000089a0 00009500'         .long   gqardoink_reach_v          ;18
    1377 000089c0 000094c0'         .long   gqardoink_elbow_v          ;19
    1378 000089e0 00009530'         .long   gqardoink_stomp_v          ;1a
    1379 00008a00 00009580'         .long   gqardoink_push_v           ;1b
    1380 00008a20 000095b0'         .long   gqardoink_hip_v    ;1c
    1381 00008a40 000095e0'         .long   gqardoink_jump_v           ;1d
    1382 00008a60 00009620'         .long   gqardoink_super_v          ;1e
    1383 00008a80 00009660'         .long   gqardoink_slam_v           ;1f
    1384                                    
    1385 00008aa0 00009230'         .long   gqardoink_lift_a           ;20
    1386 00008ac0 00009500'         .long   gqardoink_lift_v           ;21
    1387                    
    1388 00008ae0 000096a0'         .long   gqarhart_face_a    ;22
    1389 00008b00 000096e0'         .long   gqarhart_head_a    ;23
    1390 00008b20 00009720'         .long   gqarhart_kick_a    ;24
    1391 00008b40 00009750'         .long   gqarhart_drop_a    ;25
    1392 00008b60 00009790'         .long   gqarhart_knee_a    ;26
    1393 00008b80 000097c0'         .long   gqarhart_reach_a           ;27
    1394 00008ba0 00009800'         .long   gqarhart_lift_a    ;28
    1395 00008bc0 00009830'         .long   gqarhart_elbow_a           ;29
    1396 00008be0 00009870'         .long   gqarhart_stomp_a           ;2a
    1397 00008c00 000098a0'         .long   gqarhart_push_a    ;2b
    1398 00008c20 000098d0'         .long   gqarhart_hip_a     ;2c
    1399 00008c40 00009930'         .long   gqarhart_jump_a    ;2d
    1400 00008c60 00009960'         .long   gqarhart_super_a           ;2e
    1401 00008c80 00009990'         .long   gqarhart_slam_a    ;2f
    1402                    
    1403 00008ca0 000099d0'         .long   gqarhart_face_v    ;30
    1404 00008cc0 00009a10'         .long   gqarhart_head_v    ;31
    1405 00008ce0 00009a50'         .long   gqarhart_kick_v    ;32
    1406 00008d00 00009a90'         .long   gqarhart_drop_v    ;33
    1407 00008d20 00009a50'         .long   gqarhart_knee_v    ;34
    1408 00008d40 00009ae0'         .long   gqarhart_reach_v           ;35
    1409 00008d60 00009b10'         .long   gqarhart_lift_v    ;36
    1410 00008d80 00009b40'         .long   gqarhart_elbow_v           ;37
    1411 00008da0 00009b40'         .long   gqarhart_stomp_v           ;38
    1412 00008dc0 00009b70'         .long   gqarhart_push_v    ;39
    1413 00008de0 00009ba0'         .long   gqarhart_hip_v     ;3a
    1414 00008e00 00009bd0'         .long   gqarhart_jump_v    ;3b
    1415 00008e20 00009c10'         .long   gqarhart_super_v           ;3c
    1416 00008e40 00009c50'         .long   gqarhart_slam_v    ;3d
    1417                    
    1418 00008e60 00009c90'         .long   gqarrazor_medium_pain   ;3e
    1419 00008e80 00009ce0'         .long   gqarrazor_face_hit              ;3f
    1420 00008ea0 00009d30'         .long   gqarrazor_medium_effort ;40
    1421 00008ec0 00009d70'         .long   gqarrazor_double_effort ;41
    1422                    
    1423 00008ee0 00009dc0'         .long   gqarbam_mult_fire_hits  ;42
    1424                                    
    1425 00008f00           gqardoink_hdbutt_l
    1426 00008f00     0003          .word   3,1Bh,1Bh,1Bh,0B2h
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   27

    1427                    
    1428 00008f50           gqargeneric_punch_l
    1429 00008f50     0003          .word   3,1h,2h,19h,1Bh
    1430                    
    1431 00008fa0           gqargeneric_rugslam_l
    1432 00008fa0     0005          .word   5,072h,071h,07Ch,074h,0AEh,0AFh
    1433                    
    1434 00009010           gqargeneric_rslam_impact_l
    1435 00009010     0001          .word   1,0C1h,0C3h
    1436                    
    1437 00009040           gqardoink_rugslam_l
    1438 00009040     0005          .word   5,072h,071h,07Ch,074h,0AEh,0AFh
    1439                    
    1440 000090b0           gqardoink_rugslam_impact_l
    1441 000090b0     0005          .word   5,0C1h,0C1h,0C3h,0C3h,0ACh,0ADh
    1442                    
    1443                    
    1444 00009120           gqardoink_face_a
    1445 00009120     0001          .word   1,235h,21bh
    1446 00009150           gqardoink_head_a
    1447 00009150     0001          .word   1,234h,21ch
    1448 00009180           gqardoink_kick_a
    1449 00009180           gqardoink_knee_a
    1450 00009180           gqardoink_slam_a
    1451 00009180     0002          .word   2,224h,225h,226h
    1452 000091c0           gqardoink_drop_a
    1453 000091c0           gqardoink_elbow_a
    1454 000091c0     0002          .word   2,21dh,21eh,21fh
    1455 00009200           gqardoink_reach_a
    1456 00009200     0001          .word   1,220h,221h
    1457 00009230           gqardoink_lift_a
    1458 00009230     0001          .word   1,222h,223h
    1459 00009260           gqardoink_stomp_a
    1460 00009260     0003          .word   3,21bh,224h,225h,226h
    1461 000092b0           gqardoink_push_a
    1462 000092b0     0001          .word   1,227h,228h
    1463 000092e0           gqardoink_hip_a
    1464 000092e0     0005          .word   5,21dh,21eh,21fh,207h,208h,209H
    1465 00009350           gqardoink_jump_a
    1466 00009350     0001          .word   1,229h,22ah
    1467 00009380           gqardoink_super_a
    1468 00009380     0001          .word   1,206h,21bh
    1469                    
    1470                    
    1471 000093b0           gqardoink_face_v
    1472 000093b0     0002          .word   2,200h,201h,202h
    1473 000093f0           gqardoink_head_v
    1474 000093f0     0001          .word   1,200H,22BH
    1475 00009420           gqardoink_kick_v
    1476 00009420     0001          .word   1,205H,22CH
    1477 00009450           gqardoink_drop_v
    1478 00009450     0005          .word   5,22BH,200H,202H,202H,202H,202H
    1479 000094c0           gqardoink_knee_v
    1480 000094c0           gqardoink_elbow_v
    1481 000094c0     0002          .word   2,22CH,203H,22DH
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   28

    1482 00009500           gqardoink_reach_v
    1483 00009500           gqardoink_lift_v
    1484 00009500     0001          .word   1,22EH,22FH
    1485 00009530           gqardoink_stomp_v
    1486 00009530     0002          .word   2,22CH,22DH,204H,20BH
    1487 00009580           gqardoink_push_v
    1488 00009580     0001          .word   1,230H,231H
    1489 000095b0           gqardoink_hip_v
    1490 000095b0     0001          .word   1,232H,233H
    1491 000095e0           gqardoink_jump_v
    1492 000095e0     0002          .word   2,22BH,204H,22CH
    1493 00009620           gqardoink_super_v
    1494 00009620     0001          .word   1,20AH,20CH,20DH
    1495 00009660           gqardoink_slam_v
    1496 00009660     0002          .word   2,203H,204H,22CH
    1497                    
    1498 000096a0           gqarhart_face_a
    1499 000096a0     0002          .word   2,23Eh,240H,242H
    1500 000096e0           gqarhart_head_a
    1501 000096e0     0002          .word   2,23DH,240H,24AH
    1502 00009720           gqarhart_kick_a
    1503 00009720     0001          .word   1,242H,24DH
    1504 00009750           gqarhart_drop_a 
    1505 00009750     0002          .word   2,247H,248h,249h
    1506 00009790           gqarhart_knee_a
    1507 00009790     0001          .word   1,241H,24DH
    1508 000097c0           gqarhart_reach_a
    1509 000097c0     0002          .word   2,23FH,24BH,24CH
    1510 00009800           gqarhart_lift_a
    1511 00009800     0001          .word   1,243H,244H
    1512 00009830           gqarhart_elbow_a
    1513 00009830     0002          .word   2,247H,248H,249H
    1514 00009870           gqarhart_stomp_a
    1515 00009870     0001          .word   1,23DH,240H
    1516 000098a0           gqarhart_push_a
    1517 000098a0     0001          .word   1,24FH,24AH
    1518 000098d0           gqarhart_hip_a
    1519 000098d0     0004          .word   4,242H,244H,247H,248H,249H
    1520 00009930           gqarhart_jump_a
    1521 00009930     0001          .word   1,245H,24EH
    1522 00009960           gqarhart_super_a
    1523 00009960     0001          .word   1,242H,24DH
    1524 00009990           gqarhart_slam_a
    1525 00009990     0002          .word   2,240H,24FH,240H
    1526                    
    1527 000099d0           gqarhart_face_v
    1528 000099d0     0002          .word   2,251H,252H,253H
    1529 00009a10           gqarhart_head_v
    1530 00009a10     0002          .word   2,25CH,253H,262H
    1531 00009a50           gqarhart_kick_v
    1532 00009a50           gqarhart_knee_v
    1533 00009a50     0002          .word   2,250H,254H,255H
    1534 00009a90           gqarhart_drop_v 
    1535 00009a90     0003          .word   3,251H,252H,253H,25CH
    1536 00009ae0           gqarhart_reach_v
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   29

    1537 00009ae0     0001          .word   1,258H,259H
    1538 00009b10           gqarhart_lift_v
    1539 00009b10     0001          .word   1,25AH,25BH
    1540 00009b40           gqarhart_elbow_v
    1541 00009b40           gqarhart_stomp_v
    1542 00009b40     0001          .word   1,256H,257H
    1543 00009b70           gqarhart_push_v
    1544 00009b70     0001          .word   1,25DH,25EH
    1545 00009ba0           gqarhart_hip_v
    1546 00009ba0     0001          .word   1,25FH,260H
    1547 00009bd0           gqarhart_jump_v
    1548 00009bd0     0002          .word   2,264H,256H,261H
    1549 00009c10           gqarhart_super_v
    1550 00009c10     0002          .word   2,262H,25CH,261H
    1551 00009c50           gqarhart_slam_v
    1552 00009c50     0002          .word   2,261H,256H,257H
    1553                    
    1554 00009c90           gqarrazor_medium_pain
    1555 00009c90     0003          .word   3,26ah,26bh,26ch,271h
    1556 00009ce0           gqarrazor_face_hit
    1557 00009ce0     0003          .word   3,267h,268h,269h,26fh
    1558 00009d30           gqarrazor_medium_effort
    1559 00009d30     0002          .word   2,272h,273h,274h
    1560 00009d70           gqarrazor_double_effort
    1561 00009d70     0003          .word   3,275h,276h,277h,279h
    1562 00009dc0           gqarbam_mult_fire_hits
    1563 00009dc0     0001          .word   1,99h,9ah
    1564                    
    1565                    
    1566                    ******************************************************************************
    1567                    *                                                                                               *
    1568                    * reset sound board                                                                             *
    1569                    *                                                                                               *
    1570                    * this is a full reset, checksum dings and all. this is the same routine
    1571                    * that was in the old (gspsnd) processor. (ed boon)
    1572                    *
    1573                    * NOTE: If any data are sent to the sound board within ~270msec of the
    1574                    *       reset signal, diagnostics will be skipped and there won't be any
    1575                    *       loud and annoying bongs.
    1576                    *
    1577                    
    1578 00009df0            SUBR   snd_reset
    1579                    
    1580                            ;initialize snd_debug ptr
    1581                            .if SND_DEBUG
    1582                            movi    SDRAM,a14
    1583                            move    a14,@sdram_ptr,L
    1584                            .endif
    1585                    
    1586 00009df0                   PUSH    a0,a1           ;Need an extra reggie
    1587                    
    1588 00009e10     09c0          movi    SNDRSTBIT|32,a0
         00009e20     0030  
    1589 00009e30     07a1          move    @_coin_counter_addr,a1,L
         00009e40 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   30

    1590 00009e60     8001          move    a0,*a1
    1591                    
    1592 00009e70     09c0          movi    6000,a0         ;wait for it to catch
         00009e80     1770  
    1593 00009e90     3c20          dsjs    a0,$
    1594                    
    1595 00009ea0     09c0          movi    32,a0
         00009eb0     0020  
    1596 00009ec0     07a1          move    @_coin_counter_addr,a1,L
         00009ed0 00000000! 
    1597 00009ef0     8001          move    a0,*a1
    1598                    
    1599 00009f00                   PULL    a0,a1           ; Restore the reggies
    1600 00009f20     0960          rets
    1601                    
    1602                    
    1603                    ******************************************************************************
    1604                    *
    1605                    * quiet sound board reset
    1606                    *
    1607                    * Just like snd_reset, but without the diagnostic tests and consequent chimes.
    1608                    * It also sets the volume to the CMOS level.
    1609                    * 
    1610                    * NOTE: Don't CALLx this function, JSRP it.  It SLEEPs.
    1611                    *
    1612                    * Trashes everything except the reggies which get saved by default when
    1613                    * you sleep...
    1614                    
    1615 00009f30            SUBR   QSNDRST
    1616                    
    1617                            ;initialize snd_debug ptr
    1618                            .if SND_DEBUG
    1619                            movi    SDRAM,a14
    1620                            move    a14,@sdram_ptr,L
    1621                            .endif
    1622                    
    1623                            ;doing an EXISTP on QSNDRST_PID isn't enough because this can
    1624                            ; be JSRP'd from other places too.
    1625 00009f30     182e          movk    1,a14
    1626 00009f40     058e          move    a14,@doing_dcs_reset
         00009f50 00000500- 
    1627                    
    1628 00009f70     09c0          movi    SNDRSTBIT|32,a0
         00009f80     0030  
    1629 00009f90     07a1          move    @_coin_counter_addr,a1,L        ; IS A1 SAFE?
         00009fa0 00000000! 
    1630 00009fc0     8001          move    a0,*a1,W
    1631                    
    1632                    
    1633 00009fd0     09c0          movi    6000,a0         ;wait for it to catch
         00009fe0     1770  
    1634 00009ff0     3c20          dsjs    a0,$    
    1635                    
    1636 0000a000     09c0          movi    32,a0
         0000a010     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   31

    1637 0000a020     07a1          move    @_coin_counter_addr,a1,L        ; IS A1 SAFE?
         0000a030 00000000! 
    1638 0000a050     8001          move    a0,*a1,W
    1639                    
    1640 0000a060                   SLEEPK  2
    1641 0000a0a0     07a0          move    @_sound_addr,a0,L
         0000a0b0 00000000! 
    1642 0000a0d0     8dc0          movb    a14,*a0
    1643 0000a0e0                   SLEEPK  4
    1644 0000a120     09c0          movi    ADJVOLUME,a0
         0000a130     001c  
    1645 0000a140     0d5f          calla   GET_ADJ
         0000a150 00000000! 
    1646 0000a170                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    1647 0000a200     0d3f          callr   set_volume              ;set master volume to CMOS level
         0000a210     02dd  
    1648                    
    1649 0000a220     57ce          clr     a14
    1650 0000a230     058e          move    a14,@doing_dcs_reset
         0000a240 00000500- 
    1651                    
    1652 0000a260                   RETP
    1653                    
    1654                    *****************************************************************************
    1655                    * Process that quietly resets the sound board, then dies.  Useful when you
    1656                    * don't feel like waiting for the reset to finish before you move on.
    1657                    
    1658 0000a290            SUBR   qsndrst_proc
    1659                    
    1660 0000a290                   JSRP    QSNDRST
    1661                    
    1662 0000a300                   DIE
    1663                    
    1664                    ******************************************************************************
    1665                    
    1666 0000a330            SUBR   snd_play1
    1667 0000a330     0960          rets
    1668                    
    1669                    
    1670                    *****************************************************************************
    1671                    * Wrestlemania tune
    1672                    
    1673 0000a340            SUBR   wmania_tune
    1674                    
    1675 0000a340     09c3          movi    11,a3
         0000a350     000b  
    1676 0000a360     0d3f          callr   SNDSND
         0000a370     02e5  
    1677 0000a380           vkwxloop
    1678 0000a380                   SLEEP   TSEC*8
    1679 0000a3d0     09c3          movi    14,a3
         0000a3e0     000e  
    1680 0000a3f0     0d3f          callr   SNDSND
         0000a400     02dc  
    1681 0000a410                   SLEEP   TSEC*8
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   32

    1682 0000a460     09c3          movi    13,a3
         0000a470     000d  
    1683 0000a480     0d3f          callr   SNDSND
         0000a490     02d3  
    1684 0000a4a0     c0ed          jruc    vkwxloop
    1685                    
    1686                    
    1687                    *****************************************************************************
    1688                    * Rings the match start bell a few times. (process)
    1689                    *
    1690                    * Note:  This uses the channel_sound routine to conserve tracks.  If, for
    1691                    *        whatever reason, these rings are spaced out by more than 89 ticks,
    1692                    *        (the duration of the bell sound), then this should NOT be done as
    1693                    *        it could result in other sound calls being truncated prematurely.
    1694                    *
    1695                    
    1696              00b1  bell_snd        equ     0B1h
    1697                    
    1698 0000a4b0                   STRUCTPD
    1699 0000a4b0                   WORD    iqmcBELL_CHANNEL        ;UHW snd channel of bell
    1700                    
    1701 0000a4b0            SUBR   ring_bell
    1702                    
    1703 0000a4b0     09c0          movi    bell_snd,a0
         0000a4c0     00b1  
    1704 0000a4d0     0d3f          callr   triple_sound
         0000a4e0     014a  
    1705 0000a4f0     2a0e          sra     16,a14
    1706 0000a500     b1cd          move    a14,*a13(iqmcBELL_CHANNEL),W
         0000a510     0100  
    1707                    
    1708 0000a520                   SLEEP   TSEC/3
    1709                    
    1710 0000a570     09c0          movi    bell_snd,a0
         0000a580     00b1  
    1711 0000a590     b5a1          move    *a13(iqmcBELL_CHANNEL),a1,W
         0000a5a0     0100  
    1712 0000a5b0     0d3f          callr   channel_sound
         0000a5c0     004e  
    1713                    
    1714 0000a5d0                   SLEEP   TSEC/3
    1715                    
    1716 0000a620     09c0          movi    bell_snd,a0
         0000a630     00b1  
    1717 0000a640     b5a1          move    *a13(iqmcBELL_CHANNEL),a1,W
         0000a650     0100  
    1718 0000a660     0d3f          callr   channel_sound
         0000a670     0043  
    1719                    
    1720 0000a680                   DIE
    1721                    
    1722                    
    1723                    *****************************************************************************
    1724                    * Runs the speech call for a given wrestler, after waiting for channel 1 to
    1725                    * clear.
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   33

    1726                    *
    1727                    *0a0H=wrestler #
    1728                    
    1729 0000a6b0            SUBR   select_speech
    1730                    
    1731 0000a6b0                   X32     a0
    1732 0000a6c0     0b20          addi    yioxwrestler_sounds,a0
         0000a6d0 0000a970' 
    1733 0000a6f0     9408          move    *a0+,a8,W
    1734 0000a700     ca09          jrz     yioxdone
    1735 0000a710     8409          move    *a0,a9,W
    1736                    
    1737 0000a720                   CREATE  DELAYSND_PID,delay_code_a3
    1738                    
    1739 0000a7a0           yioxdone
    1740 0000a7a0     0960          rets
    1741                    
    1742 00000540                   .bss    delay_code_a3_exists,16
    1743                    
    1744 0000a7b0            SUBRP  delay_code_a3
    1745                    
    1746 0000a7b0           yioxloop1
    1747                            ;if this is the only delay_code_a3 process, do the sound, wait out
    1748                            ; the duration, then die.
    1749                    ;       movi    DELAYSND_PID,a0
    1750                    ;       movi    0FFFFh,a1
    1751                    ;       calla   EXISTP
    1752                    ;       jrz     yioxgo
    1753                    ;       SLEEPK  1
    1754                    ;       jruc    yioxloop1
    1755                    
    1756 0000a7b0     05ae          move    @delay_code_a3_exists,a14
         0000a7c0 00000540- 
    1757 0000a7e0     ca05          jrz     yioxno_exist
    1758 0000a7f0                   SLEEPK  1
    1759 0000a830     c0f7          jruc    yioxloop1
    1760 0000a840           yioxno_exist
    1761 0000a840     182e          movk    1,a14
    1762 0000a850     058e          move    a14,@delay_code_a3_exists
         0000a860 00000540- 
    1763                    
    1764 0000a880           yioxgo
    1765 0000a880     4d03          move    a8,a3
    1766 0000a890     0d3f          callr   send_code_a3
         0000a8a0     0292  
    1767                    
    1768 0000a8b0           yioxloop2
    1769 0000a8b0                   SLEEPK  1
    1770 0000a8f0     3ca9          dsj     a9,yioxloop2
    1771                    
    1772 0000a900     57ce          clr     a14
    1773 0000a910     058e          move    a14,@delay_code_a3_exists
         0000a920 00000540- 
    1774                    
    1775 0000a940                   DIE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   34

    1776                    
    1777                    
    1778 0000a970           yioxwrestler_sounds
    1779 0000a970     0000          .word   0000h,0         ;HART
    1780 0000a990     0300          .word   0300h,94        ;RAZOR
    1781 0000a9b0     0000          .word   0000h,0         ;TAKER
    1782 0000a9d0     0000          .word   0000h,0         ;YOKO
    1783 0000a9f0     0000          .word   0000h,0         ;SHAWN
    1784 0000aa10     0000          .word   0000h,0         ;BAM BAM
    1785 0000aa30     0200          .word   0200h,88        ;DOINK
    1786 0000aa50     0000          .word   0000h,0         ;ADAM BOMB
    1787 0000aa70     0000          .word   0000h,0         ;PERFECT
    1788 0000aa90     0000          .word   0000h,0         ;LUGER
    1789 0000aab0           yioxwrestler_soundsX
    1790                    
    1791                    
    1792                    *****************************************************************************
    1793                    * channel_sound
    1794                    *
    1795                    * like triple_sound, only you specify the channel it goes on, priorities
    1796                    * notwithstanding.  This isn't quite the same thing as SNDSND, tho, since
    1797                    * chanXpri, chanXdur, and chanXsnd are updated.
    1798                    *
    1799                    * 0a0H = sound call (index), 0a1H=channel (1-4)
    1800                    *
    1801                    
    1802 0000aab0            SUBR   channel_sound
    1803                    
    1804 0000aab0                   PUSH    a0,a1,a2,a3,a4
    1805                    
    1806 0000aad0                   X32     a0
    1807 0000aae0     0b20          addi    triple_sndtab,a0
         0000aaf0 00000000' 
    1808 0000ab10     8402          move    *a0,a2,W
    1809 0000ab20     0b82          andi    0ffh,a2         ;a2 = duration
         0000ab30 ffffff00  
    1810 0000ab50     9403          move    *a0+,a3,W
    1811 0000ab60     2b03          sra     8,a3            ;a3 = priority
    1812 0000ab70     8404          move    *a0,a4,W        ;a4 = call (channel 1)
    1813                    
    1814 0000ab80     1421          dec     a1
    1815 0000ab90     ca0a          jrz     sofqchan1
    1816 0000aba0     1024          inc     a4
    1817 0000abb0     1421          dec     a1
    1818 0000abc0     ca11          jrz     sofqchan2
    1819 0000abd0     1024          inc     a4
    1820 0000abe0     1421          dec     a1
    1821 0000abf0     ca18          jrz     sofqchan3
    1822 0000ac00     1024          inc     a4
    1823 0000ac10     1421          dec     a1
    1824 0000ac20     ca1f          jrz     sofqchan4
    1825                    
    1826                            ;error!
    1827                            .if DEBUG
    1828                            LOCKUP
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   35

    1829                            .endif
    1830 0000ac30     c02a          jruc    sofqdone
    1831 0000ac40           sofqchan1
    1832 0000ac40     0582          move    a2,@chan1dur,W
         0000ac50 00000020- 
    1833 0000ac70     0583          move    a3,@chan1pri,W
         0000ac80 00000010- 
    1834 0000aca0     0584          move    a4,@chan1snd,W
         0000acb0 00000050- 
    1835 0000acd0     c01d          jruc    sofqsend
    1836 0000ace0           sofqchan2
    1837 0000ace0     0582          move    a2,@chan2dur,W
         0000acf0 00000070- 
    1838 0000ad10     0583          move    a3,@chan2pri,W
         0000ad20 00000060- 
    1839 0000ad40     0584          move    a4,@chan2snd,W
         0000ad50 000000a0- 
    1840 0000ad70     c013          jruc    sofqsend
    1841 0000ad80           sofqchan3
    1842 0000ad80     0582          move    a2,@chan3dur,W
         0000ad90 000000c0- 
    1843 0000adb0     0583          move    a3,@chan3pri,W
         0000adc0 000000b0- 
    1844 0000ade0     0584          move    a4,@chan3snd,W
         0000adf0 000000f0- 
    1845 0000ae10     c009          jruc    sofqsend
    1846 0000ae20           sofqchan4
    1847 0000ae20     0582          move    a2,@chan4dur,W
         0000ae30 00000110- 
    1848 0000ae50     0583          move    a3,@chan4pri,W
         0000ae60 00000100- 
    1849 0000ae80     0584          move    a4,@chan4snd,W
         0000ae90 00000140- 
    1850                    ;       jruc    sofqsend
    1851                    
    1852 0000aeb0           sofqsend
    1853 0000aeb0     4c83          move    a4,a3
    1854 0000aec0     0d3f          callr   send_code_a3
         0000aed0     022f  
    1855                    
    1856 0000aee0           sofqdone
    1857 0000aee0                   PULL    a0,a1,a2,a3,a4
    1858 0000af00     0960          rets
    1859                    
    1860                    *****************************************************************************
    1861                    * announcer_sound
    1862                    *
    1863                    * Lots like triple_sound, except that it identifies the announcer who's
    1864                    * talking, and if he's already saying something, the new call cuts off
    1865                    * the old one.
    1866                    *
    1867                    * 0a0H = sound call (index into triple_sound table)
    1868                    * <a0 = sound call duration in ticks (-1 if not announcer speech)
    1869                    *
    1870                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   36

    1871 0000af10           WHO_IS_IT
    1872                            ;figure out who it is.
    1873 0000af10     4c01          move    a0,a1
    1874 0000af20                   X32     a1
    1875 0000af30     0b21          addi    triple_sndtab,a1
         0000af40 00000000' 
    1876                    
    1877 0000af60     0b61          cmpi    announcer_start,a1
         0000af70 ffffe3ff' 
    1878 0000af90     c42c          jrlt    aysjerror1                      ;too low -- not an announcer
    1879                    
    1880 0000afa0     0b61          cmpi    vince_end,a1
         0000afb0 ffffc5ff' 
    1881 0000afd0     c411          jrlt    aysjvince                       ;it's vince
    1882                    
    1883 0000afe0     0b61          cmpi    randy_end,a1
         0000aff0 ffffc09f' 
    1884 0000b010     c414          jrlt    aysjrandy                       ;it's jerry
    1885                    
    1886 0000b020     0b61          cmpi    howards_end,a1
         0000b030 ffffbfff' 
    1887 0000b050     c417          jrlt    aysjhoward                      ;it's howard
    1888                    
    1889 0000b060     0b61          cmpi    more_jerry,a1
         0000b070 ffffa9ff' 
    1890 0000b090     c41e          jrlt    aysjerror2                      ;between howard and jerry - bogus
    1891                    
    1892 0000b0a0     0b61          cmpi    triple_end,a1
         0000b0b0 ffff9f9f' 
    1893 0000b0d0     c51c          jrge    aysjerror3                      ;long after the table.  error.
    1894 0000b0e0     c007          jruc    aysjrandy                       ;more jerry (randy)
    1895                            
    1896 0000b0f0           aysjvince
    1897 0000b0f0     09e1          movi    vincechan,a1
         0000b100 00000150- 
    1898 0000b120     09e2          movi    vincedur,a2
         0000b130 00000160- 
    1899 0000b150     c00d          jruc    aysjcont
    1900 0000b160           aysjrandy
    1901 0000b160     09e1          movi    randychan,a1
         0000b170 00000170- 
    1902 0000b190     09e2          movi    randydur,a2
         0000b1a0 00000180- 
    1903 0000b1c0     c006          jruc    aysjcont
    1904 0000b1d0           aysjhoward
    1905 0000b1d0     09e1          movi    howardchan,a1   ;a1 = pointer to announcer channel
         0000b1e0 00000190- 
    1906 0000b200     09e2          movi    howarddur,a2    ;a2 = pointer to announcer duration
         0000b210 000001a0- 
    1907                    
    1908 0000b230           aysjcont
    1909 0000b230     0320          clrc
    1910 0000b240     844e          move    *a2,a14
    1911 0000b250     0960          RETS
    1912                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   37

    1913 0000b260           aysjerror1
    1914                            .if DEBUG
    1915                    ;       LOCKUP          ;call # too low - not an announcer.
    1916                            .endif
    1917 0000b260     0de0          setc
    1918 0000b270     0960          rets
    1919                    
    1920 0000b280           aysjerror2
    1921                            .if DEBUG
    1922                    ;       LOCKUP          ;call # in that range between howard and 2nd jerry.
    1923                            .endif
    1924 0000b280     0de0          setc
    1925 0000b290     0960          rets
    1926                    
    1927                    
    1928 0000b2a0           aysjerror3
    1929                            .if DEBUG
    1930                    ;       LOCKUP          ;call # higher than end of table - not an announcer.
    1931                            .endif
    1932 0000b2a0     0de0          setc
    1933 0000b2b0     0960          rets
    1934                    
    1935                    
    1936 0000b2c0            SUBR   announcer_sound
    1937                    
    1938 0000b2c0                   PUSH    a1,a2,a3,a4,a5
    1939 0000b2e0     0d3f          CALLR   WHO_IS_IT
         0000b2f0     ffc1  
    1940                    
    1941 0000b300     c83c          JRC     aysjerror
    1942 0000b310     ca3e          jrz     aysjno_cutoff
    1943                    
    1944                            ;Guy is already talking.  Start the new call on the same track.
    1945 0000b320                   X32     a0
    1946 0000b330     0b20          addi    triple_sndtab,a0
         0000b340 00000000' 
    1947 0000b360     8403          move    *a0,a3,W
    1948 0000b370     0b83          andi    0FFh,a3         ;a3 = duration of new call
         0000b380 ffffff00  
    1949 0000b3a0     9404          move    *a0+,a4,W
    1950 0000b3b0     2b04          sra     8,a4            ;a4 = priority of new call
    1951 0000b3c0     9405          move    *a0+,a5         ;a5 = sound call base (must adjust for chan)
    1952                    
    1953 0000b3d0     8420          move    *a1,a0
    1954 0000b3e0     1420          dec     a0
    1955 0000b3f0     ca0c          jrz     aysjchan1
    1956 0000b400     1025          inc     a5
    1957 0000b410     1420          dec     a0
    1958 0000b420     ca10          jrz     aysjchan2
    1959 0000b430     1025          inc     a5
    1960 0000b440     1420          dec     a0
    1961 0000b450     ca14          jrz     aysjchan3
    1962 0000b460     1025          inc     a5
    1963 0000b470     1420          dec     a0
    1964 0000b480     ca18          jrz     aysjchan4
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   38

    1965                    
    1966                            ;bad channel?!  This should never happen.  Stop right there.
    1967                            .if DEBUG
    1968                            LOCKUP
    1969                            .endif
    1970 0000b490     09c0          movi    -1,a0
         0000b4a0     ffff  
    1971 0000b4b0     c02e          jruc    aysjend
    1972                    
    1973 0000b4c0           aysjchan1
    1974 0000b4c0     0584          move    a4,@chan1pri,W
         0000b4d0 00000010- 
    1975 0000b4f0     0583          move    a3,@chan1dur,W
         0000b500 00000020- 
    1976 0000b520     c014          jruc    aysjfire
    1977 0000b530           aysjchan2
    1978 0000b530     0584          move    a4,@chan2pri,W
         0000b540 00000060- 
    1979 0000b560     0583          move    a3,@chan2dur,W
         0000b570 00000070- 
    1980 0000b590     c00d          jruc    aysjfire
    1981 0000b5a0           aysjchan3
    1982 0000b5a0     0584          move    a4,@chan3pri,W
         0000b5b0 000000b0- 
    1983 0000b5d0     0583          move    a3,@chan3dur,W
         0000b5e0 000000c0- 
    1984 0000b600     c006          jruc    aysjfire
    1985 0000b610           aysjchan4
    1986 0000b610     0584          move    a4,@chan4pri,W
         0000b620 00000100- 
    1987 0000b640     0583          move    a3,@chan4dur,W
         0000b650 00000110- 
    1988                    ;       jruc    aysjfire
    1989                    
    1990 0000b670           aysjfire
    1991 0000b670     8062          move    a3,*a2,W        ;set announcer duration
    1992 0000b680     4c60          move    a3,a0
    1993 0000b690     4ca3          move    a5,a3
    1994 0000b6a0     0d3f          callr   send_code_a3
         0000b6b0     01b1  
    1995 0000b6c0     c00d          jruc    aysjend
    1996                    
    1997 0000b6d0           aysjerror
    1998                            ;not an announcer call!  Desist!
    1999 0000b6d0     09c0          movi    -1,a0
         0000b6e0     ffff  
    2000 0000b6f0     c00a          jruc    aysjend
    2001                    
    2002 0000b700           aysjno_cutoff
    2003                            ;announcer isn't already talking.  Fire off a triple_sound as normal
    2004 0000b700     0d5f          calla   triple_sound
         0000b710 0000b990' 
    2005 0000b730     81c2          move    a14,*a2,W
    2006 0000b740     4dc0          move    a14,a0
    2007 0000b750     0b80          andi    0ffh,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   39

         0000b760 ffffff00  
    2008 0000b780     2a0e          sra     16,a14
    2009 0000b790     81c1          move    a14,*a1,W
    2010                    
    2011 0000b7a0           aysjend
    2012 0000b7a0                   PULL    a1,a2,a3,a4,a5
    2013 0000b7c0     0960          rets
    2014                    
    2015                    
    2016                    *****************************************************************************
    2017                    * wrtable_sound
    2018                    *
    2019                    * performs a sound call from the master table for a wrestler
    2020                    *
    2021                    * 0a10H = *wrestlerproc 0a0H = sound call index (might be OR'ed with 8000h)
    2022                    *
    2023                    
    2024 0000b7d0            SUBR   wrtable_sound
    2025                    
    2026 0000b7d0                   push    a1,a4
    2027                    
    2028                            ;undo the |W_LOOKUP if present
    2029 0000b7f0     2620          sll     32-15,a0
    2030 0000b800     2de0          srl     32-15,a0
    2031                    
    2032 0000b810     b541          move    *a10(WRESTLERNUM),a1,W
         0000b820     0590  
    2033 0000b830     09c2          movi    MASTER_SOUND_TABLE-DEFAULT_SOUND_TABLE,a2
         0000b840     03b0  
    2034 0000b850     5e41          mpyu    a2,a1
    2035 0000b860                   X16     a0
    2036 0000b870     4001          add     a0,a1
    2037 0000b880     0b21          addi    MASTER_SOUND_TABLE,a1
         0000b890 00006410' 
    2038 0000b8b0     8421          move    *a1,a1,W
    2039 0000b8c0     cf04          jrnn    wxpmokay
    2040                    
    2041                            ;oops.  use the default table instead
    2042 0000b8d0     0b20          addi    DEFAULT_SOUND_TABLE,a0
         0000b8e0 00006060' 
    2043 0000b900     8401          move    *a0,a1,W
    2044 0000b910           wxpmokay
    2045 0000b910     4c20          move    a1,a0
    2046 0000b920     ca03          jrz     wxpmdone
    2047 0000b930     0d5f          calla   triple_sound
         0000b940 0000b990' 
    2048                    
    2049 0000b960           wxpmdone
    2050 0000b960                   pull    a1,a4
    2051 0000b980     0960          rets
    2052                    
    2053                    *****************************************************************************
    2054                    *
    2055                    *  triple_sound - Make a sound call from the triple_sndtab sound table
    2056                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   40

    2057                    *  input: a0 = sound call offset into table
    2058                    *  output: a14 = [channel,duration] of call. (0 if not played)
    2059                    *
    2060                    
    2061 0000b990            SUBR   triple_sound
    2062                    
    2063 0000b990     0b43          cmpi    211h,a3
         0000b9a0     fdee  
    2064 0000b9b0     cb01          jrne    vtbmokx
    2065 0000b9c0                   LOCKUP
    2066 0000b9d0           vtbmokx
    2067 0000b9d0     05b3          move    @SOUNDSUP,b3,W          ; are we allowed ??
         0000b9e0 000001b0- 
    2068 0000ba00     cb4d          jrne    send_rets               ; no
    2069                    
    2070 0000ba10     57ce          clr     a14
    2071 0000ba20                   PUSH    a0,a1,a2,a3,a4,a5,a6
    2072                    
    2073                            .if SND_DEBUG
    2074                            .ref    PCNT
    2075                            move    @sdram_ptr,a1,L
    2076                            move    a0,*a1(INDEX),W
    2077                            move    @PCNT,a14,L
    2078                            move    a14,*a1(TSTMP),L
    2079                            move    a0,a2
    2080                            X32     a2
    2081                            addi    triple_sndtab,a2
    2082                            move    a2,*a1(ADRS),L
    2083                            move    *a2,a14,W
    2084                            srl     8,a14
    2085                            move    a14,*a1(PRI)
    2086                            move    *a2+,a14,W
    2087                            sll     24,a14
    2088                            srl     24,a14
    2089                            move    a14,*a1(DUR)
    2090                            move    *a2,a14,W
    2091                            move    a14,*a1(CHAN0)
    2092                            move    *SP(0E0h),a14,L
    2093                            subi    30h,a14
    2094                            move    a14,*a1(CALLER),L
    2095                            movi    -1,a14
    2096                            move    a14,*a1(CHANL)
    2097                            .endif
    2098                    
    2099 0000ba40                   TEST    a0
    2100 0000ba50     ce00          jrn     vtbma0lo
         0000ba60     0089  
    2101                    
    2102 0000ba70                   X32     a0                      ; 32 bits per table entry
    2103 0000ba80     0b20          addi    triple_sndtab,a0        ; a0 --> our entry
         0000ba90 00000000' 
    2104 0000bab0     0b60          cmpi    triple_end,a0           ; past the end of the table ?
         0000bac0 ffff9f9f' 
    2105 0000bae0     c900          jrhs    vtbma0hi                        ; yes, sans
         0000baf0     0080  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   41

    2106                    
    2107 0000bb00     9401  tsnd0   move    *a0+,a1,W               ; a1 = [priority , duration]
    2108 0000bb10     ca79          jreq    tsnd9                   ; zero entry = skip
    2109                    
    2110 0000bb20     4c24          move    a1,a4
    2111 0000bb30     2f01          srl     8,a1                    ; a1 = priority only
    2112 0000bb40     2704          sll     32-8,a4
    2113 0000bb50     2d04          srl     32-8,a4                 ; a4 = duration only
    2114 0000bb60     9403          move    *a0+,a3,W               ; a3 = channel 1 sound call
    2115 0000bb70     ca77          jrz     vtbmzcall                       ; quit if zero
    2116                    *
    2117                    * a1 = priority
    2118                    * a3 = channel 1 sound call
    2119                    * a4 = duration
    2120                    *
    2121                    
    2122                            .if SND_DEBUG
    2123                            ;tentatively set SDA_EMPTY.  we might change that later.
    2124                            move    @sdram_ptr,a0,L
    2125                            movi    SDA_EMPTY,a14
    2126                            move    a14,*a0(ACTION)
    2127                            .endif
    2128                    
    2129 0000bb80     05a0          move    @chan1pri,a0,W
         0000bb90 00000010- 
    2130 0000bbb0     ca35          jreq    tsnd1                   ; channel 1
    2131 0000bbc0     05a0          move    @chan2pri,a0,W
         0000bbd0 00000060- 
    2132 0000bbf0     ca3e          jreq    tsnd2                   ; channel 2
    2133 0000bc00     05a0          move    @chan3pri,a0,W
         0000bc10 000000b0- 
    2134 0000bc30     ca48          jreq    tsnd3                   ; channel 3
    2135 0000bc40     05a0          move    @chan4pri,a0,W
         0000bc50 00000100- 
    2136 0000bc70     ca52          jreq    tsnd4                   ; channel 4
    2137                    *
    2138                    * all channels used up ---> see if I am more important
    2139                    *
    2140                    
    2141                    
    2142                    ;New Method = find lowest-priority call and bump it if I outrank it.
    2143                    
    2144 0000bc80     05a5          move    @chan1pri,a5,W
         0000bc90 00000010- 
    2145 0000bcb0     09e6          movi    tsnd1,a6
         0000bcc0 0000bf10' 
    2146                    
    2147 0000bce0     05ae          move    @chan2pri,a14
         0000bcf0 00000060- 
    2148 0000bd10     48ae          cmp     a5,a14
    2149 0000bd20     c504          jrge    vtbmcheck_3
    2150 0000bd30     4dc5          move    a14,a5
    2151 0000bd40     09e6          movi    tsnd2,a6
         0000bd50 0000bfe0' 
    2152 0000bd70           vtbmcheck_3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   42

    2153 0000bd70     05ae          move    @chan3pri,a14
         0000bd80 000000b0- 
    2154 0000bda0     48ae          cmp     a5,a14
    2155 0000bdb0     c504          jrge    vtbmcheck_4
    2156 0000bdc0     4dc5          move    a14,a5
    2157 0000bdd0     09e6          movi    tsnd3,a6
         0000bde0 0000c0c0' 
    2158 0000be00           vtbmcheck_4
    2159 0000be00     05ae          move    @chan4pri,a14
         0000be10 00000100- 
    2160 0000be30     48ae          cmp     a5,a14
    2161 0000be40     c504          jrge    vtbmlowest_found
    2162 0000be50     4dc5          move    a14,a5
    2163 0000be60     09e6          movi    tsnd4,a6
         0000be70 0000c1a0' 
    2164                    
    2165 0000be90           vtbmlowest_found
    2166 0000be90     48a1          cmp     a5,a1                   ; who is more important ?
    2167 0000bea0     c401          jrlt    vtbmno_preempt          ; him.  forget it.
    2168                    
    2169                            .if SND_DEBUG
    2170                            ;set ACTION to SDA_PREEMPT
    2171                            move    @sdram_ptr,a0,L
    2172                            movi    SDA_PREEMPT,a14
    2173                            move    a14,*a0(ACTION)
    2174                            .endif
    2175                    
    2176 0000beb0     0166          jump    a6
    2177                                    
    2178 0000bec0           vtbmno_preempt
    2179                            .if SND_DEBUG
    2180                            ;set ACTION to SDA_LOPRI
    2181                            move    @sdram_ptr,a0,L
    2182                            movi    SDA_LOPRI,a14
    2183                            move    a14,*a0(ACTION)
    2184                            .endif
    2185                    
    2186 0000bec0                   PULL    a0,a1,a2,a3,a4,a5,a6
    2187 0000bee0           send_rets
    2188                            .if SND_DEBUG
    2189                            ;increment sdram_ptr
    2190                            callr   vtbminc_sdram
    2191                            .endif
    2192 0000bee0     57ce          clr     a14
    2193 0000bef0     0320          clrc
    2194 0000bf00     0960          rets
    2195                    
    2196 0000bf10     0581  tsnd1   move    a1,@chan1pri,W          ; new priority for channel 1
         0000bf20 00000010- 
    2197 0000bf40     0584          move    a4,@chan1dur,W          ; new duration
         0000bf50 00000020- 
    2198 0000bf70     09e2          movi    [1,0],a2
         0000bf80 00010000  
    2199 0000bfa0     0583          move    a3,@chan1snd,W
         0000bfb0 00000050- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   43

    2200 0000bfd0     c029          jruc    tsnd7
    2201                    
    2202 0000bfe0     0581  tsnd2   move    a1,@chan2pri,W          ; new priority for channel 2
         0000bff0 00000060- 
    2203 0000c010     0584          move    a4,@chan2dur,W          ; new duration
         0000c020 00000070- 
    2204 0000c040     1023          inc     a3                      ; switch to channel 2 sound call
    2205 0000c050     0583          move    a3,@chan2snd,W
         0000c060 000000a0- 
    2206 0000c080     09e2          movi    [2,0],a2
         0000c090 00020000  
    2207 0000c0b0     c01b          jruc    tsnd7
    2208                    
    2209 0000c0c0     0581  tsnd3   move    a1,@chan3pri,W          ; new priority for channel 3
         0000c0d0 000000b0- 
    2210 0000c0f0     0584          move    a4,@chan3dur,W          ; new duration
         0000c100 000000c0- 
    2211 0000c120     1043          addk    2,a3                    ; switch to channel 3 sound call
    2212 0000c130     0583          move    a3,@chan3snd,W
         0000c140 000000f0- 
    2213 0000c160     09e2          movi    [3,0],a2
         0000c170 00030000  
    2214 0000c190     c00d          jruc    tsnd7
    2215                    
    2216 0000c1a0     0581  tsnd4   move    a1,@chan4pri,W          ; new priority for channel 4
         0000c1b0 00000100- 
    2217 0000c1d0     0584          move    a4,@chan4dur,W          ; new duration
         0000c1e0 00000110- 
    2218 0000c200     1063          addk    3,a3                    ; switch to channel 4 sound call
    2219 0000c210     0583          move    a3,@chan4snd,W
         0000c220 00000140- 
    2220 0000c240     09e2          movi    [4,0],a2
         0000c250 00040000  
    2221                    
    2222 0000c270           tsnd7
    2223                            .if SND_DEBUG
    2224                            PUSH    a2
    2225                            move    @sdram_ptr,a14,L
    2226                            srl     16,a2
    2227                            move    a2,*a14(CHANL)
    2228                            PULL    a2
    2229                            .endif
    2230                    
    2231 0000c270     0d3f          callr   SNDSND
         0000c280     00f4  
    2232 0000c290     ec82          movx    a4,a2
    2233 0000c2a0     4c4e          move    a2,a14
    2234                    
    2235 0000c2b0           tsnd9
    2236                            .if SND_DEBUG
    2237                            ;increment sdram_ptr
    2238                            callr   vtbminc_sdram
    2239                            .endif
    2240                    
    2241 0000c2b0                   PULL    a0,a1,a2,a3,a4,a5,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   44

    2242 0000c2d0     0de0          setc                            ; carry set = success
    2243 0000c2e0     0960          rets
    2244                    
    2245 0000c2f0           vtbmzcall
    2246                            .if SND_DEBUG
    2247                            move    @sdram_ptr,a0,L
    2248                            movi    SDA_ZCALL,a1
    2249                            move    a1,*a0(ACTION)
    2250                            .endif
    2251 0000c2f0     c0fb          jruc    tsnd9
    2252                    
    2253 0000c300           vtbma0hi
    2254 0000c300           vtbma0lo
    2255                            .if SND_DEBUG
    2256                            move    @sdram_ptr,a0,L
    2257                            movi    SDA_BADNDX,a1
    2258                            move    a1,*a0(ACTION)
    2259                            .endif
    2260 0000c300     c0fa          jruc    tsnd9
    2261                    
    2262                            .if SND_DEBUG
    2263                    
    2264                     SUBRP  vtbminc_sdram
    2265                    
    2266                            PUSH    a14
    2267                    
    2268                            move    @sdram_ptr,a14,L
    2269                            addi    SNDCALSIZ,a14
    2270                            cmpi    sdram_ptr,a14
    2271                            jrlt    vtbmis_ok
    2272                            movi    SDRAM,a14
    2273                    
    2274                    vtbmis_ok       move    a14,@sdram_ptr,L
    2275                            PULL    a14
    2276                            rets
    2277                    
    2278                            .endif
    2279                    
    2280                    
    2281                    
    2282                    
    2283                    *****************************************************************************
    2284                    
    2285 0000c310            SUBR   snd_update
    2286                    
    2287                            ;update announcer bits
    2288 0000c310     05a0          move    @vincedur,a0,W
         0000c320 00000160- 
    2289 0000c340     ca04          jrz     ktodno_vince
    2290 0000c350     1420          dec     a0
    2291 0000c360     0580          move    a0,@vincedur,W
         0000c370 00000160- 
    2292 0000c390           ktodno_vince
    2293                    
    2294 0000c390     05a0          move    @randydur,a0,W
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   45

         0000c3a0 00000180- 
    2295 0000c3c0     ca04          jrz     ktodno_randy
    2296 0000c3d0     1420          dec     a0
    2297 0000c3e0     0580          move    a0,@randydur,W
         0000c3f0 00000180- 
    2298 0000c410           ktodno_randy
    2299                    
    2300 0000c410     05a0          move    @howarddur,a0,W
         0000c420 000001a0- 
    2301 0000c440     ca04          jrz     ktodno_howard
    2302 0000c450     1420          dec     a0
    2303 0000c460     0580          move    a0,@howarddur,W
         0000c470 000001a0- 
    2304 0000c490           ktodno_howard
    2305                    
    2306 0000c490     05a0          move    @chan1dur,a0,W                  ; channel ktod1 timing down ?
         0000c4a0 00000020- 
    2307 0000c4c0     ca12          jrz     sup2                            ; nope....
    2308                    ;       inc     a0
    2309                    ;       jrz     sup2
    2310                    ;       dec     a0
    2311 0000c4d0     1420          dec     a0                              ; yes, count this tick !!
    2312 0000c4e0     0580          move    a0,@chan1dur,W                  ; update duration ram
         0000c4f0 00000020- 
    2313 0000c510     cb0d          jrnz    sup2
    2314                    
    2315 0000c520     07a1          move    @chan1scp,a1,L                  ; we doing a tune script ?
         0000c530 00000030- 
    2316 0000c550     ca06          jrz     sup1                            ; no
    2317 0000c560     09e0          movi    chan1pri,a0                     ; a0 = input = chan 1 ram pointer
         0000c570 00000010- 
    2318 0000c590     0d3f          callr   do_tune_commands
         0000c5a0     0047  
    2319 0000c5b0     c003          jruc    sup2
    2320 0000c5c0     0581  sup1    move    a1,@chan1pri,W                  ; no script --> priority = 0
         0000c5d0 00000010- 
    2321                    
    2322 0000c5f0     05a0  sup2    move    @chan2dur,a0,W                  ; channel ktod2 timing down ?
         0000c600 00000070- 
    2323 0000c620     ca12          jrz     sup3                            ; nope....
    2324                    ;       inc     a0
    2325                    ;       jrz     sup3
    2326                    ;       dec     a0
    2327 0000c630     1420          dec     a0                              ; yes, count this tick !!
    2328 0000c640     0580          move    a0,@chan2dur,W                  ; update duration ram
         0000c650 00000070- 
    2329 0000c670     cb0d          jrnz    sup3
    2330 0000c680     07a1          move    @chan2scp,a1,L                  ; a1 = input = chan 2 script point
         0000c690 00000080- 
    2331 0000c6b0     ca06          jrz     sup25                           ; we are not processing a tune !!
    2332 0000c6c0     09e0          movi    chan2pri,a0                     ; a0 = input = chan 2 ram pointer
         0000c6d0 00000060- 
    2333 0000c6f0     0d3f          callr   do_tune_commands
         0000c700     0031  
    2334 0000c710     c003          jruc    sup3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   46

    2335 0000c720     0581  sup25   move    a1,@chan2pri,W                  ; no script --> priority = 0
         0000c730 00000060- 
    2336                    
    2337 0000c750     05a0  sup3    move    @chan3dur,a0,W                  ; channel ktod3 timing down ?
         0000c760 000000c0- 
    2338 0000c780     ca12          jrz     sup4                            ; nope....
    2339                    ;       inc     a0
    2340                    ;       jrz     sup4
    2341                    ;       dec     a0
    2342 0000c790     1420          dec     a0                              ; yes, count this tick !!
    2343 0000c7a0     0580          move    a0,@chan3dur,W                  ; update duration ram
         0000c7b0 000000c0- 
    2344 0000c7d0     cb0d          jrnz    sup4
    2345 0000c7e0     07a1          move    @chan3scp,a1,L                  ; a1 = input = chan 3 script point
         0000c7f0 000000d0- 
    2346 0000c810     ca06          jrz     sup35                           ; we are not processing a tune !!
    2347 0000c820     09e0          movi    chan3pri,a0                     ; a0 = input = chan 3 ram pointer
         0000c830 000000b0- 
    2348 0000c850     0d3f          callr   do_tune_commands
         0000c860     001b  
    2349 0000c870     c003          jruc    sup4
    2350 0000c880     0581  sup35   move    a1,@chan3pri,W                  ; no script --> priority = 0
         0000c890 000000b0- 
    2351                    
    2352 0000c8b0     05a0  sup4    move    @chan4dur,a0,W                  ; channel ktod4 timing down ?
         0000c8c0 00000110- 
    2353 0000c8e0     ca12          jrz     supexit                         ; nope....
    2354                    ;       inc     a0
    2355                    ;       jrz     supexit
    2356                    ;       dec     a0
    2357 0000c8f0     1420          dec     a0                              ; yes, count this tick !!
    2358 0000c900     0580          move    a0,@chan4dur,W                  ; update duration ram
         0000c910 00000110- 
    2359 0000c930     cb0d          jrnz    supexit
    2360 0000c940     07a1          move    @chan4scp,a1,L                  ; a1 = input = chan 4 script point
         0000c950 00000120- 
    2361 0000c970     ca06          jrz     sup45                           ; we are not processing a tune !!
    2362 0000c980     09e0          movi    chan4pri,a0                     ; a0 = input = chan 4 ram pointer
         0000c990 00000100- 
    2363 0000c9b0     0d3f          callr   do_tune_commands
         0000c9c0     0005  
    2364 0000c9d0     0960          rets
    2365 0000c9e0     0581  sup45   move    a1,@chan4pri,W                  ; no script --> priority = 0
         0000c9f0 00000100- 
    2366                    
    2367 0000ca10     0960  supexit rets
    2368                    
    2369                    *****************************************************************************
    2370                    *  do_tune_commands
    2371                    *
    2372                    *  run and execute a list of tune commands until a "sleep" or "endtune"
    2373                    *  is reached
    2374                    *
    2375                    *  input:
    2376                    *       a0 = top of current channel's ram storage
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   47

    2377                    *       a1 = current script position
    2378                    *
    2379                    
    2380 0000ca20            SUBRP  do_tune_commands
    2381 0000ca20     9423          move    *a1+,a3,W                       ; get [parameter,command]
    2382 0000ca30     2603          sll     16,a3
    2383 0000ca40     2e03          srl     16,a3                           ; mask out the "ffff" scum
    2384                    
    2385 0000ca50     4c62          move    a3,a2                           ; save [command,parameter]
    2386 0000ca60     2702          sll     24,a2
    2387 0000ca70     2d02          srl     24,a2
    2388 0000ca80     1422          dec     a2                              ; a2 = command offset
    2389 0000ca90                   X32     a2
    2390                    
    2391 0000caa0     0b22          addi    tune_commands,a2
         0000cab0 0000caf0' 
    2392 0000cad0     8642          move    *a2,a2,L                        ; grab address
    2393 0000cae0     0162          jump    a2                              ; execute
    2394                    
    2395 0000caf0           tune_commands           
    2396 0000caf0 0000cb90'         .long   tc_send         ; 1
    2397 0000cb10 0000cbe0'         .long   tc_setpri       ; 2
    2398 0000cb30 0000cc20'         .long   tc_endtune      ; 3
    2399 0000cb50 0000cca0'         .long   tc_sleep        ; 4
    2400 0000cb70 0000cd10'         .long   tc_send2        ; 5
    2401                    
    2402                    
    2403 0000cb90           tc_send
    2404 0000cb90     2f03          srl     8,a3                    ; yes --> a3 = code to send
    2405 0000cba0     0d5f          calla   SNDSND                  ; send it and return
         0000cbb0 0000d1d0' 
    2406 0000cbd0     c0e4          jruc    do_tune_commands
    2407                    
    2408 0000cbe0           tc_setpri
    2409 0000cbe0     2f03          srl     8,a3                    ; yes --> a3 = priority to set to
    2410 0000cbf0     b061          move    a3,*a1(sndpri),W        ; set it
         0000cc00     0000  
    2411 0000cc10     c0e0          jruc    do_tune_commands
    2412                    
    2413 0000cc20           tc_endtune
    2414 0000cc20     5621          clr     a1
    2415 0000cc30     b020          move    a1,*a0(sndpri),W
         0000cc40     0000  
    2416 0000cc50     b020          move    a1,*a0(snddur),W
         0000cc60     0010  
    2417 0000cc70     b220          move    a1,*a0(sndscp),L        ; clear this channel            
         0000cc80     0020  
    2418 0000cc90     0960          rets
    2419                    
    2420 0000cca0           tc_sleep
    2421 0000cca0     2f03          srl     8,a3                    ; yes --> a3 = sleep time
    2422 0000ccb0     b060          move    a3,*a0(snddur),W        ; store into duration area
         0000ccc0     0010  
    2423 0000ccd0     b220          move    a1,*a0(sndscp),L        ; save current script pointer
         0000cce0     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   48

    2424 0000ccf0     5621          clr     a1                      ; signal --> we are done
    2425 0000cd00     0960          rets
    2426                    
    2427 0000cd10           tc_send2
    2428 0000cd10                   push    a1                      ; save script position
    2429 0000cd20     1501  tcs1    subk    8,a1
    2430 0000cd30     8e22          movb    *a1,a2
    2431 0000cd40     0b42          cmpi    endtune,a2              ; search backwards for "endtune"
         0000cd50     fffc  
    2432 0000cd60     cbfb          jrne    tcs1
    2433 0000cd70     1301          addk    24,a1                   ; a1 ---> channel
    2434 0000cd80     8e22          movb    *a1,a2                  ; a2 = current channel
    2435 0000cd90                   pull    a1                      ; restore script position
    2436                    
    2437 0000cda0     0b42          cmpi    1,a2
         0000cdb0     fffe  
    2438 0000cdc0     ca05          jreq    tcs2
    2439 0000cdd0     0b42          cmpi    2,a2
         0000cde0     fffd  
    2440 0000cdf0     ca02          jreq    tcs2                    ; channel 1 or 2 = player 1
    2441                    
    2442 0000ce00     8e23          movb    *a1,a3                  ; grab it player 2 sound call
    2443 0000ce10     2503          sll     8,a3                    ; adjust for next line of code
    2444                    
    2445 0000ce20     1101  tcs2    addk    8,a1                    ; a1 ---> next command
    2446 0000ce30     2f03          srl     8,a3                    ; yes --> a3 = code to send
    2447 0000ce40     0d3f          callr   SNDSND                  ; send it and return
         0000ce50     0037  
    2448 0000ce60     c0bb          jruc    do_tune_commands
    2449                    
    2450                    
    2451 0000ce70           tc_setpri2
    2452 0000ce70     2f03          srl     8,a3                    ; yes --> a3 = priority to set to
    2453 0000ce80     b061          move    a3,*a1(sndpri),W        ; set it
         0000ce90     0000  
    2454 0000cea0     c0b7          jruc    do_tune_commands
    2455                    
    2456                    *****************************************************************************
    2457                    *  nosounds
    2458                    *
    2459                    *  cancels all sound calls. zeros all priorities and stops all
    2460                    *  currently running tunes.
    2461                    *
    2462                    
    2463 0000ceb0            SUBR   nosounds
    2464                    
    2465 0000ceb0                   PUSH    a0,a1
    2466 0000ced0     5663          clr     a3
    2467 0000cee0     0d3f          callr   SNDSND                  ; silence the music board
         0000cef0     002d  
    2468 0000cf00     0d3f          callr   clear_sound_ram
         0000cf10     0003  
    2469 0000cf20                   PULL    a0,a1
    2470                    
    2471 0000cf40     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   49

    2472                    
    2473                    *****************************************************************************
    2474                    
    2475 0000cf50            SUBRP  clear_sound_ram
    2476                    
    2477 0000cf50     5600          clr     a0
    2478 0000cf60     09e1          movi    chan1ram,a1
         0000cf70 00000010- 
    2479 0000cf90     9001  nos2    move    a0,*a1+,W               ; zero u out !!!
    2480 0000cfa0     0b61          cmpi    chan4scp+32,a1          ; everyone cleared ??
         0000cfb0 fffffebf- 
    2481 0000cfd0     cbfb          jrne    nos2                    ; nope, do more
    2482                    
    2483 0000cfe0     0960          rets
    2484                    
    2485                    *****************************************************************************
    2486                    * Sets the volume of the DCS.
    2487                    * 0a0H=volume (0-255)
    2488                    *
    2489                    
    2490 0000cff0            SUBR   set_volume
    2491                    
    2492 0000cff0                   PUSH    a0,a1,a3
    2493                    
    2494 0000d010     0b80          andi    0FFh,a0                 ;forces value into range
         0000d020 ffffff00  
    2495 0000d040     09c3          movi    55AAh,a3
         0000d050     55aa  
    2496 0000d060     0d3f          callr   send_code_a3
         0000d070     0015  
    2497                            
    2498 0000d080     4c03          move    a0,a3                   ; volume
    2499 0000d090     4c01          move    a0,a1
    2500 0000d0a0     03e1          not     a1                      ; sans volume
    2501 0000d0b0     2701          sll     32-8,a1
    2502 0000d0c0     2d01          srl     32-8,a1
    2503 0000d0d0     2503          sll     8,a3
    2504 0000d0e0     5423          or      a1,a3                   ; a3 = [volume,sans volume]
    2505 0000d0f0     0d3f          callr   send_code_a3
         0000d100     000c  
    2506                    
    2507 0000d110     4c01          move    a0,a1
    2508 0000d120     09c0          movi    ADJVOLUME,a0
         0000d130     001c  
    2509 0000d140     0d5f          calla   PUT_ADJ
         0000d150 00000000! 
    2510 0000d170     0d5f          calla   F_ADC_S
         0000d180 00000000! 
    2511                    
    2512 0000d1a0                   PULL    a0,a1,a3
    2513 0000d1c0     0960          rets
    2514                    
    2515                    *****************************************************************************
    2516                    * Raw hardware sound call.
    2517                    * 0a3H=sound code (0-1ff)
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   50

    2518                    
    2519 0000d1d0            SUBR   SNDSND
    2520 0000d1d0            SUBRP  send_code_a3
    2521                    
    2522 0000d1d0                   PUSH    a0,a1,a2,a3,a4
    2523 0000d1f0     05a0          move    @SOUNDSUP,a0            ; are we allowed ??
         0000d200 000001b0- 
    2524 0000d220     cb16          jrnz    sendx                   ; no
    2525                    
    2526 0000d230     4c63          move    a3,a3                   ; is it a null call (negative)?
    2527 0000d240     ce14          jrn     sendx
    2528                    
    2529 0000d250     4c60          move    a3,a0
    2530 0000d260     2603          sll     32-16,a3
    2531 0000d270     2d03          srl     32-8,a3                 ; a3 = high byte
    2532                    *
    2533                    * send high byte
    2534                    *
    2535 0000d280     07a4          move    @_sound_addr,a4,L
         0000d290 00000000! 
    2536 0000d2b0     8064          move    a3,*a4
    2537                    
    2538 0000d2c0     1842          movk    2,a2
    2539 0000d2d0     0d82          dsj     a2,$                    ; time for signal to get through
         0000d2e0     fffe  
    2540 0000d2f0     0d3f          callr   poll_sirq
         0000d300     000b  
    2541                    *
    2542                    * send low byte
    2543                    *
    2544 0000d310     2700          sll     32-8,a0
    2545 0000d320     2d00          srl     32-8,a0                 ; a3 = low byte
    2546 0000d330     07a4          move    @_sound_addr,a4,L
         0000d340 00000000! 
    2547 0000d360     8004          move    a0,*a4
    2548                    
    2549 0000d370     0d3f          callr   poll_sirq
         0000d380     0003  
    2550                    
    2551 0000d390           sendx   PULL    a0,a1,a2,a3,a4
    2552 0000d3b0     0960          rets
    2553                    
    2554                    *****************************************************************************
    2555                    * Poll sound IRQ.  When IRQ goes high, sound board is ready for next call.
    2556                    * Do timeout so sound board can't screw things up.
    2557                    *
    2558                    
    2559 0000d3c0            SUBRP  poll_sirq
    2560 0000d3c0     09c4          movi    390/3,a4                ; 180 micros max firq delay on snd board
         0000d3d0     0082  
    2561                    
    2562                    ;feeipoll3      movb    @SOUNDIRQ+B_SIRQ-7,a1
    2563                    
    2564 0000d3e0           feeipoll3
    2565 0000d3e0     07a1          move    @_soundirq_addr,a1,L
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   51

         0000d3f0 00000000! 
    2566 0000d410     0b01          addi    (B_SIRQ-7),a1
         0000d420     0004  
    2567 0000d430     8e21          movb    *a1,a1
    2568                    
    2569 0000d440     ce01          jrn     feeipoll9                       ; done?
    2570 0000d450     3d04          dsj     a4,feeipoll3
    2571 0000d460     0960  feeipoll9       rets
    2572                    
    2573                    *****************************************************************************
    2574                    
    2575              000b  VOLDN   .equ    11
    2576              000c  VOLUP   .equ    12
    2577                    
    2578 0000d470            SUBR   VOLBTN_PRESS
    2579                    
    2580                            ;in diagnostics?
    2581 0000d470     05a0          move    @GAMSTATE,a0,W
         0000d480 00000000! 
    2582 0000d4a0     ce54          jrn     lfhgdone
    2583                    
    2584                            ;already adjusting?
    2585 0000d4b0     09c0          movi    VOLADJ_PID,a0
         0000d4c0     0128  
    2586 0000d4d0     09e1          movi    0FFFFh,a1
         0000d4e0 0000ffff  
    2587 0000d500     0d5f          calla   EXISTP
         0000d510 00000000! 
    2588 0000d530     cb4b          jrnz    lfhgdone
    2589                    
    2590                            ;okay, adjust
    2591 0000d540     09ce          movi    VOLADJ_PID,a14
         0000d550     0128  
    2592 0000d560     b1cd          move    a14,*a13(PROCID),W
         0000d570     0020  
    2593                    
    2594                    ;       move    @COINS,a0
    2595 0000d580     07a0          move    @_coin_addr,a0,L
         0000d590 00000000! 
    2596 0000d5b0     8400          move    *a0,a0
    2597 0000d5c0     1e80          btst    VOLDN,a0
    2598 0000d5d0     ca22          jrz     lfhgvoldn_loop
    2599                            
    2600                    
    2601 0000d5e0           lfhgvolup_loop
    2602                            ;increment the volume
    2603 0000d5e0     09c0          movi    ADJVOLUME,a0
         0000d5f0     001c  
    2604 0000d600     0d5f          calla   GET_ADJ
         0000d610 00000000! 
    2605 0000d630                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    2606 0000d6c0     1020          inc     a0
    2607 0000d6d0     0b40          cmpi    255,a0
         0000d6e0     ff00  
    2608 0000d6f0     c602          jrle    lfhgup_okay
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   52

    2609 0000d700     09c0          movi    255,a0
         0000d710     00ff  
    2610 0000d720           lfhgup_okay
    2611 0000d720     0d5f          calla   set_volume
         0000d730 0000cff0' 
    2612 0000d750                   SLEEPK  1
    2613                    
    2614                            ;if the vol+ button is no longer down, die
    2615                    ;       move    @COINS,a0
    2616 0000d790     07a0          move    @_coin_addr,a0,L
         0000d7a0 00000000! 
    2617 0000d7c0     8400          move    *a0,a0
    2618 0000d7d0     1e60          btst    VOLUP,a0
    2619 0000d7e0     cb20          jrnz    lfhgdone
    2620 0000d7f0     c0de          jruc    lfhgvolup_loop
    2621                    
    2622 0000d800           lfhgvoldn_loop
    2623                            ;decrement the volume
    2624 0000d800     09c0          movi    ADJVOLUME,a0
         0000d810     001c  
    2625 0000d820     0d5f          calla   GET_ADJ
         0000d830 00000000! 
    2626 0000d850                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    2627 0000d8e0     1420          dec     a0
    2628 0000d8f0     cf01          jrnn    lfhgdn_okay
    2629 0000d900     5600          clr     a0
    2630 0000d910           lfhgdn_okay
    2631 0000d910     0d5f          calla   set_volume
         0000d920 0000cff0' 
    2632 0000d940                   SLEEPK  1
    2633                    
    2634                            ;if the vol- button is no longer down, die
    2635                    ;       move    @COINS,a0
    2636 0000d980     07a0          move    @_coin_addr,a0,L
         0000d990 00000000! 
    2637 0000d9b0     8400          move    *a0,a0
    2638 0000d9c0     1e80          btst    VOLDN,a0
    2639 0000d9d0     cb01          jrnz    lfhgdone
    2640 0000d9e0     c0e1          jruc    lfhgvoldn_loop
    2641                    
    2642 0000d9f0           lfhgdone
    2643 0000d9f0                   DIE
    2644                    
    2645                    ;missing KILL_HOWARD
    2646                    
    2647                    ;missing DO_HOWARD
    2648 0000da20           VINCE_START_GAME
    2649 0000da20     09e2          MOVI    MATCHUP_TAB,A2
         0000da30 0000e290' 
    2650 0000da50     05a1          MOVE    @HCOUNT,A1
         0000da60 c00001c0  
    2651 0000da80     2fe1          SRL     1,A1
    2652 0000da90     c903          JRNC    START_CHOSEN
    2653 0000daa0     09e2          MOVI    SQUARED_TAB,A2
         0000dab0 0000e200' 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   53

    2654 0000dad0           START_CHOSEN
    2655 0000dad0     09e3          movi    index1,a3
         0000dae0 00000000! 
    2656 0000db00     09e8          MOVI    index2,a8
         0000db10 00000000! 
    2657 0000db30     05a0          MOVE    @PSTATUS2,A0
         0000db40 00000000! 
    2658 0000db60     0b40          CMPI    3,A0
         0000db70     fffc  
    2659 0000db80     ca3f          JREQ    USE_BOTH_INDEXES
    2660 0000db90     09e4          MOVI    index1,a4
         0000dba0 00000000! 
    2661 0000dbc0     2fe0          SRL     1,A0
    2662 0000dbd0     c803          JRC     INDEX_USE_SET
    2663 0000dbe0     09e4          MOVI    index2,a4
         0000dbf0 00000000! 
    2664 0000dc10           INDEX_USE_SET
    2665 0000dc10     0d5f          CALLA   MAKE_ANNOUNCEMENT
         0000dc20 0000e060' 
    2666 0000dc40     07a4          MOVE    @process_ptrs+020h,a4,L
         0000dc50 00000020! 
    2667 0000dc70     0b04          ADDI    WRESTLERNUM,A4
         0000dc80     0590  
    2668 0000dc90     09e2          MOVI    VERSUS_TAB,A2
         0000dca0 0000e170' 
    2669 0000dcc0     0d5f          CALLA   MAKE_ANNOUNCEMENT
         0000dcd0 0000e060' 
    2670 0000dcf0     07a4          MOVE    @process_ptrs+040h,a4,L
         0000dd00 00000040! 
    2671 0000dd20     ca22          JRZ     NO_MORE_OPPS
    2672 0000dd30     07a2          MOVE    @process_ptrs+060h,a2,L
         0000dd40 00000060! 
    2673 0000dd60     cb05          JRNZ    JUST_VERSUS
    2674 0000dd70     09c0          MOVI    133H,A0
         0000dd80     0133  
    2675 0000dd90     0d5f          CALLA   ADD_VOICE
         0000dda0 0000e720' 
    2676 0000ddc0           JUST_VERSUS
    2677 0000ddc0     0b04          ADDI    WRESTLERNUM,A4
         0000ddd0     0590  
    2678 0000dde0     09e2          MOVI    WHICH_WRESTLER,A2
         0000ddf0 0000e0e0' 
    2679 0000de10     0d5f          CALLA   MAKE_ANNOUNCEMENT
         0000de20 0000e060' 
    2680 0000de40     07a4          MOVE    @process_ptrs+060h,a4,L
         0000de50 00000060! 
    2681 0000de70     ca0d          JRZ     NO_MORE_OPPS
    2682 0000de80     09c0          MOVI    133H,A0
         0000de90     0133  
    2683 0000dea0     0d5f          CALLA   ADD_VOICE
         0000deb0 0000e720' 
    2684 0000ded0     0b04          ADDI    WRESTLERNUM,A4
         0000dee0     0590  
    2685 0000def0     09e2          MOVI    WHICH_WRESTLER,A2
         0000df00 0000e0e0' 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   54

    2686 0000df20     0d5f          CALLA   MAKE_ANNOUNCEMENT
         0000df30 0000e060' 
    2687 0000df50           NO_MORE_OPPS
    2688 0000df50                   DIE
    2689                    
    2690 0000df80           USE_BOTH_INDEXES
    2691 0000df80     4c64          MOVE    A3,A4
    2692 0000df90     0d5f          CALLA   MAKE_ANNOUNCEMENT
         0000dfa0 0000e060' 
    2693 0000dfc0     4d04          MOVE    A8,A4
    2694 0000dfd0     09e2          MOVI    VERSUS_TAB,A2
         0000dfe0 0000e170' 
    2695 0000e000     0d5f          CALLA   MAKE_ANNOUNCEMENT
         0000e010 0000e060' 
    2696 0000e030                   DIE
    2697                    
    2698 0000e060           MAKE_ANNOUNCEMENT
    2699 0000e060     8481          MOVE    *A4,A1
    2700 0000e070     2481          SLL     4,A1
    2701 0000e080     4041          ADD     A2,A1
    2702 0000e090     8420          MOVE    *A1,A0
    2703 0000e0a0     0d5f          CALLA   ADD_VOICE
         0000e0b0 0000e720' 
    2704 0000e0d0     0960          RETS
    2705                    
    2706                    ;Bret
    2707                    ;Razor
    2708                    ;Taker
    2709                    ;Yoko
    2710                    ;Shawn
    2711                    ;Bam Bam
    2712                    ;Doink
    2713                    ;spare
    2714                    ;Lex
    2715 0000e0e0           WHICH_WRESTLER
    2716 0000e0e0     0131          .WORD   131H
    2717 0000e0f0     012d          .WORD   12DH
    2718 0000e100     012f          .WORD   12FH
    2719 0000e110     0132          .WORD   132H
    2720 0000e120     012c          .WORD   12CH
    2721 0000e130     012e          .WORD   12EH
    2722 0000e140     012b          .WORD   12BH
    2723 0000e150     0000          .WORD   0
    2724 0000e160     0130          .WORD   130H
    2725                    
    2726 0000e170           VERSUS_TAB
    2727 0000e170     0127          .WORD   127h
    2728 0000e180     0123          .WORD   123h
    2729 0000e190     0125          .WORD   125h
    2730 0000e1a0     0128          .WORD   128h
    2731 0000e1b0     0122          .WORD   122h
    2732 0000e1c0     0124          .WORD   124h
    2733 0000e1d0     0121          .WORD   121h
    2734 0000e1e0     0000          .WORD   0
    2735 0000e1f0     0126          .WORD   126h
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   55

    2736                    
    2737 0000e200           SQUARED_TAB
    2738 0000e200     011f          .WORD   11Fh
    2739 0000e210     011b          .WORD   11Bh
    2740 0000e220     011d          .WORD   11Dh
    2741 0000e230     0120          .WORD   120h
    2742 0000e240     011a          .WORD   11Ah
    2743 0000e250     011c          .WORD   11Ch
    2744 0000e260     0119          .WORD   119h
    2745 0000e270     0000          .WORD   0
    2746 0000e280     011e          .WORD   11Eh
    2747                    
    2748 0000e290           MATCHUP_TAB
    2749 0000e290     0117          .WORD   117h
    2750 0000e2a0     0113          .WORD   113h
    2751 0000e2b0     0115          .WORD   115h
    2752 0000e2c0     0118          .WORD   118h
    2753 0000e2d0     0112          .WORD   112h
    2754 0000e2e0     0114          .WORD   114h
    2755 0000e2f0     0111          .WORD   111h
    2756 0000e300     0000          .WORD   0
    2757 0000e310     0116          .WORD   116h
    2758                    
    2759 0000e320           VINCE_START_ROUND2_3
    2760 0000e320     09c0          MOVI    8,A0
         0000e330     0008  
    2761 0000e340     0d5f          CALLA   RNDRNG0
         0000e350 00000000! 
    2762 0000e370     4c01          MOVE    A0,A1
    2763 0000e380     24a1          SLL     5,A1
    2764 0000e390     0b21          ADDI    RAND_START_2_3,A1
         0000e3a0 0000e460' 
    2765 0000e3c0     9420          MOVE    *A1+,A0
    2766 0000e3d0     0d5f          CALLA   ADD_VOICE
         0000e3e0 0000e720' 
    2767 0000e400     8420          MOVE    *A1,A0
    2768 0000e410     ca03          JRZ     NO_TWO_STEP
    2769 0000e420     0d5f          CALLA   ADD_VOICE
         0000e430 0000e720' 
    2770 0000e450           NO_TWO_STEP
    2771 0000e450     0960          RETS
    2772                    
    2773 0000e460           RAND_START_2_3
    2774 0000e460     0134          .WORD   134H,0
    2775 0000e480     0135          .WORD   135H,0
    2776 0000e4a0     0136          .WORD   136H,0
    2777 0000e4c0     0138          .WORD   138H,137H
    2778 0000e4e0     0138          .WORD   138H,139H
    2779 0000e500     013a          .WORD   13AH,0
    2780 0000e520     013b          .WORD   13BH,0
    2781 0000e540     02d9          .WORD   2D9H,0
    2782 0000e560     02da          .WORD   2DAH,0
    2783                    
    2784                    ;**************************************************************************
    2785                    ;*                                                                                            *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   56

    2786                    ;* TABLES ARE SET UP AS FOLLOWS -                                                                *
    2787                    ;*      WORD x(NUMBER OF TABLE ENTRIES -1), TABLE ENTRY SIZE                     *
    2788                    ;* LABEL                                                                                                
    2789                    ;*      WORD TABLE ENTRY 1                                                                       *
    2790                    ;*      ...                                                                                      *
    2791                    ;*      WORD TABLE ENTRY x                                                                       *
    2792                    ;*                                                                                               *
    2793                    ;* TABLES CAN HAVE MORE THAN ONE CALL PER ENTRY                                          *
    2794                    ;* CALL EITHER ADD_TO_QUEUE OF ADD_IF_SILENT WITH TABLE ADDRESS IN A2    *
    2795                    ;* CALL WITH A0 SET TO RANDOMNESS OF ACTUALLY MAKING A SOUND CALL                *
    2796                    ;* A0 = 0 NO CHANCE, A0=1000 100% CHANCE                                                         *
    2797                    ;* IF CALLING A TABLE WITH EITHER 'GIVE CREDIT' OR                                       *
    2798                    ;* 'VERY_IMPRESSIVE' IN IT, A5 MUST REFLECT THE ATTACKING WRESTLER NUMBER *
    2799                    ;*                                                                                            *
    2800                    ;**************************************************************************
    2801                    
    2802 0000e580           RESET_VOICE_QUEUE
    2803 0000e580     09e1          MOVI    ANNOUNCE_QUEUE,A1
         0000e590 00000230- 
    2804 0000e5b0     0781          MOVE    A1,@NEXT_ANN_QUEUE,L
         0000e5c0 000004b0- 
    2805 0000e5e0     0781          MOVE    A1,@CURRENT_ANN_QUEUE,L
         0000e5f0 000004d0- 
    2806 0000e610     0960          RETS
    2807                    
    2808 0000e620           IF_SILENT_ADD_VOICE
    2809 0000e620     098f          MMTM    SP,A1,A2
         0000e630     6000  
    2810 0000e640     07a1          MOVE    @NEXT_ANN_QUEUE,A1,L
         0000e650 000004b0- 
    2811 0000e670     07a2          MOVE    @CURRENT_ANN_QUEUE,A2,L
         0000e680 000004d0- 
    2812 0000e6a0     4822          CMP     A1,A2
    2813 0000e6b0     cb22          JRNE    NO_ADD
    2814 0000e6c0     0d3f          CALLR   WHO_IS_IT
         0000e6d0     fc83  
    2815 0000e6e0     c801          JRC     NOT_ANNOUNCER
    2816 0000e6f0     cb1e          JRNZ    NO_ADD
    2817 0000e700           NOT_ANNOUNCER
    2818 0000e700     09af          MMFM    SP,A1,A2
         0000e710     0006  
    2819 0000e720           ADD_VOICE
    2820 0000e720                   PUSH    A1
    2821 0000e730     07a1          MOVE    @NEXT_ANN_QUEUE,A1,L
         0000e740 000004b0- 
    2822                    
    2823 0000e760     0b40          CMPI    (triple_end-triple_sndtab)/32,A0
         0000e770     fcfc  
    2824 0000e780     c711          JRGT    OUT_OF_RANGE_SOUND
    2825 0000e790     4c00          MOVE    A0,A0
    2826 0000e7a0     ce0f          JRN     OUT_OF_RANGE_SOUND
    2827                    
    2828                    ;       ;temp!
    2829                    ;       cmpi    9Eh,a0
    2830                    ;       jrne    lfhgfoo
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   57

    2831                    ;       LOCKUP
    2832                    ;lfhgfoo
    2833                    
    2834 0000e7b0     9001          MOVE    A0,*A1+
    2835 0000e7c0     0b61          CMPI    EOF_ANNOUNCE_QUEUE,A1
         0000e7d0 fffffb4f- 
    2836 0000e7f0     cb03          JRNE    NO_RESET_QUEUE
    2837 0000e800     09e1          MOVI    ANNOUNCE_QUEUE,A1
         0000e810 00000230- 
    2838 0000e830           NO_RESET_QUEUE
    2839 0000e830     0781          MOVE    A1,@NEXT_ANN_QUEUE,L
         0000e840 000004b0- 
    2840 0000e860                   PULL    A1
    2841 0000e870     5600          CLR     A0
    2842 0000e880     4c00          MOVE    A0,A0
    2843 0000e890     0960          RETS
    2844                    
    2845 0000e8a0           OUT_OF_RANGE_SOUND
    2846 0000e8a0                   PULL    a1
    2847                            .IF     DEBUG
    2848                            LOCKUP
    2849                            .ENDIF
    2850 0000e8b0     09c0          MOVI    -1,A0
         0000e8c0     ffff  
    2851 0000e8d0     0960          RETS
    2852                    
    2853 0000e8e0           NO_ADD
    2854 0000e8e0     09af          MMFM    SP,A1,A2
         0000e8f0     0006  
    2855 0000e900     09c0          MOVI    -1,A0
         0000e910     ffff  
    2856 0000e920     0960          RETS
    2857                    
    2858 0000e930            SUBR   ANNOUNCE_VOICE
    2859 0000e930     07a1          MOVE    @NEXT_ANN_QUEUE,A1,L
         0000e940 000004b0- 
    2860 0000e960     07a2          MOVE    @CURRENT_ANN_QUEUE,A2,L
         0000e970 000004d0- 
    2861 0000e990     4822          CMP     A1,A2
    2862 0000e9a0     ca21          JREQ    NOTHING_TO_DO_NOW
    2863                    
    2864                    
    2865                    ;       move    @GAMSTATE,a0
    2866                    ;       subk    INAMODE,a0
    2867                    ;       jrnz    lfhgno
    2868                    ;Check AMODE SOUND ON CMOS flag
    2869                    ;       ADJUST  ADJMUSIC
    2870                    ;       jrnz    NOTHING_TO_DO_NOW
    2871                    ;lfhgno
    2872                    
    2873                    
    2874                    
    2875 0000e9b0     9440          MOVE    *A2+,A0
    2876 0000e9c0     ce26          JRN     TIME_TO_DIE
    2877 0000e9d0     0b62          CMPI    EOF_ANNOUNCE_QUEUE,A2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   58

         0000e9e0 fffffb4f- 
    2878 0000ea00     cb03          JRNE    NO_RESET_QUEUE2
    2879 0000ea10     09e2          MOVI    ANNOUNCE_QUEUE,A2
         0000ea20 00000230- 
    2880 0000ea40           NO_RESET_QUEUE2
    2881 0000ea40     0782          MOVE    A2,@CURRENT_ANN_QUEUE,L
         0000ea50 000004d0- 
    2882 0000ea70     0b40          CMPI    0E0H,A0
         0000ea80     ff1f  
    2883 0000ea90     c409          JRLT    DO_TRIPLE_SOUND
    2884 0000eaa0     0d3f          CALLR   FIND_AND_KILL_ENDLESS
         0000eab0     06aa  
    2885 0000eac0     0d5f          CALLA   announcer_sound
         0000ead0 0000b2c0' 
    2886 0000eaf0     0d5f          CALLA   PRCSLP
         0000eb00 00000000! 
    2887 0000eb20     c0e0          JRUC    ANNOUNCE_VOICE
    2888                    
    2889 0000eb30           DO_TRIPLE_SOUND
    2890 0000eb30     0d3f          CALLR   FIND_AND_KILL_ENDLESS
         0000eb40     06a1  
    2891 0000eb50     0d5f          CALLA   triple_sound
         0000eb60 0000b990' 
    2892 0000eb80     0d5f          CALLA   PRCSLP
         0000eb90 00000000! 
    2893 0000ebb0     c0d7          JRUC    ANNOUNCE_VOICE
    2894                    
    2895 0000ebc0           NOTHING_TO_DO_NOW
    2896 0000ebc0                   SLOOP   1,ANNOUNCE_VOICE
    2897                    
    2898 0000ec30           TIME_TO_DIE
    2899 0000ec30     0b62          CMPI    EOF_ANNOUNCE_QUEUE,A2
         0000ec40 fffffb4f- 
    2900 0000ec60     cb03          JRNE    NO_RESET_QUEUE3
    2901 0000ec70     09e2          MOVI    ANNOUNCE_QUEUE,A2
         0000ec80 00000230- 
    2902 0000eca0           NO_RESET_QUEUE3
    2903 0000eca0     0782          MOVE    A2,@CURRENT_ANN_QUEUE,L
         0000ecb0 000004d0- 
    2904 0000ecd0                   SLOOP   1,ANNOUNCE_VOICE
    2905                    
    2906                    *******************************************************************************
    2907                    
    2908 0000ed40                   bssx    which_table,32
    2909 0000ed40                   bssx    which_one_first,16
    2910                    
    2911 0000ed40           ADD_TO_QUEUE
    2912 0000ed40     09d3          MOVI    -1,B3
         0000ed50     ffff  
    2913 0000ed60     c001          JRUC    IN_HERE
    2914 0000ed70           ADD_IF_SILENT
    2915 0000ed70     5673          CLR     B3
    2916 0000ed80           IN_HERE
    2917 0000ed80     0782          move    a2,@which_table,L
         0000ed90 00000550- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   59

    2918                    
    2919 0000edb0     098f          MMTM    SP,A0,A1,A2,A3
         0000edc0     f000  
    2920 0000edd0     b443          MOVE    *A2(-050H),A3
         0000ede0     ffb0  
    2921 0000edf0     ca04          JRZ     NO_RESET_REPEAT
    2922 0000ee00     5663          CLR     A3
    2923 0000ee10     0583          MOVE    A3,@REPEAT_STATE
         0000ee20 00000220- 
    2924 0000ee40           NO_RESET_REPEAT
    2925 0000ee40     b643          MOVE    *A2(-040H),A3,L
         0000ee50     ffc0  
    2926 0000ee60     ca03          JRZ     NO_CROWD
    2927 0000ee70     0d5f          CALLA   DO_CROWD_ANYWAY
         0000ee80 0000f730' 
    2928 0000eea0           NO_CROWD
    2929 0000eea0     05a4          MOVE    @REPEAT_STATE,A4
         0000eeb0 00000220- 
    2930 0000eed0     ca04          JRZ     NO_DO_REPEAT
    2931 0000eee0     09c0          MOVI    REPEAT_MODE,A0
         0000eef0     fff9  
    2932 0000ef00     1a03          MOVK    010H,A3
    2933 0000ef10     c011          JRUC    DO_REPEAT
    2934 0000ef20           NO_DO_REPEAT
    2935 0000ef20     0d5f          CALLA   RNDPER
         0000ef30 00000000! 
    2936 0000ef50     c247          JRLS    NO_MORE
    2937 0000ef60     b443          MOVE    *A2(-010H),A3
         0000ef70     fff0  
    2938 0000ef80     b440          MOVE    *A2(-020H),A0
         0000ef90     ffe0  
    2939 0000efa0     0d5f          CALLA   RNDRNG0
         0000efb0 00000000! 
    2940 0000efd0     0580          move    a0,@which_one_first
         0000efe0 00000570- 
    2941 0000f000     5e60          MPYU    A3,A0
    2942 0000f010     4041          ADD     A2,A1
    2943 0000f020           ADD_AGAIN
    2944 0000f020     9420          MOVE    *A1+,A0
    2945 0000f030           DO_REPEAT
    2946 0000f030     0b40          CMPI    END_GAME_STUFF,A0
         0000f040     0002  
    2947 0000f050     ca00          JREQ    DO_END_STUFF
         0000f060     00fe  
    2948 0000f070     0b40          CMPI    GIVE_CREDIT,A0
         0000f080     0000  
    2949 0000f090     ca0f          JREQ    SPECIAL_SET_UP
    2950 0000f0a0     0b40          CMPI    VERY_IMPRESSIVE,A0
         0000f0b0     0001  
    2951 0000f0c0     ca0c          JREQ    SPECIAL_SET_UP
    2952 0000f0d0     0b40          CMPI    IT_DOESNT_LOOK_GOOD,A0
         0000f0e0     0003  
    2953 0000f0f0     ca09          JREQ    SPECIAL_SET_UP
    2954 0000f100     0b40          CMPI    R_IMPRESSIVE_MOVE,A0
         0000f110     0004  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   60

    2955 0000f120     ca06          JREQ    SPECIAL_SET_UP
    2956 0000f130     0b40          CMPI    GIDDUP_MODE,A0
         0000f140     0005  
    2957 0000f150     ca03          JREQ    SPECIAL_SET_UP
    2958 0000f160     0b40          CMPI    REPEAT_MODE,A0
         0000f170     0006  
    2959 0000f180     cb06          JRNE    NO_SPECIAL_SET_UP
    2960 0000f190           SPECIAL_SET_UP
    2961 0000f190     0d3f          CALLR   SET_UP_PERSONAL_CALL
         0000f1a0     0091  
    2962 0000f1b0     0d3f          CALLR   ARE_WE_REPEATING
         0000f1c0     0028  
    2963 0000f1d0     c822          JRC     SET_NO_MORE
    2964 0000f1e0     c007          JRUC    DO_THE_SPEECH
    2965 0000f1f0           NO_SPECIAL_SET_UP
    2966 0000f1f0     0d3f          CALLR   ARE_WE_REPEATING
         0000f200     0024  
    2967 0000f210     c904          JRNC    DO_THE_SPEECH
    2968 0000f220           NO_SPECIAL_END_STUFF
    2969 0000f220     0be1          SUBI    010H,A1
         0000f230     ffef  
    2970 0000f240     4061          ADD     A3,A1
    2971 0000f250     c0dc          JRUC    ADD_AGAIN
    2972                    
    2973 0000f260           DO_THE_SPEECH
    2974 0000f260     0d3f          CALLR   ADD_SPEECH_TO_LIST
         0000f270     002f  
    2975 0000f280     4c73          MOVE    B3,B3
    2976 0000f290     cb04          JRNZ    ADD_ANYWAY
    2977                    **************************************
    2978                            .IF DEBUG
    2979                            MOVE    A0,A0
    2980                            JRNN    OKAY
    2981                            LOCKUP
    2982                    OKAY
    2983                            .ENDIF
    2984                    **************************************
    2985 0000f2a0     0d5f          CALLA   IF_SILENT_ADD_VOICE
         0000f2b0 0000e620' 
    2986 0000f2d0     c003          JRUC    SPEECH_ADDED
    2987 0000f2e0           ADD_ANYWAY
    2988 0000f2e0     0d5f          CALLA   ADD_VOICE
         0000f2f0 0000e720' 
    2989 0000f310           SPEECH_ADDED
    2990 0000f310     ce0b          JRN     NO_MORE
    2991 0000f320     0be3          SUBI    010H,A3
         0000f330     ffef  
    2992 0000f340     ca08          JRZ     NO_MORE
    2993 0000f350           ADD_AGAIN3
    2994 0000f350     9420          MOVE    *A1+,A0
    2995 0000f360     ca06          JRZ     NO_MORE
    2996 0000f370     0d5f          CALLA   ADD_VOICE
         0000f380 0000e720' 
    2997 0000f3a0     0be3          SUBI    010H,A3
         0000f3b0     ffef  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   61

    2998 0000f3c0     cbf8          JRNZ    ADD_AGAIN3
    2999 0000f3d0           NO_MORE
    3000 0000f3d0     09af          MMFM    SP,A0,A1,A2,A3
         0000f3e0     000f  
    3001 0000f3f0     0960          RETS
    3002 0000f400           SET_NO_MORE
    3003 0000f400     09c0          MOVI    -1,A0
         0000f410     ffff  
    3004 0000f420     09af          MMFM    SP,A0,A1,A2,A3
         0000f430     000f  
    3005 0000f440     0960          RETS
    3006                    
    3007                    
    3008 0000f450           ARE_WE_REPEATING
    3009 0000f450                   PUSH    A1,A2,A3
    3010 0000f470     09e1          MOVI    LAST_VOICE,A1
         0000f480 000001c0- 
    3011 0000f4a0     1883          MOVK    4,A3
    3012 0000f4b0           NEXT_SPEECH
    3013 0000f4b0     9422          MOVE    *A1+,A2
    3014 0000f4c0     4802          CMP     A0,A2
    3015 0000f4d0     ca05          JREQ    YES_WE_ARE
    3016 0000f4e0     3c83          DSJS    A3,NEXT_SPEECH
    3017 0000f4f0                   PULL    A1,A2,A3
    3018 0000f510     0320          CLRC
    3019 0000f520     0960          RETS
    3020 0000f530           YES_WE_ARE
    3021 0000f530                   PULL    A1,A2,A3
    3022 0000f550     0de0          SETC
    3023 0000f560     0960          RETS
    3024                    
    3025 0000f570           ADD_SPEECH_TO_LIST
    3026 0000f570                   PUSH    A1
    3027 0000f580     07a1          MOVE    @WHICH_LAST_VOICE,A1,L
         0000f590 00000200- 
    3028 0000f5b0     1201          ADDK    16,A1
    3029 0000f5c0     0b61          CMPI    WHICH_LAST_VOICE,A1
         0000f5d0 fffffdff- 
    3030 0000f5f0     cb03          JRNE    NO_RESET_SPEECH_REPEAT
    3031 0000f600     09e1          MOVI    LAST_VOICE,A1
         0000f610 000001c0- 
    3032 0000f630           NO_RESET_SPEECH_REPEAT
    3033 0000f630     0781          MOVE    A1,@WHICH_LAST_VOICE,L
         0000f640 00000200- 
    3034 0000f660     8001          MOVE    A0,*A1
    3035 0000f670                   PULL    A1
    3036 0000f680     0960          RETS
    3037                    
    3038 0000f690           CLEAR_SPEECH_REPEAT
    3039 0000f690     09e1          MOVI    LAST_VOICE,A1
         0000f6a0 000001c0- 
    3040 0000f6c0     0781          MOVE    A1,@WHICH_LAST_VOICE,L
         0000f6d0 00000200- 
    3041 0000f6f0     5600          CLR     A0
    3042 0000f700     9201          MOVE    A0,*A1+,L
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   62

    3043 0000f710     9201          MOVE    A0,*A1+,L
    3044 0000f720     0960          RETS
    3045                    
    3046 0000f730           DO_CROWD_ANYWAY
    3047 0000f730     098f          MMTM    SP,A0,A1,A3,A5
         0000f740     d400  
    3048 0000f750     b460          MOVE    *A3(-010H),A0
         0000f760     fff0  
    3049 0000f770     0d5f          CALLA   RNDRNG0
         0000f780 00000000! 
    3050 0000f7a0     24c0          SLL     6,A0
    3051 0000f7b0     4060          ADD     A3,A0
    3052 0000f7c0     4c04          MOVE    A0,A4
    3053                    ;       MOVI    CROWD_SOUND_PID,A0
    3054                    ;       MOVI    -1,A1
    3055                    ;       CALLA   EXISTP
    3056 0000f7d0     05a0          move    @crowd_dummy_exists,a0
         0000f7e0 00000510- 
    3057 0000f800     cb0f          JRNZ    NO_CROWD_ALREADY_GOING
    3058 0000f810     4c80          MOVE    A4,A0
    3059 0000f820     8403          MOVE    *A0,A3
    3060 0000f830     0d5f          CALLA   SNDSND
         0000f840 0000d1d0' 
    3061 0000f860     b409          MOVE    *A0(010H),A9
         0000f870     0010  
    3062 0000f880                   CREATE  CROWD_SOUND_PID,CROWD_DUMMY
    3063 0000f900           NO_CROWD_ALREADY_GOING
    3064 0000f900     4c80          MOVE    A4,A0
    3065 0000f910     b403          MOVE    *A0(020H),A3
         0000f920     0020  
    3066 0000f930     1fa3          BTST    B_RANDOM,A3
    3067 0000f940     ca02          JRZ     NO_NEED_FOR_A4
    3068 0000f950     b404          MOVE    *A0(030H),A4
         0000f960     0030  
    3069 0000f970           NO_NEED_FOR_A4
    3070 0000f970     0d5f          CALLA   crowd_cheer
         0000f980 00000000! 
    3071 0000f9a0     09af          MMFM    SP,A0,A1,A3,A5
         0000f9b0     002b  
    3072 0000f9c0     0960          RETS
    3073                    
    3074 0000f9d0           CROWD_DUMMY
    3075 0000f9d0     1820          movk    1,a0
    3076 0000f9e0     0580          move    a0,@crowd_dummy_exists
         0000f9f0 00000510- 
    3077 0000fa10     4d20          MOVE    A9,A0
    3078 0000fa20     0d5f          CALLA   PRCSLP
         0000fa30 00000000! 
    3079 0000fa50     5600          clr     a0
    3080 0000fa60     0580          move    a0,@crowd_dummy_exists
         0000fa70 00000510- 
    3081 0000fa90                   DIE
    3082                    
    3083 0000fac0           SET_UP_PERSONAL_CALL
    3084 0000fac0                   PUSH    A1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   63

    3085 0000fad0     2485          SLL     4,A5
    3086 0000fae0     09e1          MOVI    GIVE_CREDIT_TO,A1
         0000faf0 00010790' 
    3087 0000fb10     1020          INC     A0
    3088 0000fb20     ca30          JRZ     MADE_RIGHT_TABLE
    3089 0000fb30     09e1          MOVI    VERY_IMPRESSIVE_MOVE,A1
         0000fb40 000105e0' 
    3090 0000fb60     1020          INC     A0
    3091 0000fb70     ca2b          JRZ     MADE_RIGHT_TABLE
    3092 0000fb80     09e1          MOVI    IT_DOESNT_LOOK_GOOD_FOR,A1
         0000fb90 00010700' 
    3093 0000fbb0     1020          INC     A0
    3094 0000fbc0     1020          INC     A0
    3095 0000fbd0     ca25          JRZ     MADE_RIGHT_TABLE
    3096 0000fbe0     09e1          MOVI    VERY_IMPRESSIVE_MOVE_R,A1
         0000fbf0 00010670' 
    3097 0000fc10     1020          INC     A0
    3098 0000fc20     ca20          JRZ     MADE_RIGHT_TABLE
    3099 0000fc30     09e1          MOVI    GIDDUP_ALL,A1
         0000fc40 00010550' 
    3100 0000fc60     1020          INC     A0
    3101 0000fc70     ca1b          JRZ     MADE_RIGHT_TABLE
    3102 0000fc80     05a0          MOVE    @REPEAT_STATE,A0
         0000fc90 00000220- 
    3103 0000fcb0     cb0b          JRNZ    ALREADY_IN_REPEAT_MODE
    3104 0000fcc0     09c9          MOVI    80,A9
         0000fcd0     0050  
    3105 0000fce0                   CREATE  REPEAT_MODE_PID,REPEAT_DUMMY
    3106 0000fd60     1880          MOVK    4,A0
    3107 0000fd70           ALREADY_IN_REPEAT_MODE
    3108 0000fd70     1420          DEC     A0
    3109 0000fd80     0580          MOVE    A0,@REPEAT_STATE
         0000fd90 00000220- 
    3110 0000fdb0     2480          SLL     4,A0
    3111 0000fdc0     2445          SLL     2,A5
    3112 0000fdd0     09e1          MOVI    ASCENDING_TABLE,A1
         0000fde0 00010310' 
    3113 0000fe00     4005          ADD     A0,A5
    3114 0000fe10     0d3f          CALLR   SET_DUMMY_SLEEP
         0000fe20     0004  
    3115 0000fe30           MADE_RIGHT_TABLE
    3116 0000fe30     40a1          ADD     A5,A1
    3117 0000fe40     8420          MOVE    *A1,A0
    3118 0000fe50                   PULL    A1
    3119 0000fe60     0960          RETS
    3120                    
    3121 0000fe70           SET_DUMMY_SLEEP
    3122 0000fe70                   PUSH    A1
    3123 0000fe80     05a0          move    @repeat_mode_exists,a0
         0000fe90 00000520- 
    3124                    ;       MOVI    REPEAT_MODE_PID,A0
    3125                    ;       MOVI    -1,A1
    3126                    ;       CALLA   EXISTP
    3127 0000feb0     ca04          JRZ     NO_DUMMY_TO_SET
    3128 0000fec0     09c1          MOVI    80,A1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   64

         0000fed0     0050  
    3129 0000fee0     b020          MOVE    A1,*A0(PTIME)
         0000fef0     0030  
    3130 0000ff00           NO_DUMMY_TO_SET
    3131 0000ff00                   PULL    A1
    3132 0000ff10     0960          RETS
    3133                    
    3134 0000ff20           REPEAT_DUMMY
    3135 0000ff20     182e          movk    1,a14
    3136 0000ff30     058e          move    a14,@repeat_mode_exists
         0000ff40 00000520- 
    3137 0000ff60     4d20          MOVE    A9,A0
    3138 0000ff70     0d5f          CALLA   PRCSLP
         0000ff80 00000000! 
    3139 0000ffa0     5600          CLR     A0
    3140 0000ffb0     0580          MOVE    A0,@REPEAT_STATE
         0000ffc0 00000220- 
    3141 0000ffe0     57ce          clr     a14
    3142 0000fff0     058e          move    a14,@repeat_mode_exists
         00010000 00000520- 
    3143 00010020                   DIE
    3144                    
    3145 00010050           DO_END_STUFF
    3146 00010050                   PUSH    A1
    3147 00010060     09c1          MOVI    NUM_WRES,A1
         00010070     0007  
    3148 00010080           CHECK_NEXT
    3149 00010080                   PUSH    A1
    3150 00010090     1421          DEC     A1
    3151 000100a0     0d5f          CALLA   get_health
         000100b0 00000000! 
    3152 000100d0                   PULL    A1
    3153 000100e0     0b40          CMPI    40,A0
         000100f0     ffd7  
    3154 00010100     c404          JRLT    YES_WE_NEAR_END
    3155 00010110     3d41          DSJS    A1,CHECK_NEXT
    3156 00010120                   PULL    A1
    3157 00010130     c000          JRUC    NO_SPECIAL_END_STUFF
         00010140     ff0d  
    3158 00010150           YES_WE_NEAR_END
    3159 00010150                   PULL    A1
    3160 00010160     09e2          MOVI    SPECIAL_LAST_STUFF,A2
         00010170 00013550' 
    3161 00010190     b443          MOVE    *A2(-010H),A3
         000101a0     fff0  
    3162 000101b0     b440          MOVE    *A2(-020H),A0
         000101c0     ffe0  
    3163 000101d0     0d5f          CALLA   RNDRNG0
         000101e0 00000000! 
    3164 00010200     5e60          MPYU    A3,A0
    3165 00010210     4041          ADD     A2,A1
    3166 00010220     9420          MOVE    *A1+,A0
    3167 00010230     0d3f          CALLR   ARE_WE_REPEATING
         00010240     ff20  
    3168 00010250     c800          JRC     SET_NO_MORE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   65

         00010260     ff19  
    3169 00010270     5684          CLR     A4
    3170 00010280     0584          MOVE    A4,@REPEAT_STATE
         00010290 00000220- 
    3171 000102b0     0b40          CMPI    IT_DOESNT_LOOK_GOOD,A0
         000102c0     0003  
    3172 000102d0     ca00          JREQ    SPECIAL_SET_UP
         000102e0     feea  
    3173 000102f0     c000          JRUC    DO_THE_SPEECH
         00010300     fef5  
    3174                    
    3175 00010310           ASCENDING_TABLE
    3176 00010310     0102          .WORD   102H,101H,100H,0FFH
    3177 00010350     00ec          .WORD   0ECH,0EBH,0EAH,0E9H
    3178 00010390     00f6          .WORD   0F6H,0F5H,0F4H,0F3H
    3179 000103d0     0106          .WORD   106H,105H,104H,103H
    3180 00010410     00e8          .WORD   0E8H,0E7H,0E6H,0E5H
    3181 00010450     00fa          .WORD   0FAH,0F9H,0F8H,0F7H
    3182 00010490     00e4          .WORD   0E4H,0E3H,0E2H,0E1H
    3183 000104d0     0000          .WORD   0,0,0,0
    3184 00010510     00fe          .WORD   0FEH,0FDH,0FCH,0FBH
    3185                    
    3186 00010550           GIDDUP_ALL
    3187 00010550     02cd          .WORD   L_GIDDUP_HART
    3188 00010560     02c9          .WORD   L_GIDDUP_RAZOR
    3189 00010570     02ca          .WORD   L_GIDDUP_UNDER
    3190 00010580     02ce          .WORD   L_GIDDUP_YOKO
    3191 00010590     02c8          .WORD   L_GIDDUP_SHAWN
    3192 000105a0     02cb          .WORD   L_GIDDUP_BAM
    3193 000105b0     02c7          .WORD   L_GIDDUP_DOINK
    3194 000105c0     0000          .WORD   0
    3195 000105d0     02cc          .WORD   L_GIDDUP_LUGER
    3196                    
    3197 000105e0           VERY_IMPRESSIVE_MOVE
    3198 000105e0     010f          .WORD   VERY_IMP_HART
    3199 000105f0     010b          .WORD   VERY_IMP_RAZOR
    3200 00010600     010c          .WORD   VERY_IMP_UNDER
    3201 00010610     0110          .WORD   VERY_IMP_YOKO
    3202 00010620     010a          .WORD   VERY_IMP_SHAWN
    3203 00010630     010d          .WORD   VERY_IMP_BAM
    3204 00010640     0109          .WORD   VERY_IMP_DOINK
    3205 00010650     0000          .WORD   0
    3206 00010660     010e          .WORD   VERY_IMP_LUGER
    3207                    
    3208 00010670           VERY_IMPRESSIVE_MOVE_R
    3209 00010670     01e1          .WORD   R_MOVE_BY_HITMAN
    3210 00010680     01dd          .WORD   R_MOVE_BY_RAZOR
    3211 00010690     01de          .WORD   R_MOVE_BY_UNDER
    3212 000106a0     01e2          .WORD   R_MOVE_BY_YOKO
    3213 000106b0     01db          .WORD   R_MOVE_BY_SHAWN
    3214 000106c0     01df          .WORD   R_MOVE_BY_BAM
    3215 000106d0     01dc          .WORD   R_MOVE_BY_DOINK
    3216 000106e0     0000          .WORD   0
    3217 000106f0     01e0          .WORD   R_MOVE_BY_LEX
    3218                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   66

    3219 00010700           IT_DOESNT_LOOK_GOOD_FOR
    3220 00010700     02bb          .WORD   IT_DOESNT_LOOK_BRET
    3221 00010710     02b7          .WORD   IT_DOESNT_LOOK_RAZOR
    3222 00010720     02b8          .WORD   IT_DOESNT_LOOK_UNDER
    3223 00010730     02be          .WORD   IT_DOESNT_LOOK_YOKO
    3224 00010740     02b6          .WORD   IT_DOESNT_LOOK_SHAWN
    3225 00010750     02b9          .WORD   IT_DOESNT_LOOK_BAMBAM
    3226 00010760     02b4          .WORD   IT_DOESNT_LOOK_DOINK
    3227 00010770     0000          .WORD   0
    3228 00010780     02ba          .WORD   IT_DOESNT_LOOK_LEX
    3229                    
    3230 00010790           GIVE_CREDIT_TO
    3231 00010790     016d          .WORD   GIVE_CRED_HART
    3232 000107a0     0169          .WORD   GIVE_CRED_RAZOR
    3233 000107b0     016b          .WORD   GIVE_CRED_UNDER
    3234 000107c0     016e          .WORD   GIVE_CRED_YOKO
    3235 000107d0     0168          .WORD   GIVE_CRED_SHAWN
    3236 000107e0     016a          .WORD   GIVE_CRED_BAM
    3237 000107f0     0167          .WORD   GIVE_CRED_DOINK
    3238 00010800     0000          .WORD   0
    3239 00010810     016c          .WORD   GIVE_CRED_LUGER
    3240                    
    3241 00010820     ffff          .WORD   -1
    3242 00010830 00016c40'         .LONG   CRESCENDO_TABLE
    3243 00010850     000c          .WORD   12,010H
    3244 00010870           CLIMB_ROPES
    3245 00010870     013c          .WORD   GOING_TO_TOP_ROPE
    3246 00010880     013d          .WORD   GOING_TO_TOP
    3247 00010890     013e          .WORD   HERE_IT_COMES
    3248 000108a0     0140          .WORD   AND_1
    3249 000108b0     0141          .WORD   AND_2
    3250 000108c0     0142          .WORD   AND_3
    3251 000108d0     0143          .WORD   LOOK_AT_THIS
    3252 000108e0     00ef          .WORD   HERES_THE_SETUP
    3253 000108f0     01d8          .WORD   R_OH_YEAH
    3254 00010900     017e          .WORD   WHATS_THIS
    3255 00010910     01d2          .WORD   R_LOOK_AT_THIS
    3256 00010920     02de          .WORD   L_WHO_DOES_HE_THINK
    3257 00010930     02dd          .WORD   L_GOING_FOR_ROPE
    3258                    
    3259 00010940     013c          .WORD   GOING_TO_TOP_ROPE
    3260 00010950     013d          .WORD   GOING_TO_TOP
    3261 00010960     013e          .WORD   HERE_IT_COMES
    3262 00010970     0140          .WORD   AND_1
    3263                    
    3264 00010980     0000          .WORD   0
    3265 00010990 00016c90'         .LONG   ROPES_CHEER
    3266 000109b0     0006          .WORD   6,020H
    3267 000109d0           JUMP_ROPES
    3268 000109d0     0145          .WORD   KABOOM_OH,KABOOM
    3269                    ;       .WORD   REPEAT_MODE,0
    3270 000109f0     0147          .WORD   OOOH,0
    3271 00010a10     013f          .WORD   BOOMSHAKALAKA,0
    3272 00010a30     0144          .WORD   OFF_THE_TOP,0
    3273 00010a50     014a          .WORD   LOOK_OUT,0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   67

    3274 00010a70     01d0          .WORD   R_NICELY_DONE,0
    3275 00010a90     0187          .WORD   I_WOULD_RECEIVE_THAT,0
    3276                    
    3277 00010ab0     0145          .WORD   KABOOM_OH,KABOOM
    3278 00010ad0     0147          .WORD   OOOH,0
    3279 00010af0     013f          .WORD   BOOMSHAKALAKA,0
    3280 00010b10     0144          .WORD   OFF_THE_TOP,0
    3281                    
    3282 00010b30           CALL_MISSES
    3283 00010b30                   CREATE  SOUND_PID,PROC_MISSES
    3284 00010bb0     0960          RETS
    3285                    
    3286 00010bc0           PROC_MISSES
    3287 00010bc0                   SLEEP   5
    3288 00010c10     09e2          MOVI    MISSES,A2
         00010c20 00010d00' 
    3289 00010c40     09c0          MOVI    350,A0
         00010c50     015e  
    3290 00010c60     0d3f          CALLR   ADD_IF_SILENT
         00010c70     fe0f  
    3291 00010c80                   DIE
    3292                    
    3293 00010cb0     ffff          .WORD   -1
    3294 00010cc0 00016d60'         .LONG   CROWD_FAIL
    3295 00010ce0     0011          .WORD   17,010H
    3296 00010d00           MISSES
    3297 00010d00     0159          .WORD   A_MISS
    3298 00010d10     01a5          .WORD   NO_V
    3299 00010d20     015a          .WORD   AND_MISSES
    3300 00010d30     0152          .WORD   ALMOST
    3301 00010d40     00ee          .WORD   FORGET_ABOUT_IT
    3302 00010d50     01d4          .WORD   R_THAT_WAS_DUMB
    3303 00010d60     01d5          .WORD   R_THAT_WAS_UGLY
    3304 00010d70     00f0          .WORD   AND_OH
    3305 00010d80     0182          .WORD   REJECTED
    3306 00010d90     01e3          .WORD   R_THATLL_COST_HIM
    3307 00010da0     00f0          .WORD   AND_OH
    3308 00010db0     00ee          .WORD   FORGET_ABOUT_IT
    3309 00010dc0     016f          .WORD   NOT_A_GOOD_IDEA
    3310 00010dd0     0170          .WORD   WHAT_WAS_HE_THINKING
    3311 00010de0     02e8          .WORD   L_WHAT_A_JERK
    3312 00010df0     02f6          .WORD   L_DONT_BOTHER
    3313 00010e00     02e7          .WORD   L_NOT_A_GOOD_IDEA
    3314 00010e10     02e5          .WORD   L_WHAT_WAS_HE_THINKING
    3315                    
    3316 00010e20     0159          .WORD   A_MISS
    3317 00010e30     015a          .WORD   AND_MISSES
    3318 00010e40     0152          .WORD   ALMOST
    3319 00010e50     01e4          .WORD   R_REJECTED
    3320                    
    3321 00010e60           CALL_SPECIAL_MOVE
    3322 00010e60     b5a9          MOVE    *A13(WRESTLERNUM),A9
         00010e70     0590  
    3323 00010e80                   CREATE  SOUND_PID,PROC_SPECIAL_MOVE
    3324 00010f00     0960          RETS
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   68

    3325                    
    3326 00010f10           PROC_SPECIAL_MOVE
    3327 00010f10                   SLEEP   10
    3328 00010f60     4d25          MOVE    A9,A5
    3329 00010f70     09e2          MOVI    SPECIAL_MOVE,A2
         00010f80 00011060' 
    3330 00010fa0     09c0          MOVI    550,A0
         00010fb0     0226  
    3331 00010fc0     0d3f          CALLR   ADD_IF_SILENT
         00010fd0     fdd9  
    3332 00010fe0                   DIE
    3333                    
    3334 00011010     0000          .WORD   0
    3335 00011020 00016e30'         .LONG   CROWD_SPECIAL
    3336 00011040     001f          .WORD   31,020H
    3337 00011060           SPECIAL_MOVE
    3338 00011060     fffd          .WORD   END_GAME_STUFF,0
    3339 00011080     0164          .WORD   LISTEN_TO_THE_CROWD,L_CHEER_FOR_ME
    3340 000110a0     fff9          .WORD   REPEAT_MODE,0
    3341 000110c0     014b          .WORD   DID_YOU_SEE_THAT,0
    3342 000110e0     fffe          .WORD   VERY_IMPRESSIVE,0
    3343 00011100     014f          .WORD   THATS_GOTTA_HURT,0
    3344 00011120     0153          .WORD   NICELY_DONE,0
    3345 00011140     0166          .WORD   IVE_NEVER_SEEN_THAT,0
    3346 00011160     00f1          .WORD   OH_MY,0
    3347 00011180     0149          .WORD   OH_MY_GOODNESS_0,0
    3348 000111a0     014b          .WORD   DID_YOU_SEE_THAT,R_IVE_NEVER_SEEN
    3349 000111c0     014b          .WORD   DID_YOU_SEE_THAT,R_OH_YEAH
    3350 000111e0     0150          .WORD   WOW_0,0
    3351 00011200     00ed          .WORD   UNBEELEVABLE_0,0
    3352 00011220     0143          .WORD   LOOK_AT_THIS,L_I_WOULDNT_BELIEVE_IT
    3353 00011240     01d6          .WORD   R_DID_YOU_SEE_THAT,UNBEELEVABLE_0
    3354 00011260     017f          .WORD   WHAT_A_TURN_OF_EVENTS,R_INCREDIBLE
    3355 00011280     01d1          .WORD   R_TASTE_OF_HIS_OWN,0
    3356 000112a0     0183          .WORD   WHAT_A_BEATING,R_NICELY_DONE
    3357 000112c0     0187          .WORD   I_WOULD_RECEIVE_THAT,0
    3358 000112e0     01d2          .WORD   R_LOOK_AT_THIS,CAN_YOU_BELIEVE_THAT
    3359 00011300     0198          .WORD   CAN_ANYBODY_STOP_HIM,R_INCREDIBLE
    3360 00011320     01e5          .WORD   R_THATS_GOTTA_HURT,YES_V
    3361 00011340     01a8          .WORD   WHAT_A_SLAM,R_IVE_NEVER_SEEN
    3362 00011360     01a3          .WORD   I_CANT_WATCH_THIS,L_I_DIDNT_SEE
    3363 00011380     0198          .WORD   CAN_ANYBODY_STOP_HIM,0
    3364 000113a0     01f5          .WORD   R_I_THINK_HE_BROKE_IT,0
    3365 000113c0     01f6          .WORD   R_NOBODY_GETS_UP,0
    3366 000113e0     0164          .WORD   LISTEN_TO_THE_CROWD,L_QUIET
    3367 00011400     02f3          .WORD   L_WHAT_KIND_OF_CHEAP,0
    3368 00011420     02f9          .WORD   L_NO_ONE_CAN_TOUCH,0
    3369 00011440     0188          .WORD   WHAT_POWER,0
    3370                    
    3371 00011460     0164          .WORD   LISTEN_TO_THE_CROWD,0
    3372 00011480     014b          .WORD   DID_YOU_SEE_THAT,0
    3373 000114a0     014f          .WORD   THATS_GOTTA_HURT,0
    3374 000114c0     0153          .WORD   NICELY_DONE,0
    3375                    
    3376 000114e0           CALL_DROP_KICK
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   69

    3377 000114e0     b549          MOVE    *A10(WRESTLERNUM),A9
         000114f0     0590  
    3378 00011500                   CREATE  SOUND_PID,PROC_DROP_KICK
    3379 00011580     0960          RETS
    3380                    
    3381 00011590           PROC_DROP_KICK
    3382 00011590                   SLEEP   15
    3383 000115e0     4d25          MOVE    A9,A5
    3384 000115f0     09e2          MOVI    DROP_KICK,A2
         00011600 000116e0' 
    3385 00011620     09c0          MOVI    400,A0
         00011630     0190  
    3386 00011640     0d3f          CALLR   ADD_IF_SILENT
         00011650     fd71  
    3387 00011660                   DIE
    3388                    
    3389 00011690     0000          .WORD   0
    3390 000116a0 00016f00'         .LONG   CROWD_CHEER
    3391 000116c0     000e          .WORD   14,010H
    3392 000116e0           DROP_KICK
    3393 000116e0     0164          .WORD   LISTEN_TO_THE_CROWD
    3394 000116f0     fff9          .WORD   REPEAT_MODE
    3395 00011700     0153          .WORD   NICELY_DONE
    3396                    ;       .WORD   BOTH_MEN_DOWN
    3397 00011710     00f1          .WORD   OH_MY
    3398                    ;       .WORD   OH_THAT_HURTS_0
    3399 00011720     0148          .WORD   WITH_AUTHORITY
    3400 00011730     0146          .WORD   KABOOM
    3401 00011740     013f          .WORD   BOOMSHAKALAKA
    3402 00011750     01d1          .WORD   R_TASTE_OF_HIS_OWN
    3403 00011760     fffe          .WORD   VERY_IMPRESSIVE
    3404                    ;       .WORD   ITS_PAND_OUT_THERE
    3405                    ;       .WORD   WHAT_SPEED
    3406 00011770     0184          .WORD   TO_THE_FACE
    3407 00011780     018c          .WORD   AWESOME
    3408 00011790     018e          .WORD   GOODNIGHT
    3409 000117a0     018b          .WORD   WHAT_A_BLOW
    3410 000117b0     02f9          .WORD   L_NO_ONE_CAN_TOUCH
    3411 000117c0     02fc          .WORD   L_SOMETHING
    3412                    
    3413 000117d0     0164          .WORD   LISTEN_TO_THE_CROWD
    3414 000117e0     0153          .WORD   NICELY_DONE
    3415 000117f0     018e          .WORD   GOODNIGHT
    3416                    ;       .WORD   BOTH_MEN_DOWN
    3417 00011800     00f1          .WORD   OH_MY
    3418                    
    3419 00011810           CALL_FACE_HIT
    3420 00011810     b549          MOVE    *A10(WRESTLERNUM),A9
         00011820     0590  
    3421 00011830                   CREATE  SOUND_PID,PROC_FACE_HIT
    3422 000118b0     0960          RETS
    3423                    
    3424 000118c0           PROC_FACE_HIT
    3425 000118c0                   SLEEP   8
    3426 00011910     4d25          MOVE    A9,A5
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   70

    3427 00011920     09e2          MOVI    FACE_HIT,A2
         00011930 00011a10' 
    3428 00011950     09c0          MOVI    200,A0
         00011960     00c8  
    3429 00011970     0d3f          CALLR   ADD_IF_SILENT
         00011980     fd3e  
    3430 00011990                   DIE
    3431                    
    3432 000119c0     0000          .WORD   0
    3433 000119d0 000170e0'         .LONG   CROWD_ORDINARY
    3434 000119f0     0007          .WORD   7,010H
    3435 00011a10           FACE_HIT
    3436 00011a10     0184          .WORD   TO_THE_FACE
    3437 00011a20     01e8          .WORD   R_WHAT_SPEED
    3438 00011a30     0184          .WORD   TO_THE_FACE
    3439                    ;       .WORD   WHAT_POWER
    3440 00011a40     0184          .WORD   TO_THE_FACE
    3441 00011a50     018b          .WORD   WHAT_A_BLOW
    3442 00011a60     018f          .WORD   HELLO
    3443 00011a70     01eb          .WORD   R_GOODNIGHT
    3444                    
    3445 00011a80     0184          .WORD   TO_THE_FACE
    3446                    ;       .WORD   WHAT_SPEED
    3447 00011a90     01e7          .WORD   R_WHAT_POWER
    3448 00011aa0     00f1          .WORD   OH_MY
    3449 00011ab0     018f          .WORD   HELLO
    3450                    
    3451 00011ac0           CALL_MID_HIT
    3452 00011ac0     b549          MOVE    *A10(WRESTLERNUM),A9
         00011ad0     0590  
    3453 00011ae0                   CREATE  SOUND_PID,PROC_MID_HIT
    3454 00011b60     0960          RETS
    3455                    
    3456 00011b70           PROC_MID_HIT
    3457 00011b70                   SLEEP   8
    3458 00011bc0     4d25          MOVE    A9,A5
    3459 00011bd0     09e2          MOVI    MID_HIT,A2
         00011be0 00011cc0' 
    3460 00011c00     09c0          MOVI    200,A0
         00011c10     00c8  
    3461 00011c20     0d3f          CALLR   ADD_IF_SILENT
         00011c30     fd13  
    3462 00011c40                   DIE
    3463                    
    3464 00011c70     0000          .WORD   0
    3465 00011c80 000170e0'         .LONG   CROWD_ORDINARY
    3466 00011ca0     0007          .WORD   7,010H
    3467 00011cc0           MID_HIT
    3468 00011cc0     0185          .WORD   TO_THE_MIDSECTION
    3469                    ;       .WORD   WHAT_SPEED
    3470 00011cd0     0185          .WORD   TO_THE_MIDSECTION
    3471 00011ce0     01e7          .WORD   R_WHAT_POWER
    3472 00011cf0     0185          .WORD   TO_THE_MIDSECTION
    3473 00011d00     018a          .WORD   WHAT_SKILL
    3474 00011d10     018b          .WORD   WHAT_A_BLOW
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   71

    3475 00011d20     01ec          .WORD   R_HELLO
    3476 00011d30     02ee          .WORD   L_HIT_HIM
    3477                    
    3478 00011d40     0185          .WORD   TO_THE_MIDSECTION
    3479                    ;       .WORD   WHAT_SPEED
    3480 00011d50     01e7          .WORD   R_WHAT_POWER
    3481 00011d60     00f1          .WORD   OH_MY
    3482 00011d70     02ee          .WORD   L_HIT_HIM
    3483                    
    3484 00011d80           CALL_AVERAGE_MOVE
    3485 00011d80     b549          MOVE    *A10(WRESTLERNUM),A9
         00011d90     0590  
    3486 00011da0                   CREATE  SOUND_PID,PROC_AVERAGE_MOVE
    3487 00011e20     0960          RETS
    3488                    
    3489 00011e30           CALL_ANI_AVERAGE_MOVE
    3490 00011e30     b5a9          MOVE    *A13(WRESTLERNUM),A9
         00011e40     0590  
    3491 00011e50                   CREATE  SOUND_PID,PROC_AVERAGE_MOVE
    3492 00011ed0     0960          RETS
    3493                    
    3494 00011ee0           PROC_AVERAGE_MOVE
    3495 00011ee0                   SLEEP   10
    3496 00011f30     4d25          MOVE    A9,A5
    3497 00011f40     09e2          MOVI    AVERAGE_MOVE,A2
         00011f50 00012030' 
    3498 00011f70     09c0          MOVI    500,A0
         00011f80     01f4  
    3499 00011f90     0d3f          CALLR   ADD_IF_SILENT
         00011fa0     fcdc  
    3500 00011fb0                   DIE
    3501                    
    3502 00011fe0     0000          .WORD   0
    3503 00011ff0 00016f00'         .LONG   CROWD_CHEER
    3504 00012010     0011          .WORD   17,010H
    3505 00012030           AVERAGE_MOVE
    3506 00012030     fffd          .WORD   END_GAME_STUFF
    3507                    ;       .WORD   OH_THAT_HURTS_1
    3508 00012040     fff9          .WORD   REPEAT_MODE
    3509 00012050     014d          .WORD   OH_0
    3510 00012060     0148          .WORD   WITH_AUTHORITY
    3511 00012070     0153          .WORD   NICELY_DONE
    3512 00012080     0156          .WORD   NICE_EXECUTION
    3513 00012090     014e          .WORD   OOOH_0
    3514                    ;       .WORD   OH_MY_GOODNESS_2
    3515 000120a0     01d3          .WORD   R_RIGHT_TO_THE_KISSER
    3516 000120b0     017d          .WORD   ITS_PAND_IN_THE_RING
    3517                    ;       .WORD   WHAT_POWER
    3518 000120c0     018a          .WORD   WHAT_SKILL
    3519 000120d0     01e9          .WORD   R_WHAT_AGILITY
    3520 000120e0     01ea          .WORD   R_AWESOME
    3521 000120f0     01ec          .WORD   R_HELLO
    3522 00012100     018b          .WORD   WHAT_A_BLOW
    3523 00012110     018e          .WORD   GOODNIGHT
    3524 00012120     01a2          .WORD   MOST_IMPRESSIVE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   72

    3525 00012130     018c          .WORD   AWESOME
    3526 00012140     fffb          .WORD   R_IMPRESSIVE_MOVE
    3527                    
    3528                    ;       .WORD   OH_THAT_HURTS_1
    3529 00012150     018c          .WORD   AWESOME
    3530 00012160     014d          .WORD   OH_0
    3531 00012170     0148          .WORD   WITH_AUTHORITY
    3532 00012180     0153          .WORD   NICELY_DONE
    3533                    
    3534 00012190           DO_REVERSAL
    3535 00012190     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000121a0 00015560' 
    3536 000121c0                   push    a8
    3537 000121d0     b505          MOVE    *A8(WRESTLERNUM),A5
         000121e0     0590  
    3538                    
    3539                            ;make sure wrestlernum is valid!
    3540 000121f0     ce06          jrn     lfhgbad_a5
    3541 00012200     0b45          cmpi    7,a5
         00012210     fff8  
    3542 00012220     ca03          jreq    lfhgbad_a5
    3543 00012230     0b45          cmpi    8,a5
         00012240     fff7  
    3544 00012250     c601          jrle    lfhgok_a5
    3545 00012260           lfhgbad_a5
    3546                            .if DEBUG
    3547                            LOCKUP
    3548                            .endif
    3549 00012260     c008          jruc    lfhgdr_done
    3550 00012270           lfhgok_a5
    3551                    
    3552 00012270     09e2          MOVI    REVERSAL,A2
         00012280 00012350' 
    3553 000122a0     09c0          MOVI    500,A0
         000122b0     01f4  
    3554 000122c0     0d3f          CALLR   ADD_IF_SILENT
         000122d0     fca9  
    3555 000122e0                   pull    a8
    3556 000122f0           lfhgdr_done
    3557 000122f0     0960          RETS
    3558                    
    3559 00012300     0000          .WORD   0
    3560 00012310 00016f00'         .LONG   CROWD_CHEER
    3561 00012330     000e          .WORD   14,010H
    3562 00012350           REVERSAL
    3563 00012350     015f          .WORD   NO_WAIT_A_MINUTE
    3564 00012360     0155          .WORD   NICE_ESCAPE
    3565 00012370     0151          .WORD   WOW_1
    3566 00012380     014a          .WORD   LOOK_OUT
    3567 00012390     00ee          .WORD   FORGET_ABOUT_IT
    3568 000123a0     015c          .WORD   A_QUICK_REVERSAL
    3569 000123b0     01d4          .WORD   R_THAT_WAS_DUMB
    3570 000123c0     017e          .WORD   WHATS_THIS
    3571 000123d0     01da          .WORD   R_NO_WAIT_A_MINUTE
    3572                    ;       .WORD   WHAT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   73

    3573 000123e0     019a          .WORD   WHAT_THE
    3574 000123f0     01a2          .WORD   MOST_IMPRESSIVE
    3575 00012400     01a6          .WORD   YES_V
    3576 00012410     019b          .WORD   WAIT_A_MINUTE
    3577 00012420     02de          .WORD   L_WHO_DOES_HE_THINK
    3578 00012430     02fb          .WORD   L_PULLED_IT_OFF
    3579                    
    3580 00012440     015f          .WORD   NO_WAIT_A_MINUTE
    3581 00012450     0155          .WORD   NICE_ESCAPE
    3582 00012460     0151          .WORD   WOW_1
    3583 00012470     014a          .WORD   LOOK_OUT
    3584                    
    3585 00012480           CALL_MISS_YOKO
    3586 00012480                   CREATE  SOUND_PID,PROC_MISS_YOKO
    3587 00012500     0960          RETS
    3588                    
    3589 00012510           PROC_MISS_YOKO
    3590 00012510                   SLEEP   10
    3591 00012560     09e2          MOVI    MISS_YOKO,A2
         00012570 00012650' 
    3592 00012590     09c0          MOVI    400,A0
         000125a0     0190  
    3593 000125b0     0d3f          CALLR   ADD_IF_SILENT
         000125c0     fc7a  
    3594 000125d0                   DIE
    3595                    
    3596 00012600     ffff          .WORD   -1
    3597 00012610 00000000          .LONG   0
    3598 00012630     0006          .WORD   6,010H
    3599 00012650           MISS_YOKO
    3600 00012650     00ee          .WORD   FORGET_ABOUT_IT
    3601 00012660     01d4          .WORD   R_THAT_WAS_DUMB
    3602 00012670     016f          .WORD   NOT_A_GOOD_IDEA
    3603 00012680     0170          .WORD   WHAT_WAS_HE_THINKING
    3604 00012690     00f0          .WORD   AND_OH
    3605 000126a0     0182          .WORD   REJECTED
    3606 000126b0     02fd          .WORD   L_AND_STAY_DOWN
    3607                    
    3608 000126c0     00ee          .WORD   FORGET_ABOUT_IT
    3609 000126d0     01d4          .WORD   R_THAT_WAS_DUMB
    3610 000126e0     016f          .WORD   NOT_A_GOOD_IDEA
    3611 000126f0     0170          .WORD   WHAT_WAS_HE_THINKING
    3612                    
    3613 00012700     ffff          .WORD   -1
    3614 00012710 00017050'         .LONG   CROWD_THROWN
    3615 00012730     000c          .WORD   12,010H
    3616 00012750           THROWN_OUT
    3617 00012750     0154          .WORD   HEAVES_HIM
    3618 00012760     fffe          .WORD   VERY_IMPRESSIVE
    3619 00012770     0156          .WORD   NICE_EXECUTION
    3620 00012780     0160          .WORD   UNBEELEVABLE_1
    3621 00012790     0166          .WORD   IVE_NEVER_SEEN_THAT
    3622                    ;       .WORD   OH_THAT_HURTS_0
    3623 000127a0     0148          .WORD   WITH_AUTHORITY
    3624 000127b0     017f          .WORD   WHAT_A_TURN_OF_EVENTS
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   74

    3625                    ;       .WORD   WHAT_POWER
    3626 000127c0     01e8          .WORD   R_WHAT_SPEED
    3627 000127d0     018a          .WORD   WHAT_SKILL
    3628 000127e0     01e9          .WORD   R_WHAT_AGILITY
    3629 000127f0     0180          .WORD   MAGNIFICENT
    3630 00012800     018d          .WORD   JUST_AWESOME
    3631 00012810     02dc          .WORD   L_HEAVES
    3632                    
    3633 00012820     0154          .WORD   HEAVES_HIM
    3634 00012830     0156          .WORD   NICE_EXECUTION
    3635 00012840     0160          .WORD   UNBEELEVABLE_1
    3636 00012850     0166          .WORD   IVE_NEVER_SEEN_THAT
    3637                    
    3638 00012860           CALL_THROWN_OUT
    3639 00012860     b5a9          MOVE    *A13(WRESTLERNUM),A9
         00012870     0590  
    3640 00012880                   CREATE  SOUND_PID,PROC_THROWN_OUT
    3641 00012900     0960          RETS
    3642                    
    3643 00012910           PROC_THROWN_OUT
    3644 00012910                   SLEEP   10
    3645 00012960     4d25          MOVE    A9,A5
    3646 00012970     09e2          MOVI    THROWN_OUT,A2
         00012980 00012750' 
    3647 000129a0     09c0          MOVI    500,A0
         000129b0     01f4  
    3648 000129c0     0d3f          CALLR   ADD_IF_SILENT
         000129d0     fc39  
    3649 000129e0                   DIE
    3650                    
    3651 00012a10     ffff          .WORD   -1
    3652 00012a20 00017050'         .LONG   CROWD_THROWN
    3653 00012a40     000c          .WORD   12,010H
    3654 00012a60           OTHER_AVERAGE
    3655 00012a60     fffe          .WORD   VERY_IMPRESSIVE
    3656 00012a70     0156          .WORD   NICE_EXECUTION
    3657 00012a80     0160          .WORD   UNBEELEVABLE_1
    3658 00012a90     0166          .WORD   IVE_NEVER_SEEN_THAT
    3659                    ;       .WORD   OH_THAT_HURTS_0
    3660 00012aa0     0148          .WORD   WITH_AUTHORITY
    3661 00012ab0     017f          .WORD   WHAT_A_TURN_OF_EVENTS
    3662                    ;       .WORD   WHAT_POWER
    3663 00012ac0     01e8          .WORD   R_WHAT_SPEED
    3664 00012ad0     018a          .WORD   WHAT_SKILL
    3665 00012ae0     01e9          .WORD   R_WHAT_AGILITY
    3666 00012af0     0180          .WORD   MAGNIFICENT
    3667 00012b00     018d          .WORD   JUST_AWESOME
    3668 00012b10     02eb          .WORD   L_TEETH_POP
    3669 00012b20     02fc          .WORD   L_SOMETHING
    3670                    
    3671 00012b30     0180          .WORD   MAGNIFICENT
    3672 00012b40     0156          .WORD   NICE_EXECUTION
    3673 00012b50     0160          .WORD   UNBEELEVABLE_1
    3674 00012b60     0166          .WORD   IVE_NEVER_SEEN_THAT
    3675                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   75

    3676 00012b70           CALL_OTHER_AVERAGE
    3677 00012b70     b5a9          MOVE    *A13(WRESTLERNUM),A9
         00012b80     0590  
    3678 00012b90                   CREATE  SOUND_PID,PROC_OTHER_AVERAGE
    3679 00012c10     0960          RETS
    3680                    
    3681 00012c20           PROC_OTHER_AVERAGE
    3682 00012c20                   SLEEP   10
    3683 00012c70     4d25          MOVE    A9,A5
    3684 00012c80     09e2          MOVI    OTHER_AVERAGE,A2
         00012c90 00012a60' 
    3685 00012cb0     09c0          MOVI    500,A0
         00012cc0     01f4  
    3686 00012cd0     0d3f          CALLR   ADD_IF_SILENT
         00012ce0     fc08  
    3687 00012cf0                   DIE
    3688                    
    3689 00012d20           CALL_NASTY_MOVE
    3690 00012d20     b5a9          MOVE    *A13(WRESTLERNUM),A9
         00012d30     0590  
    3691 00012d40                   CREATE  SOUND_PID,PROC_NASTY_MOVE
    3692 00012dc0     0960          RETS
    3693                    
    3694 00012dd0           PROC_NASTY_MOVE
    3695 00012dd0                   SLEEP   10
    3696 00012e20     4d25          MOVE    A9,A5
    3697 00012e30     09e2          MOVI    NASTY_MOVE,A2
         00012e40 00012f20' 
    3698 00012e60     09c0          MOVI    500,A0
         00012e70     01f4  
    3699 00012e80     0d3f          CALLR   ADD_IF_SILENT
         00012e90     fbed  
    3700 00012ea0                   DIE
    3701                    
    3702 00012ed0     ffff          .WORD   -1
    3703 00012ee0 00016d60'         .LONG   CROWD_FAIL
    3704 00012f00     0011          .WORD   17,020H
    3705 00012f20           NASTY_MOVE
    3706 00012f20     01ed          .WORD   R_WHATS_GOING_ON,IS_THAT_LEGAL
    3707 00012f40     019c          .WORD   HE_CANT_DO_THAT,R_SOMEONE_CALL_SECURITY
    3708 00012f60     019e          .WORD   NOW_THAT_WAS_CHEAP,R_I_CANT_WATCH
    3709 00012f80     019f          .WORD   THATS_NOT_VERY_FAIR,L_EXACT_WHAT_HE_DESERVED
    3710 00012fa0     01a0          .WORD   SOMEONE_CALL_SECURITY,0
    3711 00012fc0     01a1          .WORD   THAT_WASNT_VERY_NICE,L_SURE_IT_WAS
    3712 00012fe0     01a3          .WORD   I_CANT_WATCH_THIS,R_OH_VICIOUS
    3713 00013000     01e5          .WORD   R_THATS_GOTTA_HURT,THATS_NOT_VERY_FAIR
    3714 00013020     01ac          .WORD   SHOCKING,0
    3715 00013040     02e8          .WORD   L_WHAT_A_JERK,0
    3716 00013060     02e1          .WORD   L_LISTEN_TO_THE_CROWD,L_WHAT_MORONS
    3717 00013080     02f1          .WORD   L_THAT_WAS_CHEAP,0
    3718 000130a0     02eb          .WORD   L_TEETH_POP,0
    3719 000130c0     0164          .WORD   LISTEN_TO_THE_CROWD,L_CHEER_FOR_ME
    3720 000130e0     0164          .WORD   LISTEN_TO_THE_CROWD,L_QUIET
    3721 00013100     02e3          .WORD   L_WHAT_MORONS,0
    3722 00013120     0302          .WORD   L_AW_CMON_2,IS_THAT_LEGAL
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   76

    3723 00013140     02de          .WORD   L_WHO_DOES_HE_THINK,0
    3724                    
    3725 00013160     01ed          .WORD   R_WHATS_GOING_ON,IS_THAT_LEGAL
    3726 00013180     019c          .WORD   HE_CANT_DO_THAT,R_SOMEONE_CALL_SECURITY
    3727 000131a0     019e          .WORD   NOW_THAT_WAS_CHEAP,R_I_CANT_WATCH
    3728 000131c0     019f          .WORD   THATS_NOT_VERY_FAIR,0
    3729                    
    3730 000131e0           CALL_SETUP
    3731 000131e0     b5a9          MOVE    *A13(WRESTLERNUM),A9
         000131f0     0590  
    3732 00013200                   CREATE  SOUND_PID,PROC_SETUP_MOVE
    3733 00013280     0960          RETS
    3734                    
    3735 00013290           PROC_SETUP_MOVE
    3736 00013290                   SLEEP   5
    3737 000132e0     4d25          MOVE    A9,A5
    3738 000132f0     09e2          MOVI    SETUP_MOVE,A2
         00013300 000133e0' 
    3739 00013320     09c0          MOVI    500,A0
         00013330     01f4  
    3740 00013340     0d3f          CALLR   ADD_IF_SILENT
         00013350     fba1  
    3741 00013360                   DIE
    3742                    
    3743 00013390     0000          .WORD   0
    3744 000133a0 00016b30'         .LONG   SETUP_TABLE
    3745 000133c0     000f          .WORD   15,010H
    3746 000133e0           SETUP_MOVE
    3747 000133e0     fffd          .WORD   END_GAME_STUFF
    3748 000133f0     fff9          .WORD   REPEAT_MODE
    3749 00013400     00ef          .WORD   HERES_THE_SETUP
    3750 00013410     0140          .WORD   AND_1
    3751 00013420     013e          .WORD   HERE_IT_COMES
    3752 00013430     0141          .WORD   AND_2
    3753 00013440     0143          .WORD   LOOK_AT_THIS
    3754 00013450     0147          .WORD   OOOH
    3755 00013460     01d2          .WORD   R_LOOK_AT_THIS
    3756 00013470     017e          .WORD   WHATS_THIS
    3757 00013480     017d          .WORD   ITS_PAND_IN_THE_RING
    3758 00013490     01f4          .WORD   R_THIS_COULD_BE_TROUBLE
    3759 000134a0     01f7          .WORD   R_DIG_IT
    3760 000134b0     02e6          .WORD   L_WHATS_HE_UP_TO
    3761 000134c0     02de          .WORD   L_WHO_DOES_HE_THINK
    3762                    ;       .WORD   L_THE_SUSPENSE
    3763 000134d0     01ae          .WORD   HES_GOT_HIM
    3764                    
    3765 000134e0     00ef          .WORD   HERES_THE_SETUP
    3766 000134f0     0140          .WORD   AND_1
    3767 00013500     013e          .WORD   HERE_IT_COMES
    3768 00013510     0141          .WORD   AND_2
    3769 00013520     0143          .WORD   LOOK_AT_THIS
    3770                    
    3771 00013530     0006          .WORD   6,010H
    3772 00013550           SPECIAL_LAST_STUFF
    3773 00013550     015e          .WORD   THIS_COULD_BE_IT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   77

    3774 00013560     01d9          .WORD   R_THIS_COULD_BE_IT
    3775 00013570     0171          .WORD   YOU_CANT_GET_ANY_CLOSER
    3776 00013580     017a          .WORD   WHAT_KEEPING_THEM_UP
    3777 00013590     017b          .WORD   LOOKS_LIKE_ITS_OVER
    3778 000135a0     01e6          .WORD   R_GAME_OVER
    3779 000135b0     02f9          .WORD   L_NO_ONE_CAN_TOUCH
    3780                    ;       .WORD   L_THE_SUSPENSE
    3781                    
    3782 000135c0     015e          .WORD   THIS_COULD_BE_IT
    3783 000135d0     01d9          .WORD   R_THIS_COULD_BE_IT
    3784 000135e0     0171          .WORD   YOU_CANT_GET_ANY_CLOSER
    3785 000135f0     017a          .WORD   WHAT_KEEPING_THEM_UP
    3786                    
    3787                    ******************************************************************************
    3788                    
    3789                            .ref    match_winner
    3790                    
    3791                    * 0a0H = winning team (0 or 1)
    3792                    
    3793 00013600            SUBR   CALL_MATCH_OVER
    3794                    
    3795 00013600     1828          movk    1,a8
    3796 00013610     6208          sll     a0,a8           ;turn winning team # into a match_winner
    3797 00013620     05a9          move    @PSTATUS2,a9
         00013630 00000000! 
    3798 00013650                   CREATE  SOUND_PID,PROC_MATCH_OVER
    3799 000136d0     0960          RETS
    3800                    
    3801                    
    3802 000136e0            SUBRP  PROC_MATCH_OVER
    3803                    
    3804 000136e0                   SLEEPK  5
    3805                    
    3806                            ;did a drone lose?
    3807 00013720     5709          xor     a8,a9
    3808 00013730     ca04          jrz     lfhgdrn_l
    3809                    
    3810 00013740     09e2          movi    MATCH_OVER,A2
         00013750 00013b00' 
    3811 00013770     c003          jruc    lfhgcont
    3812 00013780     09e2  lfhgdrn_l       movi    MATCH_OVER_DL,A2
         00013790 00013c00' 
    3813 000137b0     b545  lfhgcont        move    *a10(WRESTLERNUM),a5
         000137c0     0590  
    3814 000137d0     09c0          MOVI    200,A0
         000137e0     00c8  
    3815 000137f0     0d5f          CALLA   RNDPER
         00013800 00000000! 
    3816 00013820     c345          JRHI    WRESTLER_SPEECH
    3817                    
    3818 00013830     b540          MOVE    *A10(PLYRNUM),A0
         00013840     0580  
    3819 00013850     2480          SLL     4,A0
    3820 00013860     0b20          ADDI    p1winstreak,A0
         00013870 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   78

    3821 00013890     8400          MOVE    *A0,A0
    3822 000138a0     0b40          CMPI    4,A0
         000138b0     fffb  
    3823 000138c0     c406          JRLT    NO_SPECIAL_FOR_OVER_4_WINS
    3824                    
    3825 000138d0     09c0          MOVI    200,A0
         000138e0     00c8  
    3826 000138f0     0d5f          CALLA   RNDPER
         00013900 00000000! 
    3827 00013920     c307          JRHI    SPECIAL_FOR_OVER_4_WINS
    3828 00013930           NO_SPECIAL_FOR_OVER_4_WINS
    3829                    
    3830 00013930     09c0          movi    1000,A0
         00013940     03e8  
    3831 00013950     0d3f          callr   ADD_TO_QUEUE
         00013960     fb3d  
    3832 00013970                   DIE
    3833                    
    3834 000139a0           SPECIAL_FOR_OVER_4_WINS
    3835 000139a0     09c2          MOVI    CAN_ANYBODY_STOP_HIM,A2
         000139b0     0198  
    3836 000139c0     09c0          MOVI    500,A0
         000139d0     01f4  
    3837 000139e0     0d5f          CALLA   RNDPER
         000139f0 00000000! 
    3838 00013a10     c802          JRLO    SPECIAL_DONE
    3839 00013a20     09c2          MOVI    L_NO_ONE_CAN_TOUCH,A2
         00013a30     02f9  
    3840 00013a40           SPECIAL_DONE
    3841 00013a40     4c40          MOVE    A2,A0
    3842 00013a50     0d5f          CALLA   ADD_VOICE
         00013a60 0000e720' 
    3843 00013a80                   DIE
    3844                    
    3845                    
    3846                    
    3847                    ;Use this table if the loser is a player.  Lawlor cheers/Vince gripes
    3848 00013ab0     ffff          .word   -1
    3849 00013ac0 00000000          .long   0
    3850 00013ae0     0006          .word   6,010H
    3851 00013b00           MATCH_OVER
    3852 00013b00     0129          .word   TOTAL_DISASTER
    3853 00013b10     012a          .word   TOTAL_DEBUNK
    3854 00013b20     02fa          .word   L_HE_DID_IT
    3855 00013b30     02fb          .word   L_PULLED_IT_OFF
    3856 00013b40     02fe          .word   L_EXACT_WHAT_HE_DESERVED
    3857 00013b50     01bc          .WORD   GOOD_NIGHT_2
    3858 00013b60     0301          .WORD   L_BACK_TO_SANDBOX
    3859                    
    3860 00013b70     012a          .word   TOTAL_DEBUNK
    3861 00013b80     02fa          .word   L_HE_DID_IT
    3862 00013b90     02fb          .word   L_PULLED_IT_OFF
    3863 00013ba0     02fe          .word   L_EXACT_WHAT_HE_DESERVED
    3864                    
    3865                    ;Use this table if the loser is a drone.  Vince cheers/Lawlor gripes
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   79

    3866 00013bb0     ffff          .word   -1
    3867 00013bc0 00000000          .long   0
    3868 00013be0     0003          .word   3,010H
    3869 00013c00           MATCH_OVER_DL
    3870 00013c00     ffff          .word   GIVE_CREDIT
    3871 00013c10     00ed          .word   UNBEELEVABLE_0
    3872 00013c20     02f4          .word   L_WHAT_A_RIPOFF
    3873 00013c30     02f5          .word   L_WHAT_A_SCAM
    3874                    
    3875                    
    3876 00013c40     ffff          .word   GIVE_CREDIT
    3877 00013c50     00ed          .word   UNBEELEVABLE_0
    3878 00013c60     02f4          .word   L_WHAT_A_RIPOFF
    3879 00013c70     02f5          .word   L_WHAT_A_SCAM
    3880                    
    3881                    ******************************************************************************
    3882                    
    3883 00013c80           WRESTLER_SPEECH
    3884 00013c80     24a5          SLL     5,A5
    3885 00013c90     0b25          ADDI    WHICH_WRESTLER_TALKS,A5
         00013ca0 00013d40' 
    3886 00013cc0     86a2          MOVE    *A5,A2,L
    3887 00013cd0     09c0          MOVI    1000,A0
         00013ce0     03e8  
    3888 00013cf0     0d3f          CALLR   ADD_TO_QUEUE
         00013d00     fb03  
    3889 00013d10                   DIE
    3890                    
    3891 00013d40           WHICH_WRESTLER_TALKS
    3892 00013d40 00013ea0'         .LONG   HART_FINISHES
    3893 00013d60 00013ef0'         .LONG   RAZOR_FINISHES
    3894 00013d80 00013f40'         .LONG   UNDERTAKER_FINISHES
    3895 00013da0 00013f90'         .LONG   YOKO_FINISHES
    3896 00013dc0 00013fe0'         .LONG   SHAWN_FINISHES
    3897 00013de0 00014040'         .LONG   BAM_FINISHES
    3898 00013e00 000140b0'         .LONG   DOINK_FINISHES
    3899 00013e20 00000000          .LONG   0
    3900 00013e40 00014100'         .LONG   LUGER_FINISHES
    3901                    
    3902 00013e60 00000000          .LONG   0
    3903 00013e80     0000          .WORD   0,010H
    3904 00013ea0           HART_FINISHES
    3905 00013ea0     0238          .WORD   238H
    3906                    
    3907 00013eb0 00000000          .LONG   0
    3908 00013ed0     0000          .WORD   0,010H
    3909 00013ef0           RAZOR_FINISHES
    3910 00013ef0     005a          .WORD   RAZOR_RIGHT_GUY
    3911                    
    3912 00013f00 00000000          .LONG   0
    3913 00013f20     0000          .WORD   0,010H
    3914 00013f40           UNDERTAKER_FINISHES
    3915 00013f40     0000          .WORD   0
    3916                    
    3917 00013f50 00000000          .LONG   0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   80

    3918 00013f70     0000          .WORD   0,010H
    3919 00013f90           YOKO_FINISHES
    3920 00013f90     0000          .WORD   0
    3921                    
    3922 00013fa0 00000000          .LONG   0
    3923 00013fc0     0001          .WORD   1,010H
    3924 00013fe0           SHAWN_FINISHES
    3925 00013fe0     0060          .WORD   SHAWN_LUCKY_YOU
    3926 00013ff0     0061          .WORD   SHAWN_WRESTLER_90
    3927                    
    3928 00014000 00000000          .LONG   0
    3929 00014020     0002          .WORD   2,010H
    3930 00014040           BAM_FINISHES
    3931 00014040     0066          .WORD   BAM_BEAST_FROM_EAST
    3932 00014050     0067          .WORD   BAM_BAM_YEAH
    3933 00014060     006f          .WORD   BAM_GET_OUT
    3934                    
    3935 00014070 00000000          .LONG   0
    3936 00014090     0000          .WORD   0,010H
    3937 000140b0           DOINK_FINISHES
    3938 000140b0     0056          .WORD   DOINK_LAUGH_1
    3939                    
    3940 000140c0 00000000          .LONG   0
    3941 000140e0     0000          .WORD   0,010H
    3942 00014100           LUGER_FINISHES
    3943 00014100     01f3          .word   1f3h
    3944 00014110     0000          .WORD   0
    3945                    
    3946 00014120            SUBR   END_MATCH_SPEECH
    3947                    
    3948                    ;       MOVI    IT_DOESNT_LOOK_GOOD,A0
    3949                    ;       MOVE    *A13(WRESTLERNUM),A5
    3950                    ;       CALLR   SET_UP_PERSONAL_CALL
    3951                    ;       CALLR   ADD_VOICE
    3952                    
    3953 00014120     5729          CLR     A9
    3954 00014130                   CREATE  PIN_HIM_PID,PIN_HIM_PROC
    3955 000141b0     0960          RETS
    3956                    
    3957 000141c0           PIN_HIM_PROC
    3958 000141c0     09c0          movi    150,a0
         000141d0     0096  
    3959 000141e0     0d5f          calla   RNDPER
         000141f0 00000000! 
    3960 00014210     c280          jals    SUCIDE
         00014220 00000000! 
    3961                    
    3962 00014240     190b          movk    8,a11
    3963 00014250           lfhglp
    3964 00014250     1860          movk    3,a0
    3965 00014260     0d5f          CALLA   RNDRNG0
         00014270 00000000! 
    3966 00014290     4c01          MOVE    A0,A1
    3967 000142a0     2481          SLL     4,A1
    3968 000142b0     0b21          ADDI    WHICH_PIN_HIM,A1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   81

         000142c0 00014410' 
    3969 000142e0     8420          MOVE    *A1,A0
    3970 000142f0     4809          CMP     A0,A9
    3971 00014300     cb02          JRNE    NO_NEED_TO_DO_NEXT_ONE
    3972 00014310     b420          MOVE    *A1(010H),A0
         00014320     0010  
    3973 00014330           NO_NEED_TO_DO_NEXT_ONE
    3974 00014330     4c09          MOVE    A0,A9
    3975 00014340     0d5f          CALLA   triple_sound
         00014350 0000b990' 
    3976 00014370     5600          CLR     A0
    3977 00014380     edc0          MOVX    A14,A0
    3978 00014390     1680          subk    20,a0
    3979 000143a0     0d5f          CALLA   PRCSLP
         000143b0 00000000! 
    3980 000143d0     3f2b          dsj     a11,lfhglp
    3981                    
    3982 000143e0                   DIE
    3983                    
    3984                    ;       JRUC    PIN_HIM_PROC
    3985                    
    3986 00014410           WHICH_PIN_HIM
    3987 00014410     00d3          .WORD   0D3H,0D4H,0D5H,0d3h,0D4H
    3988                    
    3989 00014460            SUBR    KILL_PIN_HIM
    3990 00014460     09c0          MOVI    PIN_HIM_PID,A0
         00014470     014e  
    3991 00014480     5621          CLR     A1
    3992 00014490     03e1          NOT     A1
    3993 000144a0     0d5f          CALLA   KILALL
         000144b0 00000000! 
    3994 000144d0     0960          RETS
    3995                    
    3996                    *****************************************************************
    3997                    * INDIVIDUAL SOUND ROUTINES
    3998                    
    3999 000144e0           HIT_THE_MAT
    4000                    ;       ;if I'm outside the ring, do the concrete sound instead
    4001                    ;       ;;;No, don't.  It doesn't sound right.  Wrong call, maybe?
    4002                    ;       movi    37h,a0
    4003                    ;       move    *a13(INRING),a14
    4004                    ;       jrnz    lfhghm_snd
    4005                    
    4006 000144e0     09c0          MOVI    0C1H,A0
         000144f0     00c1  
    4007 00014500     0d5f          CALLA   triple_sound
         00014510 0000b990' 
    4008 00014530     1840          MOVK    2,A0
    4009 00014540     0d5f          CALLA   RNDRNG0
         00014550 00000000! 
    4010 00014570     2480          SLL     4,A0
    4011 00014580     0b20          ADDI    MAT_HITS,a0
         00014590 00014600' 
    4012 000145b0     8400          MOVE    *A0,A0
    4013 000145c0     0d5f  lfhghm_snd      CALLA   triple_sound
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   82

         000145d0 0000b990' 
    4014 000145f0     0960  lfhgrets        RETS
    4015                    
    4016                            ;low-priority mat hits
    4017 00014600           MAT_HITS
    4018 00014600     0076          .word   76h,77h,78h
    4019                    
    4020 00014630           SMALL_BOUNCE
    4021 00014630     1840          MOVK    2,A0
    4022 00014640     0d5f          CALLA   RNDRNG0
         00014650 00000000! 
    4023 00014670     2480          SLL     4,A0
    4024 00014680     0b20          ADDI    small_bounce_sounds,a0
         00014690 000147d0' 
    4025 000146b0     8400          MOVE    *A0,A0
    4026 000146c0     0d5f          CALLA   triple_sound
         000146d0 0000b990' 
    4027 000146f0     0960          RETS
    4028                    
    4029 00014700           SMALL_RUN
    4030 00014700     1840          MOVK    2,A0
    4031 00014710     0d5f          CALLA   RNDRNG0
         00014720 00000000! 
    4032 00014740     2480          SLL     4,A0
    4033 00014750     0b20          ADDI    small_run_sounds,a0
         00014760 00014800' 
    4034 00014780     8400          MOVE    *A0,A0
    4035 00014790     0d5f          CALLA   triple_sound
         000147a0 0000b990' 
    4036 000147c0     0960          RETS
    4037                    
    4038 000147d0           small_bounce_sounds
    4039 000147d0     00c0          .word   0C0H,0C2H,0DH   ;<--- this one is way too loud
    4040                    ;       .word   0dh,0ch,0bh
    4041                    
    4042 00014800           small_run_sounds
    4043 00014800     00c0          .word   0C0H,0C2H,0C0H
    4044                    
    4045 00014830           DO_FLAME_SND
    4046 00014830     1820          MOVK    1,A0
    4047 00014840     0d5f          CALLA   RNDRNG0
         00014850 00000000! 
    4048 00014870     2480          SLL     4,A0
    4049 00014880     0b20          ADDI    FLAME_SOUNDS,a0
         00014890 00014900' 
    4050 000148b0     8400          MOVE    *A0,A0
    4051 000148c0     0d5f          CALLA   triple_sound
         000148d0 0000b990' 
    4052 000148f0     0960          RETS
    4053                    
    4054 00014900           FLAME_SOUNDS
    4055 00014900     0099          .WORD   99H,9AH
    4056                    
    4057 00014920           DO_FLAME_HIT_SND
    4058 00014920     1880          MOVK    4,A0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   83

    4059 00014930     0d5f          CALLA   RNDRNG0
         00014940 00000000! 
    4060 00014960     2480          SLL     4,A0
    4061 00014970     0b20          ADDI    FLAME_HIT_SOUNDS,a0
         00014980 000149f0' 
    4062 000149a0     8400          MOVE    *A0,A0
    4063 000149b0     0d5f          CALLA   triple_sound
         000149c0 0000b990' 
    4064 000149e0     0960          RETS
    4065                    
    4066 000149f0           FLAME_HIT_SOUNDS
    4067 000149f0     009d          .WORD   9DH,9EH,9FH,0A0H,0A1H
    4068                    
    4069 00014a40            SUBR    DO_LEX_PUSH
    4070 00014a40     09ea          MOVI    LEX_WHICH,A10
         00014a50 00014e00' 
    4071 00014a70     c00f          JRUC    DO_PUSH_SPEECH
    4072 00014a80            SUBR    DO_BRET_PUSH
    4073 00014a80     09ea          MOVI    BRET_WHICH,A10
         00014a90 00014de0' 
    4074 00014ab0     c00b          JRUC    DO_PUSH_SPEECH
    4075 00014ac0            SUBR    DO_DOINK_PUSH
    4076 00014ac0     09ea          MOVI    DOINK_WHICH,A10
         00014ad0 00014da0' 
    4077 00014af0     c007          JRUC    DO_PUSH_SPEECH
    4078 00014b00            SUBR    DO_SHAWN_PUSH
    4079 00014b00     09ea          MOVI    SHAWN_WHICH,A10
         00014b10 00014dc0' 
    4080 00014b30     c003          JRUC    DO_PUSH_SPEECH
    4081                    
    4082 00014b40           DO_RAZOR_PUSH
    4083 00014b40     09ea          MOVI    RAZOR_WHICH,A10
         00014b50 00014d60' 
    4084                    
    4085 00014b70           DO_PUSH_SPEECH
    4086 00014b70     09c0          MOVI    500,A0
         00014b80     01f4  
    4087 00014b90     0d5f          CALLA   RNDPER
         00014ba0 00000000! 
    4088 00014bc0     c217          JRLS    NO_SOUNDS
    4089                    ;       MOVI    RAZOR_SWEAR_PID,A0
    4090                    ;       CLR     A1
    4091                    ;       NOT     A1
    4092                    ;       CALLA   EXISTP
    4093 00014bd0     05ae          move    @razor_swear_exists,a14
         00014be0 00000530- 
    4094 00014c00     cb13          JRNZ    NO_SOUNDS
    4095 00014c10                   CREATE  RAZOR_SWEAR_PID,DUMMY_WAIT
    4096 00014c90     b540          MOVE    *A10(-10H),A0
         00014ca0     fff0  
    4097 00014cb0     0d5f          CALLA   RNDRNG0
         00014cc0 00000000! 
    4098 00014ce0     2480          SLL     4,A0
    4099 00014cf0     4140          ADD     A10,A0
    4100 00014d00     8400          MOVE    *A0,A0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   84

    4101 00014d10     0d5f          CALLA   triple_sound
         00014d20 0000b990' 
    4102 00014d40           NO_SOUNDS
    4103 00014d40     0960          RETS
    4104                    
    4105 00014d50     0002          .WORD   2
    4106 00014d60           RAZOR_WHICH
    4107 00014d60     027e          .WORD   27EH,27FH,280H
    4108                    
    4109 00014d90     0000          .WORD   0
    4110 00014da0           DOINK_WHICH
    4111 00014da0     0282          .WORD   282H
    4112                    
    4113 00014db0     0000          .WORD   0
    4114 00014dc0           SHAWN_WHICH
    4115 00014dc0     0283          .WORD   283H
    4116                    
    4117 00014dd0     0000          .WORD   0
    4118 00014de0           BRET_WHICH
    4119 00014de0     0285          .WORD   285H
    4120                    
    4121 00014df0     0000          .WORD   0
    4122 00014e00           LEX_WHICH
    4123 00014e00     0286          .WORD   286H
    4124                    
    4125                    
    4126 00014e10           DUMMY_WAIT
    4127 00014e10     182e          movk    1,a14
    4128 00014e20     058e          move    a14,@razor_swear_exists
         00014e30 00000530- 
    4129 00014e50                   SLEEP   60
    4130 00014ea0     57ce          clr     a14
    4131 00014eb0     058e          move    a14,@razor_swear_exists
         00014ec0 00000530- 
    4132 00014ee0                   DIE
    4133                    
    4134 00014f10           DO_WAIL
    4135 00014f10     b5a1          MOVE    *A13(WRESTLERNUM),A1
         00014f20     0590  
    4136 00014f30     2481          SLL     4,A1
    4137 00014f40     0b21          ADDI    WHICH_WAIL,A1
         00014f50 00014fc0' 
    4138 00014f70     8420          MOVE    *A1,A0
    4139 00014f80     0d5f          CALLA   triple_sound
         00014f90 0000b990' 
    4140 00014fb0     0960          RETS
    4141                    
    4142 00014fc0           WHICH_WAIL
    4143 00014fc0     025f          .WORD  25FH     ;0      (Bret)
    4144 00014fd0     0270          .WORD  270H     ;1      (Razor)
    4145 00014fe0     020d          .WORD  20DH     ;2      (Taker)
    4146 00014ff0     020d          .WORD  20DH     ;3      (Yoko)
    4147 00015000     020d          .WORD  20DH     ;4      (Shawn)
    4148 00015010     020d          .WORD  20DH     ;5      (Bam Bam)
    4149 00015020     020d          .WORD  20DH     ;6      (Doink)
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   85

    4150 00015030     0000          .WORD  0        ;7      spare
    4151 00015040     020d          .WORD  20DH     ;8      (Lex)
    4152                    
    4153 00015050           DO_DOINK_SLAM
    4154 00015050     09c0          MOVI    218H,A0
         00015060     0218  
    4155 00015070     b5ae          MOVE    *a13(RPT_COUNT),a14
         00015080     07d0  
    4156 00015090     ca0a          JRZ     FOUND_SOUND
    4157 000150a0     142e          DEC     A14     
    4158 000150b0     ca08          JRZ     FOUND_SOUND
    4159 000150c0     0b4e          CMPI    4,A14
         000150d0     fffb  
    4160 000150e0     c508          JRGE    NO_MORE_DOINK_SPEECH
    4161 000150f0     248e          SLL     4,A14
    4162 00015100     0b2e          ADDI    DOINK_WHICH_SLAM,A14
         00015110 00015180' 
    4163 00015130     85c0          MOVE    *A14,A0
    4164 00015140           FOUND_SOUND
    4165 00015140     0d5f          CALLA   triple_sound
         00015150 0000b990' 
    4166 00015170           NO_MORE_DOINK_SPEECH
    4167 00015170     0960          RETS
    4168 00015180           DOINK_WHICH_SLAM
    4169 00015180     0215          .WORD   215H,216H,217H
    4170                    
    4171 000151b0           DO_CHOKE
    4172 000151b0     0d3f          CALLR   FIND_AND_KILL_ENDLESS
         000151c0     0039  
    4173 000151d0     b5a0          MOVE    *A13(WRESTLERNUM),A0
         000151e0     0590  
    4174 000151f0     2480          SLL     4,A0
    4175 00015200     0b20          ADDI    WHICH_CHOKE,A0
         00015210 000152c0' 
    4176 00015230     8400          MOVE    *A0,A0
    4177 00015240     0d5f          CALLA   triple_sound
         00015250 0000b990' 
    4178 00015270     2e0e          SRL     16,A14
    4179 00015280     058e          MOVE    A14,@ENDLESS_SOUND
         00015290 000004f0- 
    4180 000152b0     0960          RETS
    4181                    
    4182 000152c0           WHICH_CHOKE
    4183 000152c0     021a          .WORD   21AH ;HART
    4184 000152d0     021a          .WORD   21AH ;RAZOR
    4185 000152e0     021a          .WORD   21AH ;UND
    4186 000152f0     021a          .WORD   21AH ;YOKO
    4187 00015300     021a          .WORD   21AH ;SHAWN
    4188 00015310     021a          .WORD   21AH ;BAM
    4189 00015320     021a          .WORD   21AH ;DOINK
    4190 00015330     0000          .WORD   0
    4191 00015340     021a          .WORD   21AH ;LEX
    4192                    
    4193                    
    4194 00015350           DO_OTHERNONO
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   86

    4195 00015350     0d3f          CALLR   FIND_AND_KILL_ENDLESS
         00015360     001f  
    4196 00015370     b5a0          MOVE    *A13(WRESTLERNUM),A0
         00015380     0590  
    4197 00015390     c006          JRUC    RE_ENTER_NONO
    4198                    
    4199 000153a0           DO_NONO
    4200 000153a0     0d3f          CALLR   FIND_AND_KILL_ENDLESS
         000153b0     001a  
    4201 000153c0     b7a0          MOVE    *A13(ATTACH_PROC),A0,L
         000153d0     03e0  
    4202 000153e0     b400          MOVE    *A0(WRESTLERNUM),A0
         000153f0     0590  
    4203 00015400           RE_ENTER_NONO
    4204 00015400     2480          SLL     4,A0
    4205 00015410     0b20          ADDI    WHICH_NONO,A0
         00015420 000154d0' 
    4206 00015440     8400          MOVE    *A0,A0
    4207 00015450     0d5f          CALLA   triple_sound
         00015460 0000b990' 
    4208 00015480     2e0e          SRL     16,A14
    4209 00015490     058e          MOVE    A14,@ENDLESS_SOUND
         000154a0 000004f0- 
    4210 000154c0     0960          RETS
    4211                    
    4212 000154d0           WHICH_NONO
    4213 000154d0     023c          .WORD   23CH ;HART
    4214 000154e0     0281          .WORD   281H ;RAZOR
    4215 000154f0     023c          .WORD   23CH ;UND
    4216 00015500     023c          .WORD   23CH ;YOKO
    4217 00015510     023c          .WORD   23CH ;SHAWN
    4218 00015520     023c          .WORD   23CH ;BAM
    4219 00015530     0219          .WORD   219H ;DOINK
    4220 00015540     0000          .WORD   0
    4221 00015550     023c          .WORD   23CH ;LEX
    4222                    
    4223 00015560           FIND_AND_KILL_ENDLESS
    4224 00015560     098f          MMTM    SP,A0,A3,A1,A14
         00015570     d002  
    4225 00015580     05a0          MOVE    @ENDLESS_SOUND,A0
         00015590 000004f0- 
    4226 000155b0     ca13          JRZ     NO_ENDLESS_GOING
    4227 000155c0     4c0e          MOVE    A0,A14
    4228 000155d0     142e          DEC     A14
    4229 000155e0     24ee          SLL     7,A14
    4230 000155f0     0b2e          ADDI    WHICH_CHANNEL,A14
         00015600 00015720' 
    4231 00015620     97c0          MOVE    *A14+,A0,L
    4232 00015630     5621          CLR     A1
    4233 00015640     8220          MOVE    A1,*A0,L
    4234 00015650     97c0          MOVE    *A14+,A0,L
    4235 00015660     8220          MOVE    A1,*A0,L
    4236 00015670     85c3          MOVE    *A14,A3
    4237 00015680     0d5f          CALLA   SNDSND
         00015690 0000d1d0' 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   87

    4238 000156b0     5663          CLR     A3
    4239 000156c0     0583          MOVE    A3,@ENDLESS_SOUND
         000156d0 000004f0- 
    4240                    
    4241 000156f0           NO_ENDLESS_GOING
    4242 000156f0     09af          MMFM    SP,A0,A3,A1,A14
         00015700     400b  
    4243 00015710     0960          RETS
    4244                    
    4245 00015720           WHICH_CHANNEL
    4246 00015720 00000010-         .LONG   chan1pri,chan1dur,994,0
    4247 000157a0 00000060-         .LONG   chan2pri,chan2dur,995,0
    4248 00015820 000000b0-         .LONG   chan3pri,chan3dur,996,0
    4249 000158a0 00000100-         .LONG   chan4pri,chan4dur,997,0
    4250                    
    4251                    
    4252 00015920           DO_BLOCK_SND
    4253 00015920     1840          MOVK    2,A0
    4254 00015930     0d5f          CALLA   RNDRNG0
         00015940 00000000! 
    4255 00015960     2480          SLL     4,A0
    4256 00015970     0b20          ADDI    BLOCK_SOUNDS,a0
         00015980 000159f0' 
    4257 000159a0     8400          MOVE    *A0,A0
    4258                    ;       MOVK    19H,A0
    4259 000159b0     0d5f          CALLA   triple_sound
         000159c0 0000b990' 
    4260 000159e0     0960          RETS
    4261                    
    4262 000159f0           BLOCK_SOUNDS
    4263 000159f0     0004          .WORD   4,7,8
    4264                    
    4265 00015a20            SUBR   BLOCK_WOOSH
    4266 00015a20     09c0          MOVI    16h,A0
         00015a30     0016  
    4267 00015a40     0d5f          CALLA   triple_sound
         00015a50 0000b990' 
    4268 00015a70     0960          RETS
    4269                    
    4270 00015a80           WALK_SOUND
    4271 00015a80     09c0          MOVI    046H,A0
         00015a90     0046  
    4272 00015aa0     05a1          MOVE    @HCOUNT,A1
         00015ab0 c00001c0  
    4273 00015ad0     2fe1          SRL     1,A1
    4274 00015ae0     c902          JRNC    WALK_SET
    4275 00015af0     09c0          MOVI    047H,A0
         00015b00     0047  
    4276 00015b10           WALK_SET
    4277 00015b10     0d5f          CALLA   triple_sound
         00015b20 0000b990' 
    4278 00015b40     0960          RETS
    4279                    
    4280 00015b50           DO_RAZOR_RUG_SPEECH
    4281 00015b50     b5ae          MOVE    *a13(RPT_COUNT),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   88

         00015b60     07d0  
    4282 00015b70     142e          DEC     A14     
    4283 00015b80     0b4e          CMPI    4,A14
         00015b90     fffb  
    4284 00015ba0     c508          JRGE    NO_MORE_RAZOR_SPEECH
    4285 00015bb0     248e          SLL     4,A14
    4286 00015bc0     0b2e          ADDI    RAZOR_RUG_TABLE,A14
         00015bd0 00015c40' 
    4287 00015bf0     85c0          MOVE    *A14,A0
    4288 00015c00     0d5f          CALLA   triple_sound
         00015c10 0000b990' 
    4289 00015c30           NO_MORE_RAZOR_SPEECH
    4290 00015c30     0960          RETS
    4291                    
    4292 00015c40           RAZOR_RUG_TABLE
    4293 00015c40     027d          .WORD   27DH,27CH,27BH,27AH
    4294                    
    4295 00015c80           DO_BLOCKED
    4296 00015c80     09c0          MOVI    50,A0
         00015c90     0032  
    4297 00015ca0     0d5f          CALLA   RNDPER
         00015cb0 00000000! 
    4298 00015cd0     c20b          JRLS    NOT_BLOCKED
    4299 00015ce0     b5a1          MOVE    *A13(WRESTLERNUM),A1
         00015cf0     0590  
    4300 00015d00     2481          SLL     4,A1
    4301 00015d10     0b21          ADDI    WHICH_BLOCK_SPEECH,A1
         00015d20 00015da0' 
    4302 00015d40     8420          MOVE    *A1,A0
    4303 00015d50     ca03          JRZ     NOT_BLOCKED
    4304 00015d60     0d5f          CALLA   triple_sound
         00015d70 0000b990' 
    4305 00015d90           NOT_BLOCKED
    4306 00015d90     0960          RETS
    4307                    
    4308 00015da0           WHICH_BLOCK_SPEECH
    4309 00015da0     0236          .WORD   236H ;HART
    4310 00015db0     0280          .WORD   280H ;RAZOR
    4311 00015dc0     023d          .WORD   23DH ;UND
    4312 00015dd0     023e          .WORD   23EH ;YOKO
    4313 00015de0     0284          .WORD   284H ;SHAWN
    4314 00015df0     006a          .WORD   06AH ;BAM
    4315 00015e00     0212          .WORD   212H ;DOINK
    4316 00015e10     0000          .WORD   0
    4317 00015e20     0287          .WORD   287H ;LEX
    4318                    
    4319 00015e30           MAKE_HIM_SCREAM
    4320 00015e30     b7a4          MOVE    *A13(WHOIHIT),A4,L
         00015e40     0500  
    4321 00015e50     b483          MOVE    *A4(WRESTLERNUM),A3
         00015e60     0590  
    4322 00015e70     c002          JRUC    ACTUAL_SCREAM
    4323                    
    4324 00015e80           DO_SCREAM
    4325 00015e80     b5a3          MOVE    *A13(WRESTLERNUM),A3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   89

         00015e90     0590  
    4326 00015ea0           ACTUAL_SCREAM
    4327 00015ea0     24c3          SLL     6,A3
    4328 00015eb0     0b23          ADDI    WHICH_SCREAM,A3
         00015ec0 00015fa0' 
    4329 00015ee0     1860          MOVK    3,A0
    4330 00015ef0     0d5f          CALLA   RNDRNG0
         00015f00 00000000! 
    4331 00015f20     2480          SLL     4,A0
    4332 00015f30     4003          ADD     A0,A3
    4333 00015f40     8460          MOVE    *A3,A0
    4334 00015f50     ca03          JRZ     NO_SCREAM
    4335 00015f60     0d5f          CALLA   triple_sound
         00015f70 0000b990' 
    4336 00015f90           NO_SCREAM
    4337 00015f90     0960          RETS
    4338                    
    4339 00015fa0           WHICH_SCREAM
    4340 00015fa0     0265          .WORD   265H,266H,262H,263H     ;HART
    4341 00015fe0     0268          .WORD   268H,269H,26FH,26CH     ;RAZOR  
    4342 00016020     0265          .WORD   265H,266H,262H,263H     ;UND    !Using Bret screams     
    4343 00016060     0268          .WORD   268H,269H,26FH,26CH     ;!
    4344 000160a0     0265          .WORD   265H,266H,262H,263H     ;SHAWN  !
    4345 000160e0     0265          .WORD   265H,266H,262H,263H     ;BAM    !
    4346 00016120     0071          .WORD   71H,72H,20AH,20CH       ;DOINK
    4347 00016160     0000          .WORD   0,0,0,0
    4348 000161a0     0268          .WORD   268H,269H,26FH,26CH     ;LEX    !
    4349                    
    4350 000161e0            SUBR   GOUGE_SOUND
    4351 000161e0     09c0          MOVI    0A9H,A0
         000161f0     00a9  
    4352 00016200     0d5f          CALLA   triple_sound
         00016210 0000b990' 
    4353 00016230     0960          RETS
    4354                    
    4355 00016240           MAYBE_GIDDUP
    4356 00016240     b5a9          MOVE    *A13(WRESTLERNUM),A9
         00016250     0590  
    4357 00016260                   CREATE0 MAYBE_GIDDUP_PROC
    4358 000162d0     0960          RETS
    4359                    
    4360 000162e0           MAYBE_GIDDUP_PROC
    4361 000162e0                   SLEEP   40
    4362 00016330     1840          MOVK    2,A0
    4363 00016340     0d5f          CALLA   RNDRNG0
         00016350 00000000! 
    4364 00016370     4c00          MOVE    A0,A0
    4365 00016380     ca08          JRZ     OKAY_DO_GIDDUP
    4366 00016390     0b00          ADDI    156,A0
         000163a0     009c  
    4367 000163b0     0d5f          CALLA   IF_SILENT_ADD_VOICE
         000163c0 0000e620' 
    4368 000163e0                   DIE
    4369 00016410           OKAY_DO_GIDDUP
    4370 00016410     4d25          MOVE    A9,A5
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   90

    4371 00016420     09c0          MOVI    GIDDUP_MODE,A0
         00016430     fffa  
    4372 00016440     0d5f          CALLA   SET_UP_PERSONAL_CALL
         00016450 0000fac0' 
    4373 00016470     0d3f          CALLR   ADD_SPEECH_TO_LIST
         00016480     f90e  
    4374 00016490     0d5f          CALLA   IF_SILENT_ADD_VOICE
         000164a0 0000e620' 
    4375 000164c0                   DIE
    4376                    
    4377 000164f0           CALL_BONE_BREAK
    4378 000164f0     1840          MOVK    2,A0
    4379 00016500     0d5f          CALLA   RNDRNG0
         00016510 00000000! 
    4380 00016530     2480          SLL     4,A0
    4381 00016540     0b20          ADDI    BONE_BREAK_SOUNDS,a0
         00016550 00016640' 
    4382 00016570     8400          MOVE    *A0,A0
    4383 00016580     0d5f          CALLA   triple_sound
         00016590 0000b990' 
    4384 000165b0     c907          JRNC    NOT_HEARD
    4385 000165c0                   CREATE0 DID_YOU_HEAR_THAT_PROC
    4386 00016630           NOT_HEARD
    4387 00016630     0960          RETS
    4388                    
    4389 00016640           BONE_BREAK_SOUNDS
    4390 00016640     001d          .WORD   1dh,9bh,98h
    4391                    
    4392 00016670           DID_YOU_HEAR_THAT_PROC
    4393 00016670                   SLEEP   50
    4394 000166c0     09c0          MOVI    DID_YOU_HEAR_THAT,A0
         000166d0     0165  
    4395 000166e0     0d5f          CALLA   IF_SILENT_ADD_VOICE
         000166f0 0000e620' 
    4396 00016710                   DIE
    4397                    
    4398 00016740           MAYBE_BOUNCE_ROPE
    4399 00016740     1940          MOVK    10,A0
    4400 00016750     0d5f          CALLA   RNDRNG0
         00016760 00000000! 
    4401 00016780     4c00          MOVE    A0,A0
    4402 00016790     cb05          JRNZ    NO_BOUNCE_ROPE_CALL
    4403 000167a0     09c0          MOVI    INTO_THE_ROPES,A0
         000167b0     015b  
    4404 000167c0     0d5f          CALLA   IF_SILENT_ADD_VOICE
         000167d0 0000e620' 
    4405 000167f0           NO_BOUNCE_ROPE_CALL
    4406 000167f0     0960          RETS
    4407                    
    4408 00016800           MAYBE_HIGH_RISK
    4409 00016800     1880          MOVK    4,A0
    4410 00016810     0d5f          CALLA   RNDRNG0
         00016820 00000000! 
    4411 00016840     4c00          MOVE    A0,A0
    4412 00016850     cb05          JRNZ    NO_HIGH_RISK
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   91

    4413 00016860     09c0          MOVI    HIGH_RISK_MANUEVER,A0
         00016870     01a7  
    4414 00016880     0d5f          CALLA   IF_SILENT_ADD_VOICE
         00016890 0000e620' 
    4415 000168b0           NO_HIGH_RISK
    4416 000168b0                   DIE
    4417                    
    4418 000168e0           MAYBE_TOUGH_ENOUGH
    4419 000168e0     1880          MOVK    4,A0
    4420 000168f0     0d5f          CALLA   RNDRNG0
         00016900 00000000! 
    4421 00016920     4c00          MOVE    A0,A0
    4422 00016930     cb05          JRNZ    lfhgnot_tough
    4423 00016940     09c0          MOVI    ARE_YOU_TOUGH_ENOUGH,A0
         00016950     0191  
    4424 00016960     0d5f          CALLA   ADD_VOICE
         00016970 0000e720' 
    4425 00016990           lfhgnot_tough
    4426 00016990     0960          rets
    4427                    
    4428 000169a0           MAYBE_SHOCKING
    4429 000169a0     09c0          movi    3eh,a0
         000169b0     003e  
    4430 000169c0     0d5f          calla   triple_sound
         000169d0 0000b990' 
    4431 000169f0                   SLEEP   92
    4432 00016a40     1880          MOVK    4,A0
    4433 00016a50     0d5f          CALLA   RNDRNG0
         00016a60 00000000! 
    4434 00016a80     4c00          MOVE    A0,A0
    4435 00016a90     cb05          JRNZ    NO_SHOCKING
    4436 00016aa0     09c0          MOVI    SHOCKING,A0
         00016ab0     01ac  
    4437 00016ac0     0d5f          CALLA   IF_SILENT_ADD_VOICE
         00016ad0 0000e620' 
    4438 00016af0           NO_SHOCKING
    4439 00016af0                   DIE
    4440                    
    4441                    **************************************************************
    4442                    *CROWD TABLES
    4443 00016b20     0003          .WORD   3
    4444 00016b30           SETUP_TABLE
    4445 00016b30     080e          .WORD   CROWD_CRESCENDO,D_CROWD_CRESCENDO,C_LONG|C_OVERIDE,0
    4446 00016b70     0802          .WORD   CROWD_OH_1,D_CROWD_OH_1,C_LONG|C_OVERIDE,0
    4447 00016bb0     0808          .WORD   CROWD_HEY_LOOP,D_CROWD_HEY_LOOP,C_LONG|C_OVERIDE,0
    4448 00016bf0     0809          .WORD   CROWD_YEAH_0,D_CROWD_YEAH_0,C_LONG|C_OVERIDE,0
    4449                    
    4450 00016c30     0000          .WORD   0
    4451 00016c40           CRESCENDO_TABLE
    4452 00016c40     080e          .WORD   CROWD_CRESCENDO,D_CROWD_CRESCENDO,C_LONG|C_RANDOM,700
    4453                    
    4454 00016c80     0002          .WORD   2
    4455 00016c90           ROPES_CHEER
    4456 00016c90     0805          .WORD   CROWD_WHISTLE_1,D_CROWD_WHISTLE_1,C_LONG|C_RANDOM,600
    4457 00016cd0     080c          .WORD   CROWD_WHOA_1,D_CROWD_WHOA_1,C_LONG|C_RANDOM,600
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   92

    4458 00016d10     0802          .WORD   CROWD_OH_1,D_CROWD_OH_1,C_LONG|C_RANDOM,600
    4459                    
    4460 00016d50     0002          .WORD   2
    4461 00016d60           CROWD_FAIL
    4462 00016d60     080f          .WORD   CROWD_OH_FAIL,D_CROWD_OH_FAIL,C_LONG|C_RANDOM,600
    4463 00016da0     0801          .WORD   CROWD_OH_0,D_CROWD_OH_0,C_LONG|C_RANDOM,600
    4464 00016de0     0800          .WORD   CROWD_BOO,D_CROWD_BOO,C_LONG|C_RANDOM,600
    4465                    
    4466 00016e20     0002          .WORD   2
    4467 00016e30           CROWD_SPECIAL
    4468 00016e30     0810          .WORD   CROWD_OH_CHEER,D_CROWD_OH_CHEER,C_LONG|C_OVERIDE,0
    4469 00016e70     0803          .WORD   CROWD_HOORAY,D_CROWD_HOORAY,C_LONG|C_OVERIDE,0
    4470 00016eb0     080a          .WORD   CROWD_VICTORY_LOOP,D_CROWD_VICTORY_LOOP,C_LONG|C_OVERIDE,0
    4471                    
    4472 00016ef0     0004          .WORD   4
    4473 00016f00           CROWD_CHEER
    4474 00016f00     0809          .WORD   CROWD_YEAH_0,D_CROWD_YEAH_0,C_LONG|C_RANDOM,600
    4475 00016f40     0805          .WORD   CROWD_WHISTLE_1,D_CROWD_WHISTLE_1,C_LONG|C_RANDOM,600
    4476 00016f80     0806          .WORD   CROWD_CHEER_0,D_CROWD_CHEER_0,C_LONG|C_RANDOM,600
    4477 00016fc0     0807          .WORD   CROWD_CHEER_1,D_CROWD_CHEER_1,C_LONG|C_RANDOM,600
    4478 00017000     080d          .WORD   CROWD_DOUBLE_WHOA,D_CROWD_DOUBLE_WHOA,C_LONG|C_RANDOM,600
    4479                    
    4480 00017040     0001          .WORD   1
    4481 00017050           CROWD_THROWN
    4482 00017050     0810          .WORD   CROWD_OH_CHEER,D_CROWD_OH_CHEER,C_SHORT|C_OVERIDE,0
    4483 00017090     0805          .WORD   CROWD_WHISTLE_1,D_CROWD_WHISTLE_1,C_SHORT|C_OVERIDE,0
    4484                    
    4485 000170d0     0001          .WORD   1
    4486 000170e0           CROWD_ORDINARY
    4487 000170e0     0810          .WORD   CROWD_OH_CHEER,D_CROWD_OH_CHEER,C_SHORT|C_OVERIDE|C_RANDOM,250
    4488 00017120     0805          .WORD   CROWD_WHISTLE_1,D_CROWD_WHISTLE_1,C_SHORT|C_OVERIDE|C_RANDOM,250
    4489                    
    4490                    ****************************************************************************
    4491                    * SOUND VOLUME CONTROLS
    4492                    
    4493                    ;A11 = WHICH CHANNEL, -1 = MASTER
    4494                    ;A8 = TICKS TO FADE OVER
    4495 00017160           FADE_MASTER_VOL
    4496 00017160     09c0          MOVI    ADJVOLUME,A0
         00017170     001c  
    4497 00017180     0d5f          CALLA   GET_ADJ
         00017190 00000000! 
    4498 000171b0                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    4499 00017240     4c09          MOVE    A0,A9
    4500 00017250     2609          SLL     16,A9
    4501 00017260     4d2a          MOVE    A9,A10
    4502 00017270     5b09          DIVU    A8,A9
    4503 00017280           NEXT_FADE
    4504 00017280     452a          SUB     A9,A10
    4505 00017290     4d40          MOVE    A10,A0
    4506 000172a0     2e00          SRL     16,A0
    4507 000172b0     4d61          MOVE    A11,A1
    4508 000172c0     0d3f          CALLR   SET_LOWER_VOL
         000172d0     000c  
    4509 000172e0                   SLEEPK  1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   93

    4510 00017320     3d68          DSJS    A8,NEXT_FADE
    4511 00017330     5600          CLR     A0
    4512 00017340     4d61          MOVE    A11,A1
    4513 00017350     0d3f          CALLR   SET_LOWER_VOL
         00017360     0003  
    4514 00017370                   DIE
    4515                    
    4516                    ;A1 WHICH CHANNEL
    4517                    ;A0 WHAT TO SET CHANNEL VOL TO 255=100%
    4518 000173a0           SET_LOWER_VOL
    4519 000173a0     09c3          MOVI    55ABH,A3
         000173b0     55ab  
    4520 000173c0     4023          ADD     A1,A3
    4521 000173d0     0d5f          CALLA   SNDSND
         000173e0 0000d1d0' 
    4522 00017400     4c03          MOVE    A0,A3
    4523 00017410     2500          SLL     8,A0
    4524 00017420     03e3          NOT     A3
    4525 00017430     2703          SLL     24,A3
    4526 00017440     2d03          SRL     24,A3
    4527 00017450     5403          OR      A0,A3
    4528 00017460     0d5f          CALLA   SNDSND
         00017470 0000d1d0' 
    4529 00017490     0960          RETS
    4530                    
    4531 000174a0            SUBR   KILL_ALL_CHANNELS
    4532 000174a0     5600          CLR     A0
    4533 000174b0     0580          MOVE    A0,@chan1dur
         000174c0 00000020- 
    4534 000174e0     0580          MOVE    A0,@chan1pri
         000174f0 00000010- 
    4535 00017510     09c3          movi    994,a3
         00017520     03e2  
    4536 00017530     0d5f          calla   SNDSND
         00017540 0000d1d0' 
    4537 00017560     0580          MOVE    A0,@chan2dur
         00017570 00000070- 
    4538 00017590     0580          MOVE    A0,@chan2pri
         000175a0 00000060- 
    4539 000175c0     09c3          movi    995,a3
         000175d0     03e3  
    4540 000175e0     0d5f          calla   SNDSND
         000175f0 0000d1d0' 
    4541 00017610     0580          MOVE    A0,@chan3dur
         00017620 000000c0- 
    4542 00017640     0580          MOVE    A0,@chan3pri
         00017650 000000b0- 
    4543 00017670     09c3          movi    996,a3
         00017680     03e4  
    4544 00017690     0d5f          calla   SNDSND
         000176a0 0000d1d0' 
    4545 000176c0     0580          MOVE    A0,@chan4dur
         000176d0 00000110- 
    4546 000176f0     0580          MOVE    A0,@chan4pri
         00017700 00000100- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:09 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

sound processor                                                      PAGE   94

    4547 00017720     09c3          movi    997,a3
         00017730     03e5  
    4548 00017740     0d5f          calla   SNDSND
         00017750 0000d1d0' 
    4549 00017770     0960          rets
    4550                    
    4551                    ******************************************************************************
    4552                    
    4553                            .end

 No Errors,  No Warnings
