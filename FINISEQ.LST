TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Michael J. Lynch
       4                    * Initiated:            5/02/95
       5                    *
       6                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    **************************************************************
       9                    
      10                            .file   "finiseq.asm"
      12                            .width  132
      13                            .option b,d,l,t
      14                            .mnolist
      15                    
      16                    
      17                            .include        "macros.h"
      18                            .include        "mproc.equ"             ;Mproc equates
      19                            .include        "sys.equ"
      20                            .include        "game.equ"
      21                            .include        "plyr.equ"
      22                            .include        "anim.equ"
      23                            .include        "sound.h"
      24                            .include        "ring.equ"
      25                            .include        "display.equ"
      26                            .include        "ring.equ"
      27                    
      28                            .include        "takerimg.h"
      29                            .include        "bretimg.h"
      30                            .include        "doinkimg.h"
      31                            .include        "yokoimg.h"
      32                            .include        "razorimg.h"
      33                            .include        "leximg.h"
      34                            .include        "shawnimg.h"
      35                            .include        "bamimg.h"
      36                    
      37                            .include        "damage.equ"
      38                            .include        "miscimg.glo"
      39                            .INCLUDE        "SWEAT.EQU"
      40                    
      41 00000000                   BSSX    close_the_door,16
      42 00000000                   BSSX    close_the_floor,16
      43 00000000                   BSSX    dead_wrestler,32
      44 00000000                   BSSX    finish_completed,16
      45 00000000                   BSSX    wres_mv_done,16
      46 00000000                   BSSX    guy_in,16
      47 00000000                   BSSX    guy_up,16
      48                    
      49 00000080                   .bss    pal_test,16*64
      50                    
      51                            .ref    KILL
      52                            .ref    triple_sound
      53                            .ref    change_anim1a
      54                            .ref    DO_CROWD_CHEER
      55                            .ref    UNDNEG_P
      56                            .ref    RNDRNG0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    2

      57                            .ref    do_roll
      58                    
      59                    
      60                    
      61                    
      62                    
      63                    ******************************************************************************
      64                    *                                                                            *
      65                    * Bret Hart Finish Move Sequences                                            *
      66                    *                                                                            *
      67                    ******************************************************************************
      68                    
      69                            .if NUM_BRET_FINISHES
      70                    ******************************************************************
      71                    *
      72                    * Bret Hart finish move dcbe1
      73                    
      74                     SUBR   hrt_finish1_move
      75                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
      76                            .word   ANI_ZEROVELS
      77                            .word   ANI_SETSPEED,100h
      78                    
      79                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
      80                            .word   ANI_SET_WRESTLER_XFLIP
      81                    
      82                            .word   ANI_SETMODE,MODE_NORMAL
      83                            .word   ANI_END
      84                    
      85                            .endif
      86                    
      87                            .if NUM_BRET_FINISHES > 1
      88                    ******************************************************************
      89                    *
      90                    * Bret Hart finish move ovig2
      91                    
      92                     SUBR   hrt_finish2_move
      93                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
      94                            .word   ANI_ZEROVELS
      95                            .word   ANI_SETSPEED,100h
      96                    
      97                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
      98                            .word   ANI_SET_WRESTLER_XFLIP
      99                    
     100                            .word   ANI_SETMODE,MODE_NORMAL
     101                            .word   ANI_END
     102                    
     103                            .endif
     104                    
     105                    
     106                    
     107                    
     108                    
     109                    ******************************************************************************
     110                    *                                                                            *
     111                    * Bam Bam Bigelow Finish Move Sequences                                      *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    3

     112                    *                                                                            *
     113                    ******************************************************************************
     114                    
     115                            .if NUM_BAM_FINISHES
     116                    ******************************************************************
     117                    *
     118                    * Bam Bam finish move nryh1
     119                    
     120                     SUBR   bam_finish1_move
     121                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     122                            .word   ANI_ZEROVELS
     123                            .word   ANI_SETSPEED,100h
     124                    
     125                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     126                            .word   ANI_SET_WRESTLER_XFLIP
     127                    
     128                            .word   ANI_SETMODE,MODE_NORMAL
     129                            .word   ANI_END
     130                    
     131                            .endif
     132                    
     133                            .if NUM_BAM_FINISHES > 1
     134                    ******************************************************************
     135                    *
     136                    * Bam Bam finish move dcmt2
     137                    
     138                     SUBR   bam_finish2_move
     139                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     140                            .word   ANI_ZEROVELS
     141                            .word   ANI_SETSPEED,100h
     142                    
     143                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     144                            .word   ANI_SET_WRESTLER_XFLIP
     145                    
     146                            .word   ANI_SETMODE,MODE_NORMAL
     147                            .word   ANI_END
     148                    
     149                            .endif
     150                    
     151                    
     152                    
     153                    
     154                    
     155                    ******************************************************************************
     156                    *                                                                            *
     157                    * Yokozuna Finish Move Sequences                                             *
     158                    *                                                                            *
     159                    ******************************************************************************
     160                    
     161                            .if NUM_YOKO_FINISHES
     162                    ******************************************************************
     163                    *
     164                    * Yokozuna finish move naak1
     165                    
     166                     SUBR   yok_finish1_move
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    4

     167                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     168                            .word   ANI_ZEROVELS
     169                            .word   ANI_SETSPEED,100h
     170                    
     171                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     172                            .word   ANI_SET_WRESTLER_XFLIP
     173                    
     174                            .word   ANI_SETMODE,MODE_NORMAL
     175                            .word   ANI_END
     176                    
     177                            .endif
     178                    
     179                            .if NUM_YOKO_FINISHES > 1
     180                    ******************************************************************
     181                    *
     182                    * Yokozuna finish move ahuv2
     183                    
     184                     SUBR   yok_finish2_move
     185                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     186                            .word   ANI_ZEROVELS
     187                            .word   ANI_SETSPEED,100h
     188                    
     189                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     190                            .word   ANI_SET_WRESTLER_XFLIP
     191                    
     192                            .word   ANI_SETMODE,MODE_NORMAL
     193                            .word   ANI_END
     194                    
     195                            .endif
     196                    
     197                    
     198                    
     199                    
     200                    
     201                    ******************************************************************************
     202                    *                                                                            *
     203                    * Doink The Clown Finish Move Sequences                                      *
     204                    *                                                                            *
     205                    ******************************************************************************
     206                    
     207                            .if NUM_DOINK_FINISHES
     208                    ******************************************************************
     209                    *
     210                    * Doink finish move qcgc1
     211                    
     212                     SUBR   dnk_finish1_move
     213                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     214                            .word   ANI_ZEROVELS
     215                            .word   ANI_SETSPEED,100h
     216                    
     217                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     218                            .word   ANI_SET_WRESTLER_XFLIP
     219                    
     220                            .word   ANI_SETMODE,MODE_NORMAL
     221                            .word   ANI_END
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    5

     222                    
     223                            .endif
     224                    
     225                            .if NUM_DOINK_FINISHES > 1
     226                    ******************************************************************
     227                    *
     228                    * Doink finish move obps2
     229                    
     230                     SUBR   dnk_finish2_move
     231                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     232                            .word   ANI_ZEROVELS
     233                            .word   ANI_SETSPEED,100h
     234                    
     235                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     236                            .word   ANI_SET_WRESTLER_XFLIP
     237                    
     238                            .word   ANI_SETMODE,MODE_NORMAL
     239                            .word   ANI_END
     240                    
     241                            .endif
     242                    
     243                    
     244                    
     245                    
     246                    
     247                    
     248                    ******************************************************************************
     249                    *                                                                            *
     250                    * Razor Ramon Finish Move Sequences                                          *
     251                    *                                                                            *
     252                    ******************************************************************************
     253                    
     254                            .if NUM_RAZOR_FINISHES
     255                    ******************************************************************
     256                    *
     257                    * Razor Ramon finish move srmn1
     258                    
     259                     SUBR   rzr_finish1_move
     260                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     261                            .word   ANI_ZEROVELS
     262                            .word   ANI_SETSPEED,100h
     263                    
     264                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     265                            .word   ANI_SET_WRESTLER_XFLIP
     266                    
     267                            .word   ANI_SETMODE,MODE_NORMAL
     268                            .word   ANI_END
     269                    
     270                            .endif
     271                    
     272                            .if NUM_RAZOR_FINISHES > 1
     273                    ******************************************************************
     274                    *
     275                    * Razor Ramon finish move qddc2
     276                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    6

     277                     SUBR   rzr_finish2_move
     278                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     279                            .word   ANI_ZEROVELS
     280                            .word   ANI_SETSPEED,100h
     281                    
     282                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     283                            .word   ANI_SET_WRESTLER_XFLIP
     284                    
     285                            .word   ANI_SETMODE,MODE_NORMAL
     286                            .word   ANI_END
     287                    
     288                            .endif
     289                    
     290                    
     291                    
     292                    
     293                    
     294                    
     295                    ******************************************************************************
     296                    *                                                                            *
     297                    * Lex Lugar Finish Move Sequences                                            *
     298                    *                                                                            *
     299                    ******************************************************************************
     300                    
     301                            .if NUM_LEX_FINISHES
     302                    ******************************************************************
     303                    *
     304                    * Lex Lugar finish move xlws1
     305                    
     306                     SUBR   lex_finish1_move
     307                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     308                            .word   ANI_ZEROVELS
     309                            .word   ANI_SETSPEED,100h
     310                    
     311                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     312                            .word   ANI_SET_WRESTLER_XFLIP
     313                    
     314                            .word   ANI_SETMODE,MODE_NORMAL
     315                            .word   ANI_END
     316                    
     317                            .endif
     318                    
     319                            .if NUM_LEX_FINISHES > 1
     320                    ******************************************************************
     321                    *
     322                    * Lex Lugar finish move jbhe2
     323                    
     324                     SUBR   lex_finish2_move
     325                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     326                            .word   ANI_ZEROVELS
     327                            .word   ANI_SETSPEED,100h
     328                    
     329                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     330                            .word   ANI_SET_WRESTLER_XFLIP
     331                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    7

     332                            .word   ANI_SETMODE,MODE_NORMAL
     333                            .word   ANI_END
     334                    
     335                            .endif
     336                    
     337                    
     338                    
     339                    
     340                    
     341                    
     342                    ******************************************************************************
     343                    *                                                                            *
     344                    * Undertaker Finish Move Sequences                                           *
     345                    *                                                                            *
     346                    ******************************************************************************
     347                    
     348                            .if NUM_TAKER_FINISHES
     349                            .endif
     350                            .if NUM_TAKER_FINISHES > 1
     351                    ******************************************************************
     352                    *
     353                    * Undertaker finish move naya2
     354                    
     355                     SUBR   und_finish2_move
     356                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     357                            .word   ANI_ZEROVELS
     358                            .word   ANI_SETSPEED,100h
     359                    
     360                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     361                            .word   ANI_SET_WRESTLER_XFLIP
     362                    
     363                            .word   ANI_SETMODE,MODE_NORMAL
     364                            .word   ANI_END
     365                    
     366                            .endif
     367                    
     368                    
     369                    
     370                    
     371                    
     372                    
     373                    ******************************************************************************
     374                    *                                                                            *
     375                    * Shawn Michaels Finish Move Sequences                                       *
     376                    *                                                                            *
     377                    ******************************************************************************
     378                    
     379                            .if NUM_SHAWN_FINISHES
     380                    ******************************************************************
     381                    *
     382                    * Shawn Michaels finish move rwcw1
     383                    
     384                     SUBR   shn_finish1_move
     385                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     386                            .word   ANI_ZEROVELS
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    8

     387                            .word   ANI_SETSPEED,100h
     388                    
     389                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     390                            .word   ANI_SET_WRESTLER_XFLIP
     391                    
     392                            .word   ANI_SETMODE,MODE_NORMAL
     393                            .word   ANI_END
     394                    
     395                            .endif
     396                    
     397                            .if NUM_SHAWN_FINISHES > 1
     398                    ******************************************************************
     399                    *
     400                    * Shawn Michaels finish move kavl2
     401                    
     402                     SUBR   shn_finish2_move
     403                            .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
     404                            .word   ANI_ZEROVELS
     405                            .word   ANI_SETSPEED,100h
     406                    
     407                            .word   ANI_SETFACING           ;ANI_XFLIP <- not primary anim
     408                            .word   ANI_SET_WRESTLER_XFLIP
     409                    
     410                            .word   ANI_SETMODE,MODE_NORMAL
     411                            .word   ANI_END
     412                    
     413                            .endif
     414                    
     415                    ******************************************************************************
     416                    
     417                    
     418                    ;
     419                    ; The wrestler being knocked into the coffin MUST start at a Z of
     420                    ; greater than 1430h and end up at a Z of 1428h when in the coffin.
     421                    ;
     422                    
     423              04e2  HOLE_XPOS       .equ    1250
     424              00c5  HOLE_YPOS       .equ    197
     425                    
     426                    ;MAT_BACK_Z     .equ    ((RING_TOP+20)|1000h)
     427              14b4  MAT_BACK_Z      .equ    ((RING_Z_CENTER+20)|1000h)
     428              14b4  TMBSTN_Z        .equ    MAT_BACK_Z
     429              14cf  MAT_FRONT_Z     .equ    MAT_BACK_Z+27
     430              14d0  COF_BACK_Z      .equ    MAT_BACK_Z+28
     431              14d2  COF_FRONT_Z     .equ    COF_BACK_Z+2
     432              14d4  DOOR_CLOSE_Z    .equ    COF_FRONT_Z+2
     433              04d0  WRES_Z          .equ    ((COF_BACK_Z)&0fffh)
     434              14d0  EXP_Z           .equ    MAT_FRONT_Z+1
     435                    
     436              0004  COFFIN_VEL      .equ    4
     437              0019  NUM_PUFFS       .equ    25
     438                    
     439                    ********************************************************************
     440                    *
     441                    * Do little explosions and puffs of smoke above hole in ring
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE    9

     442                    *
     443                    
     444 00000000            SUBRP  lxskexp1_anim
     445 00000000 00000000!         .long   SMOKE01
     446 00000020 00000000!         .long   SMOKE02
     447 00000040 00000000!         .long   SMOKE03
     448 00000060 00000000!         .long   SMOKE04
     449 00000080 00000000!         .long   SMOKE05
     450 000000a0 00000000!         .long   SMOKE06
     451 000000c0 00000000!         .long   SMOKE07
     452 000000e0 00000000!         .long   SMOKE08
     453 00000100 00000000!         .long   SMOKE09
     454 00000120 00000000!         .long   SMOKE10
     455 00000140 00000000          .long   0
     456                    
     457 00000160            SUBRP  lxskexp2_anim
     458 00000160 00000000!         .long   SMOKEB01
     459 00000180 00000000!         .long   SMOKEB02
     460 000001a0 00000000!         .long   SMOKEB03
     461 000001c0 00000000!         .long   SMOKEB04
     462 000001e0 00000000!         .long   SMOKEB05
     463 00000200 00000000!         .long   SMOKEB06
     464 00000220 00000000!         .long   SMOKEB07
     465 00000240 00000000!         .long   SMOKEB08
     466 00000260 00000000!         .long   SMOKEB09
     467 00000280 00000000!         .long   SMOKEB10
     468 000002a0 00000000          .long   0
     469                    
     470 000002c0            SUBRP  lxskltl_puff
     471 000002c0 00000000'         .long   lxskexp1_anim
     472 000002e0 00000160'         .long   lxskexp2_anim
     473                    
     474                    
     475                    
     476 00000300            SUBRP  ltl_exp
     477                    
     478 00000300     1940          movk    10,a0           ; Sleep a random amount of time before
     479 00000310     0d5f          calla   RNDRNG0         ; we start the little puff of smoke
         00000320 00000000! 
     480 00000340     1020          addk    1,a0
     481 00000350     0d5f          calla   PRCSLP
         00000360 00000000! 
     482                    
     483 00000380     09c0          movi    80,a0           ; Get a random X position above the hole
         00000390     0050  
     484 000003a0     0d5f          calla   RNDRNG0         ; To fire off the puff of smoke
         000003b0 00000000! 
     485 000003d0     0be0          subi    40,a0
         000003e0     ffd7  
     486 000003f0     09ce          movi    HOLE_XPOS,a14
         00000400     04e2  
     487 00000410     41c0          add     a14,a0          ; Translate to hole position
     488 00000420     b00d          move    a0,*a13(256)
         00000430     0100  
     489                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   10

     490 00000440     09c0          movi    30,a0           ; Get a random Y position above the hole
         00000450     001e  
     491 00000460     0d5f          calla   RNDRNG0         ; To fire off the puff of smoke
         00000470 00000000! 
     492 00000490     0be0          subi    25,a0
         000004a0     ffe6  
     493 000004b0     0b00          addi    HOLE_YPOS,a0    ; Translate to hole position
         000004c0     00c5  
     494 000004d0     b00d          move    a0,*a13(256+16) 
         000004e0     0110  
     495                    
     496 000004f0     09c0          movi    10,a0           ; Get a random Z position
         00000500     000a  
     497 00000510     0d5f          calla   RNDRNG0
         00000520 00000000! 
     498 00000540     0b00          addi    EXP_Z,a0        ; Translate to hole Z position (in front of coffin)
         00000550     14d0  
     499 00000560     b00d          move    a0,*a13(256+32)
         00000570     0120  
     500                    
     501 00000580     09c0          movi    7,a0            ; Get a random velocity to use
         00000590     0007  
     502 000005a0     0d5f          calla   RNDRNG0
         000005b0 00000000! 
     503 000005d0     1040          addk    2,a0
     504 000005e0     b00d          move    a0,*a13(256+48)
         000005f0     0130  
     505                    
     506 00000600     1820          movk    1,a0            ; Get a random smoke puff to use
     507 00000610     0d5f          calla   RNDRNG0
         00000620 00000000! 
     508 00000640     24a0          sll     5,a0
     509 00000650     09e9          movi    lxskltl_puff,a9
         00000660 000002c0' 
     510 00000680     4009          add     a0,a9
     511 00000690     8729          move    *a9,a9,L        ; Pointer to puff animation
     512                    
     513 000006a0     b5a0          move    *a13(256),a0    ; Get X position
         000006b0     0100  
     514 000006c0     2600          sll     16,a0
     515 000006d0     b5a1          move    *a13(256+16),a1 ; Get Y position
         000006e0     0110  
     516 000006f0     2601          sll     16,a1
     517 00000700     b5a3          move    *a13(256+32),a3 ; Get Z position
         00000710     0120  
     518 00000720     9722          move    *a9+,a2,L       ; Get first image
     519 00000730     09e4          movi    DMAWNZ|M_3D,a4  ; Flags
         00000740 00008102  
     520 00000760     09c5          movi    CLSFRWK,a5      ; This is the class
         00000770     7000  
     521 00000780     56c6          clr     a6              ; No velocities
     522 00000790     56e7          clr     a7
     523                    
     524 000007a0     0d5f          calla   BEGINOBJ        ; Make the first one
         000007b0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   11

     525                    
     526                    ; Now make an explosion sound
     527 000007d0     09c3          movi    1252,a3
         000007e0     04e4  
     528 000007f0     0d5f          calla   SNDSND
         00000800 00000000! 
     529                    
     530 00000820           lxskpuff_lp
     531 00000820                   SLEEPK  3               ; Let us see it
     532 00000860     9720          move    *a9+,a0,L       ; Get next image
     533 00000870     ca0d          jrz     lxskpuff_done   ; br = no more images
     534 00000880     b501          move    *a8(OCTRL),a1   ; Change the image
         00000890     00f0  
     535 000008a0     0d5f          calla   obj_aniq
         000008b0 00000000! 
     536 000008d0     b50e          move    *a8(OYPOS),a14  ; Get current Y Position
         000008e0     00b0  
     537 000008f0     b5a1          move    *a13(256+48),a1 ; Get the velocity
         00000900     0130  
     538 00000910     442e          sub     a1,a14          ; Add it
     539 00000920     b1c8          move    a14,*a8(OYPOS)  ; Write it back
         00000930     00b0  
     540 00000940     c0ed          jruc    lxskpuff_lp     ; Go do next image in sequence
     541                    
     542 00000950           lxskpuff_done
     543 00000950     0d5f          calla   DELOBJA8        ; Kill off the object
         00000960 00000000! 
     544                    
     545 00000980                   DIE
     546                    
     547                    
     548                    ********************************************************************
     549                    *
     550                    * Do Undertakers Coffin rising from below
     551                    *
     552                    
     553 000009b0            SUBRP  aqtqmat_anim
     554 000009b0 00000000!         .long   MATCOF01
     555 000009d0 00000000!         .long   MATCOF02
     556 000009f0 00000000!         .long   MATCOF03
     557 00000a10 00000000!         .long   MATCOF04
     558 00000a30            SUBRP  aqtqmat_anim2
     559 00000a30 00000000          .long   0
     560                    
     561 00000a50            SUBRP  aqtqcof_anim1
     562 00000a50 00000000!         .long   COFFIN02
     563 00000a70 00000000!         .long   COFFIN03
     564 00000a90 00000000!         .long   COFFIN04
     565 00000ab0 00000000!         .long   COFFIN05
     566 00000ad0            SUBRP  aqtqcof_anim2
     567 00000ad0 00000000          .long   0
     568                    
     569 00000af0            SUBRP  aqtqtstone_anim
     570 00000af0 00000000!         .long   TMBSTN01
     571 00000b10            SUBRP  aqtqtstone_test
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   12

     572 00000b10 00000000!         .long   TMBSTN02
     573 00000b30 00000000!         .long   TMBSTN03
     574 00000b50 00000000!         .long   TMBSTN04
     575 00000b70 00000000!         .long   TMBSTN05
     576 00000b90 00000000!         .long   TMBSTN06
     577 00000bb0 00000000!         .long   TMBSTN07
     578 00000bd0 00000000!         .long   TMBSTN08
     579 00000bf0 00000000          .long   0
     580                    
     581 00000c10            SUBR   und_coffin_up
     582                    
     583 00000c10     57ce          clr     a14                     ; Set up the state machine
     584 00000c20     058e          move    a14,@close_the_door
         00000c30 00000000- 
     585 00000c50     058e          move    a14,@close_the_floor
         00000c60 00000010- 
     586                    
     587 00000c80                   SLEEP   TSEC*2
     588                    
     589 00000cd0     09e9          movi    aqtqmat_anim,a9         ; Start up the mat animation
         00000ce0 000009b0' 
     590                    
     591 00000d00     09e0          movi    [HOLE_XPOS,0],a0
         00000d10 04e20000  
     592 00000d30     09e4          movi    DMAWNZ|M_3D,a4
         00000d40 00008102  
     593 00000d60     09e1          movi    [HOLE_YPOS,0],a1
         00000d70 00c50000  
     594 00000d90     9722          move    *a9+,a2,L
     595 00000da0     09c3          movi    MAT_BACK_Z,a3
         00000db0     14b4  
     596 00000dc0     09c5          movi    CLSFRWK,a5
         00000dd0     7000  
     597 00000de0     56c6          clr     a6
     598 00000df0     56e7          clr     a7
     599 00000e00     0d5f          calla   BEGINOBJ
         00000e10 00000000! 
     600                    
     601 00000e30           aqtqman_loop
     602 00000e30                   SLEEPK  3                       ; Display the frame
     603 00000e70     9720          move    *a9+,a0,L               ; Are we done ?
     604 00000e80     ca06          jrz     aqtqdo_open_mat         ; br = yes
     605 00000e90     b501          move    *a8(OCTRL),a1           ; Change to next frame
         00000ea0     00f0  
     606 00000eb0     0d5f          calla   obj_aniq
         00000ec0 00000000! 
     607 00000ee0     c0f4          jruc    aqtqman_loop
     608                    
     609 00000ef0           aqtqdo_open_mat
     610 00000ef0     4d0b          move    a8,a11                  ; Save the the object pointer
     611 00000f00     b501          move    *a8(OCTRL),a1           ; Change the image to the front piece
         00000f10     00f0  
     612 00000f20     09e0          movi    MATCOF05B,a0
         00000f30 00000000! 
     613 00000f50     0d5f          calla   obj_aniq
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   13

         00000f60 00000000! 
     614                            
     615 00000f80     09e0          movi    [HOLE_XPOS,0],a0        ; Create the front piece
         00000f90 04e20000  
     616 00000fb0     09e4          movi    DMAWNZ|M_3D,a4
         00000fc0 00008102  
     617 00000fe0     09e1          movi    [HOLE_YPOS,0],a1
         00000ff0 00c50000  
     618 00001010     09e2          movi    MATCOF05A,a2,L
         00001020 00000000! 
     619 00001040     09c3          movi    MAT_FRONT_Z,a3
         00001050     14cf  
     620 00001060     09c5          movi    CLSFRWK,a5
         00001070     7000  
     621 00001080     56c6          clr     a6
     622 00001090     56e7          clr     a7
     623                    
     624 000010a0     0d5f          calla   BEGINOBJ
         000010b0 00000000! 
     625 000010d0                   SLEEPK  2
     626                    
     627                    ; Now make some little explosions above the hole
     628 00001110     09c9          movi    NUM_PUFFS,a9            ; Make 25 little puffs of smoke
         00001120     0019  
     629 00001130           aqtqexp_clp
     630 00001130                   CREATE0 ltl_exp
     631 000011a0     3d09          dsjs    a9,aqtqexp_clp
     632                    
     633                    
     634                    ; Now start the coffin rising up
     635 000011b0                   CREATE0 do_up_coffin            ; Make the coffin come up through
     636                                                            ; the floor
     637                    
     638 00001220           aqtqwait_fclose
     639 00001220                   SLEEPK  1                       ; Wait to be told to close the floor
     640 00001260     05ae          move    @close_the_floor,a14
         00001270 00000010- 
     641 00001290     caf8          jrz     aqtqwait_fclose
     642                    
     643 000012a0                   SLEEPK  15
     644                    
     645 000012e0     0d5f          calla   DELOBJA8                ; Delete the back piece
         000012f0 00000000! 
     646 00001310     09e9          movi    aqtqmat_anim2,a9                ; Set up for close animation
         00001320 00000a30' 
     647 00001340     4d68          move    a11,a8                  ; Get saved object pointer
     648 00001350           aqtqfc_loop
     649 00001350     a720          move    *-a9,a0,L               ; Change the image
     650 00001360     b501          move    *a8(OCTRL),a1
         00001370     00f0  
     651 00001380     0d5f          calla   obj_aniq
         00001390 00000000! 
     652 000013b0                   SLEEPK  3
     653 000013f0     0b69          cmpi    aqtqmat_anim,a9         ; Are we done ?
         00001400 fffff64f' 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   14

     654 00001420     cbf2          jrnz    aqtqfc_loop             ; br = no
     655 00001430     0d5f          calla   DELOBJA8                ; Get rid of this mat piece
         00001440 00000000! 
     656                    
     657 00001460                   SLEEPK  3
     658                    
     659 000014a0     184e          movk    2,a14
     660 000014b0     058e          move    a14,@close_the_floor    ; Let whoever know floor is closed
         000014c0 00000010- 
     661                    
     662                    
     663                    ; Now Bring up the tombstone
     664                    
     665 000014e0     09c0          movi    0fh,a0
         000014f0     000f  
     666 00001500     0d5f          calla   triple_sound
         00001510 00000000! 
     667                    
     668                    ;       movi    aqtqtstone_anim,a9              ; Set up to bring up the tombstone
     669 00001530     09e9          movi    aqtqtstone_test,a9              ; Set up to bring up the tombstone
         00001540 00000b10' 
     670                    
     671 00001560     09e0          movi    [HOLE_XPOS,0],a0        ; And create the first object
         00001570 04e20000  
     672 00001590     09e4          movi    DMAWNZ|M_3D,a4
         000015a0 00008102  
     673 000015c0     09e1          movi    [HOLE_YPOS-18,0],a1
         000015d0 00b30000  
     674 000015f0     9722          move    *a9+,a2,L
     675 00001600     09c3          movi    TMBSTN_Z,a3
         00001610     14b4  
     676 00001620     09c5          movi    CLSFRWK,a5
         00001630     7000  
     677 00001640     56c6          clr     a6
     678 00001650     56e7          clr     a7
     679                    
     680 00001660                   push    a9
     681 00001670     0d5f          calla   BEGINOBJ
         00001680 00000000! 
     682 000016a0                   pull    a9
     683 000016b0                   SLEEPK  4                       ; Let's see it
     684                    
     685 000016f0           aqtqstn_up
     686 000016f0     9720          move    *a9+,a0,L               ; Get the next image
     687 00001700     ca0a          jrz     aqtqstn_done            ; br = no more images
     688 00001710     b501          move    *a8(OCTRL),a1
         00001720     00f0  
     689 00001730     0d5f          calla   obj_aniq                ; Change the image
         00001740 00000000! 
     690 00001760                   SLEEPK  4                       ; Let's see it
     691 000017a0     c0f4          jruc    aqtqstn_up                      ; Do next image
     692                    
     693 000017b0           aqtqstn_done
     694 000017b0     186e          movk    3,a14
     695 000017c0     058e          move    a14,@close_the_floor    ; Let whoever know tombstone is up
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   15

         000017d0 00000010- 
     696 000017f0     058e          move    a14,@finish_completed
         00001800 00000040- 
     697                    
     698 00001820                   DIE
     699                    
     700                    
     701                    
     702 00001850            SUBRP  do_up_coffin
     703                    
     704 00001850     09e9          movi    aqtqcof_anim1,a9
         00001860 00000a50' 
     705                    
     706 00001880     09e0          movi    [HOLE_XPOS+7,0],a0      ; Create the Coffin
         00001890 04e90000  
     707 000018b0     09e4          movi    DMAWNZ|M_3D,a4          
         000018c0 00008102  
     708 000018e0     09e1          movi    [HOLE_YPOS+108,0],a1
         000018f0 01310000  
     709 00001910     4c2a          move    a1,a10
     710 00001920     09e2          movi    COFFIN01,a2
         00001930 00000000! 
     711 00001950     09c3          movi    COF_BACK_Z,a3           ; Make it in front of mat pieces
         00001960     14d0  
     712 00001970     09c5          movi    CLSFRWK,a5
         00001980     7000  
     713 00001990     56c6          clr     a6
     714 000019a0     56e7          clr     a7
     715                    
     716 000019b0     0d5f          calla   BEGINOBJ
         000019c0 00000000! 
     717                    
     718 000019e0     b30d          move    a8,*a13(256),L          ; Save the object pointer
         000019f0     0100  
     719                    
     720                    ; Make some sound while moving up
     721 00001a00     09c0          movi    014h,a0
         00001a10     0014  
     722 00001a20     0d5f          calla   triple_sound
         00001a30 00000000! 
     723                    
     724 00001a50     188e          movk    COFFIN_VEL,a14          ; Start it 4 pixels high
     725 00001a60     b1c8          move    a14,*a8(OSIZEY)
         00001a70     0140  
     726                    
     727 00001a80           aqtqmv_up_lp
     728 00001a80                   SLEEPK  1
     729 00001ac0     b50e          move    *a8(OSIZEY),a14         ; Get the size of the object
         00001ad0     0140  
     730 00001ae0     0b4e          cmpi    136,a14                 ; Are we at full size yet ?
         00001af0     ff77  
     731 00001b00     ca09          jrz     aqtqopen_lp             ; br = yes
     732 00001b10     108e          addk    COFFIN_VEL,a14          ; Make it 4 pixels larger
     733 00001b20     b1c8          move    a14,*a8(OSIZEY)
         00001b30     0140  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   16

     734 00001b40     b50e          move    *a8(OYPOS),a14          ; Get its current position
         00001b50     00b0  
     735 00001b60     148e          subk    COFFIN_VEL,a14          ; Move it up 4 pixels
     736 00001b70     b1c8          move    a14,*a8(OYPOS)          ; Write it back
         00001b80     00b0  
     737 00001b90     c0ee          jruc    aqtqmv_up_lp            ; Go display it
     738                    
     739 00001ba0           aqtqopen_lp
     740 00001ba0     9720          move    *a9+,a0,L               ; Now open the coffin door
     741 00001bb0     0b60          cmpi    COFFIN05,a0             ; Is the door open ?
         00001bc0 ffffffff! 
     742 00001be0     ca0a          jrz     aqtqopen_done           ; br = yes
     743 00001bf0     b501          move    *a8(OCTRL),a1
         00001c00     00f0  
     744 00001c10     0d5f          calla   obj_aniq
         00001c20 00000000! 
     745 00001c40                   SLEEPK  3
     746 00001c80     c0f1          jruc    aqtqopen_lp
     747                    
     748 00001c90           aqtqopen_done
     749 00001c90     182e          movk    1,a14
     750 00001ca0     058e          move    a14,@close_the_door
         00001cb0 00000000- 
     751                    
     752 00001cd0     b501          move    *a8(OCTRL),a1           ; Keep the last piece
         00001ce0     00f0  
     753 00001cf0     0d5f          calla   obj_aniq
         00001d00 00000000! 
     754 00001d20     b50e          move    *a8(OYPOS),a14          ; Get the current position
         00001d30     00b0  
     755 00001d40     09e4          movi    DMAWNZ|M_3D,a4
         00001d50 00008102  
     756 00001d70     09e0          movi    [HOLE_XPOS+7,0],a0      ; And create the front piece
         00001d80 04e90000  
     757 00001da0     4dc1          move    a14,a1
     758 00001db0     2601          sll     16,a1
     759 00001dc0     09e2          movi    COFFIN6A,a2
         00001dd0 00000000! 
     760 00001df0     09c3          movi    COF_FRONT_Z,a3          ; Make sure its in front of back piece
         00001e00     14d2  
     761 00001e10     09c5          movi    CLSFRWK,a5
         00001e20     7000  
     762 00001e30     56c6          clr     a6
     763 00001e40     56e7          clr     a7
     764                    
     765 00001e50     0d5f          calla   BEGINOBJ
         00001e60 00000000! 
     766                    
     767 00001e80     b30d          move    a8,*a13(256+32),L       ; Save away it's object pointer
         00001e90     0120  
     768                    
     769 00001ea0     b7a9          move    *a13(256),a9,L          ; Back piece object pointer
         00001eb0     0100  
     770 00001ec0     09ce          movi    HOLE_XPOS+7,a14
         00001ed0     04e9  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   17

     771 00001ee0     b1cd          move    a14,*a13(256+64)
         00001ef0     0140  
     772 00001f00     b92d          move    *a9(OYPOS),*a13(256+80) ; Save the Y position
         00001f10     00b0  
         00001f20     0150  
     773 00001f30     b7aa          move    *a13(256+32),a10,L      ; Front piece object pointer
         00001f40     0120  
     774 00001f50                   CREATE0 hover_coffin
     775 00001fc0     b20d          move    a0,*a13(256+96),L       ; Save the process pointer
         00001fd0     0160  
     776                    
     777 00001fe0           aqtqwait_to_close
     778 00001fe0                   SLEEPK  3                       ; Now wait until told to close the
     779 00002020     05ae          move    @close_the_door,a14     ; coffin door
         00002030 00000000- 
     780 00002050     0b4e          cmpi    2,a14
         00002060     fffd  
     781 00002070     c4f6          jrlt    aqtqwait_to_close
     782                    
     783 00002080     b7a0          move    *a13(256+96),a0,L       ; Get the hover craft process pointer
         00002090     0160  
     784 000020a0     0d5f          calla   KILL                    ; And kill him off
         000020b0 00000000! 
     785                    
     786 000020d0     b7a8          move    *a13(256),a8,L          ; Get the back piece object pointer
         000020e0     0100  
     787 000020f0     09e9          movi    aqtqcof_anim2,a9                ; Now close the door
         00002100 00000ad0' 
     788 00002120           aqtqclose_loop
     789 00002120     a720          move    *-a9,a0,L               ; Pointer to image header
     790 00002130     0b60          cmpi    COFFIN02,a0             ; Are we at this image
         00002140 ffffffff! 
     791 00002160     cb0d          jrnz    aqtqno_z_adj            ; br = no
     792 00002170     b7a8          move    *a13(256+32),a8,L       ; Get front piece object pointer
         00002180     0120  
     793 00002190                   push    a0
     794 000021a0     0d5f          calla   DELOBJA8                ; Get rid of front piece
         000021b0 00000000! 
     795 000021d0                   pull    a0
     796 000021e0     b7a8          move    *a13(256),a8,L          ; Get back piece object pointer
         000021f0     0100  
     797 00002200     09ce          movi    DOOR_CLOSE_Z,a14        ; Change its Z to in front of wrestler
         00002210     14d4  
     798 00002220     b1c8          move    a14,*a8(OZPOS)
         00002230     00d0  
     799 00002240           aqtqno_z_adj
     800 00002240     b501          move    *a8(OCTRL),a1           ; Change the image
         00002250     00f0  
     801 00002260     0d5f          calla   obj_aniq
         00002270 00000000! 
     802 00002290                   SLEEPK  1                       ; Lets see it
     803 000022d0     0b69          cmpi    aqtqcof_anim1,a9                ; Are we done closing the door ?
         000022e0 fffff5af' 
     804 00002300     cbe1          jrne    aqtqclose_loop          ; br = no
     805                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   18

     806 00002310     09e0          movi    COFFIN01,a0             ; Change the image to the closed
         00002320 00000000! 
     807 00002340     b501          move    *a8(OCTRL),a1           ; coffin image
         00002350     00f0  
     808 00002360     0d5f          calla   obj_aniq
         00002370 00000000! 
     809                    
     810 00002390     186e          movk    3,a14
     811 000023a0     058e          move    a14,@close_the_door
         000023b0 00000000- 
     812                    
     813                    ; Make a slamming door sound
     814 000023d0     09c0          movi    03dh,a0
         000023e0     003d  
     815 000023f0     0d5f          calla   triple_sound
         00002400 00000000! 
     816                    
     817                    ; Shake the coffin around when the door slams shut
     818 00002420     1a09          movk    16,a9                   ; Number of shakes
     819 00002430           aqtqshk_lp
     820 00002430     1880          movk    4,a0
     821 00002440     0d5f          calla   RNDRNG0
         00002450 00000000! 
     822 00002470     1440          subk    2,a0
     823 00002480     b5ae          move    *a13(256+64),a14
         00002490     0140  
     824 000024a0     400e          add     a0,a14
     825 000024b0     b1c8          move    a14,*a8(OXPOS)
         000024c0     0090  
     826 000024d0     1840          movk    2,a0
     827 000024e0     0d5f          calla   RNDRNG0
         000024f0 00000000! 
     828 00002510     1440          subk    2,a0
     829 00002520     b5ae          move    *a13(256+80),a14
         00002530     0150  
     830 00002540     400e          add     a0,a14
     831 00002550     b1c8          move    a14,*a8(OYPOS)
         00002560     00b0  
     832 00002570                   SLEEPK  1
     833 000025b0     3f29          dsjs    a9,aqtqshk_lp
     834                    
     835 000025c0     b9a8          move    *a13(256+64),*a8(OXPOS)
         000025d0     0140  
         000025e0     0090  
     836 000025f0     b9a8          move    *a13(256+80),*a8(OYPOS)
         00002600     0150  
         00002610     00b0  
     837                    
     838                    ; Now make some little explosions above the hole
     839 00002620     09c9          movi    NUM_PUFFS,a9            ; Make 25 little puffs of smoke
         00002630     0019  
     840 00002640           exp_clp
     841 00002640                   CREATE0 ltl_exp
     842 000026b0     3d09          dsjs    a9,exp_clp
     843                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   19

     844                    ; Make some sound while moving down
     845 000026c0     09c0          movi    011h,a0
         000026d0     0011  
     846 000026e0     0d5f          calla   triple_sound
         000026f0 00000000! 
     847                    
     848 00002710     09ce          movi    136,a14                 ; Set starting size of image
         00002720     0088  
     849 00002730     b1c8          move    a14,*a8(OSIZEY)
         00002740     0140  
     850 00002750           aqtqmv_dn_lp
     851                    
     852 00002750                   CREATE0 ltl_exp
     853 000027c0                   SLEEPK  1                       ; Lets see it
     854 00002800     b50e          move    *a8(OSIZEY),a14         ; Get current size
         00002810     0140  
     855 00002820     0b4e          cmpi    1,a14                   ; Are we at <= 1 pixel
         00002830     fffe  
     856 00002840     c609          jrle    aqtqmv_dn_done          ; br = yes
     857 00002850     148e          subk    COFFIN_VEL,a14          
     858 00002860     b1c8          move    a14,*a8(OSIZEY)
         00002870     0140  
     859 00002880     b50e          move    *a8(OYPOS),a14          ; Get the current position
         00002890     00b0  
     860 000028a0     108e          addk    COFFIN_VEL,a14
     861 000028b0     b1c8          move    a14,*a8(OYPOS)          ; And write it back
         000028c0     00b0  
     862 000028d0     c0e7          jruc    aqtqmv_dn_lp
     863 000028e0           aqtqmv_dn_done
     864 000028e0     0d5f          calla   DELOBJA8                ; Get rid of the coffin
         000028f0 00000000! 
     865 00002910     182e          movk    1,a14                   ; Tell the floor to close up
     866 00002920     058e          move    a14,@close_the_floor
         00002930 00000010- 
     867                    
     868 00002950                   DIE                             ; We done
     869                    
     870                    
     871                    *************************************************************
     872                    *
     873                    * Hover coffin - makes the coffin look like it's hovering
     874                    * This guy runs until killed by process that creates it
     875                    *
     876                    * a9 =  *object 1
     877                    * a10 = *object 2
     878                    
     879 00002980            SUBRP  hover_coffin
     880 00002980     b54b          move    *a10(OYPOS),a11         ; Get start Y position
         00002990     00b0  
     881 000029a0           nauireset_a8
     882 000029a0     1828          movk    1,a8                    ; Start with move down
     883 000029b0           nauido_agin
     884 000029b0                   SLEEPK  7
     885 000029f0     b52e          move    *a9(OYPOS),a14          ; Get current Y position
         00002a00     00b0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   20

     886 00002a10     410e          add     a8,a14                  ; Add in delta
     887 00002a20     b1c9          move    a14,*a9(OYPOS)          ; Write it back
         00002a30     00b0  
     888 00002a40     b54e          move    *a10(OYPOS),a14         ; Get current Y position
         00002a50     00b0  
     889 00002a60     410e          add     a8,a14                  ; Add it delta
     890 00002a70     b1ca          move    a14,*a10(OYPOS)         ; Write it back
         00002a80     00b0  
     891 00002a90     456e          sub     a11,a14                 ; Subtract current from start
     892 00002aa0     038e          abs     a14                     ; Make sure its positive
     893 00002ab0     0b4e          cmpi    2,a14                   ; <= 3
         00002ac0     fffd  
     894 00002ad0     c6ed          jrle    nauido_agin             ; br = yes
     895 00002ae0     4d08          move    a8,a8                   ; a8 negative ?
     896 00002af0     ceea          jrn     nauireset_a8            ; br = yes
     897 00002b00     1828          movk    1,a8                    ; set to -1
     898 00002b10     03e8          not     a8
     899 00002b20                   CREATE0 ltl_exp
     900 00002b90                   CREATE0 ltl_exp
     901 00002c00                   CREATE0 ltl_exp
     902 00002c70                   CREATE0 ltl_exp
     903 00002ce0                   CREATE0 ltl_exp
     904 00002d50                   CREATE0 ltl_exp
     905 00002dc0                   CREATE0 ltl_exp
     906 00002e30                   CREATE0 ltl_exp
     907 00002ea0     c0b0          jruc    nauido_agin             ; keep a bouncin
     908                    
     909 00002eb0                   DIE
     910                    
     911                    *****************************************************************************
     912                    *
     913                    * Closes the coffin door
     914                    *
     915 00002ee0            SUBRP  close_door
     916 00002ee0     184e          movk    2,a14
     917 00002ef0     058e          move    a14,@close_the_door
         00002f00 00000000- 
     918 00002f20     0960          rets
     919                    
     920                    ****************************************************************************
     921                    *
     922                    * Checks to see if coffin door is open
     923                    *
     924 00002f30            SUBRP  is_door_open
     925 00002f30     b5a1          move    *a13(ANIMODE),a1
         00002f40     0660  
     926 00002f50     0b81          andni   MODE_STATUS2,a1
         00002f60 00000200  
     927                    
     928 00002f80     05ae          move    @close_the_door,a14
         00002f90 00000000- 
     929 00002fb0     ca03          jrz     dwufdoor_not_open
     930                    
     931 00002fc0     0ba1          ori     MODE_STATUS2,a1
         00002fd0 00000200  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   21

     932 00002ff0           dwufdoor_not_open
     933 00002ff0     b02d          move    a1,*a13(ANIMODE)
         00003000     0660  
     934 00003010     0960          rets
     935                            
     936                    ****************************************************************************
     937                    *
     938                    * Checks to see if the dead guy is ready to be stuffed into the coffin
     939                    *
     940 00003020            SUBRP  is_guy_up
     941 00003020     b5a1          move    *a13(ANIMODE),a1
         00003030     0660  
     942 00003040     0b81          andni   MODE_STATUS2,a1
         00003050 00000200  
     943                    
     944 00003070     05ae          move    @guy_up,a14
         00003080 00000070- 
     945 000030a0     ca03          jrz     pshwguy_not_up
     946                    
     947 000030b0     0ba1          ori     MODE_STATUS2,a1
         000030c0 00000200  
     948 000030e0           pshwguy_not_up
     949 000030e0     b02d          move    a1,*a13(ANIMODE)
         000030f0     0660  
     950 00003100     0960          rets
     951                    
     952                    ****************************************************************************
     953                    *
     954                    * Checks to see if the dead guy is in the coffin
     955                    *
     956 00003110            SUBRP  is_he_in
     957 00003110     b5a1          move    *a13(ANIMODE),a1
         00003120     0660  
     958 00003130     0b81          andni   MODE_STATUS2,a1
         00003140 00000200  
     959                    
     960 00003160     05ae          move    @guy_in,a14
         00003170 00000060- 
     961 00003190     ca03          jrz     pwfsguy_not_in
     962                    
     963 000031a0     0ba1          ori     MODE_STATUS2,a1
         000031b0 00000200  
     964 000031d0           pwfsguy_not_in
     965 000031d0     b02d          move    a1,*a13(ANIMODE)
         000031e0     0660  
     966 000031f0     0960          rets
     967                    
     968                    ****************************************************************************
     969                    *
     970                    * Makes a wrestler disappear after being shut into the coffin
     971                    *
     972 00003200            SUBRP  disappear_wrestler
     973 00003200     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY|MODE_NOSHADOW|MODE_INVISIBLE
     974 00003220     8003          .word   ANI_ZEROVELS
     975 00003230     8026          .word   ANI_SETSPEED,100h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   22

     976 00003250     8004          .word   ANI_SETPLYRMODE,MODE_DEAD
     977 00003270     807e          .word   ANI_ROT
     978                    
     979                    
     980                    ****************************************************************************
     981                    *
     982                    * Make wrestler disappear - Monitors the state of the coffin door and makes
     983                    * the dead wrestler invisible when the door is closed.
     984                    *
     985 00003280            SUBRP  make_wres_disappear
     986 00003280     b5a1          move    *a13(ANIMODE),a1
         00003290     0660  
     987 000032a0     0b81          andni   MODE_STATUS2,a1
         000032b0 00000200  
     988                    
     989 000032d0     05ae          move    @close_the_door,a14
         000032e0 00000000- 
     990 00003300     0b4e          cmpi    3,a14
         00003310     fffc  
     991 00003320     cb10          jrnz    uccfnot_time
     992                    
     993 00003330                   PUSH    a1,a13
     994 00003350     07ad          move    @dead_wrestler,a13,L
         00003360 00000020- 
     995 00003380     09e0          movi    disappear_wrestler,a0
         00003390 00003200' 
     996 000033b0     0d5f          calla   change_anim1a
         000033c0 00000000! 
     997 000033e0                   PULL    a1,a13
     998                    
     999 00003400     0ba1          ori     MODE_STATUS2,a1
         00003410 00000200  
    1000 00003430           uccfnot_time
    1001 00003430     b02d          move    a1,*a13(ANIMODE)
         00003440     0660  
    1002 00003450     0960          rets
    1003                    
    1004                    
    1005                    *****************************************************************************
    1006                    *
    1007                    * Set the flag to tell that the guy is ready to be knocked into the coffin
    1008                    *
    1009 00003460            SUBRP  guy_is_up
    1010 00003460     182e          movk    1,a14
    1011 00003470     058e          move    a14,@guy_up
         00003480 00000070- 
    1012 000034a0     0960          rets
    1013                    
    1014                    *****************************************************************************
    1015                    *
    1016                    * Adjust facing checks the wrestlers facing direction.
    1017                    *
    1018 000034b0            SUBRP  adjust_facing
    1019 000034b0     b5ae          move    *a13(FACING_DIR),a14
         000034c0     04c0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   23

    1020 000034d0     0bae          ori     (MOVE_LEFT|MOVE_DOWN),a14
         000034e0 00000006  
    1021 00003500     0b8e          andni   (MOVE_RIGHT|MOVE_UP),a14
         00003510 00000009  
    1022 00003530     b1cd          move    a14,*a13(FACING_DIR)
         00003540     04c0  
    1023 00003550     b5ae          move    *a13(OBJ_CONTROL),a14
         00003560     0780  
    1024 00003570     0bae          ori     M_FLIPH,a14
         00003580 00000010  
    1025 000035a0     b1cd          move    a14,*a13(OBJ_CONTROL)
         000035b0     0780  
    1026 000035c0     0960          rets
    1027                    
    1028                    *****************************************************************************
    1029                    *
    1030                    * Adjust taker facing checks takers facing direction.
    1031                    *
    1032 000035d0            SUBRP  adjust_taker_facing
    1033 000035d0     b5ae          move    *a13(FACING_DIR),a14
         000035e0     04c0  
    1034 000035f0     0b8e          andni   (MOVE_LEFT|MOVE_DOWN),a14
         00003600 00000006  
    1035 00003620     0bae          ori     (MOVE_RIGHT|MOVE_UP),a14
         00003630 00000009  
    1036 00003650     b1cd          move    a14,*a13(FACING_DIR)
         00003660     04c0  
    1037 00003670     b5ae          move    *a13(OBJ_CONTROL),a14
         00003680     0780  
    1038 00003690     0b8e          andni   M_FLIPH,a14
         000036a0 00000010  
    1039 000036c0     b1cd          move    a14,*a13(OBJ_CONTROL)
         000036d0     0780  
    1040 000036e0     0960          rets
    1041                    
    1042                    *****************************************************************************
    1043                    *
    1044                    * Check roll checks to see if the dead guy nees to be rolled down and does it
    1045                    * if need be.
    1046                    *
    1047 000036f0            SUBRP  check_roll
    1048 000036f0     b5a0          move    *a13(ANIMODE),a0
         00003700     0660  
    1049 00003710     0b80          andni   MODE_STATUS2,a0
         00003720 00000200  
    1050 00003740     b5a1          move    *a13(OBJ_ZPOSINT),a1
         00003750     0150  
    1051 00003760     0b41          cmpi    (RING_Z_CENTER+20),a1
         00003770     fb4b  
    1052 00003780     c70f          jrgt    jihcroll_done
    1053 00003790     b5a1          move    *a13(STICK_VAL_CUR),a1
         000037a0     0bc0  
    1054 000037b0     0ba1          ori     MOVE_DOWN,a1
         000037c0 00000002  
    1055 000037e0     b02d          move    a1,*a13(STICK_VAL_CUR)
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   24

         000037f0     0bc0  
    1056 00003800                   PUSH    a0
    1057 00003810     0d5f          calla   do_roll
         00003820 00000000! 
    1058 00003840                   PULL    a0
    1059 00003850     0ba0          ori     MODE_STATUS2,a0
         00003860 00000200  
    1060 00003880           jihcroll_done
    1061 00003880     b00d          move    a0,*a13(ANIMODE)
         00003890     0660  
    1062 000038a0     0960          rets
    1063                    
    1064                    *****************************************************************************
    1065                    *
    1066                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1067                    *
    1068 000038b0            SUBRP  rzr_stand_anim
    1069 000038b0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP
    1070 000038d0     8003          .word   ANI_ZEROVELS
    1071 000038e0     8026          .word   ANI_SETSPEED,100h
    1072                    
    1073                            ; First roll the guy down to the bottom of the ring if need be
    1074 00003900           drqqrl_loop
    1075 00003900     801c          .word   ANI_PAUSE,1
    1076 00003920                   WL      ANI_CODE,check_roll
    1077 00003950                   WL      ANI_IFSTATUS2,drqqrl_loop
    1078                    
    1079                            ; Now Stand the bugger up
    1080 00003980                   WL      3,R3GU2A+FR1
    1081 000039b0                   WL      3,R3GU2A+FR2
    1082 000039e0                   WL      3,R3GU4A+FR3
    1083 00003a10                   WL      3,R3GU4A+FR4
    1084 00003a40                   WL      3,R3GU4A+FR5
    1085 00003a70                   WL      3,R3GU4A+FR6
    1086 00003aa0                   WL      3,R3GU4A+FR7
    1087 00003ad0                   WL      3,R3GU4A+FR8
    1088 00003b00                   WL      3,R3GU4A+FR9
    1089 00003b30                   WL      3,R3GU4A+FR10
    1090                    
    1091                    
    1092                            ; Tell all he's up there
    1093 00003b60                   WL      ANI_CODE,guy_is_up
    1094                    
    1095                            ; Face him the right direction
    1096 00003b90                   WL      ANI_CODE,adjust_facing
    1097                    
    1098                            ; And finally make him dizzy
    1099 00003bc0            SUBRP  rzr_fdizzy_anim
    1100 00003bc0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1101 00003be0     8003          .word   ANI_ZEROVELS
    1102 00003bf0     8026          .word   ANI_SETSPEED,100h
    1103 00003c10           drqqloop
    1104 00003c10                   WL      8,R4WP5C+FR1
    1105 00003c40                   WL      8,R4WP5C+FR2
    1106 00003c70                   WL      8,R4WP5C+FR3
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   25

    1107 00003ca0                   WL      8,R4WP5C+FR4
    1108 00003cd0                   WL      8,R4WP5C+FR5
    1109 00003d00                   WL      8,R4WP5C+FR6
    1110 00003d30                   WL      8,R4WP5C+FR7
    1111 00003d60                   WL      8,R4WP5C+FR8
    1112 00003d90                   WL      8,R4WP5C+FR7
    1113 00003dc0                   WL      8,R4WP5C+FR6
    1114 00003df0                   WL      8,R4WP5C+FR5
    1115 00003e20                   WL      8,R4WP5C+FR4
    1116 00003e50                   WL      8,R4WP5C+FR3
    1117 00003e80                   WL      8,R4WP5C+FR2
    1118 00003eb0                   WL      ANI_GOTO,drqqloop
    1119                    
    1120                    
    1121                    *****************************************************************************
    1122                    *
    1123                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1124                    *
    1125 00003ee0            SUBRP  hrt_stand_anim
    1126 00003ee0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1127 00003f00     8003          .word   ANI_ZEROVELS
    1128 00003f10     8026          .word   ANI_SETSPEED,100h
    1129                    
    1130                            ; First roll the guy down to the bottom of the ring if need be
    1131 00003f30           jcqsrl_loop
    1132 00003f30     801c          .word   ANI_PAUSE,1
    1133 00003f50                   WL      ANI_CODE,check_roll
    1134 00003f80                   WL      ANI_IFSTATUS2,jcqsrl_loop
    1135                    
    1136 00003fb0                   WL      7,H3GU4A+FR1
    1137 00003fe0                   WL      7,H3GU4A+FR2
    1138 00004010                   WL      7,H3GU4A+FR3
    1139 00004040                   WL      7,H3GU4A+FR4
    1140 00004070                   WL      7,H3GU4A+FR5
    1141 000040a0                   WL      7,H3GU4A+FR6
    1142 000040d0                   WL      7,H3GU4A+FR7
    1143 00004100                   WL      7,H3GU4A+FR8
    1144 00004130                   WL      7,H3GU4A+FR9
    1145 00004160                   WL      7,H3GU4A+FR10
    1146                    
    1147                            ; Tell all he's up there
    1148 00004190                   WL      ANI_CODE,guy_is_up
    1149                    
    1150                            ; Face him the right direction
    1151 000041c0                   WL      ANI_CODE,adjust_facing
    1152                    
    1153                            ; And finally make him dizzy
    1154 000041f0            SUBRP  hrt_fdizzy_anim
    1155 000041f0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1156 00004210     8003          .word   ANI_ZEROVELS
    1157 00004220     8026          .word   ANI_SETSPEED,100h
    1158 00004240           jcqsloop
    1159 00004240                   WL      5,H4TI4B+FR1
    1160 00004270                   WL      5,H4TI4B+FR2
    1161 000042a0                   WL      5,H4TI4B+FR3
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   26

    1162 000042d0                   WL      5,H4TI4B+FR4
    1163 00004300                   WL      5,H4TI4B+FR5
    1164 00004330                   WL      5,H4TI4B+FR6
    1165 00004360                   WL      5,H4TI4B+FR7
    1166 00004390                   WL      5,H4TI4B+FR8
    1167 000043c0                   WL      5,H4TI4B+FR7
    1168 000043f0                   WL      5,H4TI4B+FR6
    1169 00004420                   WL      5,H4TI4B+FR5
    1170 00004450                   WL      5,H4TI4B+FR4
    1171 00004480                   WL      5,H4TI4B+FR3
    1172 000044b0                   WL      5,H4TI4B+FR2
    1173 000044e0                   WL      ANI_GOTO,jcqsloop
    1174                    
    1175                    
    1176                    *****************************************************************************
    1177                    *
    1178                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1179                    *
    1180 00004510            SUBRP  und_stand_anim
    1181 00004510     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1182 00004530     8003          .word   ANI_ZEROVELS
    1183 00004540     8026          .word   ANI_SETSPEED,100h
    1184                    
    1185                            ; First roll the guy down to the bottom of the ring if need be
    1186 00004560           uslhrl_loop
    1187 00004560     801c          .word   ANI_PAUSE,1
    1188 00004580                   WL      ANI_CODE,check_roll
    1189 000045b0                   WL      ANI_IFSTATUS2,uslhrl_loop
    1190                    
    1191 000045e0                   WL      7,U3SU4A+FR1
    1192 00004610                   WL      7,U3SU4A+FR2
    1193 00004640                   WL      7,U3SU4A+FR3
    1194 00004670                   WL      7,U3SU4A+FR4
    1195 000046a0                   WL      7,U3SU4A+FR5
    1196 000046d0                   WL      7,U3SU4A+FR6
    1197 00004700                   WL      7,U3SU4A+FR7
    1198 00004730                   WL      7,U3SU4A+FR8
    1199                    
    1200                            ; Tell all he's up there
    1201 00004760                   WL      ANI_CODE,guy_is_up
    1202                    
    1203                            ; Face him the right direction
    1204 00004790                   WL      ANI_CODE,adjust_facing
    1205                    
    1206                            ; And finally make him dizzy
    1207 000047c0            SUBRP  und_fdizzy_anim
    1208 000047c0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1209 000047e0     8003          .word   ANI_ZEROVELS
    1210 000047f0     8026          .word   ANI_SETSPEED,100h
    1211 00004810           uslhloop
    1212 00004810                   WL      10,U4TI4C+FR1
    1213 00004840                   WL      10,U4TI4C+FR3
    1214 00004870                   WL      10,U4TI4C+FR5
    1215 000048a0                   WL      10,U4TI4C+FR7
    1216 000048d0                   WL      10,U4TI4C+FR5
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   27

    1217 00004900                   WL      10,U4TI4C+FR3
    1218 00004930                   WL      ANI_GOTO,uslhloop
    1219                    
    1220                    
    1221                    *****************************************************************************
    1222                    *
    1223                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1224                    *
    1225 00004960            SUBRP  yok_stand_anim
    1226 00004960     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1227 00004980     8003          .word   ANI_ZEROVELS
    1228 00004990     8026          .word   ANI_SETSPEED,100h
    1229                    
    1230                            ; First roll the guy down to the bottom of the ring if need be
    1231 000049b0           yuhurl_loop
    1232 000049b0     801c          .word   ANI_PAUSE,1
    1233 000049d0                   WL      ANI_CODE,check_roll
    1234 00004a00                   WL      ANI_IFSTATUS2,yuhurl_loop
    1235                    
    1236 00004a30                   WL      7,Y3GU2A+FR1
    1237 00004a60                   WL      7,Y3GU2A+FR2
    1238 00004a90                   WL      7,Y3GU2A+FR3
    1239 00004ac0                   WL      7,Y3GU2A+FR4
    1240 00004af0                   WL      7,Y3GU2A+FR6
    1241 00004b20                   WL      7,Y3GU2A+FR7
    1242 00004b50                   WL      7,Y3GU2A+FR8
    1243 00004b80                   WL      7,Y3GU2A+FR10
    1244 00004bb0                   WL      7,Y3GU2A+FR11
    1245 00004be0                   WL      7,Y3GU2A+FR12
    1246 00004c10                   WL      7,Y3GU4A+FR13
    1247 00004c40                   WL      7,Y3GU4A+FR14
    1248                    
    1249                            ; Tell all he's up there
    1250 00004c70                   WL      ANI_CODE,guy_is_up
    1251                    
    1252                            ; Face him the right direction
    1253 00004ca0                   WL      ANI_CODE,adjust_facing
    1254                    
    1255                            ; And finally make him dizzy
    1256 00004cd0            SUBRP  yok_fdizzy_anim
    1257 00004cd0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1258 00004cf0     8003          .word   ANI_ZEROVELS
    1259 00004d00     8026          .word   ANI_SETSPEED,100h
    1260 00004d20           yuhuloop
    1261 00004d20                   WL      10,Y4TI4C+FR4
    1262 00004d50                   WL      10,Y4TI4C+FR5
    1263 00004d80                   WL      10,Y4TI4C+FR6
    1264 00004db0                   WL      10,Y4TI4C+FR7
    1265 00004de0                   WL      10,Y4TI4C+FR8
    1266 00004e10                   WL      10,Y4TI4C+FR7
    1267 00004e40                   WL      10,Y4TI4C+FR6
    1268 00004e70                   WL      10,Y4TI4C+FR5
    1269 00004ea0                   WL      ANI_GOTO,yuhuloop
    1270                    
    1271                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   28

    1272                    
    1273                    *****************************************************************************
    1274                    *
    1275                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1276                    *
    1277 00004ed0            SUBRP  shn_stand_anim
    1278 00004ed0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1279 00004ef0     8003          .word   ANI_ZEROVELS
    1280 00004f00     8026          .word   ANI_SETSPEED,100h
    1281                    
    1282                            ; First roll the guy down to the bottom of the ring if need be
    1283 00004f20           aywzrl_loop
    1284 00004f20     801c          .word   ANI_PAUSE,1
    1285 00004f40                   WL      ANI_CODE,check_roll
    1286 00004f70                   WL      ANI_IFSTATUS2,aywzrl_loop
    1287                    
    1288 00004fa0                   WL      7,S3GU2A+FR1
    1289 00004fd0                   WL      7,S3GU2A+FR2
    1290 00005000                   WL      7,S3GU4A+FR3
    1291 00005030                   WL      7,S3GU4A+FR4
    1292 00005060                   WL      7,S3GU4A+FR5
    1293 00005090                   WL      7,S3GU4A+FR6
    1294 000050c0                   WL      7,S3GU4A+FR7
    1295 000050f0                   WL      7,S3GU4A+FR8
    1296 00005120                   WL      7,S3GU4A+FR9
    1297                    
    1298                            ; Tell all he's up there
    1299 00005150                   WL      ANI_CODE,guy_is_up
    1300                    
    1301                            ; Face him the right direction
    1302 00005180                   WL      ANI_CODE,adjust_facing
    1303                    
    1304                            ; And finally make him dizzy
    1305 000051b0            SUBRP  shn_fdizzy_anim
    1306 000051b0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1307 000051d0     8003          .word   ANI_ZEROVELS
    1308 000051e0     8026          .word   ANI_SETSPEED,100h
    1309 00005200           aywzloop
    1310 00005200                   WL      9,S4TI4B+FR1
    1311 00005230                   WL      9,S4TI4B+FR2
    1312 00005260                   WL      9,S4TI4B+FR3
    1313 00005290                   WL      9,S4TI4B+FR4
    1314 000052c0                   WL      9,S4TI4B+FR3
    1315 000052f0                   WL      9,S4TI4B+FR2
    1316 00005320                   WL      ANI_GOTO,aywzloop
    1317                    
    1318                    
    1319                    *****************************************************************************
    1320                    *
    1321                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1322                    *
    1323 00005350            SUBRP  bam_stand_anim
    1324 00005350     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1325 00005370     8003          .word   ANI_ZEROVELS
    1326 00005380     8026          .word   ANI_SETSPEED,100h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   29

    1327                    
    1328                            ; First roll the guy down to the bottom of the ring if need be
    1329 000053a0           miphrl_loop
    1330 000053a0     801c          .word   ANI_PAUSE,1
    1331 000053c0                   WL      ANI_CODE,check_roll
    1332 000053f0                   WL      ANI_IFSTATUS2,miphrl_loop
    1333                    
    1334 00005420                   WL      7,B3GU4A+FR1
    1335 00005450                   WL      7,B3GU4A+FR2
    1336 00005480                   WL      7,B3GU4A+FR3
    1337 000054b0                   WL      7,B3GU4A+FR4
    1338 000054e0                   WL      7,B3GU4A+FR5
    1339 00005510                   WL      7,B3GU4A+FR6
    1340 00005540                   WL      7,B3GU4A+FR7
    1341 00005570                   WL      7,B3GU4A+FR8
    1342 000055a0                   WL      7,B3GU4A+FR9
    1343 000055d0                   WL      7,B3GU4A+FR10
    1344 00005600                   WL      7,B3GU4A+FR11
    1345 00005630                   WL      7,B3GU4A+FR12
    1346                    
    1347                            ; Tell all he's up there
    1348 00005660                   WL      ANI_CODE,guy_is_up
    1349                    
    1350                            ; Face him the right direction
    1351 00005690                   WL      ANI_CODE,adjust_facing
    1352                    
    1353                            ; And finally make him dizzy
    1354 000056c0            SUBRP  bam_fdizzy_anim
    1355 000056c0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1356 000056e0     8003          .word   ANI_ZEROVELS
    1357 000056f0     8026          .word   ANI_SETSPEED,100h
    1358 00005710           miphloop
    1359 00005710                   WL      8,B4TI4A+FR1
    1360 00005740                   WL      8,B4TI4A+FR2
    1361 00005770                   WL      8,B4TI4A+FR3
    1362 000057a0                   WL      8,B4TI4A+FR4
    1363 000057d0                   WL      8,B4TI4A+FR5
    1364 00005800                   WL      8,B4TI4A+FR6
    1365 00005830                   WL      8,B4TI4A+FR7
    1366 00005860                   WL      8,B4TI4A+FR6
    1367 00005890                   WL      8,B4TI4A+FR5
    1368 000058c0                   WL      8,B4TI4A+FR4
    1369 000058f0                   WL      8,B4TI4A+FR3
    1370 00005920                   WL      8,B4TI4A+FR2
    1371 00005950                   WL      ANI_GOTO,miphloop
    1372                    
    1373                    
    1374                    *****************************************************************************
    1375                    *
    1376                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1377                    *
    1378 00005980            SUBRP  dnk_stand_anim
    1379 00005980     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1380 000059a0     8003          .word   ANI_ZEROVELS
    1381 000059b0     8026          .word   ANI_SETSPEED,100h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   30

    1382                    
    1383                            ; First roll the guy down to the bottom of the ring if need be
    1384 000059d0           jssprl_loop
    1385 000059d0     801c          .word   ANI_PAUSE,1
    1386 000059f0                   WL      ANI_CODE,check_roll
    1387 00005a20                   WL      ANI_IFSTATUS2,jssprl_loop
    1388                    
    1389 00005a50                   WL      7,D3GU4A+FR1
    1390 00005a80                   WL      7,D3GU4A+FR2
    1391 00005ab0                   WL      7,D3GU4A+FR3
    1392 00005ae0                   WL      7,D3GU4A+FR4
    1393 00005b10                   WL      7,D3GU4A+FR5
    1394 00005b40                   WL      7,D3GU4A+FR6
    1395 00005b70                   WL      7,D3GU4A+FR7
    1396 00005ba0                   WL      7,D3GU4A+FR8
    1397 00005bd0                   WL      7,D3GU4A+FR9
    1398                    
    1399                            ; Tell all he's up there
    1400 00005c00                   WL      ANI_CODE,guy_is_up
    1401                    
    1402                            ; Face him the right direction
    1403 00005c30                   WL      ANI_CODE,adjust_facing
    1404                    
    1405                            ; And finally make him dizzy
    1406 00005c60            SUBRP  dnk_fdizzy_anim
    1407 00005c60     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1408 00005c80     8003          .word   ANI_ZEROVELS
    1409 00005c90     8026          .word   ANI_SETSPEED,100h
    1410 00005cb0           jssploop
    1411 00005cb0                   WL      6,D4SW4C+FR1
    1412 00005ce0                   WL      6,D4SW4C+FR2
    1413 00005d10                   WL      6,D4SW4C+FR3
    1414 00005d40                   WL      6,D4SW4C+FR4
    1415 00005d70                   WL      6,D4SW4C+FR5
    1416 00005da0                   WL      6,D4SW4C+FR6
    1417 00005dd0                   WL      6,D4SW4C+FR5
    1418 00005e00                   WL      6,D4SW4C+FR4
    1419 00005e30                   WL      6,D4SW4C+FR3
    1420 00005e60                   WL      6,D4SW4C+FR2
    1421 00005e90                   WL      ANI_GOTO,jssploop
    1422                    
    1423                    
    1424                    
    1425                    *****************************************************************************
    1426                    *
    1427                    * Stand wrestler changes the dead wrestlers animation to a standing position
    1428                    *
    1429 00005ec0            SUBRP  lex_stand_anim
    1430 00005ec0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1431 00005ee0     8003          .word   ANI_ZEROVELS
    1432 00005ef0     8026          .word   ANI_SETSPEED,100h
    1433                    
    1434                            ; First roll the guy down to the bottom of the ring if need be
    1435 00005f10           tihurl_loop
    1436 00005f10     801c          .word   ANI_PAUSE,1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   31

    1437 00005f30                   WL      ANI_CODE,check_roll
    1438 00005f60                   WL      ANI_IFSTATUS2,tihurl_loop
    1439                    
    1440 00005f90                   WL      7,L3GU4A+FR1
    1441 00005fc0                   WL      7,L3GU4A+FR2
    1442 00005ff0                   WL      7,L3GU4A+FR3
    1443 00006020                   WL      7,L3GU4A+FR4
    1444 00006050                   WL      7,L3GU4A+FR5
    1445 00006080                   WL      7,L3GU4A+FR6
    1446 000060b0                   WL      7,L3GU4A+FR7
    1447 000060e0                   WL      7,L3GU4A+FR8
    1448 00006110                   WL      7,L3GU4A+FR9
    1449 00006140                   WL      7,L3GU4A+FR10
    1450                    
    1451                            ; Tell all he's up there
    1452 00006170                   WL      ANI_CODE,guy_is_up
    1453                    
    1454                            ; Face him the right direction
    1455 000061a0                   WL      ANI_CODE,adjust_facing
    1456                    
    1457                            ; And finally make him dizzy
    1458 000061d0            SUBRP  lex_fdizzy_anim
    1459 000061d0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOGRAVITY
    1460 000061f0     8003          .word   ANI_ZEROVELS
    1461 00006200     8026          .word   ANI_SETSPEED,100h
    1462 00006220           tihuloop
    1463 00006220                   WL      8,L4TI4B+FR5
    1464 00006250                   WL      8,L4TI4B+FR6
    1465 00006280                   WL      8,L4TI4B+FR7
    1466 000062b0                   WL      8,L4TI4B+FR8
    1467 000062e0                   WL      8,L4TI4B+FR9
    1468 00006310                   WL      8,L4TI4B+FR8
    1469 00006340                   WL      8,L4TI4B+FR7
    1470 00006370                   WL      8,L4TI4B+FR6
    1471 000063a0                   WL      ANI_GOTO,tihuloop
    1472                    
    1473                    
    1474                    
    1475                    
    1476 000063d0            SUBRP  stand_table
    1477 000063d0 00003ee0'         .long   hrt_stand_anim  ;0 Bret Hart
    1478 000063f0 000038b0'         .long   rzr_stand_anim  ;1 Razor Ramon
    1479 00006410 00004510'         .long   und_stand_anim  ;2 Undertaker
    1480 00006430 00004960'         .long   yok_stand_anim  ;3 Yokozuna
    1481 00006450 00004ed0'         .long   shn_stand_anim  ;4 Shawn Michaels
    1482 00006470 00005350'         .long   bam_stand_anim  ;5 Bam Bam
    1483 00006490 00005980'         .long   dnk_stand_anim  ;6 Doink
    1484 000064b0 00000000          .long   0               ;7 spare
    1485 000064d0 00005ec0'         .long   lex_stand_anim  ;8 Lex Luger
    1486                    
    1487                    
    1488 000064f0            SUBRP  stand_wrestler
    1489 000064f0                   FACETBL stand_table
    1490 00006560     0d5f          calla   change_anim1a
         00006570 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   32

    1491 00006590     0960          rets
    1492                    
    1493 000065a0            SUBRP  dizzy_table
    1494 000065a0 000041f0'         .long   hrt_fdizzy_anim ;0 Bret Hart
    1495 000065c0 00003bc0'         .long   rzr_fdizzy_anim ;1 Razor Ramon
    1496 000065e0 000047c0'         .long   und_fdizzy_anim ;2 Undertaker
    1497 00006600 00004cd0'         .long   yok_fdizzy_anim ;3 Yokozuna
    1498 00006620 000051b0'         .long   shn_fdizzy_anim ;4 Shawn Michaels
    1499 00006640 000056c0'         .long   bam_fdizzy_anim ;5 Bam Bam
    1500 00006660 00005c60'         .long   dnk_fdizzy_anim ;6 Doink
    1501 00006680 00000000          .long   0               ;7 spare
    1502 000066a0 000061d0'         .long   lex_fdizzy_anim ;8 Lex Luger
    1503                    
    1504                    
    1505 000066c0            SUBRP  dizzy_wrestler
    1506 000066c0                   FACETBL dizzy_table
    1507 00006730     0d5f          calla   change_anim1a
         00006740 00000000! 
    1508 00006760     0960          rets
    1509                    
    1510                    
    1511                    
    1512                    *****************************************************************************
    1513                    *
    1514                    * Raise dead anim
    1515                    *
    1516 00006770            SUBRP  raise_dead_anim
    1517                    
    1518                            ; Uninterruptable, no autoflip, no gravity
    1519 00006770     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY
    1520 00006790     8003          .word   ANI_ZEROVELS
    1521 000067a0     8026          .word   ANI_SETSPEED,100h
    1522                    
    1523 000067c0     801c          .word   ANI_PAUSE,(TSEC/2)
    1524                    
    1525                            ; Now make him stand up
    1526 000067e0                   WL      ANI_CODE,stand_wrestler
    1527                    
    1528                    
    1529                    
    1530                    *****************************************************************************
    1531                    *
    1532                    * Raises the dead guy off the floor and starts a standing dizzy animation
    1533                    * for the dead guy.
    1534                    *
    1535 00006810            SUBRP  raise_dead
    1536 00006810                   SLEEP   TSEC/2          ; Give him a bit before standing up
    1537 00006860                   PUSH    a13
    1538 00006870     07ad          move    @dead_wrestler,a13,L
         00006880 00000020- 
    1539 000068a0     09e0          movi    raise_dead_anim,a0
         000068b0 00006770' 
    1540 000068d0     0d5f          calla   change_anim1a
         000068e0 00000000! 
    1541 00006900                   PULL    a13
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   33

    1542 00006910                   DIE
    1543                    
    1544              0010  TIME_FOR_MOVE   .equ    16
    1545                    
    1546                    *****************************************************************************
    1547                    *
    1548                    * This sets the guy is in the coffin flag
    1549                    *
    1550 00006940            SUBRP  guy_is_in
    1551 00006940     182e          movk    1,a14
    1552 00006950     058e          move    a14,@guy_in
         00006960 00000060- 
    1553 00006980     0960          rets
    1554                    
    1555                    *****************************************************************************
    1556                    *
    1557                    * Sets the X, Y, and Z velocities of the dead wrestler being pushed into the
    1558                    * coffin.
    1559                    *
    1560 00006990            SUBRP  set_speeds
    1561 00006990     b5a2          move    *a13(OBJ_XPOSINT),a2
         000069a0     0110  
    1562 000069b0     09c1          movi    HOLE_XPOS+7,a1
         000069c0     04e9  
    1563 000069d0     4441          sub     a2,a1
    1564 000069e0     09c2          movi    TIME_FOR_MOVE,a2
         000069f0     0010  
    1565 00006a00     2601          sll     16,a1
    1566 00006a10     5841          divs    a2,a1
    1567 00006a20     b22d          move    a1,*a13(OBJ_XVEL),L
         00006a30     02d0  
    1568                    
    1569 00006a40     b5a2          move    *a13(OBJ_ZPOSINT),a2
         00006a50     0150  
    1570 00006a60     0b42          cmpi    WRES_Z,a2
         00006a70     fb2f  
    1571 00006a80     c504          jrge    bgdtis_in_front
    1572 00006a90     09c2          movi    WRES_Z,a2
         00006aa0     04d0  
    1573 00006ab0     b04d          move    a2,*a13(OBJ_ZPOSINT)
         00006ac0     0150  
    1574 00006ad0           bgdtis_in_front
    1575 00006ad0     09c1          movi    WRES_Z,a1
         00006ae0     04d0  
    1576 00006af0     4441          sub     a2,a1
    1577 00006b00     09c2          movi    TIME_FOR_MOVE,a2
         00006b10     0010  
    1578 00006b20     2601          sll     16,a1
    1579 00006b30     5841          divs    a2,a1
    1580 00006b40     b22d          move    a1,*a13(OBJ_ZVEL),L
         00006b50     0310  
    1581                    
    1582 00006b60     0960          rets
    1583                    
    1584                    *****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   34

    1585                    *
    1586                    * Push in animation - pushes the dead wrestler into the coffin
    1587                    *
    1588 00006b70            SUBRP  push_in_anim
    1589 00006b70     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP|MODE_NOGRAVITY|MODE_NOSHADOW
    1590 00006b90     8003          .word   ANI_ZEROVELS
    1591 00006ba0     8026          .word   ANI_SETSPEED,100h
    1592                    
    1593                            ; Set the X,Y,and Z velocities
    1594 00006bc0                   WL      ANI_CODE,set_speeds
    1595                    
    1596                            ; Make a woosh sound while he's moving to coffin
    1597 00006bf0     801a          .word   ANI_SOUND,014h
    1598                    
    1599                            ; Wait for him to get there
    1600 00006c10     801c          .word   ANI_PAUSE,TIME_FOR_MOVE
    1601                    
    1602                            ; Stop him from moving anymore
    1603 00006c30     8003          .word   ANI_ZEROVELS
    1604                    
    1605                            ; Make a crash sound when he's in
    1606 00006c40     801a          .word   ANI_SOUND,0bh
    1607                    
    1608                            ; Glitch him up 27 pixels
    1609 00006c60                   WL      ANI_SET_YVEL,1b0000h
    1610 00006c90     801c          .word   ANI_PAUSE,1
    1611                    
    1612                            ; Stop him from moving
    1613 00006cb0     8003          .word   ANI_ZEROVELS
    1614                    
    1615                            ; Tell everyone who is interested that he's made it
    1616 00006cc0                   WL      ANI_CODE,guy_is_in
    1617                    
    1618                            ; Make him be dizzy
    1619 00006cf0                   WL      ANI_CODE,dizzy_wrestler
    1620                    
    1621                    
    1622                    *****************************************************************************
    1623                    *
    1624                    * Pushes the dead guy into the coffin
    1625                    *
    1626 00006d20            SUBRP  push_to_coffin
    1627 00006d20                   PUSH    a13
    1628 00006d30     07ad          move    @dead_wrestler,a13,L
         00006d40 00000020- 
    1629 00006d60     09e0          movi    push_in_anim,a0
         00006d70 00006b70' 
    1630 00006d90     0d5f          calla   change_anim1a
         00006da0 00000000! 
    1631 00006dc0                   PULL    a13
    1632 00006dd0     0960          rets
    1633                    
    1634                    
    1635                    *****************************************************************************
    1636                    *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   35

    1637                    * lyak2 Undertaker raise the dead animation
    1638                    *
    1639                    
    1640 00006de0            SUBR   und_2_raise_dead_anim
    1641                    
    1642 00006de0     8002          .word   ANI_SETMODE,MODE_UNINT|MODE_NOAUTOFLIP  ;uninterruptable
    1643 00006e00     8003          .word   ANI_ZEROVELS
    1644 00006e10     8026          .word   ANI_SETSPEED,100h
    1645                    
    1646 00006e30                   WL      ANI_CODE,adjust_taker_facing
    1647                    
    1648                            ; This rises the dead guy up off of the floor to a standing dizzy
    1649                            ; position.
    1650 00006e60                   WLWWWW  ANI_CREATEPROC,raise_dead,0,0,0,0
    1651                    
    1652                            ; Start the coffin rising up
    1653 00006ed0                   WLWWWW  ANI_CREATEPROC,und_coffin_up,0,0,0,0
    1654                    
    1655 00006f40                   WLWW    ANI_SHADOWTRAIL,UNDNEG_P,5,15   ;pal,rate,lifespan
    1656                    
    1657                            ; This is what taker does to raise the dead guy
    1658 00006f90                   WL      4,U5RV5A+FR1
    1659 00006fc0                   WL      4,U5RV5A+FR2
    1660 00006ff0                   WL      4,U5RV5A+FR3
    1661 00007020           lyakloopa
    1662 00007020                   WL      5,U5RV5A+FR4
    1663 00007050                   WL      5,U5RV5A+FR5
    1664 00007080                   WL      15,U5RV5A+FR6
    1665 000070b0                   WL      5,U5RV5A+FR5
    1666 000070e0                   WL      ANI_CODE,DO_CROWD_CHEER
    1667 00007110                   WL      ANI_CODE,is_guy_up
    1668 00007140                   WL      ANI_IFNOTSTATUS2,lyakloopa
    1669                    
    1670                            ; Let the dead guy stand there being dizzy fer a bit
    1671 00007170           lyakloop
    1672 00007170                   WL      5,U5RV5A+FR4
    1673 000071a0                   WL      5,U5RV5A+FR5
    1674 000071d0                   WL      15,U5RV5A+FR6
    1675 00007200                   WL      5,U5RV5A+FR5
    1676                    
    1677 00007230                   WL      ANI_CODE,DO_CROWD_CHEER
    1678 00007260                   WL      ANI_CODE,is_door_open
    1679 00007290                   WL      ANI_IFNOTSTATUS2,lyakloop
    1680 000072c0                   WL      5,U5RV5A+FR4
    1681 000072f0                   WL      4,U5RV5A+FR3
    1682 00007320                   WL      4,U5RV5A+FR2
    1683 00007350                   WL      4,U5RV5A+FR1
    1684                    
    1685                            ; This is what taker does to push the guy into the coffin
    1686 00007380                   WLWW    ANI_SHADOWTRAIL,UNDNEG_P,2,8    ;pal,rate,lifespan
    1687 000073d0                   WL      7,U4PS3A+FR1
    1688 00007400                   WL      7,U4PS3A+FR2
    1689 00007430                   WL      7,U4PS3A+FR3
    1690                    
    1691                            ; This pushes the dead guy into the coffin and lets him stand in it
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 02:21:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

Finish moves sequences                                               PAGE   36

    1692                            ; being dizzy for a bit
    1693                            ; Make a grunt sound when push start
    1694 00007460     801a          .word   ANI_SOUND,02dh
    1695                    
    1696 00007480                   WL      ANI_CODE,push_to_coffin
    1697 000074b0     8062          .word   ANI_SET_RPTCOUNT,(TSEC*3)/(7*6)
    1698 000074d0           lyakloop1
    1699 000074d0                   WL      7,U4PS3A+FR5
    1700 00007500                   WL      7,U4PS3A+FR6
    1701 00007530                   WL      7,U4PS3A+FR7
    1702 00007560                   WL      7,U4PS3A+FR8
    1703 00007590                   WL      7,U4PS3A+FR7
    1704 000075c0                   WL      7,U4PS3A+FR6
    1705                    
    1706 000075f0                   WL      ANI_CODE,DO_CROWD_CHEER
    1707 00007620                   WL      ANI_CODE,is_he_in
    1708 00007650                   WL      ANI_IFNOTSTATUS2,lyakloop1
    1709 00007680     8063          .word   ANI_DEC_RPTCOUNT
    1710 00007690                   WL      ANI_IF_RPTCOUNT,lyakloop1
    1711                    
    1712                            ; Now close the door
    1713 000076c0     801a          .word   ANI_SOUND,2dh           ; Push door shut effort grunt
    1714 000076e0                   WL      ANI_CODE,close_door
    1715                    
    1716 00007710           lyakd_loop
    1717 00007710     801c          .word   ANI_PAUSE,5
    1718 00007730                   WL      ANI_CODE,make_wres_disappear
    1719 00007760                   WL      ANI_IFNOTSTATUS2,lyakd_loop
    1720                    
    1721 00007790                   WL      7,U4PS3A+FR5
    1722 000077c0                   WL      7,U4PS3A+FR3
    1723 000077f0                   WL      7,U4PS3A+FR2
    1724 00007820                   WL      7,U4PS3A+FR1
    1725                    
    1726                            ; And last but not least raise arm and leave crowd cheering
    1727 00007850     8064          .word   ANI_SHADOWTRAIL,0       ;off
    1728 00007870                   WL      4,U5RV5A+FR1
    1729 000078a0                   WL      4,U5RV5A+FR2
    1730 000078d0                   WL      4,U5RV5A+FR3
    1731 00007900                   WL      4,U5RV5A+FR4
    1732 00007930                   WL      4,U5RV5A+FR5
    1733 00007960           lyakloop3
    1734 00007960                   WL      ANI_CODE,DO_CROWD_CHEER
    1735 00007990                   WL      50,U5RV5A+FR6
    1736 000079c0                   WL      ANI_GOTO,lyakloop3
    1737                    
    1738                    
    1739                            .end

 No Errors,  No Warnings
