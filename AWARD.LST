TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "award.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "mproc.equ"             ;Mproc equates
      11                            .include        "display.equ"           ;Display proc equates
      12                            .include        "gsp.equ"               ;Gsp asm equates
      13                            .include        "sys.equ"
      14                            .include        "wwfsec.equ"
      15                            .include        "game.equ"
      16                            .include        "audit.equ"
      17                            .include        "plyr.equ"
      18                            .include        "anim.equ"
      19                            .include        "sound.h"
      20                            .include        "ring.equ"
      21                            .include        "sound.equ"
      22                            .include        "damage.equ"
      23                            .include        "jjxm.h"
      24                    
      25                            .include        "imgtbl.glo"
      26                            .include        "fontsimg.glo"
      27                            .include        "bgndtbl.glo"
      28                            .include        "miscimg.glo"
      29                    
      30                    
      31              0000  SHOW_ACCUM_ICONS        .set    0
      32                    
      33              0002  BLOCK_ICONS             .equ    2       ; 2 single rnd 5 for 2
      34              0005  DBL_BLOCK_ICONS         .equ    5
      35              0002  PERFECT_ICONS           .equ    2
      36              0005  DBL_PERFECT_ICONS       .equ    5
      37              0002  BIG_COMEBACK_ICONS      .equ    2
      38              0001  TWO_ROUND_SWEEP_ICONS   .equ    1
      39              0003  FIVE_WINS_ICONS         .equ    3
      40              0001  QUICK_VICTORY_ICONS     .equ    1
      41                    
      42              0000  POWER_MOVE_ICONS        .equ    0
      43              0000  REVERSALS_ICONS         .equ    0
      44              0000  HIGH_RISK_MOVE_ICONS    .equ    0
      45              0000  COMBOS_STARTED_ICONS    .equ    0
      46              0000  COMBO_REVERSALS_ICONS   .equ    0
      47              0000  COMBO_BREAKER_ICONS     .equ    0
      48              0000  ULTRA_COMBOS_ICONS      .equ    0
      49              0000  FIRST_HIT_ICONS         .equ    0
      50              0000  DEFEAT_HUMAN_ICONS      .equ    0
      51              0000  GAME_COMPLETE_ICONS     .equ    0
      52              0000  SUPER_QWK_VICTORY_ICONS .equ    0
      53              0000  VERY_QWK_VICTORY_ICONS  .equ    0
      54                    
      55              0040  MAX_BONUS_BARS          .equ    (NUM_AWARDS*2)
      56              0006  BONUS_RECORD_SIZE       .equ    6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    2

      57              00e6  BONUS_BAR_YPOS          .equ    230
      58              0014  BONUS_BAR_VEL           .equ    20
      59              0014  BONUS_BAR_YSPACE        .equ    20
      60              00b4  BONUS_BAR_END_XPOS      .equ    180
      61              ff9b  BONUS_LTEXT_START_XPOS  .equ    -((BONUS_BAR_END_XPOS+22)/2)
      62              0065  BONUS_RTEXT_START_XPOS  .equ    -BONUS_LTEXT_START_XPOS
      63                    
      64              ffea  BONUS_ICON1_START_XPOS  .equ    -22
      65              ffdb  BONUS_ICON2_START_XPOS  .equ    -37
      66              ffcc  BONUS_ICON3_START_XPOS  .equ    -52
      67                    
      68                    
      69              00a3  LIFE_MAX        .equ    163             ;green pixels in life bar
      70                    
      71              0051  BONUS_MSG_XPOS1         .equ    81
      72              0141  BONUS_MSG_XPOS2         .equ    321
      73              00c6  BONUS_MSG_YPOS          .equ    198
      74              0051  BONUS_ICON_XPOS1        .equ    BONUS_MSG_XPOS1
      75              0141  BONUS_ICON_XPOS2        .equ    BONUS_MSG_XPOS2
      76              00dc  BONUS_ICON_YPOS         .equ    BONUS_MSG_YPOS+22
      77                    
      78                    
      79              0038  PROG_BICON_XPOS .equ    56
      80              005d  PROG_BICON_YPOS .equ    93
      81                    
      82                            .if 0
      83                    DUFUS_BOX_YPOS  .equ    144
      84                    DUFUS_BOX_RXPOS .equ    399-(119+40)
      85                    DUFUS_BOX_LXPOS .equ    40
      86                            .else
      87              00a7  DUFUS_BOX_YPOS  .equ    144+23
      88              012c  DUFUS_BOX_RXPOS .equ    399-(59+40)
      89              0063  DUFUS_BOX_LXPOS .equ    40+59
      90                            .endif
      91                    
      92                    
      93              00aa  BOX_OUT_SOUND   .equ    0aah
      94              00b6  ZIP_IN_SOUND    .equ    0b6h
      95                    
      96                    
      97              0001  POWERUP_CODE_ON .set    1
      98                    
      99                    
     100              0001  PUNCH   .equ    1
     101              0002  BLOCK   .equ    2
     102              0004  SUPERP  .equ    4
     103              0008  KICK    .equ    8
     104                    
     105                    
     106              0020  UP      .equ    32
     107              0040  DOWN    .equ    64
     108              0080  LEFT    .equ    128
     109              0100  RIGHT   .equ    256
     110                    
     111                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    3

     112              00d2  PU_START_Y      .equ    210
     113              fff1  PU_BAR_YSPACE   .equ    -15
     114                    
     115              007d  PU_LEND_X       .equ    125
     116              0113  PU_REND_X       .equ    400-PU_LEND_X
     117              ffc2  PU_LTEXT_XPOS   .equ    -(PU_LEND_X/2)
     118              01ce  PU_RTEXT_XPOS   .equ    400+(PU_LEND_X/2)
     119              0019  PU_BAR_VELOCITY .equ    25
     120                    
     121              0e10  LPUBAROID       .equ    TYPVELALWAYS+010h
     122              0e11  RPUBAROID       .equ    TYPVELALWAYS+011h
     123                    
     124              0000  MKDEBUG         .equ    0
     125                    
     126                    
     127                    PUPWAITSWITCH   .macro  SWITCHES,FAILADDR
     128                    lp?
     129                            SLEEPK  1
     130                            dec     a11
     131                            jrz     :FAILADDR:
     132                            move    a8,a0
     133                            calla   get_but_val_down
     134                            move    a0,a1
     135                            move    a8,a0
     136                            calla   get_stick_val_down
     137                            sll     5,a0
     138                            or      a1,a0
     139                            jrz     lp?
     140                            cmpi    :SWITCHES:,a0
     141                            jrnz    lp?
     142                    
     143                            .endm
     144                    
     145                    
     146 00000000                   BSSX    p1rnd_award,    8*NUM_AWARDS    ;player 1 round awards
     147 00000000                   BSSX    p2rnd_award,    8*NUM_AWARDS    ;player 2 round awards
     148 00000000                   BSSX    p1mtch_award,   8*NUM_AWARDS    ;player 1 match awards
     149 00000000                   BSSX    p2mtch_award,   8*NUM_AWARDS    ;player 2 match awards
     150 00000000                   BSSX    p1ws_award,     16*NUM_AWARDS   ;player 1 winstreak awards
     151 00000000                   BSSX    p2ws_award,     16*NUM_AWARDS   ;player 2 winstreak awards
     152 00000000                   BSSX    award_ok_to_die,32
     153 00000000                   BSSX    pcomeback,      32*2            ;Player big comeback status
     154 00000000                   BSSX    dboxes_on,32
     155 00000000                   BSSX    powerup_requests,32
     156 00000000                   BSSX    powerup_die,32
     157 00000000                   BSSX    show_options_die,16
     158 00000000                   BSSX    do_show_options,16
     159                    
     160 00000000                   BSSX    blocking_off,16
     161 00000000                   BSSX    ring_out_on,16
     162 00000000                   BSSX    buddy_mode_on,16
     163 00000000                   BSSX    move_names_on,16
     164 00000000                   BSSX    drone_meters_on,16
     165 00000000                   BSSX    instant_combos_on,16
     166 00000000                   BSSX    hyper_speed_on,16
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    4

     167 00000000                   BSSX    no_ring_on,16
     168 00000000                   BSSX    mk3_tip_number,16
     169 00000970                   .bss    mk_cycram,16*16
     170                            
     171 00000a70                   .bss    pwsarm,         32*2            ;Player big comeback status
     172 00000ab0                   .bss    ptotal,         32*2            ;Player total Icon counts
     173 00000af0                   .bss    bar_obj_ptr,    MAX_BONUS_BARS*BONUS_RECORD_SIZE*32*2
     174 00006af0                   .bss    bonus_bar_size, 32
     175 00006b10                   .bss    picon,          32*3*MAX_BONUS_BARS*2
     176 00009b10                   .bss    player_award_state,32
     177 00000000                   BSSX    p1icon_total,   32
     178 00000000                   BSSX    p2icon_total,   32
     179 00009b70                   .bss    icon_digit_adjust,32
     180 00009b90                   .bss    p1bicon,32*8
     181 00009c90                   .bss    p2bicon,32*8
     182 00009d90                   .bss    icon_string_width,32
     183 00009db0                   .bss    progress_icons,32*8
     184 00009eb0                   .bss    p1dufus_obj,32*2
     185 00009ef0                   .bss    p2dufus_obj,32*2
     186 00009f30                   .bss    p1dufus_msg_flags,32
     187 00009f50                   .bss    p2dufus_msg_flags,32
     188 00000000                   BSSX    p1powerup_request,32
     189 00000000                   BSSX    p2powerup_request,32
     190 00000000                   BSSX    p1pins,16
     191 00000000                   BSSX    p2pins,16
     192                    
     193                            .ref    match_time,ck_live_teammates
     194                            .ref    PSTATUS2,royal_rumble
     195                            .ref    process_ptrs
     196                            .ref    p1winstreak
     197                            .ref    p2winstreak
     198                            .ref    get_health
     199                            .ref    p1oldwinstreak
     200                            .ref    p2oldwinstreak
     201                            .ref    FLASHME,FINAL_PTR
     202                            .ref    triple_sound
     203                            .ref    BEGINOBJ_TBL
     204                            .ref    get_but_val_down
     205                            .ref    get_stick_val_down
     206                            .ref    get_all_buttons_cur
     207                            .ref    END_MATCH_SPEECH
     208                            .ref    fade_down
     209                            .ref    pal_clean
     210                            .ref    fade_up
     211                            .ref    GET_AUD
     212                            .ref    STORE_AUDIT
     213                            .ref    is_8_on_1
     214                            .ref    wrestler_count
     215                            .ref    in_finish_move
     216                            .ref    NUM_OPPS
     217                    
     218                    
     219 00000000            SUBR   rst_awards
     220 00000000                   PUSH    a0,a1
     221 00000020     09c0          movi    (NUM_AWARDS*2)-1,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    5

         00000030     003f  
     222 00000040     5621          clr     a1
     223 00000050           grbnrst_award_loop
     224 00000050     8c2e          movb    a1,*a14
     225 00000060     110e          addk    8,a14
     226 00000070     3c60          dsjs    a0,grbnrst_award_loop
     227 00000080     09e0          movi    pcomeback,a0
         00000090 00000820- 
     228 000000b0     9220          move    a1,*a0+,L
     229 000000c0     8220          move    a1,*a0,L
     230 000000d0                   PULL    a0,a1
     231 000000f0     0960          rets
     232                    
     233                    
     234 00000100            SUBRP  accumulate_player_awards
     235 00000100     05ae          move    @royal_rumble,a14
         00000110 00000000! 
     236 00000130     cb18          jrnz    grbnapa_done
     237 00000140                   X32     a0
     238 00000150     0b20          addi    process_ptrs,a0
         00000160 00000000! 
     239 00000180     8601          move    *a0,a1,L
     240 00000190     ca12          jrz     grbnapa_done
     241 000001a0     4ca0          move    a5,a0
     242 000001b0     0b00          addi    (BLOCKS_AWD*8),a0
         000001c0     0018  
     243 000001d0     8e01          movb    *a0,a1
     244 000001e0     ca02          jrz     grbnno_blocks
     245 000001f0     5621          clr     a1
     246 00000200     c001          jruc    grbndo_accumulate
     247 00000210           grbnno_blocks
     248 00000210     1841          movk    BLOCK_ICONS,a1
     249 00000220           grbndo_accumulate
     250 00000220     8c20          movb    a1,*a0
     251 00000230     09c2          movi    NUM_RND_AWARDS,a2       ; number of awards
         00000240     0018  
     252 00000250           grbnacc_awards_loop
     253 00000250     8ec3          movb    *a6,a3                  ; Get current value of match award
     254 00000260     8ea4          movb    *a5,a4                  ; Get per round award
     255 00000270     4083          add     a4,a3                   ; Add to per match award
     256 00000280     8c66          movb    a3,*a6                  ; Store back to per match award
     257 00000290     1106          addk    8,a6                    ; Increment round awards pointer
     258 000002a0     1105          addk    8,a5                    ; Increment match awards pointer
     259 000002b0     3ce2          dsjs    a2,grbnacc_awards_loop  ; Keep going until all are accumulated
     260 000002c0           grbnapa_done
     261 000002c0     0960          rets
     262                    
     263                    
     264 000002d0            SUBR   accumulate_awards
     265 000002d0                   PUSH    a0,a1,a2,a3,a4,a5,a6    ; Save reggies I'm gonna trash
     266                    
     267 000002f0     5600          clr     a0
     268 00000300     09e5          movi    p1rnd_award,a5
         00000310 00000000- 
     269 00000330     09e6          movi    p1mtch_award,a6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    6

         00000340 00000200- 
     270 00000360     0d3f          callr   accumulate_player_awards
         00000370     ffd8  
     271                    
     272 00000380     1820          movk    1,a0
     273 00000390     09e5          movi    p2rnd_award,a5
         000003a0 00000100- 
     274 000003c0     09e6          movi    p2mtch_award,a6
         000003d0 00000300- 
     275 000003f0     0d3f          callr   accumulate_player_awards
         00000400     ffcf  
     276                    
     277 00000410                   PULL    a0,a1,a2,a3,a4,a5,a6    ; Restore reggies
     278 00000430     09ee          movi    p1rnd_award,a14         ; Clear out per round awards
         00000440 00000000- 
     279 00000460     0d3f          callr   rst_awards
         00000470     ffb8  
     280 00000480     0960          rets
     281                            
     282                            
     283 00000490            SUBR   rst_winstreak_awards
     284 00000490                   PUSH    a0,a1
     285 000004b0     09c0          movi    NUM_AWARDS-1,a0
         000004c0     001f  
     286 000004d0     5621          clr     a1
     287 000004e0           wzaurst_ws_award_loop
     288 000004e0     902e          move    a1,*a14+,W
     289 000004f0     3c40          dsjs    a0,wzaurst_ws_award_loop
     290 00000500                   PULL    a0,a1
     291 00000520     0960          rets
     292                    
     293 00000530            SUBRP  award_icons:
     294 00000530       00          .byte   POWER_MOVE_ICONS        ;POWER_MOVE_AWD 
     295 00000538       00          .byte   REVERSALS_ICONS         ;REVERSAL_AWD   
     296 00000540       00          .byte   HIGH_RISK_MOVE_ICONS    ;HIGH_RISK_AWD  
     297 00000548       02          .byte   BLOCK_ICONS             ;BLOCKS_AWD     
     298 00000550       00          .byte   COMBOS_STARTED_ICONS    ;COMBOS_AWD     
     299 00000558       00          .byte   COMBO_REVERSALS_ICONS   ;COMBO_REV_AWD  
     300 00000560       00          .byte   COMBO_BREAKER_ICONS     ;COMBO_BRKR_AWD 
     301 00000568       00          .byte   ULTRA_COMBOS_ICONS      ;UCOMBOS_AWD    
     302 00000570       02          .byte   PERFECT_ICONS           ;PERFECT_AWD    
     303 00000578       00          .byte   FIRST_HIT_ICONS         ;FIRST_HIT_AWD  
     304 00000580       02          .byte   BIG_COMEBACK_ICONS      ;COMEBACK_AWD   
     305 00000588       00          .byte   SUPER_QWK_VICTORY_ICONS ;SUPER_QUICK_AWD
     306 00000590       00          .byte   VERY_QWK_VICTORY_ICONS  ;VERY_QUICK_AWD 
     307 00000598       01          .byte   QUICK_VICTORY_ICONS     ;QUICK_AWD      
     308 000005a0       00          .byte   DEFEAT_HUMAN_ICONS      ;DFT_HUMAN_AWD  
     309 000005a8       00          .byte   0                       ;Not used
     310 000005b0       00          .byte   0                       ;Not used
     311 000005b8       00          .byte   0                       ;Not used
     312 000005c0       00          .byte   0                       ;Not used
     313 000005c8       00          .byte   0                       ;Not used
     314 000005d0       00          .byte   0                       ;Not used
     315 000005d8       00          .byte   0                       ;Not used
     316 000005e0       00          .byte   0                       ;Not used
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    7

     317 000005e8       00          .byte   0                       ;Not used
     318 000005f0       05          .byte   DBL_PERFECT_ICONS       ;DBL_PERFECT_AWD
     319 000005f8       01          .byte   TWO_ROUND_SWEEP_ICONS   ;TWO_RND_AWD    
     320 00000600       00          .byte   0                       ;Not used
     321 00000608       00          .byte   0                       ;Not used
     322 00000610       00          .byte   GAME_COMPLETE_ICONS     ;GAME_CMPLT_AWD
     323 00000618       03          .byte   FIVE_WINS_ICONS         ;FIVE_WINS_AWD  
     324 00000620       00          .byte   0                       ;Not used
     325 00000628       00          .byte   0                       ;Not used
     326 00000630                   .even
     327                    
     328 00000630            SUBR   round_award
     329 00000630                   PUSH    a9,a8
     330 00000650     b409          move    *a0(PLYRNUM),a9,W       ; Get the player number
         00000660     0580  
     331 00000670     0b49          cmpi    2,a9                    ; Is this a human player
         00000680     fffd  
     332 00000690     c513          jrge    ureara_out                      ; br = nope - get out
     333 000006a0                   X8      a10                     ; Mult award index by 8
     334 000006b0     4d48          move    a10,a8
     335 000006c0     ae09          movb    *a0(PLYR_SIDE),a9       ; What side are we ?
         000006d0     05b0  
     336 000006e0     ca04          jrz     ureacks_rnd_p1          ; br = player 1
     337 000006f0     0b2a          addi    p2rnd_award,a10         ; add player 2 round table base to index
         00000700 00000100- 
     338 00000720     c003          jruc    ureacks_rnd_go          ; increment counter
     339 00000730           ureacks_rnd_p1
     340 00000730     0b2a          addi    p1rnd_award,a10         ; add player 2 round table base to index
         00000740 00000000- 
     341 00000760           ureacks_rnd_go
     342 00000760     0b28          addi    award_icons,a8
         00000770 00000530' 
     343 00000790     8f08          movb    *a8,a8                  ; Get # ICONs to award
     344 000007a0     8f49          movb    *a10,a9                 ; Get current value
     345 000007b0     4109          add     a8,a9                   ; Add em in
     346 000007c0     8d2a          movb    a9,*a10                 ; Put it back
     347 000007d0           ureara_out      PULL    a9,a8                   ; Restore A9
     348 000007f0     0960          rets                            ; Get the hell out
     349                    
     350                    
     351 00000800            SUBR   match_award
     352 00000800                   PUSH    a9,a8
     353 00000820     b409          move    *a0(PLYRNUM),a9,W       ; Get the player number
         00000830     0580  
     354 00000840     0b49          cmpi    2,a9                    ; Is this a human player
         00000850     fffd  
     355 00000860     c513          jrge    lehmma_out                      ; br = nope - get out
     356 00000870                   X8      a10                     ; Mult award index by 8
     357 00000880     4d48          move    a10,a8
     358 00000890     ae09          movb    *a0(PLYR_SIDE),a9       ; What side are we ?
         000008a0     05b0  
     359 000008b0     ca04          jrz     lehmcks_match_p1                ; br = player 1
     360 000008c0     0b2a          addi    p2mtch_award,a10        ; add player 2 round table base to index
         000008d0 00000300- 
     361 000008f0     c003          jruc    lehmcks_match_go                ; increment counter
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    8

     362 00000900           lehmcks_match_p1
     363 00000900     0b2a          addi    p1mtch_award,a10        ; add player 2 round table base to index
         00000910 00000200- 
     364 00000930           lehmcks_match_go
     365 00000930     0b28          addi    award_icons,a8
         00000940 00000530' 
     366 00000960     8f08          movb    *a8,a8                  ; Get # ICONs to award
     367 00000970     8f49          movb    *a10,a9                 ; Get current value
     368 00000980     4109          add     a8,a9                   ; Add em in
     369 00000990     8d2a          movb    a9,*a10                 ; Put it back
     370 000009a0           lehmma_out      PULL    a9,a8                   ; Restore A9
     371 000009c0     0960          rets                            ; Get the hell out
     372                    
     373                            
     374 000009d0            SUBRP  award_text
     375 000009d0 00000000!         .long   PWRMVEC         ; Power Move
     376 000009f0 00000000!         .long   HIGHRSKC        ; Reversal
     377 00000a10 00000000!         .long   HIGHRSKC        ; High Risk
     378 00000a30 00000000!         .long   NOBLOCK         ; No Blocks
     379 00000a50 00000000!         .long   HIGHRSKC        ; Combos Started
     380 00000a70 00000000!         .long   CMBOREVC        ; Combo Reversals
     381 00000a90 00000000!         .long   HIGHRSKC        ; Combo Breakers
     382 00000ab0 00000000!         .long   HIGHRSKC        ; Ultra Combos
     383 00000ad0 00000000!         .long   PERFECT         ; Perfect
     384 00000af0 00000000!         .long   CMBOREVC        ; First Hit
     385 00000b10 00000000!         .long   BIGCOME         ; Big Comeback
     386 00000b30 00000000!         .long   HIGHRSKC        ; Super Quick Pin
     387 00000b50 00000000!         .long   HIGHRSKC        ; Very Quick Pin
     388 00000b70 00000000!         .long   FASTVIC         ; Quick Pin
     389 00000b90 00000000!         .long   HIGHRSKC        ; Defeated Human
     390 00000bb0 00000000          .long   0               ; Not Yet Used
     391 00000bd0 00000000          .long   0               ; Not Yet Used
     392 00000bf0 00000000          .long   0               ; Not Yet Used
     393 00000c10 00000000          .long   0               ; Not Yet Used
     394 00000c30 00000000          .long   0               ; Not Yet Used
     395 00000c50 00000000          .long   0               ; Not Yet Used
     396 00000c70 00000000          .long   0               ; Not Yet Used
     397 00000c90 00000000          .long   0               ; Not Yet Used
     398 00000cb0 00000000          .long   0               ; Not Yet Used
     399 00000cd0 00000000!         .long   DOUBPERF        ; DBL Perfect
     400 00000cf0 00000000!         .long   TWOROUND        ; First Two round win
     401 00000d10 00000000          .long   0               ; Not Yet Used
     402 00000d30 00000000          .long   0               ; Not Yet Used
     403 00000d50 00000000!         .long   HIGHRSKC        ; Game Completed with < 5 buyins
     404 00000d70 00000000!         .long   FIVEWIN         ; 5 Winstreak
     405 00000d90 00000000          .long   0               ; Not Yet Used
     406 00000db0 00000000          .long   0               ; Not Yet Used
     407                    
     408                    
     409 00000dd0            SUBRP  zip_award_bar
     410 00000dd0     07aa          move    @player_award_state,a10,L
         00000de0 00009b10- 
     411 00000e00     494b          cmp     a10,a11
     412 00000e10     ca05          jrz     zaimzip_out
     413 00000e20                   SLEEPK  1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE    9

     414 00000e60     c0f6          jruc    zip_award_bar
     415                    
     416 00000e70           zaimzip_out
     417 00000e70     09c0          movi    ZIP_IN_SOUND,a0
         00000e80     00b6  
     418 00000e90     0d5f          calla   triple_sound
         00000ea0 00000000! 
     419                    
     420 00000ec0     0be9          subi    (BONUS_RECORD_SIZE*32),a9
         00000ed0     ff3f  
     421 00000ee0     102b          addk    1,a11
     422 00000ef0     b520          move    *a9((BONUS_RECORD_SIZE-1)*32),a0,W
         00000f00     00a0  
     423 00000f10     4d08          move    a8,a8
     424 00000f20     ca04          jrz     zaimp1_zip_out
     425 00000f30     09e1          movi    [-BONUS_BAR_VEL,0],a1
         00000f40 ffec0000  
     426 00000f60     c003          jruc    zaimzip_out_loop
     427 00000f70           zaimp1_zip_out
     428 00000f70     09e1          movi    [BONUS_BAR_VEL,0],a1
         00000f80 00140000  
     429 00000fa0           zaimzip_out_loop
     430 00000fa0     872a          move    *a9,a10,L                       ; Bar
     431 00000fb0     b74e          move    *a10(OXVAL),a14,L
         00000fc0     0080  
     432 00000fd0     402e          add     a1,a14
     433 00000fe0     b3ca          move    a14,*a10(OXVAL),L
         00000ff0     0080  
     434                    
     435 00001000     b72a          move    *a9(32),a10,L                   ; Text
         00001010     0020  
     436 00001020     b74e          move    *a10(OXVAL),a14,L
         00001030     0080  
     437 00001040     402e          add     a1,a14
     438 00001050     b3ca          move    a14,*a10(OXVAL),L
         00001060     0080  
     439                    
     440 00001070     b72a          move    *a9(64),a10,L                   ; 1st Icon
         00001080     0040  
     441 00001090     b74e          move    *a10(OXVAL),a14,L
         000010a0     0080  
     442 000010b0     402e          add     a1,a14
     443 000010c0     b3ca          move    a14,*a10(OXVAL),L
         000010d0     0080  
     444                    
     445 000010e0     b72a          move    *a9(96),a10,L                   ; 2nd Icon
         000010f0     0060  
     446 00001100     ca0d          jrz     zaimzout_done
     447 00001110     b74e          move    *a10(OXVAL),a14,L
         00001120     0080  
     448 00001130     402e          add     a1,a14
     449 00001140     b3ca          move    a14,*a10(OXVAL),L
         00001150     0080  
     450                    
     451 00001160     b72a          move    *a9(128),a10,L                  ; 3rd Icon
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   10

         00001170     0080  
     452 00001180     ca05          jrz     zaimzout_done
     453 00001190     b74e          move    *a10(OXVAL),a14,L
         000011a0     0080  
     454 000011b0     402e          add     a1,a14
     455 000011c0     b3ca          move    a14,*a10(OXVAL),L
         000011d0     0080  
     456 000011e0           zaimzout_done
     457 000011e0                   PUSHP   a0,a1
     458 00001200                   SLEEPK  1
     459 00001240                   PULLP   a0,a1
     460 00001260     872a          move    *a9,a10,L
     461 00001270     b54a          move    *a10(OXPOS),a10,W
         00001280     0090  
     462 00001290     4940          cmp     a10,a0
     463 000012a0     cbcf          jrnz    zaimzip_out_loop
     464                    
     465                    
     466 000012b0     b52a          move    *a9(((BONUS_RECORD_SIZE-1)*32)+16),a10,W
         000012c0     00b0  
     467 000012d0     cb68          jrnz    zaimno_zip_in
     468                    
     469 000012e0           zaimwait_2nd_state      
     470 000012e0     07aa          move    @player_award_state,a10,L
         000012f0 00009b10- 
     471 00001310     494b          cmp     a10,a11
     472 00001320     c605          jrle    zaimzip_in
     473 00001330                   SLEEPK  1
     474 00001370     c0f6          jruc    zaimwait_2nd_state
     475                    
     476 00001380           zaimzip_in
     477 00001380                   SLEEPK  3
     478 000013c0     4d08          move    a8,a8
     479 000013d0     ca06          jrz     zaimp1_zip_in
     480 000013e0     09e1          movi    [BONUS_BAR_VEL,0],a1
         000013f0 00140000  
     481 00001410     09c0          movi    399,a0
         00001420     018f  
     482 00001430     c004          jruc    zaimzip_in_loop
     483 00001440           zaimp1_zip_in
     484 00001440     09e1          movi    [-BONUS_BAR_VEL,0],a1
         00001450 ffec0000  
     485 00001470     5600          clr     a0
     486 00001480           zaimzip_in_loop
     487 00001480     872a          move    *a9,a10,L                       ; Bar
     488 00001490     b74e          move    *a10(OXVAL),a14,L
         000014a0     0080  
     489 000014b0     402e          add     a1,a14
     490 000014c0     b3ca          move    a14,*a10(OXVAL),L
         000014d0     0080  
     491                    
     492 000014e0     b72a          move    *a9(32),a10,L                   ; Text
         000014f0     0020  
     493 00001500     b74e          move    *a10(OXVAL),a14,L
         00001510     0080  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   11

     494 00001520     402e          add     a1,a14
     495 00001530     b3ca          move    a14,*a10(OXVAL),L
         00001540     0080  
     496                    
     497 00001550     b72a          move    *a9(64),a10,L                   ; 1st Icon
         00001560     0040  
     498 00001570     b74e          move    *a10(OXVAL),a14,L
         00001580     0080  
     499 00001590     402e          add     a1,a14
     500 000015a0     b3ca          move    a14,*a10(OXVAL),L
         000015b0     0080  
     501                    
     502 000015c0     b72a          move    *a9(96),a10,L                   ; 2nd Icon
         000015d0     0060  
     503 000015e0     ca0d          jrz     zaimzin_done
     504 000015f0     b74e          move    *a10(OXVAL),a14,L
         00001600     0080  
     505 00001610     402e          add     a1,a14
     506 00001620     b3ca          move    a14,*a10(OXVAL),L
         00001630     0080  
     507                    
     508 00001640     b72a          move    *a9(128),a10,L                  ; 3rd Icon
         00001650     0080  
     509 00001660     ca05          jrz     zaimzin_done
     510 00001670     b74e          move    *a10(OXVAL),a14,L
         00001680     0080  
     511 00001690     402e          add     a1,a14
     512 000016a0     b3ca          move    a14,*a10(OXVAL),L
         000016b0     0080  
     513 000016c0           zaimzin_done
     514 000016c0                   PUSHP   a0,a1
     515 000016e0                   SLEEPK  1
     516 00001720                   PULLP   a0,a1
     517 00001740     872a          move    *a9,a10,L
     518 00001750     b54a          move    *a10(OXPOS),a10,W
         00001760     0090  
     519 00001770     4940          cmp     a10,a0
     520 00001780     cbcf          jrnz    zaimzip_in_loop
     521                    
     522 00001790           zaimzip_exit
     523 00001790     8720          move    *a9,a0,L                ; Bar
     524 000017a0     0d5f          calla   DELOBJ
         000017b0 00000000! 
     525 000017d0     b720          move    *a9(32),a0,L            ; Text
         000017e0     0020  
     526 000017f0     0d5f          calla   DELOBJ
         00001800 00000000! 
     527 00001820     b720          move    *a9(64),a0,L            ; 1st Icon
         00001830     0040  
     528 00001840     0d5f          calla   DELOBJ
         00001850 00000000! 
     529 00001870     b720          move    *a9(96),a0,L            ; 2nd Icon
         00001880     0060  
     530 00001890     ca09          jrz     zaimzip_die
     531 000018a0     0d5f          calla   DELOBJ
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   12

         000018b0 00000000! 
     532 000018d0     b720          move    *a9(128),a0,L           ; 3rd Icon
         000018e0     0080  
     533 000018f0     ca03          jrz     zaimzip_die
     534 00001900     0d5f          calla   DELOBJ
         00001910 00000000! 
     535 00001930           zaimzip_die
     536 00001930                   DIE
     537                    
     538 00001960           zaimno_zip_in
     539 00001960     07aa          move    @award_ok_to_die,a10,L
         00001970 00000800- 
     540 00001990     0b0a          addi    1,a10
         000019a0     0001  
     541 000019b0     078a          move    a10,@award_ok_to_die,L
         000019c0 00000800- 
     542 000019e0           zaimno_zip_in_wait
     543 000019e0     07aa          move    @award_ok_to_die,a10,L
         000019f0 00000800- 
     544 00001a10     0b4a          cmpi    4,a10
         00001a20     fffb  
     545 00001a30     cad5          jrz     zaimzip_exit
     546 00001a40                   SLEEPK  1
     547 00001a80     c0f5          jruc    zaimno_zip_in_wait
     548                    
     549                    
     550 00001a90            SUBRP  flash_bar_icons
     551 00001a90                   PUSHP   a8,a9
     552 00001ab0     4d2a          move    a9,a10
     553 00001ac0     0b0a          addi    64,a10
         00001ad0     0040  
     554 00001ae0     09c9          movi    0101h,a9
         00001af0     0101  
     555 00001b00           zaimiflash_loop
     556 00001b00     9748          move    *a10+,a8,L
     557 00001b10     ca09          jrz     zaimfbi_exit
     558 00001b20                   CREATE  AWARD_PID,FLASHME
     559 00001ba0     c0f5          jruc    zaimiflash_loop
     560 00001bb0           zaimfbi_exit
     561 00001bb0                   SLEEPK  10
     562 00001bf0                   PULLP   a8,a9
     563 00001c10                   RETP
     564                    
     565                    
     566 00001c40            SUBRP  get_num_awards:
     567 00001c40                   PUSH    a6,a7,a8,a9,a11
     568 00001c60     5708          clr     a8
     569 00001c70     09e6          movi    award_text,a6
         00001c80 000009d0' 
     570 00001ca0     09c9          movi    NUM_AWARDS,a9
         00001cb0     0020  
     571 00001cc0           zaimgna_loop
     572 00001cc0     8f4b          movb    *a10,a11
     573 00001cd0     ca0d          jrz     zaimno_inc
     574 00001ce0     9367          move    a11,*a7+,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   13

     575 00001cf0     0b4b          cmpi    5,a11
         00001d00     fffa  
     576 00001d10     c502          jrge    zaimgna_big_icon
     577 00001d20     576b          clr     a11
     578 00001d30     c002          jruc    zaimgna_get_text_obj
     579 00001d40           zaimgna_big_icon
     580 00001d40     09cb          movi    1,a11
         00001d50     0001  
     581 00001d60           zaimgna_get_text_obj
     582 00001d60     9367          move    a11,*a7+,L
     583 00001d70     8ac7          move    *a6,*a7,L
     584 00001d80     0b07          addi    32,a7
         00001d90     0020  
     585 00001da0     1028          addk    1,a8
     586 00001db0           zaimno_inc
     587 00001db0     0b06          addi    32,a6
         00001dc0     0020  
     588 00001dd0     110a          addk    8,a10
     589 00001de0     3e69          dsjs    a9,zaimgna_loop
     590 00001df0     4d0a          move    a8,a10
     591 00001e00     0b48          cmpi    6,a8
         00001e10     fff9  
     592 00001e20     c601          jrle    zaimno_limit
     593 00001e30     18ca          movk    6,a10
     594 00001e40           zaimno_limit
     595 00001e40                   PULL    a6,a7,a8,a9,a11
     596 00001e60     0960          rets
     597                    
     598                    
     599 00001e70            SUBRP  adjust_perfects
     600 00001e70                   PUSH    a9,a10
     601 00001e90     09e9          movi    p1mtch_award,a9
         00001ea0 00000200- 
     602 00001ec0     0b09          addi    (PERFECT_AWD*8),a9
         00001ed0     0040  
     603 00001ee0     8f2a          movb    *a9,a10                         ; How many perfects for match
     604 00001ef0     0b4a          cmpi    (PERFECT_ICONS*2),a10           ; Is it 2?
         00001f00     fffb  
     605 00001f10     cb0a          jrnz    vujhnop1_dbl_perfect            ; br = nope
     606 00001f20     574a          clr     a10                             ; Reset match perfects
     607 00001f30     8d49          movb    a10,*a9
     608 00001f40     0be9          subi    (PERFECT_AWD*8),a9              ; Add a double perfect
         00001f50     ffbf  
     609 00001f60     0b09          addi    (DBL_PERFECT_AWD*8),a9
         00001f70     00c0  
     610 00001f80     8f2a          movb    *a9,a10
     611 00001f90     10aa          addk    DBL_PERFECT_ICONS,a10
     612 00001fa0     8d49          movb    a10,*a9
     613 00001fb0     c012          jruc    vujhap_done
     614 00001fc0           vujhnop1_dbl_perfect
     615 00001fc0     09e9          movi    p2mtch_award,a9
         00001fd0 00000300- 
     616 00001ff0     0b09          addi    (PERFECT_AWD*8),a9
         00002000     0040  
     617 00002010     8f2a          movb    *a9,a10
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   14

     618 00002020     0b4a          cmpi    (PERFECT_ICONS*2),a10
         00002030     fffb  
     619 00002040     cb09          jrnz    vujhap_done
     620 00002050     574a          clr     a10
     621 00002060     8d49          movb    a10,*a9
     622 00002070     0be9          subi    (PERFECT_AWD*8),a9
         00002080     ffbf  
     623 00002090     0b09          addi    (DBL_PERFECT_AWD*8),a9
         000020a0     00c0  
     624 000020b0     8f2a          movb    *a9,a10
     625 000020c0     10aa          addk    DBL_PERFECT_ICONS,a10
     626 000020d0     8d49          movb    a10,*a9
     627 000020e0           vujhap_done
     628 000020e0           vujhadjust_blocks
     629 000020e0     09e9          movi    p1mtch_award,a9
         000020f0 00000200- 
     630 00002110     0b09          addi    (BLOCKS_AWD*8),a9
         00002120     0018  
     631 00002130     8f2a          movb    *a9,a10                         ; How many block awards for match
     632 00002140     0b4a          cmpi    (BLOCK_ICONS*2),a10             ; Is it >= 2?
         00002150     fffb  
     633 00002160     c402          jrlt    vujhnop1_dbl_block                      ; br = nope
     634 00002170     18aa          movk    DBL_BLOCK_ICONS,a10             ; Give bigger award for multiround no blocking
     635 00002180     8d49          movb    a10,*a9
     636 00002190           vujhnop1_dbl_block
     637 00002190     09e9          movi    p2mtch_award,a9
         000021a0 00000300- 
     638 000021c0     0b09          addi    (BLOCKS_AWD*8),a9
         000021d0     0018  
     639 000021e0     8f2a          movb    *a9,a10
     640 000021f0     0b4a          cmpi    (BLOCK_ICONS*2),a10
         00002200     fffb  
     641 00002210     c402          jrlt    vujhab_done
     642 00002220     18aa          movk    DBL_BLOCK_ICONS,a10
     643 00002230     8d49          movb    a10,*a9
     644 00002240           vujhab_done
     645 00002240                   PULL    a9,a10
     646 00002260     0960          rets
     647                    
     648 00002270            SUBRP  adjust_text_position
     649 00002270                   PUSH    a9
     650 00002280     0be9          subi    ((BONUS_RECORD_SIZE-3)*32),a9   ;Point at Icon 2 object
         00002290     ff9f  
     651 000022a0           vujhadj_t_loop
     652 000022a0     8720          move    *a9,a0,L                ;Object exist ?
     653 000022b0     ca0e          jrz     vujhatp_exit            ;br = no
     654 000022c0     b60e          move    *a0(OIMG),a14,L         ;Get image pointer
         000022d0     0170  
     655 000022e0     85ce          move    *a14,a14,W              ;Get image width
     656 000022f0     4d08          move    a8,a8                   ;Player 1?
     657 00002300     cb01          jrnz    vujhdo_tadjust          ;br = no
     658 00002310     03ae          neg     a14
     659 00002320           vujhdo_tadjust
     660 00002320     b520          move    *a9(OXPOS),a0,W         ;Get current XPos
         00002330     0090  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   15

     661 00002340     41c0          add     a14,a0                  ;Adjust it
     662 00002350     b009          move    a0,*a9(OXPOS),W         ;Write it back
         00002360     0090  
     663 00002370     0b09          addi    32,a9
         00002380     0020  
     664 00002390     c0f0          jruc    vujhadj_t_loop
     665 000023a0           vujhatp_exit
     666 000023a0                   PULL    a9
     667 000023b0     0960          rets
     668                    
     669                    
     670 000023c0            SUBRP  create_player_awards
     671                    
     672 000023c0     09e9          movi    bar_obj_ptr,a9
         000023d0 00000af0- 
     673 000023f0     09ea          movi    p1mtch_award,a10
         00002400 00000200- 
     674 00002420     09e7          movi    picon,a7
         00002430 00006b10- 
     675 00002450     4d08          move    a8,a8                                           ; player 1 ?
     676 00002460     ca07          jrz     vujhdpa_p1                                              ; br = yes
     677 00002470     0b09          addi    (MAX_BONUS_BARS*BONUS_RECORD_SIZE*32),a9
         00002480     3000  
     678 00002490     0b07          addi    (MAX_BONUS_BARS*3*32),a7
         000024a0     1800  
     679 000024b0     09ea          movi    p2mtch_award,a10
         000024c0 00000300- 
     680 000024e0           vujhdpa_p1
     681 000024e0     0d3f          callr   get_num_awards                          ; Get the number of awards
         000024f0     ff74  
     682 00002500     4d4a          move    a10,a10
     683 00002510     ca00          jrz     vujhno_awards
         00002520     00aa  
     684                    
     685 00002530     4ce0          move    a7,a0
     686 00002540                   PUSH    a0
     687 00002550     182b          movk    1,a11
     688 00002560     09e1          movi    [BONUS_BAR_YPOS,0],a1                   ;Start Y position
         00002570 00e60000  
     689 00002590     09c3          movi    1800h,a3                                ;Start Z position
         000025a0     1800  
     690 000025b0     09c5          movi    TYPVELALWAYS,a5                         ;Object ID
         000025c0     0e00  
     691 000025d0     56c6          clr     a6
     692 000025e0     56e7          clr     a7                                      ;Y velocity
     693                    
     694 000025f0           vujhdo_next_award_bar
     695 000025f0     09e2          movi    BONUSBAR,a2                             ;Image Pointer
         00002600 00000000! 
     696 00002620     09e0          movi    [399,0],a0                              ;Start X position
         00002630 018f0000  
     697 00002650     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4                ;DMA flags
         00002660 0000a102  
     698 00002680     09f0          movi    DPLT_R_P,b0                             ;Make em BLUE
         00002690 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   16

     699 000026b0     4d08          move    a8,a8                                   ;Player 1?
     700 000026c0     cb07          jrnz    vujhdo_bar                                      ;br = no
     701 000026d0     5600          clr     a0
     702 000026e0     09e4          movi    DMAWNZ|M_3D|M_SCRNREL|M_FLIPH,a4        ;DMA flags
         000026f0 0000a112  
     703 00002710     09f0          movi    DPLT_B_P,b0                             ;Make em BLUE
         00002720 00000000! 
     704 00002740           vujhdo_bar
     705 00002740     098f          mmtm    sp,a1,a8
         00002750     4080  
     706 00002760     0d5f          calla   BEGINOBJP                               ;Bonus Bar
         00002770 00000000! 
     707 00002790     9309          move    a8,*a9+,L
     708 000027a0     09af          mmfm    sp,a1,a8
         000027b0     0102  
     709                    
     710 000027c0     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4                ;DMA flags
         000027d0 0000a102  
     711 000027f0                   PULL    a0
     712 00002800     b602          move    *a0(64),a2,L
         00002810     0040  
     713 00002820                   PUSH    a0
     714 00002830     09e0          movi    [399+BONUS_RTEXT_START_XPOS,0],a0
         00002840 01f40000  
     715 00002860     4d08          move    a8,a8                                   ;Player 1?
     716 00002870     cb03          jrnz    vujhdo_text                             ;br = no
     717 00002880     09e0          movi    [BONUS_LTEXT_START_XPOS,0],a0
         00002890 ff9b0000  
     718 000028b0           vujhdo_text
     719 000028b0     0b03          addi    10h,a3
         000028c0     0010  
     720 000028d0     098f          mmtm    sp,a1,a8
         000028e0     4080  
     721 000028f0     0d5f          calla   BEGINOBJ                                ;Bonus Bar
         00002900 00000000! 
     722 00002920     9309          move    a8,*a9+,L
     723 00002930     09af          mmfm    sp,a1,a8
         00002940     0102  
     724                    
     725 00002950                   PULL    a0
     726 00002960     0d3f          callr   get_bbicons
         00002970     01b2  
     727 00002980                   PUSH    a0
     728 00002990     09e0          movi    [399-BONUS_ICON1_START_XPOS,0],a0       ;Start X position
         000029a0 01a50000  
     729 000029c0     4d08          move    a8,a8                                   ;Player 1?
     730 000029d0     cb03          jrnz    vujhdo_icon_1                           ;br = no
     731 000029e0     09e0          movi    [BONUS_ICON1_START_XPOS,0],a0           ;Start X position
         000029f0 ffea0000  
     732 00002a10           vujhdo_icon_1
     733 00002a10     0b03          addi    10h,a3
         00002a20     0010  
     734 00002a30     098f          mmtm    sp,a1,a8
         00002a40     4080  
     735 00002a50     8722          move    *a9,a2,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   17

     736 00002a60     0d5f          calla   BEGINOBJ                                ;Icon 1
         00002a70 00000000! 
     737 00002a90     9309          move    a8,*a9+,L
     738 00002aa0     09af          mmfm    sp,a1,a8
         00002ab0     0102  
     739                    
     740 00002ac0     8722          move    *a9,a2,L
     741 00002ad0     ca13          jrz     vujhno_2nd_icon
     742 00002ae0     09e0          movi    [399-BONUS_ICON2_START_XPOS,0],a0       ;Start X position
         00002af0 01b40000  
     743 00002b10     4d08          move    a8,a8                                   ;Player 1?
     744 00002b20     cb03          jrnz    vujhdo_icon_2                           ;br = no
     745 00002b30     09e0          movi    [BONUS_ICON2_START_XPOS,0],a0           ;Start X position
         00002b40 ffdb0000  
     746 00002b60           vujhdo_icon_2
     747 00002b60     0b03          addi    10h,a3
         00002b70     0010  
     748 00002b80     098f          mmtm    sp,a1,a8
         00002b90     4080  
     749 00002ba0     0d5f          calla   BEGINOBJ                                ;Icon 2
         00002bb0 00000000! 
     750 00002bd0     9309          move    a8,*a9+,L
     751 00002be0     09af          mmfm    sp,a1,a8
         00002bf0     0102  
     752 00002c00     c003          jruc    vujhchk_3rd_icon
     753 00002c10           vujhno_2nd_icon
     754 00002c10     5642          clr     a2
     755 00002c20     9249          move    a2,*a9+,L
     756 00002c30     c015          jruc    vujhno_more_icons
     757 00002c40           vujhchk_3rd_icon
     758                    
     759 00002c40     8722          move    *a9,a2,L
     760 00002c50     ca13          jrz     vujhno_more_icons
     761 00002c60     09e0          movi    [399-BONUS_ICON3_START_XPOS,0],a0       ;Start X position
         00002c70 01c30000  
     762 00002c90     4d08          move    a8,a8                                   ;Player 1?
     763 00002ca0     cb03          jrnz    vujhdo_icon_3                           ;br = no
     764 00002cb0     09e0          movi    [BONUS_ICON3_START_XPOS,0],a0           ;Start X position
         00002cc0 ffcc0000  
     765 00002ce0           vujhdo_icon_3
     766 00002ce0     0b03          addi    10h,a3
         00002cf0     0010  
     767 00002d00     098f          mmtm    sp,a1,a8
         00002d10     4080  
     768 00002d20     0d5f          calla   BEGINOBJ                                ;Icon 3
         00002d30 00000000! 
     769 00002d50     9309          move    a8,*a9+,L
     770 00002d60     09af          mmfm    sp,a1,a8
         00002d70     0102  
     771 00002d80     c002          jruc    vujhicon_3_done
     772                    
     773 00002d90           vujhno_more_icons
     774 00002d90     5642          clr     a2
     775 00002da0     9249          move    a2,*a9+,L
     776 00002db0           vujhicon_3_done
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   18

     777 00002db0     09c0          movi    (399-BONUS_BAR_END_XPOS),a0
         00002dc0     00db  
     778 00002dd0     4d08          move    a8,a8                                   ;Player 1?
     779 00002de0     cb02          jrnz    vujhdo_td_pos                           ;br = no
     780 00002df0     09c0          movi    BONUS_BAR_END_XPOS,a0                   ;End for check award
         00002e00     00b4  
     781 00002e10           vujhdo_td_pos
     782 00002e10     9009          move    a0,*a9+,W                               ;Store Ending position
     783 00002e20     5600          clr     a0
     784 00002e30     9009          move    a0,*a9+,W                               ;Store NOT last
     785                    
     786 00002e40     0d3f          callr   adjust_text_position                    ;Adjust text position based on number of icons
         00002e50     ff41  
     787                    
     788 00002e60           vujhcreate_bar_proc
     789 00002e60     098f          mmtm    sp,a1,a7
         00002e70     4100  
     790 00002e80                   CREATE  AWARD_PID,zip_award_bar                 ; Process to control this bar
     791 00002f00     09af          mmfm    sp,a1,a7
         00002f10     0082  
     792                    
     793 00002f20     102b          addk    1,a11
     794 00002f30                   PULL    a0
     795 00002f40     0b00          addi    96,a0
         00002f50     0060  
     796 00002f60                   PUSH    a0
     797 00002f70     0d8a          dsj     a10,vujhdo_next_award_bar
         00002f80     ff66  
     798                    
     799 00002f90     1820          movk    1,a0
     800 00002fa0     a009          move    a0,-*a9,W                               ;Store last
     801 00002fb0                   PULL    a0
     802 00002fc0     0960          rets
     803 00002fd0           vujhno_awards
     804 00002fd0     07a9          move    @award_ok_to_die,a9,L
         00002fe0 00000800- 
     805 00003000     0b09          addi    1,a9
         00003010     0001  
     806 00003020     0789          move    a9,@award_ok_to_die,L
         00003030 00000800- 
     807 00003050     0960          rets
     808                    
     809                    
     810 00003060            SUBRP  total_icons
     811 00003060     4d08          move    a8,a8
     812 00003070     ca07          jrz     vujhtot_p1_icons
     813 00003080     09e9          movi    p2mtch_award,a9
         00003090 00000300- 
     814 000030b0     09ea          movi    p2icon_total,a10
         000030c0 00009b50- 
     815 000030e0     c006          jruc    vujhtot_awards
     816 000030f0           vujhtot_p1_icons
     817 000030f0     09e9          movi    p1mtch_award,a9
         00003100 00000200- 
     818 00003120     09ea          movi    p1icon_total,a10
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   19

         00003130 00009b30- 
     819 00003150           vujhtot_awards
     820 00003150     09cb          movi    NUM_AWARDS,a11
         00003160     0020  
     821 00003170     8748          move    *a10,a8,L
     822 00003180           vujhtot_awards_loop
     823 00003180     8f2e          movb    *a9,a14
     824 00003190     270e          sll     24,a14
     825 000031a0     2d0e          srl     24,a14
     826 000031b0     41c8          add     a14,a8
     827 000031c0     1109          addk    8,a9
     828 000031d0     3ccb          dsjs    a11,vujhtot_awards_loop
     829 000031e0     830a          move    a8,*a10,L
     830 000031f0     0960          rets
     831                    
     832                    
     833                    
     834 00003200            SUBR   clear_icon_total
     835 00003200     4d08          move    a8,a8
     836 00003210     ca05          jrz     vujhclr_p1_icons
     837 00003220     5708          clr     a8
     838 00003230     0788          move    a8,@p2icon_total,L
         00003240 00009b50- 
     839 00003260     0960          rets
     840 00003270           vujhclr_p1_icons
     841 00003270     0788          move    a8,@p1icon_total,L
         00003280 00009b30- 
     842 000032a0     0960          rets
     843                            
     844                    
     845 000032b0            SUBR   create_end_rnd_awards
     846 000032b0     05ae          move    @royal_rumble,a14
         000032c0 00000000! 
     847 000032e0     ca03          jrz     rmjqcera_ok
     848 000032f0                   DIE
     849 00003320           rmjqcera_ok
     850                    
     851 00003320     0d3f          callr   adjust_perfects
         00003330     feb3  
     852                    
     853 00003340     09c8          movi    (MAX_BONUS_BARS*BONUS_RECORD_SIZE*2),a8
         00003350     0300  
     854 00003360     09e9          movi    bar_obj_ptr,a9
         00003370 00000af0- 
     855 00003390     576b          clr     a11
     856 000033a0           rmjqclr_array_loop
     857 000033a0     9369          move    a11,*a9+,L
     858 000033b0     3c48          dsjs    a8,rmjqclr_array_loop
     859                    
     860 000033c0     5708          clr     a8                              ; Clear the state machine
     861 000033d0     0788          move    a8,@player_award_state,L
         000033e0 00009b10- 
     862                    
     863 00003400     b548          move    *a10(PLYR_SIDE),a8
         00003410     05b0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   20

     864                    
     865 00003420     0d3f          callr   create_player_awards            ; Create awards for player 1
         00003430     fef8  
     866                    
     867 00003440     1828          movk    1,a8                            ; Start the state machine
     868 00003450     0788          move    a8,@player_award_state,L
         00003460 00009b10- 
     869                    
     870 00003480           rmjqstate_loop
     871 00003480     09c9          movi    ((TSEC*3)/4),a9                 ; How long each bar is diplayed
         00003490     0027  
     872 000034a0           rmjqstate_loop1
     873 000034a0                   SLEEPK  1
     874 000034e0     0d5f          calla   get_all_buttons_cur
         000034f0 00000000! 
     875 00003510     cb24          jrnz    rmjqquick_states
     876 00003520     38a9          dsjs    a9,rmjqno_state_advance         ; Is it time to advance the state machine?
     877 00003530     1028          addk    1,a8                            ; Yes
     878 00003540     0788          move    a8,@player_award_state,L
         00003550 00009b10- 
     879 00003570     c0f0          jruc    rmjqstate_loop                  ; Reset the Sleeper time
     880 00003580           rmjqno_state_advance
     881 00003580     07aa          move    @award_ok_to_die,a10,L          ; Is it time to exit ?
         00003590 00000800- 
     882 000035b0     0b4a          cmpi    1,a10
         000035c0     fffe  
     883 000035d0     cbec          jrnz    rmjqstate_loop1                 ; br = no
     884                    
     885 000035e0     5708          clr     a8
     886 000035f0     0d3f          callr   total_icons
         00003600     ffa5  
     887 00003610     1828          movk    1,a8
     888 00003620     0d3f          callr   total_icons
         00003630     ffa2  
     889                    
     890 00003640     09c8          movi    TSEC/2,a8
         00003650     001a  
     891 00003660           rmjqwait
     892 00003660                   SLEEPK  1
     893 000036a0     0d5f          calla   get_all_buttons_cur
         000036b0 00000000! 
     894 000036d0     cb01          jrnz    rmjqwait_abort
     895 000036e0     3d28          dsjs    a8,rmjqwait
     896 000036f0           rmjqwait_abort
     897 000036f0     1868          movk    3,a8
     898 00003700     0788          move    a8,@award_ok_to_die,L
         00003710 00000800- 
     899                    
     900 00003730                   DIE
     901                    
     902 00003760           rmjqquick_states
     903 00003760                   SLEEPK  5
     904 000037a0     1028          addk    1,a8
     905 000037b0     0788          move    a8,@player_award_state,L
         000037c0 00009b10- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   21

     906 000037e0     c0d9          jruc    rmjqno_state_advance
     907                    
     908                    
     909 000037f0             SUBR  is_it_a_really_quick_win
     910 000037f0                   PUSH    a0,a1,a2
     911 00003810     07a0          move    @match_time,a0,L
         00003820 00000000! 
     912 00003840     4c02          move    a0,a2
     913 00003850     0b80          andi    0fh,a0
         00003860 fffffff0  
     914 00003880     1941          movk    10,a1
     915 00003890     5e01          mpyu    a0,a1
     916 000038a0     2e02          srl     16,a2
     917 000038b0     4041          add     a2,a1
     918 000038c0     0b41          cmpi    69,a1
         000038d0     ffba  
     919 000038e0     c721          jrgt    roulquick
     920 000038f0     c02a          jruc    rouliiarqw_done
     921                    
     922 00003900     0b41          cmpi    79,a1
         00003910     ffb0  
     923 00003920     c707          jrgt    roulsuper_quick
     924 00003930     0b41          cmpi    73,a1
         00003940     ffb6  
     925 00003950     c70f          jrgt    roulvery_quick
     926 00003960     0b41          cmpi    64,a1
         00003970     ffbf  
     927 00003980     c717          jrgt    roulquick
     928 00003990     c020          jruc    rouliiarqw_done
     929 000039a0           roulsuper_quick
     930 000039a0                   RND_AWARD       a10,SUPER_QUICK_AWD
     931 00003a40     c015          jruc    rouliiarqw_done
     932 00003a50           roulvery_quick
     933 00003a50                   RND_AWARD       a10,VERY_QUICK_AWD
     934 00003af0     c00a          jruc    rouliiarqw_done
     935 00003b00           roulquick
     936 00003b00                   RND_AWARD       a10,QUICK_AWD
     937 00003ba0           rouliiarqw_done
     938 00003ba0                   PULL    a0,a1,a2
     939 00003bc0     0960          rets
     940                    
     941                    
     942 00003bd0             SUBR  give_award_if_opponent_is_human
     943 00003bd0                   PUSH    a9
     944 00003be0     af49          movb    *a10(PLYR_SIDE),a9
         00003bf0     05b0  
     945 00003c00     ca07          jrz     zfhqi_am_player1
     946 00003c10     05a9          move    @PSTATUS2,a9
         00003c20 00000000! 
     947 00003c40     0b89          andi    01b,a9
         00003c50 fffffffe  
     948 00003c70     c006          jruc    zfhqgaioih_award
     949 00003c80           zfhqi_am_player1
     950 00003c80     05a9          move    @PSTATUS2,a9
         00003c90 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   22

     951 00003cb0     0b89          andi    10b,a9
         00003cc0 fffffffd  
     952 00003ce0           zfhqgaioih_award
     953 00003ce0     ca0a          jrz     zfhqgaioih_done
     954 00003cf0                   RND_AWARD a10,DFT_HUMAN_AWD
     955 00003d90           zfhqgaioih_done
     956 00003d90                   PULL    a9
     957 00003da0     0960          rets
     958 00003db0     0960          rets
     959                    
     960                    
     961                    
     962 00003dc0             SUBR  arm_comeback_award
     963 00003dc0     0b4a          cmpi    2,a10
         00003dd0     fffd  
     964 00003de0     c401          jrlt    ldtqok_to_arm
     965 00003df0     0960          rets
     966 00003e00           ldtqok_to_arm
     967                    
     968                            ;figure out if all opponents are at 80%+ strength.
     969 00003e00     09e8          movi    process_ptrs,a8
         00003e10 00000000! 
     970 00003e30     09c9          movi    NUM_WRES,a9
         00003e40     0007  
     971 00003e50     9700  ldtqlp  move    *a8+,a0,L
     972 00003e60     ca0c          jrz     ldtqnxt         ;skip inactive
     973                    
     974 00003e70     b40e          move    *a0(PLYR_SIDE),a14
         00003e80     05b0  
     975 00003e90     49ca          cmp     a14,a10         ;humans only, so PLYRNUM == PLYR_SIDE
     976 00003ea0     ca08          jreq    ldtqnxt         ;skip teammates
     977                    
     978 00003eb0     b401          move    *a0(PLYRNUM),a1
         00003ec0     0580  
     979 00003ed0     0d5f          calla   get_health
         00003ee0 00000000! 
     980 00003f00     0b40          cmpi    (LIFE_MAX*80)/100,a0
         00003f10     ff7d  
     981 00003f20     c40b          jrlt    ldtqrets                ;abort if any enemy is under 80% strength
     982                        
     983 00003f30     3de9  ldtqnxt dsj     a9,ldtqlp
     984                    
     985 00003f40                   PUSH    a0,a10
     986 00003f60                   X32     a10
     987 00003f70     0b2a          addi    pcomeback,a10
         00003f80 00000820- 
     988 00003fa0     1820          movk    1,a0
     989 00003fb0     820a          move    a0,*a10,L
     990 00003fc0                   PULL    a0,a10
     991 00003fe0     0960  ldtqrets        rets
     992                    
     993                    
     994 00003ff0             SUBR  check_for_award_for_big_comeback
     995 00003ff0                   PUSH    a9
     996 00004000     af49          movb    *a10(PLYR_SIDE),a9
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   23

         00004010     05b0  
     997 00004020     ca05          jrz     sqbti_am_player1
     998 00004030     07a9          move    @(pcomeback+32),a9,L
         00004040 00000840- 
     999 00004060     ca0f          jrz     sqbtgfbc_done
    1000 00004070     c004          jruc    sqbtgfbc_award
    1001 00004080           sqbti_am_player1
    1002 00004080     07a9          move    @pcomeback,a9,L
         00004090 00000820- 
    1003 000040b0     ca0a          jrz     sqbtgfbc_done
    1004 000040c0           sqbtgfbc_award
    1005 000040c0                   RND_AWARD a10,COMEBACK_AWD
    1006 00004160           sqbtgfbc_done
    1007 00004160                   PULL    a9
    1008 00004170     0960          rets
    1009                    
    1010                    
    1011 00004180             SUBR  arm_winstreak_award
    1012 00004180     4c21          move    a1,a1
    1013 00004190     ca0f          jrz     sldoawa_exit
    1014 000041a0                   PUSHP   a0,a1
    1015 000041c0                   X32     a2
    1016 000041d0     0b22          addi    pwsarm,a2
         000041e0 00000a70- 
    1017 00004200     18a0          movk    5,a0
    1018 00004210     6e01          modu    a0,a1
    1019 00004220     cb02          jrnz    sldoawa_disarm
    1020 00004230     1820          movk    1,a0
    1021 00004240     c001          jruc    sldoawa_ok
    1022 00004250           sldoawa_disarm
    1023 00004250     5600          clr     a0
    1024 00004260           sldoawa_ok
    1025 00004260     8202          move    a0,*a2,L
    1026 00004270                   PULLP   a0,a1
    1027 00004290           sldoawa_exit
    1028 00004290     0960          rets
    1029                    
    1030                    
    1031 000042a0             SUBR  check_for_award_for_winstreak
    1032 000042a0                   PUSH    a0,a9,a10
    1033 000042c0     4d40          move    a10,a0
    1034 000042d0     af49          movb    *a10(PLYR_SIDE),a9
         000042e0     05b0  
    1035 000042f0     ca06          jrz     xsbqi_am_player1
    1036 00004300     09ea          movi    (pwsarm+32),a10
         00004310 00000a90- 
    1037 00004330     8749          move    *a10,a9,L
    1038 00004340     ca12          jrz     xsbqcfafw_done
    1039 00004350     c005          jruc    xsbqcfafw_award
    1040 00004360           xsbqi_am_player1
    1041 00004360     09ea          movi    pwsarm,a10
         00004370 00000a70- 
    1042 00004390     8749          move    *a10,a9,L
    1043 000043a0     ca0c          jrz     xsbqcfafw_done
    1044 000043b0           xsbqcfafw_award
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   24

    1045 000043b0                   MATCH_AWARD a0,FIVE_WINS_AWD
    1046 00004450     5729          clr     a9
    1047 00004460     832a          move    a9,*a10,L
    1048 00004470           xsbqcfafw_done
    1049 00004470                   PULL    a0,a9,a10
    1050 00004490     0960          rets
    1051                    
    1052 000044a0            SUBR   get_bbicons
    1053 000044a0                   PUSH    a0,a1,a9
    1054 000044c0     8600          move    *a0,a0,L        ; Get number of Icons
    1055 000044d0     0b40          cmpi    5,a0            ; Num < 5?
         000044e0     fffa  
    1056 000044f0     c408          jrlt    xsbqsmall_icons ; br = yes
    1057 00004500     0b40          cmpi    10,a0           ; Num < 10?
         00004510     fff5  
    1058 00004520     c40f          jrlt    xsbqs_and_l_icons       ; br = yes
    1059 00004530     09e0          movi    BICON_10,a0
         00004540 00000000! 
    1060 00004560     9209          move    a0,*a9+,L       ; Store the image pointer
    1061 00004570     c01d          jruc    xsbqgbb_done
    1062 00004580           xsbqsmall_icons
    1063 00004580     09e1          movi    BICON_1,a1
         00004590 00000000! 
    1064 000045b0     0b40          cmpi    4,a0
         000045c0     fffb  
    1065 000045d0     c401          jrlt    xsbqsmall_loop
    1066                            .if DEBUG
    1067                            LOCKUP
    1068                            .endif
    1069 000045e0     1420          subk    1,a0
    1070 000045f0           xsbqsmall_loop
    1071 000045f0     9229          move    a1,*a9+,L       ; Store Icon image
    1072 00004600     3c40          dsjs    a0,xsbqsmall_loop
    1073 00004610     c013          jruc    xsbqgbb_done
    1074 00004620           xsbqs_and_l_icons
    1075 00004620     0b40          cmpi    5,a0
         00004630     fffa  
    1076 00004640     ca0c          jrz     xsbqis_five
    1077 00004650     0b40          cmpi    7,a0
         00004660     fff8  
    1078 00004670     c401          jrlt    xsbqgt5_ok
    1079                            .if DEBUG
    1080                            LOCKUP
    1081                            .endif
    1082 00004680     18e0          movk    7,a0
    1083 00004690           xsbqgt5_ok
    1084 00004690     09e1          movi    BICON_1,a1
         000046a0 00000000! 
    1085 000046c0           xsbqsloop
    1086 000046c0     9229          move    a1,*a9+,L
    1087 000046d0     1420          subk    1,a0
    1088 000046e0     0b40          cmpi    5,a0
         000046f0     fffa  
    1089 00004700     cbfb          jrnz    xsbqsloop
    1090 00004710           xsbqis_five
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   25

    1091 00004710     09e1          movi    BICON_5,a1
         00004720 00000000! 
    1092 00004740     9229          move    a1,*a9+,L
    1093 00004750           xsbqgbb_done
    1094 00004750     5600          clr     a0
    1095 00004760     8209          move    a0,*a9,L
    1096 00004770                   PULL    a0,a1,a9
    1097 00004790     0960          rets
    1098                            
    1099                    
    1100                    
    1101                    
    1102 000047a0            SUBRP  bbicon_table
    1103 000047a0 00000000!         .long   BICON_1A
    1104 000047c0 00000000!         .long   BICON_5A
    1105 000047e0 00000000!         .long   BICON_10A
    1106 00004800 00000000!         .long   BICON_20A
    1107 00004820 00000000!         .long   BICON_30A
    1108 00004840 00000000!         .long   BICON_40A
    1109 00004860 00000000!         .long   BICON_50A
    1110 00004880 00000000!         .long   BICON_60A
    1111 000048a0 00000000!         .long   BICON_70A
    1112 000048c0 00000000!         .long   BICON_80A
    1113 000048e0 00000000!         .long   BICON_90A
    1114 00004900 00000000!         .long   BICON_100A
    1115                    
    1116                    
    1117 00004920            SUBRP  get_bonus_icons
    1118 00004920                   PUSH    a0,a1,a2,a3,a4,a9
    1119 00004940     0b09          addi    32,a9
         00004950     0020  
    1120 00004960     5684          clr     a4
    1121 00004970     4c23          move    a1,a3
    1122 00004980     4c20          move    a1,a0
    1123 00004990     0b43          cmpi    100,a3
         000049a0     ff9b  
    1124 000049b0     c533          jrge    xsbqicon_max
    1125                    
    1126 000049c0     5642          clr     a2
    1127 000049d0           xsbqget_tens_loop
    1128 000049d0     0b43          cmpi    10,a3
         000049e0     fff5  
    1129 000049f0     c404          jrlt    xsbqtens_done
    1130 00004a00     0be3          subi    10,a3
         00004a10     fff5  
    1131 00004a20     1022          addk    1,a2
    1132 00004a30     c0f9          jruc    xsbqget_tens_loop
    1133 00004a40           xsbqtens_done
    1134 00004a40     4c42          move    a2,a2
    1135 00004a50     ca09          jrz     xsbqno_tens
    1136 00004a60     1022          addk    1,a2
    1137 00004a70     24a2          sll     5,a2
    1138 00004a80     0b22          addi    bbicon_table,a2
         00004a90 000047a0' 
    1139 00004ab0     8641          move    *a2,a1,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   26

    1140 00004ac0     9229          move    a1,*a9+,L
    1141 00004ad0     8421          move    *a1,a1,W
    1142 00004ae0     4024          add     a1,a4
    1143 00004af0           xsbqno_tens
    1144 00004af0     4c03          move    a0,a3
    1145 00004b00     1942          movk    10,a2
    1146 00004b10     6e43          modu    a2,a3
    1147 00004b20     0b43          cmpi    5,a3
         00004b30     fffa  
    1148 00004b40     c408          jrlt    xsbqless_five
    1149 00004b50     07a2          move    @(bbicon_table+32),a2,L
         00004b60 000047c0' 
    1150 00004b80     9249          move    a2,*a9+,L
    1151 00004b90     8441          move    *a2,a1,W
    1152 00004ba0     4024          add     a1,a4
    1153 00004bb0     0be3          subi    5,a3
         00004bc0     fffa  
    1154 00004bd0           xsbqless_five
    1155 00004bd0     4c63          move    a3,a3
    1156 00004be0     ca07          jrz     xsbqno_ones
    1157 00004bf0     07a2          move    @bbicon_table,a2,L
         00004c00 000047a0' 
    1158 00004c20     8441          move    *a2,a1,W
    1159 00004c30           xsbqones_loop
    1160 00004c30     9249          move    a2,*a9+,L
    1161 00004c40     4024          add     a1,a4
    1162 00004c50     3c63          dsjs    a3,xsbqones_loop
    1163 00004c60           xsbqno_ones
    1164 00004c60     2fe4          srl     1,a4
    1165 00004c70     0784          move    a4,@icon_string_width,L
         00004c80 00009d90- 
    1166 00004ca0     5642          clr     a2
    1167 00004cb0     8249          move    a2,*a9,L
    1168 00004cc0                   PULL    a0,a1,a2,a3,a4,a9
    1169 00004ce0     0960          rets
    1170 00004cf0           xsbqicon_max
    1171 00004cf0     09e2          movi    BICON_100A,a2
         00004d00 00000000! 
    1172 00004d20     9249          move    a2,*a9+,L
    1173 00004d30     8441          move    *a2,a1
    1174 00004d40     4024          add     a1,a4
    1175 00004d50     c0f0          jruc    xsbqno_ones
    1176                    
    1177 00004d60            SUBRP  audit_icons
    1178 00004d60                   PUSH    a0,a1,a2
    1179 00004d80     4c22          move    a1,a2
    1180 00004d90     09c0          movi    AUD_P1ICONMAX,a0
         00004da0     0066  
    1181 00004db0     4d4a          move    a10,a10
    1182 00004dc0     ca02          jrz     xsbqp1_audit
    1183 00004dd0     09c0          movi    AUD_P2ICONMAX,a0
         00004de0     0067  
    1184 00004df0           xsbqp1_audit
    1185 00004df0     0d5f          calla   GET_AUD
         00004e00 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   27

    1186 00004e20     4822          cmp     a1,a2
    1187 00004e30     c604          jrle    xsbqnot_higher
    1188 00004e40     4c41          move    a2,a1
    1189 00004e50     0d5f          calla   STORE_AUDIT
         00004e60 00000000! 
    1190 00004e80           xsbqnot_higher
    1191 00004e80                   PULL    a0,a1,a2
    1192 00004ea0     0960          rets
    1193                    
    1194                    
    1195                    
    1196 00004eb0             SUBR  show_bonus_icons
    1197 00004eb0                   PUSH    a0,a1,a2,a3,a4,a5,a6,a7,a9,a11
    1198 00004ed0     09e0          movi    [BONUS_MSG_XPOS1,0],a0
         00004ee0 00510000  
    1199 00004f00     4d4a          move    a10,a10
    1200 00004f10     ca11          jrz     xsbqp1bonus
    1201 00004f20     09e9          movi    p2bicon,a9
         00004f30 00009c90- 
    1202 00004f50     05a1          move    @p2winstreak,a1,W
         00004f60 00000000! 
    1203                    
    1204                            .if SHOW_ACCUM_ICONS
    1205                            move    @p2oldwinstreak,a2,W
    1206                            cmp     a1,a2
    1207                            .endif
    1208                    
    1209 00004f80     ca4e          jrz     xsbqtotal_reset
    1210 00004f90     07a1          move    @p2icon_total,a1,L
         00004fa0 00009b50- 
    1211 00004fc0     ca45          jrz     xsbqno_bonus
    1212 00004fd0     0d3f          callr   audit_icons
         00004fe0     ffd7  
    1213 00004ff0     09e0          movi    [BONUS_MSG_XPOS2,0],a0
         00005000 01410000  
    1214 00005020     c00d          jruc    xsbqdo_bonus
    1215 00005030           xsbqp1bonus
    1216 00005030     09e9          movi    p1bicon,a9
         00005040 00009b90- 
    1217 00005060     05a1          move    @p1winstreak,a1,W
         00005070 00000000! 
    1218                    
    1219                            .if SHOW_ACCUM_ICONS
    1220                            move    @p1oldwinstreak,a2,W
    1221                            cmp     a1,a2
    1222                            .endif
    1223                    
    1224 00005090     ca3d          jrz     xsbqtotal_reset
    1225 000050a0     07a1          move    @p1icon_total,a1,L
         000050b0 00009b30- 
    1226 000050d0     ca34          jrz     xsbqno_bonus
    1227 000050e0     0d3f          callr   audit_icons
         000050f0     ffc6  
    1228 00005100           xsbqdo_bonus
    1229 00005100     0d3f          callr   get_bonus_icons
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   28

         00005110     ff80  
    1230                    
    1231 00005120     09e1          movi    [BONUS_MSG_YPOS,0],a1
         00005130 00c60000  
    1232 00005150     09e2          movi    SKILBON,a2
         00005160 00000000! 
    1233 00005180     09c3          movi    104+200,a3
         00005190     0130  
    1234 000051a0     09e4          movi    DMAWNZ|M_SCRNREL,a4
         000051b0 0000a002  
    1235 000051d0     09c5          movi    CLSNEUT,a5
         000051e0     0000  
    1236 000051f0     56c6          clr     a6
    1237 00005200     56e7          clr     a7
    1238 00005210     0d5f          calla   BEGINOBJ
         00005220 00000000! 
    1239 00005240     9309          move    a8,*a9+,L
    1240                    
    1241 00005250     4d4a          move    a10,a10
    1242 00005260     ca04          jrz     xsbqp1icon
    1243 00005270     09e0          movi    [BONUS_ICON_XPOS2,0],a0
         00005280 01410000  
    1244 000052a0     c003          jruc    xsbqdobicon
    1245 000052b0           xsbqp1icon
    1246 000052b0     09e0          movi    [BONUS_ICON_XPOS1,0],a0
         000052c0 00510000  
    1247 000052e0           xsbqdobicon
    1248 000052e0     07a1          move    @icon_string_width,a1,L
         000052f0 00009d90- 
    1249 00005310     2601          sll     16,a1
    1250 00005320     4420          sub     a1,a0
    1251 00005330     8722          move    *a9,a2,L
    1252 00005340           xsbqdobicon_loop
    1253 00005340     09e1          movi    [BONUS_ICON_YPOS,0],a1
         00005350 00dc0000  
    1254 00005370                   PUSH    a0
    1255 00005380     0d5f          calla   BEGINOBJ
         00005390 00000000! 
    1256 000053b0                   PULL    a0
    1257 000053c0     844b          move    *a2,a11,W
    1258 000053d0     260b          sll     16,a11
    1259 000053e0     4160          add     a11,a0
    1260 000053f0     9309          move    a8,*a9+,L
    1261 00005400     8722          move    *a9,a2,L
    1262 00005410     cbf2          jrnz    xsbqdobicon_loop
    1263 00005420           xsbqno_bonus
    1264 00005420     5600          clr     a0
    1265 00005430     8209          move    a0,*a9,L
    1266 00005440                   PULL    a0,a1,a2,a3,a4,a5,a6,a7,a9,a11
    1267 00005460     0960          rets
    1268                    
    1269                    
    1270                    
    1271 00005470            SUBRP  xsbqtotal_reset
    1272 00005470     4d4a          move    a10,a10
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   29

    1273 00005480     ca05          jrz     xsbqp1_reset
    1274 00005490     5600          clr     a0
    1275 000054a0     0780          move    a0,@p2icon_total,L
         000054b0 00009b50- 
    1276 000054d0     c0f4          jruc    xsbqno_bonus
    1277 000054e0           xsbqp1_reset
    1278 000054e0     5600          clr     a0
    1279 000054f0     0780          move    a0,@p1icon_total,L
         00005500 00009b30- 
    1280 00005520     c0ef          jruc    xsbqno_bonus
    1281                    
    1282                    
    1283 00005530            SUBR   del_bonus_icons
    1284 00005530                   PUSH    a0,a2
    1285 00005550     4d4a          move    a10,a10
    1286 00005560     cb04          jrnz    xsbqdel_p2
    1287 00005570     09e2          movi    p1bicon,a2
         00005580 00009b90- 
    1288 000055a0     c003          jruc    xsbqdel_bicon
    1289 000055b0           xsbqdel_p2
    1290 000055b0     09e2          movi    p2bicon,a2
         000055c0 00009c90- 
    1291 000055e0           xsbqdel_bicon
    1292 000055e0     9640          move    *a2+,a0,L
    1293 000055f0     ca04          jrz     xsbqdel_done
    1294 00005600     0d5f          calla   DELOBJ
         00005610 00000000! 
    1295 00005630     c0fa          jruc    xsbqdel_bicon
    1296 00005640           xsbqdel_done
    1297 00005640                   PULL    a0,a2
    1298 00005660     0960          rets
    1299                    
    1300                    
    1301                    
    1302 00005670            SUBR   show_progress_bicons
    1303 00005670                   PUSH    a0,a1,a2,a3,a4,a5,a6,a6,a9,a10
    1304 00005690     07a1          move    @p2icon_total,a1,L
         000056a0 00009b50- 
    1305 000056c0     cb04          jrnz    xsbqdo_spb
    1306 000056d0           xsbqspb_p1
    1307 000056d0     07a1          move    @p1icon_total,a1,L
         000056e0 00009b30- 
    1308 00005700     ca28          jrz     xsbqno_picons
    1309 00005710           xsbqdo_spb
    1310 00005710     09e9          movi    progress_icons,a9
         00005720 00009db0- 
    1311 00005740     0d3f          callr   get_bonus_icons
         00005750     ff1c  
    1312 00005760     09e0          movi    [PROG_BICON_XPOS,0],a0
         00005770 00380000  
    1313 00005790     07a1          move    @icon_string_width,a1,L
         000057a0 00009d90- 
    1314 000057c0     2601          sll     16,a1
    1315 000057d0     4420          sub     a1,a0
    1316 000057e0     8722          move    *a9,a2,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   30

    1317 000057f0     09c3          movi    02000H,a3
         00005800     2000  
    1318 00005810     09e4          movi    DMAWNZ|M_SCRNREL,a4
         00005820 0000a002  
    1319 00005840     09c5          movi    CLSNEUT,a5
         00005850     0000  
    1320 00005860     56c6          clr     a6
    1321 00005870     56e7          clr     a7
    1322 00005880     0b09          addi    32,a9
         00005890     0020  
    1323 000058a0     8722          move    *a9,a2,L
    1324 000058b0           xsbqdopicon_loop
    1325 000058b0     09e1          movi    [PROG_BICON_YPOS,0],a1
         000058c0 005d0000  
    1326 000058e0                   PUSH    a0
    1327 000058f0     0d5f          calla   BEGINOBJ
         00005900 00000000! 
    1328 00005920                   PULL    a0
    1329 00005930     844a          move    *a2,a10,W
    1330 00005940     260a          sll     16,a10
    1331 00005950     4140          add     a10,a0
    1332 00005960     9309          move    a8,*a9+,L
    1333 00005970     8722          move    *a9,a2,L
    1334 00005980     cbf2          jrnz    xsbqdopicon_loop
    1335 00005990           xsbqno_picons
    1336 00005990     56c6          clr     a6
    1337 000059a0     82c9          move    a6,*a9,L
    1338 000059b0                   PULL    a0,a1,a2,a3,a4,a5,a6,a6,a9,a10
    1339 000059d0     0960          rets
    1340                    
    1341                    
    1342 000059e0            SUBR   del_progress_icon
    1343 000059e0                   PUSH    a0,a2
    1344 00005a00     09e2          movi    progress_icons,a2       ; Get pointer to progess screen icon array
         00005a10 00009db0- 
    1345 00005a30     0b02          addi    32,a2
         00005a40     0020  
    1346 00005a50           xsbqdel_picon
    1347 00005a50     9640          move    *a2+,a0,L               ; Get pointer to object
    1348 00005a60     ca04          jrz     xsbqdelp_done           ; br = not valid object pointer
    1349 00005a70     0d5f          calla   DELOBJ                  ; Delete the object
         00005a80 00000000! 
    1350 00005aa0     c0fa          jruc    xsbqdel_picon           ; Go get next
    1351 00005ab0           xsbqdelp_done
    1352 00005ab0                   PULL    a0,a2
    1353 00005ad0     0960          rets
    1354                    
    1355                    
    1356                    
    1357 00005ae0            SUBR   show_dufus_messages
    1358                    
    1359 00005ae0                   PUSHP   a9,a10                          ; Save o reggie
    1360                    
    1361 00005b00     5729          clr     a9                              ; Set up state machine
    1362 00005b10     0789          move    a9,@award_ok_to_die,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   31

         00005b20 00000800- 
    1363 00005b40     0789          move    a9,@dboxes_on,L
         00005b50 00000860- 
    1364                    
    1365 00005b70           f_wait
    1366 00005b70     05ae          move    @in_finish_move,a14             ; Are we doing a finishing move ?
         00005b80 00000000! 
    1367 00005ba0     ca05          jrz     f_done                          ; br = no
    1368 00005bb0                   SLEEPK  10
    1369 00005bf0     c0f7          jruc    f_wait
    1370 00005c00           f_done
    1371                    
    1372 00005c00     182a          movk    1,a10                           ; Msg number to show
    1373 00005c10                   CREATE  AWARD_PID,display_dufus_message ; Show msgs for player 1
    1374                    
    1375 00005c90     182a          movk    1,a10                           ; Msg number to show
    1376 00005ca0     1829          movk    1,a9
    1377 00005cb0                   CREATE  AWARD_PID,display_dufus_message ; Show msgs for player 2
    1378                    
    1379 00005d30                   SLEEPK  15                              ; Give it a little time
    1380                    
    1381 00005d70                   PULLP   a9,a10                          ; All done
    1382 00005d90                   RETP
    1383                    
    1384                    
    1385 00005dc0            SUBRP  dufus_msgs
    1386 00005dc0 00000000!         .long   TORUN                   ; 1st Dufus Message (RUN)
    1387 00005de0 00000000!         .long   CONTROLI                ; 2nd Dufus Message (GETUP INSTRUCTIONS)
    1388 00005e00 00000000!         .long   OUTRING                 ; 3rd Dufus Message (OUTRING INSTRUCTIONS)
    1389                    
    1390                    
    1391 00005e20            SUBR   dufus_msg_off
    1392 00005e20                   PUSH    a0,a2,a3
    1393 00005e40     b5a2          move    *a13(PLYRNUM),a2,W      ; Get the player number
         00005e50     0580  
    1394 00005e60     0b42          cmpi    2,a2                    ; Is this a human player
         00005e70     fffd  
    1395 00005e80     c50f          jrge    xsbqdmoff_exit          ; br = nope - get out
    1396                    
    1397 00005e90     09e2          movi    p1dufus_msg_flags,a2    ; Get pointer to player 1 msg flags
         00005ea0 00009f30- 
    1398 00005ec0     afa0          movb    *a13(PLYR_SIDE),a0      ; Are we player 1?
         00005ed0     05b0  
    1399 00005ee0     ca03          jrz     xsbqdo_dufus_msg_off    ; br = yes
    1400 00005ef0     09e2          movi    p2dufus_msg_flags,a2    ; Get pointer to player 2 msg flags
         00005f00 00009f50- 
    1401 00005f20           xsbqdo_dufus_msg_off
    1402 00005f20     1421          subk    1,a1                    ; Decrement msg number
    1403 00005f30     8640          move    *a2,a0,L                ; Get msg flags
    1404 00005f40     1823          movk    1,a3                    ; Set up for bit shift
    1405 00005f50     6223          sll     a1,a3
    1406 00005f60     5260          andn    a3,a0                   ; Disable this msg
    1407 00005f70     8202          move    a0,*a2,L                ; Write it back
    1408 00005f80           xsbqdmoff_exit
    1409 00005f80                   PULL    a0,a2,a3
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   32

    1410 00005fa0     0960          rets
    1411                    
    1412                    
    1413 00005fb0            SUBR   dufus_msg_on
    1414                    
    1415 00005fb0     b548          move    *a10(PLYRNUM),a8,W              ; Get the player number
         00005fc0     0580  
    1416 00005fd0     0b48          cmpi    2,a8                            ; Is this a human player
         00005fe0     fffd  
    1417 00005ff0     c541          jrge    xsbqdmo_exit                    ; br = nope - get out
    1418 00006000     07ae          move    @p1dufus_msg_flags,a14,L        ; Get Player 1 msg flags
         00006010 00009f30- 
    1419 00006030     09eb          movi    p1winstreak,a11
         00006040 00000000! 
    1420 00006060     af48          movb    *a10(PLYRNUM),a8                ; Get Player number
         00006070     0580  
    1421 00006080     ca06          jrz     xsbqp1_dmo                              ; br = player 1
    1422 00006090     07ae          move    @p2dufus_msg_flags,a14,L        ; Get Player 2 msg flags
         000060a0 00009f50- 
    1423 000060c0     09eb          movi    p2winstreak,a11
         000060d0 00000000! 
    1424 000060f0           xsbqp1_dmo
    1425 000060f0     856b          move    *a11,a11,W                      ; 3 or more wins ?
    1426 00006100     0b4b          cmpi    3,a11                           
         00006110     fffc  
    1427 00006120     c52e          jrge    xsbqdmo_exit                    ; br = yes
    1428 00006130     4d2a          move    a9,a10                          ; Save msg number
    1429 00006140     4d09          move    a8,a9                           ; Save player number
    1430 00006150     4d4b          move    a10,a11
    1431 00006160     142b          subk    1,a11                           ; sub 1 from msg num
    1432 00006170     1828          movk    1,a8                            ; set up for bit shift
    1433 00006180     6368          sll     a11,a8                          ; shift by msg num-1
    1434 00006190     510e          and     a8,a14                          ; will this msg be displayed?
    1435 000061a0     ca26          jrz     xsbqdmo_exit                    ; br = no
    1436                    
    1437 000061b0     5708          clr     a8                              ; Set up state machine
    1438 000061c0     0788          move    a8,@award_ok_to_die,L
         000061d0 00000800- 
    1439                    
    1440 000061f0                   CREATE  4000h|AWARD_PID,display_dufus_message
    1441                    
    1442 00006270     09ca          movi    TSEC,a10                        ; Let box get displayed for 1 second
         00006280     0035  
    1443 00006290           xsbqmin_time_loop
    1444 00006290                   SLEEPK  1
    1445 000062d0     0d3f          callr   suspend_all                     ; Put all but unsuspendables to sleep
         000062e0     0015  
    1446 000062f0     3cea          dsjs    a10,xsbqmin_time_loop           ; 1 second? - br = no
    1447                    
    1448 00006300     09ca          movi    TSEC*2,a10                      ; Allow up to 2 more seconds
         00006310     006a  
    1449 00006320           xsbqwait_die_loop
    1450 00006320                   SLEEPK  1
    1451 00006360     0d3f          callr   suspend_all                     ; Put all but unsuspendables to sleep
         00006370     000c  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   33

    1452 00006380     0d5f          calla   get_all_buttons_cur             ; Anybody pressing buttons?
         00006390 00000000! 
    1453 000063b0     cb01          jrnz    xsbqdmo_abort                   ; br = yes
    1454 000063c0     3d6a          dsjs    a10,xsbqwait_die_loop           ; 2 seconds? - br = no
    1455 000063d0           xsbqdmo_abort
    1456 000063d0     1829          movk    1,a9                            ; Tell display_dufus_msg to die
    1457 000063e0     0789          move    a9,@award_ok_to_die,L
         000063f0 00000800- 
    1458 00006410           xsbqdmo_exit
    1459 00006410                   DIE
    1460                            
    1461                    
    1462 00006440            SUBRP  suspend_all
    1463 00006440     09e3          movi    ACTIVE,a3,L
         00006450 00000000! 
    1464                    
    1465 00006470     8663  xsbqlp  move    *a3,a3,L        ;Get next
    1466 00006480     ca0c          jrz     xsbqx           ;End?
    1467 00006490     b46e          move    *a3(PROCID),a14 ;Get Process ID
         000064a0     0020  
    1468 000064b0     0b8e          andi    0c000h,a14      ;Is this either an indestructable or unsuspendable process?
         000064c0 ffff3fff  
    1469 000064e0     cbf8          jrnz    xsbqlp          ;br = yes
    1470                    
    1471 000064f0     b46e          move    *a3(PTIME),a14  ;Get current Sleep time
         00006500     0030  
    1472 00006510     102e          addk    1,a14           ;Add 1 to it
    1473 00006520     b1c3          move    a14,*a3(PTIME)  ;Write it back
         00006530     0030  
    1474 00006540     c0f2          jruc    xsbqlp          ;Go check next process
    1475                    
    1476 00006550     0960  xsbqx   rets
    1477                    
    1478                    
    1479                    
    1480 00006560            SUBR   reset_dufus_msgs
    1481 00006560                   PUSH    a0,a1
    1482 00006580     09e1          movi    p1dufus_msg_flags,a1            ; Pointer to player 1 msg enables
         00006590 00009f30- 
    1483 000065b0     4c00          move    a0,a0                           ; Reset player 1 msgs?
    1484 000065c0     ca03          jrz     xsbqrst_d_p1                    ; br = yes
    1485 000065d0     09e1          movi    p2dufus_msg_flags,a1            ; Pointer to player 2 msg enables
         000065e0 00009f50- 
    1486 00006600           xsbqrst_d_p1
    1487 00006600     19e0          movk    0fh,a0                          ; Enable all msgs
    1488 00006610     8201          move    a0,*a1,L
    1489 00006620                   PULL    a0,a1
    1490 00006640     0960          rets
    1491                    
    1492 00006650            SUBRP  xsbqadjust_tl
    1493 00006650                   PUSH    a2,a7,a10
    1494 00006670     2f02          srl     8,a2
    1495 00006680     0b82          andni   0ffh,a2                 ; Mask lower scale bits
         00006690 000000ff  
    1496 000066b0     b76e          move    *a11(32),a14,L          ; Get pointer to object
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   34

         000066c0     0020  
    1497 000066d0     b7c3          move    *a14(OIMG),a3,L         ; Get pointer to image header
         000066e0     0170  
    1498                    
    1499 000066f0     8467          move    *a3,a7,W                ; Get image Width
    1500 00006700     25e7          sll     15,a7                   ; x 10000h
    1501 00006710     5a47          divu    a2,a7                   ; divide by scale factor
    1502 00006720     09ca          movi    DUFUS_BOX_LXPOS,a10
         00006730     0063  
    1503 00006740     4d29          move    a9,a9                   ; Am I player 1?
    1504 00006750     ca02          jrz     xsbqatl_right           ; br = yes
    1505 00006760     09ca          movi    DUFUS_BOX_RXPOS,a10
         00006770     012c  
    1506 00006780           xsbqatl_right
    1507 00006780     44ea          sub     a7,a10                  ; Upper left X
    1508 00006790     b14e          move    a10,*a14(OXPOS)         ; Set box X
         000067a0     0090  
    1509 000067b0     876e          move    *a11,a14,L              ; Get text object pointer
    1510 000067c0     b14e          move    a10,*a14(OXPOS)         ; Set text X
         000067d0     0090  
    1511                    
    1512 000067e0     b467          move    *a3(16),a7,W            ; Get image Width
         000067f0     0010  
    1513 00006800     25e7          sll     15,a7                   ; x 10000h
    1514 00006810     5a47          divu    a2,a7                   ; divide by scale factor
    1515 00006820     09ca          movi    DUFUS_BOX_YPOS,a10
         00006830     00a7  
    1516 00006840     44ea          sub     a7,a10                  ; Upper Left Y
    1517 00006850     b76e          move    *a11(32),a14,L          ; Get Box object pointer
         00006860     0020  
    1518 00006870     b14e          move    a10,*a14(OYPOS)         ; Set Box Y
         00006880     00b0  
    1519 00006890     876e          move    *a11,a14,L              ; Get text object pointer
    1520 000068a0     b14e          move    a10,*a14(OYPOS)         ; Set Text Y
         000068b0     00b0  
    1521 000068c0                   PULL    a2,a7,a10
    1522                    
    1523 000068e0     0960          rets
    1524                            
    1525                    
    1526                    
    1527 000068f0            SUBR   display_dufus_message
    1528                    
    1529 000068f0     05ae          move    @PSTATUS2,a14
         00006900 00000000! 
    1530 00006920     4d29          move    a9,a9                           ; Player 1?
    1531 00006930     ca11          jrz     xsbqp1_is_dufus                 ; br = yes
    1532 00006940     05a0          move    @p2winstreak,a0,W               ; Is this player on a winstreak?
         00006950 00000000! 
    1533 00006970     0b40          cmpi    3,a0
         00006980     fffc  
    1534 00006990     c500          jrge    xsbqno_dufus_msg                        ; br = yes (no dufus msgs)
         000069a0     00b4  
    1535 000069b0     09e1          movi    p2dufus_msg_flags,a1            ; 
         000069c0 00009f50- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   35

    1536 000069e0     09e0          movi    [DUFUS_BOX_RXPOS,0],a0          ; Set p2 box x position
         000069f0 012c0000  
    1537 00006a10     09eb          movi    p2dufus_obj,a11                 ; Pointer to be used later
         00006a20 00009ef0- 
    1538 00006a40     c010          jruc    xsbqdufus_msg_box                       ; Go do it
    1539 00006a50           xsbqp1_is_dufus
    1540 00006a50     05a0          move    @p1winstreak,a0,W               ; Is this player on a winstreak?
         00006a60 00000000! 
    1541 00006a80     0b40          cmpi    4,a0
         00006a90     fffb  
    1542 00006aa0     c500          jrge    xsbqno_dufus_msg                        ; br = yes (no dufus msgs)
         00006ab0     00a3  
    1543 00006ac0     09e1          movi    p1dufus_msg_flags,a1            ; Get which msgs to show
         00006ad0 00009f30- 
    1544 00006af0     09eb          movi    p1dufus_obj,a11                 ; Pointer to used later
         00006b00 00009eb0- 
    1545 00006b20     09e0          movi    [DUFUS_BOX_LXPOS,0],a0          ; Set p1 box x position
         00006b30 00630000  
    1546 00006b50           xsbqdufus_msg_box
    1547 00006b50     4b2e          btst    a9,a14                          ; Is this really a human ?
    1548 00006b60     ca00          jrz     xsbqno_dufus_msg                        ; br = no
         00006b70     0097  
    1549 00006b80     8622          move    *a1,a2,L                        ; Get enabled msg flags
    1550 00006b90     1823          movk    1,a3                            ; Generate bit number of msg we want displayed
    1551 00006ba0     0bea          subi    1,a10                           ; Subtract 1 from msg number
         00006bb0     fffe  
    1552 00006bc0     4d48          move    a10,a8                          ; Save msg number
    1553 00006bd0     6343          sll     a10,a3                          ; Shift bit up
    1554 00006be0     4c4a          move    a2,a10                          ; Save bit
    1555 00006bf0     5062          and     a3,a2                           ; Ok to display msg ?
    1556 00006c00     ca00          jrz     xsbqno_dufus_msg                        ; br = no
         00006c10     008d  
    1557 00006c20     526a          andn    a3,a10                          ; Disable this msg
    1558 00006c30     8341          move    a10,*a1,L                       ; Write it back
    1559 00006c40     4d03          move    a8,a3                           ; Get msg number
    1560 00006c50     24a3          sll     5,a3                            ; Offset into table
    1561 00006c60     0b23          addi    dufus_msgs,a3                   ; Add table pointer
         00006c70 00005dc0' 
    1562 00006c90     1822          movk    1,a2
    1563 00006ca0     0782          move    a2,@dboxes_on,L
         00006cb0 00000860- 
    1564 00006cd0     8662          move    *a3,a2,L                        ; Get image pointer (text)
    1565 00006ce0     09e1          movi    [DUFUS_BOX_YPOS,0],a1           ; Vertical Position
         00006cf0 00a70000  
    1566 00006d10     09c3          movi    02000H,a3                       ; Z Position
         00006d20     2000  
    1567 00006d30     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4        ; DMACTRL
         00006d40 0000a102  
    1568 00006d60     09c5          movi    CLSNEUT,a5                      ; Object ID
         00006d70     0000  
    1569 00006d80     56c6          clr     a6                              ; X Velocity 
    1570 00006d90     56e7          clr     a7                              ; Y Velocity
    1571 00006da0                   PUSH    a0,a1                           ; Save these
    1572 00006dc0     0d5f          calla   BEGINOBJ                        ; Create Text Object
         00006dd0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   36

    1573 00006df0                   PULL    a0,a1                           ; Restore regs
    1574 00006e10     830b          move    a8,*a11,L                       ; Save off object pointer
    1575 00006e20     09e2          movi    05000500h,a2                    ; Set initial text scale factor
         00006e30 05000500  
    1576 00006e50     b248          move    a2,*a8(OSCALE),L
         00006e60     0240  
    1577 00006e70     09e2          movi    INFOBOX,a2                      ; Box Image Pointer
         00006e80 00000000! 
    1578 00006ea0     0be3          subi    10h,a3                          ; Make sure box is behind text
         00006eb0     ffef  
    1579 00006ec0     09f0          movi    DPLT_B_P,b0                     ; Player 1 palette
         00006ed0 00000000! 
    1580 00006ef0     4d29          move    a9,a9                           ; Are we player 1?
    1581 00006f00     ca03          jrz     xsbqp1_dufus_box_pal            ; br = yes
    1582 00006f10     09f0          movi    DPLT_R_P,b0                     ; Player 2 palette
         00006f20 00000000! 
    1583 00006f40           xsbqp1_dufus_box_pal
    1584 00006f40     0d5f          calla   BEGINOBJP                       ; Create the box
         00006f50 00000000! 
    1585 00006f70     b30b          move    a8,*a11(32),L                   ; Save box object pointer
         00006f80     0020  
    1586 00006f90     09e2          movi    05000500h,a2                    ; Set initial box scale factor
         00006fa0 05000500  
    1587 00006fc0     b248          move    a2,*a8(OSCALE),L
         00006fd0     0240  
    1588 00006fe0     09e3          movi    02000200h,a3                    ; Initial amount to adjust scale factor
         00006ff0 02000200  
    1589 00007010           xsbqdufus_wait
    1590 00007010                   PUSHP   a2,a3,a8                        ; Savey reggies
    1591 00007030     0d3f          callr   xsbqadjust_tl                   ; Adjust top/left corner position
         00007040     ff60  
    1592 00007050                   SLEEPK  1                               ; Wait
    1593 00007090                   PULLP   a2,a3,a8                        ; Getty reggies
    1594 000070b0     0b62          cmpi    01000100h,a2                    ; Are we at full size
         000070c0 fefffeff  
    1595 000070e0     ca0e          jrz     xsbqdufus_flash                 ; br = yes
    1596 000070f0     4462          sub     a3,a2                           ; Adjust scale factor
    1597 00007100     0b63          cmpi    00010001h,a3                    ; Scaling value = 1?
         00007110 fffefffe  
    1598 00007130     ca01          jrz     xsbqno_more_shift                       ; br = yes
    1599 00007140     2fe3          srl     1,a3                            ; Adjust scaling value
    1600 00007150           xsbqno_more_shift                                       
    1601 00007150     8768          move    *a11,a8,L                       ; Get pointer to text object
    1602 00007160     b248          move    a2,*a8(OSCALE),L                ; Set new scale factor
         00007170     0240  
    1603 00007180     b768          move    *a11(32),a8,L                   ; Get pointer to box object
         00007190     0020  
    1604 000071a0     b248          move    a2,*a8(OSCALE),L                ; Set new scale factor
         000071b0     0240  
    1605 000071c0     c0e4          jruc    xsbqdufus_wait                  ; Do it again
    1606 000071d0           xsbqdufus_flash
    1607 000071d0     09c0          movi    BOX_OUT_SOUND,a0
         000071e0     00aa  
    1608 000071f0     0d5f          calla   triple_sound
         00007200 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   37

    1609 00007220     b768          move    *a11(32),a8,L                   ; Get the object pointer
         00007230     0020  
    1610 00007240     09c9          movi    0101h,a9                        ; Constant color (white)
         00007250     0101  
    1611 00007260                   CREATE  4000h|AWARD_PID,FLASHME         ; Flash him once
    1612 000072e0                   SLEEPK  5
    1613 00007320                   CREATE  4000h|AWARD_PID,FLASHME         ; Flash him twice
    1614 000073a0                   SLEEPK  5
    1615 000073e0           xsbqdufus_done
    1616 000073e0                   SLEEPK  1
    1617 00007420     07a0          move    @award_ok_to_die,a0,L           ; Should I croak?
         00007430 00000800- 
    1618 00007450     caf8          jrz     xsbqdufus_done                  ; br = no
    1619                    
    1620 00007460     8760          move    *a11,a0,L                       ; Get rid of text object
    1621 00007470     0d5f          calla   DELOBJ
         00007480 00000000! 
    1622 000074a0     b760          move    *a11(32),a0,L                   ; Get rid of box object
         000074b0     0020  
    1623 000074c0     0d5f          calla   DELOBJ
         000074d0 00000000! 
    1624 000074f0           xsbqno_dufus_msg
    1625 000074f0                   DIE                                     ; Crooooak!!!
    1626                    
    1627                    
    1628                    
    1629 00009fd0                   .bss    pin_objects,32*2
    1630                    
    1631                    
    1632                    
    1633 00007520            SUBR   pin_prompt
    1634                    
    1635 00007520     05ae          move    @royal_rumble,a14       ; Are we in royal rumble mode ?
         00007530 00000000! 
    1636 00007550     cb04          jrnz    xsbqcheck_count         ; br = yes
    1637 00007560     0d5f          calla   is_8_on_1               ; Are is 8 on 1 mode ?
         00007570 00000000! 
    1638 00007590     c905          jrnc    xsbqnot_8_on_1          ; br = no
    1639 000075a0           xsbqcheck_count
    1640 000075a0     05ae          move    @wrestler_count,a14     ; Are there any drones left to kill ?
         000075b0 00000000! 
    1641 000075d0     cb00          jrnz    xsbqdie                 ; br = yes
         000075e0     00e5  
    1642 000075f0           xsbqnot_8_on_1
    1643                    
    1644                            ;quit if there's already one of these going. (not likely)
    1645 000075f0     09c0          movi    PINHIM_ANIM_PID,a0
         00007600     0160  
    1646 00007610     09c1          movi    -1,a1
         00007620     ffff  
    1647 00007630     0d5f          calla   EXISTP
         00007640 00000000! 
    1648 00007660     cb00          jrnz    xsbqdie
         00007670     00dc  
    1649                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   38

    1650                            ;look for a live human from the winning team inside the ring.
    1651                            ;quit if there isn't one.
    1652 00007680     09e0          movi    process_ptrs,a0
         00007690 00000000! 
    1653 000076b0     09c1          movi    2,a1                    ;only check humans
         000076c0     0002  
    1654 000076d0     9602  xsbqlp0 move    *a0+,a2,L
    1655 000076e0     ca0d          jrz     xsbqnxt0                        ;skip inactive
    1656 000076f0     b44e          move    *a2(PLYR_SIDE),a14
         00007700     05b0  
    1657 00007710     492e          cmp     a9,a14
    1658 00007720     ca09          jreq    xsbqnxt0                        ;skip dead team
    1659 00007730     b44e          move    *a2(PLYRMODE),a14
         00007740     05c0  
    1660 00007750     0b4e          cmpi    MODE_DEAD,a14
         00007760     fff6  
    1661 00007770     ca04          jreq    xsbqnxt0                        ;skip dead guys (shouldn't be any)
    1662 00007780     b44e          move    *a2(INRING),a14
         00007790     0560  
    1663 000077a0     cb01          jrnz    xsbqnxt0                        ;skip outside guys
    1664 000077b0     c003          jruc    xsbqf_dead                      ;got one.  move on.
    1665 000077c0     3e01  xsbqnxt0        dsj     a1,xsbqlp0
    1666 000077d0     c000          jruc    xsbqdie                 ;no live winning human found.  quit.
         000077e0     00c5  
    1667                    
    1668 000077f0           xsbqf_dead      ;Make sure everyone on the dead team is actually dead and not
    1669                            ; a zombie.  Further, make sure at least one is inside the ring.
    1670 000077f0     4c48          move    a2,a8                   ;save proc ptr of pinner.
    1671 00007800     574a          clr     a10                     ;"found pinable guy" flag
    1672                    
    1673 00007810     09e0          movi    process_ptrs,a0
         00007820 00000000! 
    1674 00007840     09c1          movi    NUM_WRES,a1             ;check everyone
         00007850     0007  
    1675 00007860     9602  xsbqlp1 move    *a0+,a2,L
    1676 00007870     ca13          jrz     xsbqnxt1                        ;skip inactive
    1677 00007880     b44e          move    *a2(PLYR_SIDE),a14
         00007890     05b0  
    1678 000078a0     492e          cmp     a9,a14
    1679 000078b0     cb0f          jrne    xsbqnxt1                        ;skip live team
    1680 000078c0     b44e          move    *a2(INRING),a14
         000078d0     0560  
    1681 000078e0     cb0c          jrnz    xsbqnxt1                        ;skip outside guys
    1682 000078f0     b44e          move    *a2(PLYRMODE),a14
         00007900     05c0  
    1683 00007910     0b4e          cmpi    MODE_DEAD,a14
         00007920     fff6  
    1684 00007930     cb00          jrne    xsbqdie                 ;found live guy - quit
         00007940     00af  
    1685 00007950     b64e          move    *a2(STATUS_FLAGS),a14,L
         00007960     0b50  
    1686 00007970     1f8e          btst    B_ZOMBIE,a14
    1687 00007980     cb00          jrnz    xsbqdie                 ;found zombie - quit
         00007990     00aa  
    1688 000079a0     102a          inc     a10                     ;got one.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   39

    1689 000079b0     3ec1  xsbqnxt1        dsj     a1,xsbqlp1
    1690                    
    1691                    
    1692                    
    1693                            ;done looking, and everyone on the dead team is dead and not a
    1694                            ;zombie.  If a10 is set, that means we also found at least one
    1695                            ;inside the ring, so we can go ahead and flash the message.
    1696 000079c0           xsbqfp_dn       TEST    a10
    1697 000079d0     ca00          jrz     xsbqdie
         000079e0     00a5  
    1698                    
    1699                    
    1700 000079f0     0d5f          calla   END_MATCH_SPEECH        ;do the obnoxious "PIN HIM!" crap.
         00007a00 00000000! 
    1701                    
    1702 00007a20     09c0          MOVI    0BBH,A0                 ;Move name annc snd
         00007a30     00bb  
    1703 00007a40     0d5f          CALLA   triple_sound
         00007a50 00000000! 
    1704                    
    1705                    
    1706 00007a70     09e9          movi    pin_objects,a9
         00007a80 00009fd0- 
    1707                            
    1708 00007aa0     09e1          movi    [128,0],a1
         00007ab0 00800000  
    1709 00007ad0     09e2          movi    CHOICBK,a2
         00007ae0 00000000! 
    1710 00007b00     09c3          movi    1800h,a3
         00007b10     1800  
    1711 00007b20     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4        ; DMACTRL
         00007b30 0000a102  
    1712 00007b50     09c5          movi    TYPPINHIM,a5
         00007b60     0160  
    1713 00007b70     56c6          clr     a6                              ; X Velocity 
    1714 00007b80     56e7          clr     a7                              ; Y Velocity
    1715                    
    1716 00007b90     b50e          move    *a8(PLYR_SIDE),a14
         00007ba0     05b0  
    1717 00007bb0     cb13          jrnz    xsbqonrt
    1718                    
    1719                            ;left
    1720 00007bc0     05a0          move    @p1pins,a0
         00007bd0 00009fb0- 
    1721 00007bf0     1020          addk    1,a0
    1722 00007c00     0580          move    a0,@p1pins
         00007c10 00009fb0- 
    1723 00007c30     09e0          movi    [-100,0],a0
         00007c40 ff9c0000  
    1724 00007c60     09f6          movi    [-50,0],b6
         00007c70 ffce0000  
    1725 00007c90     574a          clr     a10
    1726 00007ca0     09f0          movi    DPLT_B_P,b0
         00007cb0 00000000! 
    1727 00007cd0     18ab          movk    5,a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   40

    1728 00007ce0     c014          jruc    xsbqdo_it
    1729                    
    1730 00007cf0           xsbqonrt        ;right
    1731 00007cf0     05a0          move    @p2pins,a0
         00007d00 00009fc0- 
    1732 00007d20     1020          addk    1,a0
    1733 00007d30     0580          move    a0,@p2pins
         00007d40 00009fc0- 
    1734 00007d60     09e0          movi    [399+101,0],a0
         00007d70 01f40000  
    1735 00007d90     09f6          movi    [399+50,0],b6
         00007da0 01c10000  
    1736 00007dc0     09ca          movi    400,a10
         00007dd0     0190  
    1737 00007de0     09f0          movi    DPLT_R_P,b0
         00007df0 00000000! 
    1738 00007e10     09cb          movi    -5,a11
         00007e20     fffb  
    1739                    
    1740 00007e30           xsbqdo_it
    1741 00007e30     098f          mmtm    sp,a0,a1
         00007e40     c000  
    1742 00007e50     0d5f          calla   BEGINOBJP
         00007e60 00000000! 
    1743 00007e80     09af          mmfm    sp,a0,a1
         00007e90     0003  
    1744 00007ea0     8309          move    a8,*a9,L
    1745                    
    1746 00007eb0     09c3          movi    1810h,a3
         00007ec0     1810  
    1747 00007ed0     4ed0          move    b6,a0
    1748 00007ee0     09e2          movi    PINHIM09,a2
         00007ef0 00000000! 
    1749 00007f10     0d5f          calla   BEGINOBJ
         00007f20 00000000! 
    1750 00007f40     b309          move    a8,*a9(32),L
         00007f50     0020  
    1751                    
    1752 00007f60     4d60          move    a11,a0
    1753                    
    1754 00007f70           xsbqzin
    1755 00007f70     8728          move    *a9,a8,L
    1756 00007f80     b50b          move    *a8(OXPOS),a11,W
         00007f90     0090  
    1757 00007fa0     494b          cmp     a10,a11
    1758 00007fb0     ca11          jrz     xsbqzin_done
    1759 00007fc0     400b          add     a0,a11
    1760 00007fd0     b168          move    a11,*a8(OXPOS),W
         00007fe0     0090  
    1761 00007ff0     b728          move    *a9(32),a8,L
         00008000     0020  
    1762 00008010     b50b          move    *a8(OXPOS),a11,W
         00008020     0090  
    1763 00008030     400b          add     a0,a11
    1764 00008040     b168          move    a11,*a8(OXPOS),W
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   41

         00008050     0090  
    1765 00008060                   PUSHP   a0
    1766 00008070                   SLEEPK  1
    1767 000080b0                   PULLP   a0
    1768 000080c0     c0ea          jruc    xsbqzin
    1769                    
    1770 000080d0           xsbqzin_done
    1771                    
    1772 000080d0                   PUSHP   a0
    1773 000080e0                   CREATE  PINHIM_ANIM_PID,xsbqflash_pin_txt
    1774                    
    1775 00008160                   PUSHP   a0
    1776 00008170                   SLEEP   TSEC*2
    1777 000081c0                   PULLP   a0
    1778 000081d0     0d5f          calla   KILL
         000081e0 00000000! 
    1779 00008200                   PULLP   a0
    1780                    
    1781 00008210           xsbqzout
    1782 00008210     8728          move    *a9,a8,L
    1783 00008220     b50b          move    *a8(OXPOS),a11,W
         00008230     0090  
    1784 00008240     0b4b          cmpi    -107,a11
         00008250     006a  
    1785 00008260     c414          jrlt    xsbqzout_done
    1786 00008270     0b4b          cmpi    500,a11
         00008280     fe0b  
    1787 00008290     c711          jrgt    xsbqzout_done
    1788 000082a0     440b          sub     a0,a11
    1789 000082b0     b168          move    a11,*a8(OXPOS),W
         000082c0     0090  
    1790 000082d0     b728          move    *a9(32),a8,L
         000082e0     0020  
    1791 000082f0     b50b          move    *a8(OXPOS),a11,W
         00008300     0090  
    1792 00008310     440b          sub     a0,a11
    1793 00008320     b168          move    a11,*a8(OXPOS),W
         00008330     0090  
    1794 00008340                   PUSHP   a0
    1795 00008350                   SLEEPK  1
    1796 00008390                   PULLP   a0
    1797 000083a0     c0e6          jruc    xsbqzout
    1798                    
    1799 000083b0           xsbqzout_done
    1800 000083b0     8720          move    *a9,a0,L
    1801 000083c0     0d5f          calla   DELOBJ
         000083d0 00000000! 
    1802 000083f0     b720          move    *a9(32),a0,L
         00008400     0020  
    1803 00008410     0d5f          calla   DELOBJ
         00008420 00000000! 
    1804                    
    1805 00008440           xsbqdie DIE
    1806                    
    1807                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   42

    1808 00008470           xsbqflash_pin_txt
    1809                    
    1810                            .ref    setup_back_anim
    1811                            .ref    ANIM_CROWD
    1812                                      
    1813 00008470     b728          move    *a9(32),a8,L
         00008480     0020  
    1814 00008490     18a9          movk    5,a9
    1815                    
    1816 000084a0           xsbqlpa PUSHP   a9
    1817                            .ref    PIN_FLASH_ANIM
    1818 000084b0     09e1          movi    PIN_FLASH_ANIM,a1
         000084c0 00000000! 
    1819 000084e0     0d5f          calla   setup_back_anim
         000084f0 00000000! 
    1820                    
    1821 00008510                   JSRP    ANIM_CROWD
    1822                    
    1823 00008580                   PULLP   a9
    1824 00008590     3e09          dsj     a9,xsbqlpa
    1825                    
    1826 000085a0                   DIE
    1827                    
    1828                    
    1829 000085d0            SUBRP  no_block_powerup_check
    1830 000085d0           dyvllp
    1831                            ;no no-block allowed if royal rumble.
    1832 000085d0     05ae          move    @royal_rumble,a14
         000085e0 00000000! 
    1833 00008600     cb4b          jrnz    dyvldie
    1834                    
    1835 00008610     576b          clr     a11
    1836 00008620                   PUPWAITSWITCH   BLOCK,dyvllp
    1837                    
    1838 00008770     09cb          movi    TSEC*2,a11
         00008780     006a  
    1839 00008790                   PUPWAITSWITCH   BLOCK,dyvllp
    1840 000088e0                   PUPWAITSWITCH   BLOCK,dyvllp
    1841                    
    1842 00008a30     24a8          sll     5,a8
    1843 00008a40     0b28          addi    p1powerup_request,a8
         00008a50 00009f70- 
    1844                    
    1845 00008a70     8709          move    *a8,a9,L
    1846 00008a80     0ba9          ori     BLOCKING_OFF,a9
         00008a90 00000001  
    1847 00008ab0     8328          move    a9,*a8,L
    1848                    
    1849 00008ac0           dyvldie DIE
    1850                    
    1851 00008af0            SUBRP  move_names_powerup_check
    1852 00008af0           gcidlp
    1853 00008af0     576b          clr     a11
    1854 00008b00                   PUPWAITSWITCH   PUNCH,gcidlp
    1855                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   43

    1856 00008c50     09cb          movi    TSEC*2,a11
         00008c60     006a  
    1857 00008c70                   PUPWAITSWITCH   PUNCH,gcidlp
    1858 00008dc0                   PUPWAITSWITCH   PUNCH,gcidlp
    1859 00008f10                   PUPWAITSWITCH   PUNCH,gcidlp
    1860                    
    1861 00009060     24a8          sll     5,a8
    1862 00009070     0b28          addi    p1powerup_request,a8
         00009080 00009f70- 
    1863                    
    1864 000090a0     8709          move    *a8,a9,L
    1865 000090b0     0ba9          ori     MOVE_NAMES_ON,a9
         000090c0 00000010  
    1866 000090e0     8328          move    a9,*a8,L
    1867                    
    1868 000090f0                   DIE
    1869                    
    1870                    
    1871                    
    1872 00009120            SUBRP  drone_meters_powerup_check
    1873                    
    1874                            ;only in one-player games
    1875 00009120     05ab          move    @PSTATUS2,a11
         00009130 00000000! 
    1876 00009150     0b4b          cmpi    3,a11
         00009160     fffc  
    1877 00009170     ca11          jrz     gacponep_only
    1878                    
    1879                            ;only in one-on-one games
    1880 00009180     05ae          move    @NUM_OPPS,a14
         00009190 00000000! 
    1881 000091b0     142e          dec     a14
    1882 000091c0     cb0c          jrnz    gacponep_only
    1883 000091d0           gacplp
    1884                    
    1885                    
    1886                    
    1887 000091d0     24a8          sll     5,a8
    1888 000091e0     0b28          addi    p1powerup_request,a8
         000091f0 00009f70- 
    1889                    
    1890 00009210     8709          move    *a8,a9,L
    1891 00009220     0ba9          ori     D_METERS_ON,a9
         00009230 00000020  
    1892 00009250     8328          move    a9,*a8,L
    1893 00009260     0589          move    a9,@drone_meters_on
         00009270 00000920- 
    1894                    
    1895 00009290           gacponep_only
    1896 00009290                   DIE
    1897                    
    1898                    
    1899 000092c0            SUBRP  hyper_match_powerup_check
    1900 000092c0           zirylp
    1901 000092c0     576b          clr     a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   44

    1902 000092d0                   PUPWAITSWITCH   LEFT,zirylp
    1903                    
    1904 00009420     09cb          movi    TSEC*2,a11
         00009430     006a  
    1905 00009440                   PUPWAITSWITCH   PUNCH,zirylp
    1906 00009590                   PUPWAITSWITCH   PUNCH,zirylp
    1907 000096e0                   PUPWAITSWITCH   BLOCK,zirylp
    1908                    
    1909 00009830     24a8          sll     5,a8
    1910 00009840     0b28          addi    p1powerup_request,a8
         00009850 00009f70- 
    1911                    
    1912 00009870     8709          move    *a8,a9,L
    1913 00009880     0ba9          ori     HYPER_MATCH_ON,a9       ; Disabled for now
         00009890 00000040  
    1914 000098b0     8328          move    a9,*a8,L
    1915                    
    1916 000098c0                   DIE
    1917                    
    1918                    
    1919 000098f0            SUBRP  combos_powerup_check
    1920 000098f0           gpsslp
    1921 000098f0     576b          clr     a11
    1922 00009900                   PUPWAITSWITCH   RIGHT,gpsslp
    1923                    
    1924 00009a50     09cb          movi    TSEC*2,a11
         00009a60     006a  
    1925 00009a70                   PUPWAITSWITCH   PUNCH,gpsslp
    1926 00009bc0                   PUPWAITSWITCH   SUPERP,gpsslp
    1927                    
    1928 00009d10     24a8          sll     5,a8
    1929 00009d20     0b28          addi    p1powerup_request,a8
         00009d30 00009f70- 
    1930                    
    1931 00009d50     8709          move    *a8,a9,L
    1932 00009d60     0ba9          ori     COMBOS_ON,a9
         00009d70 00000002  
    1933 00009d90     8328          move    a9,*a8,L
    1934                    
    1935 00009da0                   DIE
    1936                    
    1937                    
    1938 00009dd0            SUBRP  ring_out_powerup_check
    1939 00009dd0           joiwlp
    1940 00009dd0     576b          clr     a11
    1941 00009de0                   PUPWAITSWITCH   DOWN,joiwlp
    1942                    
    1943 00009f30     09cb          movi    TSEC*2,a11
         00009f40     006a  
    1944 00009f50                   PUPWAITSWITCH   PUNCH,joiwlp
    1945 0000a0a0                   PUPWAITSWITCH   KICK,joiwlp
    1946 0000a1f0                   PUPWAITSWITCH   BLOCK,joiwlp
    1947                    
    1948 0000a340     24a8          sll     5,a8
    1949 0000a350     0b28          addi    p1powerup_request,a8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   45

         0000a360 00009f70- 
    1950                    
    1951 0000a380     8709          move    *a8,a9,L
    1952 0000a390     0ba9          ori     RING_OUTS_ON,a9
         0000a3a0 00000004  
    1953 0000a3c0     8328          move    a9,*a8,L
    1954                    
    1955 0000a3d0                   DIE
    1956                    
    1957                    
    1958 0000a400            SUBRP  no_ring_powerup_check
    1959 0000a400           yonqlp
    1960 0000a400     576b          clr     a11
    1961 0000a410                   PUPWAITSWITCH   UP,yonqlp
    1962                    
    1963 0000a560     09cb          movi    TSEC*2,a11
         0000a570     006a  
    1964 0000a580                   PUPWAITSWITCH   RIGHT,yonqlp
    1965 0000a6d0                   PUPWAITSWITCH   DOWN,yonqlp
    1966 0000a820                   PUPWAITSWITCH   LEFT,yonqlp
    1967                    
    1968 0000a970     24a8          sll     5,a8
    1969 0000a980     0b28          addi    p1powerup_request,a8
         0000a990 00009f70- 
    1970                    
    1971 0000a9b0     8709          move    *a8,a9,L
    1972 0000a9c0     0ba9          ori     NO_RING,a9
         0000a9d0 00000008  
    1973 0000a9f0     8328          move    a9,*a8,L
    1974                    
    1975 0000aa00                   DIE
    1976                    
    1977                    
    1978                    
    1979 0000aa30                   BSSX    buddy_mode_checked,16
    1980                    
    1981 0000aa30            SUBRP  buddy_mode_powerup_check
    1982                    
    1983 0000aa30           cznclp  ;no buddy mode allowed if royal rumble.
    1984 0000aa30     05ae          move    @royal_rumble,a14
         0000aa40 00000000! 
    1985 0000aa60     cb7d          jrnz    czncdie
    1986                    
    1987                            ;clear the too late flag
    1988 0000aa70     57ce          clr     a14
    1989 0000aa80     058e          move    a14,@buddy_mode_checked
         0000aa90 0000a010- 
    1990                    
    1991 0000aab0     576b          clr     a11
    1992 0000aac0                   PUPWAITSWITCH   BLOCK,cznclp
    1993                    
    1994 0000ac10     09cb          movi    TSEC*2,a11
         0000ac20     006a  
    1995 0000ac30                   PUPWAITSWITCH   BLOCK,cznclp
    1996 0000ad80                   PUPWAITSWITCH   BLOCK,cznclp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   46

    1997 0000aed0                   PUPWAITSWITCH   BLOCK,cznclp
    1998 0000b020                   PUPWAITSWITCH   BLOCK,cznclp
    1999                    
    2000                            ;too late?
    2001 0000b170     05ae          move    @buddy_mode_checked,a14
         0000b180 0000a010- 
    2002 0000b1a0     cb09          jrnz    czncdie
    2003                    
    2004 0000b1b0     24a8          sll     5,a8
    2005 0000b1c0     0b28          addi    p1powerup_request,a8
         0000b1d0 00009f70- 
    2006                    
    2007 0000b1f0     8709          move    *a8,a9,L
    2008 0000b200     0ba9          ori     BUDDY_MODE,a9
         0000b210 00000080  
    2009 0000b230     8328          move    a9,*a8,L
    2010                    
    2011 0000b240           czncdie DIE
    2012                    
    2013                    
    2014 0000b270            SUBRP  player_powerup_checker
    2015                    
    2016 0000b270                   CREATE  PU_CHECK_PID,no_block_powerup_check
    2017 0000b300                   CREATE  PU_CHECK_PID,move_names_powerup_check
    2018 0000b390                   CREATE  PU_CHECK_PID,drone_meters_powerup_check
    2019 0000b420                   CREATE  PU_CHECK_PID,hyper_match_powerup_check
    2020 0000b4b0                   CREATE  PU_CHECK_PID,combos_powerup_check
    2021 0000b540                   CREATE  PU_CHECK_PID,ring_out_powerup_check
    2022 0000b5d0                   CREATE  PU_CHECK_PID,buddy_mode_powerup_check
    2023                    
    2024 0000b660                   DIE
    2025                    
    2026                    
    2027 0000b690            SUBR   powerup_check
    2028                    
    2029 0000b690     05ae          move    @do_show_options,a14
         0000b6a0 000008d0- 
    2030 0000b6c0     ca2f          jrz     loldpowerup_check_die
    2031                    
    2032 0000b6d0     5708          clr     a8
    2033 0000b6e0     0788          move    a8,@p1powerup_request,L
         0000b6f0 00009f70- 
    2034 0000b710     0788          move    a8,@p2powerup_request,L
         0000b720 00009f90- 
    2035                    
    2036 0000b740     0588          move    a8,@blocking_off
         0000b750 000008e0- 
    2037 0000b770     0588          move    a8,@ring_out_on
         0000b780 000008f0- 
    2038 0000b7a0     0588          move    a8,@move_names_on
         0000b7b0 00000910- 
    2039 0000b7d0     0588          move    a8,@drone_meters_on
         0000b7e0 00000920- 
    2040 0000b800     0588          move    a8,@instant_combos_on
         0000b810 00000930- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   47

    2041 0000b830     0588          move    a8,@hyper_speed_on
         0000b840 00000940- 
    2042 0000b860     0588          move    a8,@no_ring_on
         0000b870 00000950- 
    2043                    
    2044                            .if POWERUP_CODE_ON
    2045                    
    2046 0000b890                   CREATE  PU_CHECK_PID,player_powerup_checker
    2047                    
    2048 0000b920     1828          movk    1,a8
    2049 0000b930                   CREATE  PU_CHECK_PID,player_powerup_checker
    2050                    
    2051 0000b9c0           loldpowerup_check_die
    2052                            .endif
    2053                    
    2054 0000b9c0                   DIE
    2055                    
    2056                    
    2057 0000b9f0            SUBR   get_powerups
    2058 0000b9f0     07a9          move    @p1powerup_request,a9,L         ; Player 1 powerups
         0000ba00 00009f70- 
    2059 0000ba20     07aa          move    @p2powerup_request,a10,L        ; Player 2 powerups
         0000ba30 00009f90- 
    2060 0000ba50     4d4b          move    a10,a11                         ; Save Player 2 powerups
    2061 0000ba60     512b          and     a9,a11                          ; Get h/h only powerups
    2062 0000ba70     0b8b          andi    BOTH_P_MASK,a11
         0000ba80 ffffff30  
    2063 0000baa0     0b89          andni   BOTH_P_MASK,a9
         0000bab0 000000cf  
    2064 0000bad0     0b8a          andni   BOTH_P_MASK,a10
         0000bae0 000000cf  
    2065 0000bb00     5569          or      a11,a9
    2066 0000bb10     556a          or      a11,a10
    2067 0000bb20     0789          move    a9,@p1powerup_request,L
         0000bb30 00009f70- 
    2068 0000bb50     078a          move    a10,@p2powerup_request,L
         0000bb60 00009f90- 
    2069 0000bb80     552a          or      a9,a10
    2070 0000bb90     4d28          move    a9,a8
    2071 0000bba0     0b88          andi    BLOCKING_OFF,a8
         0000bbb0 fffffffe  
    2072 0000bbd0     ca03          jrz     sbkqblocking_on
    2073 0000bbe0     09c8          movi    2020h,a8
         0000bbf0     2020  
    2074 0000bc00     c001          jruc    sbkqset_blocking
    2075 0000bc10           sbkqblocking_on
    2076 0000bc10     5708          clr     a8
    2077 0000bc20           sbkqset_blocking
    2078 0000bc20     0588          move    a8,@blocking_off
         0000bc30 000008e0- 
    2079                    
    2080 0000bc50     4d28          move    a9,a8
    2081 0000bc60     0b88          andi    COMBOS_ON,a8
         0000bc70 fffffffd  
    2082 0000bc90     0588          move    a8,@instant_combos_on
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   48

         0000bca0 00000930- 
    2083                    
    2084 0000bcc0     4d28          move    a9,a8
    2085 0000bcd0     0b88          andi    RING_OUTS_ON,a8
         0000bce0 fffffffb  
    2086 0000bd00     0588          move    a8,@ring_out_on
         0000bd10 000008f0- 
    2087                    
    2088 0000bd30     4d28          move    a9,a8
    2089 0000bd40     0b88          andi    NO_RING,a8
         0000bd50 fffffff7  
    2090 0000bd70     0588          move    a8,@no_ring_on
         0000bd80 00000950- 
    2091                    
    2092                            ;this one is done earlier in the wrestle code!
    2093                    
    2094 0000bda0     4d28          move    a9,a8
    2095 0000bdb0     0b88          andi    HYPER_MATCH_ON,a8
         0000bdc0 ffffffbf  
    2096 0000bde0     ca03          jrz     sbkqhyper_off
    2097 0000bdf0     09c8          movi    1,a8
         0000be00     0001  
    2098 0000be10     c001          jruc    sbkqset_hyper
    2099 0000be20           sbkqhyper_off
    2100 0000be20     5708          clr     a8
    2101 0000be30           sbkqset_hyper
    2102 0000be30     0588          move    a8,@hyper_speed_on
         0000be40 00000940- 
    2103                    
    2104 0000be60     4d48          move    a10,a8
    2105 0000be70     0b88          andi    D_METERS_ON,a8
         0000be80 ffffffdf  
    2106 0000bea0     0588          move    a8,@drone_meters_on
         0000beb0 00000920- 
    2107                    
    2108 0000bed0     0960          rets
    2109                    
    2110                    
    2111                    
    2112 0000bee0            SUBR   show_options
    2113                            .if POWERUP_CODE_ON
    2114                    
    2115 0000bee0     05a9          move    @do_show_options,a9
         0000bef0 000008d0- 
    2116 0000bf10     cb03          jrnz    ogjmok_to_show_options
    2117 0000bf20                   DIE
    2118 0000bf50           ogjmok_to_show_options
    2119 0000bf50     0d3f          callr   get_powerups
         0000bf60     ffa8  
    2120                    
    2121 0000bf70     5708          clr     a8
    2122 0000bf80     0588          move    a8,@show_options_die
         0000bf90 000008c0- 
    2123                    
    2124 0000bfb0                   CREATE0 show_player_options
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   49

    2125                    
    2126 0000c020     1828          movk    1,a8
    2127 0000c030                   CREATE0 show_player_options
    2128                    
    2129                            .ref    SET_FLASHING
    2130                    
    2131 0000c0a0     05ae          move    @instant_combos_on,a14
         0000c0b0 00000930- 
    2132 0000c0d0     ca08          jrz     ogjmno
    2133                    
    2134 0000c0e0     574a          clr     a10
    2135 0000c0f0     0d5f          calla   SET_FLASHING
         0000c100 00000000! 
    2136 0000c120     182a          movk    1,a10
    2137 0000c130     0d5f          calla   SET_FLASHING
         0000c140 00000000! 
    2138 0000c160           ogjmno
    2139                    
    2140 0000c160                   SLEEP   TSEC
    2141                    
    2142 0000c1b0     09c9          movi    TSEC*2,a9
         0000c1c0     006a  
    2143 0000c1d0           ogjmshow_opt_wait
    2144 0000c1d0                   SLEEPK  1
    2145 0000c210     0d5f          calla   get_all_buttons_cur
         0000c220 00000000! 
    2146 0000c240     cb01          jrnz    ogjmshow_opt_done
    2147 0000c250     3d29          dsjs    a9,ogjmshow_opt_wait
    2148 0000c260           ogjmshow_opt_done
    2149 0000c260     1828          movk    1,a8
    2150 0000c270     0588          move    a8,@show_options_die
         0000c280 000008c0- 
    2151                    
    2152 0000c2a0     09c0          movi    RPUBAROID,a0
         0000c2b0     0e11  
    2153 0000c2c0     0d5f          calla   obj_del1c
         0000c2d0 00000000! 
    2154 0000c2f0     09c0          movi    LPUBAROID,a0
         0000c300     0e10  
    2155 0000c310     0d5f          calla   obj_del1c
         0000c320 00000000! 
    2156                    
    2157 0000c340     5708          clr     a8
    2158 0000c350     0588          move    a8,@do_show_options
         0000c360 000008d0- 
    2159                    
    2160                            .endif
    2161 0000c380                   DIE
    2162                    
    2163                    
    2164 0000c3b0            SUBRP  pu_bar_text
    2165 0000c3b0 00000000!         .long   NOBLOCKA        ; Blocking off
    2166 0000c3d0 00000000!         .long   INSTCOMB        ; Combos on
    2167 0000c3f0 00000000!         .long   RINGOUT         ; Ring outs on
    2168 0000c410 00000000!         .long   SANSRING        ; No Ring
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   50

    2169 0000c430 00000000!         .long   MOVNAMES        ; Move names off
    2170 0000c450 00000000!         .long   DRONMETR        ; Drone meters off
    2171 0000c470 00000000!         .long   HYPERSPD        ; Hyper match on
    2172 0000c490 00000000!         .long   BUDDY           ; Buddy mode on
    2173                    
    2174                    
    2175 0000c4b0            SUBRP  move_pu_bars_on
    2176 0000c4b0                   PUSHP   a8,a9,a10,a11
    2177                    
    2178 0000c4d0     09cb          movi    PU_LEND_X,a11           ; Amount we gonna move em
         0000c4e0     007d  
    2179                    
    2180 0000c4f0     09c9          movi    LPUBAROID,a9            ; Player 1 pu bar objects
         0000c500     0e10  
    2181 0000c510     1b2a          movk    PU_BAR_VELOCITY,a10     ; Player 1 bar velocity
    2182 0000c520     4d08          move    a8,a8                   ; Are we player 1?
    2183 0000c530     ca03          jrz     xtxcp1_pu_bars          ; br = yes
    2184 0000c540     09c9          movi    RPUBAROID,a9            ; Player 2 pu bar objects
         0000c550     0e11  
    2185 0000c560     03aa          neg     a10                     ; Player 2 bar velocity
    2186 0000c570           xtxcp1_pu_bars
    2187 0000c570     09ee          movi    OBJLST,a14              ; Top of object list
         0000c580 00000000! 
    2188 0000c5a0           xtxcmove_lp
    2189 0000c5a0     87ce          move    *a14,a14,L              ; Get object pointer
    2190 0000c5b0     ca0a          jrz     xtxclist_end            ; List end? - br = yes
    2191 0000c5c0     b5c1          move    *a14(OID),a1            ; Get object ID
         0000c5d0     0190  
    2192 0000c5e0     4921          cmp     a9,a1                   ; Is this one I'm a lookin fer
    2193 0000c5f0     cbfa          jrnz    xtxcmove_lp
    2194                    
    2195 0000c600     b5c1          move    *a14(OXPOS),a1          ; Get current X position
         0000c610     0090  
    2196 0000c620     4141          add     a10,a1                  ; Add velocity
    2197 0000c630     b02e          move    a1,*a14(OXPOS)          ; Write it back
         0000c640     0090  
    2198 0000c650     c0f4          jruc    xtxcmove_lp             ; Go chck next
    2199                    
    2200 0000c660           xtxclist_end
    2201 0000c660                   SLEEPK  1                       ; Show em
    2202                    
    2203 0000c6a0     172b          subk    PU_BAR_VELOCITY,a11     ; Are we done?
    2204 0000c6b0     cbeb          jrnz    xtxcp1_pu_bars          ; br = no
    2205                    
    2206 0000c6c0                   PULLP   a8,a9,a10,a11
    2207 0000c6e0                   RETP
    2208                    
    2209                    
    2210                    
    2211 0000c710            SUBRP  show_player_options
    2212 0000c710     05a9          move    @PSTATUS2,a9
         0000c720 00000000! 
    2213 0000c740     4b09          btst    a8,a9
    2214 0000c750     ca74          jrz     vqypspo_die
    2215                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   51

    2216 0000c760           fini_wait
    2217 0000c760     05ae          move    @in_finish_move,a14     ; Are we doing a finishing move ?
         0000c770 00000000! 
    2218 0000c790     ca05          jrz     fini_done               ; br = no
    2219 0000c7a0                   SLEEPK  10
    2220 0000c7e0     c0f7          jruc    fini_wait
    2221 0000c7f0           fini_done
    2222                    
    2223 0000c7f0     09eb          movi    [PU_START_Y,0],a11
         0000c800 00d20000  
    2224                    
    2225 0000c820     4d09          move    a8,a9
    2226 0000c830     24a9          sll     5,a9
    2227 0000c840     0b29          addi    p1powerup_request,a9
         0000c850 00009f70- 
    2228 0000c870     8729          move    *a9,a9,L
    2229                    
    2230 0000c880     18ea          movk    (NUM_POWERUPS-1),a10
    2231 0000c890           vqyppu_request
    2232 0000c890     4b49          btst    a10,a9
    2233 0000c8a0     ca4e          jrz     vqypno_pu
    2234                    
    2235 0000c8b0     5600          clr     a0
    2236 0000c8c0     09f0          movi    DPLT_B_P,b0
         0000c8d0 00000000! 
    2237 0000c8f0     4d08          move    a8,a8
    2238 0000c900     ca06          jrz     vqypp1_xpos
    2239 0000c910     09f0          movi    DPLT_R_P,b0
         0000c920 00000000! 
    2240 0000c940     09e0          movi    [399,0],a0
         0000c950 018f0000  
    2241 0000c970           vqypp1_xpos
    2242 0000c970     4d61          move    a11,a1
    2243 0000c980     09e2          movi    BONUSBAR,a2
         0000c990 00000000! 
    2244 0000c9b0     09c3          movi    1800h,a3
         0000c9c0     1800  
    2245 0000c9d0     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4
         0000c9e0 0000a102  
    2246 0000ca00     4d08          move    a8,a8
    2247 0000ca10     cb03          jrnz    vqypno_hflip
    2248 0000ca20     0ba4          ori     M_FLIPH,a4
         0000ca30 00000010  
    2249 0000ca50           vqypno_hflip
    2250 0000ca50     09c5          movi    LPUBAROID,a5
         0000ca60     0e10  
    2251 0000ca70     4d08          move    a8,a8
    2252 0000ca80     ca02          jrz     vqypp1_boid
    2253 0000ca90     09c5          movi    RPUBAROID,a5
         0000caa0     0e11  
    2254 0000cab0           vqypp1_boid
    2255 0000cab0     56c6          clr     a6
    2256 0000cac0     56e7          clr     a7
    2257 0000cad0                   PUSH    a8
    2258 0000cae0     0d5f          calla   BEGINOBJP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   52

         0000caf0 00000000! 
    2259 0000cb10                   PULL    a8
    2260                    
    2261 0000cb20     09e0          movi    [PU_LTEXT_XPOS,0],a0
         0000cb30 ffc20000  
    2262 0000cb50     4d08          move    a8,a8
    2263 0000cb60     ca03          jrz     vqyplpu_p1_text
    2264 0000cb70     09e0          movi    [PU_RTEXT_XPOS,0],a0
         0000cb80 01ce0000  
    2265 0000cba0           vqyplpu_p1_text
    2266 0000cba0     4d61          move    a11,a1
    2267 0000cbb0     4d42          move    a10,a2
    2268 0000cbc0     24a2          sll     5,a2
    2269 0000cbd0     0b22          addi    pu_bar_text,a2
         0000cbe0 0000c3b0' 
    2270 0000cc00     8642          move    *a2,a2,L
    2271 0000cc10     09c3          movi    1810h,a3
         0000cc20     1810  
    2272 0000cc30     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4
         0000cc40 0000a102  
    2273 0000cc60     09c5          movi    LPUBAROID,a5
         0000cc70     0e10  
    2274 0000cc80     4d08          move    a8,a8
    2275 0000cc90     ca02          jrz     vqypp1_toid
    2276 0000cca0     09c5          movi    RPUBAROID,a5
         0000ccb0     0e11  
    2277 0000ccc0           vqypp1_toid
    2278 0000ccc0     56c6          clr     a6
    2279 0000ccd0     56e7          clr     a7
    2280 0000cce0     09f0          movi    WINFONT,b0
         0000ccf0 00000000! 
    2281 0000cd10                   PUSH    a8
    2282 0000cd20     0d5f          calla   BEGINOBJP
         0000cd30 00000000! 
    2283 0000cd50                   PULL    a8
    2284                            
    2285 0000cd60     0b2b          addi    [PU_BAR_YSPACE,0],a11
         0000cd70 fff10000  
    2286 0000cd90           vqypno_pu
    2287 0000cd90     142a          subk    1,a10
    2288 0000cda0     cfae          jrnn    vqyppu_request
    2289                    
    2290 0000cdb0                   JSRP    move_pu_bars_on
    2291                    
    2292 0000ce20           vqypwait_die
    2293 0000ce20                   SLEEPK  1
    2294 0000ce60     05ae          move    @show_options_die,a14
         0000ce70 000008c0- 
    2295 0000ce90     caf8          jrz     vqypwait_die
    2296                    
    2297 0000cea0           vqypspo_die
    2298 0000cea0                   DIE
    2299                    
    2300                    
    2301              00b0  MYOBJ_REC_SIZE  .equ    (16*11)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   53

    2302              00a0  SIZEOF_JAM_STR  .equ    (16*10)
    2303                    
    2304                    MYOBJECT        .macro  x,y,z,img,ctrl,id,xv,yv
    2305                            .word   :x:,:y:,:z:
    2306                            .long   :img:
    2307                            .word   :ctrl:,:id:
    2308                            .long   :xv:,:yv:
    2309                            .endm
    2310                    
    2311 0000ced0            SUBRP  BLACKOUT
    2312 0000ced0     0190          .word   400,256,0,0
    2313 0000cf10 02000000          .long   2000000h
    2314 0000cf30     4000          .word   04000h
    2315 0000cf40                   .even
    2316                    
    2317                            .ref    ogmd10_ascii
    2318                            .ref    wsf14_ascii
    2319                            .ref    print_string_C2
    2320                            .ref    RNDRNG0
    2321                            .ref    setup_message
    2322                            .ref    mess_objid
    2323                            .ref    WSF_W_P
    2324                    
    2325 0000cf40            SUBRP  opqqmk3_tip_prompt1
    2326 0000cf40                   JAM_STR wsf14_ascii,10,0,200,30,WSF_R_P,print_string_C2
    2327 0000cfe0       43          .string "CONGRATULATIONS!!!",0
    2328 0000d080                   .even
    2329 0000d080            SUBRP  opqqmk3_tip_prompt2
    2330 0000d080                   JAM_STR ogmd10_ascii,10,0,200,70,SGMD8GLD,print_string_C2
    2331 0000d120       59          .string "YOU'VE ACHIEVED A LEVEL OF",0
    2332 0000d200                   .even
    2333 0000d200            SUBRP  opqqmk3_tip_prompt4
    2334 0000d200                   JAM_STR ogmd10_ascii,10,0,200,85,SGMD8GLD,print_string_C2
    2335 0000d2a0       50          .string "PERFORMANCE THAT ENTITLES YOU",0
    2336 0000d390                   .even
    2337 0000d390            SUBRP  opqqmk3_tip_prompt5
    2338 0000d390                   JAM_STR ogmd10_ascii,10,0,200,100,SGMD8GLD,print_string_C2
    2339 0000d430       54          .string "TO A TIP FOR MORTAL KOMBAT 3",0
    2340 0000d520                   .even
    2341                    
    2342 0000d520            SUBRP  opqqmk3_tip1_str1
    2343 0000d520                   JAM_STR ogmd10_ascii,10,0,200,130,SGMD8BLU,print_string_C2
    2344 0000d5c0       27          .byte   027h,03ch,007h,035h,00eh,007h,071h,02bh
    2345 0000d600       ea          .byte   0eah,0e6h,01ch,0a0h,0a2h,06bh,0d2h,04dh
    2346 0000d640       60          .byte   060h,0d3h,066h,050h,0a7h,026h,000h
    2347 0000d680                   .even
    2348 0000d680            SUBRP  opqqmk3_tip1_str2
    2349 0000d680                   JAM_STR ogmd10_ascii,10,0,200,145,SGMD8BLU,print_string_C2
    2350 0000d720       27          .byte   027h,0dch,0b6h,030h,0aeh,0beh,068h,040h
    2351 0000d760       c2          .byte   0c2h,0a5h,019h,0d4h,070h,060h,0beh,0e2h
    2352 0000d7a0       d8          .byte   0d8h,09ah,081h,008h,000h
    2353 0000d7d0                   .even
    2354 0000d7d0            SUBRP  opqqmk3_tip1_str3
    2355 0000d7d0                   JAM_STR ogmd10_ascii,10,0,200,160,SGMD8BLU,print_string_C2
    2356 0000d870       74          .byte   074h,06ch,092h,0aah,0d8h,006h,0a7h,029h
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   54

    2357 0000d8b0       d6          .byte   0d6h,0f6h,06ch,03eh,000h
    2358 0000d8e0                   .even
    2359                    
    2360                    
    2361 0000d8e0            SUBRP  opqqmk3_tip2_str1
    2362 0000d8e0                   JAM_STR ogmd10_ascii,10,0,200,130,SGMD8BLU,print_string_C2
    2363 0000d980       ea          .byte   0eah,01bh,0d4h,038h,01ch,0c4h,0adh,0a8h
    2364 0000d9c0       9b          .byte   09bh,073h,080h,08ah,0aeh,049h,037h,081h
    2365 0000da00       f9          .byte   0f9h,0d6h,0e6h,00ch,000h
    2366 0000da30                   .even
    2367 0000da30            SUBRP  opqqmk3_tip2_str2
    2368 0000da30                   JAM_STR ogmd10_ascii,10,0,200,145,SGMD8BLU,print_string_C2
    2369 0000dad0       75          .byte   075h,06ah,006h,024h,05ch,09ah,0c1h,068h
    2370 0000db10       b6          .byte   0b6h,030h,01eh,0d4h,070h,050h,0dbh,0f3h
    2371 0000db50       1b          .byte   01bh,0c0h,06fh,020h,002h
    2372 0000db80                   .even
    2373 0000db80            SUBRP  opqqmk3_tip2_str3
    2374 0000db80                   JAM_STR ogmd10_ascii,10,0,200,160,SGMD8BLU,print_string_C2
    2375 0000dc20       a9          .byte   0a9h,05ah,096h,0e6h,01bh,09ch,0a6h,058h
    2376 0000dc60       db          .byte   0dbh,0b3h,0f9h,000h
    2377 0000dc80                   .even
    2378                    
    2379                    
    2380                    
    2381 0000dc80            SUBRP  opqqmk_code1_1
    2382 0000dc80     0081          .word   127+2+(24*0),179,4010h  ;x,y,z
    2383 0000dcb0 00000000!         .long   I_GORO  ;Image
    2384 0000dcd0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2385 0000dce0     6000          .word   CLSMK3
    2386 0000dcf0 00000000          .long   0,0
    2387 0000dd30            SUBRP  opqqmk_code1_2
    2388 0000dd30     0099          .word   127+2+(24*1),179,4010h  ;x,y,z
    2389 0000dd60 00000000!         .long   I_SHOKAHN               ;Image
    2390 0000dd80     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2391 0000dd90     6000          .word   CLSMK3
    2392 0000dda0 00000000          .long   0,0
    2393 0000dde0            SUBRP  opqqmk_code1_3
    2394 0000dde0     00b1          .word   127+2+(24*2),179,4010h  ;x,y,z
    2395 0000de10 00000000!         .long   I_SHOKAHN       ;Image
    2396 0000de30     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2397 0000de40     6000          .word   CLSMK3
    2398 0000de50 00000000          .long   0,0
    2399 0000de90            SUBRP  opqqmk_code1_4
    2400 0000de90     00c9          .word   127+2+(24*3),179,4010h  ;x,y,z
    2401 0000dec0 00000000!         .long   I_QUESTION      ;Image
    2402 0000dee0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2403 0000def0     6000          .word   CLSMK3
    2404 0000df00 00000000          .long   0,0
    2405 0000df40            SUBRP  opqqmk_code1_5
    2406 0000df40     00e1          .word   127+2+(24*4),179,4010h  ;x,y,z
    2407 0000df70 00000000!         .long   I_YINYANG       ;Image
    2408 0000df90     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2409 0000dfa0     6000          .word   CLSMK3
    2410 0000dfb0 00000000          .long   0,0
    2411 0000dff0            SUBRP  opqqmk_code1_6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   55

    2412 0000dff0     00f9          .word   127+2+(24*5),179,4010h  ;x,y,z
    2413 0000e020 00000000!         .long   I_YINYANG       ;Image
    2414 0000e040     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2415 0000e050     6000          .word   CLSMK3
    2416 0000e060 00000000          .long   0,0
    2417                    
    2418                    
    2419                    
    2420 0000e0a0            SUBRP  opqqmk_code2_1
    2421 0000e0a0     0081          .word   127+2+(24*0),179,4010h  ;x,y,z
    2422 0000e0d0 00000000!         .long   I_QUESTION      ;Image
    2423 0000e0f0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2424 0000e100     6000          .word   CLSMK3
    2425 0000e110 00000000          .long   0,0
    2426 0000e150            SUBRP  opqqmk_code2_2
    2427 0000e150     0099          .word   127+2+(24*1),179,4010h  ;x,y,z
    2428 0000e180 00000000!         .long   I_GORO          ;Image
    2429 0000e1a0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2430 0000e1b0     6000          .word   CLSMK3
    2431 0000e1c0 00000000          .long   0,0
    2432 0000e200            SUBRP  opqqmk_code2_3
    2433 0000e200     00b1          .word   127+2+(24*2),179,4010h  ;x,y,z
    2434 0000e230 00000000!         .long   I_GORO          ;Image
    2435 0000e250     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2436 0000e260     6000          .word   CLSMK3
    2437 0000e270 00000000          .long   0,0
    2438 0000e2b0            SUBRP  opqqmk_code2_4
    2439 0000e2b0     00c9          .word   127+2+(24*3),179,4010h  ;x,y,z
    2440 0000e2e0 00000000!         .long   I_QUESTION      ;Image
    2441 0000e300     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2442 0000e310     6000          .word   CLSMK3
    2443 0000e320 00000000          .long   0,0
    2444 0000e360            SUBRP  opqqmk_code2_5
    2445 0000e360     00e1          .word   127+2+(24*4),179,4010h  ;x,y,z
    2446 0000e390 00000000!         .long   I_GORO          ;Image
    2447 0000e3b0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2448 0000e3c0     6000          .word   CLSMK3
    2449 0000e3d0 00000000          .long   0,0
    2450 0000e410            SUBRP  opqqmk_code2_6
    2451 0000e410     00f9          .word   127+2+(24*5),179,4010h  ;x,y,z
    2452 0000e440 00000000!         .long   I_GORO          ;Image
    2453 0000e460     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2454 0000e470     6000          .word   CLSMK3
    2455 0000e480 00000000          .long   0,0
    2456                    
    2457 0000e4c0            SUBRP  opqqmk_code_frame
    2458 0000e4c0     007f          .word   127,177,4000h   ;x,y,z
    2459 0000e4f0 00000000!         .long   BOX2            ;Image
    2460 0000e510     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2461 0000e520     6000          .word   CLSMK3
    2462 0000e530 00000000          .long   0,0
    2463                    
    2464 0000e570            SUBRP  opqqmk_code_tbl1
    2465 0000e570 0000dc80'         .long   opqqmk_code1_1
    2466 0000e590 0000dd30'         .long   opqqmk_code1_2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   56

    2467 0000e5b0 0000dde0'         .long   opqqmk_code1_3
    2468 0000e5d0 0000de90'         .long   opqqmk_code1_4
    2469 0000e5f0 0000df40'         .long   opqqmk_code1_5
    2470 0000e610 0000dff0'         .long   opqqmk_code1_6
    2471 0000e630 0000e4c0'         .long   opqqmk_code_frame
    2472 0000e650 00000000          .long   0
    2473                    
    2474 0000e670            SUBRP  opqqmk_code_tbl2
    2475 0000e670 0000e0a0'         .long   opqqmk_code2_1
    2476 0000e690 0000e150'         .long   opqqmk_code2_2
    2477 0000e6b0 0000e200'         .long   opqqmk_code2_3
    2478 0000e6d0 0000e2b0'         .long   opqqmk_code2_4
    2479 0000e6f0 0000e360'         .long   opqqmk_code2_5
    2480 0000e710 0000e410'         .long   opqqmk_code2_6
    2481 0000e730 0000e4c0'         .long   opqqmk_code_frame
    2482 0000e750 00000000          .long   0
    2483                    
    2484 0000e770            SUBRP  opqqmk3_tip1_str_tbl
    2485 0000e770 0000d520'         .long   opqqmk3_tip1_str1
    2486 0000e790 0000d680'         .long   opqqmk3_tip1_str2
    2487 0000e7b0 0000d7d0'         .long   opqqmk3_tip1_str3
    2488 0000e7d0 00000000          .long   0
    2489 0000e7f0 0000e570'         .long   opqqmk_code_tbl1
    2490                            
    2491 0000e810            SUBRP  opqqmk3_tip2_str_tbl
    2492 0000e810 0000d8e0'         .long   opqqmk3_tip2_str1
    2493 0000e830 0000da30'         .long   opqqmk3_tip2_str2
    2494 0000e850 0000db80'         .long   opqqmk3_tip2_str3
    2495 0000e870 00000000          .long   0
    2496 0000e890 0000e670'         .long   opqqmk_code_tbl2
    2497                    
    2498                    
    2499 0000e8b0            SUBRP  opqqmk3_tip_str_tbl
    2500 0000e8b0 0000e770'         .long   opqqmk3_tip1_str_tbl
    2501 0000e8d0 0000e810'         .long   opqqmk3_tip2_str_tbl
    2502                    
    2503 0000e8f0            SUBRP  opqqmk3_tip_prompt_str_tbl
    2504 0000e8f0 0000cf40'         .long   opqqmk3_tip_prompt1
    2505 0000e910 0000d080'         .long   opqqmk3_tip_prompt2
    2506 0000e930 0000d200'         .long   opqqmk3_tip_prompt4
    2507 0000e950 0000d390'         .long   opqqmk3_tip_prompt5
    2508 0000e970 00000000          .long   0
    2509                    
    2510 0000a020                   .bss    resume,16
    2511                    
    2512 0000e990            SUBRP  suspend_game
    2513 0000e990           opqqlp
    2514 0000e990     05aa          move    @resume,a10
         0000e9a0 0000a020- 
    2515 0000e9c0     cb07          jrnz    opqqok_to_resume
    2516 0000e9d0                   SLEEPK  1
    2517 0000ea10     0d3f          callr   suspend_all
         0000ea20     f7a1  
    2518 0000ea30     c0f5          jruc    opqqlp
    2519 0000ea40           opqqok_to_resume
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   57

    2520 0000ea40                   DIE
    2521                    
    2522 0000ea70            SUBRP  mk3_coin
    2523 0000ea70 00000000!         .long   MKCOIN_01
    2524 0000ea90 00000000!         .long   MKCOIN_02
    2525 0000eab0 00000000!         .long   MKCOIN_03
    2526 0000ead0 00000000!         .long   MKCOIN_04
    2527 0000eaf0 00000000!         .long   MKCOIN_05
    2528 0000eb10 00000000!         .long   MKCOIN_06
    2529 0000eb30 00000000!         .long   MKCOIN_07
    2530 0000eb50 00000000!         .long   MKCOIN_08
    2531 0000eb70 00000000!         .long   MKCOIN_09
    2532 0000eb90 00000000          .long   0
    2533                    
    2534 0000ebb0            SUBRP  mk3_smoke
    2535 0000ebb0 00000000!         .long   MKLIGHT1
    2536 0000ebd0 00000000!         .long   MKLIGHT2
    2537 0000ebf0 00000000!         .long   MKLIGHT3
    2538 0000ec10 00000000!         .long   MKLIGHT4
    2539 0000ec30 00000000!         .long   MKLIGHT5
    2540 0000ec50 00000000!         .long   MKLIGHT6
    2541 0000ec70 00000000!         .long   MKLIGHT7
    2542 0000ec90 00000000!         .long   MKLIGHT8
    2543 0000ecb0 00000000!         .long   MKLIGHT9
    2544 0000ecd0 00000000!         .long   MKLIGHT10
    2545 0000ecf0 00000000!         .long   MKLIGHT11
    2546 0000ed10 00000000!         .long   MKLIGHT12
    2547 0000ed30 00000000!         .long   MKLIGHT13
    2548 0000ed50 00000000!         .long   MKLIGHT14
    2549 0000ed70 00000000!         .long   MKLIGHT15
    2550 0000ed90 00000000!         .long   MKLIGHT16
    2551 0000edb0 00000000!         .long   MKLIGHT17
    2552 0000edd0 00000000!         .long   MKLIGHT18
    2553 0000edf0 00000000!         .long   MKLIGHT19
    2554 0000ee10 00000000!         .long   MKLIGHT20
    2555 0000ee30 00000000          .long   0
    2556                    
    2557                            .ref    obj_aniq
    2558                    
    2559 0000ee50            SUBRP  anim_mk
    2560 0000ee50     4d49          move    a10,a9
    2561 0000ee60     4d61          move    a11,a1
    2562 0000ee70     2601          sll     16,a1
    2563                    
    2564 0000ee80     2e0b          srl     16,a11
    2565 0000ee90     260b          sll     16,a11
    2566 0000eea0     4d60          move    a11,a0
    2567 0000eeb0     9722          move    *a9+,a2,L
    2568 0000eec0     09c3          movi    4000h,a3
         0000eed0     4000  
    2569 0000eee0     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4
         0000eef0 0000a102  
    2570 0000ef10     4d08          move    a8,a8
    2571 0000ef20     ca03          jrz     opqqno_flip
    2572 0000ef30     0ba4          ori     M_FLIPH,a4
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   58

         0000ef40 00000010  
    2573 0000ef60           opqqno_flip
    2574 0000ef60     09c5          movi    CLSMK3,a5
         0000ef70     6000  
    2575 0000ef80     56c6          clr     a6
    2576 0000ef90     56e7          clr     a7
    2577 0000efa0     0d5f          calla   BEGINOBJ
         0000efb0 00000000! 
    2578 0000efd0           opqqmk_anim_lp
    2579 0000efd0                   SLEEPK  5
    2580 0000f010     9720          move    *a9+,a0,L
    2581 0000f020     cb02          jrnz    opqqdo_mka
    2582 0000f030     4d49          move    a10,a9
    2583 0000f040     9720          move    *a9+,a0,L
    2584 0000f050           opqqdo_mka
    2585 0000f050     b501          move    *a8(OCTRL),a1
         0000f060     00f0  
    2586 0000f070     0d5f          calla   obj_aniq
         0000f080 00000000! 
    2587 0000f0a0     c0f2          jruc    opqqmk_anim_lp
    2588 0000f0b0                   DIE
    2589                    
    2590                    
    2591 0000f0e0            SUBR   show_mk3_tip
    2592                    
    2593                    
    2594 0000f0e0     5600          clr     a0                      ; Make everyone wait
    2595 0000f0f0     0580          move    a0,@resume
         0000f100 0000a020- 
    2596 0000f120                   CREATE  4000h,suspend_game
    2597 0000f1a0                   SLEEPK  1
    2598                    
    2599 0000f1e0     0d5f          calla   pal_clean
         0000f1f0 00000000! 
    2600 0000f210     574a          clr     a10
    2601 0000f220     1a0b          movk    16,a11
    2602 0000f230                   CREATE  FADE_PID|4000h,fade_down
    2603 0000f2b0                   SLEEPK  32
    2604                            .if MKDEBUG
    2605                            clr     a0
    2606                            move    a0,@mk3_tip_number
    2607                            .endif
    2608                    
    2609                            .ref    display_blank
    2610                            .if MKDEBUG
    2611                    opqqreenter
    2612                            .endif
    2613 0000f2f0     0d5f          calla   display_blank
         0000f300 00000000! 
    2614                    
    2615 0000f320     5600          clr     a0
    2616 0000f330     5621          clr     a1
    2617 0000f340     09e2          movi    BLACKOUT,a2
         0000f350 0000ced0' 
    2618 0000f370     09c3          movi    3ff0h,a3
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   59

         0000f380     3ff0  
    2619 0000f390     09e4          movi    DMACNZ|DMACZ|M_3D|M_SCRNREL,a4
         0000f3a0 0000a10c  
    2620 0000f3c0     09c5          movi    CLSMK3,a5
         0000f3d0     6000  
    2621 0000f3e0     56c6          clr     a6
    2622 0000f3f0     56e7          clr     a7
    2623 0000f400     09f0          movi    DPLT_R_P,b0
         0000f410 00000000! 
    2624 0000f430     0d5f          calla   BEGINOBJP
         0000f440 00000000! 
    2625 0000f460     5600          clr     a0
    2626 0000f470     b008          move    a0,*a8(OCONST)
         0000f480     0160  
    2627                    
    2628 0000f490     09e0          movi    [200,0],a0
         0000f4a0 00c80000  
    2629 0000f4c0     09e1          movi    [254,0],a1
         0000f4d0 00fe0000  
    2630 0000f4f0     09e2          movi    TRADEMARK,a2
         0000f500 00000000! 
    2631 0000f520     09c3          movi    4000h,a3
         0000f530     4000  
    2632 0000f540     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4
         0000f550 0000a102  
    2633 0000f570     09c5          movi    CLSMK3,a5
         0000f580     6000  
    2634 0000f590     56c6          clr     a6
    2635 0000f5a0     56e7          clr     a7
    2636 0000f5b0     0d5f          calla   BEGINOBJ
         0000f5c0 00000000! 
    2637                    
    2638 0000f5e0                   SLEEPK  1
    2639                    
    2640 0000f620     5708          clr     a8
    2641 0000f630     09eb          movi    [25,205],a11
         0000f640 001900cd  
    2642 0000f660     09ea          movi    mk3_coin,a10
         0000f670 0000ea70' 
    2643 0000f690                   CREATE  4001h,anim_mk
    2644                    
    2645 0000f710     5708          clr     a8
    2646 0000f720     09eb          movi    [101,205],a11
         0000f730 006500cd  
    2647 0000f750     09ea          movi    mk3_coin,a10
         0000f760 0000ea70' 
    2648 0000f780                   CREATE  4001h,anim_mk
    2649                    
    2650 0000f800     5708          clr     a8
    2651 0000f810     09eb          movi    [178,205],a11
         0000f820 00b200cd  
    2652 0000f840     09ea          movi    mk3_coin,a10
         0000f850 0000ea70' 
    2653 0000f870                   CREATE  4001h,anim_mk
    2654                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   60

    2655 0000f8f0     5708          clr     a8
    2656 0000f900     09eb          movi    [254,205],a11
         0000f910 00fe00cd  
    2657 0000f930     09ea          movi    mk3_coin,a10
         0000f940 0000ea70' 
    2658 0000f960                   CREATE  4001h,anim_mk
    2659                    
    2660 0000f9e0     5708          clr     a8
    2661 0000f9f0     09eb          movi    [331,205],a11
         0000fa00 014b00cd  
    2662 0000fa20     09ea          movi    mk3_coin,a10
         0000fa30 0000ea70' 
    2663 0000fa50                   CREATE  4001h,anim_mk
    2664                    
    2665 0000fad0     5708          clr     a8
    2666 0000fae0     09cb          movi    [0,1],a11
         0000faf0     0001  
    2667 0000fb00     09ea          movi    mk3_smoke,a10
         0000fb10 0000ebb0' 
    2668 0000fb30                   CREATE  4001h,anim_mk
    2669                    
    2670 0000fbb0     1828          movk    1,a8
    2671 0000fbc0     09eb          movi    [399,1],a11
         0000fbd0 018f0001  
    2672 0000fbf0     09ea          movi    mk3_smoke,a10
         0000fc00 0000ebb0' 
    2673 0000fc20                   CREATE  4001h,anim_mk
    2674                    
    2675 0000fca0                   SLEEPK  1
    2676                    
    2677 0000fce0     09e9          movi    opqqmk3_tip_prompt_str_tbl,a9
         0000fcf0 0000e8f0' 
    2678 0000fd10           opqqmk3_tp_loop
    2679 0000fd10     9722          move    *a9+,a2,L
    2680 0000fd20     ca10          jrz     opqqmk3_tp_done
    2681 0000fd30     4c4a          move    a2,a10
    2682 0000fd40     0d5f          calla   setup_message
         0000fd50 00000000! 
    2683 0000fd70     09c0          movi    CLSMK3,a0
         0000fd80     6000  
    2684 0000fd90     0580          move    a0,@mess_objid
         0000fda0 00000000! 
    2685 0000fdc0     0b0a          addi    SIZEOF_JAM_STR,a10
         0000fdd0     00a0  
    2686 0000fde0     4d44          move    a10,a4
    2687 0000fdf0     0d5f          calla   print_string_C2
         0000fe00 00000000! 
    2688 0000fe20     c0ee          jruc    opqqmk3_tp_loop
    2689                    
    2690 0000fe30           opqqmk3_tp_done
    2691 0000fe30     1820          movk    1,a0                    ; Get a random tip to show
    2692 0000fe40     0d5f          calla   RNDRNG0
         0000fe50 00000000! 
    2693                            .if MKDEBUG
    2694                            move    @mk3_tip_number,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   61

    2695                            .endif
    2696 0000fe70     24a0          sll     5,a0
    2697 0000fe80     0b20          addi    opqqmk3_tip_str_tbl,a0
         0000fe90 0000e8b0' 
    2698 0000feb0     8609          move    *a0,a9,L                ; a9 = *str table
    2699                    
    2700 0000fec0           opqqmk3_t_loop
    2701 0000fec0     9722          move    *a9+,a2,L
    2702 0000fed0     ca19          jrz     opqqmk3_tip_done
    2703 0000fee0     4c4a          move    a2,a10
    2704 0000fef0     0d5f          calla   setup_message
         0000ff00 00000000! 
    2705 0000ff20     09c0          movi    CLSMK3,a0
         0000ff30     6000  
    2706 0000ff40     0580          move    a0,@mess_objid
         0000ff50 00000000! 
    2707 0000ff70     0b0a          addi    SIZEOF_JAM_STR,a10
         0000ff80     00a0  
    2708 0000ff90     4d40          move    a10,a0
    2709 0000ffa0     0d3f          callr   decompress_string
         0000ffb0     00ca  
    2710                            .ref    message_buffer
    2711                    
    2712 0000ffc0     09e4          movi    message_buffer,a4
         0000ffd0 00000000! 
    2713 0000fff0     0d5f          calla   print_string_C2
         00010000 00000000! 
    2714 00010020                   SLEEPK  15
    2715 00010060     c0e5          jruc    opqqmk3_t_loop
    2716                            
    2717 00010070           opqqmk3_tip_done
    2718 00010070     8722          move    *a9,a2,L
    2719 00010080     ca0f          jrz     opqqno_code
    2720 00010090     4c49          move    a2,a9
    2721 000100a0           opqqmk3_c_loop
    2722 000100a0     9720          move    *a9+,a0,L
    2723 000100b0     ca04          jrz     opqqcode_done
    2724 000100c0     0d5f          calla   BEGINOBJ_TBL
         000100d0 00000000! 
    2725 000100f0     c0fa          jruc    opqqmk3_c_loop
    2726 00010100           opqqcode_done
    2727 00010100                   CREATE  4001h,sparkle_frame
    2728                    
    2729 00010180           opqqno_code
    2730                            .ref    display_unblank
    2731 00010180     0d5f          calla   display_unblank
         00010190 00000000! 
    2732                            .ref    SNDSND
    2733 000101b0     1a03          movk    16,a3
    2734 000101c0     0d5f          calla   SNDSND
         000101d0 00000000! 
    2735                    
    2736                    
    2737                            .if MKDEBUG
    2738                            movi    TSEC*120,a9
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   62

    2739                            .else
    2740 000101f0                   SLEEP   TSEC*2                  ; Minimum amount of time to display it
    2741                    
    2742 00010240     09c9          movi    TSEC*8,a9
         00010250     01a8  
    2743                            .endif
    2744 00010260           opqqdelay_loop                          ; Now wait on a button
    2745 00010260                   SLEEPK  1
    2746 000102a0     0d5f          calla   get_all_buttons_cur
         000102b0 00000000! 
    2747 000102d0     cb01          jrnz    opqqmk3t_exit
    2748 000102e0     3d29          dsjs    a9,opqqdelay_loop
    2749                    
    2750 000102f0           opqqmk3t_exit
    2751 000102f0     09c0          movi    4001h,a0
         00010300     4001  
    2752 00010310     0d5f          calla   KIL1C
         00010320 00000000! 
    2753                    
    2754 00010340     09c0          movi    CLSMK3,a0
         00010350     6000  
    2755 00010360     0d5f          calla   obj_del1c
         00010370 00000000! 
    2756                    
    2757 00010390                   SLEEPK  10                      ; Let em all die off
    2758                    
    2759                            .if MKDEBUG
    2760                            move    @mk3_tip_number,a14
    2761                            addk    1,a14
    2762                            andi    1,a14
    2763                            move    a14,@mk3_tip_number
    2764                            jruc    opqqreenter
    2765                            .endif
    2766 000103d0     574a          clr     a10
    2767 000103e0     1a0b          movk    16,a11
    2768 000103f0                   CREATE  4000h|FADE_PID,fade_up
    2769 00010470                   SLEEPK  31
    2770 000104b0     1820          movk    1,a0                    ; Set ok to resume game
    2771 000104c0     0580          move    a0,@resume
         000104d0 0000a020- 
    2772                    
    2773 000104f0                   DIE
    2774                    
    2775                    
    2776 00010520           sparkle_img
    2777 00010520 00000000!         .long   SPRKLA01
    2778 00010540 00000000!         .long   SPRKLA02
    2779 00010560 00000000!         .long   SPRKLA03
    2780 00010580 00000000!         .long   SPRKLA04
    2781 000105a0 00000000!         .long   SPRKLA05
    2782 000105c0 00000000!         .long   SPRKLA06
    2783 000105e0 00000000!         .long   SPRKLA07
    2784 00010600 00000000!         .long   SPRKLA08
    2785 00010620 00000000!         .long   SPRKLA09
    2786 00010640 00000000!         .long   SPRKLA10
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   63

    2787 00010660 00000000!         .long   SPRKLA11
    2788 00010680 00000000!         .long   SPRKLA12
    2789 000106a0 00000000!         .long   SPRKLA13
    2790 000106c0 00000000          .long   0
    2791                    
    2792 000106e0            SUBRP  anim_sparkle
    2793                    
    2794 000106e0     09ea          movi    sparkle_img,a10
         000106f0 00010520' 
    2795                    
    2796 00010710     4d20          move    a9,a0
    2797 00010720     2e00          srl     16,a0
    2798 00010730     2600          sll     16,a0
    2799                    
    2800 00010740     4d21          move    a9,a1
    2801 00010750     2601          sll     16,a1
    2802                            
    2803 00010760     9742          move    *a10+,a2,L
    2804 00010770     09c3          movi    4020h,a3
         00010780     4020  
    2805 00010790     09e4          movi    DMAWNZ|M_3D|M_SCRNREL,a4
         000107a0 0000a102  
    2806 000107c0     09c5          movi    CLSMK3+10,a5
         000107d0     600a  
    2807 000107e0     56c6          clr     a6
    2808 000107f0     56e7          clr     a7
    2809 00010800     09f0          movi    SPARKL_P,b0
         00010810 00000000! 
    2810 00010830     0d5f          calla   BEGINOBJP
         00010840 00000000! 
    2811                    
    2812 00010860           spa_loop
    2813 00010860                   SLEEPK  3
    2814 000108a0     9740          move    *a10+,a0,L
    2815 000108b0     ca0b          jrz     sp_exit
    2816 000108c0     b501          move    *a8(OCTRL),a1
         000108d0     00f0  
    2817 000108e0     0d5f          calla   obj_aniq
         000108f0 00000000! 
    2818 00010910     b501          move    *a8(OXPOS),a1
         00010920     0090  
    2819 00010930     1041          addk    2,a1
    2820 00010940     b028          move    a1,*a8(OXPOS)
         00010950     0090  
    2821 00010960     c0ef          jruc    spa_loop
    2822 00010970           sp_exit
    2823 00010970     0d5f          calla   DELOBJA8
         00010980 00000000! 
    2824 000109a0                   DIE
    2825                    
    2826                    
    2827 000109d0            SUBRP  sparkle_frame
    2828                    
    2829 000109d0     09c0          movi    121,a0                  ; Get a random x starting position
         000109e0     0079  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   64

    2830 000109f0     0d5f          calla   RNDRNG0
         00010a00 00000000! 
    2831 00010a20     4c09          move    a0,a9
    2832                    
    2833 00010a30     1820          movk    1,a0                    ; Get a random top/bottom
    2834 00010a40     0d5f          calla   RNDRNG0
         00010a50 00000000! 
    2835                    
    2836 00010a70     2609          sll     16,a9                   ; Set X position
    2837 00010a80     4c00          move    a0,a0                   ; top or bottom of frame ?
    2838 00010a90     ca03          jrz     opqqtop                 ; br = top
    2839 00010aa0     0ba9          ori     19,a9                   ; Set bottom
         00010ab0 00000013  
    2840 00010ad0           opqqtop
    2841 00010ad0     0b29          addi    [127,177],a9            ; Adjust for frame position
         00010ae0 007f00b1  
    2842 00010b00                   CREATE  4000h,anim_sparkle      ; Animate a frame sparkle
    2843                    
    2844 00010b80     09c0          movi    TSEC,a0                 ; Random Sleep before creating next sparkle
         00010b90     0035  
    2845 00010ba0     0d5f          calla   RNDRNG0
         00010bb0 00000000! 
    2846 00010bd0     0b00          addi    TSEC,a0                 ; Minimum of 1 second between sparkles
         00010be0     0035  
    2847 00010bf0     0d5f          calla   PRCSLP
         00010c00 00000000! 
    2848 00010c20     c0da          jruc    sparkle_frame
    2849                            
    2850 00010c30                   DIE
    2851                    
    2852 00010c60            SUBR   decompress_string
    2853 00010c60                   PUSH    a1,a2
    2854 00010c80     09e1          movi    message_buffer,a1,L
         00010c90 00000000! 
    2855 00010cb0     01e0          pushst                  ; Save status
    2856 00010cc0     0360          dint                    ; No interrupts during this
    2857 00010cd0     0546          setf    6,0,0           ; Field size = 6
    2858 00010ce0           opqqdecompress_loop
    2859 00010ce0     9402          move    *a0+,a2
    2860 00010cf0     ca05          jrz     opqqdecompress_done
    2861 00010d00     0b02          addi    01fh,a2
         00010d10     001f  
    2862 00010d20     8c41          movb    a2,*a1
    2863 00010d30     1101          addk    8,a1
    2864 00010d40     c0f9          jruc    opqqdecompress_loop
    2865 00010d50           opqqdecompress_done
    2866 00010d50     01c0          popst
    2867 00010d60     5600          clr     a0
    2868 00010d70     8c01          movb    a0,*a1
    2869 00010d80                   PULL    a1,a2
    2870 00010da0     0960          rets
    2871                    
    2872                            .if 0
    2873                    
    2874                    hello_prompt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   65

    2875                            JAM_STR ogmd10_ascii,10,0,200,80,SGMD8GLD,print_string_C2
    2876                            .string "HELLO GAME DESIGNER!!!"
    2877                            .byte   0,1
    2878                            .even
    2879                    hello_prompt1
    2880                            JAM_STR ogmd10_ascii,10,0,200,110,SGMD8GLD,print_string_C2
    2881                            .string "MIDWAY GAME DESIGNERS"
    2882                            .byte   0,1
    2883                            .even
    2884                    hello_prompt2
    2885                            JAM_STR ogmd10_ascii,10,0,200,125,SGMD8GLD,print_string_C2
    2886                            .string "ARE THE WORLD'S BEST"
    2887                            .byte   0,1
    2888                            .even
    2889                    hello_prompt3
    2890                            JAM_STR ogmd10_ascii,10,0,200,140,SGMD8GLD,print_string_C2
    2891                            .string "GAME DESIGNERS!!!!!"
    2892                            .byte   0,0
    2893                            .even
    2894                    
    2895                    
    2896                     SUBRP  hi_programmer
    2897                            clr     a0                      ; Make everyone wait
    2898                            move    a0,@resume
    2899                            CREATE  4000h,suspend_game
    2900                            SLEEPK  1
    2901                    
    2902                            calla   pal_clean
    2903                            clr     a10
    2904                            movk    16,a11
    2905                            CREATE  FADE_PID|4000h,fade_down
    2906                            SLEEPK  32
    2907                    
    2908                            .ref    print_message
    2909                    
    2910                            movi    hello_prompt,a2
    2911                            calla   print_message
    2912                            movi    hello_prompt1,a2
    2913                            calla   print_message
    2914                            movi    hello_prompt2,a2
    2915                            calla   print_message
    2916                            movi    hello_prompt3,a2
    2917                            calla   print_message
    2918                    
    2919                            DIE
    2920                    
    2921                    
    2922                     SUBR   prog_specials
    2923                    
    2924                            calla   get_all_buttons_cur
    2925                            jrz     opqqno_prog
    2926                            cmpi    B_PUNCH|B_SPUNCH|B_KICK|B_SKICK,a0
    2927                            jrnz    opqqno_prog
    2928                    
    2929                            move    *a13(PROCID),a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   66

    2930                            ori     4000h,a2
    2931                            move    a2,*a13(PROCID)
    2932                    
    2933                            CREATE  4000h,hi_programmer
    2934                            SLEEP   TSEC
    2935                            movi    TSEC*5,a2
    2936                    opqqwait_loop
    2937                            PUSHP   a2
    2938                            SLEEPK  1
    2939                            PULLP   a2
    2940                            calla   get_all_buttons_cur
    2941                            jrnz    opqqps_exit
    2942                            dsjs    a2,opqqwait_loop
    2943                    opqqps_exit
    2944                            movk    1,a0                    ; Set ok to resume game
    2945                            move    a0,@resume
    2946                    
    2947                            move    *a13(PROCID),a2
    2948                            andni   4000h,a2
    2949                            move    a2,*a13(PROCID)
    2950                    
    2951                            clr     a10
    2952                            movk    16,a11
    2953                            CREATE  FADE_PID,fade_up
    2954                            SLEEPK  31
    2955                    opqqno_prog
    2956                            RETP
    2957                    
    2958                    
    2959                    opqqsi_table
    2960                            .long   0006864bh               ; MARK
    2961                            .long   00a0cdeeh               ; JASON
    2962                            .long   00050565h               ; JAKE
    2963                            .long   0006a565h               ; MIKE
    2964                            .long   00053d0eh               ; JOHN
    2965                            .long   000029e5h               ; JOE
    2966                            .long   0001258ch               ; BILL
    2967                            .long   013a16c5h               ; STEVE
    2968                            .long   00004c2ch               ; SAL
    2969                            .long   00053e68h               ; JOSH
    2970                            .long   000395c5h               ; GENE
    2971                            .long   013406eeh               ; SHAWN
    2972                            .long   000000a4h               ; ED
    2973                            .long   0072be47h               ; GEORG
    2974                            .long   00525d2eh               ; EDWIN
    2975                            .long   00d0c970h               ; MARKP
    2976                            .long   000a3dd9h               ; TONY
    2977                            .long   0
    2978                    
    2979                     SUBR   are_special_inits
    2980                            PUSH    a0,a1,a2,a4,a5,a6
    2981                            move    a4,a6
    2982                            subk    8,a6
    2983                    opqqrecheck1
    2984                            addk    8,a6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling game program                                               PAGE   67

    2985                            move    a6,a4
    2986                            movb    *a6,a2
    2987                            jrz     opqqnot_special_inits1
    2988                            clr     a1
    2989                    opqqget_inits_loop1
    2990                            movb    *a4,a2
    2991                            jrz     opqqrecheck1
    2992                            cmpi    20h,a2
    2993                            jrz     opqqnot_alpha1
    2994                            cmpi    21h,a2
    2995                            jrz     opqqnot_alpha1
    2996                            cmpi    19h,a2
    2997                            jrz     opqqnot_alpha1
    2998                            sll     5,a1
    2999                            subi    40h,a2
    3000                            andi    1fh,a2
    3001                            or      a2,a1
    3002                            callr   opqqcheck_it1
    3003                    opqqnot_alpha1
    3004                            addk    8,a4
    3005                            jruc    opqqget_inits_loop1
    3006                    opqqgi_done1
    3007                    
    3008                    opqqcheck_it1
    3009                            PUSH    a4
    3010                            movi    opqqsi_table,a4
    3011                            clr     a0
    3012                    opqqcheck_dw_loop1
    3013                            move    *a4+,a5,L
    3014                            jrz     opqqcheck_done1
    3015                            cmp     a1,a5
    3016                            jrz     opqqis_special
    3017                            jruc    opqqcheck_dw_loop1
    3018                    opqqcheck_done1
    3019                            PULL    a4
    3020                            rets
    3021                    
    3022                    opqqis_special
    3023                            PULL    a4,a14                  ; This sucks don't change this
    3024                            movk    1,a0                    ; or it will break
    3025                            jruc    opqqaid_exit1
    3026                    opqqnot_special_inits1
    3027                            clr     a0
    3028                    opqqaid_exit1
    3029                            move    a0,a0
    3030                            PULL    a0,a1,a2,a4,a5,a6
    3031                            rets
    3032                    
    3033                            .endif
    3034                    
    3035                    
    3036                    
    3037                            .end

 No Errors,  No Warnings
