**************************************************************
*
* Software:		Jamie Rivett
* Initiated:		5/18/94
*
* COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
*
**************************************************************

	.file	"yoko.asm"
	.title	"Yokozuna specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"


******************************************************************************
* EXTERNAL REFERENCES

	.ref	change_anim1a,change_anim2a,bounce_off_ropes
	.ref	check_secret_moves,climb_turnbuckle,raisearm_check
	.ref	execute_walk,get_punch_dtime,get_opp_plyrmode
	.ref	keep_attached,change_anim1,mode_dead,round_award
	.ref	get_opp_process,ck_ignore,do_taunt,process_ptrs
	.ref	FIND_AND_KILL_ENDLESS,JUMP_ROPES,CHECK_COMBO_GO
	.ref	yok_combo_jabs_anim,yok_combo_kick_anim,set_raisearm_bit
	.ref	BLOCK_WOOSH,drone_change_back,ck_teammate_pin
	.ref	CLIMB_ROPES,ADD_IF_SILENT,master_keep_attached
	.ref	change_anim2,can_pin
	.ref	blocking_off,std_taunt,std_walk_fast
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_YOKO_FINISHES
	.ref	yok_finish1_move
	.if NUM_YOKO_FINISHES > 1
	.ref	yok_finish2_move
	.endif
	.endif

******************************************************************************
* ANIMATION SEQUENCES

	.ref	yok_2_jabs_anim
	.ref	yok_4_jabs_anim
	.ref	yok_4_uppercut_anim
	.ref	yok_2_slap2_anim
	.ref	yok_4_slap2_anim
	.ref	yok_2_superkick_anim
	.ref	yok_4_superkick_anim
	.ref	yok_2_grabfling_anim
	.ref	yok_4_grabfling_anim

	.ref	DO_REVERSAL,PCNT
	.ref	DO_REVERSAL_MESS

	.ref	yok_3_head_hold2_anim
	.ref	yok_3_head_hold_anim
	.ref	wres_slave_anim
	.ref	yok_zip_anim
	.ref	start_run_anim

	.ref	yok_stand2_anim,yok_stand8_anim
	.ref	yok_scissor_anim
	.ref	yok_stand4_anim,yok_stand6_anim
	.ref	yok_torso2_anim,yok_torso8_anim
	.ref	yok_torso4_anim,yok_torso6_anim

	.ref	yok_2_to_4_turn_anim,yok_8_to_6_turn_anim	;stand
	.ref	yok_4_to_2_turn_anim,yok_6_to_8_turn_anim
	.ref	yok_4_to_6_turn_anim,yok_6_to_4_turn_anim
	.ref	yok_2_to_8_turn_anim,yok_8_to_2_turn_anim
	.ref	yok_4_to_8_turn_anim,yok_6_to_2_turn_anim
	.ref	yok_2_to_6_turn_anim,yok_8_to_4_turn_anim

	.ref	yok_2_to_4_turn2_anim,yok_8_to_6_turn2_anim	;torso
	.ref	yok_4_to_2_turn2_anim,yok_6_to_8_turn2_anim
	.ref	yok_4_to_6_turn2_anim,yok_6_to_4_turn2_anim
	.ref	yok_2_to_8_turn2_anim,yok_8_to_2_turn2_anim
	.ref	yok_4_to_8_turn2_anim,yok_6_to_2_turn2_anim
	.ref	yok_2_to_6_turn2_anim,yok_8_to_4_turn2_anim

	.ref	yok_walk1_f2_anim,yok_walk2_f2_anim,yok_walk4_f2_anim
	.ref	yok_walk5_f2_anim,yok_walk6_f2_anim,yok_walk8_f2_anim

	.ref	yok_walk1_f4_anim,yok_walk2_f4_anim,yok_walk4_f4_anim
	.ref	yok_walk5_f4_anim,yok_walk6_f4_anim,yok_walk8_f4_anim

	.ref	yok_run2_anim

	.ref	yok_climb_up_anim,yok_climb_down_anim
	.ref	yok_3_butt_drop_anim,yok_tbukl_buttdrop_anim

	.ref	yok_2_punch_anim,yok_4_punch_anim
;	.ref	yok_2_push_anim
	.ref	yok_4_push_anim
	.ref	yok_2_lbowdrop_anim,yok_4_lbowdrop_anim
	.ref	yok_2_kick_anim,yok_4_kick_anim
	.ref	yok_2_stomp_anim,yok_4_stomp_anim
	.ref	yok_2_knee_anim,yok_4_knee_anim
	.ref	yok_2_gut_push_anim,yok_4_gut_push_anim
	.ref	yok_4_losebal_anim

	.ref	yok_4_block_anim

	.ref	yok_2_head_hit_anim,yok_4_head_hit_anim
	.ref	yok_2_body_hit_anim,yok_4_body_hit_anim
	.ref	yok_2_raise_arm_anim,yok_4_raise_arm_anim
	.ref	yok_2_pin_anim,yok_4_pin_anim

	.ref	yok_graboh_anim
	.ref	yok_2_hiptoss_anim
	.ref	yok_4_hiptoss_anim
	.ref	yok_2_hiptoss2_anim
	.ref	yok_4_hiptoss2_anim
	.ref	yok_vsuplex_anim

	.ref	yok_spinslam_anim
	.ref	yok_heldheadbutt_rpt_anim

;	.ref	yok_pkup_chair_anim
	.ref	yok_2_hair_pickup_anim
	.ref	yok_4_salt_anim,yok_3_head_held_stand_anim
	.ref	yok_overhd_slam_anim,yok_2_run_slap_anim
	.ref	yok_4_hair_pickup_anim,yok_2_salt_anim
	.ref	yok_stndholdoh_anim,yok_4_run_slap_anim
	.ref	yok_fall_back_anim,yok_holdoh_anim

	.ref	BONUS_MESS

******************************************************************************
* SYMBOLS DEFINED IN THIS FILE

******************************************************************************
* EQUATES FOR THIS FILE

*****************************************************************************

yok_secret_moves
	.long	atvxcharge_salt	;must have this one
	.long	atvxneck_grab
	.long	atvxgrab_fling
	.long	atvxhip_toss
	.long	atvxgrab_fling2
	.long	atvxhip_toss2
	.long	atvxscissors
	.long	atvxgut_push
	.long	atvxjabs
	.long	0

******************************************************************************
*
* SPECIAL MOVE PROCESSES - Secret moves
*
;a8=process of wrestler

 SUBR	yok_smove_table
	.long	yok_hdhold_combo1
	.long	yok_hdhold_scissor
	.long	yok_hdhold_suplex
	.long	yok_salt_throw
	.long	yok_grab_toss_air
	.long	yok_hdhold_combo2
;	.long	yok_hdhold_anti_combo
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_YOKO_FINISHES
	.long	yok_finish_move1
	.endif
	.if NUM_YOKO_FINISHES > 1
	.long	yok_finish_move2
	.endif
	.long	0

******************************************************************************
atvxscissors
	.word	B_SKICK,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32 		;max
	.long	atvxscrt_scis

atvxscrt_scis
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxrets
	move	*a13(PLYRMODE),a0
	CMPI	MODE_HEADHOLD,a0
	jrz	atvxrets

;no frankensteiner if opponent is on the ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jreq	atvxrets
	cmpi	MODE_DEAD,a0
	jreq	atvxrets

	;don't do it if opponent is behind you
	calla	ck_ignore
	jrc	atvxrets
	
	CALLA	FIND_AND_KILL_ENDLESS
	movi	yok_scissor_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,GRABFLING_T1,GRABFLING_T2
atvxrets	rets

*******************************************************************************

atvxhip_toss
;	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	atvxscrt_hiptoss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	atvxscrt_hiptoss

atvxscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	atvxout
;	cmpi	MODE_BLOCK,a0
;	jrz	atvxout
	cmpi	MODE_DEAD,a0
	jrz	atvxout
	cmpi	MODE_HEADHELD,a0
	jrz	atvxout
	cmpi	MODE_INAIR,a0
	jrz	atvxdoit
	cmpi	MODE_INAIR2,a0
	jrz	atvxdoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	atvxout

atvxdoit
	FACE24	yok,hiptoss_anim
	calla	change_anim1a

	WRSND	W_YOKO,HIPTOSS_T1,PUNCH_T2

	rets

*******************************************************************************

atvxgrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	atvxscrt_grabfling2

atvxhip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	atvxscrt_grabfling2

atvxscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	atvxyes
	cmpi	MODE_RUNNING,a0
	jrz	atvxyes
	rets

*******************************************************************************

atvxgrab_fling
;	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	atvxscrt_grabfling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	atvxscrt_grabfling

atvxscrt_grabfling

;Make this miss, rotate to missed opponent,
;and stay rotated to flung opponent, also make
;this work from both angles!

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	atvxyes
	cmpi	MODE_RUNNING,a0
	jrnz	atvxnope
atvxyes
	FACE24	yok,hiptoss_anim
	calla	change_anim1a

	WRSND	W_YOKO,HIPTOSS_T1,PUNCH_T2
	rets

atvxnope
;Don't fling when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	atvxout
	cmpi	MODE_HEADHELD,a0
	jrz	atvxout
	cmpi	MODE_ONGROUND,a0
	jrz	atvxout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	atvxout

;	move	*a13(LAST_FLING_ATTEMPT),a14,L
;	move	@PCNT,a0,L
;	sub	a14,a0
;	cmpi	3*60,a0
;	jrge	atvxok2
;
;;This head grab is too close (in terms of time) to most recent grab
;	FACE24	yok,slap2_anim
;	calla	change_anim1a
;
;	WRSND	W_YOKO,SPUNCH_T1,SPUNCH_T2
;	rets
;
;atvxok2
;	move	@PCNT,a14,L			;use 32-bit PCNT!
;	move	a14,*a13(LAST_FLING_ATTEMPT),L

	FACE24	yok,grabfling_anim
	calla	change_anim1a

	WRSND	W_YOKO,GRABFLING_T1,PUNCH_T2
	rets

*******************************************************************************

atvxneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 30		;max
	.long	atvxscrt_neck

atvxscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	atvxout
	cmpi	MODE_DEAD,a0
	jrz	atvxout
	cmpi	MODE_HEADHELD,a0
	jrz	atvxout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	atvxout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	atvxok2a

;This head grab is too close (in terms of time) to most recent grab
	.ref	yok_3_fake_hold_anim
	movi	yok_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

atvxok2a
	move	*a13(CLOSEST_XDIST),a1
	cmpi	80,a1
	jrgt	atvxstd_grab

	movi	yok_3_head_hold2_anim,a0
	calla	change_anim1a
	rets

atvxstd_grab
	movi	yok_3_head_hold_anim,a0
	calla	change_anim1a
	rets

*******************************************************************************

atvxcharge_salt

	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	atvxno_punch

	move	*a13(PLYRNUM),a0
	calla	get_punch_dtime
	cmpi	85,a0			;> min?
	jrlt	atvxno_punch

	CALLA	FIND_AND_KILL_ENDLESS
	callr	atvxscrt_salt
	setc
	rets

atvxno_punch
	clrc
	rets

atvxscrt_salt
	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	atvxout
	cmpi	MODE_HEADHOLD,a0
	jrz	atvxout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ATTACHED,a0
	jrz	atvxout
;	cmpi	MODE_ONGROUND,a0
;	jrz	atvxout
;	cmpi	MODE_DEAD,a0
;	jrz	atvxout

	FACE24	yok,salt_anim
	calla	change_anim1a
	WRSND	W_YOKO,HDBUTT_T1,HDBUTT_T2

	clr	a0
	move	a0,*a13(RUN_TIME)

	SETMODE	NORMAL

	rets

*******************************************************************************

atvxgut_push
	.word	B_PUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 40		;max
	.long	atvxscrt_gut_push

atvxscrt_gut_push

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout
 
;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	atvxout
	cmpi	MODE_DEAD,a0
	jrz	atvxout
	cmpi	MODE_HEADHELD,a0
	jrz	atvxout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	atvxout
 
	FACE24	yok,gut_push_anim
	calla	change_anim1a
	WRSND	W_YOKO,GRABTHROW_T1,GRABTHROW_T2
atvxout
	rets


*******************************************************************************

atvxjabs
	.word	B_PUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_DOWN_TOWARD,		J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 50 		;max
	.long	atvxscrt_jabs

atvxscrt_jabs
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	atvxout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	atvxout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
;	cmpi	MODE_ONGROUND,a0
;	jrz	atvxout
;	cmpi	MODE_DEAD,a0
;	jrz	atvxout
	cmpi	MODE_HEADHELD,a0
	jrz	atvxout

	FACE24	yok,jabs_anim
	calla	change_anim1a

	WRSND	W_YOKO,HDBUTT_T1,HDBUTT_T2

	rets

	.if NUM_YOKO_FINISHES
******************************************************************************
 SUBRP	yok_finish_move1

diwzTIMEOUT	.equ	TSEC

diwzend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		diwzend_wait			; br = no

diwzreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,diwzreset
	movi		diwzTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,diwzreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,diwzreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,diwzreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,diwzreset

	movi		yok_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_YOKO_FINISHES > 1
******************************************************************************
 SUBRP	yok_finish_move2

sjqtTIMEOUT	.equ	TSEC

sjqtend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		sjqtend_wait			; br = no

sjqtreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,sjqtreset
	movi		sjqtTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,sjqtreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,sjqtreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,sjqtreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,sjqtreset

	movi		yok_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif

*******************************************************************************

yok_grab_toss_air

dxynTIMEOUT	.equ	40

dxynlp0
	SLEEPK	1
dxynlp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,dxynlp

	movi	dxynTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,dxynlp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,dxynlp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	dxynlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	dxynlp0

;Don't do it when he is on ground
	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
;Don't do it when he is on ground
	cmpi	MODE_ONGROUND,a0
	jrz	dxynlp
	cmpi	MODE_DEAD,a0
	jrz	dxynlp
	cmpi	MODE_INAIR,a0
	jrz	dxyndoit2
	cmpi	MODE_INAIR2,a0
	jrz	dxyndoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	dxyndoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	6ch,a0
	jrgt	dxynlp

	FACE24	yok,hiptoss_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_YOKO,GRABFLING_T1,PUNCH_T2

	SLEEPK	20
	jruc	dxynlp

dxyndoit2	FACE24	yok,hiptoss2_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_YOKO,GRABFLING_T1,PUNCH_T2

	SLEEPK	20

	jruc	dxynlp


*******************************************************************************
yok_hdhold_suplex

nujeTIMEOUT	.equ	60

nujelp0
	SLEEPK	1
nujelp
;	move	*a8(GETUP_TIME),a0
;	jrnz	nujelp0
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	nujecont
	cmpi	MODE_HEADHELD,a0
	jrnz	nujelp0
nujecont
	clr	a11

;	WAITSWITCH_DWN	J_UP,0,nujelp
	WAITSWITCH_DWN	J_DOWN,0,nujelp

	movi	nujeTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,nujelp
	WAITSWITCH_DWN	B_SKICK,J_ALL,nujelp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	nujeslam
	cmpi	MODE_HEADHELD,a0
	jrnz	nujelp0
	move	*a8(I_WILL_DIE),A14
	jrnz	nujelp0

;Do reversal unless I have been immobilized!
;If not, set immobilize time for opponent and reverse

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	nujelp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	nujeis_reversal

nujeslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	nujelp0				;ignore

	movi	42,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

nujeis_reversal
	movk	30,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	yok_vsuplex_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_YOKO,GRABFLING_T1,GRABFLING_T2

	SLEEPK	20

	jruc	nujelp

*******************************************************************************
yok_hdhold_scissor

lzzqTIMEOUT	.equ	60

lzzqlp0
	SLEEPK	1
lzzqlp
;	move	*a8(GETUP_TIME),a0
;	jrnz	lzzqlp0
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lzzqcont
	cmpi	MODE_HEADHELD,a0
	jrnz	lzzqlp0
lzzqcont
	clr	a11

;	WAITSWITCH_DWN	J_AWAY,0,lzzqlp
	WAITSWITCH_DWN	J_TOWARD,0,lzzqlp

	movi	lzzqTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,lzzqlp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,lzzqlp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lzzqslam
	cmpi	MODE_HEADHELD,a0
	jrnz	lzzqlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	lzzqlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lzzqlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	lzzqis_reversal

lzzqslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lzzqlp0				;ignore

	movi	34,a10
	CREATE0	BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

lzzqis_reversal
	movk	32,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
	movi	yok_scissor_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_YOKO,GRABFLING_T1,GRABFLING_T2

	SLEEPK	20

	jruc	lzzqlp

*******************************************************************************
*
yok_hdhold_combo1

qfkrTIMEOUT	.equ	60

qfkrlp0
	SLEEPK	1
qfkrlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	qfkrlp0
;	jrz	qfkrcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	qfkrlp0
;qfkrcont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	qfkrlp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,qfkrlp

	movi	qfkrTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,qfkrlp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,qfkrlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	qfkrslam
	cmpi	MODE_HEADHELD,a0
	jrnz	qfkrlp0

qfkrslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	qfkrlp0				;ignore

;Start combo rules here
;	move	*a8(ATTACH_PROC),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)

	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	yok_combo_jabs_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_YOKO,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	qfkrlp

*******************************************************************************
*
yok_hdhold_combo2

ngwlTIMEOUT	.equ	60

ngwllp0
	SLEEPK	1
ngwllp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	ngwllp0
;	jrz	ngwlcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	ngwllp0
;ngwlcont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	ngwllp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,ngwllp

	movi	ngwlTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,ngwllp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,ngwllp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	ngwlslam
	cmpi	MODE_HEADHELD,a0
	jrnz	ngwllp0

ngwlslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	ngwllp0				;ignore

;Start combo rules here
;	move	*a8(ATTACH_PROC),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)

	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	yok_combo_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_YOKO,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	ngwllp

;******************************************************************************
;yok_hdhold_anti_combo
;
;ngwlTIMEOUT	.equ	80
;
;ngwllp0
;	SLEEPK	1
;ngwllp
;;Is my opponent in combo mode?
;;	move	*a8(IMMOBILIZE_TIME),a14
;;	jrz	ngwllp0
;;	move	*a8(CLOSEST_NUM),a0
;;	X32	a0
;;	addi	process_ptrs,a0
;;	move	*a0,a0,L
;;	move	*a0(COMBO_COUNT),a0
;;	jrz	ngwllp0
;
;	clr	a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,ngwllp
;
;	movi	ngwlTIMEOUT,a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,ngwllp
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,ngwllp
;
;;Is my opponent in combo mode?
;	move	*a8(CLOSEST_NUM),a0
;	X32	a0
;	addi	process_ptrs,a0
;	move	*a0,a0,L
;	move	*a0(COMBO_COUNT),a0
;	jrz	ngwllp0
;
;	move	*a8(ANTI_COMBO_TIME),a0		;Time stamp
;	move	@PCNT,a14
;	sub	a0,a14
;	abs	a14
;	cmpi	80,a14
;	jrge	ngwllp0
;	move	*a8(I_WILL_DIE),A14
;	jrnz	ngwllp0
;
;;Combo breaker message!
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	clr	a0
;	move	a0,*a8(IMMOBILIZE_TIME)
;
;	move	*a8(WHOHITME),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)
;
;	;target WHOHITME
;	SMRTTGT	a8,WHOHITME
;
;	CALLA	FIND_AND_KILL_ENDLESS
;	movi	yok_vsuplex_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;
;	WRSND	W_YOKO,UPRCUT_T1,UPRCUT_T2
;
;	SLEEPK	20
;
;	jruc	ngwllp

*******************************************************************************
yok_salt_throw

tuzpTIMEOUT	.equ	60

tuzplp0
	SLEEPK	1
tuzplp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	tuzpcont
	cmpi	MODE_HEADHELD,a0
	jrnz	tuzplp0
tuzpcont
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,tuzplp

	movi	tuzpTIMEOUT,a11

;	WAITSWITCH_DWN	J_DOWN_TOWARD,0,tuzplp
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,tuzplp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,tuzplp
	
	CALLA	FIND_AND_KILL_ENDLESS
	movi	yok_4_salt_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_YOKO,LBOWDROP_T1,LBOWDROP_T2

	SLEEP	120

	jruc	tuzplp

*****************************************************************************

 SUBR	yoko_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	znvcp1
;Plyr 2
	movi	yok_stand4_anim,a0
	calla	change_anim1a

	movi	yok_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10

	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

znvcp1
	movi	yok_stand2_anim,a0
	calla	change_anim1a

	movi	yok_torso2_anim,a0
	calla	change_anim2a

	rets


*****************************************************************************
*
* YOKOZUNA CONTROL CODE
*
* a13 = * yoko process

 SUBR	move_yoko


;	movi	100h,a0			;temp fix!
;	move	a0,*a13(ANI_SPEED)

	movi	yok_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	wqdpmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

wqdpmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	REFLONG	mode_puppet		;20
	REFLONG	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	REFLONG	mode_choking		;25


*****************************************************************************

mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	qwrqno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	qwrqnope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	qwrqnope
;Player has died amidst a combo...
;Knock me down.
	movi	yok_fall_back_anim,a0
	calla	change_anim1a

;Zero health bar
	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

qwrqnope
;Perhaps we need to interrupt any sequence when a wrestler has won?

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	qwrqopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	qwrqopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	qwrqno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	qwrqno_pin_yet
qwrqno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	qwrqraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	qwrqraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	qwrqno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	qwrqopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	yok,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

qwrqraisearm
	FACE24	yok,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

qwrqtoo_far_to_pin
qwrqopp_notgnd
qwrqopp_not_dead
qwrqno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	qwrqimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	qwrqnblk			;1 for down transitions
	callr	qwrqblock			;& 1 for current buttons
	jrc	qwrqnblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
qwrqnblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	qwrqpunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	qwrqaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	qwrqno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	qwrqno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

qwrqimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
qwrqno_climb
	calla	execute_walk

qwrqno_interrupt
	rets

qwrqaction_table
	.long	qwrqz,qwrqpunch,qwrqblock,qwrqblock			;0-3
	.long	qwrqsuper_punch,qwrqsuper_punch,qwrqblock,qwrqblock	;4-7
	.long	qwrqkick,qwrqpunchkick,qwrqblock,qwrqblock		;8-11
	.long	qwrqsuper_punch,qwrqpunchkick,qwrqblock,qwrqblock	;12-15
	.long	qwrqsuper_kick,qwrqsuper_kick,qwrqblock,qwrqblock	;16-19
	.long	qwrqgraboh,qwrqgraboh,qwrqblock,qwrqblock		;20-23
	.long	qwrqsuper_kick,qwrqpunchkick,qwrqblock,qwrqblock	;24-27
	.long	qwrqgraboh,qwrqgraboh,qwrqblock,qwrqblock		;28-31

************
qwrqz

	rets

************
qwrqgraboh
;Both super buttons at the same time!
	movi	yok_graboh_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,GRABHOLD_T1,GRABHOLD_T2
	rets

************
qwrqpunch		;1
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  62  95	headbutt
* normal	>		normal punch
*
* onground	< 120  120	elbow drop
* onground	>		normal punch
*
* running |
* bouncing			normal punch
*
* onturnbkl	<  60  60	punch
* onturnbkl	>		normal punch
*
* puppet|inair			normal punch
*

	JJXM_INIT
	JJXM	NORMAL,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	DIZZY,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	BLOCK,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	ONGROUND,	160,140,qwrqpunch_lbdrop,qwrqpunch_punch
	JJXM	RUNNING,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	BOUNCING,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	ONTURNBKL,	 	qwrqpunch_punch
	JJXM	CLIMBTURNBKL,	 	qwrqpunch_punch
	JJXM	PUPPET,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	PUPPET2,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	INAIR,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	ATTACHED,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	DEAD,		160,140,qwrqpunch_lbdrop,qwrqpunch_punch
	JJXM	OPPOVERHEAD,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	WAITANIM,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	GRAPPLE,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	MASTER,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	SLAVE,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	HEADHOLD,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	HEADHELD,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	CHOKEHOLD,	 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM	INAIR2,		 62, 95,qwrqpunch_hdbutt,qwrqpunch_punch
	JJXM_END

*****
qwrqpunch_punch
std_punch

	FACE24	yok,punch_anim
	calla	change_anim1a

	WRSND	W_YOKO,PUNCH_T1,PUNCH_T2
	rets

*****
qwrqpunch_hdbutt

;	move	*a13(STICK_VAL_CUR),a0
;	move	*a13(NEW_FACING_DIR),a1
;	andi	0ch,a1
;	cmp	a0,a1
;	jrz	qwrqrpt
;
;	movi	yok_heldheadbutt_anim,a0
;	calla	change_anim1a
;
;	WRSND	W_YOKO,HDBUTT_T1,HDBUTT_T2
;	rets
;
;qwrqrpt
	movi	yok_heldheadbutt_rpt_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,HDBUTT_T1,HDBUTT_T2
	rets

*****
qwrqpunch_lbdrop

	FACE24	yok,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_YOKO,LBOWDROP_T1,LBOWDROP_T2
	rets

************
qwrqblock		;2

	clr	a0
	move	a0,*a13(OBJ_XVEL),L

std_block
	move	@blocking_off,a0
	jrnz	qwrqno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	yok_4_block_anim,a0
	calla	change_anim1a

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

qwrqno_blocking
	setc
	rets


************
qwrqsuper_punch	;4
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	close in super move
* dizzy			"		"
* normal	>		jumping punch move
* dizzy			"		"
*
* onground	< 120  120	super elbow drop
* onground	>		normal punch
*
* running			hip toss
* bouncing			nothing
*
* onturnbkl	<  60   96	yank down
* onturnbkl	>		normal punch
* climbturnbkl			normal punch
*
	JJXM_INIT
	JJXM	NORMAL,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;0
	JJXM	RUNNING,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;1
	JJXM	INAIR,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;2
	JJXM	ATTACHED,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;3
	JJXM	ONGROUND,	160,140,qwrqspunch_lbowdrop,std_punch	;4
	JJXM	BOUNCING,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;0
	JJXM	ONTURNBKL,	 	qwrqspunch_slap			;6
	JJXM	BLOCK,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;7
	JJXM	DIZZY,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;8
	JJXM	DEAD,		160,140,qwrqspunch_lbowdrop,std_punch	;4
	JJXM	OPPOVERHEAD,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;10
	JJXM	CLIMBTURNBKL,		std_punch			;11
 	JJXM	WAITANIM,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;12
	JJXM	GRAPPLE,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;13
	JJXM	MASTER,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;14
	JJXM	SLAVE, 		 95, 45,qwrqspunch_special,qwrqspunch_slap	;15
	JJXM	HEADHOLD,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;16
	JJXM	HEADHELD,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;19
	JJXM	CHOKEHOLD,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;16
	JJXM	PUPPET,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;20
	JJXM	PUPPET2,	 95, 45,qwrqspunch_special,qwrqspunch_slap	;20
	JJXM	INAIR2,		 95, 45,qwrqspunch_special,qwrqspunch_slap	;21
	JJXM_END

qwrqspunch_rets
	rets

*****
qwrqspunch_slap

	FACE24	yok,slap2_anim
	calla	change_anim1a

	WRSND	W_YOKO,PUNCH_T1,PUNCH_T2
	rets

*****
qwrqspunch_special
;If stick is toward opponent, then do quick head hold
	move	*a13(STICK_VAL_CUR),a0
	btst	MOVE_DOWN_BIT,a0
	jrnz	qwrqck_up

;	move	*a13(CLOSEST_XDIST),a1
;	cmpi	60,a1
;	jrgt	qwrqspunch_slap
;
;qwrqhdbutt
;	movi	yok_heldheadbutt_anim,a0

	FACE24	yok,jabs_anim
	calla	change_anim1a

	WRSND	W_YOKO,HDBUTT_T1,HDBUTT_T2
	rets

qwrqck_up
;Check for uppercut
	movi	yok_4_uppercut_anim,a0
	calla	change_anim1

	WRSND	W_YOKO,HDBUTT_T1,HDBUTT_T2
	rets

*****
qwrqspunch_lbowdrop
;If near opponents head, and facing down, do the hair grab!
;Allow hair grab from below!

;	move	*a13(FACING_DIR),a14
;	btst	MOVE_DOWN_BIT,a14
;	jrz	qwrqno

	move	*a13(CLOSEST_NUM),a14
	X32	a14

	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	qwrqno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	qwrqno

;At head or feet!

	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	qwrqno

;At head!  Do hair pickup.

	FACE24	yok,hair_pickup_anim
	calla	change_anim1
	WRSND	W_YOKO,LBOWDROP_T1,LBOWDROP_T2
	rets

qwrqno
	FACE24	yok,lbowdrop_anim
	calla	change_anim1
	WRSND	W_YOKO,LBOWDROP_T1,LBOWDROP_T2
	rets


************
qwrqkick		;8
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  60   50	knee
*		>		normal kick
*
* onground	< 120  120	stomp
* onground	>		normal kick
*
* running |
* bouncing			big boot
*
* onturnbkl |			normal kick
* climbturnbkl			normal kick
*
* puppet|inair			normal kick
*


	JJXM_INIT
	JJXM	NORMAL,		 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	DIZZY,		 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	BLOCK,		 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	ONGROUND,	160,140,qwrqkick_stomp,qwrqkick_kick
	JJXM	RUNNING,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	BOUNCING,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	ONTURNBKL,	 	qwrqkick_kick
	JJXM	CLIMBTURNBKL,	 	qwrqkick_kick
	JJXM	PUPPET,			qwrqkick_kick
	JJXM	PUPPET2,		qwrqkick_kick
	JJXM	INAIR,		 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	ATTACHED,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	DEAD,		160,140,qwrqkick_stomp,qwrqkick_kick
	JJXM	OPPOVERHEAD,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	WAITANIM,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	GRAPPLE,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	MASTER,		 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	SLAVE,		 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	HEADHOLD,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	HEADHELD,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	CHOKEHOLD,	 60, 50,qwrqkick_knee,qwrqkick_kick
	JJXM	INAIR2,		 	qwrqkick_TB
	JJXM_END

*****
qwrqkick_TB

	.ref	yok_graboh_TB_anim
	movi	yok_graboh_TB_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

*****
qwrqkick_kick

	FACE24	yok,kick_anim
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

*****
qwrqkick_knee

	FACE24	yok,knee_anim
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

*****
qwrqkick_stomp

	FACE24	yok,stomp_anim
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets


************
qwrqpunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets


************
qwrqsuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  60   50	knee
*		>		normal kick
*
* onground	< 120  120	stomp
* onground	>		normal kick
*
* running |
* bouncing			big boot
*
* onturnbkl |			normal kick
* climbturnbkl			normal kick
*
* puppet|inair			normal kick
*

	JJXM_INIT
	JJXM	NORMAL,		 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	DIZZY,		 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	BLOCK,		 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	ONGROUND,	160,140,qwrqskick_stomp,qwrqskick_kick
	JJXM	RUNNING,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	BOUNCING,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	ONTURNBKL,	 	qwrqskick_kick
	JJXM	CLIMBTURNBKL,	 	qwrqskick_kick
	JJXM	PUPPET,			qwrqskick_kick
	JJXM	PUPPET2,		qwrqskick_kick
	JJXM	INAIR,			qwrqskick_kick
	JJXM	ATTACHED,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	DEAD,		160,140,qwrqskick_stomp,qwrqskick_kick
	JJXM	OPPOVERHEAD,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	WAITANIM,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	GRAPPLE,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	MASTER,		 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	SLAVE,		 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	HEADHOLD,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	HEADHELD,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	CHOKEHOLD,	 60, 50,qwrqskick_knee,qwrqskick_kick
	JJXM	INAIR2,		 	qwrqkick_TB
	JJXM_END

*****
;qwrqskick_bigboot
;
;	.ref	yok_2_bigboot_anim
;	.ref	yok_4_bigboot_anim
;
;	FACE24	yok,bigboot_anim
;	calla	change_anim1a
;
;	WRSND	W_YOKO,FLYKICK_T1,FLYKICK_T2
;
;	rets

*****
qwrqskick_kick

;Jumping karate kick
	FACE24	yok,superkick_anim
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

*****
qwrqskick_knee

	FACE24	yok,knee_anim
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

*****
qwrqskick_stomp

	FACE24	yok,stomp_anim
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

*****
qwrqskick_scissor
	movi	yok_scissor_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_YOKO,GRABFLING_T1,GRABFLING_T2

	rets


*****************************************************************************
*
* RUNNING (if GETUP_TIME > 0 then player is out of control)
*

eigkXRUN_VAL	equ	YOK_XRUN
eigkZDRIFT_VAL	equ	YOK_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	eigkno_vel

	calla	bounce_off_ropes

	movi	eigkXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	eigkpos
	neg	a0
eigkpos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

eigkno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	eigkout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	eigkno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	eigkcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

eigkcontinue_run
eigkno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-eigkZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	eigksetvel

	movi	eigkZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	eigksetvel

	clr	a1
eigksetvel
	move	a1,*a13(OBJ_ZVEL),L

;Delay reading buttons after just getting out of an out of control run
;so a mistaken move isn't fired off
	move	*a13(DELAY_BUTNS),a0
	jrnz	eigkout_of_control


	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	eigkaction_table,a0
	move	*a0,a0,L
	call	a0
eigkout_of_control
	rets

eigkaction_table
	.long	eigkz,eigkpunch,eigkblock,eigkblock			;0-3
	.long	eigksuper_punch,eigksuper_punch,eigkblock,eigkblock	;4-7
	.long	eigkkick,eigkpunchkick,eigkblock,eigkblock		;8-11
	.long	eigksuper_punch,eigkpunchkick,eigkblock,eigkblock	;12-15
	.long	eigksuper_kick,eigksuper_kick,eigkblock,eigkblock	;16-19
	.long	eigkgraboh,eigkgraboh,eigkblock,eigkblock		;20-23
	.long	eigksuper_kick,eigkpunchkick,eigkblock,eigkblock	;24-27
	.long	eigkgraboh,eigkgraboh,eigkblock,eigkblock		;28-31

************
eigkz
	rets

************
eigkpunch		;1
eigksuper_punch	;4
eigkpunchkick
eigkgraboh
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  62  95	headbutt
* normal	>		normal punch
*
* onground	< 120 120	elbow drop
* onground	>		normal punch
*
* running |
* bouncing			normal punch
*
* onturnbkl	<  60  60	punch
* onturnbkl	>		normal punch
*
* puppet|inair			normal punch
*

	JJXM_INIT
	JJXM	NORMAL,			eigkpunch_clobber
	JJXM	DIZZY,			eigkpunch_clobber
	JJXM	BLOCK,			eigkpunch_clobber
	JJXM	ONGROUND,		eigkpunch_buttdrop
	JJXM	RUNNING,		eigkpunch_clobber
	JJXM	BOUNCING,		eigkpunch_clobber
	JJXM	ONTURNBKL,		eigkpunch_clobber
	JJXM	CLIMBTURNBKL,		eigkpunch_clobber
	JJXM	PUPPET,			eigkpunch_clobber
	JJXM	PUPPET2,		eigkpunch_clobber
	JJXM	INAIR,			eigkpunch_clobber
	JJXM	ATTACHED,		eigkpunch_clobber
	JJXM	DEAD,			eigkpunch_buttdrop
	JJXM	OPPOVERHEAD,		eigkpunch_clobber
	JJXM	WAITANIM,		eigkpunch_clobber
	JJXM	GRAPPLE,		eigkpunch_clobber
	JJXM	MASTER,			eigkpunch_clobber
	JJXM	SLAVE,			eigkpunch_clobber
	JJXM	HEADHOLD,		eigkpunch_clobber
	JJXM	HEADHELD,		eigkpunch_clobber
	JJXM	CHOKEHOLD,		eigkpunch_clobber
	JJXM	INAIR2,			eigkpunch_clobber
	JJXM_END

	rets

eigkpunch_clobber

	calla	ck_ignore
	jrc	eigkrets

	clr	a0
	move	a0,*a13(RUN_TIME)

	SETMODE	NORMAL

	FACE24	yok,run_slap_anim
	calla	change_anim1a

	WRSND	W_YOKO,PUNCH_T1,PUNCH_T2
	rets


*****
eigkpunch_rets
	rets

*****
eigkpunch_buttdrop

	movi	yok_3_butt_drop_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,GRABTHROW_T1,GRABTHROW_T2
	rets


************
eigkblock		;2

	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block

**************
eigkkick		;8
eigksuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  62  95	headbutt
* normal	>		normal punch
*
* onground	< 120 120	elbow drop
* onground	>		normal punch
*
* running |
* bouncing			normal punch
*
* onturnbkl	<  60  60	punch
* onturnbkl	>		normal punch
*
* puppet|inair			normal punch
*

	JJXM_INIT
	JJXM	NORMAL,			eigkscissor
	JJXM	DIZZY,			eigkscissor
	JJXM	BLOCK,			eigkscissor
	JJXM	ONGROUND,		eigkpunch_buttdrop
	JJXM	RUNNING,		eigkscissor
	JJXM	BOUNCING,		eigkscissor
	JJXM	ONTURNBKL,		eigkscissor
	JJXM	CLIMBTURNBKL,		eigkscissor
	JJXM	PUPPET,			eigkscissor
	JJXM	PUPPET2,		eigkscissor
	JJXM	INAIR,			eigkscissor
	JJXM	ATTACHED,		eigkscissor
	JJXM	DEAD,			eigkpunch_buttdrop
	JJXM	OPPOVERHEAD,		eigkscissor
	JJXM	WAITANIM,		eigkscissor
	JJXM	GRAPPLE,		eigkscissor
	JJXM	MASTER,			eigkscissor
	JJXM	SLAVE,			eigkscissor
	JJXM	HEADHOLD,		eigkscissor
	JJXM	HEADHELD,		eigkscissor
	JJXM	CHOKEHOLD,		eigkscissor
	JJXM	INAIR2,			eigkscissor
	JJXM_END

	rets

eigkscissor
;don't do it if opponent is behind you
	calla	ck_ignore
	jrc	eigkrets

	movi	yok_scissor_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_YOKO,GRABHOLD_T1,GRABHOLD_T2
eigkrets


*****************************************************************************
*

mode_inair	;2

	rets

*****************************************************************************
*

mode_attached	;3

	calla	keep_attached
	jrnz	vbmkstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

vbmkstill_attached
	rets

*****************************************************************************
mode_onground	;4

	rets


*****************************************************************************
*
* bouncing off ropes while running

mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	gqjjnot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	yok_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING

;	clr	a0
;	move	a0,*a13(GETUP_TIME)	;in control

gqjjnot_ended
	rets

*****************************************************************************
*
* STANDING ON TOP OF TURNBUCKLE

mode_onturnbkl	;6

;	;check unint
;	move	*a13(ANIMODE),a14
;	btst	MODE_UNINT_BIT,a14
;	jrnz	rhlzno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	rhlzno_climbdown

	movi	yok_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

rhlzno_interrupt
	rets

rhlzno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	rhlzz

	X32	a0
	addi	rhlzaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets


;For standing on top of turnbuckles

rhlzaction_table
	.long	rhlzz,rhlzpunch,rhlzblock,rhlzblock			;0-3
	.long	rhlzsuper_punch,rhlzsuper_punch,rhlzblock,rhlzblock	;4-7
	.long	rhlzkick,rhlzpunchkick,rhlzblock,rhlzblock		;8-11
	.long	rhlzsuper_punch,rhlzpunchkick,rhlzblock,rhlzblock	;12-15
	.long	rhlzsuper_kick,rhlzsuper_kick,rhlzblock,rhlzblock	;16-19
	.long	rhlzgraboh,rhlzgraboh,rhlzblock,rhlzblock		;20-23
	.long	rhlzsuper_kick,rhlzpunchkick,rhlzblock,rhlzblock	;24-27
	.long	rhlzgraboh,rhlzgraboh,rhlzblock,rhlzblock		;28-31

;	.long	rhlzz			;0
;	.long	rhlzpunch			;1
;	.long	rhlzblock			;2
;	.long	rhlzz			;3
;	.long	rhlzsuper_punch		;4
;	.long	rhlzz,rhlzz,rhlzz		;5-7
;	.long	rhlzkick			;8
;	.long	rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz	;9-15
;	.long	rhlzsuper_kick		;16
;	.long	rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz	;17-23
;	.long	rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz,rhlzz	;24-31

************
rhlzz
	rets

************
rhlzpunch		;1
rhlzblock		;2
rhlzsuper_punch	;4
rhlzpunchkick	;5
rhlzkick		;8
rhlzsuper_kick	;16
rhlzgraboh		;20

	SETMODE	INAIR

	movi	yok_tbukl_buttdrop_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,TURNDIVE_T1,TURNDIVE_T2

	rets

*****************************************************************************
* blocking

mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	wefzno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	wefzno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	wefzno
	cmpi	45,a0
	jrlt	wefzno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	wefzpunchblock

wefzno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	wefzno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	wefzset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	wefzaction_table,a0
	move	*a0,a0,L
	call	a0

wefzno_interrupt
	rets

wefzset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

wefzaction_table
	.long	wefzz,wefzpunchblock,wefzz	;0-2
	.long	wefzpunchblock		;3
	.long	wefzz,wefzz,wefzz,wefzz,wefzz,wefzz,wefzz	;4-10
	.long	wefzz,wefzz,wefzz,wefzz,wefzz,wefzz,wefzz	;11-17
	.long	wefzz,wefzz,wefzz,wefzz,wefzz,wefzz,wefzz	;18-24
	.long	wefzz,wefzz,wefzz,wefzz,wefzz,wefzz,wefzz	;25-31

************
wefzz
	rets

************
wefzpunchblock	;3
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* all				push
*

;This push has no collisions set!

	SETMODE	NORMAL

	movi	yok_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,PUSH_T1,PUSH_T2

	rets

*****************************************************************************
*

mode_dizzy	;8

;	move	*a13(GETUP_TIME),a0
;	jrnz	ewdistill_going
;
;	calla	clear_damage_log
;
;	clr	a0
;	move	a0,*a13(STARS_FLAG)
;
;	SETMODE	NORMAL
;
;ewdistill_going
	rets


*****************************************************************************
* opponent held overhead

mode_oppoverhead ;10

	move	*a13(ATTACH_PROC),a2,L		;proc attached to
	jrz	jdoknot_attached
	move	*a2(ATTACH_PROC),a0,L
	jrnz	jdokstill_attached

jdoknot_attached

	move	*a13(ANIMODE),a0		;* remove this????
	btst	MODE_UNINT_BIT,a0		;*
	jrnz	jdokno_interrupt			;*

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	CALLA	FIND_AND_KILL_ENDLESS
	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

	rets

jdokstill_attached
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	jdokno_interrupt

	move	*a13(FACING_DIR),a0
	andni	MOVE_UP,a0
	ori	MOVE_DOWN,a0
	move	a0,*a13(FACING_DIR)
	move	a0,*a13(NEW_FACING_DIR)

	move	*a13(STICK_VAL_CUR),a0
	jrz	jdokstand

	move	a0,*a13(MOVE_DIR)
	calla	execute_walk

	movi	yok_holdoh_anim,a0
	calla	change_anim2
 	jruc	jdokck_butns
jdokstand
	clr	a0
	move	a0,*a13(MOVE_DIR)
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	movi	yok_stndholdoh_anim,a0
	calla	change_anim1

jdokck_butns

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	jdokaction_table,a0
	move	*a0,a0,L
	call	a0

jdokno_interrupt
	rets

jdokaction_table
	.long	jdokz,jdokpunch,jdokblock,jdokblock			;0-3
	.long	jdoksuper_punch,jdoksuper_punch,jdokblock,jdokblock	;4-7
	.long	jdokkick,jdokpunchkick,jdokblock,jdokblock		;8-11
	.long	jdoksuper_punch,jdokpunchkick,jdokblock,jdokblock	;12-15
	.long	jdoksuper_kick,jdoksuper_kick,jdokblock,jdokblock	;16-19
	.long	jdokgraboh,jdokgraboh,jdokblock,jdokblock		;20-23
	.long	jdoksuper_kick,jdokpunchkick,jdokblock,jdokblock	;24-27
	.long	jdokgraboh,jdokgraboh,jdokblock,jdokblock		;28-31

************
jdokz
	rets

************
jdokpunch		;1
jdokblock		;2
jdokkick		;8
jdoksuper_kick	;16
jdokpunchkick
jdokgraboh

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	jdokslam

	movi	yok_spinslam_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,HIPTOSS_T1,HIPTOSS_T2

	rets
jdokslam
;Just slam him down
	movi	yok_overhd_slam_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,HIPTOSS_T1,HIPTOSS_T2

	rets

jdoksuper_punch	;4

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_UP_BIT,a0
	jrz	jdokpunch

	CALLA	FIND_AND_KILL_ENDLESS
	.ref	yok_overhd_slam2_anim
	movi	yok_overhd_slam2_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,HIPTOSS_T1,HIPTOSS_T2

	rets

*****************************************************************************
*
* CLIMBING UP OR DOWN THE TURNBUCKLE

mode_climbturnbkl	;11

	rets


*****************************************************************************

mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	tkgenot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

tkgenot_ended
	rets


*****************************************************************************

mode_grapple	;13
	rets
;
;
;	move	*a13(GETUP_TIME),a0
;	jrnz	rawestill_going
;
;;now get move off
;;if opponents meter almost zero then break apart
;
;	calla	break_lockup
;	rets
;
;
;rawestill_going
;	calla	lineup_grapple
;	rets


*****************************************************************************

mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets

*****************************************************************************

mode_slave	;15
	rets

;Jason, finish all these moves from the head hold
*****************************************************************************

mode_headhold	;16

;Bozo power move
	.ref	bozo_check
	calla	bozo_check
	jrnc	ycjjfail

	WRSND	W_YOKO,GRABFLING_T1,GRABFLING_T2

	movi	yok_vsuplex_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	ycjjtag
	movi	yok_scissor_anim,a0
ycjjtag	calla	change_anim1a

	rets

ycjjfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	ycjjexit

;	move	*a13(ATTACH_PROC),a10,L
;	jrz	ycjjexit

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ycjjno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	ycjjaction_table,a0
	move	*a0,a0,L
	call	a0

ycjjno_interrupt
	rets

ycjjexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	ycjjright
	movk	MOVE_DOWN_LEFT,a1
ycjjright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

ycjjaction_table
	.long	ycjjz,ycjjpunch,ycjjblock,ycjjblock			;0-3
	.long	ycjjsuper_punch,ycjjsuper_punch,ycjjblock,ycjjblock	;4-7
	.long	ycjjkick,ycjjpunchkick,ycjjblock,ycjjblock		;8-11
	.long	ycjjsuper_punch,ycjjpunchkick,ycjjblock,ycjjblock	;12-15
	.long	ycjjsuper_kick,ycjjsuper_kick,ycjjblock,ycjjblock	;16-19
	.long	ycjjgraboh,ycjjgraboh,ycjjblock,ycjjblock		;20-23
	.long	ycjjsuper_kick,ycjjpunchkick,ycjjblock,ycjjblock	;24-27
	.long	ycjjgraboh,ycjjgraboh,ycjjblock,ycjjblock		;28-31

************
ycjjblock
ycjjgraboh
ycjjz		;0
	rets

************

ycjjpunch		;1
;If stick is toward opponent, then do quick punches
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	ycjjtag2
;	movi	dnk_uppercuts_to_head_anim,a0
	.ref	yok_4_knee2_anim
	movi	yok_4_knee2_anim,a0
	calla	change_anim1a

	WRSND	W_YOKO,KICK_T1,KICK_T2

	rets


ycjjtag2
;	movi	dnk_uppercut_to_head_anim,a0
	movi	yok_4_knee2_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

************
ycjjsuper_punch	;4

ycjjupper
	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	ycjjz

	CALLA	FIND_AND_KILL_ENDLESS

	SPCDMG	D_UPRCUT/2,15

	movi	yok_4_uppercut_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,UPRCUT_T1,UPRCUT_T2
	rets

ycjjpunchkick
ycjjkick
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	ycjjknee

;	movi	dnk_3_head_slam_anim,a0
	movi	yok_4_knee2_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

ycjjknee
std_4_knee
	movi	yok_4_knee2_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets

ycjjsuper_kick	;16
	CALLA	FIND_AND_KILL_ENDLESS
;If stick is toward opponent, then do quick knees
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	ycjjkick

;Quick knees
;	movi	dnk_3_knees_to_head_anim,a0
	movi	yok_4_knee2_anim,a0
	calla	change_anim1a
	WRSND	W_YOKO,KICK_T1,KICK_T2
	rets


*****************************************************************************
mode_puppet2	;17

;	;check for the head-grab breaker
;	move	*a13(BUT_VAL_DOWN),a0
;	btst	PLAYER_KICK_BIT,a0
;	jrz	ncvqout
;
;	;check the time - must do it within 20 ticks
;	move	*a13(HEAD_GRAB_TIME),a14
;	move	@PCNT,a0
;	sub	a14,a0
;	cmpi	KICK_OUT,a0
;	jrgt	ncvqout
;
;	move	*a13(PLYR_TYPE),a14
;	cmpi	PTYPE_DRONE,a14
;	jrz	ncvqout
;     
;	;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
;	move	*a13(ATTACH_PROC),a0,L
;	clr	a14
;	move	a14,*a13(ATTACH_PROC),L
;	move	a14,*a0(ATTACH_PROC),L
;	movi	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;	SETMODE	NORMAL
;	jruc	std_4_knee
;
;ncvqout
	rets

*****************************************************************************

mode_headheld	;19

	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking

;Bozo reversal
	calla	bozo_check
	jrnc	ydphfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_YOKO,GRABFLING_T1,GRABFLING_T2

	movi	yok_vsuplex_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	ydphtag
	movi	yok_scissor_anim,a0
ydphtag	calla	change_anim1a

	rets
ydphfail

;He may have let me go by hitting his block butn!
	move	*a13(ATTACH_PROC),a0,L
	jrnz	ydphno_luck

;Make sure this guy is on ground
	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	ydphno_luck

;hit_gnd

	movi	yok_3_head_held_stand_anim,a0
	calla	change_anim1a

ydphno_luck
	rets

*****************************************************************************
mode_chokehold	;24
	rets

*****************************************************************************

;ixzwVEL	equ	30000h		;38000h	;30000h
;ixzwDVEL	equ	21f0eh		;27978h	;21f0eh
;ixzwVEL	equ	38000h		;38000h	;30000h
;ixzwDVEL	equ	30000h		;27978h	;21f0eh
ixzwVEL	equ	3a000h		;38000h	;30000h
ixzwDVEL	equ	31000h		;27978h	;21f0eh


 SUBR yok_velocity_table

;		X,	Z

	.long	0,	-ixzwVEL	;0 UP

	.long	ixzwDVEL,	-ixzwDVEL	;1 UP-RIGHT

	.long	ixzwVEL,	0	;2 RIGHT

	.long	ixzwDVEL,	ixzwDVEL	;3 DOWN-RIGHT

	.long	0,	ixzwVEL	;4 DOWN

	.long	-ixzwDVEL,	ixzwDVEL	;5 DOWN-LEFT

	.long	-ixzwVEL,	0	;6 LEFT

	.long	-ixzwDVEL,	-ixzwDVEL	;7 UP-LEFT


*****************************************************************************

 SUBR yok_rotate_anims_table
; old = up right
	.long	yok_stand2_anim		;new = up right
	.long	yok_2_to_4_turn_anim	;    = down right
	.long	yok_2_to_6_turn_anim	;    = down left
	.long	yok_2_to_8_turn_anim	;    = up left

; old = down right
	.long	yok_4_to_2_turn_anim	;new = up right
	.long	yok_stand4_anim		;    = down right
	.long	yok_4_to_6_turn_anim	;    = down left
	.long	yok_4_to_8_turn_anim	;    = up left

; old = down left
	.long	yok_6_to_2_turn_anim	;new = up right
	.long	yok_6_to_4_turn_anim	;    = down right
	.long	yok_stand6_anim		;    = down left
	.long	yok_6_to_8_turn_anim	;    = up left

; old = up left
	.long	yok_8_to_2_turn_anim	;new = up right
	.long	yok_8_to_4_turn_anim	;    = down right
	.long	yok_8_to_6_turn_anim	;    = down left
	.long	yok_stand8_anim		;    = up left


 SUBR yok_leg_anims_table
;  MOVE
;(ukdv1 - UP)				FACING
	.long	yok_walk1_f2_anim	;1 (UP)
	.long	yok_walk1_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk1_f4_anim	;3 (RIGHT)
	.long	yok_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk1_f4_anim	;5 (DOWN)
	.long	yok_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk1_f2_anim	;7 (LEFT)
	.long	yok_walk1_f2_anim	;8 (UP-LEFT)

;(ukdv2 - UP-RIGHT)
	.long	yok_walk2_f2_anim	;1 (UP)
	.long	yok_walk2_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk2_f2_anim	;3 (RIGHT)
	.long	yok_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk8_f4_anim	;5 (DOWN)
	.long	yok_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk4_f2_anim	;7 (LEFT)
	.long	yok_walk4_f2_anim	;8 (UP-LEFT)

;(ukdv3 - RIGHT)
	.long	yok_walk2_f2_anim	;1 (UP)
	.long	yok_walk2_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk2_f2_anim	;3 (RIGHT)
	.long	yok_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk4_f4_anim	;5 (DOWN)
	.long	yok_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk6_f2_anim	;7 (LEFT)
	.long	yok_walk6_f2_anim	;8 (UP-LEFT)


;(ukdv4 - DOWN-RIGHT)
	.long	yok_walk2_f2_anim	;1 (UP)
	.long	yok_walk8_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk4_f4_anim	;3 (RIGHT)
	.long	yok_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk2_f4_anim	;5 (DOWN)
	.long	yok_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk2_f2_anim	;7 (LEFT)
	.long	yok_walk6_f2_anim	;8 (UP-LEFT)

;(ukdv5 - DOWN)
	.long	yok_walk5_f2_anim	;1 (UP)
	.long	yok_walk5_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk5_f4_anim	;3 (RIGHT)
	.long	yok_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk5_f4_anim	;5 (DOWN)
	.long	yok_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk5_f2_anim	;7 (LEFT)
	.long	yok_walk5_f2_anim	;8 (UP-LEFT)

;(ukdv6 - DOWN-LEFT)
	.long	yok_walk2_f2_anim	;1 (UP)
	.long	yok_walk6_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk2_f2_anim	;3 (RIGHT)
	.long	yok_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk2_f4_anim	;5 (DOWN)
	.long	yok_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk2_f2_anim	;7 (LEFT)
	.long	yok_walk8_f2_anim	;8 (UP-LEFT)

;(ukdv7 - LEFT)
	.long	yok_walk2_f2_anim	;1 (UP)
	.long	yok_walk6_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk6_f2_anim	;3 (RIGHT)
	.long	yok_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk4_f4_anim	;5 (DOWN)
	.long	yok_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk2_f2_anim	;7 (LEFT)
	.long	yok_walk2_f2_anim	;8 (UP-LEFT)

;(ukdv8 - UP-LEFT)
	.long	yok_walk2_f2_anim	;1 (UP)
	.long	yok_walk4_f2_anim	;2 (UP_RIGHT)
	.long	yok_walk6_f2_anim	;3 (RIGHT)
	.long	yok_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	yok_walk6_f4_anim	;5 (DOWN)
	.long	yok_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	yok_walk2_f2_anim	;7 (LEFT)
	.long	yok_walk2_f2_anim	;8 (UP-LEFT)


 SUBR yok_torso_anims_table
; old = up right
	.long	yok_torso2_anim		;new = up right
	.long	yok_2_to_4_turn2_anim	;    = down right
	.long	yok_2_to_6_turn2_anim	;    = down left
	.long	yok_2_to_8_turn2_anim	;    = up left

; old = down right
	.long	yok_4_to_2_turn2_anim	;new = up right
	.long	yok_torso4_anim		;    = down right
	.long	yok_4_to_6_turn2_anim	;    = down left
	.long	yok_4_to_8_turn2_anim	;    = up left

; old = down left
	.long	yok_6_to_2_turn2_anim	;new = up right
	.long	yok_6_to_4_turn2_anim	;    = down right
	.long	yok_torso6_anim		;    = down left
	.long	yok_6_to_8_turn2_anim	;    = up left

; old = up left
	.long	yok_8_to_2_turn2_anim	;new = up right
	.long	yok_8_to_4_turn2_anim	;    = down right
	.long	yok_8_to_6_turn2_anim	;    = down left
	.long	yok_torso8_anim		;    = up left


******************************************************************************

	.end

