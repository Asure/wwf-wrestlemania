TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Gilbert the Wonder Hamster
       4                    * Initiated:            7/15/94
       5                    *
       6                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    **************************************************************
       9                    
      10                            .file   "lex.asm"
      12                            .width  132
      13                            .option b,d,l,t
      14                            .mnolist
      15                    
      16                    
      17                            .include        "macros.h"
      18                            .include        "jjxm.h"
      19                            .include        "mproc.equ"             ;Mproc equates
      20                            .include        "display.equ"           ;Display proc equates
      21                            .include        "gsp.equ"               ;Gsp asm equates
      22                            .include        "sys.equ"
      23                            .include        "game.equ"
      24                            .include        "plyr.equ"
      25                            .include        "anim.equ"
      26                            .include        "audit.equ"
      27                            .include        "sound.h"
      28                            .include        "ring.equ"
      29                            .include        "lifebar.h"
      30                            .include        "damage.equ"
      31                    
      32                    
      33                    ******************************************************************************
      34                    * EXTERNAL REFERENCES
      35                    
      36                            .ref    change_anim1a,change_anim2a,master_keep_attached
      37                            .ref    do_taunt,CLIMB_ROPES,bounce_off_ropes,mode_inair2
      38                            .ref    check_secret_moves,mode_choking,DO_REVERSAL_MESS
      39                            .ref    ck_ignore,climb_turnbuckle,execute_walk,PCNT
      40                            .ref    get_opp_plyrmode,ADD_IF_SILENT,DO_REVERSAL,mode_puppet
      41                            .ref    process_ptrs,keep_attached,change_anim1,JUMP_ROPES
      42                            .ref    FIND_AND_KILL_ENDLESS,BONUS_MESS
      43                            .ref    CHECK_COMBO_GO,ck_teammate_pin,raisearm_check
      44                            .ref    BLOCK_WOOSH,drone_change_back,mode_dead,get_opp_process
      45                            .ref    lex_combo_punch_anim,can_pin,round_award
      46                            .ref    lex_combo_kick_anim,set_raisearm_bit
      47                            .ref    blocking_off,std_taunt,std_walk_fast
      48                            .ref    hyper_speed_on
      49                            .ref    in_finish_move
      50                            .ref    p1rounds,p2rounds
      51                            .if NUM_LEX_FINISHES
      52                            .ref    lex_finish1_move
      53                            .if NUM_LEX_FINISHES > 1
      54                            .ref    lex_finish2_move
      55                            .endif
      56                            .endif
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                    
      58                    ******************************************************************************
      59                    * ANIMATION SEQUENCES
      60                    
      61                            .ref    start_run_anim
      62                    
      63                            .ref    lex_4_block_anim
      64                    
      65                            .ref    lex_stand2_anim,lex_stand8_anim
      66                            .ref    lex_stand4_anim,lex_stand6_anim
      67                            .ref    lex_torso2_anim,lex_torso8_anim
      68                            .ref    lex_torso4_anim,lex_torso6_anim
      69                    
      70                            .ref    lex_2_to_4_turn_anim,lex_8_to_6_turn_anim       ;stand
      71                            .ref    lex_4_to_2_turn_anim,lex_6_to_8_turn_anim
      72                            .ref    lex_4_to_6_turn_anim,lex_6_to_4_turn_anim
      73                            .ref    lex_2_to_8_turn_anim,lex_8_to_2_turn_anim
      74                            .ref    lex_4_to_8_turn_anim,lex_6_to_2_turn_anim
      75                            .ref    lex_2_to_6_turn_anim,lex_8_to_4_turn_anim
      76                    
      77                            .ref    lex_2_to_4_turn2_anim,lex_8_to_6_turn2_anim     ;torso
      78                            .ref    lex_4_to_2_turn2_anim,lex_6_to_8_turn2_anim
      79                            .ref    lex_4_to_6_turn2_anim,lex_6_to_4_turn2_anim
      80                            .ref    lex_2_to_8_turn2_anim,lex_8_to_2_turn2_anim
      81                            .ref    lex_4_to_8_turn2_anim,lex_6_to_2_turn2_anim
      82                            .ref    lex_2_to_6_turn2_anim,lex_8_to_4_turn2_anim
      83                    
      84                            .ref    lex_walk1_f2_anim,lex_walk2_f2_anim,lex_walk4_f2_anim
      85                            .ref    lex_walk5_f2_anim,lex_walk6_f2_anim,lex_walk8_f2_anim
      86                    
      87                            .ref    lex_walk1_f4_anim,lex_walk2_f4_anim,lex_walk4_f4_anim
      88                            .ref    lex_walk5_f4_anim,lex_walk6_f4_anim,lex_walk8_f4_anim
      89                    
      90                            .ref    lex_run2_anim,lex_hiptoss2_anim
      91                    
      92                            .ref    lex_2_punch_anim,lex_4_punch_anim
      93                            .ref    lex_2_kick_anim,lex_4_kick_anim
      94                    
      95                            .ref    lex_2_butt_anim,lex_4_butt_anim
      96                            .ref    lex_4_knee_anim
      97                            .ref    lex_2_stomp_anim,lex_4_stomp_anim
      98                    
      99                            .ref    lex_2_raise_arm_anim,lex_4_raise_arm_anim
     100                    
     101                            .ref    lex_3_clobber_anim
     102                    
     103                            .ref    lex_4_push_anim
     104                    
     105                            .ref    lex_4_grabfling_anim
     106                    
     107                            .ref    lex_fall_back_anim
     108                    
     109                            .ref    lex_flying_kick_anim
     110                    
     111                            .ref    lex_2_ground_punch_anim,lex_4_ground_punch_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                            .ref    lex_flying_ground_punch_anim,lex_climb_down_anim
     113                            .ref    lex_buckle_leap_anim,lex_climb_up_anim
     114                            .ref    lex_backbreaker_anim,lex_ohslam_anim
     115                    
     116                            .ref    lex_3_head_held_stand_anim,lex_2_hair_pickup_anim
     117                            .ref    lex_3_knee_to_head_anim
     118                            .ref    lex_4_hair_pickup_anim,lex_2_grabfling_anim
     119                            .ref    lex_3_head_hold2_anim
     120                            .ref    lex_3_head_hold_anim
     121                    
     122                            .ref    lex_vsuplex_anim,lex_super_kick_anim
     123                            .ref    lex_4_knee_fall_anim,lex_4_graboh_anim
     124                            .ref    lex_hiptoss_anim,lex_4_bigboot_anim
     125                            .ref    lex_slamdown_anim
     126                    
     127                            .ref    lex_2_pin_anim,lex_4_pin_anim
     128                            .ref    lex_2_clobber_anim,lex_4_clobber_anim
     129                    
     130                    ;       .ref    lex_pkup_chair_anim
     131                            .ref    lex_sliding_elbow_anim
     132                            .ref    lex_knees_to_head_anim
     133                            .ref    lex_grab2elbow_anim
     134                    
     135                    ******************************************************************************
     136                    * SYMBOLS DEFINED IN THIS FILE
     137                    
     138                    ******************************************************************************
     139                    * EQUATES FOR THIS FILE
     140                    
     141                    *****************************************************************************
     142                    *
     143                    * SPECIAL MOVES - History checks
     144                    
     145 00000000           lex_secret_moves
     146 00000000 00000240'         .long   uijqcharge_clobber
     147 00000020 00000a30'         .long   uijqneck_grab
     148 00000040 00000fa0'         .long   uijqgrab_fling
     149 00000060 00001680'         .long   uijqhip_toss
     150 00000080 00000e20'         .long   uijqgrab_fling2
     151 000000a0 00000e70'         .long   uijqhip_toss2
     152 000000c0 00001c40'         .long   uijqsliding_elbow
     153 000000e0 000006d0'         .long   uijqhammer
     154 00000100 00000000          .long   0
     155                    
     156                    ******************************************************************************
     157                    *
     158                    * SPECIAL MOVE PROCESSES - Secret moves
     159                    *
     160                    ;a8=process of wrestler
     161                    
     162 00000120            SUBR   lex_smove_table
     163 00000120 00002150'         .long   lex_hdhold_pile
     164 00000140 00002cb0'         .long   lex_hdhold_elbow_face
     165 00000160 00004450'         .long   lex_hdhold_graboh
     166 00000180 00003830'         .long   lex_grab_toss_air
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167 000001a0 00004f10'         .long   lex_hdhold_combo1
     168 000001c0 00005800'         .long   lex_hdhold_combo2
     169                    ;       .long   lex_hdhold_anti_combo
     170 000001e0 00000000!         .long   std_walk_fast
     171 00000200 00000000!         .long   std_taunt
     172                    
     173                            .if NUM_LEX_FINISHES
     174                            .long   lex_finish_move1
     175                            .endif
     176                            .if NUM_LEX_FINISHES > 1
     177                            .long   lex_finish_move2
     178                            .endif
     179 00000220 00000000          .long   0
     180                    
     181                    *******************************************************************************
     182 00000240           uijqcharge_clobber
     183 00000240     b5a0          move    *a13(BUT_VAL_UP),a0
         00000250     0bb0  
     184 00000260     1fe0          btst    PLAYER_PUNCH_BIT,a0
     185 00000270     ca0c          jrz     uijqno_punch
     186                    
     187                    ;       move    *a13(PLYRMODE),a0
     188                    ;       cmpi    MODE_ONTURNBKL,a0
     189                    ;       jrz     uijqno_punch
     190                    
     191 00000280     b5a0          move    *a13(PLYRNUM),a0
         00000290     0580  
     192                            .ref    get_punch_dtime
     193 000002a0     0d5f          calla   get_punch_dtime
         000002b0 00000000! 
     194 000002d0     0b40          cmpi    100,a0                  ;> min?
         000002e0     ff9b  
     195 000002f0     c404          jrlt    uijqno_punch
     196                    
     197 00000300     0d3f          callr   uijqscrt_clbr
         00000310     0004  
     198 00000320     0de0          setc
     199 00000330     0960          rets
     200                    
     201 00000340           uijqno_punch
     202 00000340     0320          clrc
     203 00000350     0960          rets
     204                    
     205                    
     206 00000360           uijqscrt_clbr
     207                    
     208 00000360     b5a0          move    *a13(PLYRMODE),a0
         00000370     05c0  
     209 00000380     0b40          cmpi    MODE_HEADHELD,a0
         00000390     ffec  
     210 000003a0     ca00          jrz     uijqout
         000003b0     009e  
     211 000003c0     0b40          cmpi    MODE_HEADHOLD,a0
         000003d0     ffef  
     212 000003e0     ca00          jrz     uijqout
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

         000003f0     009a  
     213                    
     214 00000400     b5a0          move    *a13(ANIMODE),a0
         00000410     0660  
     215 00000420     1fa0          btst    MODE_UNINT_BIT,a0
     216 00000430     cb00          jrnz    uijqout
         00000440     0095  
     217                    
     218                    ;Don't do it when he is on ground
     219                    ;       calla   get_opp_plyrmode
     220                    ;       cmpi    MODE_ONGROUND,a0
     221                    ;       jrz     uijqout
     222                    ;       cmpi    MODE_DEAD,a0
     223                    ;       jrz     uijqout
     224                    ;       move    *a13(PLYRMODE),a0
     225                    ;       cmpi    MODE_RUNNING,a0
     226                    ;       jrz     uijqleapclbr
     227                    ;
     228                    ;;If stick is toward opponent, then do sliding/leaping buzzer
     229                    ;       move    *a13(STICK_VAL_CUR),a0
     230                    ;       move    *a13(NEW_FACING_DIR),a1
     231                    ;       andi    0ch,a1
     232                    ;       cmp     a0,a1
     233                    ;       jrnz    uijqnorm
     234                    ;
     235                    ;uijqleapclbr
     236                    ;;missing noise for a reason !
     237                    ;       WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
     238                    ;       FACE24  lex,clobber2_anim
     239                    ;       calla   change_anim1
     240                    ;       rets
     241                    ;uijqnorm
     242                    
     243 00000450                   WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
     244 000005f0                   FACE24  lex,clobber_anim
     245 00000690     0d5f          calla   change_anim1
         000006a0 00000000! 
     246                    
     247 000006c0     0960          rets
     248                    
     249                    *******************************************************************************
     250 000006d0           uijqhammer
     251 000006d0     0100          .word   B_SKICK,                        J_ALL
     252 000006f0     0008          .word   J_TOWARD,               J_REAL_LR
     253 00000710     0008          .word   J_TOWARD,               J_REAL_LR
     254 00000730     8020          .word   8000h | 32              ;max
     255 00000740 00000760'         .long   scrt_hammer
     256                    
     257 00000760           scrt_hammer
     258 00000760     b5a0          move    *a13(ANIMODE),a0
         00000770     0660  
     259 00000780     1fa0          btst    MODE_UNINT_BIT,a0
     260 00000790     cb60          jrnz    uijqout
     261                    
     262 000007a0     b5a0          move    *a13(PLYRMODE),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

         000007b0     05c0  
     263 000007c0     0b40          cmpi    MODE_ONTURNBKL,a0
         000007d0     fff9  
     264 000007e0     ca5b          jrz     uijqout
     265 000007f0     0b40          cmpi    MODE_OPPOVERHEAD,a0
         00000800     fff5  
     266 00000810     ca58          jreq    uijqout
     267                    
     268                            .ref    lex_hammer_anim
     269 00000820     09e0          movi    lex_hammer_anim,a0
         00000830 00000000! 
     270 00000850     0d5f          calla   change_anim1a
         00000860 00000000! 
     271                    
     272                    ;missing noise for a reason !
     273 00000880                   WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
     274                    
     275 00000a20     0960          rets
     276                    
     277                    ******************************************************************************
     278 00000a30           uijqneck_grab
     279 00000a30     0040          .word   B_SPUNCH,               J_ALL
     280 00000a50     0008          .word   J_TOWARD,               J_REAL_LR
     281 00000a70     0008          .word   J_TOWARD,               J_REAL_LR
     282 00000a90     801e          .word   8000h | 30              ;max
     283 00000aa0 00000ac0'         .long   uijqscrt_neck
     284                    
     285 00000ac0           uijqscrt_neck
     286 00000ac0     b5a0          move    *a13(ANIMODE),a0
         00000ad0     0660  
     287 00000ae0     1fa0          btst    MODE_UNINT_BIT,a0
     288 00000af0     cb2a          jrnz    uijqout
     289                    
     290                    ;Don't do it when he is on ground
     291 00000b00     0d5f          calla   get_opp_plyrmode
         00000b10 00000000! 
     292 00000b30     0b40          cmpi    MODE_ONGROUND,a0
         00000b40     fffb  
     293 00000b50     ca24          jrz     uijqout
     294 00000b60     0b40          cmpi    MODE_DEAD,a0
         00000b70     fff6  
     295 00000b80     ca21          jrz     uijqout
     296 00000b90     0b40          cmpi    MODE_HEADHELD,a0
         00000ba0     ffec  
     297 00000bb0     ca1e          jrz     uijqout
     298                    ;Mode held overhead!
     299 00000bc0     0b40          cmpi    MODE_ATTACHED,a0
         00000bd0     fffc  
     300 00000be0     ca1b          jrz     uijqout
     301                    
     302 00000bf0     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         00000c00     0cd0  
     303 00000c10     07a0          move    @PCNT,a0,L
         00000c20 00000000! 
     304 00000c40     45c0          sub     a14,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     305 00000c50     0b40          cmpi    2*60,a0
         00000c60     ff87  
     306 00000c70     c507          jrge    uijqok2
     307                    
     308                    ;This head grab is too close (in terms of time) to most recent grab
     309                            .ref    lex_3_fake_hold_anim
     310 00000c80     09e0          movi    lex_3_fake_hold_anim,a0
         00000c90 00000000! 
     311 00000cb0     0d5f          calla   change_anim1a
         00000cc0 00000000! 
     312 00000ce0     0960          rets
     313                    
     314 00000cf0           uijqok2
     315 00000cf0     b5a1          move    *a13(CLOSEST_XDIST),a1
         00000d00     0370  
     316 00000d10     0b41          cmpi    90,a1
         00000d20     ffa5  
     317 00000d30     c707          jrgt    uijqstd_grab
     318                    
     319 00000d40     09e0          movi    lex_3_head_hold2_anim,a0
         00000d50 00000000! 
     320 00000d70     0d5f          calla   change_anim1a
         00000d80 00000000! 
     321 00000da0     0960  uijqout rets
     322                    
     323 00000db0           uijqstd_grab
     324 00000db0     09e0          movi    lex_3_head_hold_anim,a0
         00000dc0 00000000! 
     325 00000de0     0d5f          calla   change_anim1a
         00000df0 00000000! 
     326 00000e10     0960          rets
     327                    
     328                    *******************************************************************************
     329                    
     330 00000e20           uijqgrab_fling2
     331 00000e20     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     332 00000e40     800a          .word   8000h | 10              ;max
     333 00000e50 00000ec0'         .long   uijqscrt_grabfling2
     334                    
     335 00000e70           uijqhip_toss2
     336 00000e70     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     337 00000e90     800a          .word   8000h | 10              ;max
     338 00000ea0 00000ec0'         .long   uijqscrt_grabfling2
     339                    
     340 00000ec0           uijqscrt_grabfling2
     341 00000ec0     b5a0          move    *a13(ANIMODE),a0
         00000ed0     0660  
     342 00000ee0     1fa0          btst    MODE_UNINT_BIT,a0
     343 00000ef0     cbea          jrnz    uijqout
     344                    
     345                    ;If opponent is running, do a hip toss
     346 00000f00     0d5f          calla   get_opp_plyrmode
         00000f10 00000000! 
     347 00000f30     0b40          cmpi    MODE_BOUNCING,a0
         00000f40     fffa  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     348 00000f50     ca1a          jrz     uijqyes
     349 00000f60     0b40          cmpi    MODE_RUNNING,a0
         00000f70     fffe  
     350 00000f80     ca17          jrz     uijqyes
     351 00000f90     0960          rets
     352                    
     353                    ******************************************************************************
     354 00000fa0           uijqgrab_fling
     355                    ;       .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     356                    ;       .word   8000h | 10              ;max
     357                    ;       .long   uijqscrt_grabfling
     358                    
     359 00000fa0     0040          .word   B_SPUNCH,               J_ALL
     360 00000fc0     0004          .word   J_AWAY,         J_REAL_LR
     361 00000fe0     0004          .word   J_AWAY,         J_REAL_LR
     362 00001000     8020          .word   8000h | 32              ;max
     363 00001010 00001030'         .long   uijqscrt_grabfling
     364                    
     365 00001030           uijqscrt_grabfling
     366                    
     367                    ;Make this miss, rotate to missed opponent,
     368                    ;and stay rotated to flung opponent, also make
     369                    ;this work from both angles!
     370                    
     371 00001030     b5a0          move    *a13(ANIMODE),a0
         00001040     0660  
     372 00001050     1fa0          btst    MODE_UNINT_BIT,a0
     373 00001060     cbd3          jrnz    uijqout
     374                    
     375                    ;If opponent is running, do a hip toss
     376 00001070     0d5f          calla   get_opp_plyrmode
         00001080 00000000! 
     377 000010a0     0b40          cmpi    MODE_BOUNCING,a0
         000010b0     fffa  
     378 000010c0     ca03          jrz     uijqyes
     379 000010d0     0b40          cmpi    MODE_RUNNING,a0
         000010e0     fffe  
     380 000010f0     cb21          jrnz    uijqnope
     381 00001100           uijqyes
     382 00001100     09e0          movi    lex_hiptoss_anim,a0
         00001110 00000000! 
     383 00001130     0d5f          calla   change_anim1a
         00001140 00000000! 
     384                    
     385 00001160                   WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
     386 00001300     0960          rets
     387                    
     388 00001310           uijqnope
     389                    ;Don't fling when he is on ground
     390 00001310     0d5f          calla   get_opp_plyrmode
         00001320 00000000! 
     391 00001340     0b40          cmpi    MODE_HEADHELD,a0
         00001350     ffec  
     392 00001360     caa3          jrz     uijqout
     393 00001370     0b40          cmpi    MODE_ONGROUND,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

         00001380     fffb  
     394 00001390     caa0          jrz     uijqout
     395 000013a0     0b40          cmpi    MODE_DEAD,a0
         000013b0     fff6  
     396 000013c0     ca9d          jrz     uijqout
     397                    ;Mode held overhead!
     398 000013d0     0b40          cmpi    MODE_ATTACHED,a0
         000013e0     fffc  
     399 000013f0     ca9a          jrz     uijqout
     400                    
     401                    ;       move    *a13(LAST_FLING_ATTEMPT),a14,L
     402                    ;       move    @PCNT,a0,L
     403                    ;       sub     a14,a0
     404                    ;       cmpi    3*60,a0
     405                    ;       jrge    uijqok2a
     406                    ;
     407                    ;;This head grab is too close (in terms of time) to most recent grab
     408                    ;       movi    lex_3_clobber_anim,a0
     409                    ;;      FACE24  lex,punch_anim
     410                    ;       calla   change_anim1a
     411                    ;
     412                    ;       WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
     413                    ;       rets
     414                    ;
     415                    ;uijqok2a
     416                    ;       move    @PCNT,a14,L                     ;use 32-bit PCNT!
     417                    ;       move    a14,*a13(LAST_FLING_ATTEMPT),L
     418                    
     419 00001400                   FACE24  lex,grabfling_anim
     420 000014a0     0d5f          calla   change_anim1a
         000014b0 00000000! 
     421                    
     422 000014d0                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     423 00001670     0960          rets
     424                    
     425                    *******************************************************************************
     426 00001680           uijqhip_toss
     427                    ;       .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     428                    ;       .word   8000h | 10              ;max
     429                    ;       .long   uijqscrt_hiptoss
     430                    
     431 00001680     0010          .word   B_PUNCH,                J_ALL
     432 000016a0     0004          .word   J_AWAY,         J_REAL_LR
     433 000016c0     0004          .word   J_AWAY,         J_REAL_LR
     434 000016e0     8020          .word   8000h | 32              ;max
     435 000016f0 00001710'         .long   uijqscrt_hiptoss
     436                    
     437 00001710           uijqscrt_hiptoss
     438 00001710     b5a0          move    *a13(ANIMODE),a0
         00001720     0660  
     439 00001730     1fa0          btst    MODE_UNINT_BIT,a0
     440 00001740     cb00          jrnz    uijqout
         00001750     ff64  
     441                    
     442                    ;Don't do it when he is on ground
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     443 00001760     0d5f          calla   get_opp_plyrmode
         00001770 00000000! 
     444 00001790     0b40          cmpi    MODE_ONGROUND,a0
         000017a0     fffb  
     445 000017b0     ca00          jrz     uijqout
         000017c0     ff5d  
     446                    ;       cmpi    MODE_BLOCK,a0
     447                    ;       jrz     uijqout
     448 000017d0     0b40          cmpi    MODE_DEAD,a0
         000017e0     fff6  
     449 000017f0     ca00          jrz     uijqout
         00001800     ff59  
     450 00001810     0b40          cmpi    MODE_HEADHELD,a0
         00001820     ffec  
     451 00001830     ca00          jrz     uijqout
         00001840     ff55  
     452 00001850     0b40          cmpi    MODE_INAIR,a0
         00001860     fffd  
     453 00001870     ca0d          jrz     uijqdoit
     454 00001880     0b40          cmpi    MODE_INAIR2,a0
         00001890     ffea  
     455 000018a0     ca0a          jrz     uijqdoit
     456                    ;Mode held overhead!
     457 000018b0     0b40          cmpi    MODE_ATTACHED,a0
         000018c0     fffc  
     458 000018d0     ca00          jrz     uijqout
         000018e0     ff4b  
     459                    
     460 000018f0     b5a0          move    *a13(CLOSEST_DIST),a0
         00001900     0360  
     461 00001910     0b40          cmpi    70h,a0
         00001920     ff8f  
     462 00001930     c700          jrgt    uijqout
         00001940     ff45  
     463                    
     464 00001950           uijqdoit
     465 00001950     09e0          movi    lex_hiptoss_anim,a0
         00001960 00000000! 
     466 00001980     0d5f          calla   change_anim1a
         00001990 00000000! 
     467                    
     468 000019b0     5600          clr     a0
     469 000019c0     b20d          move    a0,*a13(ATTACH_PROC),L
         000019d0     03e0  
     470                    
     471 000019e0                   SETMODE NORMAL
     472                    
     473 00001a90                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     474                    
     475 00001c30     0960          rets
     476                    
     477                    *******************************************************************************
     478 00001c40           uijqsliding_elbow
     479 00001c40     0010          .word   B_PUNCH,                J_ALL
     480 00001c60     0008          .word   J_TOWARD,               J_REAL_LR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     481 00001c80     0008          .word   J_TOWARD,               J_REAL_LR
     482 00001ca0     801e          .word   8000h | 30              ;max
     483 00001cb0 00001cd0'         .long   uijqscrt_elbow
     484                    
     485 00001cd0           uijqscrt_elbow
     486 00001cd0     b5a0          move    *a13(ANIMODE),a0
         00001ce0     0660  
     487 00001cf0     1fa0          btst    MODE_UNINT_BIT,a0
     488 00001d00     cb00          jrnz    uijqout
         00001d10     ff08  
     489                    
     490 00001d20     b5a0          move    *a13(PLYRMODE),a0
         00001d30     05c0  
     491 00001d40     0b40          cmpi    MODE_OPPOVERHEAD,a0
         00001d50     fff5  
     492 00001d60     ca00          jreq    uijqout
         00001d70     ff02  
     493                    
     494                    ;Don't do it when he is on ground
     495 00001d80     0d5f          calla   get_opp_plyrmode
         00001d90 00000000! 
     496 00001db0     0b40          cmpi    MODE_ONGROUND,a0
         00001dc0     fffb  
     497 00001dd0     ca00          jrz     uijqout
         00001de0     fefb  
     498 00001df0     0b40          cmpi    MODE_DEAD,a0
         00001e00     fff6  
     499 00001e10     ca00          jrz     uijqout
         00001e20     fef7  
     500                    
     501                            ;we can do this from a headhold, so...
     502 00001e30     0d5f          calla   FIND_AND_KILL_ENDLESS
         00001e40 00000000! 
     503                    
     504 00001e60     09e0          movi    lex_sliding_elbow_anim,a0
         00001e70 00000000! 
     505 00001e90     0d5f          calla   change_anim1a
         00001ea0 00000000! 
     506                    
     507 00001ec0     5600          clr     a0
     508 00001ed0     b20d          move    a0,*a13(ATTACH_PROC),L
         00001ee0     03e0  
     509                    
     510 00001ef0                   SETMODE NORMAL
     511                    
     512 00001fa0                   WRSND   W_LUGER,UPRCUT_T1,UPRCUT_T2
     513                    
     514 00002140     0960          rets
     515                    
     516                            .if NUM_LEX_FINISHES
     517                    ******************************************************************************
     518                     SUBRP  lex_finish_move1
     519                    
     520                    dyjbTIMEOUT     .equ    TSEC
     521                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     522                    dyjbend_wait
     523                            SLEEP           TSEC/4
     524                            move            @p1rounds,a0                    ; Get player 1 rounds
     525                            move            @p2rounds,a1                    ; Get player 2 rounds
     526                            or              a1,a0                           ; Put em together
     527                            cmpi            2,a0                            ; Anybody got 2?
     528                            jrlt            dyjbend_wait                    ; br = no
     529                    
     530                    dyjbreset
     531                            clr             a11
     532                            move            a11,@in_finish_move
     533                            SLEEPK          1
     534                            WAITSWITCH_DWN  J_UP,0,dyjbreset
     535                            movi            dyjbTIMEOUT,a11
     536                            move            a11,@in_finish_move
     537                            WAITSWITCH_DWN  J_DOWN,0,dyjbreset
     538                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,dyjbreset
     539                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,dyjbreset
     540                            WAITSWITCH_DWN  B_PUNCH,J_ALL,dyjbreset
     541                    
     542                            movi            lex_finish1_move,a0
     543                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     544                            DIE
     545                            .endif
     546                            
     547                    
     548                            .if NUM_LEX_FINISHES > 1
     549                    ******************************************************************************
     550                     SUBRP  lex_finish_move2
     551                    
     552                    duurTIMEOUT     .equ    TSEC
     553                    
     554                    duurend_wait
     555                            SLEEP           TSEC/4
     556                            move            @p1rounds,a0                    ; Get player 1 rounds
     557                            move            @p2rounds,a1                    ; Get player 2 rounds
     558                            or              a1,a0                           ; Put em together
     559                            cmpi            2,a0                            ; Anybody got 2?
     560                            jrlt            duurend_wait                    ; br = no
     561                    
     562                    duurreset
     563                            clr             a11
     564                            move            a11,@in_finish_move
     565                            SLEEPK          1
     566                            WAITSWITCH_DWN  J_UP,0,duurreset
     567                            movi            duurTIMEOUT,a11
     568                            move            a11,@in_finish_move
     569                            WAITSWITCH_DWN  J_UP,0,duurreset
     570                            WAITSWITCH_DWN  J_RIGHT,J_UP,duurreset
     571                            WAITSWITCH_DWN  J_RIGHT,J_UP,duurreset
     572                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,duurreset
     573                    
     574                            movi            lex_finish2_move,a0
     575                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     576                            DIE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     577                            .endif
     578                    
     579                    
     580                    *****************************************************************************
     581 00002150            SUBRP  lex_hdhold_pile
     582                    
     583              003c  douiTIMEOUT     .equ    60
     584                    
     585 00002150           douilp0
     586 00002150                   SLEEPK  1
     587 00002190           douilp
     588 00002190     b500          move    *a8(PLYRMODE),a0
         000021a0     05c0  
     589 000021b0     0b40          cmpi    MODE_HEADHOLD,a0
         000021c0     ffef  
     590 000021d0     ca03          jrz     douicont
     591 000021e0     0b40          cmpi    MODE_HEADHELD,a0
         000021f0     ffec  
     592 00002200     cbf4          jrnz    douilp0
     593                    
     594 00002210           douicont
     595 00002210     576b          clr     a11
     596                    
     597                    ;       WAITSWITCH_DWN  J_AWAY,0,douilp
     598 00002220                   WAITSWITCH_DWN  J_TOWARD,0,douilp
     599                    
     600 00002380     09cb          movi    douiTIMEOUT,a11
         00002390     003c  
     601                    
     602 000023a0                   WAITSWITCH_DWN  J_TOWARD,0,douilp
     603 00002500                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,douilp
     604                            
     605 00002660     b500          move    *a8(PLYRMODE),a0
         00002670     05c0  
     606 00002680     0b40          cmpi    MODE_HEADHOLD,a0
         00002690     ffef  
     607 000026a0     ca1c          jrz     douislam
     608 000026b0     0b40          cmpi    MODE_HEADHELD,a0
         000026c0     ffec  
     609 000026d0     cba7          jrnz    douilp0
     610 000026e0     b50e          move    *a8(I_WILL_DIE),A14
         000026f0     0b30  
     611 00002700     cba4          jrnz    douilp0
     612                    
     613 00002710     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002720     0ae0  
     614 00002730     cba1          jrnz    douilp0                         ;ignore
     615                    
     616 00002740     0d5f          calla   DO_REVERSAL
         00002750 00000000! 
     617 00002770     0d5f          calla   DO_REVERSAL_MESS
         00002780 00000000! 
     618                    
     619                            ;target WHOHITME -- don't hit anyone else
     620 000027a0                   SMRTTGT a8,WHOHITME
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     621                    
     622                            ;immobilize WHOHITME
     623 00002840     b700          move    *a8(WHOHITME),a0,L
         00002850     04e0  
     624 00002860     c019          jruc    douiis_reversal
     625                    
     626 00002870           douislam
     627 00002870     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002880     0ae0  
     628 00002890     cb8b          jrnz    douilp0                         ;ignore
     629                    
     630 000028a0     09ca          movi    42,a10
         000028b0     002a  
     631 000028c0                   CREATE  MESSAGE_PID,BONUS_MESS
     632                    
     633                            ;target WHOIHIT -- don't hit anyone else
     634 00002940                   SMRTTGT a8,WHOIHIT
     635                    
     636                            ;immobilize WHOIHIT
     637 000029e0     b700          move    *a8(WHOIHIT),a0,L
         000029f0     0500  
     638                    
     639 00002a00           douiis_reversal
     640 00002a00     19ee          movk    15,a14
     641 00002a10     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00002a20     0ae0  
     642                    
     643 00002a30     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00002a40 00000000! 
     644                    
     645 00002a60     09e0          movi    lex_vsuplex_anim,a0
         00002a70 00000000! 
     646 00002a90     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00002aa0     0930  
     647 00002ab0                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
     648                    
     649 00002c50                   SLEEPK  20
     650                    
     651 00002c90     c000          jruc    douilp
         00002ca0     ff4e  
     652                    
     653                    *****************************************************************************
     654 00002cb0            SUBRP  lex_hdhold_elbow_face
     655                    
     656              003c  guyqTIMEOUT     .equ    60
     657                    
     658 00002cb0           guyqlp0
     659 00002cb0                   SLEEPK  1
     660 00002cf0           guyqlp
     661 00002cf0     b500          move    *a8(PLYRMODE),a0
         00002d00     05c0  
     662 00002d10     0b40          cmpi    MODE_HEADHOLD,a0
         00002d20     ffef  
     663 00002d30     ca03          jrz     guyqcont
     664 00002d40     0b40          cmpi    MODE_HEADHELD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

         00002d50     ffec  
     665 00002d60     cbf4          jrnz    guyqlp0
     666                    
     667 00002d70           guyqcont
     668 00002d70     576b          clr     a11
     669                    
     670                    ;       WAITSWITCH_DWN  J_UP,0,guyqlp
     671 00002d80                   WAITSWITCH_DWN  J_DOWN,0,guyqlp
     672                    
     673 00002ee0     09cb          movi    guyqTIMEOUT,a11
         00002ef0     003c  
     674                    
     675 00002f00                   WAITSWITCH_DWN  J_DOWN,0,guyqlp
     676 00003060                   WAITSWITCH_DWN  B_SKICK,J_ALL,guyqlp
     677                            
     678 000031c0     b500          move    *a8(PLYRMODE),a0
         000031d0     05c0  
     679 000031e0     0b40          cmpi    MODE_HEADHOLD,a0
         000031f0     ffef  
     680 00003200     ca1f          jrz     guyqslam
     681 00003210     0b40          cmpi    MODE_HEADHELD,a0
         00003220     ffec  
     682 00003230     cba7          jrnz    guyqlp0
     683 00003240     b50e          move    *a8(I_WILL_DIE),A14
         00003250     0b30  
     684 00003260     cba4          jrnz    guyqlp0
     685                    
     686 00003270     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003280     0ae0  
     687 00003290     cba1          jrnz    guyqlp0                         ;ignore
     688                    
     689 000032a0     0d5f          calla   DO_REVERSAL
         000032b0 00000000! 
     690 000032d0     0d5f          calla   DO_REVERSAL_MESS
         000032e0 00000000! 
     691                    
     692                            ;target WHOHITME -- don't hit anyone else
     693 00003300                   SMRTTGT a8,WHOHITME
     694                    
     695                            ;immobilize WHOHITME
     696 000033a0     b700          move    *a8(WHOHITME),a0,L
         000033b0     04e0  
     697                    
     698                            .ref    lex_grab2elbow_rev_anim
     699                    
     700 000033c0     09e1          movi    lex_grab2elbow_rev_anim,a1
         000033d0 00000000! 
     701 000033f0     c01b          jruc    guyqis_reversal
     702                    
     703 00003400           guyqslam
     704 00003400     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003410     0ae0  
     705 00003420     cb88          jrnz    guyqlp0                         ;ignore
     706                    
     707                    ;fix !!! wrong name - jake
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     708 00003430     18ca          movk    6,a10
     709 00003440                   CREATE  MESSAGE_PID,BONUS_MESS
     710                    
     711                            ;target WHOIHIT -- don't hit anyone else
     712 000034c0                   SMRTTGT a8,WHOIHIT
     713                    
     714                            ;immobilize WHOIHIT
     715 00003560     b700          move    *a8(WHOIHIT),a0,L
         00003570     0500  
     716                    
     717                    ;This stops Lex from going for foot, then changing his mind!
     718                    ;       movk    15,a14
     719                    ;       move    a14,*a8(IMMOBILIZE_TIME)
     720                    
     721 00003580     09e1          movi    lex_grab2elbow_anim,a1
         00003590 00000000! 
     722 000035b0           guyqis_reversal
     723 000035b0     19ee          movk    15,a14
     724 000035c0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000035d0     0ae0  
     725                    
     726 000035e0     b228          move    a1,*a8(SPECIAL_MOVE_ADDR),L
         000035f0     0930  
     727 00003600     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003610 00000000! 
     728                    
     729 00003630                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
     730                    
     731 000037d0                   SLEEPK  20
     732 00003810     c000          jruc    guyqlp
         00003820     ff4c  
     733                    
     734                    ******************************************************************************
     735 00003830           lex_grab_toss_air
     736                    
     737              0028  ktbgTIMEOUT     .equ    40
     738                    
     739 00003830           ktbglp0
     740 00003830                   SLEEPK  1
     741 00003870           ktbglp
     742 00003870     576b          clr     a11
     743                    
     744 00003880                   WAITSWITCH_DWN  J_AWAY,0,ktbglp
     745                    
     746 000039e0     09cb          movi    ktbgTIMEOUT,a11
         000039f0     0028  
     747                    
     748 00003a00                   WAITSWITCH_DWN  J_AWAY,0,ktbglp
     749 00003b60                   WAITSWITCH_DWN  B_PUNCH,J_ALL,ktbglp
     750                    
     751 00003cc0     b500          move    *a8(ANIMODE),a0
         00003cd0     0660  
     752 00003ce0     1fa0          btst    MODE_UNINT_BIT,a0
     753 00003cf0     cbb7          jrnz    ktbglp
     754                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

     755 00003d00     b500          move    *a8(PLYRMODE),a0
         00003d10     05c0  
     756 00003d20     0b40          cmpi    MODE_HEADHOLD,a0
         00003d30     ffef  
     757 00003d40     caae          jreq    ktbglp0
     758                    
     759                    ;Don't do it when he is on ground
     760 00003d50                   SWAP    a8,a13
     761 00003d80     0d5f          calla   get_opp_plyrmode
         00003d90 00000000! 
     762 00003db0                   SWAP    a8,a13
     763                    ;Don't do it when he is on ground
     764 00003de0     0b40          cmpi    MODE_ONGROUND,a0
         00003df0     fffb  
     765 00003e00     caa6          jrz     ktbglp
     766 00003e10     0b40          cmpi    MODE_DEAD,a0
         00003e20     fff6  
     767 00003e30     caa3          jrz     ktbglp
     768 00003e40     0b40          cmpi    MODE_INAIR,a0
         00003e50     fffd  
     769 00003e60     ca39          jrz     ktbgdoit2
     770 00003e70     0b40          cmpi    MODE_INAIR2,a0
         00003e80     ffea  
     771 00003e90     ca36          jrz     ktbgdoit2
     772                    
     773 00003ea0     b500          move    *a8(CLOSEST_NUM),a0
         00003eb0     03a0  
     774 00003ec0                   X32     a0
     775 00003ed0     0b20          addi    process_ptrs,a0
         00003ee0 00000000! 
     776 00003f00     8600          move    *a0,a0,L
     777 00003f10     b400          move    *a0(ATTACK_TYPE),a0
         00003f20     05e0  
     778 00003f30     0b40          cmpi    AT_LEAPING,a0
         00003f40     ffc6  
     779 00003f50     ca2a          jrz     ktbgdoit2
     780                    
     781 00003f60     b500          move    *a8(CLOSEST_DIST),a0
         00003f70     0360  
     782 00003f80     0b40          cmpi    6ch,a0
         00003f90     ff93  
     783 00003fa0     c78c          jrgt    ktbglp
     784                    
     785                    ;       FACE24  lex,hiptoss_anim
     786 00003fb0     09e0          movi    lex_hiptoss_anim,a0
         00003fc0 00000000! 
     787 00003fe0     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00003ff0     0930  
     788                    
     789 00004000                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     790                    
     791 000041a0                   SLEEPK  20
     792 000041e0     c000          jruc    ktbglp
         000041f0     ff67  
     793                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     794 00004200           ktbgdoit2
     795                    ;       FACE24  lex,hiptoss2_anim
     796 00004200     09e0          movi    lex_hiptoss2_anim,a0
         00004210 00000000! 
     797 00004230     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00004240     0930  
     798                    
     799 00004250                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     800                    
     801 000043f0                   SLEEPK  20
     802                    
     803 00004430     c000          jruc    ktbglp
         00004440     ff42  
     804                    
     805                    *****************************************************************************
     806 00004450           lex_hdhold_graboh
     807                    
     808              003c  qjbtTIMEOUT     .equ    60
     809                    
     810 00004450           qjbtlp0
     811 00004450                   SLEEPK  1
     812 00004490           qjbtlp
     813 00004490     b500          move    *a8(PLYRMODE),a0
         000044a0     05c0  
     814 000044b0     0b40          cmpi    MODE_HEADHOLD,a0
         000044c0     ffef  
     815 000044d0     ca03          jrz     qjbtcont0
     816 000044e0     0b40          cmpi    MODE_HEADHELD,a0
         000044f0     ffec  
     817 00004500     cbf4          jrnz    qjbtlp0
     818 00004510           qjbtcont0
     819 00004510     576b          clr     a11
     820                    
     821 00004520                   WAITSWITCH_DWN  J_DOWN,0,qjbtlp
     822                    
     823 00004680     09cb          movi    qjbtTIMEOUT,a11
         00004690     003c  
     824                    
     825                    ;       WAITSWITCH_DWN  J_DOWN_TOWARD,0,qjbtlp
     826 000046a0                   WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,qjbtlp
     827 00004800                   WAITSWITCH_DWN  B_KICK,J_ALL,qjbtlp
     828                    
     829 00004960     b500          move    *a8(PLYRMODE),a0
         00004970     05c0  
     830 00004980     0b40          cmpi    MODE_HEADHOLD,a0
         00004990     ffef  
     831 000049a0     ca1c          jrz     qjbtdograb
     832 000049b0     0b40          cmpi    MODE_HEADHELD,a0
         000049c0     ffec  
     833 000049d0     cba7          jrnz    qjbtlp0
     834 000049e0     b50e          move    *a8(I_WILL_DIE),A14
         000049f0     0b30  
     835 00004a00     cba4          jrnz    qjbtlp0
     836                    
     837 00004a10     b50e          move    *a8(IMMOBILIZE_TIME),a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

         00004a20     0ae0  
     838 00004a30     cba1          jrnz    qjbtlp0                         ;ignore
     839                    
     840 00004a40     0d5f          CALLA   DO_REVERSAL
         00004a50 00000000! 
     841 00004a70     0d5f          CALLA   DO_REVERSAL_MESS
         00004a80 00000000! 
     842                    
     843                            ;target WHOHITME -- don't hit anyone else
     844 00004aa0                   SMRTTGT a8,WHOHITME
     845                    
     846                            ;immobilize WHOHITME
     847 00004b40     b700          move    *a8(WHOHITME),a0,L
         00004b50     04e0  
     848 00004b60     c00f          jruc    qjbtis_reversal
     849                    
     850 00004b70           qjbtdograb
     851 00004b70     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004b80     0ae0  
     852 00004b90     cb8b          jrnz    qjbtlp0                         ;ignore
     853                    
     854                    ;       movk    6,a10
     855                    ;       CREATE  MESSAGE_PID,BONUS_MESS
     856                    
     857                            ;target WHOIHIT -- don't hit anyone else
     858 00004ba0                   SMRTTGT a8,WHOIHIT
     859                    
     860                            ;immobilize WHOIHIT
     861 00004c40     b700          move    *a8(WHOIHIT),a0,L
         00004c50     0500  
     862                    
     863 00004c60           qjbtis_reversal
     864 00004c60     19ee          movk    15,a14
     865 00004c70     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00004c80     0ae0  
     866                    
     867 00004c90     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004ca0 00000000! 
     868                    
     869 00004cc0     09ee          movi    lex_4_graboh_anim,a14
         00004cd0 00000000! 
     870 00004cf0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004d00     0930  
     871                    
     872 00004d10                   WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
     873                    
     874 00004eb0                   SLEEPK  20
     875                    
     876 00004ef0     c000          jruc    qjbtlp
         00004f00     ff58  
     877                    
     878                    *******************************************************************************
     879                    *
     880 00004f10           lex_hdhold_combo1
     881                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

     882              003c  wzggTIMEOUT     .equ    60
     883                    
     884 00004f10           wzgglp0
     885 00004f10                   SLEEPK  1
     886 00004f50           wzgglp
     887 00004f50     b500          move    *a8(PLYRMODE),a0
         00004f60     05c0  
     888 00004f70     0b40          cmpi    MODE_HEADHOLD,a0
         00004f80     ffef  
     889 00004f90     cbf7          jrnz    wzgglp0
     890                    ;       jrz     wzggcont
     891                    ;       cmpi    MODE_HEADHELD,a0
     892                    ;       jrnz    wzgglp0
     893                    ;wzggcont
     894                    ;In combo mode?
     895 00004fa0     0d5f          calla   CHECK_COMBO_GO
         00004fb0 00000000! 
     896 00004fd0     c4f3          jrlt    wzgglp0
     897                    
     898 00004fe0     576b          clr     a11
     899                    
     900 00004ff0                   WAITSWITCH_DWN  J_TOWARD,0,wzgglp
     901                    
     902 00005150     09cb          movi    wzggTIMEOUT,a11
         00005160     003c  
     903                    
     904 00005170                   WAITSWITCH_DWN  J_TOWARD,0,wzgglp
     905 000052d0                   WAITSWITCH_DWN  B_SKICK,J_ALL,wzgglp
     906                    
     907 00005430     b500          move    *a8(PLYRMODE),a0
         00005440     05c0  
     908 00005450     0b40          cmpi    MODE_HEADHOLD,a0
         00005460     ffef  
     909 00005470     ca03          jrz     wzggslam
     910 00005480     0b40          cmpi    MODE_HEADHELD,a0
         00005490     ffec  
     911 000054a0     cba6          jrnz    wzgglp0
     912                    
     913 000054b0           wzggslam
     914 000054b0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000054c0     0ae0  
     915 000054d0     cba3          jrnz    wzgglp0                         ;ignore
     916                    
     917                    ;Start combo rules here
     918                    ;       move    *a8(ATTACH_PROC),a14,L
     919                    ;       movk    15,a0
     920                    ;       move    a0,*a14(IMMOBILIZE_TIME)
     921                    
     922                            ;target WHOIHIT
     923 000054e0                   SMRTTGT a8,WHOIHIT
     924                    
     925 00005580     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005590 00000000! 
     926 000055b0     09ee          movi    lex_combo_punch_anim,a14
         000055c0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     927 000055e0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000055f0     0930  
     928                    
     929 00005600                   WRSND   W_LUGER,UPRCUT_T1,UPRCUT_T2
     930                    
     931 000057a0                   SLEEPK  20
     932                    
     933 000057e0     c000          jruc    wzgglp
         000057f0     ff75  
     934                    
     935                    *******************************************************************************
     936                    *
     937 00005800           lex_hdhold_combo2
     938                    
     939              003c  alyeTIMEOUT     .equ    60
     940                    
     941 00005800           alyelp0
     942 00005800                   SLEEPK  1
     943 00005840           alyelp
     944 00005840     b500          move    *a8(PLYRMODE),a0
         00005850     05c0  
     945 00005860     0b40          cmpi    MODE_HEADHOLD,a0
         00005870     ffef  
     946 00005880     cbf7          jrnz    alyelp0
     947                    ;       jrz     alyecont
     948                    ;       cmpi    MODE_HEADHELD,a0
     949                    ;       jrnz    alyelp0
     950                    ;alyecont
     951                    ;In combo mode?
     952 00005890     0d5f          calla   CHECK_COMBO_GO
         000058a0 00000000! 
     953 000058c0     c4f3          jrlt    alyelp0
     954                    
     955 000058d0     576b          clr     a11
     956                    
     957 000058e0                   WAITSWITCH_DWN  J_TOWARD,0,alyelp
     958                    
     959 00005a40     09cb          movi    alyeTIMEOUT,a11
         00005a50     003c  
     960                    
     961 00005a60                   WAITSWITCH_DWN  J_TOWARD,0,alyelp
     962 00005bc0                   WAITSWITCH_DWN  B_KICK,J_ALL,alyelp
     963                    
     964 00005d20     b500          move    *a8(PLYRMODE),a0
         00005d30     05c0  
     965 00005d40     0b40          cmpi    MODE_HEADHOLD,a0
         00005d50     ffef  
     966 00005d60     ca03          jrz     alyeslam
     967 00005d70     0b40          cmpi    MODE_HEADHELD,a0
         00005d80     ffec  
     968 00005d90     cba6          jrnz    alyelp0
     969                    
     970 00005da0           alyeslam
     971 00005da0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00005db0     0ae0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     972 00005dc0     cba3          jrnz    alyelp0                         ;ignore
     973                    
     974                    ;Start combo rules here
     975                    ;       move    *a8(ATTACH_PROC),a14,L
     976                    ;       movk    15,a0
     977                    ;       move    a0,*a14(IMMOBILIZE_TIME)
     978                    
     979                            ;target WHOIHIT
     980 00005dd0                   SMRTTGT a8,WHOIHIT
     981                    
     982 00005e70     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005e80 00000000! 
     983 00005ea0     09ee          movi    lex_combo_kick_anim,a14
         00005eb0 00000000! 
     984 00005ed0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005ee0     0930  
     985                    
     986 00005ef0                   WRSND   W_LUGER,UPRCUT_T1,UPRCUT_T2
     987                    
     988 00006090                   SLEEPK  20
     989                    
     990 000060d0     c000          jruc    alyelp
         000060e0     ff75  
     991                    
     992                    ;******************************************************************************
     993                    ;
     994                    ;;Could start this process only when opponent is in combo mode!
     995                    ;
     996                    ;lex_hdhold_anti_combo
     997                    ;
     998                    ;alyeTIMEOUT    .equ    30
     999                    ;
    1000                    ;alyelp0
    1001                    ;       SLEEPK  1
    1002                    ;alyelp
    1003                    ;;Is my opponent in combo mode?
    1004                    ;;      move    *a8(IMMOBILIZE_TIME),a14
    1005                    ;;      jrz     alyelp0
    1006                    ;;      move    *a8(CLOSEST_NUM),a0
    1007                    ;;      X32     a0
    1008                    ;;      addi    process_ptrs,a0
    1009                    ;;      move    *a0,a0,L
    1010                    ;;      move    *a0(COMBO_COUNT),a0
    1011                    ;;      jrz     alyelp0
    1012                    ;
    1013                    ;       clr     a11
    1014                    ;
    1015                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,alyelp
    1016                    ;
    1017                    ;       movk    alyeTIMEOUT,a11
    1018                    ;
    1019                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,alyelp
    1020                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,alyelp
    1021                    ;
    1022                    ;;Is my opponent in combo mode?
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

    1023                    ;       move    *a8(CLOSEST_NUM),a0
    1024                    ;       X32     a0
    1025                    ;       addi    process_ptrs,a0
    1026                    ;       move    *a0,a0,L
    1027                    ;       move    *a0(COMBO_COUNT),a0
    1028                    ;       jrz     alyelp0
    1029                    ;
    1030                    ;       move    *a8(ANTI_COMBO_TIME),a0         ;Time stamp
    1031                    ;       move    @PCNT,a14
    1032                    ;       sub     a0,a14
    1033                    ;       abs     a14
    1034                    ;       cmpi    80,a14
    1035                    ;       jrge    alyelp0
    1036                    ;       move    *a8(I_WILL_DIE),A14
    1037                    ;       jrnz    alyelp0
    1038                    ;
    1039                    ;;Combo breaker message!
    1040                    ;       CALLA   DO_REVERSAL
    1041                    ;       CALLA   DO_REVERSAL_MESS
    1042                    ;
    1043                    ;       clr     a0
    1044                    ;       move    a0,*a8(IMMOBILIZE_TIME)
    1045                    ;
    1046                    ;       move    *a8(WHOHITME),a14,L
    1047                    ;       movk    15,a0
    1048                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1049                    ;
    1050                    ;       ;target WHOHITME
    1051                    ;       SMRTTGT a8,WHOHITME
    1052                    ;
    1053                    ;       CALLA   FIND_AND_KILL_ENDLESS
    1054                    ;
    1055                    ;       WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
    1056                    ;       movi    lex_vsuplex_anim,a14
    1057                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
    1058                    ;
    1059                    ;       SLEEPK  20
    1060                    ;
    1061                    ;       jruc    alyelp
    1062                    ;
    1063                    *****************************************************************************
    1064                    
    1065 000060f0            SUBR   lex_ani_init
    1066                    
    1067 000060f0     b5a0          move    *a13(FACING_DIR),a0
         00006100     04c0  
    1068 00006110     1f80          btst    PLAYER_RIGHT_BIT,a0
    1069 00006120     cb18          jrnz    vodyp1
    1070                    ;Plyr 2
    1071 00006130     09e0          movi    lex_stand4_anim,a0
         00006140 00000000! 
    1072 00006160     0d5f          calla   change_anim1a
         00006170 00000000! 
    1073                    
    1074 00006190     09e0          movi    lex_torso4_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

         000061a0 00000000! 
    1075 000061c0     0d5f          calla   change_anim2a
         000061d0 00000000! 
    1076                    
    1077 000061f0                   PUSH    a10
    1078 00006200     4daa          move    a13,a10
    1079 00006210                   CREATE  TAUNT_PID,do_taunt
    1080 00006290                   PULL    a10
    1081                    
    1082 000062a0     0960          rets
    1083                    
    1084 000062b0           vodyp1
    1085 000062b0     09e0          movi    lex_stand2_anim,a0
         000062c0 00000000! 
    1086 000062e0     0d5f          calla   change_anim1a
         000062f0 00000000! 
    1087                    
    1088 00006310     09e0          movi    lex_torso2_anim,a0
         00006320 00000000! 
    1089 00006340     0d5f          calla   change_anim2a
         00006350 00000000! 
    1090                    
    1091 00006370     0960          rets
    1092                    
    1093                    
    1094                    *****************************************************************************
    1095                    *
    1096                    * LEX CONTROL CODE
    1097                    *
    1098                    * a13 = * Lex process
    1099                    
    1100 00006380            SUBR   move_lex
    1101                    
    1102                    
    1103                    ;       movi    100h,a0                 ;temp fix!
    1104                    ;       move    a0,*a13(ANI_SPEED)
    1105                    
    1106 00006380     09eb          movi    lex_secret_moves,a11
         00006390 00000000' 
    1107 000063b0     0d5f          calla   check_secret_moves
         000063c0 00000000! 
    1108                    
    1109 000063e0     b5a0          move    *a13(PLYRMODE),a0
         000063f0     05c0  
    1110 00006400     24a0          sll     5,a0                    ;x 32
    1111 00006410     0b20          addi    atlnmode_table,a0
         00006420 00006470' 
    1112 00006440     8600          move    *a0,a0,L
    1113 00006450     0920          call    a0
    1114 00006460     0960          rets
    1115                    
    1116 00006470           atlnmode_table
    1117 00006470 000067b0'         .long   mode_normal             ;0
    1118 00006490 0000de70'         .long   mode_running            ;1
    1119 000064b0 0000fc10'         .long   mode_inair              ;2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

    1120 000064d0 0000fc20'         .long   mode_attached           ;3
    1121 000064f0 0000fd90'         .long   mode_onground           ;4
    1122 00006510 0000fda0'         .long   mode_bouncing           ;5
    1123 00006530 00010040'         .long   mode_onturnbkl          ;6
    1124 00006550 000109e0'         .long   mode_block              ;7
    1125 00006570 00011460'         .long   mode_dizzy              ;8
    1126 00006590 00000000!         .long   mode_dead               ;9
    1127 000065b0 00011470'         .long   mode_oppoverhead        ;10
    1128 000065d0 00012540'         .long   mode_climbturnbkl       ;11
    1129 000065f0 00012550'         .long   mode_waitanim           ;12
    1130 00006610 000125d0'         .long   mode_grapple            ;13
    1131 00006630 000125e0'         .long   mode_master             ;14
    1132 00006650 00012620'         .long   mode_slave              ;15
    1133 00006670 00012630'         .long   mode_headhold           ;16
    1134 00006690 00013a50'         .long   mode_puppet2            ;17
    1135 000066b0 000067b0'         .long   mode_normal             ;18
    1136 000066d0 00013a60'         .long   mode_headheld           ;19
    1137 000066f0 00000000!         .long   mode_puppet             ;20
    1138 00006710 00000000!         .long   mode_inair2             ;21
    1139 00006730 000067b0'         .long   mode_normal             ;22
    1140 00006750 000067b0'         .long   mode_normal             ;23
    1141 00006770 00013ef0'         .long   mode_chokehold          ;24
    1142 00006790 00000000!         .long   mode_choking            ;25
    1143                    
    1144                    *****************************************************************************
    1145                    
    1146 000067b0           mode_normal
    1147                    
    1148 000067b0     b5a0          move    *a13(ANIMODE),a0
         000067c0     0660  
    1149 000067d0     1fa0          btst    MODE_UNINT_BIT,a0
    1150 000067e0     cb00          jrnz    ezcpno_interrupt
         000067f0     00b0  
    1151                    
    1152 00006800     b5a0          move    *a13(I_WILL_DIE),a0
         00006810     0b30  
    1153 00006820     ca1f          jrz     ezcpnope
    1154 00006830     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006840     0ae0  
    1155 00006850     cb1c          jrnz    ezcpnope
    1156                    ;Player has died amidst a combo...
    1157                    ;Knock me down.
    1158 00006860     09e0          movi    lex_fall_back_anim,a0
         00006870 00000000! 
    1159 00006890     0d5f          calla   change_anim1a
         000068a0 00000000! 
    1160                    
    1161                    ;Zero health bar
    1162 000068c0     09c0          movi    -10,a0
         000068d0     fff6  
    1163 000068e0     b5a1          move    *a13(PLYRNUM),a1
         000068f0     0580  
    1164 00006900     0d5f          calla   adjust_health
         00006910 00000000! 
    1165                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1166 00006930                   SETMODE DEAD
    1167                    
    1168 000069e0     5600          clr     a0
    1169 000069f0     b00d          move    a0,*a13(I_WILL_DIE)
         00006a00     0b30  
    1170                    
    1171 00006a10     0960          rets
    1172                    
    1173 00006a20           ezcpnope
    1174                    ;Perhaps we need to interrupt any sequence when a wrestler has won?
    1175                    
    1176 00006a20     0d5f          calla   get_opp_plyrmode
         00006a30 00000000! 
    1177 00006a50     0b40          cmpi    MODE_DEAD,a0
         00006a60     fff6  
    1178 00006a70     cb49          jrne    ezcpopp_not_dead
    1179                    
    1180                            ;if closest is a zombie, skip pin section.
    1181 00006a80     0d5f          calla   get_opp_process
         00006a90 00000000! 
    1182 00006ab0     b40e          move    *a0(STATUS_FLAGS),a14
         00006ac0     0b50  
    1183 00006ad0     1f8e          btst    B_ZOMBIE,a14
    1184 00006ae0     cb42          jrnz    ezcpopp_not_dead
    1185                            
    1186                            ;all opponents are dead.  Check for pins/raisearms
    1187                    
    1188                            ;if we're attached to someone, don't interrupt it.
    1189 00006af0     b7a1          move    *a13(ATTACH_PROC),a1,L
         00006b00     03e0  
    1190 00006b10     ca04          jrz     ezcpno_attch
    1191 00006b20     b622          move    *a1(ATTACH_PROC),a2,L
         00006b30     03e0  
    1192 00006b40     484d          cmp     a2,a13
    1193 00006b50     ca3b          jreq    ezcpno_pin_yet
    1194 00006b60           ezcpno_attch
    1195                    
    1196                            ;if a teammate has pinned, raise yer arm.
    1197 00006b60     0d5f          calla   ck_teammate_pin 
         00006b70 00000000! 
    1198 00006b90     c823          jrc     ezcpraisearm
    1199                    
    1200                            ;nobody has pinned.  if we're outside or all our opponents are
    1201                            ; outside, do a raisearm.
    1202 00006ba0     0d5f          calla   raisearm_check
         00006bb0 00000000! 
    1203 00006bd0     c81f          jrc     ezcpraisearm
    1204                    
    1205                            ;we're inside with a pinnable opponent.  any button pins.
    1206 00006be0     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006bf0     0b90  
    1207 00006c00     ca30          jrz     ezcpno_pin_yet
    1208                    
    1209                            ;we have a press -- make sure opponent is on the ground
    1210 00006c10     0d5f          calla   can_pin
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

         00006c20 00000000! 
    1211 00006c40     c92c          jrnc    ezcpopp_notgnd
    1212                    
    1213                            ;opponent is on the ground.  pin him.
    1214 00006c50                   FACE24  lex,pin_anim
    1215 00006cf0     0d5f          calla   change_anim1a
         00006d00 00000000! 
    1216                    
    1217                            ;set the 'I did a pin' flag.
    1218 00006d20     b5ae          move    *a13(STATUS_FLAGS),a14
         00006d30     0b50  
    1219 00006d40     0bae          ori     M_DID_PIN,a14
         00006d50 00000002  
    1220 00006d70     b1cd          move    a14,*a13(STATUS_FLAGS)
         00006d80     0b50  
    1221                    
    1222                            ;if we're a temp drone for auto-pin purposes, turn back into
    1223                            ; a normal player here.
    1224 00006d90     0d5f          calla   drone_change_back
         00006da0 00000000! 
    1225                    
    1226 00006dc0     0960          rets
    1227                    
    1228 00006dd0           ezcpraisearm
    1229 00006dd0                   FACE24  lex,raise_arm_anim
    1230 00006e70     0d5f          calla   change_anim1a
         00006e80 00000000! 
    1231 00006ea0     0d5f          calla   set_raisearm_bit
         00006eb0 00000000! 
    1232                    
    1233                            ;if we're a temp drone for auto-pin purposes, turn back into
    1234                            ; a normal player here.
    1235 00006ed0     0d5f          calla   drone_change_back
         00006ee0 00000000! 
    1236                    
    1237 00006f00     0960          rets
    1238                    
    1239 00006f10           ezcptoo_far_to_pin
    1240 00006f10           ezcpopp_notgnd
    1241 00006f10           ezcpopp_not_dead
    1242 00006f10           ezcpno_pin_yet
    1243                    
    1244 00006f10     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006f20     0ae0  
    1245 00006f30     cb36          jrnz    ezcpimmobilized
    1246                    
    1247 00006f40     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006f50     0b90  
    1248 00006f60     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1249 00006f70     ca07          jrz     ezcpnblk                        ;1 for down transitions
    1250 00006f80     0d3f          callr   ezcpblock                       ;& 1 for current buttons
         00006f90     01ed  
    1251 00006fa0     c804          jrc     ezcpnblk
    1252 00006fb0     5600          clr     a0
    1253 00006fc0     b00d          move    a0,*a13(ATTACK_TYPE)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

         00006fd0     05e0  
    1254 00006fe0     0960          rets
    1255 00006ff0           ezcpnblk
    1256 00006ff0     b5a0          move    *a13(BUT_VAL_CUR),a0
         00007000     0b90  
    1257 00007010     0b80          andi    011111b,a0
         00007020 ffffffe0  
    1258 00007040     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         00007050     fff6  
    1259 00007060     ca00          jrz     ezcppunchkick
         00007070     053f  
    1260                    
    1261 00007080     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00007090     0ba0  
    1262 000070a0     0b80          andi    011111b,a0
         000070b0 ffffffe0  
    1263 000070d0                   X32     a0
    1264 000070e0     0b20          addi    ezcpaction_table,a0
         000070f0 00007310' 
    1265 00007110     8600          move    *a0,a0,L
    1266 00007120     0920          call    a0
    1267                    
    1268 00007130     b5a0          move    *a13(ANIMODE),a0
         00007140     0660  
    1269 00007150     1fa0          btst    MODE_UNINT_BIT,a0
    1270 00007160     cb19          jrnz    ezcpno_interrupt
    1271                    
    1272                    
    1273 00007170     b5a0          move    *a13(STICK_VAL_CUR),a0
         00007180     0bc0  
    1274 00007190     b00d          move    a0,*a13(MOVE_DIR)
         000071a0     04b0  
    1275 000071b0     0d5f          calla   climb_turnbuckle
         000071c0 00000000! 
    1276 000071e0     c90e          jrnc    ezcpno_climb
    1277 000071f0     b5a5          move    *a13(WRESTLERNUM),A5
         00007200     0590  
    1278 00007210     09e2          MOVI    CLIMB_ROPES,A2
         00007220 00000000! 
    1279 00007240     09c0          MOVI    1000,A0
         00007250     03e8  
    1280 00007260     0d5f          CALLA   ADD_IF_SILENT
         00007270 00000000! 
    1281 00007290     0960          rets
    1282                    
    1283 000072a0           ezcpimmobilized
    1284 000072a0     57ce          clr     a14
    1285 000072b0     b1cd          move    a14,*a13(MOVE_DIR)
         000072c0     04b0  
    1286 000072d0           ezcpno_climb
    1287 000072d0     0d5f          calla   execute_walk
         000072e0 00000000! 
    1288                    
    1289 00007300           ezcpno_interrupt
    1290 00007300     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1291                    
    1292 00007310           ezcpaction_table
    1293 00007310 00007710'         .long   ezcpz,ezcppunch,ezcpblock,ezcpblock                     ;0-3
    1294 00007390 00009050'         .long   ezcpsuper_punch,ezcpsuper_punch,ezcpblock,ezcpblock     ;4-7
    1295 00007410 0000abe0'         .long   ezcpkick,ezcppunchkick,ezcpblock,ezcpblock              ;8-11
    1296 00007490 00009050'         .long   ezcpsuper_punch,ezcppunchkick,ezcpblock,ezcpblock       ;12-15
    1297 00007510 0000c4e0'         .long   ezcpsuper_kick,ezcpsuper_kick,ezcpblock,ezcpblock       ;16-19
    1298 00007590 0000dc60'         .long   ezcpgraboh,ezcpgraboh,ezcpblock,ezcpblock               ;20-23
    1299 00007610 0000c4e0'         .long   ezcpsuper_kick,ezcppunchkick,ezcpblock,ezcpblock        ;24-27
    1300 00007690 0000dc60'         .long   ezcpgraboh,ezcpgraboh,ezcpblock,ezcpblock               ;28-31
    1301                    
    1302                    ************
    1303 00007710           ezcpz
    1304 00007710     0960          rets
    1305                    
    1306                    
    1307                    ************
    1308 00007720           ezcppunch               ;1
    1309                    *
    1310                    * MODE             DX  DZ       ACTION
    1311                    * ----------------------------------------------------
    1312                    * normal        <  40  45       headbutt
    1313                    * normal        >               normal punch
    1314                    *
    1315                    * onground      < 120 120       elbow drop
    1316                    * onground      >               normal punch
    1317                    *
    1318                    * running |
    1319                    * bouncing                      normal punch
    1320                    *
    1321                    * onturnbkl     <  40  45       hdbutt
    1322                    * onturnbkl     >               normal punch
    1323                    *
    1324                    * climbturnbkl                  punch
    1325                    *
    1326                    
    1327 00007720                   JJXM_INIT
    1328 00007790                   JJXM    NORMAL,          40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;0
    1329 00007860                   JJXM    RUNNING,         40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;1
    1330 00007930                   JJXM    INAIR,           40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;2
    1331 00007a00                   JJXM    ATTACHED,        40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;3
    1332 00007ad0                   JJXM    ONGROUND,       160,140,ezcppunch_lbowdrop,ezcppunch_punch      ;4
    1333 00007ba0                   JJXM    BOUNCING,        40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;1
    1334 00007c70                   JJXM    ONTURNBKL,       40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;6
    1335 00007d40                   JJXM    BLOCK,           40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;7
    1336 00007e10                   JJXM    DIZZY,           40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;8
    1337 00007ee0                   JJXM    DEAD,           160,140,ezcppunch_lbowdrop,ezcppunch_punch      ;9
    1338 00007f90                   JJXM    OPPOVERHEAD,     40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;10
    1339 00008040                   JJXM    CLIMBTURNBKL,           ezcppunch_punch                 ;11
    1340 00008080                   JJXM    WAITANIM,        40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;12
    1341 00008130                   JJXM    GRAPPLE,         40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;13
    1342 000081d0                   JJXM    MASTER,          40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;14
    1343 00008270                   JJXM    SLAVE,           40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;15
    1344 00008310                   JJXM    HEADHOLD,        40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;16
    1345 000083b0                   JJXM    HEADHELD,        40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;19
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1346 00008450                   JJXM    CHOKEHOLD,       40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;16
    1347 000084f0                   JJXM    PUPPET,          40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;20
    1348 00008590                   JJXM    PUPPET2,         40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;20
    1349 00008630                   JJXM    INAIR2,          40, 45,ezcppunch_hdbutt,ezcppunch_punch        ;21
    1350 000086d0                   JJXM_END
    1351                    
    1352                    *****   
    1353 000086f0           ezcppunch_punch
    1354 000086f0           std_punch
    1355 000086f0                   FACE24  lex,punch_anim
    1356 00008790     0d5f          calla   change_anim1a
         000087a0 00000000! 
    1357 000087c0                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    1358 00008960     0960          rets
    1359                    
    1360                    *****
    1361 00008970           ezcppunch_hdbutt
    1362 00008970                   FACE24  lex,butt_anim
    1363 00008a10     0d5f          calla   change_anim1a
         00008a20 00000000! 
    1364 00008a40                   WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
    1365 00008be0     0960          rets
    1366                    
    1367                    *****
    1368 00008bf0           ezcppunch_lbowdrop
    1369 00008bf0                   FACE24  lex,ground_punch_anim
    1370 00008c90     0d5f          calla   change_anim1a
         00008ca0 00000000! 
    1371 00008cc0                   WRSND   W_LUGER,LBOWDROP_T1,LBOWDROP_T2
    1372 00008e60     0960          rets
    1373                    
    1374                    
    1375                    ************
    1376 00008e70           ezcpblock               ;2
    1377 00008e70           std_block
    1378 00008e70     05a0          move    @blocking_off,a0
         00008e80 00000000! 
    1379 00008ea0     cb18          jrnz    ezcpno_blocking
    1380                    
    1381 00008eb0                   RND_AWARD       a13,BLOCKS_AWD
    1382                    
    1383 00008f50     09e0          movi    lex_4_block_anim,a0
         00008f60 00000000! 
    1384 00008f80     0d5f          calla   change_anim1
         00008f90 00000000! 
    1385                    
    1386 00008fb0     0d5f          calla   BLOCK_WOOSH
         00008fc0 00000000! 
    1387                    
    1388 00008fe0     5600          clr     a0
    1389 00008ff0     b00d          move    a0,*a13(BLOCK_TIME)
         00009000     0d30  
    1390 00009010     0320          clrc
    1391 00009020     0960          rets
    1392                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1393 00009030           ezcpno_blocking
    1394 00009030     0de0          setc
    1395 00009040     0960          rets
    1396                    
    1397                    
    1398                    ************
    1399 00009050           ezcpsuper_punch ;4
    1400                    *
    1401                    * MODE             DX  DZ       ACTION
    1402                    * ----------------------------------------------------
    1403                    * normal        < 110   75      close in super move
    1404                    * dizzy                 "               "
    1405                    * normal        >               jumping punch move
    1406                    * dizzy                 "               "
    1407                    *
    1408                    * onground      < 136  112      super elbow drop
    1409                    * onground      >               normal punch
    1410                    *
    1411                    * running                       hip toss
    1412                    * bouncing                      nothing
    1413                    *
    1414                    * onturnbkl     <  60   96      yank down
    1415                    * onturnbkl     >               normal punch
    1416                    * climbturnbkl                  normal punch
    1417                    *
    1418 00009050                   JJXM_INIT
    1419 000090c0                   JJXM    NORMAL,          70, 45,ezcpspunch_special,ezcpspunch_slap      ;0
    1420 00009190                   JJXM    RUNNING,         40, 45,ezcpspunch_special,ezcpspunch_slap      ;1
    1421 00009260                   JJXM    INAIR,           40, 45,ezcpspunch_special,ezcpspunch_slap      ;2
    1422 00009330                   JJXM    ATTACHED,        40, 45,ezcpspunch_special,ezcpspunch_slap      ;3
    1423 00009400                   JJXM    ONGROUND,       160,140,ezcpspunch_lbowdrop,std_punch   ;4
    1424 000094d0                   JJXM    BOUNCING,       110, 45,ezcpspunch_special,ezcpspunch_slap      ;5
    1425 000095a0                   JJXM    ONTURNBKL,              ezcpspunch_slap                 ;6
    1426 000095f0                   JJXM    BLOCK,           70, 45,ezcpspunch_special,ezcpspunch_slap      ;7
    1427 000096c0                   JJXM    DIZZY,           40, 45,ezcpspunch_special,ezcpspunch_slap      ;8
    1428 00009790                   JJXM    DEAD,           160,140,ezcpspunch_lbowdrop,std_punch   ;9
    1429 00009860                   JJXM    OPPOVERHEAD,    110, 35,ezcpspunch_special,ezcpspunch_slap      ;10
    1430 00009910                   JJXM    CLIMBTURNBKL,           std_punch                       ;11
    1431 00009960                   JJXM    WAITANIM,        40, 45,ezcpspunch_special,ezcpspunch_slap      ;12
    1432 00009a00                   JJXM    GRAPPLE,         40, 45,ezcpspunch_special,ezcpspunch_slap      ;13
    1433 00009aa0                   JJXM    MASTER,          40, 45,ezcpspunch_special,ezcpspunch_slap      ;14
    1434 00009b40                   JJXM    SLAVE,           40, 45,ezcpspunch_special,ezcpspunch_slap      ;15
    1435 00009be0                   JJXM    HEADHOLD,        40, 45,ezcpspunch_special,ezcpspunch_slap      ;16
    1436 00009c80                   JJXM    HEADHELD,        40, 45,ezcpspunch_special,ezcpspunch_slap      ;19
    1437 00009d20                   JJXM    CHOKEHOLD,       40, 45,ezcpspunch_special,ezcpspunch_slap      ;16
    1438 00009dc0                   JJXM    PUPPET,          40, 45,ezcpspunch_special,ezcpspunch_slap      ;20
    1439 00009e60                   JJXM    PUPPET2,         40, 45,ezcpspunch_special,ezcpspunch_slap      ;20
    1440 00009f00                   JJXM    INAIR2,          40, 45,ezcpspunch_special,ezcpspunch_slap      ;21
    1441 00009fa0                   JJXM_END
    1442                    
    1443 00009fc0           ezcpspunch_rets
    1444 00009fc0     0960          rets
    1445                    
    1446                    *****
    1447 00009fd0           ezcpspunch_slap
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1448 00009fd0     09e0          movi    lex_3_clobber_anim,a0
         00009fe0 00000000! 
    1449 0000a000     0d5f          calla   change_anim1a
         0000a010 00000000! 
    1450                    
    1451 0000a030                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    1452 0000a1d0     0960          rets
    1453                    
    1454                    *****
    1455 0000a1e0           ezcpspunch_special
    1456                    ;       move    *a13(CLOSEST_XDIST),a1
    1457                    ;       cmpi    65,a1
    1458                    ;       jrgt    ezcpspunch_slap
    1459                    
    1460 0000a1e0     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000a1f0     0370  
    1461 0000a200     0b41          cmpi    55,a1
         0000a210     ffc8  
    1462 0000a220     c700          jrgt    std_punch
         0000a230     fe4b  
    1463                    
    1464                            .ref    lex_2_butts_anim
    1465                            .ref    lex_4_butts_anim
    1466                    
    1467 0000a240                   FACE24  lex,butts_anim
    1468 0000a2e0     0d5f          calla   change_anim1
         0000a2f0 00000000! 
    1469                    
    1470 0000a310                   WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
    1471                    
    1472 0000a4b0     0960          rets
    1473                    
    1474                    *****
    1475 0000a4c0           ezcpspunch_lbowdrop
    1476                    
    1477 0000a4c0     b5ae          move    *a13(CLOSEST_NUM),a14
         0000a4d0     03a0  
    1478 0000a4e0                   X32     a14
    1479 0000a4f0     0b2e          addi    process_ptrs,a14
         0000a500 00000000! 
    1480 0000a520     87ce          move    *a14,a14,L
    1481 0000a530     b5c2          move    *a14(PLYRMODE),a2
         0000a540     05c0  
    1482 0000a550     0b42          cmpi    MODE_DEAD,a2
         0000a560     fff6  
    1483 0000a570     ca3e          jrz     ezcpno
    1484 0000a580     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000a590     0100  
    1485 0000a5a0     b7c2          move    *a14(OBJ_XPOS),a2,L
         0000a5b0     0100  
    1486 0000a5c0     4441          sub     a2,a1
    1487 0000a5d0     0381          abs     a1
    1488 0000a5e0     2e01          srl     16,a1
    1489 0000a5f0     0b41          cmpi    20h,a1  ;28
         0000a600     ffdf  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1490 0000a610     c434          jrlt    ezcpno
    1491                    
    1492                    ;At head or feet!
    1493                    
    1494 0000a620     b5ce          move    *a14(OBJ_CONTROL),a14
         0000a630     0780  
    1495 0000a640     0b8e          andi    M_FLIPH,a14
         0000a650 ffffffef  
    1496 0000a670     b5a0          move    *a13(OBJ_CONTROL),a0
         0000a680     0780  
    1497 0000a690     0b80          andi    M_FLIPH,a0
         0000a6a0 ffffffef  
    1498 0000a6c0     480e          cmp     a0,a14
    1499 0000a6d0     ca28          jrz     ezcpno
    1500                    
    1501                    ;At head!  Do hair pickup.
    1502                    
    1503 0000a6e0                   FACE24  lex,hair_pickup_anim
    1504 0000a780     0d5f          calla   change_anim1
         0000a790 00000000! 
    1505 0000a7b0                   WRSND   W_LUGER,LBOWDROP_T1,LBOWDROP_T2
    1506 0000a950     0960          rets
    1507                    
    1508 0000a960           ezcpno
    1509 0000a960                   FACE24  lex,ground_punch_anim
    1510 0000aa00     0d5f          calla   change_anim1
         0000aa10 00000000! 
    1511 0000aa30                   WRSND   W_LUGER,LBOWDROP_T1,LBOWDROP_T2
    1512 0000abd0     0960          rets
    1513                    
    1514                    
    1515                    ************
    1516 0000abe0           ezcpkick                ;8
    1517                    *
    1518                    * MODE             DX  DZ       ACTION
    1519                    * ----------------------------------------------------
    1520                    * normal        <  60   50      knee
    1521                    *               >               normal kick
    1522                    *
    1523                    * onground      < 128  128      stomp
    1524                    * onground      >               normal kick
    1525                    *
    1526                    * running |
    1527                    * bouncing                      big boot
    1528                    *
    1529                    * onturnbkl |
    1530                    * climbturnbkl                  normal kick
    1531                    *
    1532                    
    1533                    
    1534 0000abe0                   JJXM_INIT
    1535 0000ac50                   JJXM    NORMAL,          60, 50,ezcpkick_knee,ezcpkick_kick
    1536 0000ad20                   JJXM    BLOCK,           60, 50,ezcpkick_knee,ezcpkick_kick
    1537 0000adf0                   JJXM    DIZZY,           60, 50,ezcpkick_knee,ezcpkick_kick
    1538 0000aec0                   JJXM    ONGROUND,       160,140,ezcpkick_stomp,ezcpkick_kick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1539 0000af90                   JJXM    RUNNING,         60, 50,ezcpkick_knee,ezcpkick_kick
    1540 0000b060                   JJXM    BOUNCING,        60, 50,ezcpkick_knee,ezcpkick_kick
    1541 0000b130                   JJXM    ONTURNBKL,              ezcpkick_kick
    1542 0000b180                   JJXM    CLIMBTURNBKL,           ezcpkick_kick
    1543 0000b1d0                   JJXM    INAIR,           60, 50,ezcpkick_knee,ezcpkick_kick
    1544 0000b2a0                   JJXM    ATTACHED,        60, 50,ezcpkick_knee,ezcpkick_kick
    1545 0000b370                   JJXM    DEAD,           160,140,ezcpkick_stomp,ezcpkick_kick
    1546 0000b440                   JJXM    OPPOVERHEAD,     60, 50,ezcpkick_knee,ezcpkick_kick
    1547 0000b510                   JJXM    WAITANIM,        60, 50,ezcpkick_knee,ezcpkick_kick
    1548 0000b5c0                   JJXM    GRAPPLE,         60, 50,ezcpkick_knee,ezcpkick_kick
    1549 0000b670                   JJXM    MASTER,          60, 50,ezcpkick_knee,ezcpkick_kick
    1550 0000b720                   JJXM    SLAVE,           60, 50,ezcpkick_knee,ezcpkick_kick
    1551 0000b7d0                   JJXM    HEADHOLD,        60, 50,ezcpkick_knee,ezcpkick_kick
    1552 0000b870                   JJXM    HEADHELD,        60, 50,ezcpkick_knee,ezcpkick_kick
    1553 0000b910                   JJXM    CHOKEHOLD,       60, 50,ezcpkick_knee,ezcpkick_kick
    1554 0000b9b0                   JJXM    PUPPET,          60, 50,ezcpkick_knee,ezcpkick_kick
    1555 0000ba50                   JJXM    PUPPET2,         60, 50,ezcpkick_knee,ezcpkick_kick
    1556 0000baf0                   JJXM    INAIR2,                 ezcpkick_TB
    1557 0000bb30                   JJXM_END
    1558                    
    1559                    *****
    1560 0000bb50           ezcpkick_TB
    1561                    
    1562                            .ref    lex_kick_TB_anim
    1563 0000bb50     09e0          movi    lex_kick_TB_anim,a0
         0000bb60 00000000! 
    1564 0000bb80     0d5f          calla   change_anim1a
         0000bb90 00000000! 
    1565                    
    1566 0000bbb0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1567 0000bd50     0960          rets
    1568                    *****
    1569 0000bd60           ezcpkick_kick
    1570 0000bd60           std_kick
    1571                    
    1572 0000bd60                   FACE24  lex,kick_anim
    1573 0000be00     0d5f          calla   change_anim1a
         0000be10 00000000! 
    1574                    
    1575 0000be30                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1576 0000bfd0     0960          rets
    1577                    
    1578                    *****
    1579 0000bfe0           ezcpkick_knee
    1580 0000bfe0           std_knee
    1581                    
    1582 0000bfe0     09e0          movi    lex_4_knee_anim,a0
         0000bff0 00000000! 
    1583 0000c010     0d5f          calla   change_anim1a
         0000c020 00000000! 
    1584                    
    1585 0000c040                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1586 0000c1e0     0960          rets
    1587                    
    1588                    *****
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1589 0000c1f0           ezcpkick_stomp
    1590 0000c1f0           std_stomp
    1591                    
    1592 0000c1f0                   FACE24  lex,stomp_anim
    1593 0000c290     0d5f          calla   change_anim1a
         0000c2a0 00000000! 
    1594                    
    1595 0000c2c0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1596                    
    1597 0000c460     0960          rets
    1598                    
    1599                    ;*****
    1600                    ;ezcpkick_bigboot
    1601                    ;
    1602                    ;       FACE24  lex,kick_anim
    1603                    ;       calla   change_anim1a
    1604                    ;
    1605                    ;       WRSND   W_LUGER,KICK_T1,KICK_T2
    1606                    ;       rets
    1607                    
    1608                    
    1609                    ************
    1610 0000c470           ezcppunchkick   ;9
    1611                    
    1612 0000c470     09e0          movi    start_run_anim,a0
         0000c480 00000000! 
    1613 0000c4a0     0d5f          calla   change_anim1a
         0000c4b0 00000000! 
    1614                    
    1615 0000c4d0     0960          rets
    1616                    
    1617                    
    1618                    ************
    1619 0000c4e0           ezcpsuper_kick  ;16
    1620                    *
    1621                    * MODE             DX  DZ       ACTION
    1622                    * ----------------------------------------------------
    1623                    * normal        <  60   60      close in super move
    1624                    * dizzy                 "               "
    1625                    * normal        >               jumping kick move
    1626                    * dizzy                 "               "
    1627                    *
    1628                    * onground      < 120  120      super stomp
    1629                    * onground      >               normal kick
    1630                    *
    1631                    * running                       big boot
    1632                    * bouncing                      big boot
    1633                    *
    1634                    * onturnbkl     <  60   96      jumping kick move
    1635                    * climbturnbkl          "               "
    1636                    * onturnbkl     >               normal kick
    1637                    * climbturnbkl          "               "
    1638                    *
    1639 0000c4e0                   JJXM_INIT
    1640 0000c550                   JJXM    NORMAL,          60, 60,ezcpskick_special,ezcpskick_kick        ;0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1641 0000c620                   JJXM    RUNNING,                ezcpskick_bigboot                       ;1
    1642 0000c670                   JJXM    INAIR,           60, 60,ezcpskick_special,ezcpskick_kick        ;2
    1643 0000c740                   JJXM    ATTACHED,        60, 60,ezcpskick_special,ezcpskick_kick        ;3
    1644 0000c810                   JJXM    ONGROUND,       160,140,std_stomp,std_kick              ;4
    1645 0000c8d0                   JJXM    BOUNCING,               ezcpskick_bigboot                       ;5
    1646 0000c920                   JJXM    ONTURNBKL,       60, 96,ezcpskick_kick,std_kick         ;6
    1647 0000c9f0                   JJXM    BLOCK,           60, 60,ezcpskick_special,ezcpskick_kick        ;7
    1648 0000cac0                   JJXM    DIZZY,           60, 60,ezcpskick_special,ezcpskick_kick        ;8
    1649 0000cb90                   JJXM    DEAD,           160,140,std_stomp,std_kick              ;9
    1650 0000cc60                   JJXM    OPPOVERHEAD,     60, 60,ezcpskick_special,ezcpskick_kick        ;10
    1651 0000cd10                   JJXM    CLIMBTURNBKL,    60, 96,ezcpskick_kick,std_kick         ;11
    1652 0000cdd0                   JJXM    WAITANIM,        60, 62,ezcpskick_special,ezcpskick_kick        ;12
    1653 0000ce70                   JJXM    GRAPPLE,         60, 62,ezcpskick_special,ezcpskick_kick        ;13
    1654 0000cf10                   JJXM    MASTER,          60, 62,ezcpskick_special,ezcpskick_kick        ;14
    1655 0000cfb0                   JJXM    SLAVE,           60, 62,ezcpskick_special,ezcpskick_kick        ;15
    1656 0000d050                   JJXM    HEADHOLD,        60, 62,ezcpskick_special,ezcpskick_kick        ;16
    1657 0000d0f0                   JJXM    HEADHELD,               std_kick
    1658 0000d140                   JJXM    CHOKEHOLD,       60, 62,ezcpskick_special,ezcpskick_kick        ;16
    1659 0000d1e0                   JJXM    PUPPET,          60, 62,ezcpskick_special,ezcpskick_kick        ;20
    1660 0000d280                   JJXM    PUPPET2,         60, 62,ezcpskick_special,ezcpskick_kick        ;20
    1661 0000d320                   JJXM    INAIR2,                 ezcpkick_TB
    1662 0000d370                   JJXM_END
    1663                    
    1664                    *****
    1665 0000d390           ezcpskick_kick
    1666 0000d390     09e0          movi    lex_super_kick_anim,a0
         0000d3a0 00000000! 
    1667 0000d3c0     0d5f          calla   change_anim1a
         0000d3d0 00000000! 
    1668                    
    1669 0000d3f0                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1670 0000d590     0960          rets
    1671                    
    1672                    
    1673                    *****
    1674 0000d5a0           ezcpskick_special
    1675 0000d5a0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d5b0     0bc0  
    1676 0000d5c0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000d5d0     04d0  
    1677 0000d5e0     0b81          andi    0ch,a1
         0000d5f0 fffffff3  
    1678 0000d610     4801          cmp     a0,a1
    1679 0000d620     ca21          jrz     ezcpcont2
    1680                    
    1681 0000d630     09e0          movi    lex_4_knee_anim,a0
         0000d640 00000000! 
    1682 0000d660     0d5f          calla   change_anim1a
         0000d670 00000000! 
    1683                    
    1684 0000d690                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1685                    
    1686 0000d830     0960          rets
    1687                    
    1688 0000d840           ezcpcont2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1689 0000d840     09e0          movi    lex_4_knee_fall_anim,a0
         0000d850 00000000! 
    1690 0000d870     0d5f          calla   change_anim1
         0000d880 00000000! 
    1691                    
    1692 0000d8a0                   WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
    1693 0000da40     0960          rets
    1694                    
    1695                    *****
    1696 0000da50           ezcpskick_bigboot       ;we can probably get away with just a ezcp4 big boot
    1697                    
    1698 0000da50     09e0          movi    lex_4_bigboot_anim,a0           ;*****
         0000da60 00000000! 
    1699 0000da80     0d5f          calla   change_anim1a
         0000da90 00000000! 
    1700                    
    1701 0000dab0                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1702                    
    1703 0000dc50     0960          rets
    1704                    
    1705                    ************
    1706 0000dc60           ezcpgraboh              ;20
    1707                    
    1708 0000dc60     09e0          movi    lex_4_graboh_anim,a0
         0000dc70 00000000! 
    1709 0000dc90     0d5f          calla   change_anim1a
         0000dca0 00000000! 
    1710                    
    1711 0000dcc0                   WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
    1712                    
    1713 0000de60     0960          rets
    1714                    
    1715                    
    1716                    *****************************************************************************
    1717                    *
    1718                    * RUNNING (if GETUP_TIME > 0 then player is out of control)
    1719                    *
    1720                    
    1721          00060000  hhbqXRUN_VAL    equ     LEX_XRUN
    1722          00020000  hhbqZDRIFT_VAL  equ     LEX_ZDRIFT
    1723                    
    1724 0000de70           mode_running
    1725                    
    1726 0000de70     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         0000de80     07b0  
    1727 0000de90     1020          addk    1,a0
    1728 0000dea0     b00d          move    a0,*a13(RUN_TIME)
         0000deb0     07b0  
    1729                    
    1730 0000dec0     b5a0          move    *a13(USR_VAR1),a0
         0000ded0     0850  
    1731 0000dee0     cb11          jrnz    hhbqno_vel
    1732                    
    1733 0000def0     0d5f          calla   bounce_off_ropes
         0000df00 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1734                    
    1735 0000df20     09e0          movi    hhbqXRUN_VAL,a0
         0000df30 00060000  
    1736 0000df50     b5ae          move    *a13(MOVE_DIR),a14
         0000df60     04b0  
    1737 0000df70     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1738 0000df80     cb01          jrnz    hhbqpos
    1739 0000df90     03a0          neg     a0
    1740 0000dfa0           hhbqpos
    1741 0000dfa0     05ae          move    @hyper_speed_on,a14
         0000dfb0 00000000! 
    1742 0000dfd0     63c0          sll     a14,a0
    1743 0000dfe0     b20d          move    a0,*a13(OBJ_XVEL),L
         0000dff0     02d0  
    1744                    
    1745 0000e000           hhbqno_vel
    1746                    
    1747 0000e000     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         0000e010     0460  
    1748 0000e020     cb38          jrnz    hhbqout_of_control
    1749                    
    1750 0000e030     b5a0          move    *a13(ANIMODE),a0
         0000e040     0660  
    1751 0000e050     1fa0          btst    MODE_UNINT_BIT,a0
    1752 0000e060     cb16          jrnz    hhbqno_interrupt
    1753                    
    1754 0000e070     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000e080     0bc0  
    1755 0000e090     b5a1          move    *a13(MOVE_DIR),a1
         0000e0a0     04b0  
    1756 0000e0b0     5401          or      a0,a1
    1757 0000e0c0     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         0000e0d0 fffffff3  
    1758 0000e0f0     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         0000e100     fff3  
    1759 0000e110     cb0b          jrne    hhbqcontinue_run
    1760                    
    1761                            ;braking with stick.  abort run.
    1762                    
    1763 0000e120                   SETMODE NORMAL
    1764                    
    1765 0000e1d0           hhbqcontinue_run
    1766 0000e1d0           hhbqno_interrupt
    1767                    
    1768 0000e1d0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000e1e0     0bc0  
    1769 0000e1f0     5621          clr     a1
    1770                    
    1771 0000e200     09e1          movi    -hhbqZDRIFT_VAL,a1
         0000e210 fffe0000  
    1772 0000e230     1fe0          btst    PLAYER_UP_BIT,a0
    1773 0000e240     cb06          jrnz    hhbqsetvel
    1774                    
    1775 0000e250     09e1          movi    hhbqZDRIFT_VAL,a1
         0000e260 00020000  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1776 0000e280     1fc0          btst    PLAYER_DOWN_BIT,a0
    1777 0000e290     cb01          jrnz    hhbqsetvel
    1778                    
    1779 0000e2a0     5621          clr     a1
    1780 0000e2b0           hhbqsetvel
    1781 0000e2b0     b22d          move    a1,*a13(OBJ_ZVEL),L
         0000e2c0     0310  
    1782                    
    1783                    ;Delay reading buttons after just getting out of an out of control run
    1784                    ;so a mistaken move isn't fired off
    1785 0000e2d0     b5a0          move    *a13(DELAY_BUTNS),a0
         0000e2e0     0ab0  
    1786 0000e2f0     cb0b          jrnz    hhbqout_of_control
    1787                    
    1788 0000e300     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000e310     0ba0  
    1789 0000e320     0b80          andi    011111b,a0
         0000e330 ffffffe0  
    1790 0000e350                   X32     a0
    1791 0000e360     0b20          addi    hhbqaction_table,a0
         0000e370 0000e3c0' 
    1792 0000e390     8600          move    *a0,a0,L
    1793 0000e3a0     0920          call    a0
    1794 0000e3b0           hhbqout_of_control
    1795 0000e3b0     0960          rets
    1796                    
    1797 0000e3c0           hhbqaction_table
    1798 0000e3c0 0000e7c0'         .long   hhbqz,hhbqpunch,hhbqblock,hhbqblock                     ;0-3
    1799 0000e440 0000e7d0'         .long   hhbqsuper_punch,hhbqsuper_punch,hhbqblock,hhbqblock     ;4-7
    1800 0000e4c0 0000f220'         .long   hhbqkick,hhbqpunchkick,hhbqblock,hhbqblock              ;8-11
    1801 0000e540 0000e7d0'         .long   hhbqsuper_punch,hhbqpunchkick,hhbqblock,hhbqblock       ;12-15
    1802 0000e5c0 0000f220'         .long   hhbqsuper_kick,hhbqsuper_kick,hhbqblock,hhbqblock       ;16-19
    1803 0000e640 0000e7d0'         .long   hhbqgraboh,hhbqgraboh,hhbqblock,hhbqblock               ;20-23
    1804 0000e6c0 0000f220'         .long   hhbqsuper_kick,hhbqpunchkick,hhbqblock,hhbqblock        ;24-27
    1805 0000e740 0000e7d0'         .long   hhbqgraboh,hhbqgraboh,hhbqblock,hhbqblock               ;28-31
    1806                    
    1807                    ************
    1808 0000e7c0           hhbqz
    1809 0000e7c0     0960          rets
    1810                    
    1811                    
    1812                    ************
    1813 0000e7d0           hhbqpunch               ;1
    1814 0000e7d0           hhbqsuper_punch ;4
    1815 0000e7d0           hhbqpunchkick
    1816 0000e7d0           hhbqgraboh
    1817                    *
    1818                    * MODE             DX  DZ       ACTION
    1819                    * ----------------------------------------------------
    1820                    * normal                        flying clothesline
    1821                    * dizzy                                 "
    1822                    *
    1823                    * onground      < 176 176       flying ground punch
    1824                    * onground      >               nothing
    1825                    *
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1826                    * running                       flying clothesline
    1827                    * bouncing                      flying clothesline
    1828                    *
    1829                    * onturnbkl                     flying clothesline
    1830                    * climbturnbkl                  flying clothesline
    1831                    *
    1832 0000e7d0                   JJXM_INIT
    1833 0000e840                   JJXM    NORMAL,                 hhbqpunch_clothesline
    1834 0000e880                   JJXM    BLOCK,                  hhbqpunch_clothesline
    1835 0000e8c0                   JJXM    DIZZY,                  hhbqpunch_clothesline
    1836 0000e900                   JJXM    ONGROUND,       176,176,hhbqpunch_bellyflop,hhbqpunch_rets
    1837 0000e9a0                   JJXM    RUNNING,                hhbqpunch_clothesline
    1838 0000e9e0                   JJXM    BOUNCING,               hhbqpunch_clothesline
    1839 0000ea20                   JJXM    ONTURNBKL,              hhbqpunch_clothesline
    1840 0000ea60                   JJXM    CLIMBTURNBKL,           hhbqpunch_clothesline
    1841 0000eaa0                   JJXM    INAIR,                  hhbqpunch_clothesline
    1842 0000eae0                   JJXM    ATTACHED,               hhbqpunch_clothesline
    1843 0000eb20                   JJXM    ONGROUND,       176,176,hhbqpunch_bellyflop,hhbqpunch_rets
    1844 0000ebc0                   JJXM    OPPOVERHEAD,            hhbqpunch_clothesline
    1845 0000ec00                   JJXM    WAITANIM,               hhbqpunch_clothesline
    1846 0000ec40                   JJXM    GRAPPLE,                hhbqpunch_clothesline
    1847 0000ec80                   JJXM    MASTER,                 hhbqpunch_clothesline
    1848 0000ecc0                   JJXM    SLAVE,                  hhbqpunch_clothesline
    1849 0000ed00                   JJXM    HEADHOLD,               hhbqpunch_clothesline
    1850 0000ed40                   JJXM    HEADHELD,               hhbqpunch_clothesline
    1851 0000ed80                   JJXM    CHOKEHOLD,              hhbqpunch_clothesline
    1852 0000edc0                   JJXM    PUPPET,                 hhbqpunch_clothesline
    1853 0000ee00                   JJXM    PUPPET2,                hhbqpunch_clothesline
    1854 0000ee40                   JJXM    INAIR2,                 hhbqpunch_clothesline
    1855 0000ee80                   JJXM_END
    1856                    
    1857 0000eea0           hhbqpunch_rets
    1858 0000eea0     0960          rets
    1859                    
    1860                    *****
    1861 0000eeb0           hhbqpunch_clothesline
    1862                    ;TODO - fix this
    1863                            ;HACK!!!
    1864 0000eeb0     c000          jruc    hhbqkick_flyingkick
         0000eec0     00a3  
    1865                    
    1866 0000eed0     0960          rets
    1867                    
    1868                    *****
    1869 0000eee0           hhbqpunch_bellyflop
    1870 0000eee0           attack_bellyflop
    1871                    
    1872 0000eee0     09e0          movi    lex_flying_ground_punch_anim,a0
         0000eef0 00000000! 
    1873 0000ef10     0d5f          calla   change_anim1a
         0000ef20 00000000! 
    1874                    
    1875 0000ef40                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1876 0000f0e0     0960          rets
    1877                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1878                    
    1879                    ************
    1880 0000f0f0           hhbqblock               ;2
    1881                    
    1882 0000f0f0     b7a0          move    *a13(OBJ_XVEL),a0,L
         0000f100     02d0  
    1883 0000f110     2be0          sra     1,a0
    1884 0000f120     b20d          move    a0,*a13(OBJ_XVEL),L
         0000f130     02d0  
    1885 0000f140                   SETMODE NORMAL
    1886 0000f1f0     c000          jruc    std_block
         0000f200     f9c6  
    1887 0000f210     0960          rets
    1888                    
    1889                    ************
    1890 0000f220           hhbqkick                ;8
    1891 0000f220           hhbqsuper_kick  ;16
    1892                    *
    1893                    * MODE             DX  DZ       ACTION
    1894                    * ----------------------------------------------------
    1895                    * normal                        flying kick
    1896                    * dizzy                                 "
    1897                    *
    1898                    * onground      < 176 176       flying ground punch
    1899                    * onground      >               nothing
    1900                    *
    1901                    * running                       flying kick
    1902                    * bouncing                      flying kick
    1903                    *
    1904                    * onturnbkl                     flying kick
    1905                    * climbturnbkl                  flying kick
    1906                    *
    1907 0000f220                   JJXM_INIT
    1908 0000f290                   JJXM    NORMAL,                 hhbqkick_flyingkick
    1909 0000f2d0                   JJXM    BLOCK,                  hhbqkick_flyingkick
    1910 0000f310                   JJXM    DIZZY,                  hhbqkick_flyingkick
    1911 0000f350                   JJXM    ONGROUND,       176,176,attack_bellyflop,hhbqkick_rets
    1912 0000f3f0                   JJXM    RUNNING,                hhbqkick_flyingkick
    1913 0000f430                   JJXM    BOUNCING,               hhbqkick_flyingkick
    1914 0000f470                   JJXM    ONTURNBKL,              hhbqkick_flyingkick
    1915 0000f4b0                   JJXM    CLIMBTURNBKL,           hhbqkick_flyingkick
    1916 0000f4f0                   JJXM    INAIR,                  hhbqkick_flyingkick
    1917 0000f530                   JJXM    ATTACHED,               hhbqkick_flyingkick
    1918 0000f570                   JJXM    DEAD,           176,176,attack_bellyflop,hhbqkick_rets
    1919 0000f610                   JJXM    OPPOVERHEAD,            hhbqkick_flyingkick
    1920 0000f650                   JJXM    WAITANIM,               hhbqkick_flyingkick
    1921 0000f690                   JJXM    GRAPPLE,                hhbqkick_flyingkick
    1922 0000f6d0                   JJXM    MASTER,                 hhbqkick_flyingkick
    1923 0000f710                   JJXM    SLAVE,                  hhbqkick_flyingkick
    1924 0000f750                   JJXM    HEADHOLD,               hhbqkick_flyingkick
    1925 0000f790                   JJXM    HEADHELD,               hhbqkick_flyingkick
    1926 0000f7d0                   JJXM    CHOKEHOLD,              hhbqkick_flyingkick
    1927 0000f810                   JJXM    PUPPET,                 hhbqkick_flyingkick
    1928 0000f850                   JJXM    PUPPET2,                hhbqkick_flyingkick
    1929 0000f890                   JJXM    INAIR2,                 hhbqkick_flyingkick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

    1930 0000f8d0                   JJXM_END
    1931                    
    1932 0000f8f0           hhbqkick_rets
    1933 0000f8f0     0960          rets
    1934                    
    1935                    *****
    1936 0000f900           hhbqkick_flyingkick
    1937                    
    1938 0000f900     0d5f          calla   ck_ignore
         0000f910 00000000! 
    1939 0000f930     c800          jrc     hhbqz
         0000f940     fee7  
    1940                    
    1941 0000f950                   SETMODE INAIR
    1942                    
    1943 0000fa00     09e0          movi    lex_flying_kick_anim,a0
         0000fa10 00000000! 
    1944 0000fa30     0d5f          calla   change_anim1a
         0000fa40 00000000! 
    1945                    
    1946 0000fa60                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1947                    
    1948 0000fc00     0960          rets
    1949                    
    1950                    
    1951                    *****************************************************************************
    1952                    *
    1953                    
    1954 0000fc10           mode_inair      ;2
    1955                    
    1956 0000fc10     0960          rets
    1957                    
    1958                    *****************************************************************************
    1959                    *
    1960                    
    1961 0000fc20           mode_attached   ;3
    1962                    
    1963 0000fc20     0d5f          calla   keep_attached
         0000fc30 00000000! 
    1964 0000fc50     cb12          jrnz    ifqvstill_attached
    1965                    
    1966 0000fc60     5600          clr     a0
    1967 0000fc70     b20d          move    a0,*a13(ATTACH_PROC),L
         0000fc80     03e0  
    1968                    
    1969 0000fc90                   SETMODE NORMAL
    1970                    
    1971 0000fd40     09c0          movi    MODE_NORMAL,a0
         0000fd50     0000  
    1972 0000fd60     b00d          move    a0,*a13(ANIMODE)
         0000fd70     0660  
    1973                    
    1974 0000fd80           ifqvstill_attached
    1975 0000fd80     0960          rets
    1976                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1977                    *****************************************************************************
    1978                    
    1979 0000fd90           mode_onground   ;4
    1980                    
    1981                    ;       move    *a13(GETUP_TIME),a0
    1982                    ;       jrnz    umicexit
    1983                    ;
    1984                    ;       move    *a13(ANIBASE),a0,L
    1985                    ;       cmpi    lex_faceup_getup_anim,a0
    1986                    ;       jrz     umicexit
    1987                    ;
    1988                    ;       calla   do_roll
    1989                    ;       jrnz    umicexit                        ;did roll
    1990                    ;
    1991                    ;       movi    lex_faceup_getup_anim,a0
    1992                    ;
    1993                    ;       calla   change_anim1a
    1994                    ;
    1995                    ;umicexit
    1996 0000fd90     0960          rets
    1997                    
    1998                    
    1999                    *****************************************************************************
    2000                    *
    2001                    * bouncing off ropes while running
    2002                    
    2003 0000fda0           mode_bouncing   ;5
    2004                    
    2005 0000fda0     5600          clr     a0
    2006 0000fdb0     b20d          move    a0,*a13(OBJ_XVEL),L
         0000fdc0     02d0  
    2007 0000fdd0     b20d          move    a0,*a13(OBJ_ZVEL),L
         0000fde0     0310  
    2008                    
    2009 0000fdf0     b5a0          move    *a13(ANIMODE),a0
         0000fe00     0660  
    2010 0000fe10     1fe0          btst    MODE_END_BIT,a0
    2011 0000fe20     ca20          jrz     iontnot_ended
    2012                    
    2013 0000fe30     b5a0          move    *a13(MOVE_DIR),a0
         0000fe40     04b0  
    2014 0000fe50     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         0000fe60 0000000c  
    2015 0000fe80     b00d          move    a0,*a13(MOVE_DIR)
         0000fe90     04b0  
    2016                    
    2017 0000fea0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000feb0     04d0  
    2018 0000fec0     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         0000fed0 fffffffc  
    2019 0000fef0     5401          or      a0,a1                   ;LEFT or RIGHT
    2020 0000ff00     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         0000ff10     04c0  
    2021                    
    2022 0000ff20     09e0          movi    lex_run2_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

         0000ff30 00000000! 
    2023 0000ff50     0d5f          calla   change_anim1a
         0000ff60 00000000! 
    2024                    
    2025 0000ff80                   SETMODE RUNNING
    2026                    
    2027                    ;       clr     a0
    2028                    ;       move    a0,*a13(GETUP_TIME)     ;in control
    2029                    
    2030 00010030           iontnot_ended
    2031 00010030     0960          rets
    2032                    
    2033                    *****************************************************************************
    2034                    *
    2035                    * STANDING ON TOP OF TURNBUCKLE
    2036                    
    2037 00010040           mode_onturnbkl  ;6
    2038                    
    2039                    ;       ;check unint
    2040                    ;       move    *a13(ANIMODE),a14
    2041                    ;       btst    MODE_UNINT_BIT,a14
    2042                    ;       jrnz    tlecno_interrupt
    2043                    
    2044 00010040     b5a0          move    *a13(STICK_VAL_CUR),a0
         00010050     0bc0  
    2045 00010060     1fc0          btst    PLAYER_DOWN_BIT,a0
    2046 00010070     ca12          jrz     tlecno_climbdown
    2047                    
    2048 00010080     09e0          movi    lex_climb_down_anim,a0
         00010090 00000000! 
    2049 000100b0     0d5f          calla   change_anim1a
         000100c0 00000000! 
    2050                    
    2051 000100e0                   SETMODE CLIMBTURNBKL
    2052                    
    2053 00010190           tlecno_interrupt
    2054 00010190     0960          rets
    2055                    
    2056 000101a0           tlecno_climbdown
    2057 000101a0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000101b0     0ba0  
    2058 000101c0     0b80          andi    011111b,a0
         000101d0 ffffffe0  
    2059 000101f0     ca51          jrz     tlecz
    2060                    
    2061 00010200                   X32     a0
    2062 00010210     0b20          addi    tlecaction_table,a0
         00010220 00010310' 
    2063 00010240     8600          move    *a0,a0,L
    2064 00010250     0920          call    a0
    2065                    
    2066 00010260     b5a5          move    *a13(PLYRNUM),a5
         00010270     0580  
    2067 00010280     09e2          movi    JUMP_ROPES,a2
         00010290 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    2068 000102b0     09c0          movi    1000,a0
         000102c0     03e8  
    2069 000102d0     0d5f          calla   ADD_IF_SILENT
         000102e0 00000000! 
    2070                    
    2071 00010300     0960          rets
    2072                    
    2073                    
    2074                    ;For standing on top of turnbuckles
    2075                    
    2076 00010310           tlecaction_table
    2077 00010310 00010710'         .long   tlecz,tlecpunch,tlecblock,tlecblock                     ;0-3
    2078 00010390 00010720'         .long   tlecsuper_punch,tlecsuper_punch,tlecblock,tlecblock     ;4-7
    2079 00010410 00010720'         .long   tleckick,tlecpunchkick,tlecblock,tlecblock              ;8-11
    2080 00010490 00010720'         .long   tlecsuper_punch,tlecpunchkick,tlecblock,tlecblock       ;12-15
    2081 00010510 00010720'         .long   tlecsuper_kick,tlecsuper_kick,tlecblock,tlecblock       ;16-19
    2082 00010590 00010720'         .long   tlecgraboh,tlecgraboh,tlecblock,tlecblock               ;20-23
    2083 00010610 00010720'         .long   tlecsuper_kick,tlecpunchkick,tlecblock,tlecblock        ;24-27
    2084 00010690 00010720'         .long   tlecgraboh,tlecgraboh,tlecblock,tlecblock               ;28-31
    2085                    
    2086                    ;       .long   tlecz                   ;0
    2087                    ;       .long   tlecpunch                       ;1
    2088                    ;       .long   tlecblock                       ;2
    2089                    ;       .long   tlecz                   ;3
    2090                    ;       .long   tlecsuper_punch         ;4
    2091                    ;       .long   tlecz,tlecz,tlecz               ;5-7
    2092                    ;       .long   tleckick                        ;8
    2093                    ;       .long   tlecz,tlecz,tlecz,tlecz,tlecz,tlecz,tlecz       ;9-15
    2094                    ;       .long   tlecsuper_kick          ;16
    2095                    ;       .long   tlecz,tlecz,tlecz,tlecz,tlecz,tlecz,tlecz       ;17-23
    2096                    ;       .long   tlecz,tlecz,tlecz,tlecz,tlecz,tlecz,tlecz,tlecz ;24-31
    2097                    
    2098                    ************
    2099 00010710           tlecz
    2100 00010710           tlecblock
    2101 00010710     0960          rets
    2102                    
    2103                    ************
    2104 00010720           tlecpunch               ;1
    2105 00010720           tlecsuper_punch ;4
    2106 00010720           tlecpunchkick   ;5
    2107 00010720           tleckick                ;8
    2108 00010720           tlecsuper_kick  ;16
    2109 00010720           tlecgraboh              ;20
    2110                    
    2111 00010720                   SETMODE INAIR
    2112                    
    2113 000107d0     09e0          movi    lex_buckle_leap_anim,a0
         000107e0 00000000! 
    2114 00010800     0d5f          calla   change_anim1a
         00010810 00000000! 
    2115                    
    2116 00010830                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    2117 000109d0     0960          rets
    2118                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2119                    *****************************************************************************
    2120                    * blocking
    2121                    
    2122 000109e0           mode_block      ;7
    2123                    
    2124 000109e0     b5a0          move    *a13(BLOCK_TIME),a0
         000109f0     0d30  
    2125 00010a00     1020          inc     a0
    2126 00010a10     b00d          move    a0,*a13(BLOCK_TIME)
         00010a20     0d30  
    2127 00010a30     0b40          cmpi    160,a0
         00010a40     ff5f  
    2128 00010a50     c413          jrlt    ukxsno
    2129                    
    2130 00010a60     0d5f          calla   get_opp_plyrmode
         00010a70 00000000! 
    2131 00010a90     0b40          cmpi    MODE_BLOCK,a0
         00010aa0     fff8  
    2132 00010ab0     cb0d          jrnz    ukxsno
    2133 00010ac0     b5a0          move    *a13(CLOSEST_XDIST),a0
         00010ad0     0370  
    2134 00010ae0     0b40          cmpi    61h,a0
         00010af0     ff9e  
    2135 00010b00     c508          jrge    ukxsno
    2136 00010b10     0b40          cmpi    45,a0
         00010b20     ffd2  
    2137 00010b30     c405          jrlt    ukxsno
    2138 00010b40     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00010b50     0390  
    2139 00010b60     0b40          cmpi    30,a0
         00010b70     ffe1  
    2140 00010b80     c461          jrlt    ukxspunchblock
    2141                    
    2142 00010b90           ukxsno
    2143 00010b90     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00010ba0     0ba0  
    2144 00010bb0     0b80          andi    011111b,a0
         00010bc0 ffffffe0  
    2145 00010be0     ca0c          jrz     ukxsno_interrupt
    2146                    
    2147                            ;press.  if block isn't down, let mode_normal handle it
    2148 00010bf0     4c02          move    a0,a2                   ;save a0 from ...val_down
    2149 00010c00     b5a0          move    *a13(BUT_VAL_CUR),a0
         00010c10     0b90  
    2150 00010c20     1fc0          btst    PLAYER_BLOCK_BIT,a0
    2151 00010c30     ca08          jrz     ukxsset_mode_normal
    2152 00010c40     4c40          move    a2,a0                   ;restore a0 from ...val_down
    2153                    
    2154 00010c50                   X32     a0
    2155 00010c60     0b20          addi    ukxsaction_table,a0
         00010c70 00010d90' 
    2156 00010c90     8600          move    *a0,a0,L
    2157 00010ca0     0920          call    a0
    2158                    
    2159 00010cb0           ukxsno_interrupt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2160 00010cb0     0960          rets
    2161                    
    2162 00010cc0           ukxsset_mode_normal
    2163 00010cc0                   SETMODE NORMAL
    2164 00010d70     c000          jruc    mode_normal
         00010d80     f5a2  
    2165                    
    2166 00010d90           ukxsaction_table
    2167 00010d90 00011190'         .long   ukxsz,ukxspunchblock,ukxsz      ;0-2
    2168 00010df0 000111a0'         .long   ukxspunchblock          ;3
    2169 00010e10 00011190'         .long   ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz       ;4-10
    2170 00010ef0 00011190'         .long   ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz       ;11-17
    2171 00010fd0 00011190'         .long   ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz       ;18-24
    2172 000110b0 00011190'         .long   ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz,ukxsz       ;25-31
    2173                    
    2174                    ************
    2175 00011190           ukxsz
    2176 00011190     0960          rets
    2177                    
    2178                    ************
    2179 000111a0           ukxspunchblock  ;3
    2180                    *
    2181                    * MODE             DX  DZ       ACTION
    2182                    * ----------------------------------------------------
    2183                    * all                           push
    2184                    *
    2185                    
    2186                    ;This push has no collisions set!
    2187                    
    2188 000111a0                   SETMODE NORMAL
    2189                    
    2190 00011250     09e0          movi    lex_4_push_anim,a0
         00011260 00000000! 
    2191 00011280     0d5f          calla   change_anim1a
         00011290 00000000! 
    2192                    
    2193 000112b0                   WRSND   W_LUGER,PUSH_T1,PUSH_T2
    2194                    
    2195 00011450     0960          rets
    2196                    
    2197                    
    2198                    *****************************************************************************
    2199                    * doink with zero health
    2200                    
    2201 00011460           mode_dizzy      ;8
    2202                    
    2203                    ;       move    *a13(GETUP_TIME),a0
    2204                    ;       jrnz    bbrostill_going
    2205                    ;
    2206                    ;       calla   clear_damage_log
    2207                    ;
    2208                    ;       clr     a0
    2209                    ;       move    a0,*a13(STARS_FLAG)
    2210                    ;
    2211                    ;       SETMODE NORMAL
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2212                    ;
    2213                    ;bbrostill_going
    2214 00011460     0960          rets
    2215                    
    2216                    *****************************************************************************
    2217                    * opponent held overhead
    2218                    
    2219 00011470           mode_oppoverhead ;10
    2220                    
    2221 00011470     b7a2          move    *a13(ATTACH_PROC),a2,L          ;proc attached to
         00011480     03e0  
    2222 00011490     ca03          jrz     rrmcnot_attached
    2223 000114a0     b640          move    *a2(ATTACH_PROC),a0,L
         000114b0     03e0  
    2224 000114c0     cb1a          jrnz    rrmcstill_attached
    2225                    
    2226 000114d0           rrmcnot_attached
    2227                    
    2228 000114d0     b5a0          move    *a13(ANIMODE),a0                ;* remove this????
         000114e0     0660  
    2229 000114f0     1fa0          btst    MODE_UNINT_BIT,a0               ;*
    2230 00011500     cb4d          jrnz    rrmcno_interrupt                        ;*
    2231                    
    2232 00011510     5600          clr     a0
    2233 00011520     b20d          move    a0,*a13(ATTACH_PROC),L
         00011530     03e0  
    2234                    
    2235 00011540     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011550 00000000! 
    2236 00011570                   SETMODE NORMAL
    2237                    
    2238 00011620     09c0          movi    MODE_NORMAL,a0
         00011630     0000  
    2239 00011640     b00d          move    a0,*a13(ANIMODE)
         00011650     0660  
    2240                    
    2241 00011660     0960          rets
    2242                    
    2243 00011670           rrmcstill_attached
    2244 00011670     b5a0          move    *a13(ANIMODE),a0
         00011680     0660  
    2245 00011690     1fa0          btst    MODE_UNINT_BIT,a0
    2246 000116a0     cb33          jrnz    rrmcno_interrupt
    2247                    
    2248 000116b0     b5a0          move    *a13(FACING_DIR),a0
         000116c0     04c0  
    2249 000116d0     0b80          andni   MOVE_UP,a0
         000116e0 00000001  
    2250 00011700     0ba0          ori     MOVE_DOWN,a0
         00011710 00000002  
    2251 00011730     b00d          move    a0,*a13(FACING_DIR)
         00011740     04c0  
    2252 00011750     b00d          move    a0,*a13(NEW_FACING_DIR)
         00011760     04d0  
    2253                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2254 00011770     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011780     0bc0  
    2255 00011790     ca0c          jrz     rrmcstand
    2256                    
    2257 000117a0     b00d          move    a0,*a13(MOVE_DIR)
         000117b0     04b0  
    2258 000117c0     0d5f          calla   execute_walk
         000117d0 00000000! 
    2259                    
    2260                            .ref    lex_holdoh_anim
    2261 000117f0     09e0          movi    lex_holdoh_anim,a0
         00011800 00000000! 
    2262                            .ref    change_anim2
    2263 00011820     0d5f          calla   change_anim2
         00011830 00000000! 
    2264 00011850     c00d          jruc    rrmcck_butns
    2265 00011860           rrmcstand
    2266 00011860     5600          clr     a0
    2267 00011870     b00d          move    a0,*a13(MOVE_DIR)
         00011880     04b0  
    2268 00011890     b20d          move    a0,*a13(OBJ_XVEL),L
         000118a0     02d0  
    2269 000118b0     b20d          move    a0,*a13(OBJ_ZVEL),L
         000118c0     0310  
    2270                    
    2271                            .ref    lex_stndholdoh_anim
    2272 000118d0     09e0          movi    lex_stndholdoh_anim,a0
         000118e0 00000000! 
    2273 00011900     0d5f          calla   change_anim1
         00011910 00000000! 
    2274                    
    2275 00011930           rrmcck_butns
    2276                    
    2277 00011930     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011940     0ba0  
    2278 00011950     0b80          andi    011111b,a0
         00011960 ffffffe0  
    2279 00011980                   X32     a0
    2280 00011990     0b20          addi    rrmcaction_table,a0
         000119a0 000119f0' 
    2281 000119c0     8600          move    *a0,a0,L
    2282 000119d0     0920          call    a0
    2283                    
    2284 000119e0           rrmcno_interrupt
    2285 000119e0     0960          rets
    2286                    
    2287 000119f0           rrmcaction_table
    2288 000119f0 00011df0'         .long   rrmcz,rrmcpunch,rrmcblock,rrmcblock                     ;0-3
    2289 00011a70 00012040'         .long   rrmcsuper_punch,rrmcsuper_punch,rrmcblock,rrmcblock     ;4-7
    2290 00011af0 00011e00'         .long   rrmckick,rrmcpunchkick,rrmcblock,rrmcblock              ;8-11
    2291 00011b70 00012040'         .long   rrmcsuper_punch,rrmcpunchkick,rrmcblock,rrmcblock       ;12-15
    2292 00011bf0 000122c0'         .long   rrmcsuper_kick,rrmcsuper_kick,rrmcblock,rrmcblock       ;16-19
    2293 00011c70 00012040'         .long   rrmcgraboh,rrmcgraboh,rrmcblock,rrmcblock               ;20-23
    2294 00011cf0 000122c0'         .long   rrmcsuper_kick,rrmcpunchkick,rrmcblock,rrmcblock        ;24-27
    2295 00011d70 00012040'         .long   rrmcgraboh,rrmcgraboh,rrmcblock,rrmcblock               ;28-31
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2296                    
    2297                    ;three moves from headhold: backbreaker, slamdown, and ohslam.
    2298                    
    2299                    ************
    2300 00011df0           rrmcz
    2301 00011df0     0960          rets
    2302                    
    2303                    ************
    2304 00011e00           rrmcpunch               ;1
    2305 00011e00           rrmcpunchkick
    2306 00011e00           rrmcblock               ;2
    2307 00011e00           rrmckick                ;8
    2308                    
    2309                    ;       move    *a13(STICK_VAL_CUR),a0
    2310                    ;       btst    PLAYER_DOWN_BIT,a0
    2311                    ;       jrz     rrmcz
    2312                    
    2313 00011e00     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011e10 00000000! 
    2314 00011e30     09e0          movi    lex_ohslam_anim,a0
         00011e40 00000000! 
    2315 00011e60     0d5f          calla   change_anim1a
         00011e70 00000000! 
    2316                    
    2317 00011e90                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    2318                    
    2319 00012030     0960          rets
    2320                    
    2321                    ************
    2322 00012040           rrmcsuper_punch ;4
    2323 00012040           rrmcgraboh
    2324                    
    2325 00012040     b5a0          move    *a13(STICK_VAL_CUR),a0
         00012050     0bc0  
    2326 00012060     1fe0          btst    PLAYER_UP_BIT,a0
    2327 00012070     cad8          jrz     rrmcpunch
    2328                    
    2329 00012080     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012090 00000000! 
    2330 000120b0     09e0          movi    lex_slamdown_anim,a0
         000120c0 00000000! 
    2331 000120e0     0d5f          calla   change_anim1a
         000120f0 00000000! 
    2332                    
    2333 00012110                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    2334                    
    2335 000122b0     0960          rets
    2336                    
    2337                    ************
    2338 000122c0           rrmcsuper_kick  ;16
    2339                    
    2340 000122c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000122d0     0bc0  
    2341 000122e0     1fe0          btst    PLAYER_UP_BIT,a0
    2342 000122f0     cab0          jrz     rrmcpunch
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2343                    
    2344 00012300     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012310 00000000! 
    2345 00012330     09e0          movi    lex_backbreaker_anim,a0
         00012340 00000000! 
    2346 00012360     0d5f          calla   change_anim1a
         00012370 00000000! 
    2347                    
    2348 00012390                   WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
    2349                    
    2350 00012530     0960          rets
    2351                    
    2352                    *****************************************************************************
    2353                    *
    2354                    * CLIMBING UP OR DOWN THE TURNBUCKLE
    2355                    
    2356 00012540           mode_climbturnbkl       ;11
    2357                    
    2358 00012540     0960          rets
    2359                    
    2360                    
    2361                    *****************************************************************************
    2362                    
    2363 00012550           mode_waitanim   ;12
    2364                    
    2365 00012550     b5a0          move    *a13(ANIMODE),a0
         00012560     0660  
    2366 00012570     1fe0          btst    MODE_END_BIT,a0
    2367 00012580     ca03          jrz     nhjlnot_ended
    2368                    
    2369 00012590     b7a0          move    *a13(CODE_ADDR),a0,L
         000125a0     0430  
    2370 000125b0     0920          call    a0
    2371                    
    2372 000125c0           nhjlnot_ended
    2373 000125c0     0960          rets
    2374                    
    2375                    
    2376                    *****************************************************************************
    2377                    
    2378 000125d0           mode_grapple    ;13
    2379                    
    2380 000125d0     0960          rets
    2381                    
    2382                    
    2383                    *****************************************************************************
    2384                    
    2385 000125e0           mode_master     ;14
    2386                    
    2387 000125e0     0d5f          calla   master_keep_attached    ;keep slave attached to me
         000125f0 00000000! 
    2388                    
    2389 00012610     0960          rets
    2390                    
    2391                    *****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   52

    2392                    
    2393 00012620           mode_slave      ;15
    2394 00012620     0960          rets
    2395                    
    2396                    *****************************************************************************
    2397                    
    2398 00012630           mode_headhold   ;16
    2399                    
    2400                    ;Bozo power move
    2401                            .ref    bozo_check
    2402 00012630     0d5f          calla   bozo_check
         00012640 00000000! 
    2403 00012660     c929          jrnc    eaabfail
    2404                    
    2405 00012670                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    2406                    
    2407 00012810     09e0          movi    lex_vsuplex_anim,a0
         00012820 00000000! 
    2408 00012840     05ae          move    @PCNT,a14
         00012850 00000000! 
    2409 00012870     1fee          btst    0,a14
    2410 00012880     ca03          jrz     eaabtag
    2411 00012890     09e0          movi    lex_4_graboh_anim,a0
         000128a0 00000000! 
    2412 000128c0     0d5f  eaabtag calla   change_anim1a
         000128d0 00000000! 
    2413                    
    2414 000128f0     0960          rets
    2415                    
    2416 00012900           eaabfail
    2417 00012900     b7a0          move    *a13(WHOIHIT),a0,L
         00012910     0500  
    2418 00012920     b400          move    *a0(PLYRMODE),a0
         00012930     05c0  
    2419 00012940     0b40          cmpi    MODE_HEADHELD,a0
         00012950     ffec  
    2420 00012960     cb10          jrnz    eaabexit
    2421                    
    2422                    ;       move    *a13(ATTACH_PROC),a10,L
    2423                    ;       jrz     eaabexit
    2424                    
    2425 00012970     b5a0          move    *a13(ANIMODE),a0
         00012980     0660  
    2426 00012990     1fa0          btst    MODE_UNINT_BIT,a0
    2427 000129a0     cb0b          jrnz    eaabno_interrupt
    2428                    
    2429 000129b0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000129c0     0ba0  
    2430 000129d0     0b80          andi    011111b,a0
         000129e0 ffffffe0  
    2431 00012a00                   X32     a0
    2432 00012a10     0b20          addi    eaabaction_table,a0
         00012a20 00012c40' 
    2433 00012a40     8600          move    *a0,a0,L
    2434 00012a50     0920          call    a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   53

    2435                    
    2436 00012a60           eaabno_interrupt
    2437 00012a60     0960          rets
    2438                    
    2439 00012a70           eaabexit
    2440 00012a70     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00012a80     0140  
    2441 00012a90     0d0e          subi    [6,0],a14
         00012aa0 fff9ffff  
    2442 00012ac0     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00012ad0     0140  
    2443                    
    2444 00012ae0     1941          movk    MOVE_DOWN_RIGHT,a1
    2445 00012af0     b5a0          move    *a13(OBJ_CONTROL),a0
         00012b00     0780  
    2446 00012b10     1f60          btst    B_FLIPH,a0
    2447 00012b20     ca01          jrz     eaabright
    2448 00012b30     18c1          movk    MOVE_DOWN_LEFT,a1
    2449 00012b40     b02d  eaabright       move    a1,*a13(FACING_DIR)
         00012b50     04c0  
    2450 00012b60     b02d          move    a1,*a13(NEW_FACING_DIR)
         00012b70     04d0  
    2451                    
    2452 00012b80                   SETMODE NORMAL
    2453                    
    2454 00012c30     0960          rets
    2455                    
    2456 00012c40           eaabaction_table
    2457 00012c40 00013040'         .long   eaabz,eaabpunch,eaabblock,eaabblock                     ;0-3
    2458 00012cc0 00013530'         .long   eaabsuper_punch,eaabsuper_punch,eaabblock,eaabblock     ;4-7
    2459 00012d40 00013540'         .long   eaabkick,eaabpunchkick,eaabblock,eaabblock              ;8-11
    2460 00012dc0 00013530'         .long   eaabsuper_punch,eaabpunchkick,eaabblock,eaabblock       ;12-15
    2461 00012e40 00013780'         .long   eaabsuper_kick,eaabsuper_kick,eaabblock,eaabblock       ;16-19
    2462 00012ec0 00013040'         .long   eaabgraboh,eaabgraboh,eaabblock,eaabblock               ;20-23
    2463 00012f40 00013780'         .long   eaabsuper_kick,eaabpunchkick,eaabblock,eaabblock        ;24-27
    2464 00012fc0 00013040'         .long   eaabgraboh,eaabgraboh,eaabblock,eaabblock               ;28-31
    2465                    
    2466                    
    2467                    ************
    2468 00013040           eaabblock
    2469 00013040           eaabgraboh
    2470 00013040           eaabz           ;0
    2471 00013040     0960          rets
    2472                    
    2473                    ************
    2474                    
    2475 00013050           eaabpunch               ;1
    2476 00013050     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013060 00000000! 
    2477                    ;If stick is toward opponent, then do quick punches
    2478 00013080     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013090     0bc0  
    2479 000130a0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000130b0     04d0  
    2480 000130c0     0b81          andi    0ch,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   54

         000130d0 fffffff3  
    2481 000130f0     4801          cmp     a0,a1
    2482 00013100     cb21          jrnz    eaabtag2
    2483                    ;TODO - change this to uppercuts_to_head_anim!
    2484 00013110                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2485                    
    2486                            .ref    lex_4_knee2_anim
    2487 000132b0     09e0          movi    lex_4_knee2_anim,a0
         000132c0 00000000! 
    2488 000132e0     0d5f          calla   change_anim1a
         000132f0 00000000! 
    2489 00013310     0960          rets
    2490                    
    2491 00013320           eaabtag2
    2492                    ;TODO - change this to an uppercut
    2493 00013320                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2494 000134c0     09e0          movi    lex_4_knee2_anim,a0
         000134d0 00000000! 
    2495 000134f0     0d5f          calla   change_anim1a
         00013500 00000000! 
    2496 00013520     0960          rets
    2497                    
    2498                    ************
    2499 00013530           eaabsuper_punch ;4
    2500 00013530     0960          rets
    2501                    
    2502 00013540           eaabpunchkick
    2503 00013540           eaabkick
    2504 00013540     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013550 00000000! 
    2505 00013570     09e0          movi    lex_3_knee_to_head_anim,a0
         00013580 00000000! 
    2506 000135a0     0d5f          calla   change_anim1a
         000135b0 00000000! 
    2507 000135d0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2508 00013770     0960          rets
    2509                    
    2510 00013780           eaabsuper_kick  ;16
    2511                    ;If stick is toward opponent, then do quick knees
    2512 00013780     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013790     0bc0  
    2513 000137a0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000137b0     04d0  
    2514 000137c0     0b81          andi    0ch,a1
         000137d0 fffffff3  
    2515 000137f0     4801          cmp     a0,a1
    2516 00013800     cbd3          jrnz    eaabkick
    2517                    
    2518                    ;Quick knees
    2519 00013810     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013820 00000000! 
    2520 00013840     09e0          movi    lex_knees_to_head_anim,a0
         00013850 00000000! 
    2521 00013870     0d5f          calla   change_anim1a
         00013880 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   55

    2522 000138a0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2523 00013a40     0960          rets
    2524                    
    2525                    
    2526                    *****************************************************************************
    2527 00013a50           mode_puppet2    ;17
    2528                    
    2529                    ;       ;check for the head-grab breaker
    2530                    ;       move    *a13(BUT_VAL_DOWN),a0
    2531                    ;       btst    PLAYER_KICK_BIT,a0
    2532                    ;       jrz     andwout
    2533                    ;
    2534                    ;       ;check the time - must do it within 20 ticks
    2535                    ;       move    *a13(HEAD_GRAB_TIME),a14
    2536                    ;       move    @PCNT,a0
    2537                    ;       sub     a14,a0
    2538                    ;       cmpi    KICK_OUT,a0
    2539                    ;       jrgt    andwout
    2540                    ;
    2541                    ;       move    *a13(PLYR_TYPE),a14
    2542                    ;       cmpi    PTYPE_DRONE,a14
    2543                    ;       jrz     andwout
    2544                    ;     
    2545                    ;       ;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
    2546                    ;       move    *a13(ATTACH_PROC),a0,L
    2547                    ;       clr     a14
    2548                    ;       move    a14,*a13(ATTACH_PROC),L
    2549                    ;       move    a14,*a0(ATTACH_PROC),L
    2550                    ;       movi    15,a14
    2551                    ;       move    a14,*a0(IMMOBILIZE_TIME)
    2552                    ;       SETMODE NORMAL
    2553                    ;       jruc    std_knee
    2554                    ;
    2555                    ;andwout
    2556 00013a50     0960          rets
    2557                    
    2558                    *****************************************************************************
    2559                    
    2560 00013a60           mode_headheld   ;19
    2561 00013a60     b5a0          move    *a13(ANIMODE),a0
         00013a70     0660  
    2562 00013a80     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2563 00013a90     cb80          janz    mode_choking
         00013aa0 00000000! 
    2564                    
    2565                    
    2566                    ;Bozo reversal
    2567 00013ac0     0d5f          calla   bozo_check
         00013ad0 00000000! 
    2568 00013af0     c92f          jrnc    eilhfail
    2569                    
    2570 00013b00                   PUSH    a8
    2571 00013b10     4da8          move    a13,a8
    2572 00013b20     0d5f          CALLA   DO_REVERSAL
         00013b30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   56

    2573 00013b50     0d5f          CALLA   DO_REVERSAL_MESS
         00013b60 00000000! 
    2574 00013b80                   PULL    a8
    2575                    
    2576 00013b90                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    2577                    
    2578 00013d30     09e0          movi    lex_vsuplex_anim,a0
         00013d40 00000000! 
    2579 00013d60     05ae          move    @PCNT,a14
         00013d70 00000000! 
    2580 00013d90     1fee          btst    0,a14
    2581 00013da0     0300          jrz     eilhtag
    2582                    ;       movi    lex_4_graboh_anim,a0
    2583 00013db0     0d5f  eilhtag calla   change_anim1a
         00013dc0 00000000! 
    2584                    
    2585 00013de0     0960          rets
    2586 00013df0           eilhfail
    2587                    ;He may have let me go by hitting his block butn!
    2588 00013df0     b7a0          move    *a13(ATTACH_PROC),a0,L
         00013e00     03e0  
    2589 00013e10     cb0c          jrnz    eilhno_luck
    2590                    
    2591                    ;Make sure this guy is on ground
    2592 00013e20     b5a0          move    *a13(OBJ_YPOSINT),a0
         00013e30     0130  
    2593 00013e40     b5a1          move    *a13(GROUND_Y),a1
         00013e50     0570  
    2594 00013e60     4820          cmp     a1,a0                   ;a0-a1
    2595 00013e70     c706          jrgt    eilhno_luck
    2596                    
    2597                    ;hit_gnd
    2598                    
    2599 00013e80     09e0          movi    lex_3_head_held_stand_anim,a0
         00013e90 00000000! 
    2600 00013eb0     0d5f          calla   change_anim1a
         00013ec0 00000000! 
    2601                    
    2602 00013ee0           eilhno_luck
    2603 00013ee0     0960          rets
    2604                    
    2605                    *****************************************************************************
    2606 00013ef0           mode_chokehold  ;24
    2607 00013ef0     0960          rets
    2608                    
    2609                    *****************************************************************************
    2610                    
    2611                    ;dmscVEL        equ     30000h          ;38000h ;30000h
    2612                    ;dmscDVEL       equ     21f0eh          ;27978h ;21f0eh
    2613                    ;dmscVEL        equ     38000h          ;38000h ;30000h
    2614                    ;dmscDVEL       equ     30000h          ;27978h ;21f0eh
    2615          0003a000  dmscVEL equ     3a000h          ;38000h ;30000h
    2616          00031000  dmscDVEL        equ     31000h          ;27978h ;21f0eh
    2617                    
    2618                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   57

    2619 00013f00            SUBR lex_velocity_table
    2620                    
    2621                    ;               X,      Z
    2622                    
    2623 00013f00 00000000          .long   0,      -dmscVEL        ;0 UP
    2624                    
    2625 00013f40 00031000          .long   dmscDVEL,       -dmscDVEL       ;1 UP-RIGHT
    2626                    
    2627 00013f80 0003a000          .long   dmscVEL,        0       ;2 RIGHT
    2628                    
    2629 00013fc0 00031000          .long   dmscDVEL,       dmscDVEL        ;3 DOWN-RIGHT
    2630                    
    2631 00014000 00000000          .long   0,      dmscVEL ;4 DOWN
    2632                    
    2633 00014040 fffcf000          .long   -dmscDVEL,      dmscDVEL        ;5 DOWN-LEFT
    2634                    
    2635 00014080 fffc6000          .long   -dmscVEL,       0       ;6 LEFT
    2636                    
    2637 000140c0 fffcf000          .long   -dmscDVEL,      -dmscDVEL       ;7 UP-LEFT
    2638                    
    2639                    
    2640                    *****************************************************************************
    2641                    
    2642 00014100            SUBR lex_rotate_anims_table
    2643                    ; old = up right
    2644 00014100 00000000!         .long   lex_stand2_anim         ;new = up right
    2645 00014120 00000000!         .long   lex_2_to_4_turn_anim    ;    = down right
    2646 00014140 00000000!         .long   lex_2_to_6_turn_anim    ;    = down left
    2647 00014160 00000000!         .long   lex_2_to_8_turn_anim    ;    = up left
    2648                    
    2649                    ; old = down right
    2650 00014180 00000000!         .long   lex_4_to_2_turn_anim    ;new = up right
    2651 000141a0 00000000!         .long   lex_stand4_anim         ;    = down right
    2652 000141c0 00000000!         .long   lex_4_to_6_turn_anim    ;    = down left
    2653 000141e0 00000000!         .long   lex_4_to_8_turn_anim    ;    = up left
    2654                    
    2655                    ; old = down left
    2656 00014200 00000000!         .long   lex_6_to_2_turn_anim    ;new = up right
    2657 00014220 00000000!         .long   lex_6_to_4_turn_anim    ;    = down right
    2658 00014240 00000000!         .long   lex_stand6_anim         ;    = down left
    2659 00014260 00000000!         .long   lex_6_to_8_turn_anim    ;    = up left
    2660                    
    2661                    ; old = up left
    2662 00014280 00000000!         .long   lex_8_to_2_turn_anim    ;new = up right
    2663 000142a0 00000000!         .long   lex_8_to_4_turn_anim    ;    = down right
    2664 000142c0 00000000!         .long   lex_8_to_6_turn_anim    ;    = down left
    2665 000142e0 00000000!         .long   lex_stand8_anim         ;    = up left
    2666                    
    2667                    
    2668 00014300            SUBR lex_leg_anims_table
    2669                    ;  MOVE
    2670                    ;(dnsq1 - UP)                           FACING
    2671 00014300 00000000!         .long   lex_walk1_f2_anim       ;1 (UP)
    2672 00014320 00000000!         .long   lex_walk1_f2_anim       ;2 (UP_RIGHT)
    2673 00014340 00000000!         .long   lex_walk1_f4_anim       ;3 (RIGHT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   58

    2674 00014360 00000000!         .long   lex_walk1_f4_anim       ;4 (DOWN_RIGHT)
    2675 00014380 00000000!         .long   lex_walk1_f4_anim       ;5 (DOWN)
    2676 000143a0 00000000!         .long   lex_walk1_f4_anim       ;6 (DOWN_LEFT)
    2677 000143c0 00000000!         .long   lex_walk1_f2_anim       ;7 (LEFT)
    2678 000143e0 00000000!         .long   lex_walk1_f2_anim       ;8 (UP-LEFT)
    2679                    
    2680                    ;(dnsq2 - UP-RIGHT)
    2681 00014400 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2682 00014420 00000000!         .long   lex_walk2_f2_anim       ;2 (UP_RIGHT)
    2683 00014440 00000000!         .long   lex_walk2_f2_anim       ;3 (RIGHT)
    2684 00014460 00000000!         .long   lex_walk2_f4_anim       ;4 (DOWN_RIGHT)
    2685 00014480 00000000!         .long   lex_walk8_f4_anim       ;5 (DOWN)
    2686 000144a0 00000000!         .long   lex_walk8_f4_anim       ;6 (DOWN_LEFT)
    2687 000144c0 00000000!         .long   lex_walk4_f2_anim       ;7 (LEFT)
    2688 000144e0 00000000!         .long   lex_walk4_f2_anim       ;8 (UP-LEFT)
    2689                    
    2690                    ;(dnsq3 - RIGHT)
    2691 00014500 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2692 00014520 00000000!         .long   lex_walk2_f2_anim       ;2 (UP_RIGHT)
    2693 00014540 00000000!         .long   lex_walk2_f2_anim       ;3 (RIGHT)
    2694 00014560 00000000!         .long   lex_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2695 00014580 00000000!         .long   lex_walk4_f4_anim       ;5 (DOWN)
    2696 000145a0 00000000!         .long   lex_walk8_f4_anim       ;6 (DOWN_LEFT)
    2697 000145c0 00000000!         .long   lex_walk6_f2_anim       ;7 (LEFT)
    2698 000145e0 00000000!         .long   lex_walk6_f2_anim       ;8 (UP-LEFT)
    2699                    
    2700                    
    2701                    ;(dnsq4 - DOWN-RIGHT)
    2702 00014600 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2703 00014620 00000000!         .long   lex_walk8_f2_anim       ;2 (UP_RIGHT)
    2704 00014640 00000000!         .long   lex_walk4_f4_anim       ;3 (RIGHT)
    2705 00014660 00000000!         .long   lex_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2706 00014680 00000000!         .long   lex_walk2_f4_anim       ;5 (DOWN)
    2707 000146a0 00000000!         .long   lex_walk6_f4_anim       ;6 (DOWN_LEFT)
    2708 000146c0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2709 000146e0 00000000!         .long   lex_walk6_f2_anim       ;8 (UP-LEFT)
    2710                    
    2711                    ;(dnsq5 - DOWN)
    2712 00014700 00000000!         .long   lex_walk5_f2_anim       ;1 (UP)
    2713 00014720 00000000!         .long   lex_walk5_f2_anim       ;2 (UP_RIGHT)
    2714 00014740 00000000!         .long   lex_walk5_f4_anim       ;3 (RIGHT)
    2715 00014760 00000000!         .long   lex_walk5_f4_anim       ;4 (DOWN_RIGHT)
    2716 00014780 00000000!         .long   lex_walk5_f4_anim       ;5 (DOWN)
    2717 000147a0 00000000!         .long   lex_walk5_f4_anim       ;6 (DOWN_LEFT)
    2718 000147c0 00000000!         .long   lex_walk5_f2_anim       ;7 (LEFT)
    2719 000147e0 00000000!         .long   lex_walk5_f2_anim       ;8 (UP-LEFT)
    2720                    
    2721                    ;(dnsq6 - DOWN-LEFT)
    2722 00014800 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2723 00014820 00000000!         .long   lex_walk6_f2_anim       ;2 (UP_RIGHT)
    2724 00014840 00000000!         .long   lex_walk2_f2_anim       ;3 (RIGHT)
    2725 00014860 00000000!         .long   lex_walk6_f4_anim       ;4 (DOWN_RIGHT)
    2726 00014880 00000000!         .long   lex_walk2_f4_anim       ;5 (DOWN)
    2727 000148a0 00000000!         .long   lex_walk4_f4_anim       ;6 (DOWN_LEFT)
    2728 000148c0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:39 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   59

    2729 000148e0 00000000!         .long   lex_walk8_f2_anim       ;8 (UP-LEFT)
    2730                    
    2731                    ;(dnsq7 - LEFT)
    2732 00014900 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2733 00014920 00000000!         .long   lex_walk6_f2_anim       ;2 (UP_RIGHT)
    2734 00014940 00000000!         .long   lex_walk6_f2_anim       ;3 (RIGHT)
    2735 00014960 00000000!         .long   lex_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2736 00014980 00000000!         .long   lex_walk4_f4_anim       ;5 (DOWN)
    2737 000149a0 00000000!         .long   lex_walk4_f4_anim       ;6 (DOWN_LEFT)
    2738 000149c0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2739 000149e0 00000000!         .long   lex_walk2_f2_anim       ;8 (UP-LEFT)
    2740                    
    2741                    ;(dnsq8 - UP-LEFT)
    2742 00014a00 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2743 00014a20 00000000!         .long   lex_walk4_f2_anim       ;2 (UP_RIGHT)
    2744 00014a40 00000000!         .long   lex_walk6_f2_anim       ;3 (RIGHT)
    2745 00014a60 00000000!         .long   lex_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2746 00014a80 00000000!         .long   lex_walk6_f4_anim       ;5 (DOWN)
    2747 00014aa0 00000000!         .long   lex_walk2_f4_anim       ;6 (DOWN_LEFT)
    2748 00014ac0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2749 00014ae0 00000000!         .long   lex_walk2_f2_anim       ;8 (UP-LEFT)
    2750                    
    2751                    
    2752 00014b00            SUBR lex_torso_anims_table
    2753                    ; old = up right
    2754 00014b00 00000000!         .long   lex_torso2_anim         ;new = up right
    2755 00014b20 00000000!         .long   lex_2_to_4_turn2_anim   ;    = down right
    2756 00014b40 00000000!         .long   lex_2_to_6_turn2_anim   ;    = down left
    2757 00014b60 00000000!         .long   lex_2_to_8_turn2_anim   ;    = up left
    2758                    
    2759                    ; old = down right
    2760 00014b80 00000000!         .long   lex_4_to_2_turn2_anim   ;new = up right
    2761 00014ba0 00000000!         .long   lex_torso4_anim         ;    = down right
    2762 00014bc0 00000000!         .long   lex_4_to_6_turn2_anim   ;    = down left
    2763 00014be0 00000000!         .long   lex_4_to_8_turn2_anim   ;    = up left
    2764                    
    2765                    ; old = down left
    2766 00014c00 00000000!         .long   lex_6_to_2_turn2_anim   ;new = up right
    2767 00014c20 00000000!         .long   lex_6_to_4_turn2_anim   ;    = down right
    2768 00014c40 00000000!         .long   lex_torso6_anim         ;    = down left
    2769 00014c60 00000000!         .long   lex_6_to_8_turn2_anim   ;    = up left
    2770                    
    2771                    ; old = up left
    2772 00014c80 00000000!         .long   lex_8_to_2_turn2_anim   ;new = up right
    2773 00014ca0 00000000!         .long   lex_8_to_4_turn2_anim   ;    = down right
    2774 00014cc0 00000000!         .long   lex_8_to_6_turn2_anim   ;    = down left
    2775 00014ce0 00000000!         .long   lex_torso8_anim         ;    = up left
    2776                    
    2777                    
    2778                    ******************************************************************************
    2779                    
    2780                            .end

 No Errors,  No Warnings
