TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "lex.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "jjxm.h"
      11                            .include        "mproc.equ"             ;Mproc equates
      12                            .include        "display.equ"           ;Display proc equates
      13                            .include        "gsp.equ"               ;Gsp asm equates
      14                            .include        "sys.equ"
      15                            .include        "game.equ"
      16                            .include        "plyr.equ"
      17                            .include        "anim.equ"
      18                            .include        "audit.equ"
      19                            .include        "sound.h"
      20                            .include        "ring.equ"
      21                            .include        "lifebar.h"
      22                            .include        "damage.equ"
      23                    
      24                    
      25                    
      26                            .ref    change_anim1a,change_anim2a,master_keep_attached
      27                            .ref    do_taunt,CLIMB_ROPES,bounce_off_ropes,mode_inair2
      28                            .ref    check_secret_moves,mode_choking,DO_REVERSAL_MESS
      29                            .ref    ck_ignore,climb_turnbuckle,execute_walk,PCNT
      30                            .ref    get_opp_plyrmode,ADD_IF_SILENT,DO_REVERSAL,mode_puppet
      31                            .ref    process_ptrs,keep_attached,change_anim1,JUMP_ROPES
      32                            .ref    FIND_AND_KILL_ENDLESS,BONUS_MESS
      33                            .ref    CHECK_COMBO_GO,ck_teammate_pin,raisearm_check
      34                            .ref    BLOCK_WOOSH,drone_change_back,mode_dead,get_opp_process
      35                            .ref    lex_combo_punch_anim,can_pin,round_award
      36                            .ref    lex_combo_kick_anim,set_raisearm_bit
      37                            .ref    blocking_off,std_taunt,std_walk_fast
      38                            .ref    hyper_speed_on
      39                            .ref    in_finish_move
      40                            .ref    p1rounds,p2rounds
      41                            .if NUM_LEX_FINISHES
      42                            .ref    lex_finish1_move
      43                            .if NUM_LEX_FINISHES > 1
      44                            .ref    lex_finish2_move
      45                            .endif
      46                            .endif
      47                    
      48                    
      49                            .ref    start_run_anim
      50                    
      51                            .ref    lex_4_block_anim
      52                    
      53                            .ref    lex_stand2_anim,lex_stand8_anim
      54                            .ref    lex_stand4_anim,lex_stand6_anim
      55                            .ref    lex_torso2_anim,lex_torso8_anim
      56                            .ref    lex_torso4_anim,lex_torso6_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                    
      58                            .ref    lex_2_to_4_turn_anim,lex_8_to_6_turn_anim       ;stand
      59                            .ref    lex_4_to_2_turn_anim,lex_6_to_8_turn_anim
      60                            .ref    lex_4_to_6_turn_anim,lex_6_to_4_turn_anim
      61                            .ref    lex_2_to_8_turn_anim,lex_8_to_2_turn_anim
      62                            .ref    lex_4_to_8_turn_anim,lex_6_to_2_turn_anim
      63                            .ref    lex_2_to_6_turn_anim,lex_8_to_4_turn_anim
      64                    
      65                            .ref    lex_2_to_4_turn2_anim,lex_8_to_6_turn2_anim     ;torso
      66                            .ref    lex_4_to_2_turn2_anim,lex_6_to_8_turn2_anim
      67                            .ref    lex_4_to_6_turn2_anim,lex_6_to_4_turn2_anim
      68                            .ref    lex_2_to_8_turn2_anim,lex_8_to_2_turn2_anim
      69                            .ref    lex_4_to_8_turn2_anim,lex_6_to_2_turn2_anim
      70                            .ref    lex_2_to_6_turn2_anim,lex_8_to_4_turn2_anim
      71                    
      72                            .ref    lex_walk1_f2_anim,lex_walk2_f2_anim,lex_walk4_f2_anim
      73                            .ref    lex_walk5_f2_anim,lex_walk6_f2_anim,lex_walk8_f2_anim
      74                    
      75                            .ref    lex_walk1_f4_anim,lex_walk2_f4_anim,lex_walk4_f4_anim
      76                            .ref    lex_walk5_f4_anim,lex_walk6_f4_anim,lex_walk8_f4_anim
      77                    
      78                            .ref    lex_run2_anim,lex_hiptoss2_anim
      79                    
      80                            .ref    lex_2_punch_anim,lex_4_punch_anim
      81                            .ref    lex_2_kick_anim,lex_4_kick_anim
      82                    
      83                            .ref    lex_2_butt_anim,lex_4_butt_anim
      84                            .ref    lex_4_knee_anim
      85                            .ref    lex_2_stomp_anim,lex_4_stomp_anim
      86                    
      87                            .ref    lex_2_raise_arm_anim,lex_4_raise_arm_anim
      88                    
      89                            .ref    lex_3_clobber_anim
      90                    
      91                            .ref    lex_4_push_anim
      92                    
      93                            .ref    lex_4_grabfling_anim
      94                    
      95                            .ref    lex_fall_back_anim
      96                    
      97                            .ref    lex_flying_kick_anim
      98                    
      99                            .ref    lex_2_ground_punch_anim,lex_4_ground_punch_anim
     100                            .ref    lex_flying_ground_punch_anim,lex_climb_down_anim
     101                            .ref    lex_buckle_leap_anim,lex_climb_up_anim
     102                            .ref    lex_backbreaker_anim,lex_ohslam_anim
     103                    
     104                            .ref    lex_3_head_held_stand_anim,lex_2_hair_pickup_anim
     105                            .ref    lex_3_knee_to_head_anim
     106                            .ref    lex_4_hair_pickup_anim,lex_2_grabfling_anim
     107                            .ref    lex_3_head_hold2_anim
     108                            .ref    lex_3_head_hold_anim
     109                    
     110                            .ref    lex_vsuplex_anim,lex_super_kick_anim
     111                            .ref    lex_4_knee_fall_anim,lex_4_graboh_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                            .ref    lex_hiptoss_anim,lex_4_bigboot_anim
     113                            .ref    lex_slamdown_anim
     114                    
     115                            .ref    lex_2_pin_anim,lex_4_pin_anim
     116                            .ref    lex_2_clobber_anim,lex_4_clobber_anim
     117                    
     118                            .ref    lex_sliding_elbow_anim
     119                            .ref    lex_knees_to_head_anim
     120                            .ref    lex_grab2elbow_anim
     121                    
     122                    
     123                    
     124                    
     125 00000000           lex_secret_moves
     126 00000000 00000240'         .long   nhcpcharge_clobber
     127 00000020 00000a30'         .long   nhcpneck_grab
     128 00000040 00000fa0'         .long   nhcpgrab_fling
     129 00000060 00001680'         .long   nhcphip_toss
     130 00000080 00000e20'         .long   nhcpgrab_fling2
     131 000000a0 00000e70'         .long   nhcphip_toss2
     132 000000c0 00001c40'         .long   nhcpsliding_elbow
     133 000000e0 000006d0'         .long   nhcphammer
     134 00000100 00000000          .long   0
     135                    
     136                    
     137 00000120            SUBR   lex_smove_table
     138 00000120 00002150'         .long   lex_hdhold_pile
     139 00000140 00002cb0'         .long   lex_hdhold_elbow_face
     140 00000160 00004450'         .long   lex_hdhold_graboh
     141 00000180 00003830'         .long   lex_grab_toss_air
     142 000001a0 00004f10'         .long   lex_hdhold_combo1
     143 000001c0 00005800'         .long   lex_hdhold_combo2
     144 000001e0 00000000!         .long   std_walk_fast
     145 00000200 00000000!         .long   std_taunt
     146                    
     147                            .if NUM_LEX_FINISHES
     148                            .long   lex_finish_move1
     149                            .endif
     150                            .if NUM_LEX_FINISHES > 1
     151                            .long   lex_finish_move2
     152                            .endif
     153 00000220 00000000          .long   0
     154                    
     155 00000240           nhcpcharge_clobber
     156 00000240     b5a0          move    *a13(BUT_VAL_UP),a0
         00000250     0bb0  
     157 00000260     1fe0          btst    PLAYER_PUNCH_BIT,a0
     158 00000270     ca0c          jrz     nhcpno_punch
     159                    
     160                    
     161 00000280     b5a0          move    *a13(PLYRNUM),a0
         00000290     0580  
     162                            .ref    get_punch_dtime
     163 000002a0     0d5f          calla   get_punch_dtime
         000002b0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     164 000002d0     0b40          cmpi    100,a0                  ;> min?
         000002e0     ff9b  
     165 000002f0     c404          jrlt    nhcpno_punch
     166                    
     167 00000300     0d3f          callr   nhcpscrt_clbr
         00000310     0004  
     168 00000320     0de0          setc
     169 00000330     0960          rets
     170                    
     171 00000340           nhcpno_punch
     172 00000340     0320          clrc
     173 00000350     0960          rets
     174                    
     175                    
     176 00000360           nhcpscrt_clbr
     177                    
     178 00000360     b5a0          move    *a13(PLYRMODE),a0
         00000370     05c0  
     179 00000380     0b40          cmpi    MODE_HEADHELD,a0
         00000390     ffec  
     180 000003a0     ca00          jrz     nhcpout
         000003b0     009e  
     181 000003c0     0b40          cmpi    MODE_HEADHOLD,a0
         000003d0     ffef  
     182 000003e0     ca00          jrz     nhcpout
         000003f0     009a  
     183                    
     184 00000400     b5a0          move    *a13(ANIMODE),a0
         00000410     0660  
     185 00000420     1fa0          btst    MODE_UNINT_BIT,a0
     186 00000430     cb00          jrnz    nhcpout
         00000440     0095  
     187                    
     188                    
     189 00000450                   WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
     190 000005f0                   FACE24  lex,clobber_anim
     191 00000690     0d5f          calla   change_anim1
         000006a0 00000000! 
     192                    
     193 000006c0     0960          rets
     194                    
     195 000006d0           nhcphammer
     196 000006d0     0100          .word   B_SKICK,                        J_ALL
     197 000006f0     0008          .word   J_TOWARD,               J_REAL_LR
     198 00000710     0008          .word   J_TOWARD,               J_REAL_LR
     199 00000730     8020          .word   8000h | 32              ;max
     200 00000740 00000760'         .long   scrt_hammer
     201                    
     202 00000760           scrt_hammer
     203 00000760     b5a0          move    *a13(ANIMODE),a0
         00000770     0660  
     204 00000780     1fa0          btst    MODE_UNINT_BIT,a0
     205 00000790     cb60          jrnz    nhcpout
     206                    
     207 000007a0     b5a0          move    *a13(PLYRMODE),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

         000007b0     05c0  
     208 000007c0     0b40          cmpi    MODE_ONTURNBKL,a0
         000007d0     fff9  
     209 000007e0     ca5b          jrz     nhcpout
     210 000007f0     0b40          cmpi    MODE_OPPOVERHEAD,a0
         00000800     fff5  
     211 00000810     ca58          jreq    nhcpout
     212                    
     213                            .ref    lex_hammer_anim
     214 00000820     09e0          movi    lex_hammer_anim,a0
         00000830 00000000! 
     215 00000850     0d5f          calla   change_anim1a
         00000860 00000000! 
     216                    
     217 00000880                   WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
     218                    
     219 00000a20     0960          rets
     220                    
     221 00000a30           nhcpneck_grab
     222 00000a30     0040          .word   B_SPUNCH,               J_ALL
     223 00000a50     0008          .word   J_TOWARD,               J_REAL_LR
     224 00000a70     0008          .word   J_TOWARD,               J_REAL_LR
     225 00000a90     801e          .word   8000h | 30              ;max
     226 00000aa0 00000ac0'         .long   nhcpscrt_neck
     227                    
     228 00000ac0           nhcpscrt_neck
     229 00000ac0     b5a0          move    *a13(ANIMODE),a0
         00000ad0     0660  
     230 00000ae0     1fa0          btst    MODE_UNINT_BIT,a0
     231 00000af0     cb2a          jrnz    nhcpout
     232                    
     233 00000b00     0d5f          calla   get_opp_plyrmode
         00000b10 00000000! 
     234 00000b30     0b40          cmpi    MODE_ONGROUND,a0
         00000b40     fffb  
     235 00000b50     ca24          jrz     nhcpout
     236 00000b60     0b40          cmpi    MODE_DEAD,a0
         00000b70     fff6  
     237 00000b80     ca21          jrz     nhcpout
     238 00000b90     0b40          cmpi    MODE_HEADHELD,a0
         00000ba0     ffec  
     239 00000bb0     ca1e          jrz     nhcpout
     240 00000bc0     0b40          cmpi    MODE_ATTACHED,a0
         00000bd0     fffc  
     241 00000be0     ca1b          jrz     nhcpout
     242                    
     243 00000bf0     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         00000c00     0cd0  
     244 00000c10     07a0          move    @PCNT,a0,L
         00000c20 00000000! 
     245 00000c40     45c0          sub     a14,a0
     246 00000c50     0b40          cmpi    2*60,a0
         00000c60     ff87  
     247 00000c70     c507          jrge    nhcpok2
     248                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

     249                            .ref    lex_3_fake_hold_anim
     250 00000c80     09e0          movi    lex_3_fake_hold_anim,a0
         00000c90 00000000! 
     251 00000cb0     0d5f          calla   change_anim1a
         00000cc0 00000000! 
     252 00000ce0     0960          rets
     253                    
     254 00000cf0           nhcpok2
     255 00000cf0     b5a1          move    *a13(CLOSEST_XDIST),a1
         00000d00     0370  
     256 00000d10     0b41          cmpi    90,a1
         00000d20     ffa5  
     257 00000d30     c707          jrgt    nhcpstd_grab
     258                    
     259 00000d40     09e0          movi    lex_3_head_hold2_anim,a0
         00000d50 00000000! 
     260 00000d70     0d5f          calla   change_anim1a
         00000d80 00000000! 
     261 00000da0     0960  nhcpout rets
     262                    
     263 00000db0           nhcpstd_grab
     264 00000db0     09e0          movi    lex_3_head_hold_anim,a0
         00000dc0 00000000! 
     265 00000de0     0d5f          calla   change_anim1a
         00000df0 00000000! 
     266 00000e10     0960          rets
     267                    
     268                    
     269 00000e20           nhcpgrab_fling2
     270 00000e20     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     271 00000e40     800a          .word   8000h | 10              ;max
     272 00000e50 00000ec0'         .long   nhcpscrt_grabfling2
     273                    
     274 00000e70           nhcphip_toss2
     275 00000e70     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     276 00000e90     800a          .word   8000h | 10              ;max
     277 00000ea0 00000ec0'         .long   nhcpscrt_grabfling2
     278                    
     279 00000ec0           nhcpscrt_grabfling2
     280 00000ec0     b5a0          move    *a13(ANIMODE),a0
         00000ed0     0660  
     281 00000ee0     1fa0          btst    MODE_UNINT_BIT,a0
     282 00000ef0     cbea          jrnz    nhcpout
     283                    
     284 00000f00     0d5f          calla   get_opp_plyrmode
         00000f10 00000000! 
     285 00000f30     0b40          cmpi    MODE_BOUNCING,a0
         00000f40     fffa  
     286 00000f50     ca1a          jrz     nhcpyes
     287 00000f60     0b40          cmpi    MODE_RUNNING,a0
         00000f70     fffe  
     288 00000f80     ca17          jrz     nhcpyes
     289 00000f90     0960          rets
     290                    
     291 00000fa0           nhcpgrab_fling
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     292                    
     293 00000fa0     0040          .word   B_SPUNCH,               J_ALL
     294 00000fc0     0004          .word   J_AWAY,         J_REAL_LR
     295 00000fe0     0004          .word   J_AWAY,         J_REAL_LR
     296 00001000     8020          .word   8000h | 32              ;max
     297 00001010 00001030'         .long   nhcpscrt_grabfling
     298                    
     299 00001030           nhcpscrt_grabfling
     300                    
     301                    
     302 00001030     b5a0          move    *a13(ANIMODE),a0
         00001040     0660  
     303 00001050     1fa0          btst    MODE_UNINT_BIT,a0
     304 00001060     cbd3          jrnz    nhcpout
     305                    
     306 00001070     0d5f          calla   get_opp_plyrmode
         00001080 00000000! 
     307 000010a0     0b40          cmpi    MODE_BOUNCING,a0
         000010b0     fffa  
     308 000010c0     ca03          jrz     nhcpyes
     309 000010d0     0b40          cmpi    MODE_RUNNING,a0
         000010e0     fffe  
     310 000010f0     cb21          jrnz    nhcpnope
     311 00001100           nhcpyes
     312 00001100     09e0          movi    lex_hiptoss_anim,a0
         00001110 00000000! 
     313 00001130     0d5f          calla   change_anim1a
         00001140 00000000! 
     314                    
     315 00001160                   WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
     316 00001300     0960          rets
     317                    
     318 00001310           nhcpnope
     319 00001310     0d5f          calla   get_opp_plyrmode
         00001320 00000000! 
     320 00001340     0b40          cmpi    MODE_HEADHELD,a0
         00001350     ffec  
     321 00001360     caa3          jrz     nhcpout
     322 00001370     0b40          cmpi    MODE_ONGROUND,a0
         00001380     fffb  
     323 00001390     caa0          jrz     nhcpout
     324 000013a0     0b40          cmpi    MODE_DEAD,a0
         000013b0     fff6  
     325 000013c0     ca9d          jrz     nhcpout
     326 000013d0     0b40          cmpi    MODE_ATTACHED,a0
         000013e0     fffc  
     327 000013f0     ca9a          jrz     nhcpout
     328                    
     329                    
     330 00001400                   FACE24  lex,grabfling_anim
     331 000014a0     0d5f          calla   change_anim1a
         000014b0 00000000! 
     332                    
     333 000014d0                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     334 00001670     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     335                    
     336 00001680           nhcphip_toss
     337                    
     338 00001680     0010          .word   B_PUNCH,                J_ALL
     339 000016a0     0004          .word   J_AWAY,         J_REAL_LR
     340 000016c0     0004          .word   J_AWAY,         J_REAL_LR
     341 000016e0     8020          .word   8000h | 32              ;max
     342 000016f0 00001710'         .long   nhcpscrt_hiptoss
     343                    
     344 00001710           nhcpscrt_hiptoss
     345 00001710     b5a0          move    *a13(ANIMODE),a0
         00001720     0660  
     346 00001730     1fa0          btst    MODE_UNINT_BIT,a0
     347 00001740     cb00          jrnz    nhcpout
         00001750     ff64  
     348                    
     349 00001760     0d5f          calla   get_opp_plyrmode
         00001770 00000000! 
     350 00001790     0b40          cmpi    MODE_ONGROUND,a0
         000017a0     fffb  
     351 000017b0     ca00          jrz     nhcpout
         000017c0     ff5d  
     352 000017d0     0b40          cmpi    MODE_DEAD,a0
         000017e0     fff6  
     353 000017f0     ca00          jrz     nhcpout
         00001800     ff59  
     354 00001810     0b40          cmpi    MODE_HEADHELD,a0
         00001820     ffec  
     355 00001830     ca00          jrz     nhcpout
         00001840     ff55  
     356 00001850     0b40          cmpi    MODE_INAIR,a0
         00001860     fffd  
     357 00001870     ca0d          jrz     nhcpdoit
     358 00001880     0b40          cmpi    MODE_INAIR2,a0
         00001890     ffea  
     359 000018a0     ca0a          jrz     nhcpdoit
     360 000018b0     0b40          cmpi    MODE_ATTACHED,a0
         000018c0     fffc  
     361 000018d0     ca00          jrz     nhcpout
         000018e0     ff4b  
     362                    
     363 000018f0     b5a0          move    *a13(CLOSEST_DIST),a0
         00001900     0360  
     364 00001910     0b40          cmpi    70h,a0
         00001920     ff8f  
     365 00001930     c700          jrgt    nhcpout
         00001940     ff45  
     366                    
     367 00001950           nhcpdoit
     368 00001950     09e0          movi    lex_hiptoss_anim,a0
         00001960 00000000! 
     369 00001980     0d5f          calla   change_anim1a
         00001990 00000000! 
     370                    
     371 000019b0     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

     372 000019c0     b20d          move    a0,*a13(ATTACH_PROC),L
         000019d0     03e0  
     373                    
     374 000019e0                   SETMODE NORMAL
     375                    
     376 00001a90                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     377                    
     378 00001c30     0960          rets
     379                    
     380 00001c40           nhcpsliding_elbow
     381 00001c40     0010          .word   B_PUNCH,                J_ALL
     382 00001c60     0008          .word   J_TOWARD,               J_REAL_LR
     383 00001c80     0008          .word   J_TOWARD,               J_REAL_LR
     384 00001ca0     801e          .word   8000h | 30              ;max
     385 00001cb0 00001cd0'         .long   nhcpscrt_elbow
     386                    
     387 00001cd0           nhcpscrt_elbow
     388 00001cd0     b5a0          move    *a13(ANIMODE),a0
         00001ce0     0660  
     389 00001cf0     1fa0          btst    MODE_UNINT_BIT,a0
     390 00001d00     cb00          jrnz    nhcpout
         00001d10     ff08  
     391                    
     392 00001d20     b5a0          move    *a13(PLYRMODE),a0
         00001d30     05c0  
     393 00001d40     0b40          cmpi    MODE_OPPOVERHEAD,a0
         00001d50     fff5  
     394 00001d60     ca00          jreq    nhcpout
         00001d70     ff02  
     395                    
     396 00001d80     0d5f          calla   get_opp_plyrmode
         00001d90 00000000! 
     397 00001db0     0b40          cmpi    MODE_ONGROUND,a0
         00001dc0     fffb  
     398 00001dd0     ca00          jrz     nhcpout
         00001de0     fefb  
     399 00001df0     0b40          cmpi    MODE_DEAD,a0
         00001e00     fff6  
     400 00001e10     ca00          jrz     nhcpout
         00001e20     fef7  
     401                    
     402                            ;we can do this from a headhold, so...
     403 00001e30     0d5f          calla   FIND_AND_KILL_ENDLESS
         00001e40 00000000! 
     404                    
     405 00001e60     09e0          movi    lex_sliding_elbow_anim,a0
         00001e70 00000000! 
     406 00001e90     0d5f          calla   change_anim1a
         00001ea0 00000000! 
     407                    
     408 00001ec0     5600          clr     a0
     409 00001ed0     b20d          move    a0,*a13(ATTACH_PROC),L
         00001ee0     03e0  
     410                    
     411 00001ef0                   SETMODE NORMAL
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     412                    
     413 00001fa0                   WRSND   W_LUGER,UPRCUT_T1,UPRCUT_T2
     414                    
     415 00002140     0960          rets
     416                    
     417                            .if NUM_LEX_FINISHES
     418                     SUBRP  lex_finish_move1
     419                    
     420                    wpzzTIMEOUT     .equ    TSEC
     421                    
     422                    wpzzend_wait
     423                            SLEEP           TSEC/4
     424                            move            @p1rounds,a0                    ; Get player 1 rounds
     425                            move            @p2rounds,a1                    ; Get player 2 rounds
     426                            or              a1,a0                           ; Put em together
     427                            cmpi            2,a0                            ; Anybody got 2?
     428                            jrlt            wpzzend_wait                    ; br = no
     429                    
     430                    wpzzreset
     431                            clr             a11
     432                            move            a11,@in_finish_move
     433                            SLEEPK          1
     434                            WAITSWITCH_DWN  J_UP,0,wpzzreset
     435                            movi            wpzzTIMEOUT,a11
     436                            move            a11,@in_finish_move
     437                            WAITSWITCH_DWN  J_DOWN,0,wpzzreset
     438                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,wpzzreset
     439                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,wpzzreset
     440                            WAITSWITCH_DWN  B_PUNCH,J_ALL,wpzzreset
     441                    
     442                            movi            lex_finish1_move,a0
     443                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     444                            DIE
     445                            .endif
     446                            
     447                    
     448                            .if NUM_LEX_FINISHES > 1
     449                     SUBRP  lex_finish_move2
     450                    
     451                    cradTIMEOUT     .equ    TSEC
     452                    
     453                    cradend_wait
     454                            SLEEP           TSEC/4
     455                            move            @p1rounds,a0                    ; Get player 1 rounds
     456                            move            @p2rounds,a1                    ; Get player 2 rounds
     457                            or              a1,a0                           ; Put em together
     458                            cmpi            2,a0                            ; Anybody got 2?
     459                            jrlt            cradend_wait                    ; br = no
     460                    
     461                    cradreset
     462                            clr             a11
     463                            move            a11,@in_finish_move
     464                            SLEEPK          1
     465                            WAITSWITCH_DWN  J_UP,0,cradreset
     466                            movi            cradTIMEOUT,a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     467                            move            a11,@in_finish_move
     468                            WAITSWITCH_DWN  J_UP,0,cradreset
     469                            WAITSWITCH_DWN  J_RIGHT,J_UP,cradreset
     470                            WAITSWITCH_DWN  J_RIGHT,J_UP,cradreset
     471                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,cradreset
     472                    
     473                            movi            lex_finish2_move,a0
     474                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     475                            DIE
     476                            .endif
     477                    
     478                    
     479 00002150            SUBRP  lex_hdhold_pile
     480                    
     481              003c  gddcTIMEOUT     .equ    60
     482                    
     483 00002150           gddclp0
     484 00002150                   SLEEPK  1
     485 00002190           gddclp
     486 00002190     b500          move    *a8(PLYRMODE),a0
         000021a0     05c0  
     487 000021b0     0b40          cmpi    MODE_HEADHOLD,a0
         000021c0     ffef  
     488 000021d0     ca03          jrz     gddccont
     489 000021e0     0b40          cmpi    MODE_HEADHELD,a0
         000021f0     ffec  
     490 00002200     cbf4          jrnz    gddclp0
     491                    
     492 00002210           gddccont
     493 00002210     576b          clr     a11
     494                    
     495 00002220                   WAITSWITCH_DWN  J_TOWARD,0,gddclp
     496                    
     497 00002380     09cb          movi    gddcTIMEOUT,a11
         00002390     003c  
     498                    
     499 000023a0                   WAITSWITCH_DWN  J_TOWARD,0,gddclp
     500 00002500                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,gddclp
     501                            
     502 00002660     b500          move    *a8(PLYRMODE),a0
         00002670     05c0  
     503 00002680     0b40          cmpi    MODE_HEADHOLD,a0
         00002690     ffef  
     504 000026a0     ca1c          jrz     gddcslam
     505 000026b0     0b40          cmpi    MODE_HEADHELD,a0
         000026c0     ffec  
     506 000026d0     cba7          jrnz    gddclp0
     507 000026e0     b50e          move    *a8(I_WILL_DIE),A14
         000026f0     0b30  
     508 00002700     cba4          jrnz    gddclp0
     509                    
     510 00002710     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002720     0ae0  
     511 00002730     cba1          jrnz    gddclp0                         ;ignore
     512                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     513 00002740     0d5f          calla   DO_REVERSAL
         00002750 00000000! 
     514 00002770     0d5f          calla   DO_REVERSAL_MESS
         00002780 00000000! 
     515                    
     516                            ;target WHOHITME -- don't hit anyone else
     517 000027a0                   SMRTTGT a8,WHOHITME
     518                    
     519                            ;immobilize WHOHITME
     520 00002840     b700          move    *a8(WHOHITME),a0,L
         00002850     04e0  
     521 00002860     c019          jruc    gddcis_reversal
     522                    
     523 00002870           gddcslam
     524 00002870     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002880     0ae0  
     525 00002890     cb8b          jrnz    gddclp0                         ;ignore
     526                    
     527 000028a0     09ca          movi    42,a10
         000028b0     002a  
     528 000028c0                   CREATE  MESSAGE_PID,BONUS_MESS
     529                    
     530                            ;target WHOIHIT -- don't hit anyone else
     531 00002940                   SMRTTGT a8,WHOIHIT
     532                    
     533                            ;immobilize WHOIHIT
     534 000029e0     b700          move    *a8(WHOIHIT),a0,L
         000029f0     0500  
     535                    
     536 00002a00           gddcis_reversal
     537 00002a00     19ee          movk    15,a14
     538 00002a10     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00002a20     0ae0  
     539                    
     540 00002a30     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00002a40 00000000! 
     541                    
     542 00002a60     09e0          movi    lex_vsuplex_anim,a0
         00002a70 00000000! 
     543 00002a90     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00002aa0     0930  
     544 00002ab0                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
     545                    
     546 00002c50                   SLEEPK  20
     547                    
     548 00002c90     c000          jruc    gddclp
         00002ca0     ff4e  
     549                    
     550 00002cb0            SUBRP  lex_hdhold_elbow_face
     551                    
     552              003c  fillTIMEOUT     .equ    60
     553                    
     554 00002cb0           filllp0
     555 00002cb0                   SLEEPK  1
     556 00002cf0           filllp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     557 00002cf0     b500          move    *a8(PLYRMODE),a0
         00002d00     05c0  
     558 00002d10     0b40          cmpi    MODE_HEADHOLD,a0
         00002d20     ffef  
     559 00002d30     ca03          jrz     fillcont
     560 00002d40     0b40          cmpi    MODE_HEADHELD,a0
         00002d50     ffec  
     561 00002d60     cbf4          jrnz    filllp0
     562                    
     563 00002d70           fillcont
     564 00002d70     576b          clr     a11
     565                    
     566 00002d80                   WAITSWITCH_DWN  J_DOWN,0,filllp
     567                    
     568 00002ee0     09cb          movi    fillTIMEOUT,a11
         00002ef0     003c  
     569                    
     570 00002f00                   WAITSWITCH_DWN  J_DOWN,0,filllp
     571 00003060                   WAITSWITCH_DWN  B_SKICK,J_ALL,filllp
     572                            
     573 000031c0     b500          move    *a8(PLYRMODE),a0
         000031d0     05c0  
     574 000031e0     0b40          cmpi    MODE_HEADHOLD,a0
         000031f0     ffef  
     575 00003200     ca1f          jrz     fillslam
     576 00003210     0b40          cmpi    MODE_HEADHELD,a0
         00003220     ffec  
     577 00003230     cba7          jrnz    filllp0
     578 00003240     b50e          move    *a8(I_WILL_DIE),A14
         00003250     0b30  
     579 00003260     cba4          jrnz    filllp0
     580                    
     581 00003270     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003280     0ae0  
     582 00003290     cba1          jrnz    filllp0                         ;ignore
     583                    
     584 000032a0     0d5f          calla   DO_REVERSAL
         000032b0 00000000! 
     585 000032d0     0d5f          calla   DO_REVERSAL_MESS
         000032e0 00000000! 
     586                    
     587                            ;target WHOHITME -- don't hit anyone else
     588 00003300                   SMRTTGT a8,WHOHITME
     589                    
     590                            ;immobilize WHOHITME
     591 000033a0     b700          move    *a8(WHOHITME),a0,L
         000033b0     04e0  
     592                    
     593                            .ref    lex_grab2elbow_rev_anim
     594                    
     595 000033c0     09e1          movi    lex_grab2elbow_rev_anim,a1
         000033d0 00000000! 
     596 000033f0     c01b          jruc    fillis_reversal
     597                    
     598 00003400           fillslam
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     599 00003400     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003410     0ae0  
     600 00003420     cb88          jrnz    filllp0                         ;ignore
     601                    
     602 00003430     18ca          movk    6,a10
     603 00003440                   CREATE  MESSAGE_PID,BONUS_MESS
     604                    
     605                            ;target WHOIHIT -- don't hit anyone else
     606 000034c0                   SMRTTGT a8,WHOIHIT
     607                    
     608                            ;immobilize WHOIHIT
     609 00003560     b700          move    *a8(WHOIHIT),a0,L
         00003570     0500  
     610                    
     611                    
     612 00003580     09e1          movi    lex_grab2elbow_anim,a1
         00003590 00000000! 
     613 000035b0           fillis_reversal
     614 000035b0     19ee          movk    15,a14
     615 000035c0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000035d0     0ae0  
     616                    
     617 000035e0     b228          move    a1,*a8(SPECIAL_MOVE_ADDR),L
         000035f0     0930  
     618 00003600     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003610 00000000! 
     619                    
     620 00003630                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
     621                    
     622 000037d0                   SLEEPK  20
     623 00003810     c000          jruc    filllp
         00003820     ff4c  
     624                    
     625 00003830           lex_grab_toss_air
     626                    
     627              0028  usnbTIMEOUT     .equ    40
     628                    
     629 00003830           usnblp0
     630 00003830                   SLEEPK  1
     631 00003870           usnblp
     632 00003870     576b          clr     a11
     633                    
     634 00003880                   WAITSWITCH_DWN  J_AWAY,0,usnblp
     635                    
     636 000039e0     09cb          movi    usnbTIMEOUT,a11
         000039f0     0028  
     637                    
     638 00003a00                   WAITSWITCH_DWN  J_AWAY,0,usnblp
     639 00003b60                   WAITSWITCH_DWN  B_PUNCH,J_ALL,usnblp
     640                    
     641 00003cc0     b500          move    *a8(ANIMODE),a0
         00003cd0     0660  
     642 00003ce0     1fa0          btst    MODE_UNINT_BIT,a0
     643 00003cf0     cbb7          jrnz    usnblp
     644                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

     645 00003d00     b500          move    *a8(PLYRMODE),a0
         00003d10     05c0  
     646 00003d20     0b40          cmpi    MODE_HEADHOLD,a0
         00003d30     ffef  
     647 00003d40     caae          jreq    usnblp0
     648                    
     649 00003d50                   SWAP    a8,a13
     650 00003d80     0d5f          calla   get_opp_plyrmode
         00003d90 00000000! 
     651 00003db0                   SWAP    a8,a13
     652 00003de0     0b40          cmpi    MODE_ONGROUND,a0
         00003df0     fffb  
     653 00003e00     caa6          jrz     usnblp
     654 00003e10     0b40          cmpi    MODE_DEAD,a0
         00003e20     fff6  
     655 00003e30     caa3          jrz     usnblp
     656 00003e40     0b40          cmpi    MODE_INAIR,a0
         00003e50     fffd  
     657 00003e60     ca39          jrz     usnbdoit2
     658 00003e70     0b40          cmpi    MODE_INAIR2,a0
         00003e80     ffea  
     659 00003e90     ca36          jrz     usnbdoit2
     660                    
     661 00003ea0     b500          move    *a8(CLOSEST_NUM),a0
         00003eb0     03a0  
     662 00003ec0                   X32     a0
     663 00003ed0     0b20          addi    process_ptrs,a0
         00003ee0 00000000! 
     664 00003f00     8600          move    *a0,a0,L
     665 00003f10     b400          move    *a0(ATTACK_TYPE),a0
         00003f20     05e0  
     666 00003f30     0b40          cmpi    AT_LEAPING,a0
         00003f40     ffc6  
     667 00003f50     ca2a          jrz     usnbdoit2
     668                    
     669 00003f60     b500          move    *a8(CLOSEST_DIST),a0
         00003f70     0360  
     670 00003f80     0b40          cmpi    6ch,a0
         00003f90     ff93  
     671 00003fa0     c78c          jrgt    usnblp
     672                    
     673 00003fb0     09e0          movi    lex_hiptoss_anim,a0
         00003fc0 00000000! 
     674 00003fe0     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00003ff0     0930  
     675                    
     676 00004000                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     677                    
     678 000041a0                   SLEEPK  20
     679 000041e0     c000          jruc    usnblp
         000041f0     ff67  
     680                    
     681 00004200           usnbdoit2
     682 00004200     09e0          movi    lex_hiptoss2_anim,a0
         00004210 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     683 00004230     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00004240     0930  
     684                    
     685 00004250                   WRSND   W_LUGER,GRABFLING_T1,PUNCH_T2
     686                    
     687 000043f0                   SLEEPK  20
     688                    
     689 00004430     c000          jruc    usnblp
         00004440     ff42  
     690                    
     691 00004450           lex_hdhold_graboh
     692                    
     693              003c  lbzqTIMEOUT     .equ    60
     694                    
     695 00004450           lbzqlp0
     696 00004450                   SLEEPK  1
     697 00004490           lbzqlp
     698 00004490     b500          move    *a8(PLYRMODE),a0
         000044a0     05c0  
     699 000044b0     0b40          cmpi    MODE_HEADHOLD,a0
         000044c0     ffef  
     700 000044d0     ca03          jrz     lbzqcont0
     701 000044e0     0b40          cmpi    MODE_HEADHELD,a0
         000044f0     ffec  
     702 00004500     cbf4          jrnz    lbzqlp0
     703 00004510           lbzqcont0
     704 00004510     576b          clr     a11
     705                    
     706 00004520                   WAITSWITCH_DWN  J_DOWN,0,lbzqlp
     707                    
     708 00004680     09cb          movi    lbzqTIMEOUT,a11
         00004690     003c  
     709                    
     710 000046a0                   WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,lbzqlp
     711 00004800                   WAITSWITCH_DWN  B_KICK,J_ALL,lbzqlp
     712                    
     713 00004960     b500          move    *a8(PLYRMODE),a0
         00004970     05c0  
     714 00004980     0b40          cmpi    MODE_HEADHOLD,a0
         00004990     ffef  
     715 000049a0     ca1c          jrz     lbzqdograb
     716 000049b0     0b40          cmpi    MODE_HEADHELD,a0
         000049c0     ffec  
     717 000049d0     cba7          jrnz    lbzqlp0
     718 000049e0     b50e          move    *a8(I_WILL_DIE),A14
         000049f0     0b30  
     719 00004a00     cba4          jrnz    lbzqlp0
     720                    
     721 00004a10     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004a20     0ae0  
     722 00004a30     cba1          jrnz    lbzqlp0                         ;ignore
     723                    
     724 00004a40     0d5f          CALLA   DO_REVERSAL
         00004a50 00000000! 
     725 00004a70     0d5f          CALLA   DO_REVERSAL_MESS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

         00004a80 00000000! 
     726                    
     727                            ;target WHOHITME -- don't hit anyone else
     728 00004aa0                   SMRTTGT a8,WHOHITME
     729                    
     730                            ;immobilize WHOHITME
     731 00004b40     b700          move    *a8(WHOHITME),a0,L
         00004b50     04e0  
     732 00004b60     c00f          jruc    lbzqis_reversal
     733                    
     734 00004b70           lbzqdograb
     735 00004b70     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004b80     0ae0  
     736 00004b90     cb8b          jrnz    lbzqlp0                         ;ignore
     737                    
     738                    
     739                            ;target WHOIHIT -- don't hit anyone else
     740 00004ba0                   SMRTTGT a8,WHOIHIT
     741                    
     742                            ;immobilize WHOIHIT
     743 00004c40     b700          move    *a8(WHOIHIT),a0,L
         00004c50     0500  
     744                    
     745 00004c60           lbzqis_reversal
     746 00004c60     19ee          movk    15,a14
     747 00004c70     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00004c80     0ae0  
     748                    
     749 00004c90     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004ca0 00000000! 
     750                    
     751 00004cc0     09ee          movi    lex_4_graboh_anim,a14
         00004cd0 00000000! 
     752 00004cf0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004d00     0930  
     753                    
     754 00004d10                   WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
     755                    
     756 00004eb0                   SLEEPK  20
     757                    
     758 00004ef0     c000          jruc    lbzqlp
         00004f00     ff58  
     759                    
     760 00004f10           lex_hdhold_combo1
     761                    
     762              003c  bfujTIMEOUT     .equ    60
     763                    
     764 00004f10           bfujlp0
     765 00004f10                   SLEEPK  1
     766 00004f50           bfujlp
     767 00004f50     b500          move    *a8(PLYRMODE),a0
         00004f60     05c0  
     768 00004f70     0b40          cmpi    MODE_HEADHOLD,a0
         00004f80     ffef  
     769 00004f90     cbf7          jrnz    bfujlp0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     770 00004fa0     0d5f          calla   CHECK_COMBO_GO
         00004fb0 00000000! 
     771 00004fd0     c4f3          jrlt    bfujlp0
     772                    
     773 00004fe0     576b          clr     a11
     774                    
     775 00004ff0                   WAITSWITCH_DWN  J_TOWARD,0,bfujlp
     776                    
     777 00005150     09cb          movi    bfujTIMEOUT,a11
         00005160     003c  
     778                    
     779 00005170                   WAITSWITCH_DWN  J_TOWARD,0,bfujlp
     780 000052d0                   WAITSWITCH_DWN  B_SKICK,J_ALL,bfujlp
     781                    
     782 00005430     b500          move    *a8(PLYRMODE),a0
         00005440     05c0  
     783 00005450     0b40          cmpi    MODE_HEADHOLD,a0
         00005460     ffef  
     784 00005470     ca03          jrz     bfujslam
     785 00005480     0b40          cmpi    MODE_HEADHELD,a0
         00005490     ffec  
     786 000054a0     cba6          jrnz    bfujlp0
     787                    
     788 000054b0           bfujslam
     789 000054b0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000054c0     0ae0  
     790 000054d0     cba3          jrnz    bfujlp0                         ;ignore
     791                    
     792                    
     793                            ;target WHOIHIT
     794 000054e0                   SMRTTGT a8,WHOIHIT
     795                    
     796 00005580     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005590 00000000! 
     797 000055b0     09ee          movi    lex_combo_punch_anim,a14
         000055c0 00000000! 
     798 000055e0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000055f0     0930  
     799                    
     800 00005600                   WRSND   W_LUGER,UPRCUT_T1,UPRCUT_T2
     801                    
     802 000057a0                   SLEEPK  20
     803                    
     804 000057e0     c000          jruc    bfujlp
         000057f0     ff75  
     805                    
     806 00005800           lex_hdhold_combo2
     807                    
     808              003c  duitTIMEOUT     .equ    60
     809                    
     810 00005800           duitlp0
     811 00005800                   SLEEPK  1
     812 00005840           duitlp
     813 00005840     b500          move    *a8(PLYRMODE),a0
         00005850     05c0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     814 00005860     0b40          cmpi    MODE_HEADHOLD,a0
         00005870     ffef  
     815 00005880     cbf7          jrnz    duitlp0
     816 00005890     0d5f          calla   CHECK_COMBO_GO
         000058a0 00000000! 
     817 000058c0     c4f3          jrlt    duitlp0
     818                    
     819 000058d0     576b          clr     a11
     820                    
     821 000058e0                   WAITSWITCH_DWN  J_TOWARD,0,duitlp
     822                    
     823 00005a40     09cb          movi    duitTIMEOUT,a11
         00005a50     003c  
     824                    
     825 00005a60                   WAITSWITCH_DWN  J_TOWARD,0,duitlp
     826 00005bc0                   WAITSWITCH_DWN  B_KICK,J_ALL,duitlp
     827                    
     828 00005d20     b500          move    *a8(PLYRMODE),a0
         00005d30     05c0  
     829 00005d40     0b40          cmpi    MODE_HEADHOLD,a0
         00005d50     ffef  
     830 00005d60     ca03          jrz     duitslam
     831 00005d70     0b40          cmpi    MODE_HEADHELD,a0
         00005d80     ffec  
     832 00005d90     cba6          jrnz    duitlp0
     833                    
     834 00005da0           duitslam
     835 00005da0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00005db0     0ae0  
     836 00005dc0     cba3          jrnz    duitlp0                         ;ignore
     837                    
     838                    
     839                            ;target WHOIHIT
     840 00005dd0                   SMRTTGT a8,WHOIHIT
     841                    
     842 00005e70     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005e80 00000000! 
     843 00005ea0     09ee          movi    lex_combo_kick_anim,a14
         00005eb0 00000000! 
     844 00005ed0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005ee0     0930  
     845                    
     846 00005ef0                   WRSND   W_LUGER,UPRCUT_T1,UPRCUT_T2
     847                    
     848 00006090                   SLEEPK  20
     849                    
     850 000060d0     c000          jruc    duitlp
         000060e0     ff75  
     851                    
     852                    
     853 000060f0            SUBR   lex_ani_init
     854                    
     855 000060f0     b5a0          move    *a13(FACING_DIR),a0
         00006100     04c0  
     856 00006110     1f80          btst    PLAYER_RIGHT_BIT,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

     857 00006120     cb18          jrnz    rjaop1
     858 00006130     09e0          movi    lex_stand4_anim,a0
         00006140 00000000! 
     859 00006160     0d5f          calla   change_anim1a
         00006170 00000000! 
     860                    
     861 00006190     09e0          movi    lex_torso4_anim,a0
         000061a0 00000000! 
     862 000061c0     0d5f          calla   change_anim2a
         000061d0 00000000! 
     863                    
     864 000061f0                   PUSH    a10
     865 00006200     4daa          move    a13,a10
     866 00006210                   CREATE  TAUNT_PID,do_taunt
     867 00006290                   PULL    a10
     868                    
     869 000062a0     0960          rets
     870                    
     871 000062b0           rjaop1
     872 000062b0     09e0          movi    lex_stand2_anim,a0
         000062c0 00000000! 
     873 000062e0     0d5f          calla   change_anim1a
         000062f0 00000000! 
     874                    
     875 00006310     09e0          movi    lex_torso2_anim,a0
         00006320 00000000! 
     876 00006340     0d5f          calla   change_anim2a
         00006350 00000000! 
     877                    
     878 00006370     0960          rets
     879                    
     880                    
     881                    
     882 00006380            SUBR   move_lex
     883                    
     884                    
     885                    
     886 00006380     09eb          movi    lex_secret_moves,a11
         00006390 00000000' 
     887 000063b0     0d5f          calla   check_secret_moves
         000063c0 00000000! 
     888                    
     889 000063e0     b5a0          move    *a13(PLYRMODE),a0
         000063f0     05c0  
     890 00006400     24a0          sll     5,a0                    ;x 32
     891 00006410     0b20          addi    qpblmode_table,a0
         00006420 00006470' 
     892 00006440     8600          move    *a0,a0,L
     893 00006450     0920          call    a0
     894 00006460     0960          rets
     895                    
     896 00006470           qpblmode_table
     897 00006470 000067b0'         .long   mode_normal             ;0
     898 00006490 0000de70'         .long   mode_running            ;1
     899 000064b0 0000fc10'         .long   mode_inair              ;2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     900 000064d0 0000fc20'         .long   mode_attached           ;3
     901 000064f0 0000fd90'         .long   mode_onground           ;4
     902 00006510 0000fda0'         .long   mode_bouncing           ;5
     903 00006530 00010040'         .long   mode_onturnbkl          ;6
     904 00006550 000109e0'         .long   mode_block              ;7
     905 00006570 00011460'         .long   mode_dizzy              ;8
     906 00006590 00000000!         .long   mode_dead               ;9
     907 000065b0 00011470'         .long   mode_oppoverhead        ;10
     908 000065d0 00012540'         .long   mode_climbturnbkl       ;11
     909 000065f0 00012550'         .long   mode_waitanim           ;12
     910 00006610 000125d0'         .long   mode_grapple            ;13
     911 00006630 000125e0'         .long   mode_master             ;14
     912 00006650 00012620'         .long   mode_slave              ;15
     913 00006670 00012630'         .long   mode_headhold           ;16
     914 00006690 00013a50'         .long   mode_puppet2            ;17
     915 000066b0 000067b0'         .long   mode_normal             ;18
     916 000066d0 00013a60'         .long   mode_headheld           ;19
     917 000066f0 00000000!         .long   mode_puppet             ;20
     918 00006710 00000000!         .long   mode_inair2             ;21
     919 00006730 000067b0'         .long   mode_normal             ;22
     920 00006750 000067b0'         .long   mode_normal             ;23
     921 00006770 00013ef0'         .long   mode_chokehold          ;24
     922 00006790 00000000!         .long   mode_choking            ;25
     923                    
     924                    
     925 000067b0           mode_normal
     926                    
     927 000067b0     b5a0          move    *a13(ANIMODE),a0
         000067c0     0660  
     928 000067d0     1fa0          btst    MODE_UNINT_BIT,a0
     929 000067e0     cb00          jrnz    tgcmno_interrupt
         000067f0     00b0  
     930                    
     931 00006800     b5a0          move    *a13(I_WILL_DIE),a0
         00006810     0b30  
     932 00006820     ca1f          jrz     tgcmnope
     933 00006830     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006840     0ae0  
     934 00006850     cb1c          jrnz    tgcmnope
     935 00006860     09e0          movi    lex_fall_back_anim,a0
         00006870 00000000! 
     936 00006890     0d5f          calla   change_anim1a
         000068a0 00000000! 
     937                    
     938 000068c0     09c0          movi    -10,a0
         000068d0     fff6  
     939 000068e0     b5a1          move    *a13(PLYRNUM),a1
         000068f0     0580  
     940 00006900     0d5f          calla   adjust_health
         00006910 00000000! 
     941                    
     942 00006930                   SETMODE DEAD
     943                    
     944 000069e0     5600          clr     a0
     945 000069f0     b00d          move    a0,*a13(I_WILL_DIE)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

         00006a00     0b30  
     946                    
     947 00006a10     0960          rets
     948                    
     949 00006a20           tgcmnope
     950                    
     951 00006a20     0d5f          calla   get_opp_plyrmode
         00006a30 00000000! 
     952 00006a50     0b40          cmpi    MODE_DEAD,a0
         00006a60     fff6  
     953 00006a70     cb49          jrne    tgcmopp_not_dead
     954                    
     955                            ;if closest is a zombie, skip pin section.
     956 00006a80     0d5f          calla   get_opp_process
         00006a90 00000000! 
     957 00006ab0     b40e          move    *a0(STATUS_FLAGS),a14
         00006ac0     0b50  
     958 00006ad0     1f8e          btst    B_ZOMBIE,a14
     959 00006ae0     cb42          jrnz    tgcmopp_not_dead
     960                            
     961                            ;all opponents are dead.  Check for pins/raisearms
     962                    
     963                            ;if we're attached to someone, don't interrupt it.
     964 00006af0     b7a1          move    *a13(ATTACH_PROC),a1,L
         00006b00     03e0  
     965 00006b10     ca04          jrz     tgcmno_attch
     966 00006b20     b622          move    *a1(ATTACH_PROC),a2,L
         00006b30     03e0  
     967 00006b40     484d          cmp     a2,a13
     968 00006b50     ca3b          jreq    tgcmno_pin_yet
     969 00006b60           tgcmno_attch
     970                    
     971                            ;if a teammate has pinned, raise yer arm.
     972 00006b60     0d5f          calla   ck_teammate_pin 
         00006b70 00000000! 
     973 00006b90     c823          jrc     tgcmraisearm
     974                    
     975                            ;nobody has pinned.  if we're outside or all our opponents are
     976                            ; outside, do a raisearm.
     977 00006ba0     0d5f          calla   raisearm_check
         00006bb0 00000000! 
     978 00006bd0     c81f          jrc     tgcmraisearm
     979                    
     980                            ;we're inside with a pinnable opponent.  any button pins.
     981 00006be0     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006bf0     0b90  
     982 00006c00     ca30          jrz     tgcmno_pin_yet
     983                    
     984                            ;we have a press -- make sure opponent is on the ground
     985 00006c10     0d5f          calla   can_pin
         00006c20 00000000! 
     986 00006c40     c92c          jrnc    tgcmopp_notgnd
     987                    
     988                            ;opponent is on the ground.  pin him.
     989 00006c50                   FACE24  lex,pin_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

     990 00006cf0     0d5f          calla   change_anim1a
         00006d00 00000000! 
     991                    
     992                            ;set the 'I did a pin' flag.
     993 00006d20     b5ae          move    *a13(STATUS_FLAGS),a14
         00006d30     0b50  
     994 00006d40     0bae          ori     M_DID_PIN,a14
         00006d50 00000002  
     995 00006d70     b1cd          move    a14,*a13(STATUS_FLAGS)
         00006d80     0b50  
     996                    
     997                            ;if we're a temp drone for auto-pin purposes, turn back into
     998                            ; a normal player here.
     999 00006d90     0d5f          calla   drone_change_back
         00006da0 00000000! 
    1000                    
    1001 00006dc0     0960          rets
    1002                    
    1003 00006dd0           tgcmraisearm
    1004 00006dd0                   FACE24  lex,raise_arm_anim
    1005 00006e70     0d5f          calla   change_anim1a
         00006e80 00000000! 
    1006 00006ea0     0d5f          calla   set_raisearm_bit
         00006eb0 00000000! 
    1007                    
    1008                            ;if we're a temp drone for auto-pin purposes, turn back into
    1009                            ; a normal player here.
    1010 00006ed0     0d5f          calla   drone_change_back
         00006ee0 00000000! 
    1011                    
    1012 00006f00     0960          rets
    1013                    
    1014 00006f10           tgcmtoo_far_to_pin
    1015 00006f10           tgcmopp_notgnd
    1016 00006f10           tgcmopp_not_dead
    1017 00006f10           tgcmno_pin_yet
    1018                    
    1019 00006f10     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006f20     0ae0  
    1020 00006f30     cb36          jrnz    tgcmimmobilized
    1021                    
    1022 00006f40     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006f50     0b90  
    1023 00006f60     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1024 00006f70     ca07          jrz     tgcmnblk                        ;1 for down transitions
    1025 00006f80     0d3f          callr   tgcmblock                       ;& 1 for current buttons
         00006f90     01ed  
    1026 00006fa0     c804          jrc     tgcmnblk
    1027 00006fb0     5600          clr     a0
    1028 00006fc0     b00d          move    a0,*a13(ATTACK_TYPE)
         00006fd0     05e0  
    1029 00006fe0     0960          rets
    1030 00006ff0           tgcmnblk
    1031 00006ff0     b5a0          move    *a13(BUT_VAL_CUR),a0
         00007000     0b90  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1032 00007010     0b80          andi    011111b,a0
         00007020 ffffffe0  
    1033 00007040     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         00007050     fff6  
    1034 00007060     ca00          jrz     tgcmpunchkick
         00007070     053f  
    1035                    
    1036 00007080     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00007090     0ba0  
    1037 000070a0     0b80          andi    011111b,a0
         000070b0 ffffffe0  
    1038 000070d0                   X32     a0
    1039 000070e0     0b20          addi    tgcmaction_table,a0
         000070f0 00007310' 
    1040 00007110     8600          move    *a0,a0,L
    1041 00007120     0920          call    a0
    1042                    
    1043 00007130     b5a0          move    *a13(ANIMODE),a0
         00007140     0660  
    1044 00007150     1fa0          btst    MODE_UNINT_BIT,a0
    1045 00007160     cb19          jrnz    tgcmno_interrupt
    1046                    
    1047                    
    1048 00007170     b5a0          move    *a13(STICK_VAL_CUR),a0
         00007180     0bc0  
    1049 00007190     b00d          move    a0,*a13(MOVE_DIR)
         000071a0     04b0  
    1050 000071b0     0d5f          calla   climb_turnbuckle
         000071c0 00000000! 
    1051 000071e0     c90e          jrnc    tgcmno_climb
    1052 000071f0     b5a5          move    *a13(WRESTLERNUM),A5
         00007200     0590  
    1053 00007210     09e2          MOVI    CLIMB_ROPES,A2
         00007220 00000000! 
    1054 00007240     09c0          MOVI    1000,A0
         00007250     03e8  
    1055 00007260     0d5f          CALLA   ADD_IF_SILENT
         00007270 00000000! 
    1056 00007290     0960          rets
    1057                    
    1058 000072a0           tgcmimmobilized
    1059 000072a0     57ce          clr     a14
    1060 000072b0     b1cd          move    a14,*a13(MOVE_DIR)
         000072c0     04b0  
    1061 000072d0           tgcmno_climb
    1062 000072d0     0d5f          calla   execute_walk
         000072e0 00000000! 
    1063                    
    1064 00007300           tgcmno_interrupt
    1065 00007300     0960          rets
    1066                    
    1067 00007310           tgcmaction_table
    1068 00007310 00007710'         .long   tgcmz,tgcmpunch,tgcmblock,tgcmblock                     ;0-3
    1069 00007390 00009050'         .long   tgcmsuper_punch,tgcmsuper_punch,tgcmblock,tgcmblock     ;4-7
    1070 00007410 0000abe0'         .long   tgcmkick,tgcmpunchkick,tgcmblock,tgcmblock              ;8-11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

    1071 00007490 00009050'         .long   tgcmsuper_punch,tgcmpunchkick,tgcmblock,tgcmblock       ;12-15
    1072 00007510 0000c4e0'         .long   tgcmsuper_kick,tgcmsuper_kick,tgcmblock,tgcmblock       ;16-19
    1073 00007590 0000dc60'         .long   tgcmgraboh,tgcmgraboh,tgcmblock,tgcmblock               ;20-23
    1074 00007610 0000c4e0'         .long   tgcmsuper_kick,tgcmpunchkick,tgcmblock,tgcmblock        ;24-27
    1075 00007690 0000dc60'         .long   tgcmgraboh,tgcmgraboh,tgcmblock,tgcmblock               ;28-31
    1076                    
    1077 00007710           tgcmz
    1078 00007710     0960          rets
    1079                    
    1080                    
    1081 00007720           tgcmpunch               ;1
    1082                    
    1083 00007720                   JJXM_INIT
    1084 00007790                   JJXM    NORMAL,          40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;0
    1085 00007860                   JJXM    RUNNING,         40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;1
    1086 00007930                   JJXM    INAIR,           40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;2
    1087 00007a00                   JJXM    ATTACHED,        40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;3
    1088 00007ad0                   JJXM    ONGROUND,       160,140,tgcmpunch_lbowdrop,tgcmpunch_punch      ;4
    1089 00007ba0                   JJXM    BOUNCING,        40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;1
    1090 00007c70                   JJXM    ONTURNBKL,       40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;6
    1091 00007d40                   JJXM    BLOCK,           40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;7
    1092 00007e10                   JJXM    DIZZY,           40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;8
    1093 00007ee0                   JJXM    DEAD,           160,140,tgcmpunch_lbowdrop,tgcmpunch_punch      ;9
    1094 00007f90                   JJXM    OPPOVERHEAD,     40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;10
    1095 00008040                   JJXM    CLIMBTURNBKL,           tgcmpunch_punch                 ;11
    1096 00008080                   JJXM    WAITANIM,        40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;12
    1097 00008130                   JJXM    GRAPPLE,         40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;13
    1098 000081d0                   JJXM    MASTER,          40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;14
    1099 00008270                   JJXM    SLAVE,           40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;15
    1100 00008310                   JJXM    HEADHOLD,        40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;16
    1101 000083b0                   JJXM    HEADHELD,        40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;19
    1102 00008450                   JJXM    CHOKEHOLD,       40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;16
    1103 000084f0                   JJXM    PUPPET,          40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;20
    1104 00008590                   JJXM    PUPPET2,         40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;20
    1105 00008630                   JJXM    INAIR2,          40, 45,tgcmpunch_hdbutt,tgcmpunch_punch        ;21
    1106 000086d0                   JJXM_END
    1107                    
    1108 000086f0           tgcmpunch_punch
    1109 000086f0           std_punch
    1110 000086f0                   FACE24  lex,punch_anim
    1111 00008790     0d5f          calla   change_anim1a
         000087a0 00000000! 
    1112 000087c0                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    1113 00008960     0960          rets
    1114                    
    1115 00008970           tgcmpunch_hdbutt
    1116 00008970                   FACE24  lex,butt_anim
    1117 00008a10     0d5f          calla   change_anim1a
         00008a20 00000000! 
    1118 00008a40                   WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
    1119 00008be0     0960          rets
    1120                    
    1121 00008bf0           tgcmpunch_lbowdrop
    1122 00008bf0                   FACE24  lex,ground_punch_anim
    1123 00008c90     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

         00008ca0 00000000! 
    1124 00008cc0                   WRSND   W_LUGER,LBOWDROP_T1,LBOWDROP_T2
    1125 00008e60     0960          rets
    1126                    
    1127                    
    1128 00008e70           tgcmblock               ;2
    1129 00008e70           std_block
    1130 00008e70     05a0          move    @blocking_off,a0
         00008e80 00000000! 
    1131 00008ea0     cb18          jrnz    tgcmno_blocking
    1132                    
    1133 00008eb0                   RND_AWARD       a13,BLOCKS_AWD
    1134                    
    1135 00008f50     09e0          movi    lex_4_block_anim,a0
         00008f60 00000000! 
    1136 00008f80     0d5f          calla   change_anim1
         00008f90 00000000! 
    1137                    
    1138 00008fb0     0d5f          calla   BLOCK_WOOSH
         00008fc0 00000000! 
    1139                    
    1140 00008fe0     5600          clr     a0
    1141 00008ff0     b00d          move    a0,*a13(BLOCK_TIME)
         00009000     0d30  
    1142 00009010     0320          clrc
    1143 00009020     0960          rets
    1144                    
    1145 00009030           tgcmno_blocking
    1146 00009030     0de0          setc
    1147 00009040     0960          rets
    1148                    
    1149                    
    1150 00009050           tgcmsuper_punch ;4
    1151 00009050                   JJXM_INIT
    1152 000090c0                   JJXM    NORMAL,          70, 45,tgcmspunch_special,tgcmspunch_slap      ;0
    1153 00009190                   JJXM    RUNNING,         40, 45,tgcmspunch_special,tgcmspunch_slap      ;1
    1154 00009260                   JJXM    INAIR,           40, 45,tgcmspunch_special,tgcmspunch_slap      ;2
    1155 00009330                   JJXM    ATTACHED,        40, 45,tgcmspunch_special,tgcmspunch_slap      ;3
    1156 00009400                   JJXM    ONGROUND,       160,140,tgcmspunch_lbowdrop,std_punch   ;4
    1157 000094d0                   JJXM    BOUNCING,       110, 45,tgcmspunch_special,tgcmspunch_slap      ;5
    1158 000095a0                   JJXM    ONTURNBKL,              tgcmspunch_slap                 ;6
    1159 000095f0                   JJXM    BLOCK,           70, 45,tgcmspunch_special,tgcmspunch_slap      ;7
    1160 000096c0                   JJXM    DIZZY,           40, 45,tgcmspunch_special,tgcmspunch_slap      ;8
    1161 00009790                   JJXM    DEAD,           160,140,tgcmspunch_lbowdrop,std_punch   ;9
    1162 00009860                   JJXM    OPPOVERHEAD,    110, 35,tgcmspunch_special,tgcmspunch_slap      ;10
    1163 00009910                   JJXM    CLIMBTURNBKL,           std_punch                       ;11
    1164 00009960                   JJXM    WAITANIM,        40, 45,tgcmspunch_special,tgcmspunch_slap      ;12
    1165 00009a00                   JJXM    GRAPPLE,         40, 45,tgcmspunch_special,tgcmspunch_slap      ;13
    1166 00009aa0                   JJXM    MASTER,          40, 45,tgcmspunch_special,tgcmspunch_slap      ;14
    1167 00009b40                   JJXM    SLAVE,           40, 45,tgcmspunch_special,tgcmspunch_slap      ;15
    1168 00009be0                   JJXM    HEADHOLD,        40, 45,tgcmspunch_special,tgcmspunch_slap      ;16
    1169 00009c80                   JJXM    HEADHELD,        40, 45,tgcmspunch_special,tgcmspunch_slap      ;19
    1170 00009d20                   JJXM    CHOKEHOLD,       40, 45,tgcmspunch_special,tgcmspunch_slap      ;16
    1171 00009dc0                   JJXM    PUPPET,          40, 45,tgcmspunch_special,tgcmspunch_slap      ;20
    1172 00009e60                   JJXM    PUPPET2,         40, 45,tgcmspunch_special,tgcmspunch_slap      ;20
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1173 00009f00                   JJXM    INAIR2,          40, 45,tgcmspunch_special,tgcmspunch_slap      ;21
    1174 00009fa0                   JJXM_END
    1175                    
    1176 00009fc0           tgcmspunch_rets
    1177 00009fc0     0960          rets
    1178                    
    1179 00009fd0           tgcmspunch_slap
    1180 00009fd0     09e0          movi    lex_3_clobber_anim,a0
         00009fe0 00000000! 
    1181 0000a000     0d5f          calla   change_anim1a
         0000a010 00000000! 
    1182                    
    1183 0000a030                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    1184 0000a1d0     0960          rets
    1185                    
    1186 0000a1e0           tgcmspunch_special
    1187                    
    1188 0000a1e0     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000a1f0     0370  
    1189 0000a200     0b41          cmpi    55,a1
         0000a210     ffc8  
    1190 0000a220     c700          jrgt    std_punch
         0000a230     fe4b  
    1191                    
    1192                            .ref    lex_2_butts_anim
    1193                            .ref    lex_4_butts_anim
    1194                    
    1195 0000a240                   FACE24  lex,butts_anim
    1196 0000a2e0     0d5f          calla   change_anim1
         0000a2f0 00000000! 
    1197                    
    1198 0000a310                   WRSND   W_LUGER,HDBUTT_T1,HDBUTT_T2
    1199                    
    1200 0000a4b0     0960          rets
    1201                    
    1202 0000a4c0           tgcmspunch_lbowdrop
    1203                    
    1204 0000a4c0     b5ae          move    *a13(CLOSEST_NUM),a14
         0000a4d0     03a0  
    1205 0000a4e0                   X32     a14
    1206 0000a4f0     0b2e          addi    process_ptrs,a14
         0000a500 00000000! 
    1207 0000a520     87ce          move    *a14,a14,L
    1208 0000a530     b5c2          move    *a14(PLYRMODE),a2
         0000a540     05c0  
    1209 0000a550     0b42          cmpi    MODE_DEAD,a2
         0000a560     fff6  
    1210 0000a570     ca3e          jrz     tgcmno
    1211 0000a580     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000a590     0100  
    1212 0000a5a0     b7c2          move    *a14(OBJ_XPOS),a2,L
         0000a5b0     0100  
    1213 0000a5c0     4441          sub     a2,a1
    1214 0000a5d0     0381          abs     a1
    1215 0000a5e0     2e01          srl     16,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1216 0000a5f0     0b41          cmpi    20h,a1  ;28
         0000a600     ffdf  
    1217 0000a610     c434          jrlt    tgcmno
    1218                    
    1219                    
    1220 0000a620     b5ce          move    *a14(OBJ_CONTROL),a14
         0000a630     0780  
    1221 0000a640     0b8e          andi    M_FLIPH,a14
         0000a650 ffffffef  
    1222 0000a670     b5a0          move    *a13(OBJ_CONTROL),a0
         0000a680     0780  
    1223 0000a690     0b80          andi    M_FLIPH,a0
         0000a6a0 ffffffef  
    1224 0000a6c0     480e          cmp     a0,a14
    1225 0000a6d0     ca28          jrz     tgcmno
    1226                    
    1227                    
    1228 0000a6e0                   FACE24  lex,hair_pickup_anim
    1229 0000a780     0d5f          calla   change_anim1
         0000a790 00000000! 
    1230 0000a7b0                   WRSND   W_LUGER,LBOWDROP_T1,LBOWDROP_T2
    1231 0000a950     0960          rets
    1232                    
    1233 0000a960           tgcmno
    1234 0000a960                   FACE24  lex,ground_punch_anim
    1235 0000aa00     0d5f          calla   change_anim1
         0000aa10 00000000! 
    1236 0000aa30                   WRSND   W_LUGER,LBOWDROP_T1,LBOWDROP_T2
    1237 0000abd0     0960          rets
    1238                    
    1239                    
    1240 0000abe0           tgcmkick                ;8
    1241                    
    1242                    
    1243 0000abe0                   JJXM_INIT
    1244 0000ac50                   JJXM    NORMAL,          60, 50,tgcmkick_knee,tgcmkick_kick
    1245 0000ad20                   JJXM    BLOCK,           60, 50,tgcmkick_knee,tgcmkick_kick
    1246 0000adf0                   JJXM    DIZZY,           60, 50,tgcmkick_knee,tgcmkick_kick
    1247 0000aec0                   JJXM    ONGROUND,       160,140,tgcmkick_stomp,tgcmkick_kick
    1248 0000af90                   JJXM    RUNNING,         60, 50,tgcmkick_knee,tgcmkick_kick
    1249 0000b060                   JJXM    BOUNCING,        60, 50,tgcmkick_knee,tgcmkick_kick
    1250 0000b130                   JJXM    ONTURNBKL,              tgcmkick_kick
    1251 0000b180                   JJXM    CLIMBTURNBKL,           tgcmkick_kick
    1252 0000b1d0                   JJXM    INAIR,           60, 50,tgcmkick_knee,tgcmkick_kick
    1253 0000b2a0                   JJXM    ATTACHED,        60, 50,tgcmkick_knee,tgcmkick_kick
    1254 0000b370                   JJXM    DEAD,           160,140,tgcmkick_stomp,tgcmkick_kick
    1255 0000b440                   JJXM    OPPOVERHEAD,     60, 50,tgcmkick_knee,tgcmkick_kick
    1256 0000b510                   JJXM    WAITANIM,        60, 50,tgcmkick_knee,tgcmkick_kick
    1257 0000b5c0                   JJXM    GRAPPLE,         60, 50,tgcmkick_knee,tgcmkick_kick
    1258 0000b670                   JJXM    MASTER,          60, 50,tgcmkick_knee,tgcmkick_kick
    1259 0000b720                   JJXM    SLAVE,           60, 50,tgcmkick_knee,tgcmkick_kick
    1260 0000b7d0                   JJXM    HEADHOLD,        60, 50,tgcmkick_knee,tgcmkick_kick
    1261 0000b870                   JJXM    HEADHELD,        60, 50,tgcmkick_knee,tgcmkick_kick
    1262 0000b910                   JJXM    CHOKEHOLD,       60, 50,tgcmkick_knee,tgcmkick_kick
    1263 0000b9b0                   JJXM    PUPPET,          60, 50,tgcmkick_knee,tgcmkick_kick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1264 0000ba50                   JJXM    PUPPET2,         60, 50,tgcmkick_knee,tgcmkick_kick
    1265 0000baf0                   JJXM    INAIR2,                 tgcmkick_TB
    1266 0000bb30                   JJXM_END
    1267                    
    1268 0000bb50           tgcmkick_TB
    1269                    
    1270                            .ref    lex_kick_TB_anim
    1271 0000bb50     09e0          movi    lex_kick_TB_anim,a0
         0000bb60 00000000! 
    1272 0000bb80     0d5f          calla   change_anim1a
         0000bb90 00000000! 
    1273                    
    1274 0000bbb0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1275 0000bd50     0960          rets
    1276 0000bd60           tgcmkick_kick
    1277 0000bd60           std_kick
    1278                    
    1279 0000bd60                   FACE24  lex,kick_anim
    1280 0000be00     0d5f          calla   change_anim1a
         0000be10 00000000! 
    1281                    
    1282 0000be30                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1283 0000bfd0     0960          rets
    1284                    
    1285 0000bfe0           tgcmkick_knee
    1286 0000bfe0           std_knee
    1287                    
    1288 0000bfe0     09e0          movi    lex_4_knee_anim,a0
         0000bff0 00000000! 
    1289 0000c010     0d5f          calla   change_anim1a
         0000c020 00000000! 
    1290                    
    1291 0000c040                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1292 0000c1e0     0960          rets
    1293                    
    1294 0000c1f0           tgcmkick_stomp
    1295 0000c1f0           std_stomp
    1296                    
    1297 0000c1f0                   FACE24  lex,stomp_anim
    1298 0000c290     0d5f          calla   change_anim1a
         0000c2a0 00000000! 
    1299                    
    1300 0000c2c0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    1301                    
    1302 0000c460     0960          rets
    1303                    
    1304                    
    1305                    
    1306 0000c470           tgcmpunchkick   ;9
    1307                    
    1308 0000c470     09e0          movi    start_run_anim,a0
         0000c480 00000000! 
    1309 0000c4a0     0d5f          calla   change_anim1a
         0000c4b0 00000000! 
    1310                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1311 0000c4d0     0960          rets
    1312                    
    1313                    
    1314 0000c4e0           tgcmsuper_kick  ;16
    1315 0000c4e0                   JJXM_INIT
    1316 0000c550                   JJXM    NORMAL,          60, 60,tgcmskick_special,tgcmskick_kick        ;0
    1317 0000c620                   JJXM    RUNNING,                tgcmskick_bigboot                       ;1
    1318 0000c670                   JJXM    INAIR,           60, 60,tgcmskick_special,tgcmskick_kick        ;2
    1319 0000c740                   JJXM    ATTACHED,        60, 60,tgcmskick_special,tgcmskick_kick        ;3
    1320 0000c810                   JJXM    ONGROUND,       160,140,std_stomp,std_kick              ;4
    1321 0000c8d0                   JJXM    BOUNCING,               tgcmskick_bigboot                       ;5
    1322 0000c920                   JJXM    ONTURNBKL,       60, 96,tgcmskick_kick,std_kick         ;6
    1323 0000c9f0                   JJXM    BLOCK,           60, 60,tgcmskick_special,tgcmskick_kick        ;7
    1324 0000cac0                   JJXM    DIZZY,           60, 60,tgcmskick_special,tgcmskick_kick        ;8
    1325 0000cb90                   JJXM    DEAD,           160,140,std_stomp,std_kick              ;9
    1326 0000cc60                   JJXM    OPPOVERHEAD,     60, 60,tgcmskick_special,tgcmskick_kick        ;10
    1327 0000cd10                   JJXM    CLIMBTURNBKL,    60, 96,tgcmskick_kick,std_kick         ;11
    1328 0000cdd0                   JJXM    WAITANIM,        60, 62,tgcmskick_special,tgcmskick_kick        ;12
    1329 0000ce70                   JJXM    GRAPPLE,         60, 62,tgcmskick_special,tgcmskick_kick        ;13
    1330 0000cf10                   JJXM    MASTER,          60, 62,tgcmskick_special,tgcmskick_kick        ;14
    1331 0000cfb0                   JJXM    SLAVE,           60, 62,tgcmskick_special,tgcmskick_kick        ;15
    1332 0000d050                   JJXM    HEADHOLD,        60, 62,tgcmskick_special,tgcmskick_kick        ;16
    1333 0000d0f0                   JJXM    HEADHELD,               std_kick
    1334 0000d140                   JJXM    CHOKEHOLD,       60, 62,tgcmskick_special,tgcmskick_kick        ;16
    1335 0000d1e0                   JJXM    PUPPET,          60, 62,tgcmskick_special,tgcmskick_kick        ;20
    1336 0000d280                   JJXM    PUPPET2,         60, 62,tgcmskick_special,tgcmskick_kick        ;20
    1337 0000d320                   JJXM    INAIR2,                 tgcmkick_TB
    1338 0000d370                   JJXM_END
    1339                    
    1340 0000d390           tgcmskick_kick
    1341 0000d390     09e0          movi    lex_super_kick_anim,a0
         0000d3a0 00000000! 
    1342 0000d3c0     0d5f          calla   change_anim1a
         0000d3d0 00000000! 
    1343                    
    1344 0000d3f0                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1345 0000d590     0960          rets
    1346                    
    1347                    
    1348 0000d5a0           tgcmskick_special
    1349 0000d5a0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d5b0     0bc0  
    1350 0000d5c0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000d5d0     04d0  
    1351 0000d5e0     0b81          andi    0ch,a1
         0000d5f0 fffffff3  
    1352 0000d610     4801          cmp     a0,a1
    1353 0000d620     ca21          jrz     tgcmcont2
    1354                    
    1355 0000d630     09e0          movi    lex_4_knee_anim,a0
         0000d640 00000000! 
    1356 0000d660     0d5f          calla   change_anim1a
         0000d670 00000000! 
    1357                    
    1358 0000d690                   WRSND   W_LUGER,KICK_T1,KICK_T2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1359                    
    1360 0000d830     0960          rets
    1361                    
    1362 0000d840           tgcmcont2
    1363 0000d840     09e0          movi    lex_4_knee_fall_anim,a0
         0000d850 00000000! 
    1364 0000d870     0d5f          calla   change_anim1
         0000d880 00000000! 
    1365                    
    1366 0000d8a0                   WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
    1367 0000da40     0960          rets
    1368                    
    1369 0000da50           tgcmskick_bigboot       ;we can probably get away with just a tgcm4 big boot
    1370                    
    1371 0000da50     09e0          movi    lex_4_bigboot_anim,a0           ;*****
         0000da60 00000000! 
    1372 0000da80     0d5f          calla   change_anim1a
         0000da90 00000000! 
    1373                    
    1374 0000dab0                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1375                    
    1376 0000dc50     0960          rets
    1377                    
    1378 0000dc60           tgcmgraboh              ;20
    1379                    
    1380 0000dc60     09e0          movi    lex_4_graboh_anim,a0
         0000dc70 00000000! 
    1381 0000dc90     0d5f          calla   change_anim1a
         0000dca0 00000000! 
    1382                    
    1383 0000dcc0                   WRSND   W_LUGER,GRABHOLD_T1,GRABHOLD_T2
    1384                    
    1385 0000de60     0960          rets
    1386                    
    1387                    
    1388                    
    1389          00060000  dazkXRUN_VAL    equ     LEX_XRUN
    1390          00020000  dazkZDRIFT_VAL  equ     LEX_ZDRIFT
    1391                    
    1392 0000de70           mode_running
    1393                    
    1394 0000de70     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         0000de80     07b0  
    1395 0000de90     1020          addk    1,a0
    1396 0000dea0     b00d          move    a0,*a13(RUN_TIME)
         0000deb0     07b0  
    1397                    
    1398 0000dec0     b5a0          move    *a13(USR_VAR1),a0
         0000ded0     0850  
    1399 0000dee0     cb11          jrnz    dazkno_vel
    1400                    
    1401 0000def0     0d5f          calla   bounce_off_ropes
         0000df00 00000000! 
    1402                    
    1403 0000df20     09e0          movi    dazkXRUN_VAL,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

         0000df30 00060000  
    1404 0000df50     b5ae          move    *a13(MOVE_DIR),a14
         0000df60     04b0  
    1405 0000df70     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1406 0000df80     cb01          jrnz    dazkpos
    1407 0000df90     03a0          neg     a0
    1408 0000dfa0           dazkpos
    1409 0000dfa0     05ae          move    @hyper_speed_on,a14
         0000dfb0 00000000! 
    1410 0000dfd0     63c0          sll     a14,a0
    1411 0000dfe0     b20d          move    a0,*a13(OBJ_XVEL),L
         0000dff0     02d0  
    1412                    
    1413 0000e000           dazkno_vel
    1414                    
    1415 0000e000     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         0000e010     0460  
    1416 0000e020     cb38          jrnz    dazkout_of_control
    1417                    
    1418 0000e030     b5a0          move    *a13(ANIMODE),a0
         0000e040     0660  
    1419 0000e050     1fa0          btst    MODE_UNINT_BIT,a0
    1420 0000e060     cb16          jrnz    dazkno_interrupt
    1421                    
    1422 0000e070     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000e080     0bc0  
    1423 0000e090     b5a1          move    *a13(MOVE_DIR),a1
         0000e0a0     04b0  
    1424 0000e0b0     5401          or      a0,a1
    1425 0000e0c0     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         0000e0d0 fffffff3  
    1426 0000e0f0     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         0000e100     fff3  
    1427 0000e110     cb0b          jrne    dazkcontinue_run
    1428                    
    1429                            ;braking with stick.  abort run.
    1430                    
    1431 0000e120                   SETMODE NORMAL
    1432                    
    1433 0000e1d0           dazkcontinue_run
    1434 0000e1d0           dazkno_interrupt
    1435                    
    1436 0000e1d0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000e1e0     0bc0  
    1437 0000e1f0     5621          clr     a1
    1438                    
    1439 0000e200     09e1          movi    -dazkZDRIFT_VAL,a1
         0000e210 fffe0000  
    1440 0000e230     1fe0          btst    PLAYER_UP_BIT,a0
    1441 0000e240     cb06          jrnz    dazksetvel
    1442                    
    1443 0000e250     09e1          movi    dazkZDRIFT_VAL,a1
         0000e260 00020000  
    1444 0000e280     1fc0          btst    PLAYER_DOWN_BIT,a0
    1445 0000e290     cb01          jrnz    dazksetvel
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1446                    
    1447 0000e2a0     5621          clr     a1
    1448 0000e2b0           dazksetvel
    1449 0000e2b0     b22d          move    a1,*a13(OBJ_ZVEL),L
         0000e2c0     0310  
    1450                    
    1451 0000e2d0     b5a0          move    *a13(DELAY_BUTNS),a0
         0000e2e0     0ab0  
    1452 0000e2f0     cb0b          jrnz    dazkout_of_control
    1453                    
    1454 0000e300     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000e310     0ba0  
    1455 0000e320     0b80          andi    011111b,a0
         0000e330 ffffffe0  
    1456 0000e350                   X32     a0
    1457 0000e360     0b20          addi    dazkaction_table,a0
         0000e370 0000e3c0' 
    1458 0000e390     8600          move    *a0,a0,L
    1459 0000e3a0     0920          call    a0
    1460 0000e3b0           dazkout_of_control
    1461 0000e3b0     0960          rets
    1462                    
    1463 0000e3c0           dazkaction_table
    1464 0000e3c0 0000e7c0'         .long   dazkz,dazkpunch,dazkblock,dazkblock                     ;0-3
    1465 0000e440 0000e7d0'         .long   dazksuper_punch,dazksuper_punch,dazkblock,dazkblock     ;4-7
    1466 0000e4c0 0000f220'         .long   dazkkick,dazkpunchkick,dazkblock,dazkblock              ;8-11
    1467 0000e540 0000e7d0'         .long   dazksuper_punch,dazkpunchkick,dazkblock,dazkblock       ;12-15
    1468 0000e5c0 0000f220'         .long   dazksuper_kick,dazksuper_kick,dazkblock,dazkblock       ;16-19
    1469 0000e640 0000e7d0'         .long   dazkgraboh,dazkgraboh,dazkblock,dazkblock               ;20-23
    1470 0000e6c0 0000f220'         .long   dazksuper_kick,dazkpunchkick,dazkblock,dazkblock        ;24-27
    1471 0000e740 0000e7d0'         .long   dazkgraboh,dazkgraboh,dazkblock,dazkblock               ;28-31
    1472                    
    1473 0000e7c0           dazkz
    1474 0000e7c0     0960          rets
    1475                    
    1476                    
    1477 0000e7d0           dazkpunch               ;1
    1478 0000e7d0           dazksuper_punch ;4
    1479 0000e7d0           dazkpunchkick
    1480 0000e7d0           dazkgraboh
    1481 0000e7d0                   JJXM_INIT
    1482 0000e840                   JJXM    NORMAL,                 dazkpunch_clothesline
    1483 0000e880                   JJXM    BLOCK,                  dazkpunch_clothesline
    1484 0000e8c0                   JJXM    DIZZY,                  dazkpunch_clothesline
    1485 0000e900                   JJXM    ONGROUND,       176,176,dazkpunch_bellyflop,dazkpunch_rets
    1486 0000e9a0                   JJXM    RUNNING,                dazkpunch_clothesline
    1487 0000e9e0                   JJXM    BOUNCING,               dazkpunch_clothesline
    1488 0000ea20                   JJXM    ONTURNBKL,              dazkpunch_clothesline
    1489 0000ea60                   JJXM    CLIMBTURNBKL,           dazkpunch_clothesline
    1490 0000eaa0                   JJXM    INAIR,                  dazkpunch_clothesline
    1491 0000eae0                   JJXM    ATTACHED,               dazkpunch_clothesline
    1492 0000eb20                   JJXM    ONGROUND,       176,176,dazkpunch_bellyflop,dazkpunch_rets
    1493 0000ebc0                   JJXM    OPPOVERHEAD,            dazkpunch_clothesline
    1494 0000ec00                   JJXM    WAITANIM,               dazkpunch_clothesline
    1495 0000ec40                   JJXM    GRAPPLE,                dazkpunch_clothesline
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1496 0000ec80                   JJXM    MASTER,                 dazkpunch_clothesline
    1497 0000ecc0                   JJXM    SLAVE,                  dazkpunch_clothesline
    1498 0000ed00                   JJXM    HEADHOLD,               dazkpunch_clothesline
    1499 0000ed40                   JJXM    HEADHELD,               dazkpunch_clothesline
    1500 0000ed80                   JJXM    CHOKEHOLD,              dazkpunch_clothesline
    1501 0000edc0                   JJXM    PUPPET,                 dazkpunch_clothesline
    1502 0000ee00                   JJXM    PUPPET2,                dazkpunch_clothesline
    1503 0000ee40                   JJXM    INAIR2,                 dazkpunch_clothesline
    1504 0000ee80                   JJXM_END
    1505                    
    1506 0000eea0           dazkpunch_rets
    1507 0000eea0     0960          rets
    1508                    
    1509 0000eeb0           dazkpunch_clothesline
    1510                            ;HACK!!!
    1511 0000eeb0     c000          jruc    dazkkick_flyingkick
         0000eec0     00a3  
    1512                    
    1513 0000eed0     0960          rets
    1514                    
    1515 0000eee0           dazkpunch_bellyflop
    1516 0000eee0           attack_bellyflop
    1517                    
    1518 0000eee0     09e0          movi    lex_flying_ground_punch_anim,a0
         0000eef0 00000000! 
    1519 0000ef10     0d5f          calla   change_anim1a
         0000ef20 00000000! 
    1520                    
    1521 0000ef40                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1522 0000f0e0     0960          rets
    1523                    
    1524                    
    1525 0000f0f0           dazkblock               ;2
    1526                    
    1527 0000f0f0     b7a0          move    *a13(OBJ_XVEL),a0,L
         0000f100     02d0  
    1528 0000f110     2be0          sra     1,a0
    1529 0000f120     b20d          move    a0,*a13(OBJ_XVEL),L
         0000f130     02d0  
    1530 0000f140                   SETMODE NORMAL
    1531 0000f1f0     c000          jruc    std_block
         0000f200     f9c6  
    1532 0000f210     0960          rets
    1533                    
    1534 0000f220           dazkkick                ;8
    1535 0000f220           dazksuper_kick  ;16
    1536 0000f220                   JJXM_INIT
    1537 0000f290                   JJXM    NORMAL,                 dazkkick_flyingkick
    1538 0000f2d0                   JJXM    BLOCK,                  dazkkick_flyingkick
    1539 0000f310                   JJXM    DIZZY,                  dazkkick_flyingkick
    1540 0000f350                   JJXM    ONGROUND,       176,176,attack_bellyflop,dazkkick_rets
    1541 0000f3f0                   JJXM    RUNNING,                dazkkick_flyingkick
    1542 0000f430                   JJXM    BOUNCING,               dazkkick_flyingkick
    1543 0000f470                   JJXM    ONTURNBKL,              dazkkick_flyingkick
    1544 0000f4b0                   JJXM    CLIMBTURNBKL,           dazkkick_flyingkick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1545 0000f4f0                   JJXM    INAIR,                  dazkkick_flyingkick
    1546 0000f530                   JJXM    ATTACHED,               dazkkick_flyingkick
    1547 0000f570                   JJXM    DEAD,           176,176,attack_bellyflop,dazkkick_rets
    1548 0000f610                   JJXM    OPPOVERHEAD,            dazkkick_flyingkick
    1549 0000f650                   JJXM    WAITANIM,               dazkkick_flyingkick
    1550 0000f690                   JJXM    GRAPPLE,                dazkkick_flyingkick
    1551 0000f6d0                   JJXM    MASTER,                 dazkkick_flyingkick
    1552 0000f710                   JJXM    SLAVE,                  dazkkick_flyingkick
    1553 0000f750                   JJXM    HEADHOLD,               dazkkick_flyingkick
    1554 0000f790                   JJXM    HEADHELD,               dazkkick_flyingkick
    1555 0000f7d0                   JJXM    CHOKEHOLD,              dazkkick_flyingkick
    1556 0000f810                   JJXM    PUPPET,                 dazkkick_flyingkick
    1557 0000f850                   JJXM    PUPPET2,                dazkkick_flyingkick
    1558 0000f890                   JJXM    INAIR2,                 dazkkick_flyingkick
    1559 0000f8d0                   JJXM_END
    1560                    
    1561 0000f8f0           dazkkick_rets
    1562 0000f8f0     0960          rets
    1563                    
    1564 0000f900           dazkkick_flyingkick
    1565                    
    1566 0000f900     0d5f          calla   ck_ignore
         0000f910 00000000! 
    1567 0000f930     c800          jrc     dazkz
         0000f940     fee7  
    1568                    
    1569 0000f950                   SETMODE INAIR
    1570                    
    1571 0000fa00     09e0          movi    lex_flying_kick_anim,a0
         0000fa10 00000000! 
    1572 0000fa30     0d5f          calla   change_anim1a
         0000fa40 00000000! 
    1573                    
    1574 0000fa60                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1575                    
    1576 0000fc00     0960          rets
    1577                    
    1578                    
    1579                    
    1580 0000fc10           mode_inair      ;2
    1581                    
    1582 0000fc10     0960          rets
    1583                    
    1584                    
    1585 0000fc20           mode_attached   ;3
    1586                    
    1587 0000fc20     0d5f          calla   keep_attached
         0000fc30 00000000! 
    1588 0000fc50     cb12          jrnz    drmhstill_attached
    1589                    
    1590 0000fc60     5600          clr     a0
    1591 0000fc70     b20d          move    a0,*a13(ATTACH_PROC),L
         0000fc80     03e0  
    1592                    
    1593 0000fc90                   SETMODE NORMAL
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1594                    
    1595 0000fd40     09c0          movi    MODE_NORMAL,a0
         0000fd50     0000  
    1596 0000fd60     b00d          move    a0,*a13(ANIMODE)
         0000fd70     0660  
    1597                    
    1598 0000fd80           drmhstill_attached
    1599 0000fd80     0960          rets
    1600                    
    1601                    
    1602 0000fd90           mode_onground   ;4
    1603                    
    1604 0000fd90     0960          rets
    1605                    
    1606                    
    1607                    
    1608 0000fda0           mode_bouncing   ;5
    1609                    
    1610 0000fda0     5600          clr     a0
    1611 0000fdb0     b20d          move    a0,*a13(OBJ_XVEL),L
         0000fdc0     02d0  
    1612 0000fdd0     b20d          move    a0,*a13(OBJ_ZVEL),L
         0000fde0     0310  
    1613                    
    1614 0000fdf0     b5a0          move    *a13(ANIMODE),a0
         0000fe00     0660  
    1615 0000fe10     1fe0          btst    MODE_END_BIT,a0
    1616 0000fe20     ca20          jrz     emrinot_ended
    1617                    
    1618 0000fe30     b5a0          move    *a13(MOVE_DIR),a0
         0000fe40     04b0  
    1619 0000fe50     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         0000fe60 0000000c  
    1620 0000fe80     b00d          move    a0,*a13(MOVE_DIR)
         0000fe90     04b0  
    1621                    
    1622 0000fea0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000feb0     04d0  
    1623 0000fec0     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         0000fed0 fffffffc  
    1624 0000fef0     5401          or      a0,a1                   ;LEFT or RIGHT
    1625 0000ff00     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         0000ff10     04c0  
    1626                    
    1627 0000ff20     09e0          movi    lex_run2_anim,a0
         0000ff30 00000000! 
    1628 0000ff50     0d5f          calla   change_anim1a
         0000ff60 00000000! 
    1629                    
    1630 0000ff80                   SETMODE RUNNING
    1631                    
    1632                    
    1633 00010030           emrinot_ended
    1634 00010030     0960          rets
    1635                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1636                    
    1637 00010040           mode_onturnbkl  ;6
    1638                    
    1639                    
    1640 00010040     b5a0          move    *a13(STICK_VAL_CUR),a0
         00010050     0bc0  
    1641 00010060     1fc0          btst    PLAYER_DOWN_BIT,a0
    1642 00010070     ca12          jrz     dptyno_climbdown
    1643                    
    1644 00010080     09e0          movi    lex_climb_down_anim,a0
         00010090 00000000! 
    1645 000100b0     0d5f          calla   change_anim1a
         000100c0 00000000! 
    1646                    
    1647 000100e0                   SETMODE CLIMBTURNBKL
    1648                    
    1649 00010190           dptyno_interrupt
    1650 00010190     0960          rets
    1651                    
    1652 000101a0           dptyno_climbdown
    1653 000101a0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000101b0     0ba0  
    1654 000101c0     0b80          andi    011111b,a0
         000101d0 ffffffe0  
    1655 000101f0     ca51          jrz     dptyz
    1656                    
    1657 00010200                   X32     a0
    1658 00010210     0b20          addi    dptyaction_table,a0
         00010220 00010310' 
    1659 00010240     8600          move    *a0,a0,L
    1660 00010250     0920          call    a0
    1661                    
    1662 00010260     b5a5          move    *a13(PLYRNUM),a5
         00010270     0580  
    1663 00010280     09e2          movi    JUMP_ROPES,a2
         00010290 00000000! 
    1664 000102b0     09c0          movi    1000,a0
         000102c0     03e8  
    1665 000102d0     0d5f          calla   ADD_IF_SILENT
         000102e0 00000000! 
    1666                    
    1667 00010300     0960          rets
    1668                    
    1669                    
    1670                    
    1671 00010310           dptyaction_table
    1672 00010310 00010710'         .long   dptyz,dptypunch,dptyblock,dptyblock                     ;0-3
    1673 00010390 00010720'         .long   dptysuper_punch,dptysuper_punch,dptyblock,dptyblock     ;4-7
    1674 00010410 00010720'         .long   dptykick,dptypunchkick,dptyblock,dptyblock              ;8-11
    1675 00010490 00010720'         .long   dptysuper_punch,dptypunchkick,dptyblock,dptyblock       ;12-15
    1676 00010510 00010720'         .long   dptysuper_kick,dptysuper_kick,dptyblock,dptyblock       ;16-19
    1677 00010590 00010720'         .long   dptygraboh,dptygraboh,dptyblock,dptyblock               ;20-23
    1678 00010610 00010720'         .long   dptysuper_kick,dptypunchkick,dptyblock,dptyblock        ;24-27
    1679 00010690 00010720'         .long   dptygraboh,dptygraboh,dptyblock,dptyblock               ;28-31
    1680                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1681                    
    1682 00010710           dptyz
    1683 00010710           dptyblock
    1684 00010710     0960          rets
    1685                    
    1686 00010720           dptypunch               ;1
    1687 00010720           dptysuper_punch ;4
    1688 00010720           dptypunchkick   ;5
    1689 00010720           dptykick                ;8
    1690 00010720           dptysuper_kick  ;16
    1691 00010720           dptygraboh              ;20
    1692                    
    1693 00010720                   SETMODE INAIR
    1694                    
    1695 000107d0     09e0          movi    lex_buckle_leap_anim,a0
         000107e0 00000000! 
    1696 00010800     0d5f          calla   change_anim1a
         00010810 00000000! 
    1697                    
    1698 00010830                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1699 000109d0     0960          rets
    1700                    
    1701                    
    1702 000109e0           mode_block      ;7
    1703                    
    1704 000109e0     b5a0          move    *a13(BLOCK_TIME),a0
         000109f0     0d30  
    1705 00010a00     1020          inc     a0
    1706 00010a10     b00d          move    a0,*a13(BLOCK_TIME)
         00010a20     0d30  
    1707 00010a30     0b40          cmpi    160,a0
         00010a40     ff5f  
    1708 00010a50     c413          jrlt    hvwano
    1709                    
    1710 00010a60     0d5f          calla   get_opp_plyrmode
         00010a70 00000000! 
    1711 00010a90     0b40          cmpi    MODE_BLOCK,a0
         00010aa0     fff8  
    1712 00010ab0     cb0d          jrnz    hvwano
    1713 00010ac0     b5a0          move    *a13(CLOSEST_XDIST),a0
         00010ad0     0370  
    1714 00010ae0     0b40          cmpi    61h,a0
         00010af0     ff9e  
    1715 00010b00     c508          jrge    hvwano
    1716 00010b10     0b40          cmpi    45,a0
         00010b20     ffd2  
    1717 00010b30     c405          jrlt    hvwano
    1718 00010b40     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00010b50     0390  
    1719 00010b60     0b40          cmpi    30,a0
         00010b70     ffe1  
    1720 00010b80     c461          jrlt    hvwapunchblock
    1721                    
    1722 00010b90           hvwano
    1723 00010b90     b5a0          move    *a13(BUT_VAL_DOWN),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

         00010ba0     0ba0  
    1724 00010bb0     0b80          andi    011111b,a0
         00010bc0 ffffffe0  
    1725 00010be0     ca0c          jrz     hvwano_interrupt
    1726                    
    1727                            ;press.  if block isn't down, let mode_normal handle it
    1728 00010bf0     4c02          move    a0,a2                   ;save a0 from ...val_down
    1729 00010c00     b5a0          move    *a13(BUT_VAL_CUR),a0
         00010c10     0b90  
    1730 00010c20     1fc0          btst    PLAYER_BLOCK_BIT,a0
    1731 00010c30     ca08          jrz     hvwaset_mode_normal
    1732 00010c40     4c40          move    a2,a0                   ;restore a0 from ...val_down
    1733                    
    1734 00010c50                   X32     a0
    1735 00010c60     0b20          addi    hvwaaction_table,a0
         00010c70 00010d90' 
    1736 00010c90     8600          move    *a0,a0,L
    1737 00010ca0     0920          call    a0
    1738                    
    1739 00010cb0           hvwano_interrupt
    1740 00010cb0     0960          rets
    1741                    
    1742 00010cc0           hvwaset_mode_normal
    1743 00010cc0                   SETMODE NORMAL
    1744 00010d70     c000          jruc    mode_normal
         00010d80     f5a2  
    1745                    
    1746 00010d90           hvwaaction_table
    1747 00010d90 00011190'         .long   hvwaz,hvwapunchblock,hvwaz      ;0-2
    1748 00010df0 000111a0'         .long   hvwapunchblock          ;3
    1749 00010e10 00011190'         .long   hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz       ;4-10
    1750 00010ef0 00011190'         .long   hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz       ;11-17
    1751 00010fd0 00011190'         .long   hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz       ;18-24
    1752 000110b0 00011190'         .long   hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz       ;25-31
    1753                    
    1754 00011190           hvwaz
    1755 00011190     0960          rets
    1756                    
    1757 000111a0           hvwapunchblock  ;3
    1758                    
    1759                    
    1760 000111a0                   SETMODE NORMAL
    1761                    
    1762 00011250     09e0          movi    lex_4_push_anim,a0
         00011260 00000000! 
    1763 00011280     0d5f          calla   change_anim1a
         00011290 00000000! 
    1764                    
    1765 000112b0                   WRSND   W_LUGER,PUSH_T1,PUSH_T2
    1766                    
    1767 00011450     0960          rets
    1768                    
    1769                    
    1770                    
    1771 00011460           mode_dizzy      ;8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1772                    
    1773 00011460     0960          rets
    1774                    
    1775                    
    1776 00011470           mode_oppoverhead ;10
    1777                    
    1778 00011470     b7a2          move    *a13(ATTACH_PROC),a2,L          ;proc attached to
         00011480     03e0  
    1779 00011490     ca03          jrz     ajexnot_attached
    1780 000114a0     b640          move    *a2(ATTACH_PROC),a0,L
         000114b0     03e0  
    1781 000114c0     cb1a          jrnz    ajexstill_attached
    1782                    
    1783 000114d0           ajexnot_attached
    1784                    
    1785 000114d0     b5a0          move    *a13(ANIMODE),a0                ;* remove this????
         000114e0     0660  
    1786 000114f0     1fa0          btst    MODE_UNINT_BIT,a0               ;*
    1787 00011500     cb4d          jrnz    ajexno_interrupt                        ;*
    1788                    
    1789 00011510     5600          clr     a0
    1790 00011520     b20d          move    a0,*a13(ATTACH_PROC),L
         00011530     03e0  
    1791                    
    1792 00011540     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011550 00000000! 
    1793 00011570                   SETMODE NORMAL
    1794                    
    1795 00011620     09c0          movi    MODE_NORMAL,a0
         00011630     0000  
    1796 00011640     b00d          move    a0,*a13(ANIMODE)
         00011650     0660  
    1797                    
    1798 00011660     0960          rets
    1799                    
    1800 00011670           ajexstill_attached
    1801 00011670     b5a0          move    *a13(ANIMODE),a0
         00011680     0660  
    1802 00011690     1fa0          btst    MODE_UNINT_BIT,a0
    1803 000116a0     cb33          jrnz    ajexno_interrupt
    1804                    
    1805 000116b0     b5a0          move    *a13(FACING_DIR),a0
         000116c0     04c0  
    1806 000116d0     0b80          andni   MOVE_UP,a0
         000116e0 00000001  
    1807 00011700     0ba0          ori     MOVE_DOWN,a0
         00011710 00000002  
    1808 00011730     b00d          move    a0,*a13(FACING_DIR)
         00011740     04c0  
    1809 00011750     b00d          move    a0,*a13(NEW_FACING_DIR)
         00011760     04d0  
    1810                    
    1811 00011770     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011780     0bc0  
    1812 00011790     ca0c          jrz     ajexstand
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1813                    
    1814 000117a0     b00d          move    a0,*a13(MOVE_DIR)
         000117b0     04b0  
    1815 000117c0     0d5f          calla   execute_walk
         000117d0 00000000! 
    1816                    
    1817                            .ref    lex_holdoh_anim
    1818 000117f0     09e0          movi    lex_holdoh_anim,a0
         00011800 00000000! 
    1819                            .ref    change_anim2
    1820 00011820     0d5f          calla   change_anim2
         00011830 00000000! 
    1821 00011850     c00d          jruc    ajexck_butns
    1822 00011860           ajexstand
    1823 00011860     5600          clr     a0
    1824 00011870     b00d          move    a0,*a13(MOVE_DIR)
         00011880     04b0  
    1825 00011890     b20d          move    a0,*a13(OBJ_XVEL),L
         000118a0     02d0  
    1826 000118b0     b20d          move    a0,*a13(OBJ_ZVEL),L
         000118c0     0310  
    1827                    
    1828                            .ref    lex_stndholdoh_anim
    1829 000118d0     09e0          movi    lex_stndholdoh_anim,a0
         000118e0 00000000! 
    1830 00011900     0d5f          calla   change_anim1
         00011910 00000000! 
    1831                    
    1832 00011930           ajexck_butns
    1833                    
    1834 00011930     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011940     0ba0  
    1835 00011950     0b80          andi    011111b,a0
         00011960 ffffffe0  
    1836 00011980                   X32     a0
    1837 00011990     0b20          addi    ajexaction_table,a0
         000119a0 000119f0' 
    1838 000119c0     8600          move    *a0,a0,L
    1839 000119d0     0920          call    a0
    1840                    
    1841 000119e0           ajexno_interrupt
    1842 000119e0     0960          rets
    1843                    
    1844 000119f0           ajexaction_table
    1845 000119f0 00011df0'         .long   ajexz,ajexpunch,ajexblock,ajexblock                     ;0-3
    1846 00011a70 00012040'         .long   ajexsuper_punch,ajexsuper_punch,ajexblock,ajexblock     ;4-7
    1847 00011af0 00011e00'         .long   ajexkick,ajexpunchkick,ajexblock,ajexblock              ;8-11
    1848 00011b70 00012040'         .long   ajexsuper_punch,ajexpunchkick,ajexblock,ajexblock       ;12-15
    1849 00011bf0 000122c0'         .long   ajexsuper_kick,ajexsuper_kick,ajexblock,ajexblock       ;16-19
    1850 00011c70 00012040'         .long   ajexgraboh,ajexgraboh,ajexblock,ajexblock               ;20-23
    1851 00011cf0 000122c0'         .long   ajexsuper_kick,ajexpunchkick,ajexblock,ajexblock        ;24-27
    1852 00011d70 00012040'         .long   ajexgraboh,ajexgraboh,ajexblock,ajexblock               ;28-31
    1853                    
    1854                    
    1855 00011df0           ajexz
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

    1856 00011df0     0960          rets
    1857                    
    1858 00011e00           ajexpunch               ;1
    1859 00011e00           ajexpunchkick
    1860 00011e00           ajexblock               ;2
    1861 00011e00           ajexkick                ;8
    1862                    
    1863                    
    1864 00011e00     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011e10 00000000! 
    1865 00011e30     09e0          movi    lex_ohslam_anim,a0
         00011e40 00000000! 
    1866 00011e60     0d5f          calla   change_anim1a
         00011e70 00000000! 
    1867                    
    1868 00011e90                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    1869                    
    1870 00012030     0960          rets
    1871                    
    1872 00012040           ajexsuper_punch ;4
    1873 00012040           ajexgraboh
    1874                    
    1875 00012040     b5a0          move    *a13(STICK_VAL_CUR),a0
         00012050     0bc0  
    1876 00012060     1fe0          btst    PLAYER_UP_BIT,a0
    1877 00012070     cad8          jrz     ajexpunch
    1878                    
    1879 00012080     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012090 00000000! 
    1880 000120b0     09e0          movi    lex_slamdown_anim,a0
         000120c0 00000000! 
    1881 000120e0     0d5f          calla   change_anim1a
         000120f0 00000000! 
    1882                    
    1883 00012110                   WRSND   W_LUGER,PUNCH_T1,PUNCH_T2
    1884                    
    1885 000122b0     0960          rets
    1886                    
    1887 000122c0           ajexsuper_kick  ;16
    1888                    
    1889 000122c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000122d0     0bc0  
    1890 000122e0     1fe0          btst    PLAYER_UP_BIT,a0
    1891 000122f0     cab0          jrz     ajexpunch
    1892                    
    1893 00012300     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012310 00000000! 
    1894 00012330     09e0          movi    lex_backbreaker_anim,a0
         00012340 00000000! 
    1895 00012360     0d5f          calla   change_anim1a
         00012370 00000000! 
    1896                    
    1897 00012390                   WRSND   W_LUGER,HIPTOSS_T1,PUNCH_T2
    1898                    
    1899 00012530     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1900                    
    1901                    
    1902 00012540           mode_climbturnbkl       ;11
    1903                    
    1904 00012540     0960          rets
    1905                    
    1906                    
    1907                    
    1908 00012550           mode_waitanim   ;12
    1909                    
    1910 00012550     b5a0          move    *a13(ANIMODE),a0
         00012560     0660  
    1911 00012570     1fe0          btst    MODE_END_BIT,a0
    1912 00012580     ca03          jrz     pjaonot_ended
    1913                    
    1914 00012590     b7a0          move    *a13(CODE_ADDR),a0,L
         000125a0     0430  
    1915 000125b0     0920          call    a0
    1916                    
    1917 000125c0           pjaonot_ended
    1918 000125c0     0960          rets
    1919                    
    1920                    
    1921                    
    1922 000125d0           mode_grapple    ;13
    1923                    
    1924 000125d0     0960          rets
    1925                    
    1926                    
    1927                    
    1928 000125e0           mode_master     ;14
    1929                    
    1930 000125e0     0d5f          calla   master_keep_attached    ;keep slave attached to me
         000125f0 00000000! 
    1931                    
    1932 00012610     0960          rets
    1933                    
    1934                    
    1935 00012620           mode_slave      ;15
    1936 00012620     0960          rets
    1937                    
    1938                    
    1939 00012630           mode_headhold   ;16
    1940                    
    1941                            .ref    bozo_check
    1942 00012630     0d5f          calla   bozo_check
         00012640 00000000! 
    1943 00012660     c929          jrnc    scqyfail
    1944                    
    1945 00012670                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
    1946                    
    1947 00012810     09e0          movi    lex_vsuplex_anim,a0
         00012820 00000000! 
    1948 00012840     05ae          move    @PCNT,a14
         00012850 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

    1949 00012870     1fee          btst    0,a14
    1950 00012880     ca03          jrz     scqytag
    1951 00012890     09e0          movi    lex_4_graboh_anim,a0
         000128a0 00000000! 
    1952 000128c0     0d5f  scqytag calla   change_anim1a
         000128d0 00000000! 
    1953                    
    1954 000128f0     0960          rets
    1955                    
    1956 00012900           scqyfail
    1957 00012900     b7a0          move    *a13(WHOIHIT),a0,L
         00012910     0500  
    1958 00012920     b400          move    *a0(PLYRMODE),a0
         00012930     05c0  
    1959 00012940     0b40          cmpi    MODE_HEADHELD,a0
         00012950     ffec  
    1960 00012960     cb10          jrnz    scqyexit
    1961                    
    1962                    
    1963 00012970     b5a0          move    *a13(ANIMODE),a0
         00012980     0660  
    1964 00012990     1fa0          btst    MODE_UNINT_BIT,a0
    1965 000129a0     cb0b          jrnz    scqyno_interrupt
    1966                    
    1967 000129b0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000129c0     0ba0  
    1968 000129d0     0b80          andi    011111b,a0
         000129e0 ffffffe0  
    1969 00012a00                   X32     a0
    1970 00012a10     0b20          addi    scqyaction_table,a0
         00012a20 00012c40' 
    1971 00012a40     8600          move    *a0,a0,L
    1972 00012a50     0920          call    a0
    1973                    
    1974 00012a60           scqyno_interrupt
    1975 00012a60     0960          rets
    1976                    
    1977 00012a70           scqyexit
    1978 00012a70     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00012a80     0140  
    1979 00012a90     0d0e          subi    [6,0],a14
         00012aa0 fff9ffff  
    1980 00012ac0     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00012ad0     0140  
    1981                    
    1982 00012ae0     1941          movk    MOVE_DOWN_RIGHT,a1
    1983 00012af0     b5a0          move    *a13(OBJ_CONTROL),a0
         00012b00     0780  
    1984 00012b10     1f60          btst    B_FLIPH,a0
    1985 00012b20     ca01          jrz     scqyright
    1986 00012b30     18c1          movk    MOVE_DOWN_LEFT,a1
    1987 00012b40     b02d  scqyright       move    a1,*a13(FACING_DIR)
         00012b50     04c0  
    1988 00012b60     b02d          move    a1,*a13(NEW_FACING_DIR)
         00012b70     04d0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    1989                    
    1990 00012b80                   SETMODE NORMAL
    1991                    
    1992 00012c30     0960          rets
    1993                    
    1994 00012c40           scqyaction_table
    1995 00012c40 00013040'         .long   scqyz,scqypunch,scqyblock,scqyblock                     ;0-3
    1996 00012cc0 00013530'         .long   scqysuper_punch,scqysuper_punch,scqyblock,scqyblock     ;4-7
    1997 00012d40 00013540'         .long   scqykick,scqypunchkick,scqyblock,scqyblock              ;8-11
    1998 00012dc0 00013530'         .long   scqysuper_punch,scqypunchkick,scqyblock,scqyblock       ;12-15
    1999 00012e40 00013780'         .long   scqysuper_kick,scqysuper_kick,scqyblock,scqyblock       ;16-19
    2000 00012ec0 00013040'         .long   scqygraboh,scqygraboh,scqyblock,scqyblock               ;20-23
    2001 00012f40 00013780'         .long   scqysuper_kick,scqypunchkick,scqyblock,scqyblock        ;24-27
    2002 00012fc0 00013040'         .long   scqygraboh,scqygraboh,scqyblock,scqyblock               ;28-31
    2003                    
    2004                    
    2005 00013040           scqyblock
    2006 00013040           scqygraboh
    2007 00013040           scqyz           ;0
    2008 00013040     0960          rets
    2009                    
    2010                    
    2011 00013050           scqypunch               ;1
    2012 00013050     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013060 00000000! 
    2013 00013080     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013090     0bc0  
    2014 000130a0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000130b0     04d0  
    2015 000130c0     0b81          andi    0ch,a1
         000130d0 fffffff3  
    2016 000130f0     4801          cmp     a0,a1
    2017 00013100     cb21          jrnz    scqytag2
    2018 00013110                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2019                    
    2020                            .ref    lex_4_knee2_anim
    2021 000132b0     09e0          movi    lex_4_knee2_anim,a0
         000132c0 00000000! 
    2022 000132e0     0d5f          calla   change_anim1a
         000132f0 00000000! 
    2023 00013310     0960          rets
    2024                    
    2025 00013320           scqytag2
    2026 00013320                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2027 000134c0     09e0          movi    lex_4_knee2_anim,a0
         000134d0 00000000! 
    2028 000134f0     0d5f          calla   change_anim1a
         00013500 00000000! 
    2029 00013520     0960          rets
    2030                    
    2031 00013530           scqysuper_punch ;4
    2032 00013530     0960          rets
    2033                    
    2034 00013540           scqypunchkick
    2035 00013540           scqykick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2036 00013540     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013550 00000000! 
    2037 00013570     09e0          movi    lex_3_knee_to_head_anim,a0
         00013580 00000000! 
    2038 000135a0     0d5f          calla   change_anim1a
         000135b0 00000000! 
    2039 000135d0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2040 00013770     0960          rets
    2041                    
    2042 00013780           scqysuper_kick  ;16
    2043 00013780     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013790     0bc0  
    2044 000137a0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000137b0     04d0  
    2045 000137c0     0b81          andi    0ch,a1
         000137d0 fffffff3  
    2046 000137f0     4801          cmp     a0,a1
    2047 00013800     cbd3          jrnz    scqykick
    2048                    
    2049 00013810     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013820 00000000! 
    2050 00013840     09e0          movi    lex_knees_to_head_anim,a0
         00013850 00000000! 
    2051 00013870     0d5f          calla   change_anim1a
         00013880 00000000! 
    2052 000138a0                   WRSND   W_LUGER,KICK_T1,KICK_T2
    2053 00013a40     0960          rets
    2054                    
    2055                    
    2056 00013a50           mode_puppet2    ;17
    2057                    
    2058 00013a50     0960          rets
    2059                    
    2060                    
    2061 00013a60           mode_headheld   ;19
    2062 00013a60     b5a0          move    *a13(ANIMODE),a0
         00013a70     0660  
    2063 00013a80     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2064 00013a90     cb80          janz    mode_choking
         00013aa0 00000000! 
    2065                    
    2066                    
    2067 00013ac0     0d5f          calla   bozo_check
         00013ad0 00000000! 
    2068 00013af0     c92f          jrnc    zlzjfail
    2069                    
    2070 00013b00                   PUSH    a8
    2071 00013b10     4da8          move    a13,a8
    2072 00013b20     0d5f          CALLA   DO_REVERSAL
         00013b30 00000000! 
    2073 00013b50     0d5f          CALLA   DO_REVERSAL_MESS
         00013b60 00000000! 
    2074 00013b80                   PULL    a8
    2075                    
    2076 00013b90                   WRSND   W_LUGER,FLYKICK_T1,FLYKICK_T2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2077                    
    2078 00013d30     09e0          movi    lex_vsuplex_anim,a0
         00013d40 00000000! 
    2079 00013d60     05ae          move    @PCNT,a14
         00013d70 00000000! 
    2080 00013d90     1fee          btst    0,a14
    2081 00013da0     0300          jrz     zlzjtag
    2082 00013db0     0d5f  zlzjtag calla   change_anim1a
         00013dc0 00000000! 
    2083                    
    2084 00013de0     0960          rets
    2085 00013df0           zlzjfail
    2086 00013df0     b7a0          move    *a13(ATTACH_PROC),a0,L
         00013e00     03e0  
    2087 00013e10     cb0c          jrnz    zlzjno_luck
    2088                    
    2089 00013e20     b5a0          move    *a13(OBJ_YPOSINT),a0
         00013e30     0130  
    2090 00013e40     b5a1          move    *a13(GROUND_Y),a1
         00013e50     0570  
    2091 00013e60     4820          cmp     a1,a0                   ;a0-a1
    2092 00013e70     c706          jrgt    zlzjno_luck
    2093                    
    2094                    
    2095 00013e80     09e0          movi    lex_3_head_held_stand_anim,a0
         00013e90 00000000! 
    2096 00013eb0     0d5f          calla   change_anim1a
         00013ec0 00000000! 
    2097                    
    2098 00013ee0           zlzjno_luck
    2099 00013ee0     0960          rets
    2100                    
    2101 00013ef0           mode_chokehold  ;24
    2102 00013ef0     0960          rets
    2103                    
    2104                    
    2105          0003a000  fdzjVEL equ     3a000h          ;38000h ;30000h
    2106          00031000  fdzjDVEL        equ     31000h          ;27978h ;21f0eh
    2107                    
    2108                    
    2109 00013f00            SUBR lex_velocity_table
    2110                    
    2111                    
    2112 00013f00 00000000          .long   0,      -fdzjVEL        ;0 UP
    2113                    
    2114 00013f40 00031000          .long   fdzjDVEL,       -fdzjDVEL       ;1 UP-RIGHT
    2115                    
    2116 00013f80 0003a000          .long   fdzjVEL,        0       ;2 RIGHT
    2117                    
    2118 00013fc0 00031000          .long   fdzjDVEL,       fdzjDVEL        ;3 DOWN-RIGHT
    2119                    
    2120 00014000 00000000          .long   0,      fdzjVEL ;4 DOWN
    2121                    
    2122 00014040 fffcf000          .long   -fdzjDVEL,      fdzjDVEL        ;5 DOWN-LEFT
    2123                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2124 00014080 fffc6000          .long   -fdzjVEL,       0       ;6 LEFT
    2125                    
    2126 000140c0 fffcf000          .long   -fdzjDVEL,      -fdzjDVEL       ;7 UP-LEFT
    2127                    
    2128                    
    2129                    
    2130 00014100            SUBR lex_rotate_anims_table
    2131 00014100 00000000!         .long   lex_stand2_anim         ;new = up right
    2132 00014120 00000000!         .long   lex_2_to_4_turn_anim    ;    = down right
    2133 00014140 00000000!         .long   lex_2_to_6_turn_anim    ;    = down left
    2134 00014160 00000000!         .long   lex_2_to_8_turn_anim    ;    = up left
    2135                    
    2136 00014180 00000000!         .long   lex_4_to_2_turn_anim    ;new = up right
    2137 000141a0 00000000!         .long   lex_stand4_anim         ;    = down right
    2138 000141c0 00000000!         .long   lex_4_to_6_turn_anim    ;    = down left
    2139 000141e0 00000000!         .long   lex_4_to_8_turn_anim    ;    = up left
    2140                    
    2141 00014200 00000000!         .long   lex_6_to_2_turn_anim    ;new = up right
    2142 00014220 00000000!         .long   lex_6_to_4_turn_anim    ;    = down right
    2143 00014240 00000000!         .long   lex_stand6_anim         ;    = down left
    2144 00014260 00000000!         .long   lex_6_to_8_turn_anim    ;    = up left
    2145                    
    2146 00014280 00000000!         .long   lex_8_to_2_turn_anim    ;new = up right
    2147 000142a0 00000000!         .long   lex_8_to_4_turn_anim    ;    = down right
    2148 000142c0 00000000!         .long   lex_8_to_6_turn_anim    ;    = down left
    2149 000142e0 00000000!         .long   lex_stand8_anim         ;    = up left
    2150                    
    2151                    
    2152 00014300            SUBR lex_leg_anims_table
    2153 00014300 00000000!         .long   lex_walk1_f2_anim       ;1 (UP)
    2154 00014320 00000000!         .long   lex_walk1_f2_anim       ;2 (UP_RIGHT)
    2155 00014340 00000000!         .long   lex_walk1_f4_anim       ;3 (RIGHT)
    2156 00014360 00000000!         .long   lex_walk1_f4_anim       ;4 (DOWN_RIGHT)
    2157 00014380 00000000!         .long   lex_walk1_f4_anim       ;5 (DOWN)
    2158 000143a0 00000000!         .long   lex_walk1_f4_anim       ;6 (DOWN_LEFT)
    2159 000143c0 00000000!         .long   lex_walk1_f2_anim       ;7 (LEFT)
    2160 000143e0 00000000!         .long   lex_walk1_f2_anim       ;8 (UP-LEFT)
    2161                    
    2162 00014400 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2163 00014420 00000000!         .long   lex_walk2_f2_anim       ;2 (UP_RIGHT)
    2164 00014440 00000000!         .long   lex_walk2_f2_anim       ;3 (RIGHT)
    2165 00014460 00000000!         .long   lex_walk2_f4_anim       ;4 (DOWN_RIGHT)
    2166 00014480 00000000!         .long   lex_walk8_f4_anim       ;5 (DOWN)
    2167 000144a0 00000000!         .long   lex_walk8_f4_anim       ;6 (DOWN_LEFT)
    2168 000144c0 00000000!         .long   lex_walk4_f2_anim       ;7 (LEFT)
    2169 000144e0 00000000!         .long   lex_walk4_f2_anim       ;8 (UP-LEFT)
    2170                    
    2171 00014500 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2172 00014520 00000000!         .long   lex_walk2_f2_anim       ;2 (UP_RIGHT)
    2173 00014540 00000000!         .long   lex_walk2_f2_anim       ;3 (RIGHT)
    2174 00014560 00000000!         .long   lex_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2175 00014580 00000000!         .long   lex_walk4_f4_anim       ;5 (DOWN)
    2176 000145a0 00000000!         .long   lex_walk8_f4_anim       ;6 (DOWN_LEFT)
    2177 000145c0 00000000!         .long   lex_walk6_f2_anim       ;7 (LEFT)
    2178 000145e0 00000000!         .long   lex_walk6_f2_anim       ;8 (UP-LEFT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2179                    
    2180                    
    2181 00014600 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2182 00014620 00000000!         .long   lex_walk8_f2_anim       ;2 (UP_RIGHT)
    2183 00014640 00000000!         .long   lex_walk4_f4_anim       ;3 (RIGHT)
    2184 00014660 00000000!         .long   lex_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2185 00014680 00000000!         .long   lex_walk2_f4_anim       ;5 (DOWN)
    2186 000146a0 00000000!         .long   lex_walk6_f4_anim       ;6 (DOWN_LEFT)
    2187 000146c0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2188 000146e0 00000000!         .long   lex_walk6_f2_anim       ;8 (UP-LEFT)
    2189                    
    2190 00014700 00000000!         .long   lex_walk5_f2_anim       ;1 (UP)
    2191 00014720 00000000!         .long   lex_walk5_f2_anim       ;2 (UP_RIGHT)
    2192 00014740 00000000!         .long   lex_walk5_f4_anim       ;3 (RIGHT)
    2193 00014760 00000000!         .long   lex_walk5_f4_anim       ;4 (DOWN_RIGHT)
    2194 00014780 00000000!         .long   lex_walk5_f4_anim       ;5 (DOWN)
    2195 000147a0 00000000!         .long   lex_walk5_f4_anim       ;6 (DOWN_LEFT)
    2196 000147c0 00000000!         .long   lex_walk5_f2_anim       ;7 (LEFT)
    2197 000147e0 00000000!         .long   lex_walk5_f2_anim       ;8 (UP-LEFT)
    2198                    
    2199 00014800 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2200 00014820 00000000!         .long   lex_walk6_f2_anim       ;2 (UP_RIGHT)
    2201 00014840 00000000!         .long   lex_walk2_f2_anim       ;3 (RIGHT)
    2202 00014860 00000000!         .long   lex_walk6_f4_anim       ;4 (DOWN_RIGHT)
    2203 00014880 00000000!         .long   lex_walk2_f4_anim       ;5 (DOWN)
    2204 000148a0 00000000!         .long   lex_walk4_f4_anim       ;6 (DOWN_LEFT)
    2205 000148c0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2206 000148e0 00000000!         .long   lex_walk8_f2_anim       ;8 (UP-LEFT)
    2207                    
    2208 00014900 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2209 00014920 00000000!         .long   lex_walk6_f2_anim       ;2 (UP_RIGHT)
    2210 00014940 00000000!         .long   lex_walk6_f2_anim       ;3 (RIGHT)
    2211 00014960 00000000!         .long   lex_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2212 00014980 00000000!         .long   lex_walk4_f4_anim       ;5 (DOWN)
    2213 000149a0 00000000!         .long   lex_walk4_f4_anim       ;6 (DOWN_LEFT)
    2214 000149c0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2215 000149e0 00000000!         .long   lex_walk2_f2_anim       ;8 (UP-LEFT)
    2216                    
    2217 00014a00 00000000!         .long   lex_walk2_f2_anim       ;1 (UP)
    2218 00014a20 00000000!         .long   lex_walk4_f2_anim       ;2 (UP_RIGHT)
    2219 00014a40 00000000!         .long   lex_walk6_f2_anim       ;3 (RIGHT)
    2220 00014a60 00000000!         .long   lex_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2221 00014a80 00000000!         .long   lex_walk6_f4_anim       ;5 (DOWN)
    2222 00014aa0 00000000!         .long   lex_walk2_f4_anim       ;6 (DOWN_LEFT)
    2223 00014ac0 00000000!         .long   lex_walk2_f2_anim       ;7 (LEFT)
    2224 00014ae0 00000000!         .long   lex_walk2_f2_anim       ;8 (UP-LEFT)
    2225                    
    2226                    
    2227 00014b00            SUBR lex_torso_anims_table
    2228 00014b00 00000000!         .long   lex_torso2_anim         ;new = up right
    2229 00014b20 00000000!         .long   lex_2_to_4_turn2_anim   ;    = down right
    2230 00014b40 00000000!         .long   lex_2_to_6_turn2_anim   ;    = down left
    2231 00014b60 00000000!         .long   lex_2_to_8_turn2_anim   ;    = up left
    2232                    
    2233 00014b80 00000000!         .long   lex_4_to_2_turn2_anim   ;new = up right
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2234 00014ba0 00000000!         .long   lex_torso4_anim         ;    = down right
    2235 00014bc0 00000000!         .long   lex_4_to_6_turn2_anim   ;    = down left
    2236 00014be0 00000000!         .long   lex_4_to_8_turn2_anim   ;    = up left
    2237                    
    2238 00014c00 00000000!         .long   lex_6_to_2_turn2_anim   ;new = up right
    2239 00014c20 00000000!         .long   lex_6_to_4_turn2_anim   ;    = down right
    2240 00014c40 00000000!         .long   lex_torso6_anim         ;    = down left
    2241 00014c60 00000000!         .long   lex_6_to_8_turn2_anim   ;    = up left
    2242                    
    2243 00014c80 00000000!         .long   lex_8_to_2_turn2_anim   ;new = up right
    2244 00014ca0 00000000!         .long   lex_8_to_4_turn2_anim   ;    = down right
    2245 00014cc0 00000000!         .long   lex_8_to_6_turn2_anim   ;    = down left
    2246 00014ce0 00000000!         .long   lex_torso8_anim         ;    = up left
    2247                    
    2248                    
    2249                    
    2250                            .end

 No Errors,  No Warnings
