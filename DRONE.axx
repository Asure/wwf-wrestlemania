 ;Yoko tb on out of ring opp
 ;UT pin bug
 ;Atk sometimes instead of blk
 ;No leap head grab
 ;Drones wait in your face for too long.
 ;DL blk for hiptoss
 ;Harder
 ;Atk down opp
 ;Anti run code, esp out of ctrl
 ;Fling and chase
 ;Short repeat atks
 ;Do more head holds from in close - thru block
 ;Seek on a blocker, do headhold
 ;Make multi drones easier...
 ;Too many runs
 ;Break out of runs more...
 ;Sometimes, drone won't move from top of TB
 ;Don't let go charge moves if opp is blocking
 ;In multi-wrestler matches, delay longer on power moves from headhold or revs
 ;Ignore pushes from opponent, try an attack
 ;Pin fast
 ;Multi wres spacing
 ;Get in ring
 ;Check blocking
 ;Slide htoss on flying opp
	.file	"drone.asm"
	.title	"wrestling drone code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"mproc.equ"
	.include	"display.equ"
	.include	"gsp.equ"
	.include	"sys.equ"
	.include	"audit.equ"
	.include	"game.equ"
	.include	"anim.equ"
	.include	"plyr.equ"
	.include	"ring.equ"
	.include	"damage.equ"





	.ref	process_ptrs,PSTATUS,PSTATUS2
	.ref	PCNT,round_tickcount

	.ref	CHECK_COMBO_GO

	.ref	GET_ADJ
	.ref	p1winstreakd,p1rounds,current_round
	.ref	LADDER,CURRENT_LADDER

	.ref	change_anim1a
	.ref	hrt_4_taunt_anim,rzr_4_taunt_anim,und_4_taunt_anim
	.ref	yok_4_taunt_anim,shn_4_taunt_anim,bam_4_taunt_anim
	.ref	dnk_4_taunt_anim,lex_4_taunt_anim





	BSSX	droneoff	,16		;!0=Drone code off
	.bss	atkcnt_t,AT_NUM*NUM_WRES*16	;# times hit by each atk



BLKTEST	.equ	0

U_M	.equ	MOVE_UP<<5
D_M	.equ	MOVE_DOWN<<5
L_M	.equ	MOVE_LEFT<<5
R_M	.equ	MOVE_RIGHT<<5

P_M	.equ	PLAYER_PUNCH_VAL
B_M	.equ	PLAYER_BLOCK_VAL
SP_M	.equ	PLAYER_SPUNCH_VAL
K_M	.equ	PLAYER_KICK_VAL
SK_M	.equ	PLAYER_SKICK_VAL

	.if	MODE_NORMAL!=0
	.emsg	"FIX code!"
	.endif


	.text


 SUBR	drone_main

	.if	DEBUG
	move	@droneoff,a0
	jrnz	plqbxx
	.endif


	move	*a13(DRN_BUT),a6	;A6=Old buts
	move	*a13(DRN_JOY),a7	;A7=Old joy

	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a8,L		;A8=*Closest's proc

	move	*a13(DRN_SKILL),a10
	X16	a10			;A10=Skill for indexing (*16)

	move	*a13(PLYRMODE),a0
	move	a0,b6			;B6=My pmode
	move	*a8(PLYRMODE),a0
	move	a0,b7			;B7=Opp pmode


	movi	process_ptrs,a2
	movk	NUM_WRES,b0
	clr	b2			;B2=Team dist ranking (0-2)
	clr	b3			;B3=# alive on my team (0-3)
plqbfflp
	move	*a2+,a3,L
	jrz	plqbffnxt

	move	*a13(PLYR_SIDE),a0
	move	*a3(PLYR_SIDE),a1
	cmp	a0,a1
	jrne	plqbffnxt			;Not on my team?

	move	*a3(PLYRMODE),a0
	subk	MODE_DEAD,a0
	jreq	plqbffnxt

	addk	1,b3

	move	*a13(CLOSEST_NUM),a0
	move	*a3(CLOSEST_NUM),a1
	cmp	a0,a1
	jrne	plqbffnxt			;Diff opponents?

	move	*a13(CLOSEST_DIST),a0
	move	*a3(CLOSEST_DIST),a1
	cmp	a1,a0
	jrle	plqbffnxt			;I'm closer?

	addk	1,b2
plqbffnxt
	dsj	b0,plqbfflp

plqbffdn
	move	b2,b2
	jrz	plqbffdoit			;I'm closest?

	move	*a13(DRN_ACT_p),a9,L
	jrnz	plqbffx			;Script running?

	move	*a13(DRN_MODE),a0
	movi	-3,a1
	move	a1,*a13(DRN_MODE)	;Set mode
	addk	3,a0
	jrne	plqbnewmdm3		;Init hang back?
	jruc	plqbffx

plqbffdoit
	move	*a13(DRN_MODE),a0
	addk	3,a0
	jreq	plqbnewmd			;Set new mode if in hang back?

plqbffx

	move	@PCNT,a0
	sll	32-5,a0
	jrnz	plqbnomdchk

	movk	3,a0
	callr	rnd
	jrnz	plqbnomdchk

	move	*a13(DRN_MODE),a0
	addk	3,a0
	jrle	plqbmcnosc			;Hang back?
plqbnewmd
	movk	1,a0			;No aggressive
	move	@CURRENT_LADDER,a1,L	;* to position
	cmpi	LADDER,a1
	jreq	plqbmdeasy			;1st ladder?

	movk	3,a0			;Range
	cmpi	13*16,a10
	jrle	plqbmdeasy
	addk	1,a0			;More aggressive
plqbmdeasy
	callr	rndrng0
	subk	2,a0
	move	a0,*a13(DRN_MODE)	;-2 to 2

	move	*a13(DRN_ACT_p),a9,L
	jrnz	plqbmcnosc			;Script running?
	clr	a0
	move	a0,*a13(DRN_JOY)	;So we don't walk into ropes
plqbmcnosc
plqbnewmdm3
	movk	4,a2			;Rgt side
	move	*a13(OBJ_XPOSINT),a0
	move	*a8(OBJ_XPOSINT),a1
	sub	a1,a0
	jrge	plqbmetorgt
	movk	12,a2			;Left side
plqbmetorgt
	move	a2,*a13(DRN_SEEKDIR)

	movk	4,a0
	callr	rndrng0

	move	*a13(DRN_MODE),a1
	addk	3,a1
	jrne	plqbnodhb			;!Hang back?
	ANDK	1,a0			;Make 3-4 or 4-5
	addk	2,a0
	move	b2,a14
	add	a14,a0
plqbnodhb
	move	a0,*a13(DRN_SEEKDIST)

plqbnomdchk

	.if	BLKTEST
	jruc	plqbskmv
	.endif

	move	*a13(DRN_MODE),a0
	jrge	plqbskmv			;Aggressive?

	move	b6,b6
	jrnz	plqbskmv			;!MODE_NORMAL?

	move	*a13(DRN_ACT_p),a9,L
	jrnz	plqbskmv			;Script running?

	callr	drone_seekdirdist
plqbskmv


	move	*a13(DRN_BUTCHRG),a0
	jrz	plqbnochrgn

	move	*a13(DRN_BUTCHRGDLY),a0
	subk	1,a0
	move	a0,*a13(DRN_BUTCHRGDLY)
plqbnochrgn


	move	*a13(GETUP_TIME),a2
	jrle	plqbnogt

	movi	99,a0
	callr	rndrng0
	move	a10,a1
	addi	plqbgetup_t,a1
	move	*a1,a1
	cmp	a1,a0
	jrge	plqbdsabt

	subk	5,a2
	jrge	plqbgtok
	clr	a2
plqbgtok	move	a2,*a13(GETUP_TIME)
	jruc	plqbdsabt
plqbnogt

	move	*a13(DRN_DELAY),a0
	subk	1,a0
	jrle	plqbnewact
	move	a0,*a13(DRN_DELAY)
	jruc	plqbx
plqbnewact

	move	*a8(ATTACK_TIME),a4
	move	@round_tickcount,a5
	sub	a5,a4			;-=Attack passed, +=Ticks till atk
	jrlt	plqbnoblk

	movi	50,a1			;Closer Z allowed
	move	*a8(ATTACK_TYPE),a2
	cmpi	AT_PUSH,a2
	jreq	plqbnoblk
	cmpi	AT_MSL,a2
	jreq	plqbmsla			;Missile atk?

	move	*a13(CLOSEST_XDIST),a0
	cmpi	180,a0
	jrgt	plqbnoblk			;Too far?
	movi	100,a1
plqbmsla
	move	*a13(CLOSEST_ZDIST),a0
	cmp	a1,a0
	jrgt	plqbnoblk			;Too far?

	move	*a8(GETUP_TIME),a14
	jrgt	plqbnoblk			;Out of control?

	cmpi	MODE_INAIR2,b7
	jreq	plqbnoblk			;Jumping on me?

	btst	PLAYER_BLOCK_BIT,a6
	jrnz	plqbx			;Trying to blk?

	move	*a8(ATTACK_TYPE),a2
	move	*a13(PLYRNUM),a0
	movi	AT_NUM,a3
	mpys	a0,a3
	add	a2,a3
	X16	a3
	addi	atkcnt_t,a3

	move	*a3,a2			;# missed blks
	cmpi	10,a2
	jrlo	plqbacok
	movk	9,a2
plqbacok
	X16	a2
	addi	plqbblkatk_t,a2
	move	*a2,a2			;Get %

	move	b3,a14			;# on team
	subk	1,a14
	X32	a14
	sub	a14,a2			;Decrease per extra bud

	.if	BLKTEST
	movi	100,a2
	.endif

	movi	99,a0
	callr	rndrng0
	move	a10,a1
	addi	plqbblkbase_t,a1
	move	*a1,a1			;Base %
	add	a2,a1
	cmp	a1,a0
	jrge	plqbmissb

	cmpi	15,a4
	jrge	plqbminbtok		;Min time OK?
	movk	15,a4
plqbminbtok

	move	*a8(ATTACK_TYPE),a2
	cmpi	AT_LEAPING,a2
	jrne	plqbsblk			;!Leaping?


	move	a10,a0
	srl	4+2,a0			;Skill/4
	callr	rndrng0
	move	a0,a0
	jrz	plqbsblk			;Skip?

	move	a5,*a8(ATTACK_TIME)	;Cancel

	movi	slhtoss,a9		;Flip opp
	jruc	plqbnewsc

plqbsblk
	move	a4,*a13(DRN_DELAY)

	movk	B_M,a0			;Block it
	move	a0,*a13(DRN_BUT)

	cmpi	AT_PUPPET,a2
	jrne	plqbdsabt			;!Hip toss?

	movi	B_M+L_M+D_M,a0		;Special block
	move	a4,a3			;Dly
	clr	a9
	jruc	plqbsetbx

plqbmissb
	move	a5,*a8(ATTACK_TIME)	;Cancel

	move	*a3,a0			;Cnt+1
	addk	1,a0
	move	a0,*a3

plqbnoblk

	move	*a13(DRN_ACT_p),a9,L	;A9=*Script
	jrnz	plqbcact			;Continue script?


	clr	a2

	cmpi	MODE_BLOCK,b6
	jrne	plqbnps			;!Blking?
	btst	PLAYER_PUNCH_BIT,a6
	jrnz	plqbnps			;Already pushed?

	.if	BLKTEST
	jruc	plqbnps
	.endif

	movk	7,a0
	callr	rndrng0
	move	a0,a0
	jrnz	plqbnps			;Skip 88%?

	move	*a13(CLOSEST_XDIST),a0
	cmpi	110,a0
	jrgt	plqbnps			;Too far?
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	40,a0
	jrgt	plqbnps			;Too far?
	movk	P_M+B_M,a2		;Push
	move	a2,*a13(DRN_BUT)
	jruc	plqbx
plqbnps
	move	a2,*a13(DRN_BUT)

	.if	BLKTEST
	jruc	plqbx
	.endif


	move	b6,b6
	jrnz	plqbdoact			;!MODE_NORMAL?


	move	*a13(INRING),a0
	jrz	plqbringok			;In ring?

	move	*a8(INRING),a0
	jrnz	plqbringok			;Opp out?

	movi	drn_enterring,a9
	jruc	plqbnewsc
plqbringok

	move	*a13(DRN_MODE),a3
	cmpi	-3,a3
	jrle	plqbpass			;Hang back?

	cmpi	MODE_ONGROUND,b7
	jreq	plqbdoact			;Atk?

	cmpi	MODE_INAIR2,b7
	jrne	plqbonia
	movi	drn_opinair,a9		;Avoid jump
	jruc	plqbnewsc
plqbonia
	cmpi	MODE_RUNNING,b7
	jrne	plqbonrun
	move	*a13(CLOSEST_XDIST),a0
	cmpi	80,a0
	jrle	plqbonrun			;Too close?
	movi	drn_oprun,a9		;Anti run
	jruc	plqbnewsc
plqbonrun

	move	*a8(ATTACK_TIME),a0
	move	@round_tickcount,a1
	sub	a1,a0			;-=Attack passed, +=Ticks till atk
	addk	15,a0
	jrge	plqbdoact			;Get him after his atk (or no blk)?


	move	a3,a3
	jrlt	plqbpass			;Passive?

	movk	1fh,a0			;.6 sec
	cmpi	22*16,a10
	jrle	plqbcat
	movk	7,a0			;.15 sec
plqbcat
	callr	rnd
	jrz	plqbdoactpup		;Atk?


plqbpass
	move	@PCNT,a0		;Chk every 16
	addk	1,a0
	sll	32-4,a0
	jrnz	plqbx

	move	*a13(CLOSEST_XDIST),a1
	move	*a13(CLOSEST_ZDIST),a14
	cmp	a1,a14
	jrge	plqbbig
	move	a1,a14
plqbbig
	cmpi	70,a14
	jrlt	plqbdoactpup		;Opp in my face? Attack!

	move	*a13(DRN_MODE),a0
	addk	3,a0
	jrle	plqbx			;Hang back?

	move	@CURRENT_LADDER,a1,L	;* to position
	cmpi	LADDER,a1
	jreq	plqbnratk			;1st ladder?

	movk	0fh,a0			;Avg 4.8 sec
	callr	rnd
	jrz	plqbdoactpup		;Random attack?
plqbnratk
	move	b7,b7
	jrz	plqbx			;Opp MODE_NORMAL? Be passive
plqbdoactpup
	move	b7,a0
	subk	MODE_PUPPET2,a0
	jreq	plqbx
	subk	MODE_PUPPET-MODE_PUPPET2,a0
	jreq	plqbx
	cmpi	MODE_HEADHELD,b7
	jreq	plqbx
	cmpi	MODE_HEADHOLD,b7
	jreq	plqbx
	cmpi	MODE_ATTACHED,b7
	jreq	plqbx


plqbdoact
	cmpi	MODE_HEADHELD,b6
	jreq	plqbslctscrpt

	cmpi	MODE_ONGROUND,b6
	jrne	plqbnognd
	movi	drn_roll,a9
	jruc	plqbnewsc
plqbnognd
	cmpi	MODE_INAIR2,b6
	jrne	plqbnin2
	movi	drn_inair,a9
	jruc	plqbnewsc
plqbnin2
	cmpi	MODE_ONTURNBKL,b6
	jrne	plqbnotb
	movi	drn_ontb,a9
	jruc	plqbnewsc
plqbnotb
	cmpi	MODE_DEAD,b6
	jrne	plqbndead
	movk	7,a0
	callr	rnd
	jruc	plqbbutx
plqbndead
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	plqbunint			;Wait?

	cmpi	MODE_RUNNING,b6
	jrne	plqbnrun
	movi	drn_run,a9
	jruc	plqbnewsc
plqbnrun

	cmpi	MODE_HEADHOLD,b6
	jrne	plqbnhh

	clr	a0
	move	a0,*a13(DRN_BUTCHRG)	;Clr it


	move	a8,a3
	move	a13,a8
	calla	CHECK_COMBO_GO
	jrlt	plqbncmb			;Can't combo?
	move	a3,a8
	movi	drn_combo,a9
	jruc	plqbnewsc
plqbncmb
	move	a3,a8
plqbnhh

	move	*a13(DRN_BUTCHRG),a0
	jrz	plqbnochrg

	move	*a13(DRN_BUTCHRGDLY),a0
	jrgt	plqbnochrg

	cmpi	MODE_BLOCK,b7
	jreq	plqbnochrg			;Opp blking?

	move	*a13(DRN_BUTCHRG_p),a9,L ;Fire charge
	jruc	plqbnewsc
plqbnochrg

	move	*a13(CLOSEST_DIST),a14
	cmpi	200,a14
	jrgt	plqbopnb

	cmpi	MODE_BLOCK,b7
	jrne	plqbopnb			;!Blking?

	move	*a13(CLOSEST_ZDIST),a14
	cmpi	40,a14
	jrgt	plqbbsk

	move	*a13(CLOSEST_XDIST),a14
	cmpi	60,a14
	jrgt	plqbbsk

	move	*a8(STICK_REL_CUR),a14
	cmpi	MOVE_DOWN_LEFT,a14
	jreq	plqbbht			;Hip toss blocked?

	movi	M_shrtblkr,a9		;Attack
	jruc	plqbgetscrpt
plqbbht
	movi	M_shrtblkrdl,a9		;Attack
	jruc	plqbgetscrpt
plqbbsk
	movi	drn_seekclose,a9
	jruc	plqbnewsc
plqbopnb

	cmpi	MODE_DEAD,b7
	jrne	plqbopnd

	movi	drn_oppdead,a9
	jruc	plqbnewsc
plqbopnd

plqbslctscrpt

	move	*a13(WRESTLERNUM),a0
	X32	a0
	addi	plqbwnshort_t,a0

	move	*a13(CLOSEST_XDIST),a1
	move	*a13(CLOSEST_ZDIST),a14
	X2	a14			;Z*2
	cmp	a1,a14
	jrge	plqbhavebig
	move	a1,a14
plqbhavebig
	cmpi	100,a14
	jrlt	plqbshrt
	addi	plqbwnmed_t-plqbwnshort_t,a0

	cmpi	180,a14
	jrlt	plqbmed
	addi	plqbwnlong_t-plqbwnmed_t,a0
plqbshrt
plqbmed
	move	*a0,a9,L		;Get * mode list
	move	b6,a2
	move	b7,a3
plqbmdlp
	movb	*a9,a0			;My mode #
	addk	8,a9
	movb	*a9,a14			;His mode #
	addk	8,a9
	move	*a9+,a1,L		;* script * table

	move	a0,a0
	jrn	plqbinochk			;Don't chk?
	cmp	a2,a0
	jrne	plqbmdlp			;Not in mode?
plqbinochk
	move	a14,a14
	jrn	plqbdef			;Don't chk?
	cmp	a3,a14
	jrne	plqbmdlp			;Not in mode?
plqbdef
	move	a1,a9
plqbgetscrpt
	move	*a9+,a0			;# entries
	jrge	plqbneok			;!Headhold?
	abs	a0
	cmpi	26*16,a10
	jrle	plqbneok			;!Hard?
	movk	1,a0			;Only do first two
plqbneok
	callr	rndrng0
	X32	a0
	add	a0,a9
	move	*a9,a9,L		;* new script

plqbnewsc
	move	b6,a0
	move	a0,*a13(DRN_SPMODE)


	cmpi	MODE_HEADHOLD,b6
	jrne	plqbnhh2

	movk	1,a3
	cmpi	2,b3
	jrlt	plqbhhd1			;1 opp?
	movk	22,a3
plqbhhd1
	movi	sklhhdly_t,a0
	add	a10,a0			;+Offset
	move	*a0,a0
	callr	rndrng0
	add	a0,a3			;Increase per extra bud

	move	@PCNT,a0
	sll	32-1,a0
	jrz	plqbhhdok			;Skip half of checks?

	cmpi	65,a3
	jrle	plqbhhdok
	movi	65,a3			;Max delay
plqbhhdok
	clr	a0
	jruc	plqbsetbx
plqbnhh2

	cmpi	MODE_HEADHELD,b6
	jrne	plqbnhhe

	clr	a0
	move	a0,*a13(DRN_BUTCHRG)	;Clr it

	move	b3,a3			;# on team
	movk	7,a0
	callr	rnd
	jrz	plqbhrskmp			;12% skip multiplyr delay?
	subk	1,a3
	X16	a3
plqbhrskmp
	movi	sklhrdly_t,a0
	add	a10,a0			;+Offset
	move	*a0,a0
	callr	rndrng0
	addk	1,a0
	add	a0,a3			;Increase per extra bud

	move	@PCNT,a0
	sll	32-1,a0
	jrz	plqbhrdok			;Skip half of checks?

	cmpi	70,a3
	jrle	plqbhrdok
	movi	70,a3			;Max delay
plqbhrdok
	clr	a0
	jruc	plqbsetbx
plqbnhhe


plqbcact

	move	b6,a0
	jrz	plqbmdsame			;MODE_NORMAL?
	subk	MODE_BLOCK,a0
	jreq	plqbmdsame			;Treat as normal?
	move	*a13(DRN_SPMODE),a0
	move	b6,a1
	cmp	a1,a0
	.if	DEBUG
	jreq	plqbdsok
	jruc	plqbdsabt			;For breakpoint
plqbdsok
	.endif
	jrne	plqbdsabt

plqbmdsame

	.if	DEBUG
	move	a9,a9			;Chk script *
	jrz	plqba9ok
	cmpi	0ff000000h,a9
	jrhs	plqba9ok
	LOCKUP
plqba9ok
	.endif

plqbscplp
	move	*a9+,a0
	jrge	plqbnocd			;No command?

	sll	32-14,a0
	jrc	plqbdsdone			;Done? (Bit 14)

	srl	32-14,a0


	subk	1,a0			;plqb1
	jrne	plqbnseekt0

	callr	drone_seek
	jrz	plqbscplp

	subk	16,a9
	jruc	plqbdsdone
plqbnseekt0

	subk	1,a0			;plqb2
	jrne	plqbnrnda

	cmpi	MODE_BLOCK,b7
	jreq	plqbdsabt			;Blking?

	move	*a9+,a3,L		;*Skill table

	movi	99,a0
	callr	rndrng0
	add	a10,a3			;+Offset
	move	*a3,a1
	cmp	a1,a0
	jrlt	plqbscplp			;Cont?

	movk	10,a0
	move	a0,*a13(DRN_DELAY)

	jruc	plqbdsabt
plqbnrnda

	subk	1,a0			;plqb3
	jrne	plqbnwtint

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrz	plqbscplp			;Off?

	subk	16,a9
	jruc	plqbdsdone
plqbnwtint

	subk	1,a0			;plqb4
	jrne	plqbnaib

	cmpi	MODE_BLOCK,b7
	jrne	plqbscplp			;!Blocked?

	jruc	plqbdsabt
plqbnaib

	subk	1,a0			;plqb5
	jrne	plqbncall

	move	*a9+,a0,L
	call	a0

	jruc	plqbscplp
plqbncall

	subk	1,a0			;plqb6
	jrne	plqbnrj

	movi	99,a0
	callr	rndrng0
	move	*a9+,a1			;Percent to jmp
	move	*a9+,a2,L
	cmp	a1,a0
	jrge	plqbscplp

	move	a2,a9			;New addr
	jruc	plqbscplp
plqbnrj

	subk	1,a0			;plqb7
	jrne	plqbnjmp

	move	*a9+,a9,L
	jruc	plqbscplp
plqbnjmp

	exgpc	a9
	jruc	plqbscplp
plqbnocd

	move	*a9+,a3			;Get delay
plqbsetbx
	move	a0,a1
	sll	32-5,a0
	srl	32-5,a0
	move	a0,*a13(DRN_BUT)

	srl	5,a1
	move	*a13(FACING_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	plqbrgt			;Facing rgt?

	move	a1,a0			;0FHlip L&R bits
	move	a1,a14
	sll	32-2,a1
	srl	3,a0			;Bit0=Rgt
	sll	32-3,a14
	srl	31,a14
	sll	1,a14			;Bit1=Left
	or	a0,a1
	or	a14,a1
	rl	2,a1
plqbrgt
	move	a1,*a13(DRN_JOY)

	move	a3,*a13(DRN_DELAY)
	move	a3,a3
	jrgt	plqbdsdone
plqbdsabt
	clr	a9
plqbdsdone
	move	a9,*a13(DRN_ACT_p),L

plqbunint

plqbx
	move	*a13(DRN_BUT),a0
plqbbutx
	move	*a13(DRN_BUTCHRG),a14
	or	a14,a0
	move	a0,*a13(DRN_BUT)
	xor	a0,a6
	move	a6,a1
	and	a0,a6
	move	a6,*a13(DRN_BUTDT)
	andn	a0,a1
	move	a1,*a13(DRN_BUTUT)

	move	*a13(DRN_JOY),a0
	xor	a0,a7
	move	a7,a1
	and	a0,a7
	move	a7,*a13(DRN_JOYDT)
	andn	a0,a1
	move	a1,*a13(DRN_JOYUT)

plqbxx
	rets


SKLM	.macro	w,ad
	.word	:w:,:w:+:ad:,:w:+:ad:*2,:w:+:ad:*3,:w:+:ad:*4
	.endm

plqbgetup_t				;% to bump getup time
	SKLM	10,2
	SKLM	20,2
	SKLM	30,2
	SKLM	40,2
	SKLM	50,2
	SKLM	60,10
plqbblkbase_t				;Base % to block
	SKLM	10,2
	SKLM	20,2
	SKLM	30,1
	SKLM	35,1
	SKLM	40,1
	SKLM	47,7
plqbblkatk_t				;% to block per attack
	.word	0,10,20,30,40
	.word	50,50,50,50,50
sklhhdly_t				;Max delay on hh
	SKLM	150,-6
	SKLM	120,-6
	SKLM	90,-6
	SKLM	60,-6
	SKLM	28,-3
	SKLM	13,-2
sklhrdly_t				;Max delay on hh rev
	SKLM	150,-6
	SKLM	120,-6
	SKLM	90,-6
	SKLM	60,-6
	SKLM	28,-3
	SKLM	13,-2
sklrep_t				;% to repeat
	SKLM	20,4
	SKLM	45,2
	SKLM	55,4
	SKLM	75,2
	SKLM	85,2
	SKLM	90,3



plqbwnshort_t
	.long	bret_s_t,raz_s_t,utak_s_t,yoko_s_t
	.long	shawn_s_t,bam_s_t,doink_s_t,doink_s_t,lex_s_t
plqbwnmed_t
	.long	bret_m_t,raz_m_t,utak_m_t,yoko_m_t
	.long	shawn_m_t,bam_m_t,doink_m_t,doink_m_t,lex_m_t
plqbwnlong_t
	.long	bret_l_t,raz_l_t,utak_l_t,yoko_l_t
	.long	shawn_l_t,bam_l_t,doink_l_t,doink_l_t,lex_l_t



BBL	.macro	w,w2,l
	.byte	:w:,:w2:
	.long	:l:
	.endm

DS_CODE	.macro
	.word	8000h+0
	.endm
DS_CODEEND	.macro
	exgpc	a9
	.endm
DS_SEEKTIL0	.macro
	.word	8000h+1
	.endm
DS_RNDA	.macro	l
	.word	8000h+2
	.long	:l:
	.endm
DS_WTINT	.macro
	.word	8000h+3
	.endm
DS_ABIFBLK	.macro
	.word	8000h+4
	.endm
DS_CALL	.macro	a
	.word	8000h+5
	.long	:a:
	.endm
DS_RJMP	.macro	p,a
	.word	8000h+6,:p:
	.long	:a:
	.endm
DS_JMP	.macro	a
	.word	8000h+7
	.long	:a:
	.endm
DS_SLP1	.macro
	.word	0c000h+0
	.endm
DS_END	.macro
	.word	0,0
	.endm


bam_s_t
	BBL	MODE_HEADHOLD,-1,baM_hh
	BBL	MODE_HEADHELD,-1,baM_hhr
	BBL	MODE_OPPOVERHEAD,-1,baM_ooh
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,baM_n
bam_m_t
	BBL	MODE_HEADHOLD,-1,baM_hh
	BBL	MODE_HEADHELD,-1,baM_hhr
	BBL	MODE_OPPOVERHEAD,-1,baM_ooh
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,baMm_n

baM_n	;Normal
	.word	(baM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbspx
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbllsk		;Karate kick
	.long	ctjbspsk		;Pickup
baM_n_
baMm_n
	.word	(baMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbllsk		;Karate kick
	.long	ctjbspsk		;Pickup
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
baMm_n_
baM_hh	;Holding head
	.word	-(7-1)
	.long	ctjbbahhpg		;Pogo
	.long	ctjblrrsp		;Pile drvr
	.long	ctjbjk		;Pickup
	.long	ctjbbahhrsk	;Knees (3 way)
	.long	ctjbbahhrsk
	.long	ctjbbahhrsk
	.long	ctjbspsk2		;Neck brkr

baM_hhr ;Head held reversals
	.word	4-1
	.long	ctjbk
	.long	ctjbbahhpg		;Pogo
	.long	ctjblrrsp		;Pile drvr
	.long	ctjbspsk2		;Neck brkr

baM_ooh ;Holding opp over head
	.word	2-1
	.long	ctjbk		;Slam
	.long	ctjbdsk		;Back brkr

ctjbbahhrsk ;Knees
	.word	R_M+SK_M,2
	.word	0,5
	.word	SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, 0,4
	DS_RNDA	sklrep_t
	.word	SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, 0,4
	DS_RJMP	33,ctjbk		;Hip toss
	DS_RJMP	33,ctjbsp		;Pickup
	.word	D_M+SP_M,0	;Pile drvr
ctjbbahhpg
	.word	U_M,2, D_M,2, 0,2, D_M,2, SK_M,50
	DS_RNDA	sklrep_t
	.word	SP_M,2, 0,2, SP_M,2, 0,2, SP_M,2, 0,15	;Repeat
	DS_RNDA	sklrep_t
	.word	SP_M,2, 0,2, SP_M,2, 0,2, SP_M,2, 0,15
	.word	SP_M,2, 0,2, SP_M,2, 0,2, SP_M,0



utak_s_t
	BBL	MODE_HEADHOLD,-1,utM_hh
	BBL	MODE_HEADHELD,-1,M_hhr
	BBL	MODE_CHOKEHOLD,-1,utM_chold
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,utM_n
utak_m_t
	BBL	MODE_HEADHOLD,-1,utM_hh
	BBL	MODE_HEADHELD,-1,M_hhr
	BBL	MODE_CHOKEHOLD,-1,utM_chold
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,utMm_n

utM_n	;Normal
	.word	(utM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbspx
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbucut
	.long	ctjbutshootps	;Fire push ghosts
	.long	ctjbutshootpl	;Fire pull ghosts
	.long	ctjbuttombhit	;Smash with tombstone
	.long	ctjbjp		;Slide choke
utM_n_
utMm_n
	.word	(utMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbutshootps	;Fire push ghosts
	.long	ctjbutshootpl	;Fire pull ghosts
	.long	ctjbuttombhit	;Smash with tombstone
	.long	ctjbjp		;Slide choke
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
utMm_n_
utM_hh	;Holding head
	.word	-(6-1)
	.long	ctjbuddsk		;Pile drv
	.long	ctjblrrsp		;Neck brkr
	.long	ctjbuthhrp
	.long	ctjbucut
	.long	ctjbuttombhit	;Smash with tombstone
	.long	ctjbutdk		;Face slam

utM_chold ;Choke holding opp by neck
	.word	7-1
	.long	ctjbp
	.long	ctjbk
	.long	ctjbhtoss
	.long	ctjbucut
	.long	ctjbutchup
	.long	ctjbutdk		;Face slam
	.long	ctjbdsk		;Slam

ctjbutshootps
	.word	R_M,2, 0,2, R_M,2, K_M,2, 0,2
	DS_WTINT
	DS_ABIFBLK
	.word	P_M+K_M,0
ctjbutshootpl
	.word	L_M,2, 0,2, L_M,2, K_M,2, 0,2
	DS_WTINT
	DS_ABIFBLK
	.word	D_M+SP_M,0
ctjbuttombhit
	.word	R_M,2, 0,2, R_M,2, SK_M,5
	DS_RNDA	sklrep_t
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4	;Repeat
	DS_ABIFBLK
	DS_RNDA	sklrep_t
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,0

ctjbuthhrp ;Knee & hdbuts
	.word	R_M+P_M,2
	.word	0,5
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	DS_RNDA	sklrep_t
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	DS_RJMP	50,ctjbsp		;Fly kick
	.word	K_M,0		;Neck brkr

ctjbutchup ;Knee & hdbuts
	.word	U_M+P_M,2
	.word	0,5
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	DS_RNDA	sklrep_t
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	DS_RJMP	50,ctjbsp		;Fly kick
	.word	K_M,0		;Neck brkr

ctjbutdk	;Face slam
	.word	D_M,2, 0,2, D_M+K_M,2
	DS_RNDA	sklrep_t
	.word	0,5
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4	;Repeat
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	DS_RNDA	sklrep_t
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,0



doink_s_t
	BBL	MODE_HEADHOLD,-1,doM_hh
	BBL	MODE_HEADHELD,-1,doM_hhr
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,doM_n
doink_m_t
	BBL	MODE_HEADHOLD,-1,doM_hh
	BBL	MODE_HEADHELD,-1,doM_hhr
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,doMm_n

doM_n	;Normal
	.word	(doM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbspx
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbucut
	.long	ctjbdoham		;Hammer
	.long	ctjbdoeslap	;Ear slap
	.long	ctjbdopbig		;Boxing punch
doM_n_
doMm_n
	.word	(doMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbdoham		;Hammer
	.long	ctjbdoeslap	;Ear slap
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
doMm_n_
doM_hh	;Holding head
	.word	-(8-1)
	.long	ctjbuddskk		;Face slam
	.long	ctjblrrsp		;Pile drv
	.long	ctjbdoham
	.long	ctjbj2p		;Buzz
	.long	ctjbhhp3k		;P & fly kick
	.long	ctjbhhp4
	.long	ctjbhhp3pd		;P & pdrv
	.long	ctjbhhsk3pd	;K & pdrv

doM_hhr ;Head held reversals
	.word	3-1
	.long	ctjbk
	.long	ctjbuddskk		;Face slam
	.long	ctjblrrsp		;Pile drv

ctjbdoham	.word	R_M,2, 0,2, R_M,2, SK_M,10
	DS_RNDA	sklrep_t
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4	;Repeat
	DS_RNDA	sklrep_t
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,0

ctjbdoeslap
	.word	D_M,2, D_M+R_M,2, R_M,2, P_M,2
	DS_RNDA	sklrep_t
	.word	0,5, P_M,5, 0,5, P_M,5			;Repeat
	DS_RNDA	sklrep_t
	.word	0,5, P_M,5, 0,5, P_M,5
	.word	0,5, P_M,5, 0,5, P_M,0

ctjbdopbig	.word	P_M,2, 0,2, P_M,2, 0,2, P_M,2, 0,2, P_M,2, 0,2
	.word	P_M,2, 0,2, P_M,2, 0,2, P_M,0



yoko_s_t
	BBL	MODE_HEADHOLD,-1,yoM_hh
	BBL	MODE_HEADHELD,-1,M_hhr
	BBL	MODE_OPPOVERHEAD,-1,yoM_ooh
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,yoM_n
yoko_m_t
	BBL	MODE_HEADHOLD,-1,yoM_hh
	BBL	MODE_HEADHELD,-1,M_hhr
	BBL	MODE_OPPOVERHEAD,-1,yoM_ooh
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,yoMm_n

yoM_n	;Normal
	.word	(yoM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbspx
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbjp		;Speed jab
	.long	ctjbrrsk		;Scissor squish
	.long	ctjbrrp		;Gut push
	.long	ctjbspsk		;Pickup
yoM_n_
yoMm_n
	.word	(yoMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbjp		;Speed jab
	.long	ctjbrrsk		;Scissor squish
	.long	ctjbspsk		;Pickup
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
yoMm_n_
yoM_hh	;Holding head
	.word	-(4-1)
	.long	ctjbuddsk		;Vert suplex
	.long	ctjblrrsp		;Scissor squish
	.long	ctjbj2p		;Salt
	.long	ctjbucut

yoM_ooh ;Holding opp over head
	.word	2-1
	.long	ctjbk		;Slam
	.long	ctjbdsk		;Spinning slam



shawn_s_t
	BBL	MODE_HEADHOLD,-1,shM_hh
	BBL	MODE_HEADHELD,-1,shM_hhr
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,shM_n
shawn_m_t
	BBL	MODE_HEADHOLD,-1,shM_hh
	BBL	MODE_HEADHELD,-1,shM_hhr
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,shMm_n

shM_n	;Normal
	.word	(shM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbspx
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbllsk		;Karate kick
	.long	ctjbjkk		;Speed kick
	.long	ctjbrrsk		;Frankensteiner
	.long	ctjbrrk		;Sliding kick toss
	.long	ctjbjisp		;Flipslam
shM_n_
shMm_n
	.word	(shMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbllsk		;Karate kick
	.long	ctjbjkk		;Speed kick
	.long	ctjbrrsk		;Frankensteiner
	.long	ctjbrrk		;Sliding kick toss
	.long	ctjbjisp		;Flipslam
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
shMm_n_
shM_hh	;Holding head
	.word	-(8-1)
	.long	ctjbuddsk		;German suplex
	.long	ctjblrrsp		;Frankensteiner
	.long	ctjbrsk4k		;Quick knees
	.long	ctjbjkk		;Speed kick
	.long	ctjbrp		;Arm break
	.long	ctjbrsp4		;Jmp head butt
	.long	ctjbrk4		;Speed kick
	.long	ctjblrrk		;Kick toss

shM_hhr ;Head held reversals
	.word	5-1
	.long	ctjbk
	.long	ctjbuddsk		;German suplex
	.long	ctjblrrsp		;Frankensteiner
	.long	ctjblrrk		;Kick toss
	.long	ctjbjkk		;Speed kick



bret_s_t
	BBL	MODE_HEADHOLD,-1,brM_hh
	BBL	MODE_HEADHELD,-1,brM_hhr
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,brM_n
bret_m_t
	BBL	MODE_HEADHOLD,-1,brM_hh
	BBL	MODE_HEADHELD,-1,brM_hhr
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,brMm_n

brM_n	;Normal
	.word	(brM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbspx
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbucut
	.long	ctjbddp		;Leap ucut
	.long	ctjbjp		;Face rake
	.long	ctjbj2sp		;Rolling ucut
	.long	ctjbllsk		;Fast kick
brM_n_
brMm_n
	.word	(brMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbddp		;Leap ucut
	.long	ctjbjp		;Face rake
	.long	ctjbj2sp		;Rolling ucut
	.long	ctjbllsk		;Fast kick
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
brMm_n_
brM_hh	;Holding head
	.word	-(7-1)
	.long	ctjbuddsk		;Neck DDT
	.long	ctjblrrsp		;Pile drvr
	.long	ctjbucut
	.long	ctjbjpx		;Face drvr
	.long	ctjbrp		;Arm break
	.long	ctjbrsp		;Head to knee
	.long	ctjblrrp		;Knee to face

brM_hhr ;Head held reversals
	.word	4-1
	.long	ctjbk
	.long	ctjbuddsk		;Neck DDT
	.long	ctjblrrsp		;Pile drvr
	.long	ctjblrrp		;Kick toss



raz_s_t
	BBL	MODE_HEADHOLD,-1,rzM_hh
	BBL	MODE_HEADHELD,-1,rzM_hhr
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,rzM_n
raz_m_t
	BBL	MODE_HEADHOLD,-1,rzM_hh
	BBL	MODE_HEADHELD,-1,rzM_hhr
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,rzMm_n

rzM_n	;Normal
	.word	(rzM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbspx
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbucut
	.long	ctjbjp		;Down slash
	.long	ctjbrrk		;Rug slam
rzM_n_
rzMm_n
	.word	(rzMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbjp		;Down slash
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
rzMm_n_
rzM_hh	;Holding head
	.word	-(6-1)
	.long	ctjbuddsk		;P drvr
	.long	ctjblrrsp		;Razors edge
	.long	ctjbrzup4		;Slashes up
	.long	ctjbrzdp4		;Slashes dn
	.long	ctjbucut
	.long	ctjbrzuddksp	;Rug shake

rzM_hhr ;Head held reversals
	.word	4-1
	.long	ctjbk
	.long	ctjbuddsk		;P drvr
	.long	ctjblrrsp		;Razors edge
	.long	ctjbrzuddksp	;Rug shake

ctjbrzup4	.word	U_M+P_M,5, 0,5, P_M,5, 0,5, P_M,5, 0,5, P_M,0
ctjbrzdp4	.word	D_M+P_M,5, 0,5, P_M,5, 0,5, P_M,5, 0,5, P_M,0

ctjbrzuddksp
	.word	U_M,2, D_M,2, 0,2, D_M,2, K_M,2
	DS_RNDA	sklrep_t
	.word	0,20
	.word	SP_M,6, 0,6, SP_M,6, 0,6, SP_M,6, 0,6	;Repeat
	DS_RNDA	sklrep_t
	.word	SP_M,6, 0,6, SP_M,6, 0,6, SP_M,0



lex_s_t
	BBL	MODE_HEADHOLD,-1,lxM_hh
	BBL	MODE_HEADHELD,-1,lxM_hhr
	BBL	MODE_OPPOVERHEAD,-1,lxM_ooh
	BBL	-1,MODE_ONGROUND,M_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,lxM_n
lex_m_t
	BBL	MODE_HEADHOLD,-1,lxM_hh
	BBL	MODE_HEADHELD,-1,lxM_hhr
	BBL	MODE_OPPOVERHEAD,-1,lxM_ooh
	BBL	-1,MODE_ONGROUND,Mm_og
	BBL	-1,MODE_ONTURNBKL,M_opptbkl
	BBL	-1,MODE_CLIMBTURNBKL,M_opptbkl
	WL	-1,lxMm_n

lxM_n	;Normal
	.word	(lxM_n_-$)/32-1
	.long	ctjbrun
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjbspx
	.long	ctjbhgrab,ctjbhgrab,ctjbhgrab
	.long	ctjbflng
	.long	ctjbhtoss,ctjbhtoss
	.long	ctjbrrp		;Elbow to gut
	.long	ctjbspsk		;Pickup
lxM_n_
lxMm_n
	.word	(lxMm_n_-$)/32-1
	.long	drn_seek
	.long	drn_retreat
	.long	ctjbrun
	.long	ctjbsp
	.long	ctjbsk
	.long	ctjbflng
	.long	ctjbrrp		;Elbow to gut
	.long	ctjbspsk		;Pickup
	.long	ctjbfast		;Hyper
	.long	ctjbchrg
lxMm_n_
lxM_hh	;Holding head
	.word	-(4-1)
	.long	ctjbuddsk		;Neck DDT
	.long	ctjblrrsp		;Vert suplex
	.long	ctjbrsk4k		;Quick knees & v suplex
	.long	ctjbjk		;Pickup

lxM_hhr ;Head held reversals
	.word	4-1
	.long	ctjbk
	.long	ctjbuddsk		;Neck DDT
	.long	ctjblrrsp		;V suplex
	.long	ctjbjk		;Pickup

lxM_ooh ;Holding opp over head
	.word	3-1
	.long	ctjbp		;Slam
	.long	ctjbusp		;Head slam
	.long	ctjbusk		;Back brkr



M_og	;Opp on gnd
	.word	6-1
	.long	ctjbp,ctjbsp,ctjbk,ctjbsk
	.long	ctjboghg,ctjboghg
Mm_og
	.word	3-1
	.long	drn_seek
	.long	ctjbseeksp
	.long	ctjbseeksk

M_opptbkl ;Opp on turnbkl
	.word	1-1
	.long	ctjbrun

M_hhr	;Head held reversals
	.word	3-1
	.long	ctjbk
	.long	ctjbuddsk
	.long	ctjblrrsp

M_shrtblkr
	.word	2-1
	.long	ctjbhgrab
	.long	ctjbhtoss
M_shrtblkrdl
	.word	2-1
	.long	ctjbhgrab
	.long	ctjbspx

ctjbspx	.word	SP_M,2, 0,2, SP_M,2, 0,2, SP_M,2
	.word	SP_M,2, 0,2, SP_M,2, 0,2, SP_M,0

ctjbp	.word	P_M,0
ctjbsp	.word	SP_M,0
ctjbk	.word	K_M,0
ctjbsk	.word	SK_M,0
ctjbspsk	.word	SP_M+SK_M,0
ctjbrp	.word	R_M+P_M,0
ctjbrsp	.word	R_M+SP_M,0
ctjbrsp4	.word	R_M+SP_M,4, 0,4, SP_M,4, 0,4, SP_M,4, 0,4, SP_M,0
ctjbrk4	.word	R_M+K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4, K_M,0
ctjbrsk	.word	R_M+SK_M,0
ctjbrsk4k	.word	R_M+SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, 0,4, SK_M,4, K_M,0
ctjbrrp	.word	R_M,2, 0,2, R_M,2, P_M,0
ctjbrrk	.word	R_M,2, 0,2, R_M,2, K_M,0
ctjbrrsk	.word	R_M,2, 0,2, R_M,2, SK_M,0
ctjbllsk	.word	L_M,2, 0,2, L_M,2, SK_M,0
ctjbdp	.word	D_M+P_M,0
ctjbdk	.word	D_M+K_M,0
ctjbdsk	.word	D_M+SK_M,0
ctjbddp	.word	D_M,2, 0,2, D_M,2, P_M,0
ctjbusp	.word	U_M+SP_M,0
ctjbusk	.word	U_M+SK_M,0

ctjbrun
	DS_CALL	drone_chkrun
	.word	P_M+K_M,0	;Skipped if bad
	DS_END
hgrab
ctjbhgrab	.word	R_M,2, 0,2, R_M,2, SP_M,0
ctjbflng	.word	L_M,2, 0,2, L_M+SP_M,0		;Grab fling
slhtoss	.word	L_M,2, 0,2, L_M,2, P_M,0	;Hip toss
ctjbhtoss	.word	L_M,2, 0,2, L_M+P_M,0		;Hip toss
ctjbucut	.word	D_M+SP_M,0			;Uppercut

ctjbseeksp
	DS_SEEKTIL0
	.word	SP_M,0
ctjbseeksk
	DS_SEEKTIL0
	.word	SK_M,0
ctjbchrg
	DS_CALL	drone_chrg
	DS_END

ctjboghg	;Opp on gnd head grab
	.word	D_M,2, SP_M,0

ctjbfast	;Works once
	.word	L_M,2, L_M+D_M,2, D_M,2, D_M+R_M,2
	.word	R_M,2, R_M+U_M,2, U_M,2, U_M+L_M,0


ctjbhhp3k	;Punch*3, kick
	.asg	6,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
	.word	R_M+K_M,2
	.word	0,10
	DS_END

ctjbhhp4	;Punch*4
	.asg	6,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,2
	.word	0,10
	DS_END

ctjbhhp3pd	;Punch*3, piledriver
	.asg	6,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T
	.word	R_M+P_M,T, R_M,T, R_M+P_M,T, R_M,T+5
	.word	D_M+SP_M,2
	.word	0,10
	DS_END

ctjbhhsk3pd ;Knee*3, piledriver
	.asg	6,T
	.word	R_M+SK_M,T, R_M,T, R_M+SK_M,T, R_M,T
	.word	R_M+SK_M,T, R_M,T, R_M+SK_M,T, R_M,T
	.word	SP_M,2
	.word	0,10
	DS_END

ctjbj2p	.word	L_M+D_M,2
ctjbjp	.word	D_M,2, D_M+R_M,2, R_M,2, P_M,0
ctjbj2sp	.word	L_M+D_M,2
ctjbjsp	.word	D_M,2, D_M+R_M,2, R_M,2, SP_M,0
ctjbjk	.word	D_M,2, D_M+R_M,2, R_M,2, K_M,0
ctjbjkk	.word	D_M,2, D_M+R_M,2, R_M,2, K_M,4
	.word	0,4, K_M,4, 0,4, K_M,4
	.word	0,4, K_M,4, 0,4, K_M,0
ctjbjisp	.word	U_M,2, U_M+R_M,2, R_M,2, SP_M,0

ctjbjpx	.word	D_M,2, D_M+R_M,2, R_M,2, P_M,0
	DS_RNDA	sklrep_t
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,0

	;Reversals

ctjbuddsk
	.word	U_M,2, D_M,2, 0,2, D_M,2, SK_M,0

ctjbuddskk	;Face slam/Pile drv
	.word	U_M,2, D_M,2, 0,2, D_M,2, SK_M,2
	DS_RNDA	sklrep_t
	.word	0,8
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4	;Repeat
	DS_RNDA	sklrep_t
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,4, 0,4
	.word	K_M,4, 0,4, K_M,4, 0,4, K_M,0

ctjbuddsksp ;Repeat SP
	.word	U_M,2, D_M,2, 0,2, D_M,2, SK_M,2
	DS_RNDA	sklrep_t
	.word	SP_M,4, 0,4, SP_M,4, 0,4, SP_M,0
ctjblrrp
	.word	L_M,2, R_M,2, 0,2, R_M,2, P_M,0
ctjblrrsp
	.word	L_M,2, R_M,2, 0,2, R_M,2, SP_M,0
ctjblrrk
	.word	L_M,2, R_M,2, 0,2, R_M,2, K_M,0
ctjbspsk2
	.word	SP_M,2, SK_M,2, SP_M,2, SK_M,0



bret_l_t
raz_l_t
utak_l_t
yoko_l_t
shawn_l_t
bam_l_t
doink_l_t
lex_l_t
	BBL	-1,MODE_ONGROUND,ctjbmdog
	WL	-1,ctjbmdn
ctjbmdn
	.word	4-1
	.long	drn_seek
	.long	ctjbrun
	.long	drn_climbtb
	.long	drn_taunt
ctjbmdog
	.word	3-1
	.long	drn_seek
	.long	drn_seek
	.long	ctjbrun



 SUBRP	drone_chrg

	move	*a13(DRN_BUTCHRG),a14
	jrnz	gcdux			;Already charging?

	movk	20h,a0
	callr	rnd

	move	*a13(WRESTLERNUM),a1
	X64	a1
	addi	gcduwres_t,a1
	add	a0,a1
	move	*a1,a1,L		;Get * script

	move	*a1+,a0
	move	a0,*a13(DRN_BUTCHRG)
	move	*a1+,a0
	move	a0,*a13(DRN_BUTCHRGDLY)
	move	a1,*a13(DRN_BUTCHRG_p),L

gcdux
	rets

gcduwres_t
	.long	gcdubrt,gcdubrt
	.long	gcduraz,gcduraz2
	.long	gcduut,gcduut2
	.long	gcduyok,gcduyok
	.long	gcdushn,gcdushn2
	.long	gcdubam,gcdubam2
	.long	gcdudnk,gcdudnk2
	.long	0,0
	.long	gcdulex,gcdulex2

gcduraz
	.word	SP_M,TSEC*2		;Slashes
	DS_JMP	gcdurun
gcduut
	.word	P_M,TSEC*2		;Neck breaker
	DS_JMP	gcdurun
gcduyok
	.word	P_M,TSEC*2		;Salt throw
	DS_CODE
	movk	1,a0
	move	a0,*a13(DRN_MODE)	;Aggressive
	DS_CODEEND
	DS_JMP	gcdurun
gcdushn
	.word	P_M,TSEC*2		;Suplex
	DS_JMP	gcdurun
gcdubam
	.word	P_M,TSEC*2		;Fire punch
	DS_CODE
	clr	a0
	move	a0,*a13(DRN_BUTCHRG)	;Fire it
	DS_CODEEND
	.word	0,4
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4	;Repeat
	DS_RNDA	sklrep_t
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	DS_RNDA	sklrep_t
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,4, 0,4
	.word	P_M,4, 0,4, P_M,4, 0,4, P_M,0
gcdubam2
	.word	SP_M,TSEC*2		;Neck brkr
	DS_JMP	gcdurun
gcdudnk
	.word	P_M,TSEC*2		;Buzzer
	DS_JMP	gcdurun
gcdudnk2
	.word	P_M,TSEC*2		;Buzzer (leap)
	.word	R_M,2
	DS_CODE
	clr	a0
	move	a0,*a13(DRN_BUTCHRG)	;Fire it
	DS_CODEEND
	.word	R_M,2			;Need?
	DS_END
gcdulex
	.word	P_M,TSEC*2		;Smash
	DS_JMP	gcdurun
gcdulex2
gcdubrt
gcduraz2
gcduut2
gcdushn2
	.word	SK_M,TSEC*2		;Flying kick

gcdurun
	DS_CALL	drone_chkrun
	.word	P_M+K_M,0		;Run & end
	DS_CODE

	move	*a13(OBJ_XPOSINT),a0
	move	*a8(OBJ_XPOSINT),a14
	sub	a14,a0
	abs	a0
	cmpi	150,a0
	jrge	gcdurx			;X too far?

	move	*a13(OBJ_ZPOSINT),a1
	move	*a8(OBJ_ZPOSINT),a14
	sub	a14,a1
	abs	a1
	cmpi	40,a1
	jrge	gcdurx			;Z too far?

	clr	a0
	move	a0,*a13(DRN_BUTCHRG)	;Fire it
gcdurx
	DS_CODEEND
	DS_END




 SUBRP	drn_combo

	DS_CODE

	move	*a13(WRESTLERNUM),a0
	X32	a0
	addi	exqjwres_t,a0
	move	a9,a1
	move	*a0,a9,L		;Get * script
	jump	a1			;Ret

exqjwres_t
	.long	exqjbrt,exqjraz,exqjut,exqjyok
	.long	exqjshn,exqjbam,exqjdnk,exqjdnk,exqjlex
exqjbrt
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjbrt2
	.word	P_M,2
	DS_JMP	exqjcstrt
exqjbrt2
	.word	SK_M,2
	DS_JMP	exqjcstrt

exqjraz
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjraz2
	.word	SP_M,2
	DS_JMP	exqjcstrt
exqjraz2
	.word	K_M,2
	DS_JMP	exqjcstrt

exqjut
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjut2
	.word	SK_M,2
	DS_JMP	exqjcstrt
exqjut2
	.word	K_M,2
	DS_JMP	exqjcstrt

exqjyok
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjyok2
	.word	SP_M,2
	DS_JMP	exqjcstrt
exqjyok2
	.word	P_M,2
	DS_JMP	exqjcstrt

exqjshn
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjshn2
	.word	P_M,2
	DS_JMP	exqjcstrt
exqjshn2
	.word	K_M,2
	DS_JMP	exqjcstrt

exqjbam
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjbam2
	.word	SP_M,2
	DS_JMP	exqjcstrt
exqjbam2
	.word	P_M,2
	DS_JMP	exqjcstrt

exqjdnk
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjdnk2
	.word	SP_M,2
	DS_JMP	exqjcstrt
exqjdnk2
	.word	SK_M,2
	DS_JMP	exqjcstrt

exqjlex
	.word	R_M,2, 0,2, R_M,2, 0,2
	DS_RJMP	50,exqjlex2
	.word	SK_M,2
	DS_JMP	exqjcstrt
exqjlex2
	.word	K_M,2
	DS_JMP	exqjcstrt

	.asg	6,T
exqjcstrt
	.word	0,2
	DS_RJMP	25,exqjcsk
	DS_RJMP	25,exqjcp
	DS_RJMP	25,exqjck
exqjcsp
	.word	SP_M,T, 0,T, SP_M,T, 0,T
	.word	SP_M,T, 0,T, SP_M,T, 0,T
	DS_RNDA	sklrep_t
	DS_JMP	exqjcstrt
exqjcsk
	.word	SK_M,T, 0,T, SK_M,T, 0,T
	.word	SK_M,T, 0,T, SK_M,T, 0,T
	DS_RNDA	sklrep_t
	DS_JMP	exqjcstrt
exqjcp
	.word	P_M,T, 0,T, P_M,T, 0,T
	.word	P_M,T, 0,T, P_M,T, 0,T
	DS_RNDA	sklrep_t
	DS_JMP	exqjcstrt
exqjck
	.word	K_M,T, 0,T, K_M,T, 0,T
	.word	K_M,T, 0,T, K_M,T, 0,T
	DS_RNDA	sklrep_t
	DS_JMP	exqjcstrt




talglp
	DS_CODEEND
	DS_SLP1

 SUBRP	drn_seek

	DS_CODE

	move	b6,a0
	jrz	talgskok
	subk	MODE_BLOCK,a0
	jrne	talgx
talgskok
	movi	3fh,a0
	callr	rnd
	jrz	talgx
	callr	drone_seek
	jrnz	talglp
talgx
	DS_CODEEND
	DS_END



fshslp
	DS_CODEEND
	DS_SLP1

 SUBRP	drn_seekclose

	DS_CODE

	move	b6,a0
	jrz	fshsskok
	subk	MODE_BLOCK,a0
	jrne	fshsx
fshsskok
	movi	3fh,a0
	callr	rnd
	jrz	fshsx

	move	*a13(OBJ_XPOSINT),a14
	movk	32,a2
	move	*a8(OBJ_XPOSINT),a0
	cmp	a0,a14
	jrge	fshstorgt
	neg	a2
fshstorgt
	add	a2,a0

	move	*a8(OBJ_ZPOSINT),a1
	movk	23,a2
	callr	drone_seekxz
	jrnz	fshslp
fshsx
	DS_CODEEND
	DS_END



 SUBRP	drn_retreat

	DS_CODE
	movk	4,a0			;Far
	move	a0,*a13(DRN_SEEKDIST)
fifplp
	callr	drone_seekdirdist
	DS_CODEEND
	DS_SLP1
	DS_CODE
	movk	1fh,a0
	callr	rnd
	jrnz	fifplp

	DS_CODEEND
	DS_END



 SUBRP	drone_chkrun

	move	*a13(OBJ_XPOSINT),a0
	move	*a13(OBJ_ZPOSINT),a1

	move	*a13(FACING_DIR),a2

	move	*a13(INRING),a14
	jrnz	efxuout			;Out of ring?


	cmpi	MODE_ONGROUND,b7
	jreq	efxux

	move	*a13(CLOSEST_ZDIST),a1
	cmpi	70,a1
	jrge	efxux			;Z far enough?

	subk	30,a1
	jrle	efxux			;Z close enough?

	move	*a13(CLOSEST_XDIST),a0
	cmpi	150,a0
	jrge	efxux			;X far enough?


	jruc	efxubad


efxuout
	btst	PLAYER_RIGHT_BIT,a2
	jrz	efxuol			;Facing left?

	cmpi	RING_X_CENTER+500,a0
	jrge	efxubad			;Hit rgt crowd?

	cmpi	RING_TOP-10,a1
	jrlt	efxurrok
	cmpi	RING_BOT+10,a1
	jrgt	efxurrok
	cmpi	RING_X_CENTER,a0
	jrge	efxurrok
	cmpi	RING_X_CENTER-300,a0
	jrge	efxubad			;Hit rgt ring?
efxurrok
	jruc	efxux
efxuol
	cmpi	RING_X_CENTER-500,a0
	jrle	efxubad			;Hit lft crowd?

	cmpi	RING_TOP-10,a1
	jrlt	efxulrok
	cmpi	RING_BOT+10,a1
	jrgt	efxulrok
	cmpi	RING_X_CENTER,a0
	jrle	efxulrok
	cmpi	RING_X_CENTER+300,a0
	jrle	efxubad			;Hit lft ring?
efxulrok
	jruc	efxux


efxubad
	addk	32,a9			;Skip script run buttons

efxux
	rets



rvzarsk
	movk	10,a2
	callr	drone_seek2
	andni	MOVE_LEFT+MOVE_RIGHT,a0		;0 lft & rgt
	move	a0,*a13(DRN_JOY)
	DS_CODEEND
	DS_SLP1

 SUBRP	drn_run

	DS_CODE
	move	b6,a0
	subk	MODE_RUNNING,a0
	jreq	rvzamdok
	subk	MODE_BOUNCING-MODE_RUNNING,a0
	jrne	rvzaabrt
rvzamdok
	movi	01ffh,a0		;9.6 sec
	callr	rnd
	jrz	rvzabrkrun			;Breakout?

	move	*a13(OBJ_XVEL+16),a4
	sll	3,a4			;*8
	move	*a8(OBJ_XVEL+16),a1
	sll	5,a1			;*32

	move	*a8(OBJ_XPOSINT),a0
	add	a1,a0
	move	*a13(OBJ_XPOSINT),a1
	add	a4,a1
	move	a1,a3
	sub	a1,a0
	move	a4,a1
	xor	a0,a1
	abs	a0

	move	*a13(CLOSEST_ZDIST),a2

	move	*a13(INRING),a14
	jrz	rvzainr			;In ring?

	cmpi	300,a0
	jrgt	rvzaering			;Too far?

	move	a1,a1
	jrn	rvzabrkrun			;Running away?

	subk	30,a2
	jrgt	rvzabrkseek		;Too far?

	jruc	rvzacont

rvzainr
	move	a4,a4
	jrn	rvzalrp			;Towards L rope?

	cmpi	RING_X_CENTER+210,a3
	jrlt	rvzarpok			;Won't hit R rope?
	jruc	rvzachkopp
rvzalrp
	cmpi	RING_X_CENTER-210,a3
	jrgt	rvzarpok			;Won't hit L rope?
rvzachkopp
	move	*a8(GETUP_TIME),a14
	jrgt	rvzarpok			;Out of control?

	cmpi	MODE_ONGROUND,b7
	jreq	rvzarpok

	cmpi	300,a0
	jrgt	rvzarpok			;Opp X far?

	cmpi	MODE_RUNNING,b7
	jreq	rvzaoprun

	cmpi	180,a0
	jrgt	rvzarpok			;Opp X far?
rvzaoprun
	cmpi	90,a2
	jrlt	rvzabrkrun			;Opp Z close?

rvzarpok

	move	a1,a1
	jrn	rvzarsk			;Running away?
rvzacont
	cmpi	MODE_INAIR2,b7
	jreq	rvzabrkrun


	subk	30,a2
	jrgt	rvzarsk			;Z too far?

	cmpi	250,a0
	jrgt	rvzarsk			;X too far?

	move	a0,a2

	movi	120,a0
	callr	rndrng0
	addi	130,a0

	cmp	a0,a2
	jrgt	rvzarsk			;X too far?



	move	b7,a0
	subk	MODE_PUPPET2,a0
	jreq	rvzabrkrun
	subk	MODE_PUPPET-MODE_PUPPET2,a0
	jreq	rvzabrkrun
	cmpi	MODE_HEADHELD,b7
	jreq	rvzabrkrun
	cmpi	MODE_HEADHOLD,b7
	jreq	rvzabrkrun
	cmpi	MODE_ATTACHED,b7
	jreq	rvzabrkrun

	move	*a13(DRN_BUTCHRG),a0
	jrz	rvzanchrg
	move	*a13(DRN_BUTCHRGDLY),a0
	jrgt	rvzanchrg
	clr	a0
	move	a0,*a13(DRN_BUTCHRG)	;Fire it
	jruc	rvzaabrt
rvzanchrg
	DS_CODEEND
	DS_RJMP	33,rvzak
	DS_RJMP	33,rvzask
	.word	SP_M,0
rvzak	.word	K_M,0
rvzask	.word	SK_M,0

rvzaabrt
	DS_CODEEND
	DS_END

rvzabrkrun
	DS_CODEEND
	.word	L_M,0

rvzaering
	DS_CODEEND
	.word	L_M,2
	DS_JMP	drn_enterring

rvzabrkseek
	DS_CODEEND
	.word	L_M,2
	DS_JMP	drn_seek




 SUBRP	drn_oprun

	DS_CODE

	movk	7,a0
	callr	rnd
	jrnz	ppbbabrt			;Skip?

	move	*a8(OBJ_XPOSINT),a0
	move	*a13(OBJ_XPOSINT),a1
	sub	a1,a0
	move	*a8(OBJ_XVEL+16),a1
	xor	a0,a1
	abs	a0

	move	*a13(CLOSEST_ZDIST),a2
	cmp	a0,a2
	jrgt	ppbbabrt			;Z dist > X dist?

	move	a1,a1
	jrn	ppbbrun			;Running away?

	move	*a8(GETUP_TIME),a14
	jrgt	ppbbrun			;Out of control?

ppbbabrt
	DS_CODEEND
	DS_END

ppbbrun
	DS_CODEEND
	.word	P_M+K_M,0	;Run




 SUBRP	drn_roll

	DS_CODE
	callr	drone_chrg

	jruc	ozmvstrt

ozmvlp
	DS_CODEEND
	DS_SLP1
	DS_CODE
ozmvstrt
	cmpi	MODE_ONGROUND,b6
	jrne	ozmvx

	move	*a13(CLOSEST_XDIST),a0
	cmpi	150,a0
	jrgt	ozmvx			;Safe dist?

	move	*a13(CLOSEST_ZDIST),a0
	cmpi	70,a0
	jrgt	ozmvx			;Safe dist?

	clr	a2
	callr	drone_seek2
	jrz	ozmvx

	movk	3,a1			;Flip up & down
	xor	a1,a0
	move	a0,*a13(DRN_JOY)

	movi	7fh,a0
	callr	rnd
	jrnz	ozmvlp

ozmvx
	DS_CODEEND
	.word	B_M,TSEC-10		;Block while standing
	DS_END



 SUBRP	drn_climbtb

	DS_CODE
	move	b3,a0
	subk	1,a0
	jrle	cllmlp			;Only 1 on team?

	movk	1,a0
	callr	rnd
	jrnz	cllmx			;Skip 50%?

cllmlp
	DS_CODEEND
	DS_SLP1

 SUBRP	drn_ontb

	DS_CODE

	move	b7,a2

	cmpi	MODE_ONTURNBKL,b6
	jrne	cllmnot

	subk	MODE_ONTURNBKL,a2
	jreq	cllmdn			;He's up, so get dn?

	jruc	cllmjmp

cllmnot
	move	*a13(INRING),a0
	jrnz	cllmering			;!In ring?

	move	*a13(WRESTLERNUM),a0
	subk	3,a0
	jrne	cllmny			;!Yoko?
	move	*a8(INRING),a0
	jrnz	cllmx			;!In ring?
cllmny
	subk	MODE_ONTURNBKL,a2
	jreq	cllmx
	subk	MODE_INAIR2-MODE_ONTURNBKL,a2
	jreq	cllmx

	movi	RING_X_CENTER-225,a0
	move	*a13(OBJ_XPOSINT),a1
	cmpi	RING_X_CENTER,a1
	jrle	cllmlrp
	movi	RING_X_CENTER+225,a0
cllmlrp
	move	a0,a3
	movi	RING_TOP,a1
	movk	32,a2
	callr	drone_seekxz		;Seek to visinity
	jrnz	cllmnclose

	move	a3,a0
	movi	RING_TOP-10,a1
	clr	a2
	callr	drone_seekxz		;Push into turnbuckle

cllmnclose
	move	*a13(CLOSEST_XDIST),a0
	cmpi	120,a0
	jrgt	cllmlp			;Safe dist?

	move	*a13(CLOSEST_ZDIST),a0
	cmpi	70,a0
	jrgt	cllmlp			;Safe dist?

cllmx
	DS_CODEEND
	DS_END

cllmjmp
	clr	a6			;So we get dn transition
	DS_CODEEND
	.word	K_M,0
cllmdn
	DS_CODEEND
	.word	D_M,0
cllmering
	DS_CODEEND
	DS_JMP	drn_enterring



qahilp
	DS_CODEEND
	DS_SLP1

 SUBRP	drn_inair

	DS_CODE
	clr	a2
	callr	drone_seek2

	cmpi	MODE_INAIR2,b6
	jreq	qahilp

	DS_CODEEND
	DS_END



 SUBRP	drn_opinair

	DS_CODE

	movk	1,a0
	callr	rnd
	jrnz	cfnqrun			;Skip?
cfnqlp
	cmpi	MODE_INAIR2,b7
	jrne	cfnqk

	DS_CODEEND
	DS_SLP1
	DS_CODE

	move	*a13(CLOSEST_XDIST),a1
	move	*a13(CLOSEST_ZDIST),a14
	cmp	a1,a14
	jrge	cfnqbig
	move	a1,a14
cfnqbig
	cmpi	150,a14
	jrgt	cfnqlp			;Opp far?
cfnqk
	DS_CODEEND
	.word	K_M,0			;Jump up

cfnqrun
	DS_CODEEND
	.word	L_M+P_M+K_M,2	;Run away
	DS_END




xnielp
	DS_CODEEND
	DS_SLP1

 SUBRP	drn_enterring

	DS_CODE

	move	*a8(INRING),a0
	jrnz	xniex			;Opp out?

	move	*a13(INRING),a0
	jrz	xniex			;In ring?

	move	*a13(OBJ_XPOSINT),a14

	movi	RING_Z_CENTER,a1
	movi	RING_X_CENTER-260,a0
	cmp	a0,a14
	jrle	xniesk
	movi	RING_X_CENTER+260,a0
	cmp	a0,a14
	jrge	xniesk

	move	*a13(OBJ_ZPOSINT),a14

	movi	RING_X_CENTER,a0
	movi	RING_TOP-10,a1
	cmp	a1,a14
	jrle	xniesk
	movi	RING_BOT+10,a1
xniesk
	movk	10,a2
	callr	drone_seekxz		;Seek to visinity
	jrnz	xnielp

	DS_CODEEND
	.word	P_M+SP_M+K_M+SK_M+B_M,0	;Enter

xniex
	DS_CODEEND
	DS_END



 SUBRP	drn_taunt

	DS_CODE

	move	*a8(OBJ_ZPOSINT),a0
	move	*a13(OBJ_ZPOSINT),a1
	sub	a1,a0
	cmpi	100,a0
	jrlt	hjlax

	move	*a8(OBJ_XPOSINT),a0
	move	*a13(OBJ_XPOSINT),a1
	sub	a1,a0
	abs	a0
	cmpi	300,a0
	jrgt	hjlax

	movi	8000h+6*60,a0
	move	a0,*a13(RISK)

	move	*a13(WRESTLERNUM),a0
	X32	a0
	addi	hjlataunt_t,a0
	move	*a0,a0,L
	calla	change_anim1a
hjlax
	DS_CODEEND
	DS_END


hjlataunt_t
	.long	hrt_4_taunt_anim		;0 Bret Hart
	.long	rzr_4_taunt_anim		;1 Razor Ramon
	.long	und_4_taunt_anim		;2 Undertaker
	.long	yok_4_taunt_anim		;3 Yokozuna
	.long	shn_4_taunt_anim		;4 Shawn Michaels
	.long	bam_4_taunt_anim		;5 Bam Bam
	.long	dnk_4_taunt_anim		;6 Doink
	.long	0		  		;7 spare
	.long	lex_4_taunt_anim		;8 Lex Luger



 SUBRP	drn_oppdead

	DS_CODE
ozpclp
	clr	a0			;Close
	move	a0,*a13(DRN_SEEKDIR)
	move	a0,*a13(DRN_SEEKDIST)

	callr	drone_seekdirdist
	DS_CODEEND
	DS_SLP1
	DS_CODE

	movk	32,a1
	move	*a13(WRESTLERNUM),a0
	subk	2,a0
	jreq	ozpcut			;Undertaker?
	movi	90,a1
ozpcut
	move	*a13(CLOSEST_DIST),a0
	cmp	a1,a0
	jrle	ozpcx

	move	*a8(ANIMODE),a0		;Let ut walk through dead opps
	ori	MODE_OVERLAP,a0
	move	a0,*a8(ANIMODE)
ozpcnotut

	move	*a13(DRN_JOY),a0
	jrnz	ozpclp
ozpcx
	DS_CODEEND
	.word	P_M,0




 SUBRP	drone_seekdirdist

	move	*a13(DRN_SEEKDIR),a4	;0-f
	move	*a13(DRN_SEEKDIST),a3	;0-4
	move	a3,a0
	X16	a3
	X4	a0
	add	a0,a3			;*20

	move	a4,a2
	callr	mrycdrn_getxz
	jrnz	mrycok

	movk	7,b0
	move	a4,a5
mryclp
	addk	1,a4
	sll	32-4,a4
	srl	32-4,a4
	move	a4,a2
	callr	mrycdrn_getxz
	jrnz	mrycnewok

	subk	1,a5
	sll	32-4,a5
	srl	32-4,a5
	move	a5,a2
	callr	mrycdrn_getxz
	jrnz	mrycnew5ok

	dsj	b0,mryclp

	clr	a0
	move	a0,*a13(DRN_JOY)

	rets

mrycnew5ok
	move	a5,a4
mrycnewok
	move	a4,*a13(DRN_SEEKDIR)
mrycok
	movk	30,a2
	callr	drone_seekxz
	jrnz	mrycx

	move	*a13(DRN_MODE),a0
	addk	1,a0
	jrge	mrycx			;Was -1? Skip dir change

	move	a7,*a13(DRN_JOY)	;Restore to lessen glitch

	movk	3,a0			;>Get rnd +-2/3
	callr	rnd
	subk	1,a0
	jrnz	mrycrnz
	subk	2,a0			;0 into -2
mrycrnz
	addk	1,a0
	jrgt	mrycrpos
	subk	2,a0
mrycrpos

	add	a0,a4
	sll	32-4,a4
	srl	32-4,a4
	move	a4,*a13(DRN_SEEKDIR)

mrycx
	rets


mrycdrn_getxz
	add	a3,a2
	X16	a2
	addi	mrycsine_t,a2

	move	*a2(4*16),a14
	move	*a8(OBJ_XPOSINT),a0
	add	a14,a0

	cmpi	RING_X_CENTER-220,a0
	jrlt	mrycxzbad
	cmpi	RING_X_CENTER+220,a0
	jrgt	mrycxzbad

	move	*a2,a14
	move	*a8(OBJ_ZPOSINT),a1
	add	a14,a1

	cmpi	RING_TOP,a1
	jrlt	mrycxzbad
	cmpi	RING_BOT,a1
	jrle	mrycxzok
mrycxzbad
	clr	a2			;Set Z
mrycxzok
	move	a2,a2
	rets

mrycsine_t
	.word	-50,-46,-35,-19
	.word	0,19,35,46,50,46,35,19
	.word	0,-19,-35,-46,-50,-46,-35,-19

	.word	-100,-92,-71,-38
	.word	0,38,71,92,100,92,71,38
	.word	0,-38,-71,-92,-100,-92,-71,-38

	.word	-150,-139,-106,-57
	.word	0,57,106,139,150,139,106,57
	.word	0,-57,-106,-139,-150,-139,-106,-57

	.word	-200,-185,-141,-76
	.word	0,76,141,185,200,185,141,76
	.word	0,-76,-141,-185,-200,-185,-141,-76

	.word	-250,-231,-177,-95
	.word	0,95,177,231,250,231,177,95
	.word	0,-95,-177,-231,-250,-231,-177,-95

	.word	-300,-277,-212,-115
	.word	0,114,212,277,300,277,212,114
	.word	0,-114,-212,-277,-300,-277,-212,-115



 SUBRP	drone_seek

	movi	70,a2

 SUBRP	drone_seek2

	move	*a8(OBJ_XPOSINT),a0
	move	*a8(OBJ_ZPOSINT),a1



 SUBRP	drone_seekxz

	move	a3,b0

	move	*a13(OBJ_XPOSINT),a3
	sub	a0,a3

	clr	a0

	move	a3,a14
	abs	a3
	sub	a2,a3
	jrle	syxqonx
	move	a14,a14
	jrlt	syxqnolft
	subk	4,a0			;Left

syxqnolft	addk	8,a0			;Rgt
syxqonx
	move	*a13(OBJ_ZPOSINT),a3

	sub	a1,a3
	move	a3,a14
	abs	a3
	sub	a2,a3
	jrle	syxqonz
	move	a14,a14
	jrlt	syxqnoup
	subk	1,a0			;Up

syxqnoup	addk	2,a0			;Dn
syxqonz
	move	a0,*a13(DRN_JOY)

	move	b0,a3
	move	a0,a0
	rets



 SUBR	drone_calcskill

	move	*a13(PLYR_TYPE),a0
	jrz	ikclx			;Human?

	move	*a13(DRN_SKILLRNDM),a0

	move	@current_round,a3	;1-3
	subk	1,a3
	jrgt	ikcln1st

	movk	4,a0
	callr	rndrng0
	subk	2,a0
	move	a0,*a13(DRN_SKILLRNDM)
ikcln1st
	move	@CURRENT_LADDER,a5,L	;* to position
	subi	LADDER,a5
	sra	5,a5			;/32 (Gives 0-6)
	move	a5,a1
	sra	1,a1			;0-3
	add	a1,a5			;A5=0-9
	add	a0,a5			;-2 to 2 randomness

	clr	a4
	move	@PSTATUS2,a0
	btst	0,a0
	jrnz	ikclp1
	movk	16,a4
ikclp1
	movi	p1winstreakd,a0
	add	a4,a0
	move	*a0,a0
	jrlt	ikclloser			;Lost? (-2 per match lost)



	X2	a0



	add	a0,a5			;+1 per match won
ikclloser
	X2	a0
	add	a0,a5			;+2 per match won


	movi	p1rounds,a0
	add	a4,a0
	move	*a0,a0
	add	a0,a5			;+3 per round won
	X2	a0
	add	a0,a5

	X2	a3
	sub	a3,a5			;-2 per round past 1st


	movk	ADJDIFF,a0		;Get difficulty level (1-10)
	calla	GET_ADJ
	subk	2,a0
	X2	a0
	add	a0,a5			;+8 default
	jrge	ikclminok
	clr	a5
ikclminok
	cmpi	29,a5
	jrle	ikclmaxok
	movk	29,a5
ikclmaxok
	move	a5,*a13(DRN_SKILL)


	clr	a0
	movi	atkcnt_t,a1
	movi	AT_NUM*NUM_WRES,b0
ikclaclp
	move	a0,*a1+
	dsj	b0,ikclaclp

ikclx
	rets




 SUBRP	rnd

	move	@RAND,a1,L
	rl	a1,a1
	move	@HCOUNT,a14
	rl	a14,a1
	add	sp,a1
	move	a1,@RAND,L

	and	a1,a0
	rets



 SUBRP	rndrng0

	move	@RAND,a1,L
	rl	a1,a1
	move	@HCOUNT,a14
	rl	a14,a1
	add	sp,a1
	move	a1,@RAND,L

	addk	1,a0
	mpyu	a1,a0		;Condition codes not valid!

	rets







	.end

