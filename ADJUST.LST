TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "adjust.asm"
       2                            .width  132
       3                            .option b,d,l,t
       4                            .mnolist
       5                    
       6                            .include        "mproc.equ"
       7                            .include        "display.equ"
       8                            .include        "sys.equ"
       9                            .include        "game.equ"
      10                            .include        "link.equ"
      11                            .include        "menu.equ"
      12                            .include        "dip.equ"
      13                            .include        "macros.h"
      14                            .include        "sound.h"
      15                    
      16                            .include        "fontsimg.glo"
      17                    
      18 00000000                   .text
      19                    
      20                    
      21                            .DEF GO_ADJ
      22                            .DEF DO_ADJH
      23                            .DEF BCDBIN
      24                            .DEF BINBCD
      25                            .DEF SET_COIN_ADJ, MEN_ADJ, CKDIP, TAMPEREDP
      26                    
      27                            .globl  CLR_MAIN
      28                            .globl  ADJ_INST
      29                            .globl  CADJ_BOX
      30                            .globl  CLR_CUR
      31                            .globl  DO_BIG_LINE
      32                    
      33                            .ref    _switch_map_mode        
      34                    
      35                    
      36                            .ref    ST_STICK
      37                            .ref    L_MESS
      38                            .ref    MESS_MM
      39                            .ref    GET_ADJ
      40                            .ref    GET_CSPT
      41                            .ref    NO_CREDS
      42                            .ref    GET_FAC
      43                            .ref    MENU_TOP
      44                            .ref    HTOHXASC
      45                            .ref    STRCNRM
      46                            .ref    ANY_BUT
      47                            .ref    PUT_ADJ
      48                            .ref    CS_ENTS
      49                            .ref    STD_BORD
      50                            .ref    CMOS_VAL
      51                            .ref    LM_FINIS
      52                            .ref    INIT_HSR
      53                            .ref    LM_SETUP
      54                            .ref    CRED_P
      55                            .ref    B_MENU
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56                            .ref    BLNKAREA
      57                            .ref    GETSTICK
      58                            .ref    P_FORK
      59                            .ref    LD_CTAB
      60                            .ref    STRLNRM
      61                            .ref    RD7FONT
      62                            .ref    READ_DIP
      63                            .ref    HEXTOASC
      64                            .ref    F_ADC_S
      65                            .ref    BLNKHELP
      66                            .ref    COL_INST
      67                            .ref    H_SLAVE
      68                            .ref    STRRNRM
      69                            .ref    CLR_SCRN
      70                    
      71                    
      72                    
      73                    
      74                    
      75 00000000           GO_ADJ
      76 00000000     09e8          MOVI    MEN_ADJ,A8
         00000010 000027e0" 
      77                    
      78 00000030           GEN_ADJUST
      79 00000030     a30c          MOVE    A8,-*A12,L              ;PUSH MENU ON STACK
      80                    
      81 00000040     0d5f          CALLA   CMOS_VAL                ;CHECK OUT THE REGION
         00000050 00000000! 
      82 00000070     ca12          JRZ     SET_OK                  ;ITS OK.....CONTINUE....
      83                    
      84 00000080                   JSRP    GET_FAC                 ;BRING TO FACTORY SETTINGS OR QUIT.
      85 000000f0                   JSRP    ANY_BUT
      86                    
      87 00000160     0d5f          CALLA   CMOS_VAL                ;CAN'T GO IF WE'RE NOT OK NOW
         00000170 00000000! 
      88 00000190     cb30          JRNZ    GO_ADQ                  ;ITS NOT VALID....NO ADJUSTING!
      89                    
      90 000001a0           SET_OK
      91 000001a0     1820          MOVK    1,A0
      92 000001b0     a00c          MOVE    A0,-*A12,W              ;LIKE GEN_MENU...KEEP NUMBER ON STACK
      93                    
      94 000001c0           ADJ_LOOP
      95 000001c0     0d5f          CALLA   CLR_SCRN                ;CLEAR THE SCREEN!
         000001d0 00000000! 
      96                    
      97 000001f0     09e8          MOVI    ADJ_ADV,A8
         00000200 000055e0" 
      98 00000220                   JSRP    L_MESS                  ;PRINT THE NEW INSTRUCTIONS
      99                    
     100 00000290     b788          MOVE    *A12(WORD_SIZE),A8,L ;GET THE MENU
         000002a0     0010  
     101 000002b0                   JSRP    MENU_TOP             ;PRINT OUT THE TOP.
     102 00000320     09c9          MOVI    COLOR_RED,A9
         00000330     0303  
     103 00000340     0d5f          CALLA   COL_INST             ;PUT UP A DIFFERENT INSTR. BOX
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

         00000350 00000000! 
     104                    
     105 00000370     8589          MOVE    *A12,A9,W            ;GET INDEX TO USE.
     106 00000380                   JSRP    B_MENU               ;FETCH THE ENTRY TO ADJUST.
     107                    
     108                    
     109 000003f0     4d29          MOVE    A9,A9                ;0 IS RETURN TO MAIN MENU
     110 00000400     ca08          JRZ     GO_ADJX
     111                    
     112                    
     113 00000410     810c          MOVE    A8,*A12,W            ;PUT IT SAFELY ON OUR STACK.
     114                    
     115 00000420     b720          MOVE    *A9(AD_ROUT),A0,L    ;GET THE ROUTINE TO CALL FOR ACTIVATION
         00000430     0000  
     116 00000440     09e7          MOVI    ADJ_LOOP,A7
         00000450 000001c0' 
     117 00000470     a2ec          MOVE    A7,-*A12,L           ;PUSH RETURN ADDRESS
     118 00000480     0160          JUMP    A0                   ;"CALL THE ROUTINE (PASSING STRUCT IN A9)
     119                    
     120 00000490           GO_ADJX
     121 00000490     120c          addk    WORD_SIZE,a12        ;"pop" the position indicator
     122 000004a0           GO_ADQ
     123 000004a0     100c          addk    LONG_SIZE,a12        ;Pop menu
     124 000004b0                   RETP                         ;OK...RETURN!
     125                    
     126 000004e0           PRICE_ADJ
     127 000004e0     09e8          MOVI    MEN_CUST,A8           ;HANDLE JUST LIKE MAIN ADJ. MENU
         000004f0 00002c60" 
     128 00000510     c080          JAUC    GEN_ADJUST
         00000520 00000030' 
     129                    
     130 00000540           MULT_ADJ
     131 00000540     09e8          MOVI    MEN_MULT,A8           ;HANDLE JUST LIKE MAIN ADJ. MENU
         00000550 00003320" 
     132 00000570     c080          JAUC    GEN_ADJUST
         00000580 00000030' 
     133                    
     134 000005a0           GEN_ADJ:
     135 000005a0     1840          movk    2,a0                    ;Adjusting switch mapping mode
     136 000005b0     0780          move    a0,@_switch_map_mode,L
         000005c0 00000000! 
     137 000005e0     b32d          MOVE    A9,*A13(PDATA),L     ;SAVE THE STRUCTURE POINTER
         000005f0     0100  
     138                    
     139 00000600     4d28          MOVE    A9,A8                ;GET TO GENERAL POINTING REGISTER
     140 00000610                   JSRP    DO_IN_WHITE          ;GO FROM LF TO WHITE RIGHT AWAY.
     141                    
     142 00000680     4c00          MOVE    A0,A0
     143 00000690     cb50          JRNZ    ADJ_CAN              ;CANCELLED
     144 000006a0     0d3f          CALLR   CLR_MAIN             ;CLEAR OUT THE MAIN MENU REGION
         000006b0     00df  
     145 000006c0     0d3f          CALLR   ADJ_INST             ;PUT INSTRUCTIONS AT BOTTOM.
         000006d0     00f1  
     146 000006e0                   JSRP    ST_STICK             ;LOCKOUT STUCK SWITCHES
     147                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     148 00000750                   SLEEPK  2                    ;STOP RACE ON INSTRUCTIONS
     149 00000790           ADJ_CHNG
     150 00000790                   SLEEPK  1                    ;NOW LOOP ON STICK...EXIT
     151                    
     152 000007d0     09e5          MOVI    31000H,A5                ;TYPOMATIC....BOT HALF SAYS DON'T TIME OUT
         000007e0 00031000  
     153 00000800                   JSRP    GETSTICK                 ;ASK THE STICK HANDLER.......
     154 00000870     b7a8          MOVE    *A13(PDATA),A8,L         ;GET OUR POINTER
         00000880     0100  
     155 00000890     4c01          MOVE    A0,A1                    ;KEEP GETSTICK VALUE
     156 000008a0     caee          JRZ     ADJ_CHNG                 ;ITS ZERO....NO MORE WORK NEEDED
     157                    
     158 000008b0     b500          MOVE    *A8(AD_CMOS),A0,W        ;GET ADJ NUMBER
         000008c0     0060  
     159 000008d0     4c02          MOVE    A0,A2                    ;COPY FOR LATER
     160                    
     161 000008e0     0d3f          CALLR   GET_EADJ                  ;READ IT OUT (FIXING ZERO IF NEC)
         000008f0     0489  
     162 00000900     4c03          MOVE    A0,A3                     ;SAVE "OLD" VALUE
     163 00000910     0b41          CMPI    3,A1                     ;BUTTON......BACK TO ADJ MENU!
         00000920     fffc  
     164 00000930     ca21          JRZ     ADJ_BUTT                 ;YEP....WE'RE OUT OF HERE.
     165                    
     166 00000940     0b41          CMPI    2,A1
         00000950     fffd  
     167 00000960     ca03          JRZ     ADJ_DOWN                 ;ITS DOWN....
     168 00000970     0d3f          CALLR   INC_ADJ                   ;INCREMENT IT
         00000980     0031  
     169 00000990     c002          JRUC    ADJ_JOIN
     170                    
     171 000009a0           ADJ_DOWN:
     172 000009a0     0d3f          CALLR   DEC_ADJ                   ;DECREMENT IT
         000009b0     0025  
     173 000009c0           ADJ_JOIN:
     174 000009c0     4c40          MOVE    A2,A0                     ;ADJUSTMENT NUMBER
     175 000009d0     0d3f          CALLR   GET_EADJ                  ;READ IT OUT (FIXING ZERO IF NEC)
         000009e0     047a  
     176 000009f0     4803          CMP     A0,A3                     ;DID IT NOT CHANGE?
     177 00000a00     cad8          JRZ     ADJ_CHNG                  ;NOPE....NO ACTION!
     178 00000a10     09c3          movi    beep1_snd,a3
         00000a20     03d9  
     179 00000a30     0d5f          calla   SNDSND
         00000a40 00000000! 
     180 00000a60                   JSRP    DO_IN_WHITE            ;AND UPDATE THE ADJUSTMENT
     181                    
     182 00000ad0     c0cb          JRUC    ADJ_CHNG               ;AND LOOP!
     183                    
     184 00000ae0           DO_IN_WHITE
     185 00000ae0     0d3f          CALLR   CLR_CUR                ;CLEAR OUT CURRENT SETTING
         00000af0     0087  
     186 00000b00     09cb          MOVI    COLOR_WHITE,A11       ;THEY'RE STARING....NO HEADACHES
         00000b10     0202  
     187 00000b20     c080          JAUC    AD_CRVAL               ;PRINT THE NEW VALUE
         00000b30 00004980' 
     188                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     189 00000b50           ADJ_BUTT:
     190 00000b50     09c3          movi    beep2_snd,a3
         00000b60     03da  
     191 00000b70     0d5f          calla   SNDSND
         00000b80 00000000! 
     192 00000ba0           ADJ_CAN:
     193 00000ba0     1820          movk    1,a0
     194 00000bb0     0780          move    a0,@_switch_map_mode,L
         00000bc0 00000000! 
     195 00000be0                   RETP
     196                    
     197 00000c10           DEC_ADJ:
     198 00000c10     098f          MMTM    SP,A0,A1,A2,A3
         00000c20     f000  
     199 00000c30     4c03          MOVE    A0,A3                          ;COPY ORIGINAL VALUE
     200 00000c40     b701          MOVE    *A8(AD_DELTA),A1,L             ;GET UNITS BETWEEN VALUES
         00000c50     00b0  
     201 00000c60     0d3f          CALLR   MAKE_BIN_IF_NEC                ;CHANGE RADIX FOR MATH IF NECESSARY
         00000c70     0048  
     202 00000c80     4420          SUB     A1,A0                          ;REMOVE THIS FROM READ VALUE
     203 00000c90     c008          JRUC    FINISH_CHANGE                  ;GO TO COMMON ROUTINE TO WRAP IT UP
     204                    
     205 00000ca0           INC_ADJ:
     206 00000ca0     098f          MMTM    SP,A0,A1,A2,A3
         00000cb0     f000  
     207 00000cc0     4c03          MOVE    A0,A3                          ;COPY ORIGINAL VALUE
     208 00000cd0     b701          MOVE    *A8(AD_DELTA),A1,L             ;GET UNITS BETWEEN VALUES
         00000ce0     00b0  
     209 00000cf0     0d3f          CALLR   MAKE_BIN_IF_NEC
         00000d00     003f  
     210 00000d10     4020          ADD      A1,A0                         ;REMOVE THIS FROM READ VALUE
     211                    
     212 00000d20           FINISH_CHANGE:
     213 00000d20     0d3f          CALLR   BCD_IF_NEC                     ;BACK TO BCD AFTER THE MATH
         00000d30     004f  
     214 00000d40     0d3f          CALLR   PUT_IN_RANGE                   ;ADJUST TO ACCOUNT FOR WRAP AND LIMITS
         00000d50     0450  
     215 00000d60     b701          MOVE    *A8(AD_ZEQU),A1,L              ;This number becomes zero
         00000d70     00d0  
     216 00000d80     4801          CMP     A0,A1                          ;is this the number?
     217 00000d90     cb01          JRNZ    FC_NZ                          ;NOPE...STORE IT!
     218 00000da0     5600          CLR     A0                             ;USE ZERO IN PLACE OF THIS NUMBER!
     219                    
     220 00000db0           FC_NZ:  
     221 00000db0     4c01          MOVE    A0,A1                          ;WRITING REG
     222 00000dc0     4c40          MOVE    A2,A0                          ;ADJUSTMENT NUMBER
     223 00000dd0     0d5f          CALLA   PUT_ADJ                        ;WRITE IT BACK
         00000de0 00000000! 
     224 00000e00     4823          CMP     A1,A3                          ;DID THE NUMBER CHANGE?
     225 00000e10     ca0e          JRZ     NOT_COIN                       ;NOPE...DON'T LOAD IT UP!
     226 00000e20     0d3f          CALLR   DIRTY_IF_NEC            ;IF ITS A COIN VALUE TAKE NOTE!
         00000e30     0012  
     227                    
     228 00000e40     0b40          CMPI    ADJPRICE,A0             ;IS IT?
         00000e50     fffe  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     229 00000e60     cb09          JRNZ    NOT_COIN                ;NOT COIN
     230                    
     231 00000e70     0d5f          CALLA   LD_CTAB                 ;BATCH WRITE THE VALUES IN!
         00000e80 00000000! 
     232 00000ea0     0d5f          CALLA   NO_CREDS                ;REMOVE CREDITS AND FRACTIONS WHEN
         00000eb0 00000000! 
     233 00000ed0     0d5f          CALLA   CRED_P                  ;LINK-OUT!
         00000ee0 00000000! 
     234                    
     235 00000f00           NOT_COIN:
     236 00000f00     0d5f          CALLA   F_ADC_S                 ;MAKE CHECKSUM VALID!
         00000f10 00000000! 
     237 00000f30     09af          MMFM    SP,A0,A1,A2,A3
         00000f40     000f  
     238 00000f50     0960          RETS
     239                    
     240 00000f60           DIRTY_IF_NEC
     241                            
     242 00000f60     098f          MMTM    SP,A0,A1,A2
         00000f70     e000  
     243 00000f80     b502          MOVE    *A8(AD_FLAGS),A2,W        ;FETCH THE FLAGS
         00000f90     0110  
     244                    
     245 00000fa0     1fa2          BTST    VIRG_BIT,A2               ;DOES CHANGING THIS SAY SET VIRG BIT.
     246 00000fb0     ca05          JRZ     NOT_1ST_8                 ;NOPE
     247                    
     248 00000fc0     1a80          movk    ADJVIRGIN,a0
     249 00000fd0     5621          CLR     A1
     250 00000fe0     0d5f          CALLA   PUT_ADJ
         00000ff0 00000000! 
     251                    
     252 00001010           NOT_1ST_8
     253 00001010     1f82          BTST    SIX_BIT,A2                ;1ST 6?
     254 00001020     ca05          JRZ     NOT_1ST_6
     255                    
     256 00001030     1ac0          movk    ADJ1ST6,a0
     257 00001040     5621          CLR     A1
     258 00001050     0d5f          CALLA   PUT_ADJ
         00001060 00000000! 
     259 00001080           NOT_1ST_6
     260 00001080     1f62          BTST    HSR_BIT,A2                ;HIGH SCORE RESET NUM?
     261 00001090     ca03          JRZ     NOT_HSR                   ;NOPE
     262                    
     263 000010a0     0d5f          CALLA   INIT_HSR                  ;IT WAS CHANGED....STUFF THE VALUE!
         000010b0 00000000! 
     264                    
     265 000010d0           NOT_HSR
     266 000010d0     09af          MMFM    SP,A0,A1,A2
         000010e0     0007  
     267 000010f0     0960          RETS
     268                    
     269 00001100           MAKE_BIN_IF_NEC:
     270 00001100     098f          MMTM    SP,A2
         00001110     2000  
     271 00001120     b502          MOVE    *A8(AD_FLAGS),A2,W             ;GET THE FLAGS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

         00001130     0110  
     272 00001140     1fc2          BTST    BCD_BIT,A2                     ;BCD?
     273 00001150     ca0a          JRZ     MBINX                          ;NOPE
     274                    
     275 00001160     0d5f          CALLA   BCDBIN                         ;CONVERT A0 TO BINARY
         00001170 00005960' 
     276 00001190     4c02          MOVE    A0,A2                          ;SAVE
     277 000011a0     4c20          MOVE    A1,A0                          ;NOW A1
     278 000011b0     0d5f          CALLA   BCDBIN
         000011c0 00005960' 
     279 000011e0     4c01          MOVE    A0,A1
     280 000011f0     4c40          MOVE    A2,A0                          ;NOW PUT A0 BACK
     281 00001200           MBINX:  
     282 00001200     09af          MMFM    SP,A2
         00001210     0004  
     283 00001220     0960          RETS
     284                    
     285 00001230           BCD_IF_NEC:
     286 00001230     098f          MMTM    SP,A2
         00001240     2000  
     287 00001250     b502          MOVE    *A8(AD_FLAGS),A2,W             ;GET THE FLAGS
         00001260     0110  
     288 00001270     1fc2          BTST    BCD_BIT,A2                     ;BCD?
     289 00001280     ca03          JRZ     BINX                           ;NOPE
     290                    
     291 00001290     0d5f          CALLA   BINBCD                         ;BACK TO BCD
         000012a0 000057d0' 
     292                    
     293 000012c0           BINX:   
     294 000012c0     09af          MMFM    SP,A2
         000012d0     0004  
     295 000012e0     0960          RETS
     296                    
     297 000012f0           ADJ_CASH
     298 000012f0     f795          .WORD   0F7A5H-10H,8,08085H,0           ;CASH REGISTER SOUND
     299 00001330           ADJ_LBEEP
     300 00001330     f3e7  ADJ_BEEP        .WORD   0F3F7H-10H,020H,08081H,0                ;BEEP TONE
     301                    
     302 00001370           CLR_CUR:
     303 00001370     098f          MMTM    SP,A3,A4
         00001380     1800  
     304 00001390     09e3          MOVI    AM_HX,A3             ;THIS IS LEFT MARGIN OF HELP AREA
         000013a0 000000b8  
     305                    
     306 000013c0     09c4          MOVI    CUR_LRX,A4           ;RIGHT X
         000013d0     0185  
     307 000013e0     4464          SUB     A3,A4                ;A4 HAS X DISTANCE
     308                    
     309 000013f0     0b23          ADDI    ADJ_ULY*10000H,A3    ;UPPER LEFT Y
         00001400 00ac0000  
     310 00001420     0b24          ADDI    (256-ADJ_ULY)*10000H,A4  ;Y GOES TO BOTTOM OF SCREEN
         00001430 00540000  
     311 00001450     0d5f          CALLA   BLNKAREA                 ;ITS BLANK NOW!
         00001460 00000000! 
     312 00001480     09af          MMFM    SP,A3,A4
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

         00001490     0018  
     313 000014a0     0960          RETS
     314                    
     315 000014b0           CLR_MAIN
     316 000014b0     098f          MMTM    SP,A3,A4
         000014c0     1800  
     317 000014d0     09c3          MOVI    TIT_ULX,A3           ;LEFT EDGE
         000014e0     0005  
     318 000014f0     09e4          MOVI    AM_HX,A4         ;UP TO THIS EDGE
         00001500 000000b8  
     319 00001520     4464          SUB     A3,A4                ;X'S ARE SET.
     320 00001530     0b23          ADDI    INST_ULY*10000H,A3   ;TOP Y
         00001540 002d0000  
     321 00001560     0b24          ADDI    (400-INST_ULY)*10000H,A4  ;Y DISTANCE
         00001570 01630000  
     322 00001590     0d5f          CALLA   BLNKAREA
         000015a0 00000000! 
     323 000015c0     09af          MMFM    SP,A3,A4
         000015d0     0018  
     324 000015e0     0960          RETS
     325                    
     326                    
     327                    
     328                    
     329                    
     330                    
     331                    
     332                    
     333 000015f0           ADJ_INST:
     334 000015f0     b7a8          MOVE    *A13(PDATA),A8,L     ;PASS THE ADJUSTMENT POINTER
         00001600     0100  
     335 00001610     09e7          MOVI    ADJ_INST_P,A7
         00001620 00001680' 
     336 00001640     0d5f          CALLA   P_FORK               ;START IT UP!
         00001650 00000000! 
     337 00001670     0960          RETS
     338                    
     339                    
     340 00001680           ADJ_INST_P:
     341 00001680                   JSRP   ADJUSTING        ;PUT UP "ADJUSTING DIFFICULTY" MESSAGE
     342                    
     343 000016f0     4d43          MOVE    A10,A3          ;STASH # OF ARROWS WHERE IT WILL BE SAFE
     344 00001700     0d3f          CALLR   ADINBOX         ;PUT THE BOX OUT
         00001710     0017  
     345                    
     346 00001720     09e8          MOVI    INST_TO_ADJ,A8
         00001730 00004f70" 
     347 00001750                   JSRP    L_MESS          ;PRINT OUT INSTRUCTIONS
     348                    
     349 000017c0     09e8          MOVI    ADJ_ARROW,A8
         000017d0 000058b0" 
     350 000017f0                   JSRP    L_MESS
     351                    
     352 00001860     c080          JAUC    SUCIDE
         00001870 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     353                    
     354              007b  INBOX_HEIGHT     EQU     7BH
     355                    
     356 00001890           ADINBOX:
     357 00001890     098f          MMTM    SP,A10
         000018a0     0020  
     358 000018b0     09ca          MOVI    CUR_ULY-2,A10   
         000018c0     007b  
     359 000018d0     260a          SLL     16,A10
     360 000018e0     09c4          MOVI    TIT_ULX,A4           ;UPPER RIGHT X
         000018f0     0005  
     361 00001900     ef44          MOVY    A10,A4               ;UPPER RIGHT
     362                    
     363 00001910     09e5          MOVI    AM_RX,A5
         00001920 000000b6  
     364 00001940     ef45          MOVY    A10,A5               ;START WITH BASE Y
     365 00001950     0b25          ADDI    INBOX_HEIGHT*10000H,A5
         00001960 007b0000  
     366                    
     367 00001980     0d3f          CALLR   WH_BORD
         00001990     03d9  
     368 000019a0     09af          MMFM    SP,A10
         000019b0     0400  
     369 000019c0     0960          RETS
     370                    
     371 000019d0           ADJUSTING:
     372 000019d0     4d02          MOVE    A8,A2                ;PUT ADJUSTMENT BLOCK PTR WHERE ITS SAFE
     373 000019e0     09e4          MOVI    (CUR_ULY-31H)*10000H,A4        ;FOR DO_BORDER
         000019f0 004c0000  
     374 00001a10     0b04          ADDI    TIT_ULX,A4                     ;A4 IS REASONABLY EASY
         00001a20     0005  
     375                    
     376 00001a30     09e5          MOVI    ((CUR_ULY-2)+MB_YWID)*10000H,A5    ;OVERLAP THE ONE BELOW IT
         00001a40 007e0000  
     377 00001a60     0b25          ADDI    AM_RX,A5                       ;THIS IS RIGHT EDGE
         00001a70 000000b6  
     378                    
     379 00001a90     0d3f          CALLR   WH_BORD                        ;DO A WHITE BORDER
         00001aa0     03c8  
     380                    
     381 00001ab0     09e8          MOVI    MES_ADNAME,A8                  ;PUT THE ADJUSTMENT NAME UP
         00001ac0 00005540" 
     382 00001ae0     0d5f          CALLA   LM_SETUP
         00001af0 00000000! 
     383 00001b10     b648          MOVE    *A2(AD_MAIN),A8,L              ;GET THE MAIN MENU MESSAGE
         00001b20     0140  
     384 00001b30                   JSRP    LM_FINIS
     385                    
     386 00001ba0     09e8          MOVI    MES_ADJUSTING,A8
         00001bb0 00005440" 
     387 00001bd0                   JSRP    L_MESS
     388 00001c40                   RETP
     389                    
     390 00001c70           MULT_VAL
     391 00001c70     5684          CLR     A4
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

     392 00001c80     18c1          movk    6,a1                      ;Setup a box for our 3 lines
     393 00001c90     0d3f          CALLR   PADJ_BOX                  ;(a10 is set as y for the 3 lines)
         00001ca0     0380  
     394                    
     395 00001cb0     09e8          MOVI    M_MULTVAL,A8
         00001cc0 00005b60" 
     396 00001ce0     09cb          MOVI    COLOR_DECAY,A11
         00001cf0     3d3d  
     397 00001d00                   JSRP    PRINT_SMALL_LINE        ;HEADER FOR COIN SLOT VALUE
     398                    
     399 00001d70     09cb          MOVI    COLOR_WHITE,A11         ;DON'T GLOW INSIDE BOX IF THAT'S THE MODE
         00001d80     0202  
     400 00001d90     11ea          ADDK    15,A10
     401 00001da0     09e8          MOVI    M_MULTVAL1,A8
         00001db0 00005bf0" 
     402 00001dd0     09c0          MOVI    ADJLTOTMULT,A0
         00001de0     001e  
     403 00001df0                   JSRP    ADJ_LEFT_RIGHT
     404                    
     405 00001e60     116a          ADDK    11,A10
     406 00001e70     09e8          MOVI    M_MULTVAL2,A8
         00001e80 00005ca0" 
     407 00001ea0     09c0          MOVI    ADJRTOTMULT,A0
         00001eb0     0020  
     408 00001ec0                   JSRP    ADJ_LEFT_RIGHT
     409                    
     410 00001f30     116a          ADDK    11,A10
     411 00001f40     09e8          MOVI    M_MULTVAL3,A8
         00001f50 00005d50" 
     412 00001f70     09c0          MOVI    ADJCTOTMULT,A0
         00001f80     001f  
     413 00001f90                   JSRP    ADJ_LEFT_RIGHT
     414                    
     415 00002000     116a          ADDK    11,A10
     416 00002010     09e8          MOVI    M_MULTVAL4,A8
         00002020 00005e00" 
     417 00002040     09c0          MOVI    ADJXTOTMULT,A0
         00002050     0021  
     418 00002060                   JSRP    ADJ_LEFT_RIGHT
     419                    
     420 000020d0     116a          ADDK    11,A10
     421 000020e0     09e8          MOVI    M_MULTVAL5,A8
         000020f0 00005eb0" 
     422 00002110     09c0          MOVI    ADJBTOTMULT,A0
         00002120     0022  
     423 00002130                   JSRP    ADJ_LEFT_RIGHT
     424                    
     425 000021a0                   RETP
     426                    
     427                    
     428              000c  PDY      EQU     HELP_DY
     429              0006  PMARG    EQU     6
     430                    
     431 000021d0           PARAM_VAL
     432 000021d0     18a1          movk    5,a1                      ;Setup a box for our 3 lines
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     433 000021e0     0d3f          CALLR   ADJ_BOX                   ;(a10 is set as y for the 3 lines)
         000021f0     0330  
     434                    
     435                    
     436 00002200     0d3f          CALLR   GET_COIN_TITLE            ;COIN MODE
         00002210     0150  
     437 00002220     09e8          MOVI    MESS_GP,A8
         00002230 00006070" 
     438 00002250                   JSRP    SMALL_LEFT_RIGHT          ;PRINT THE LINES
     439                    
     440 000022c0     0b0a          ADDI    PDY,A10                 ;PUSH TO NEXT LINE
         000022d0     000c  
     441                    
     442 000022e0     09e2          MOVI    M_NO,A2                   ;ASSUME "NO"
         000022f0 0000c310" 
     443 00002310     1a60          movk    ADJFREPL,a0
     444 00002320     0d5f          CALLA   GET_ADJ                   ;GET THE FREE PLAY ADJUSTMENT
         00002330 00000000! 
     445 00002350     ca03          JRZ     NOT_FREE
     446 00002360     09e2          MOVI    M_YES,A2
         00002370 0000c330" 
     447                    
     448 00002390           NOT_FREE
     449 00002390     09e8          MOVI    MESS_FP,A8
         000023a0 000060e0" 
     450 000023c0                   JSRP    SMALL_LEFT_RIGHT          ;PRINT THE LINES
     451                    
     452 00002430     0b0a          ADDI    PDY,A10                 ;PUSH TO NEXT LINE
         00002440     000c  
     453                            
     454 00002450     1a40          movk    ADJMAXC,a0
     455 00002460     09e8          MOVI    MESS_MAX,A8
         00002470 00006140" 
     456 00002490                   JSRP    ADJ_LEFT_RIGHT          ;A0 = ADJUST  A8 = MESSAGE
     457 00002500     0b0a          ADDI    PDY,A10                 ;PUSH TO NEXT LINE
         00002510     000c  
     458 00002520     1980          movk    ADJCSTRT,a0             ;Get credits required to start
     459 00002530     09e8          MOVI    M_CTS_PL,A8                                     
         00002540 000061d0" 
     460 00002560                   JSRP    ADJ_LEFT_RIGHT          ;A0 = ADJUST  A8 = MESSAGE
     461 000025d0     0b0a          ADDI    PDY,A10                 ;PUSH TO NEXT LINE
         000025e0     000c  
     462 000025f0     19a0          movk    ADJCCONT,a0             ;Get credits required to continu
     463 00002600     09e8          MOVI    M_CTC_PL,A8                                     
         00002610 00006260" 
     464 00002630                   JSRP    ADJ_LEFT_RIGHT       ;A0 = ADJUST  A8 = MESSAGE
     465                    
     466 000026a0                   RETP
     467                    
     468 000026d0           ADJ_LEFT_RIGHT
     469 000026d0     4d03          MOVE    A8,A3                ;STASH MESSAGE
     470                    
     471 000026e0     0d5f          CALLA   GET_ADJ
         000026f0 00000000! 
     472 00002710     4c08          MOVE    A0,A8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     473 00002720     0d5f          CALLA   HEXTOASC             ;A8 POINTS TO NUMBER STRING
         00002730 00000000! 
     474                    
     475 00002750     4d02          MOVE    A8,A2
     476 00002760     4c68          MOVE    A3,A8                ;GET MESSAGE IN A8
     477                    
     478 00002770     0300          JRUC    SMALL_LEFT_RIGHT
     479                    
     480 00002780           SMALL_LEFT_RIGHT
     481 00002780     098c          MMTM    A12,A11,A6,A10,A9,A3
         00002790     1270  
     482                    
     483 000027a0     09c6          MOVI    COLOR_WHITE,A6      ;SOLID WHITE FOR THESE MULTI-LINERS
         000027b0     0202  
     484 000027c0     09eb          MOVI    RD7FONT,A11          ;USE BABY FONT
         000027d0 00000000! 
     485                    
     486 000027f0     09e9          MOVI    AM_HX+PMARG,A9    ;LEFT X IS INSIDE LEFT LINE
         00002800 000000be  
     487                    
     488 00002820     4d43          MOVE    A10,A3                  ;SAVE Y IN A3
     489 00002830     2603          SLL     16,A3
     490 00002840     ee69          MOVY    A3,A9                ;POINTER SET!
     491                    
     492 00002850     09ca          MOVI    SPACING07,A10
         00002860     0001  
     493                    
     494 00002870     5600          CLR     A0
     495                    
     496 00002880                   JSRP    STRLNRM              ;DO IT!
     497                    
     498 000028f0     4c48          MOVE    A2,A8                ;GET RIGHT JUSTIFIED STRING
     499 00002900     09c9          MOVI    TIT_LRX-PMARG,A9  ;INSIDE RIGHT MARGIN
         00002910     017f  
     500 00002920     ee69          MOVY    A3,A9                ;AT OUR Y
     501 00002930                   JSRP    STRRNRM              ;PRINT IT!
     502                    
     503 000029a0     09ac          MMFM    A12,A11,A6,A10,A9,A3
         000029b0     0e48  
     504 000029c0                   RETP
     505                    
     506 000029f0           COIN_SET
     507 000029f0     0d3f          CALLR   TAMPEREDP       ;HAS THE 1ST 6 COIN VALUE BEEN TAMPERED WITH?
         00002a00     00e7  
     508 00002a10     ca07          JRZ     SBO             ;YEP....SMALL BOX ONLY!
     509                    
     510                    
     511 00002a20     0d3f          CALLR   CLR_CUR
         00002a30     fe93  
     512 00002a40     09c1          MOVI    6,A1                    ;BIG BOX FOR OUTSIDE
         00002a50     0006  
     513 00002a60     18a4          MOVK    5,A4                    ; GROSS KLUDGE TO OFFSET BOX
     514 00002a70     0d3f          CALLR   CADJ_BOX
         00002a80     029d  
     515 00002a90     09c1  SBO     MOVI    1,A1                    ;DRAW A BOX TO HOLD 1 LINE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

         00002aa0     0001  
     516 00002ab0     5684          CLR     A4
     517 00002ac0     0d3f          CALLR   CADJ_BOX                  ;DRAW THE BOX....PASS BACK 1ST PLOT LINE
         00002ad0     0298  
     518                    
     519 00002ae0     09e3          MOVI    [ADJ_CULY+5,AM_HX+5],A3
         00002af0 009d00bd  
     520 00002b10     09e4          MOVI    [21,185],A4
         00002b20 001500b9  
     521 00002b40     0d5f          CALLA   BLNKAREA
         00002b50 00000000! 
     522 00002b70     09e3          MOVI    [ADJ_CULY+31,AM_HX+5],A3
         00002b80 00b700bd  
     523 00002ba0     09e4          MOVI    [58,185],A4
         00002bb0 003a00b9  
     524 00002bd0     0d5f          CALLA   BLNKAREA
         00002be0 00000000! 
     525                    
     526 00002c00     14aa          SUBK    5,A10
     527 00002c10     4d44          MOVE    A10,A4               ;KEEP THE Y HANDY.
     528                    
     529                    
     530 00002c20     0d3f          CALLR   GET_COIN_TITLE       ;GET TITLE FOR BIG BOX IN A2.
         00002c30     00ae  
     531                    
     532                    
     533 00002c40           COIN_TIT
     534 00002c40                   JSRP    DO_BIG_LINE             ;PRINT THIS LINE!
     535                    
     536 00002cb0     09cb          MOVI    COLOR_WHITE,A11         ;DON'T GLOW INSIDE BOX IF THAT'S THE MODE
         00002cc0     0202  
     537                    
     538 00002cd0     0d3f          CALLR   TAMPEREDP               ;HAS THE 1ST 6 COIN VALUE BEEN TAMPERED WITH?
         00002ce0     00b9  
     539 00002cf0     ca74          JRZ     NO_INFO                 ;YEP....JUST GIVE THE STARTS AND CONTINUES
     540                    
     541 00002d00     116a          ADDK    11,A10
     542 00002d10     260a          SLL     16,A10
     543 00002d20                   PUSHP   A10                     ;SAVE Y POSITION
     544                    
     545 00002d30     0d5f          CALLA   GET_CSPT                ;A6 POINTS AT THE CSELECT BLOCK
         00002d40 00000000! 
     546 00002d60     b6c2          MOVE    *A6(CS_LIST),A2,L       ;FETCH POINTER TO MESSAGE LIST
         00002d70     0190  
     547 00002d80     ca0d          JRZ     NO_HEADERS              ;NO LIST!
     548                    
     549 00002d90     09ca          MOVI    COIN_HEAD_Y,A10         ;AT THIS HEIGHT
         00002da0     00ba  
     550                    
     551 00002db0           NEXT_HEADER
     552 00002db0     9648          MOVE    *A2+,A8,L       
     553 00002dc0     ca09          JRZ     NO_HEADERS              ;HEADERS ARE OUT...CONTINUE
     554                    
     555 00002dd0                   JSRP    PRINT_SMALL_LINE        ;PRINT THE LINE
     556 00002e40     118a          addk    12,a10                  ;Push to next line
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

     557 00002e50     c0f5          JRUC    NEXT_HEADER
     558                    
     559 00002e60           NO_HEADERS
     560 00002e60     09e8          MOVI    M_SLOTVAL,A8
         00002e70 00005f70" 
     561 00002e90     09ca          MOVI    MESS_CTS,A10            ;SET Y FOR COIN SLOT LINE.
         00002ea0     00dd  
     562 00002eb0     09cb          movi    01212H,a11              ;Med blue
         00002ec0     1212  
     563 00002ed0                   JSRP    PRINT_SMALL_LINE        ;HEADER FOR COIN SLOT VALUE
     564                    
     565 00002f40     0d5f          CALLA   GET_CSPT                ;A6 POINTS AT THE CSELECT BLOCK
         00002f50 00000000! 
     566 00002f70     b6c8          MOVE    *A6(CS_SLOTS),A8,L      ;PRINT COIN SLOT INFO
         00002f80     01c0  
     567 00002f90     118a          addk    12,a10                  ;Push y up for a gap
     568 00002fa0                   JSRP    PRINT_SMALL_LINE        ;PRINT THE LINE
     569                    
     570 00003010     09e8          MOVI    TOST_MESS,A8
         00003020 000035e0' 
     571 00003040     0d5f          CALLA   LM_SETUP
         00003050 00000000! 
     572 00003070                   PUSH    A0
     573 00003080     8780          MOVE    *A12,A0,L
     574 00003090     ee09          MOVY    A0,A9
     575 000030a0     09c0          MOVI    ADJCSTRT,A0             ; CREDITS TO START
         000030b0     000c  
     576 000030c0     0d5f          CALLA   GET_ADJ 
         000030d0 00000000! 
     577 000030f0     4c08          MOVE    A0,A8
     578 00003100                   PULL    A0
     579 00003110     0d5f          CALLA   HEXTOASC
         00003120 00000000! 
     580 00003140                   JSRP    LM_FINIS
     581                            
     582 000031b0     09e8          MOVI    TOCONT_MESS,A8
         000031c0 00003680' 
     583 000031e0     0d5f          CALLA   LM_SETUP
         000031f0 00000000! 
     584 00003210                   PUSH    A0
     585 00003220     8780          MOVE    *A12,A0,L
     586 00003230     ee09          MOVY    A0,A9
     587 00003240     09c0          MOVI    ADJCCONT,A0             ; CREDITS TO START
         00003250     000d  
     588 00003260     0d5f          CALLA   GET_ADJ 
         00003270 00000000! 
     589 00003290     4c08          MOVE    A0,A8
     590 000032a0                   PULL    A0
     591 000032b0     0d5f          CALLA   HEXTOASC
         000032c0 00000000! 
     592 000032e0                   JSRP    LM_FINIS
     593                    
     594 00003350     09e8          MOVI    TOSTOC_MESS,A8
         00003360 00003470' 
     595 00003380     0d5f          CALLA   LM_SETUP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

         00003390 00000000! 
     596 000033b0                   PULLP   A3
     597 000033c0     ee69          MOVY    A3,A9
     598 000033d0                   JSRP    LM_FINIS
     599                    
     600                    
     601 00003440           NO_INFO
     602 00003440                   RETP                            ;DONE FOR NOW
     603                    
     604 00003470           TOSTOC_MESS
     605 00003470                    MESS_MAC  RD7FONT,SPACING07,AM_HX+116,0,COLOR_WHITE,STRCNRM,0
     606 00003510       54          .STRING "TO START.    TO CONTINUE.",0
     607 000035e0                   .EVEN
     608                    
     609 000035e0           TOST_MESS
     610 000035e0                    MESS_MAC  RD7FONT,SPACING07,AM_HX+27,0,COLOR_WHITE,STRRNRM,0
     611                    
     612 00003680           TOCONT_MESS
     613 00003680                    MESS_MAC  RD7FONT,SPACING07,AM_HX+110,0,COLOR_WHITE,STRRNRM,0
     614                    
     615 00003720           GET_COIN_TITLE
     616 00003720                   PUSH    a6
     617                    
     618 00003730     0d5f          CALLA   GET_CSPT                ;A6 POINTS AT THE CSELECT BLOCK
         00003740 00000000! 
     619 00003760     09e2          MOVI    MESS_DIP,A2
         00003770 00005b10" 
     620 00003790     0d3f          CALLR   CKDIP
         000037a0     0015  
     621 000037b0     ca0a          JRZ     gctx
     622                    
     623 000037c0     09e2          MOVI    MESS_TAMPERED,A2
         000037d0 00005ad0" 
     624 000037f0     1ac0          movk    ADJ1ST6,a0              ;Non-standard title if 1st 6 modified
     625 00003800     0d5f          CALLA   GET_ADJ
         00003810 00000000! 
     626 00003830     ca02          jrz     gctx                    ;Changed?
     627 00003840     b6c2          MOVE    *A6(CS_TITLE),A2,L      ;GET THE CSELECT TITLE FOR ITS VALUES
         00003850     0170  
     628                    
     629 00003860           gctx    PULL    a6
     630 00003870     0960          RETS
     631                    
     632 00003880           TAMPEREDP
     633 00003880                   PUSH    a0
     634 00003890     1ac0          movk    ADJ1ST6,a0      ;Just check the 1st 6
     635 000038a0     0d5f          CALLA   GET_ADJ         ;HAS IT BEEN TAMPERED WITH (0 MEANS YES)
         000038b0 00000000! 
     636 000038d0     09af          MMFM    SP,A0
         000038e0     0001  
     637 000038f0     0960          RETS
     638                    
     639 00003900           CKDIP
     640 00003900     0d5f          CALLA   READ_DIP
         00003910 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     641 00003930     0b80          ANDI    DPUSECMOS,A0
         00003940 fffffeff  
     642 00003960     4c00          MOVE    A0,A0
     643 00003970     0960          RETS
     644                    
     645                    
     646 00003980           SET_COIN_ADJ:
     647 00003980     098f          MMTM    SP,A0,A1,A6,A7
         00003990     c300  
     648 000039a0     09c0          MOVI    ADJLMULT,A0
         000039b0     0002  
     649 000039c0     94c1          MOVE    *A6+,A1,W
     650 000039d0     0d5f          CALLA   PUT_ADJ
         000039e0 00000000! 
     651 00003a00     09c0          MOVI    ADJCMULT,A0
         00003a10     0003  
     652 00003a20     94c1          MOVE    *A6+,A1,W
     653 00003a30     0d5f          CALLA   PUT_ADJ
         00003a40 00000000! 
     654 00003a60     09c0          MOVI    ADJRMULT,A0
         00003a70     0004  
     655 00003a80     94c1          MOVE    *A6+,A1,W
     656 00003a90     0d5f          CALLA   PUT_ADJ
         00003aa0 00000000! 
     657 00003ac0     09c0          MOVI    ADJXMULT,A0             ; NEW ADDITION, FOLKS!
         00003ad0     0005  
     658 00003ae0     94c1          MOVE    *A6+,A1,W
     659 00003af0     0d5f          CALLA   PUT_ADJ
         00003b00 00000000! 
     660 00003b20     09c0          MOVI    ADJDBVMULT,A0           ; NEW ADDITION, FOLKS!
         00003b30     0006  
     661 00003b40     94c1          MOVE    *A6+,A1,W
     662 00003b50     0d5f          CALLA   PUT_ADJ
         00003b60 00000000! 
     663 00003b80     09c0          MOVI    ADJCUNIT,A0
         00003b90     0007  
     664 00003ba0     94c1          MOVE    *A6+,A1,W
     665 00003bb0     0d5f          CALLA   PUT_ADJ
         00003bc0 00000000! 
     666 00003be0     09c0          MOVI    ADJBUNIT,A0
         00003bf0     0008  
     667 00003c00     94c1          MOVE    *A6+,A1,W
     668 00003c10     0d5f          CALLA   PUT_ADJ
         00003c20 00000000! 
     669 00003c40     09c0          MOVI    ADJMUNIT,A0
         00003c50     0009  
     670 00003c60     94c1          MOVE    *A6+,A1,W
     671 00003c70     0d5f          CALLA   PUT_ADJ
         00003c80 00000000! 
     672 00003ca0     09c0          MOVI    ADJCSTRT,A0
         00003cb0     000c  
     673 00003cc0     94c1          MOVE    *A6+,A1,W
     674 00003cd0     0d5f          CALLA   PUT_ADJ
         00003ce0 00000000! 
     675 00003d00     09c0          MOVI    ADJCCONT,A0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

         00003d10     000d  
     676 00003d20     94c1          MOVE    *A6+,A1,W
     677 00003d30     0d5f          CALLA   PUT_ADJ
         00003d40 00000000! 
     678 00003d60     09c0          MOVI    ADJCDIV,A0
         00003d70     000a  
     679 00003d80     94c1          MOVE    *A6+,A1,W
     680 00003d90     0d5f          CALLA   PUT_ADJ
         00003da0 00000000! 
     681 00003dc0     09c0          MOVI    ADJFRAC,A0
         00003dd0     000b  
     682 00003de0     94c1          MOVE    *A6+,A1,W
     683 00003df0     0d5f          CALLA   PUT_ADJ
         00003e00 00000000! 
     684 00003e20                   PUSH    A6
     685 00003e30     09c0          MOVI    ADJLTOTMULT,A0
         00003e40     001e  
     686 00003e50     94c1          MOVE    *A6+,A1,W
     687 00003e60     0d5f          CALLA   PUT_ADJ
         00003e70 00000000! 
     688 00003e90     09c0          MOVI    ADJCTOTMULT,A0
         00003ea0     001f  
     689 00003eb0     94c1          MOVE    *A6+,A1,W
     690 00003ec0     0d5f          CALLA   PUT_ADJ
         00003ed0 00000000! 
     691 00003ef0     09c0          MOVI    ADJRTOTMULT,A0
         00003f00     0020  
     692 00003f10     94c1          MOVE    *A6+,A1,W
     693 00003f20     0d5f          CALLA   PUT_ADJ
         00003f30 00000000! 
     694 00003f50     09c0          MOVI    ADJXTOTMULT,A0
         00003f60     0021  
     695 00003f70     94c1          MOVE    *A6+,A1,W
     696 00003f80     0d5f          CALLA   PUT_ADJ
         00003f90 00000000! 
     697 00003fb0     09c0          MOVI    ADJBTOTMULT,A0
         00003fc0     0022  
     698 00003fd0     94c1          MOVE    *A6+,A1,W
     699 00003fe0     0d5f          CALLA   PUT_ADJ
         00003ff0 00000000! 
     700 00004010                   PULL    A6
     701                    
     702 00004020     1a80          movk    ADJVIRGIN,a0            ;THIS SAYS 1ST 8 UNTOUCHED.
     703 00004030     1821          movk    1,a1
     704 00004040     0d5f          calla   PUT_ADJ
         00004050 00000000! 
     705                    
     706 00004070     1ac0          movk    ADJ1ST6,a0              ;THIS SAYS 1ST 6 UNTOUCHED.
     707 00004080     1821          movk    1,a1
     708 00004090     0d5f          calla   PUT_ADJ                 ;DONE!
         000040a0 00000000! 
     709                    
     710 000040c0     0d5f          CALLA   F_ADC_S                 ; KEEP THE WORLD A HAPPY PLACE
         000040d0 00000000! 
     711                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

     712 000040f0     09af          MMFM    SP,A0,A1,A6,A7
         00004100     00c3  
     713 00004110     0960          RETS
     714                    
     715 00004120           PRINT_SMALL_LINE
     716 00004120     098c          MMTM    A12,A11,A6,A10,A9
         00004130     0270  
     717                    
     718 00004140     4d66          MOVE    A11,A6               ;COLOR SET
     719 00004150     09eb          MOVI    RD7FONT,A11          ;USE BABY FONT
         00004160 00000000! 
     720                    
     721 00004180     09c9          MOVI    AM_HX,A9,W           ;GET LEFT X
         00004190     00b8  
     722 000041a0     0d3f          CALLR   LEFT_TO_CENTER       ;CONVERT IT
         000041b0     0076  
     723                    
     724 000041c0     4d40          MOVE    A10,A0
     725 000041d0     2600          SLL     16,A0
     726 000041e0     ee09          MOVY    A0,A9                ;POINTER SET!
     727                    
     728 000041f0     09ca          MOVI    SPACING07,A10
         00004200     0001  
     729                    
     730 00004210     5600          CLR     A0
     731                    
     732 00004220                   JSRP    STRCNRM              ;DO IT!
     733                    
     734 00004290     09ac          MMFM    A12,A11,A6,A10,A9
         000042a0     0e40  
     735 000042b0                   RETP
     736                    
     737                    
     738 000042e0           DO_ADJH
     739 000042e0     0d5f          CALLA   BLNKHELP             ;BLANK OUT THE AREA WE'RE PLOTTING!
         000042f0 00000000! 
     740 00004310     4c28          MOVE    A1,A8                ;PASS THE STRUCTURE POINTER TO NEW PROCESS!
     741 00004320     09e7          MOVI    AD_SLAVE,A7
         00004330 00004390' 
     742 00004350     0d5f          CALLA   P_FORK               ;THIS CREATES IT!
         00004360 00000000! 
     743 00004380     0960          RETS                         ;NOW RETURN TO MENU HANDLER!
     744                    
     745              0100  ADS_STRUCT       EQU     PDATA                  ;LONG-POINTER TO ADJUSTMENT STRUCTURE
     746              0120  ADS_LX           EQU     ADS_STRUCT+LONG_SIZE   ;WORD-LEFT X TO WORK FROM
     747              0130  ADS_CX           EQU     ADS_LX+WORD_SIZE       ;WORD-CENTER X FOR WORK
     748                    
     749 00004390           AD_SLAVE:
     750 00004390     b70b          MOVE    *A8(MENU_ROUTINE),A11,L   ;NOW WE HAVE OUR SPECIAL STRUCTURE!
         000043a0     0020  
     751 000043b0     b36d          MOVE    A11,*A13(ADS_STRUCT),L    ;STASH IT...WE'LL NEED IT
         000043c0     0100  
     752 000043d0     b12d          MOVE    A9,*A13(ADS_LX),W         ;ALSO THE X.....
         000043e0     0120  
     753                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     754 000043f0     4d24          MOVE    A9,A4                     ;COPY LEFT FOR BORDER ROUT
     755 00004400     0d3f          CALLR   LEFT_TO_CENTER
         00004410     0050  
     756                    
     757 00004420     b12d          MOVE    A9,*A13(ADS_CX),W         ;STASH THE CENTER
         00004430     0130  
     758 00004440     0b24          ADDI    INST_ULY*10000H,A4           ;ADD IN THE Y
         00004450 002d0000  
     759 00004470     09e5          MOVI    (INST_LRY*10000H)+TIT_LRX,A5 ;THIS IS OTHER EDGE.
         00004480 004a0185  
     760 000044a0     09c9          MOVI    COLOR_WHITE,A9
         000044b0     0202  
     761 000044c0     0d5f          CALLA   STD_BORD                       ;ADJUSTMENT BORDER IS UP.
         000044d0 00000000! 
     762                    
     763 000044f0     09e8          MOVI    ADJT_SETUP,A8
         00004500 00004b60" 
     764 00004520     0d5f          CALLA   LM_SETUP                       ;SETUP TO PRINT TITLE
         00004530 00000000! 
     765                    
     766 00004550     b5a2          MOVE    *A13(ADS_CX),A2,W              ;GET THE X
         00004560     0130  
     767 00004570     ec49          MOVX    A2,A9                          ;SUBSTITUTE OUR X IN.
     768                    
     769 00004580     b7a2          MOVE    *A13(ADS_STRUCT),A2,L          ;GET STRUCTURE POINTER
         00004590     0100  
     770 000045a0     b648          MOVE    *A2(AD_TITLE),A8,L             ;GET MESSAGE POINTER
         000045b0     0020  
     771                    
     772 000045c0                   JSRP    LM_FINIS                       ;BOX AND TITLE ARE UP.
     773                    
     774 00004630     b648          MOVE    *A2(AD_HELP),A8,L              ;HELP STRUCTURE
         00004640     0040  
     775 00004650     0d3f          CALLR   CKDIP
         00004660     ff29  
     776 00004670     cb0f          JRNZ    ADSSKIP
     777 00004680     0b68          CMPI    HELP_PRICE,A8           ; PRICING HELP
         00004690 ffff9a1f" 
     778 000046b0     ca08          JRZ     ADSDIP
     779 000046c0     0b68          CMPI    HELP_PARAM,A8           ; PARAMETER HELP
         000046d0 ffff984f" 
     780 000046f0     ca04          JRZ     ADSDIP
     781 00004700     0b68          CMPI    HELP_FREE,A8            ; FREEPLAY HELP
         00004710 ffff959f" 
     782 00004730     cb03          JRNZ    ADSSKIP
     783 00004740           ADSDIP
     784 00004740     09e8          MOVI    HELP_DIP,A8
         00004750 00006720" 
     785 00004770           ADSSKIP
     786                    
     787 00004770     b5a9          MOVE    *A13(ADS_LX),A9,W              ;LEFT X FOR HELP BOX
         00004780     0120  
     788 00004790     09ca          MOVI    INST_LRY+BOX_YGAP,A10          ;THIS IS HELP BOX POSITION
         000047a0     004d  
     789 000047b0     0b2a          ADDI    10000H,A10                     ;FLAG THAT THIS IS TOP..NOT CENTER!
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

         000047c0 00010000  
     790                    
     791 000047e0     09e7          MOVI    H_SLAVE,A7           ;FORK OFF SO IT CAN USE PDATA!
         000047f0 00000000! 
     792 00004810     0d5f          CALLA   P_FORK               ;START UP ANOTHER W/ SAME ID
         00004820 00000000! 
     793 00004840     b7a8          MOVE    *A13(ADS_STRUCT),A8,L   ;GET THE ADJUSTMENT STRUCTURE
         00004850     0100  
     794 00004860     09cb          MOVI    COLOR_LF,A11          ;INDICATE STANDARD COLOR.
         00004870     3e3e  
     795 00004880                   JSRP    AD_CRVAL                ;PRINT SCREEN SHOWING THE CURRENT VALUE
     796                    
     797 000048f0     c080          JAUC    SUCIDE               ;OUR JOB IS DONE!...EXIT
         00004900 00000000! 
     798                    
     799 00004920           LEFT_TO_CENTER:
     800 00004920     0b09          ADDI    TIT_LRX,A9                ;FIND BOX CENTER
         00004930     0185  
     801 00004940     2fe9          SRL     1,A9                      ;NOW WE HAVE THE CENTER
     802 00004950     0b09          ADDI    C_KLUDGE,A9               ;MAKE IT CENTER CORRECTLY
         00004960     0001  
     803 00004970     0960          RETS
     804                    
     805                    
     806 00004980           AD_CRVAL:
     807 00004980     b700          MOVE    *A8(AD_NAMEIT),A0,L       ;FETCH THE "NAME-IT" ROUTINE
         00004990     00f0  
     808 000049a0     0160          JUMP    A0                        ;AND "JSRP" THAT ROUTINE
     809                    
     810 000049b0           HEX_OR_MESS
     811 000049b0                   PUSH    a8
     812                    
     813 000049c0     0d3f          CALLR   ADJ_STUFF                 ;GET THE REGGIES FIXED UP.
         000049d0     0057  
     814                    
     815                    
     816 000049e0     b701          MOVE    *A8(AD_MIN),A1,L          ;GET MINIMUM VALUE
         000049f0     0070  
     817 00004a00     4801          CMP     A0,A1                     ;ARE WE AT MINIMUM?
     818 00004a10     cb03          JRNZ    NOT_MIN                   ;NOPE
     819                    
     820 00004a20     b708  AT_MIN  MOVE    *A8(AD_NAMPTR),A8,L       ;GET THE MESSAGE POINTER
         00004a30     0120  
     821 00004a40     c005          JRUC    PRT_MIN
     822                    
     823 00004a50     4c08  NOT_MIN MOVE    A0,A8
     824 00004a60     1823          MOVK    1,A3                      ;INDICATE COMMAS ARE DESIRED
     825 00004a70     0d5f          CALLA   HTOHXASC                  ;CONVERT A8 TO THIS NUMBER
         00004a80 00000000! 
     826                    
     827 00004aa0     4d02  PRT_MIN MOVE    A8,A2
     828 00004ab0                   PULL    a8
     829                    
     830 00004ac0                   JSRP    DO_BIG_LINE               ;NOW PRINT IT OUT
     831 00004b30                   RETP                              ;AND RETURN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

     832                    
     833 00004b60           BIN_OR_MESS:
     834 00004b60     098f          MMTM    SP,A8                     ;PRESERVE A8 PLEASE
         00004b70     0080  
     835                    
     836 00004b80     0d3f          CALLR   ADJ_STUFF                 ;GET THE REGGIES FIXED UP.
         00004b90     003b  
     837 00004ba0     b701          MOVE    *A8(AD_MIN),A1,L          ;GET MINIMUM VALUE
         00004bb0     0070  
     838 00004bc0     4801          CMP     A0,A1                     ;ARE WE AT MINIMUM?
     839 00004bd0     cae4          JRZ     AT_MIN                    ;YEP.....PRINT "OFF"
     840                    
     841 00004be0     0d5f          CALLA   BINBCD                    ;TURN TO BCD PLEASE
         00004bf0 000057d0' 
     842 00004c10     c0e3          JRUC    NOT_MIN                   ;AND NOW PRINT WITH COMMAS.
     843                    
     844 00004c20           JUST_BIN:
     845 00004c20     098f          MMTM    SP,A8                     ;PRESERVE A8 PLEASE
         00004c30     0080  
     846                    
     847 00004c40     0d3f          CALLR   ADJ_STUFF                 ;GET THE REGGIES FIXED UP.
         00004c50     002f  
     848 00004c60     0d5f          CALLA   BINBCD                    ;TURN IT TO BCD!
         00004c70 000057d0' 
     849 00004c90     c0db          JRUC    NOT_MIN
     850                    
     851 00004ca0           LIST_1LINE
     852 00004ca0     0d3f          CALLR   ADJ_STUFF                 ;GET THE REGGIES FIXED UP.
         00004cb0     0029  
     853                    
     854 00004cc0     b701          MOVE    *A8(AD_MAX),A1,L          ;IS IT TOO HIGH?
         00004cd0     0090  
     855 00004ce0     4820          CMP     A1,A0                     ;COMPARE TO ADJUSTMENT
     856 00004cf0     c204          JRLS    L1L1                      ;IN RANGE.....
     857 00004d00     09e2          MOVI    M_NULL,A2                 ;USE NULL POINTER
         00004d10 00007f60" 
     858 00004d30     c017          JRUC    L1L2
     859                    
     860 00004d40           L1L1    
     861 00004d40     b701          MOVE    *A8(AD_MIN),A1,L          ;GET THE LOWEST VALUE
         00004d50     0070  
     862 00004d60     4420          SUB     A1,A0                     ;THIS IS OFFSET
     863 00004d70     1801          MOVK    LONG_SIZE,A1              ;THIS MANY LONG WORDS
     864 00004d80     5e01          MPYU    A0,A1                     ;THIS IS OFFSET INTO TABLE
     865 00004d90     b700          MOVE    *A8(AD_NAMPTR),A0,L       ;THIS IS TABLE BASE
         00004da0     0120  
     866                    
     867 00004db0     0b68          CMPI    DO_FREE,A8              ; IS IT A FREEPLAY ITEM
         00004dc0 ffffdadf" 
     868 00004de0     cb0a          JRNZ    LIGO
     869 00004df0                   PUSH    A0
     870 00004e00     0d5f          CALLA   CKDIP                   ; CHECK FOR DIP SWITCH SETTING
         00004e10 00003900' 
     871 00004e30     09af          MMFM    SP,A0
         00004e40     0001  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

     872 00004e50     cb03          JRNZ    LIGO
     873 00004e60     09e0          MOVI    LIST_DIPNOYES,A0
         00004e70 0000c2d0" 
     874 00004e90           LIGO
     875                    
     876 00004e90     4020          ADD     A1,A0                     ;A0 HAS THE TEXT OF THE SINGLE LINE
     877 00004ea0     8602          MOVE    *A0,A2,L                  ;GET THE VECTOR
     878 00004eb0           L1L2
     879 00004eb0                   JSRP    DO_BIG_LINE               ;PRINT OUT THIS LINE
     880 00004f20                   RETP                              ;NOW RETURN
     881                    
     882 00004f50           ADJ_STUFF
     883 00004f50     1821          movk    1,a1                      ;Indicate 2 puny lines (for our big one)
     884 00004f60     0d3f          CALLR   ADJ_BOX                   ;DRAW THE BOX....PASS BACK 1ST PLOT LINE
         00004f70     0058  
     885 00004f80     b500          MOVE    *A8(AD_CMOS),A0,W         ;GET ADJUSTMENT NUMBER
         00004f90     0060  
     886 00004fa0     0d3f          CALLR   GET_EADJ                  ;FETCH THE CURRENT VALUE.
         00004fb0     001d  
     887                    
     888 00004fc0     c029          jruc    PUT_IN_RANGE              ;IF ITS OUT OF RANGE, FIX IT!
     889                    
     890 00004fd0           DO_BIG_LINE
     891 00004fd0     098c          MMTM    A12,A10,A11,A8       ;SAVE STUFF FOR CALLER
         00004fe0     00b0  
     892 00004ff0     4d66          MOVE    A11,A6
     893 00005000     09c9          MOVI    AM_HX,A9,W           ;GET LEFT X
         00005010     00b8  
     894 00005020     0d3f          CALLR   LEFT_TO_CENTER       ;CONVERT IT
         00005030     ff8e  
     895 00005040     260a          SLL     16,A10               ;SHIFT Y DOWN
     896 00005050     ef49          MOVY    A10,A9               ;X,Y SET
     897 00005060     4c48          MOVE    A2,A8                ;TEXT POINTER
     898 00005070     5600          CLR     A0                   ;NO SLEEP
     899 00005080     09ca          MOVI    SPACING20,A10
         00005090     0002  
     900 000050a0     09eb          MOVI    RD7FONT,A11
         000050b0 00000000! 
     901 000050d0                   JSRP    STRCNRM              ;DO IT!
     902 00005140     09ac          MMFM    A12,A10,A11,A8       ;POP THE STUFF.
         00005150     0d00  
     903 00005160                   RETP
     904                    
     905 00005190           GET_EADJ
     906 00005190     098f          MMTM    SP,A1
         000051a0     4000  
     907 000051b0     0d5f          CALLA   GET_ADJ              ;FETCH THE ADJUSTMENT
         000051c0 00000000! 
     908 000051e0     cb04          JRNZ    GET_EA1              ;ITS NOT ZERO....RETURN
     909 000051f0     b701          MOVE    *A8(AD_ZEQU),A1,L    ;IS THERE A SUB VALUE?
         00005200     00d0  
     910 00005210     ca01          JRZ     GET_EA1              ;NOPE...RETURN THE ZERO (AND FLAG)
     911                    
     912 00005220     4c20          MOVE    A1,A0                ;RETURN THE SUBSTITUTE VALUE
     913 00005230           GET_EA1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

     914 00005230     09af          MMFM    SP,A1
         00005240     0002  
     915 00005250     0960          RETS
     916                    
     917 00005260           PUT_IN_RANGE:
     918 00005260     098f          MMTM    SP,A1,A2,A3
         00005270     7000  
     919 00005280     b701          MOVE    *A8(AD_MIN),A1,L          ;GET MINIMUM
         00005290     0070  
     920 000052a0     b702          MOVE    *A8(AD_MAX),A2,L          ;GET MAXIMUM
         000052b0     0090  
     921 000052c0     b503          MOVE    *A8(AD_FLAGS),A3,W        ;ARE WE WRAPPING AROUND
         000052d0     0110  
     922 000052e0     1fe3          BTST    WRAP_BIT,A3               ;WELL?
     923 000052f0     cb0b          JRNZ    CK_WRAP                   ;YEP....USE A FANCY HANDLER.
     924                    
     925 00005300     4820          CMP     A1,A0                     ;ARE WE TOO LOW?
     926 00005310     c901          JRHS    NOT_LO
     927 00005320           USE_LO: 
     928 00005320     4c20          MOVE    A1,A0
     929                    
     930 00005330           NOT_LO: 
     931 00005330     0b60          CMPI    090000000H,A0           
         00005340 6fffffff  
     932 00005360     c3fb          JRHI    USE_LO                    ;USE THE LOW VALUE!
     933                    
     934 00005370     4840          CMP     A2,A0
     935 00005380     c20a          JRLS    PIRX
     936                    
     937 00005390           USE_HI: 
     938 00005390     4c40          MOVE    A2,A0
     939 000053a0     c008          JRUC    PIRX
     940 000053b0           CK_WRAP:
     941 000053b0     0b60          CMPI    090000000H,A0             ;IN THIS RANGE, WE MUST HAVE WRAPPED DOWN
         000053c0 6fffffff  
     942 000053e0     c3fa          JRHI    USE_HI                    ;SO USE HIGH VALUE
     943                    
     944 000053f0     4820          CMP     A1,A0                     ;IS IT LOWER THAN LO?
     945 00005400     c8f8          JRLO    USE_HI                    ;IT IS ....USE THE HIGH ONE.
     946                    
     947 00005410     4840          CMP     A2,A0                     ;IS IT TOO HIGH?
     948 00005420     c3ef          JRHI    USE_LO                    ;IT IS....USE THE LOW ONE.
     949                    
     950 00005430           PIRX:   
     951 00005430     09af          MMFM    SP,A1,A2,A3
         00005440     000e  
     952 00005450     0960          RETS
     953                    
     954 00005460           CADJ_BOX
     955 00005460     098f          MMTM    SP,A4,A5,A0,A9
         00005470     8c40  
     956 00005480     09ca          MOVI    ADJ_CULY,A10
         00005490     0098  
     957 000054a0     c00a          JRUC    ADJ_ENT
     958                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

     959 000054b0           PADJ_BOX
     960 000054b0     098f          MMTM    SP,A4,A5,A0,A9
         000054c0     8c40  
     961 000054d0     09ca          MOVI    ADJ_PULY,A10
         000054e0     0090  
     962 000054f0     c005          JRUC    ADJ_ENT
     963 00005500     098f  ADJ_BOX MMTM    SP,A4,A5,A0,A9
         00005510     8c40  
     964 00005520     09ca          MOVI    ADJ_ULY,A10              ;THIS IS TOP OF BOX
         00005530     00ac  
     965 00005540     5684          CLR     A4
     966                    
     967 00005550           ADJ_ENT
     968 00005550     0b41          CMPI    2,A1
         00005560     fffd  
     969 00005570     cb02          JRNZ    ADJ_ENT_NORMAL
     970 00005580     1905          MOVK    8,A5                    ; 1 LINER KLUDGE
     971 00005590     c003          JRUC    ADJ_ENT_GO
     972 000055a0           ADJ_ENT_NORMAL
     973 000055a0     09c5          MOVI    HELP_DY,A5              ;DISTANCE PER ENTRY
         000055b0     000c  
     974 000055c0     5e25          MPYU    A1,A5               ;DISTANCE FOR ALL ENTRIES
     975 000055d0           ADJ_ENT_GO
     976 000055d0     4085          ADD     A4,A5                   ; FIX IT UP A LITTLE
     977 000055e0     0b05          ADDI    HELP_Y_MARGIN+(MB_YWID*2)+HELP_YLO_MARGIN,A5
         000055f0     0012  
     978                    
     979                    
     980 00005600     4d44          MOVE    A10,A4                    ;MOVE Y OVER
     981 00005610     2604          SLL     16,A4                     ;MAKE ROOM FOR X
     982 00005620     0b24          ADDI    AM_HX,A4                     ;PUT IN THE X...THIS IS UPPER LEFT!
         00005630 000000b8  
     983                    
     984 00005650     4145          ADD     A10,A5                    ;ADD BASE TO OFFSET
     985 00005660     2605          SLL     16,A5                     ;PUT IN Y POSITION
     986 00005670     0b05          ADDI    TIT_LRX,A5                ;ADD IN THE X FOR THE CORNER
         00005680     0185  
     987 00005690     0b0a          ADDI    MB_YWID+HELP_Y_MARGIN,A10  ;Y OF 1ST ENTRY
         000056a0     000b  
     988 000056b0     09c9          MOVI    COLOR_YELLOW,A9           ;MAKE THESE BOXES YELLOW
         000056c0     0505  
     989                    
     990 000056d0     0d5f          CALLA   STD_BORD
         000056e0 00000000! 
     991 00005700     09af          MMFM    SP,A4,A5,A0,A9
         00005710     0231  
     992 00005720     0960          RETS
     993                    
     994 00005730           WH_BORD
     995 00005730     098f          MMTM    SP,A9
         00005740     0040  
     996 00005750     09c9          MOVI    COLOR_WHITE,A9
         00005760     0202  
     997 00005770     0d5f          CALLA   STD_BORD
         00005780 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

     998 000057a0     09af          MMFM    SP,A9
         000057b0     0200  
     999 000057c0     0960          RETS
    1000 000057d0     098f  BINBCD   MMTM    SP,A1,A2,A3,A4,A5
         000057e0     7c00  
    1001 000057f0     0b60           CMPI    99999999,A0               ;ARE WE TOO BIG?
         00005800 fa0a1f00  
    1002 00005820     c204           JRLS    BBIR                      ;IN RANGE
    1003 00005830     09e0           MOVI    99999999H,A0              ;RETURN THE LARGEST NUMBER WE HAVE!
         00005840 99999999  
    1004 00005860     c00c           JRUC    BB_RET
    1005                    
    1006 00005870     1941  BBIR     MOVK    10,A1                     ;ALWAYS DIVIDE BY A0
    1007 00005880     56a5           CLR     A5                        ;ACCUMULATE RESULT IN A5
    1008 00005890     5684           CLR     A4                        ;A4 HAS CURRENT SHIFT COUNT
    1009 000058a0     4c03           MOVE    A0,A3                     ;<A2><A3> HAS NUMERATOR
    1010 000058b0           DO_BCD_AGAIN
    1011 000058b0     5642           CLR     A2
    1012 000058c0     5a22           DIVU    A1,A2                     ;A2 HAS LEFTOVER...A3 HAS CURRENT DIGIT
    1013 000058d0     6283           SLL     A4,A3                     ;SHIFT IT CORRECT NUMBER OF TIMES
    1014 000058e0     4065           ADD     A3,A5                     ;ADD IT INTO RESULT REG
    1015 000058f0     1084           ADDK    4,A4                      ;ADD 4 TO SHIFT COUNT
    1016 00005900     4c43           MOVE    A2,A3                     ;REFRESH NUMERATOR
    1017 00005910     cbf9           JRNZ    DO_BCD_AGAIN
    1018                    
    1019 00005920     4ca0           MOVE    A5,A0                     ;PUT OUT RESULT
    1020 00005930     09af  BB_RET  MMFM    SP,A1,A2,A3,A4,A5
         00005940     003e  
    1021 00005950     0960          RETS
    1022                    
    1023 00005960     098f  BCDBIN  MMTM    SP,A1,A2,A3,A4,A5       ;WORK REGGIES.
         00005970     7c00  
    1024 00005980     5642          CLR     A2                      ;ACCUMULATE IN A2
    1025 00005990     1823          movk    1,a3                    ;Current factor is 1.
    1026 000059a0     1944          movk    10,a4                   ;Save some movi insts later
    1027 000059b0     1a05          movk    16,a5                   ;Divide it down by 16 at a time
    1028 000059c0     4c01  BCBLOOP MOVE    A0,A1                   ;DIVIDEND IN <A0><A1>
    1029 000059d0     ca06          JRZ     BCBDONE                 ;ALL UNITS EXHAUSTED!
    1030 000059e0     5600          CLR     A0
    1031 000059f0     5aa0          DIVU    A5,A0                   ;DIVIDE BY 10H...(REMAINDER IN A1)
    1032 00005a00     5e61          MPYU    A3,A1                   ;TIMES POSITION FACTOR
    1033 00005a10     4022          ADD     A1,A2                   ;INTO ACCUMULATION REGISTER
    1034 00005a20     5e83          MPYU    A4,A3                   ;NEXT DIGIT IS WORTH 10 TIMES THIS ONE
    1035 00005a30     c0f8          JRUC    BCBLOOP
    1036                    
    1037 00005a40     4c40  BCBDONE MOVE    A2,A0                   ;RETURN RESULT IN A0
    1038 00005a50     09af          MMFM    SP,A1,A2,A3,A4,A5       ;WORK REGGIES.
         00005a60     003e  
    1039 00005a70     0960          RETS
    1040                    
    1041                    
    1042                    
    1043 00000000                   .DATA
    1044 00000000           DO_PRICE
    1045 00000000 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1046 00000020 000038d0"         .LONG   MESS_PRICE           ;POINTER TO HEADER MESSAGE
    1047 00000040 000065e0"         .LONG   HELP_PRICE           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1048 00000060     0001          .WORD   ADJPRICE             ;CMOS ADJUSTMENT WE'RE SETTING
    1049 00000070 00000001          .LONG   1                    ;MINIMUM VALUE
    1050 00000090 00000000!         .LONG   CS_ENTS              ;MAXIMUM VALUE
    1051 000000b0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1052 000000d0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1053 000000f0 000029f0'         .LONG   COIN_SET             ;MESSAGE LIST USED FOR VALUES.
    1054 00000110     0001          .WORD   WRAP_VAL             ;WRAP AROUND ON COIN MODES
    1055 00000120 00000000          .LONG   0                    ;LIST OF MESSAGES FOR THIS ADJ.
    1056 00000140 000038d0"         .LONG   MESS_PRICE           ;POINTER TO HEADER MESSAGE
    1057                    
    1058 00000160           DO_MULT
    1059 00000160 00000540'         .LONG   MULT_ADJ             ;ROUTINE TO RUN
    1060 00000180 00003960"         .LONG   MESS_MULT
    1061 000001a0 00006690"         .LONG   HELP_MULT
    1062 000001c0     0001          .WORD   ADJPRICE             ;CMOS ADJUSTMENT WE'RE SETTING
    1063 000001d0 00000001          .LONG   1                    ;MINIMUM VALUE
    1064 000001f0 00000000!         .LONG   CS_ENTS              ;MAXIMUM VALUE
    1065 00000210 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1066 00000230 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1067 00000250 00001c70'         .LONG   MULT_VAL             ;Routine for showing current value
    1068 00000270     0001          .WORD   WRAP_VAL             ;WRAP AROUND ON COIN MODES
    1069 00000280 00000000          .LONG   0                    ;LIST OF MESSAGES FOR THIS ADJ.
    1070 000002a0 00003960"         .LONG   MESS_MULT 
    1071                    
    1072 000002c0           DO_PARAM
    1073 000002c0 000004e0'         .LONG   PRICE_ADJ            ;ROUTINE TO RUN
    1074 000002e0 00003a00"         .LONG   MESS_PARAM           ;POINTER TO HEADER MESSAGE
    1075 00000300 000067b0"         .LONG   HELP_PARAM           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1076 00000320     0001          .WORD   ADJPRICE             ;CMOS ADJUSTMENT WE'RE SETTING
    1077 00000330 00000001          .LONG   1                    ;MINIMUM VALUE
    1078 00000350 00000000!         .LONG   CS_ENTS              ;MAXIMUM VALUE
    1079 00000370 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1080 00000390 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1081 000003b0 000021d0'         .LONG   PARAM_VAL            ;Routine for showing current value
    1082 000003d0     0001          .WORD   WRAP_VAL             ;WRAP AROUND ON COIN MODES
    1083 000003e0 00000000          .LONG   0                    ;LIST OF MESSAGES FOR THIS ADJ.
    1084 00000400 00003a00"         .LONG   MESS_PARAM           ;POINTER TO HEADER MESSAGE
    1085                    
    1086                    
    1087 00000420           DO_CNTR
    1088 00000420 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1089 00000440 00003b90"         .LONG   MESS_CNTR            ;POINTER TO HEADER MESSAGE
    1090 00000460 000064f0"         .LONG   HELP_CNTR            ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1091 00000480     0018          .WORD   ADJCNTR              ;CMOS ADJUSTMENT WE'RE SETTING
    1092 00000490 00000001          .LONG   1                    ;MINIMUM VALUE
    1093 000004b0 00000003          .LONG   3                    ;MAXIMUM VALUE
    1094 000004d0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1095 000004f0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1096 00000510 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1097 00000530     0000          .WORD   0                    ;DON'T WRAP AROUND
    1098 00000540 0000bfd0"         .LONG   LIST_CNTR            ;JUST SHOW THE NUMBER
    1099 00000560 00003b90"         .LONG   MESS_CNTR            ;POINTER TO HEADER MESSAGE
    1100                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1101                    
    1102 00000580           DO_DIFF:
    1103 00000580 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1104 000005a0 00003a80"         .LONG   MESS_DIFF            ;POINTER TO HEADER MESSAGE
    1105 000005c0 00006310"         .LONG   HELP_DIFF            ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1106 000005e0     000e          .WORD   ADJDIFF              ;CMOS ADJUSTMENT WE'RE SETTING
    1107 000005f0 00000001          .LONG   1                    ;MINIMUM VALUE
    1108 00000610 0000000a          .LONG   10                    ;MAXIMUM VALUE
    1109 00000630 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1110 00000650 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1111 00000670 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1112 00000690     0000          .WORD   0                    ;DON'T WRAP AROUND
    1113 000006a0 0000c030"         .LONG   LIST_DIFF            ;LIST OF MESSAGES FOR THIS ADJ.
    1114 000006c0 00003a80"         .LONG   MESS_DIFF            ;POINTER TO HEADER MESSAGE
    1115                    
    1116 000006e0           DO_SPEEDS:
    1117 000006e0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1118 00000700 00003b00"         .LONG   MESS_SPEEDS          ;POINTER TO HEADER MESSAGE
    1119 00000720 00006400"         .LONG   HELP_SPEEDS          ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1120 00000740     0019          .WORD   ADJSPEED             ;CMOS ADJUSTMENT WE'RE SETTING
    1121 00000750 00000001          .LONG   1                    ;MINIMUM VALUE
    1122 00000770 00000005          .LONG   5                     ;MAXIMUM VALUE
    1123 00000790 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1124 000007b0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1125 000007d0 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1126 000007f0     0000          .WORD   0                    ;DON'T WRAP AROUND
    1127 00000800 0000c170"         .LONG   LIST_SPEEDS          ;LIST OF MESSAGES FOR THIS ADJ.
    1128 00000820 00003b00"         .LONG   MESS_SPEEDS          ;POINTER TO HEADER MESSAGE
    1129                    
    1130                    
    1131                    
    1132                    
    1133                    
    1134                    
    1135                    
    1136                    
    1137 00000840           DO_AMODE:
    1138 00000840 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1139 00000860 00003d40"         .LONG   MESS_AMOD2           ;POINTER TO HEADER MESSAGE
    1140 00000880 000068a0"         .LONG   HELP_AMODE           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1141 000008a0     0011          .WORD   ADJMUSIC             ;CMOS ADJUSTMENT WE'RE SETTING
    1142 000008b0 00000000          .LONG   0                    ;MINIMUM VALUE
    1143 000008d0 00000001          .LONG   1                    ;MAXIMUM VALUE
    1144 000008f0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1145 00000910 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1146 00000930 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1147 00000950     0001          .WORD   WRAP_VAL             ;WRAP AROUND
    1148 00000960 0000c210"         .LONG   LIST_AMODE           ;LIST OF MESSAGES FOR THIS ADJ.
    1149 00000980 00003ca0"         .LONG   MESS_AMODE           ;POINTER TO HEADER MESSAGE
    1150                    
    1151 000009a0           DO_AHSRES:
    1152 000009a0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1153 000009c0 00003e60"         .LONG   MESS_HSR2            ;POINTER TO HEADER MESSAGE
    1154 000009e0 00006970"         .LONG   HELP_AHSRES          ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1155 00000a00     000f          .WORD   ADJHSRES             ;CMOS ADJUSTMENT WE'RE SETTING
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

    1156 00000a10 00000000          .LONG   0                    ;MINIMUM VALUE
    1157 00000a30 000061a8          .LONG   25000                ;MAXIMUM VALUE
    1158 00000a50 000000fa          .LONG   250                  ;MOVE UP AND DOWN BY 250'S
    1159 00000a70 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1160 00000a90 00004b60'         .LONG   BIN_OR_MESS          ;MESSAGE LIST USED FOR VALUES.
    1161 00000ab0     0011          .WORD   WRAP_VAL^HSR_VAL     ;WRAP AROUND AND RESET HSC IF TOUCHED
    1162 00000ac0 0000cec0"         .LONG   MESS_OFF             ;LIST OF MESSAGES FOR THIS ADJ.
    1163 00000ae0 00003db0"         .LONG   MESS_AHSRES          ;POINTER TO HEADER MESSAGE
    1164                    
    1165              000d  COINBITS:       EQU     WRAP_VAL+VIRG_VAL+SIX_VAL
    1166                    
    1167 00000b00           DO_LCOIN:
    1168 00000b00 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1169 00000b20 00003ee0"         .LONG   M_LCU                ;POINTER TO HEADER MESSAGE
    1170 00000b40 00006c20"         .LONG   HELP_LCU             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1171 00000b60     0002          .WORD   ADJLMULT             ;CMOS ADJUSTMENT WE'RE SETTING
    1172 00000b70 00000000          .LONG   0                    ;MINIMUM VALUE
    1173 00000b90 00000063          .LONG   99                   ;MAXIMUM VALUE
    1174 00000bb0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1175 00000bd0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1176 00000bf0 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1177 00000c10     000d          .WORD   COINBITS             ;WRAP AROUND
    1178 00000c20 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1179 00000c40 00003ee0"         .LONG   M_LCU                ;POINTER TO HEADER MESSAGE
    1180                    
    1181 00000c60           DO_CCOIN:
    1182 00000c60 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1183 00000c80 00003f90"         .LONG   M_CCU               ;POINTER TO HEADER MESSAGE
    1184 00000ca0 00006d10"         .LONG   HELP_CCU             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1185 00000cc0     0003          .WORD   ADJCMULT             ;CMOS ADJUSTMENT WE'RE SETTING
    1186 00000cd0 00000000          .LONG   0                    ;MINIMUM VALUE
    1187 00000cf0 00000063          .LONG   99                   ;MAXIMUM VALUE
    1188 00000d10 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1189 00000d30 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1190 00000d50 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1191 00000d70     000d          .WORD   COINBITS             ;WRAP AROUND
    1192 00000d80 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1193 00000da0 00003f90"         .LONG   M_CCU                ;POINTER TO HEADER MESSAGE
    1194                    
    1195 00000dc0           DO_RCOIN:
    1196 00000dc0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1197 00000de0 00004010"         .LONG   M_RCU                ;POINTER TO HEADER MESSAGE
    1198 00000e00 00006e00"         .LONG   HELP_RCU             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1199 00000e20     0004          .WORD   ADJRMULT             ;CMOS ADJUSTMENT WE'RE SETTING
    1200 00000e30 00000000          .LONG   0                    ;MINIMUM VALUE
    1201 00000e50 00000063          .LONG   99                   ;MAXIMUM VALUE
    1202 00000e70 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1203 00000e90 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1204 00000eb0 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1205 00000ed0     000d          .WORD   COINBITS             ;WRAP AROUND
    1206 00000ee0 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1207 00000f00 00004010"         .LONG   M_RCU                ;POINTER TO HEADER MESSAGE
    1208 00000f20           DO_XCOIN:
    1209 00000f20 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1210 00000f40 000040c0"         .LONG   M_XCU                ;POINTER TO HEADER MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

    1211 00000f60 00006ef0"         .LONG   HELP_XCU             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1212 00000f80     0005          .WORD   ADJXMULT             ;CMOS ADJUSTMENT WE'RE SETTING
    1213 00000f90 00000000          .LONG   0                    ;MINIMUM VALUE
    1214 00000fb0 00000063          .LONG   99                   ;MAXIMUM VALUE
    1215 00000fd0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1216 00000ff0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1217 00001010 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1218 00001030     000d          .WORD   COINBITS             ;WRAP AROUND
    1219 00001040 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1220 00001060 000040c0"         .LONG   M_XCU                ;POINTER TO HEADER MESSAGE
    1221                    
    1222 00001080           DO_TOTALIZER
    1223 00001080 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1224 000010a0 00004140"         .LONG   M_TOTALIZER                  ;POINTER TO HEADER MESSAGE
    1225 000010c0 000072b0"         .LONG   HELP_TOTALIZER       ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1226 000010e0     001d          .WORD   ADJTOTALIZER         ;CMOS ADJUSTMENT WE'RE SETTING
    1227 000010f0 00000000          .LONG   0                    ;MINIMUM VALUE
    1228 00001110 00000001          .LONG   1                    ;MAXIMUM VALUE
    1229 00001130 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1230 00001150 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1231 00001170 00004ca0'         .LONG   LIST_1LINE           ;JUST SHOW THE NUMBER
    1232 00001190     0001          .WORD   WRAP_VAL             ;WRAP AROUND
    1233 000011a0 0000c250"         .LONG   LIST_NOYES                   ;NO EXTRA INFO NEEDED
    1234 000011c0 00004140"         .LONG   M_TOTALIZER                  ;POINTER TO HEADER MESSAGE
    1235                    
    1236 000011e0           DO_LMULT
    1237 000011e0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1238 00001200 000041c0"         .LONG   M_LMULT              ;POINTER TO HEADER MESSAGE
    1239 00001220 00006fe0"         .LONG   HELP_LMULT           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1240 00001240     001e          .WORD   ADJLTOTMULT          ;CMOS ADJUSTMENT WE'RE SETTING
    1241 00001250 00000000          .LONG   0                    ;MINIMUM VALUE
    1242 00001270 00000063          .LONG   99                   ;MAXIMUM VALUE
    1243 00001290 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1244 000012b0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1245 000012d0 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1246 000012f0     000d          .WORD   COINBITS             ;WRAP AROUND
    1247 00001300 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1248 00001320 000041c0"         .LONG   M_LMULT              ;POINTER TO HEADER MESSAGE
    1249 00001340           DO_RMULT
    1250 00001340 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1251 00001360 00004250"         .LONG   M_RMULT              ;POINTER TO HEADER MESSAGE
    1252 00001380 00007070"         .LONG   HELP_RMULT           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1253 000013a0     0020          .WORD   ADJRTOTMULT          ;CMOS ADJUSTMENT WE'RE SETTING
    1254 000013b0 00000000          .LONG   0                    ;MINIMUM VALUE
    1255 000013d0 00000063          .LONG   99                   ;MAXIMUM VALUE
    1256 000013f0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1257 00001410 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1258 00001430 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1259 00001450     000d          .WORD   COINBITS             ;WRAP AROUND
    1260 00001460 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1261 00001480 00004250"         .LONG   M_RMULT              ;POINTER TO HEADER MESSAGE
    1262 000014a0           DO_CMULT
    1263 000014a0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1264 000014c0 000042e0"         .LONG   M_CMULT              ;POINTER TO HEADER MESSAGE
    1265 000014e0 00007100"         .LONG   HELP_CMULT           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1266 00001500     001f          .WORD   ADJCTOTMULT          ;CMOS ADJUSTMENT WE'RE SETTING
    1267 00001510 00000000          .LONG   0                    ;MINIMUM VALUE
    1268 00001530 00000063          .LONG   99                   ;MAXIMUM VALUE
    1269 00001550 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1270 00001570 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1271 00001590 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1272 000015b0     000d          .WORD   COINBITS             ;WRAP AROUND
    1273 000015c0 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1274 000015e0 000042e0"         .LONG   M_CMULT              ;POINTER TO HEADER MESSAGE
    1275 00001600           DO_XMULT
    1276 00001600 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1277 00001620 00004370"         .LONG   M_XMULT              ;POINTER TO HEADER MESSAGE
    1278 00001640 00007190"         .LONG   HELP_XMULT           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1279 00001660     0021          .WORD   ADJXTOTMULT          ;CMOS ADJUSTMENT WE'RE SETTING
    1280 00001670 00000000          .LONG   0                    ;MINIMUM VALUE
    1281 00001690 00000063          .LONG   99                   ;MAXIMUM VALUE
    1282 000016b0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1283 000016d0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1284 000016f0 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1285 00001710     000d          .WORD   COINBITS             ;WRAP AROUND
    1286 00001720 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1287 00001740 00004370"         .LONG   M_XMULT              ;POINTER TO HEADER MESSAGE
    1288                    
    1289 00001760           DO_DBVMULT
    1290 00001760 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1291 00001780 00004400"         .LONG   M_DBVMULT                    ;POINTER TO HEADER MESSAGE
    1292 000017a0 00007220"         .LONG   HELP_BMULT           ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1293 000017c0     0022          .WORD   ADJBTOTMULT          ;CMOS ADJUSTMENT WE'RE SETTING
    1294 000017d0 00000000          .LONG   0                    ;MINIMUM VALUE
    1295 000017f0 00000063          .LONG   99                   ;MAXIMUM VALUE
    1296 00001810 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1297 00001830 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1298 00001850 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1299 00001870     000d          .WORD   COINBITS             ;WRAP AROUND
    1300 00001880 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1301 000018a0 00004400"         .LONG   M_DBVMULT                    ;POINTER TO HEADER MESSAGE
    1302                    
    1303 000018c0           DO_DBV:
    1304 000018c0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1305 000018e0 00004470"         .LONG   M_DBV                ;POINTER TO HEADER MESSAGE
    1306 00001900 00007340"         .LONG   HELP_DBV             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1307 00001920     0006          .WORD   ADJDBVMULT           ;CMOS ADJUSTMENT WE'RE SETTING
    1308 00001930 00000000          .LONG   0                    ;MINIMUM VALUE
    1309 00001950 00000063          .LONG   99                   ;MAXIMUM VALUE
    1310 00001970 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1311 00001990 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1312 000019b0 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1313 000019d0     000d          .WORD   COINBITS             ;WRAP AROUND
    1314 000019e0 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1315 00001a00 00004470"         .LONG   M_DBV                ;POINTER TO HEADER MESSAGE
    1316                    
    1317 00001a20           DO_UC:  
    1318 00001a20 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1319 00001a40 000044c0"         .LONG   M_UC                 ;POINTER TO HEADER MESSAGE
    1320 00001a60 00007430"         .LONG   HELP_UC              ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

    1321 00001a80     0007          .WORD   ADJCUNIT             ;CMOS ADJUSTMENT WE'RE SETTING
    1322 00001a90 00000001          .LONG   1                    ;MINIMUM VALUE
    1323 00001ab0 00000063          .LONG   99                   ;MAXIMUM VALUE
    1324 00001ad0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1325 00001af0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1326 00001b10 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1327 00001b30     000d          .WORD   COINBITS             ;WRAP AROUND
    1328 00001b40 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1329 00001b60 000044c0"         .LONG   M_UC                 ;POINTER TO HEADER MESSAGE
    1330                    
    1331 00001b80           DO_UB:  
    1332 00001b80 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1333 00001ba0 00004540"         .LONG   M_UB                 ;POINTER TO HEADER MESSAGE
    1334 00001bc0 000074c0"         .LONG   HELP_UB              ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1335 00001be0     0008          .WORD   ADJBUNIT             ;CMOS ADJUSTMENT WE'RE SETTING
    1336 00001bf0 00000000          .LONG   0                    ;MINIMUM VALUE
    1337 00001c10 00000063          .LONG   99                   ;MAXIMUM VALUE
    1338 00001c30 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1339 00001c50 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1340 00001c70 00004b60'         .LONG   BIN_OR_MESS          ;JUST SHOW THE NUMBER
    1341 00001c90     000d          .WORD   COINBITS             ;WRAP AROUND
    1342 00001ca0 0000cee0"         .LONG   M_NOBONUS            ;NO EXTRA INFO NEEDED
    1343 00001cc0 00004540"         .LONG   M_UB                 ;POINTER TO HEADER MESSAGE
    1344                    
    1345 00001ce0           DO_UM:  
    1346 00001ce0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1347 00001d00 00004650"         .LONG   M_UM2                ;POINTER TO HEADER MESSAGE
    1348 00001d20 00007550"         .LONG   HELP_UM              ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1349 00001d40     0009          .WORD   ADJMUNIT             ;CMOS ADJUSTMENT WE'RE SETTING
    1350 00001d50 00000000          .LONG   0                    ;MINIMUM VALUE
    1351 00001d70 00000063          .LONG   99                   ;MAXIMUM VALUE
    1352 00001d90 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1353 00001db0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1354 00001dd0 00004b60'         .LONG   BIN_OR_MESS          ;JUST SHOW THE NUMBER
    1355 00001df0     000d          .WORD   COINBITS             ;WRAP AROUND
    1356 00001e00 0000cf60"         .LONG   M_NOMIN              ;NO EXTRA INFO NEEDED
    1357 00001e20 000045b0"         .LONG   M_UM                 ;POINTER TO HEADER MESSAGE
    1358                    
    1359              0004  CREDBITS:       EQU     VIRG_VAL
    1360                    
    1361 00001e40           DO_CST: 
    1362 00001e40 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1363 00001e60 000046c0"         .LONG   M_CST                ;POINTER TO HEADER MESSAGE
    1364 00001e80 000075e0"         .LONG   HELP_CS              ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1365 00001ea0     000c          .WORD   ADJCSTRT             ;CMOS ADJUSTMENT WE'RE SETTING
    1366 00001eb0 00000001          .LONG   1                    ;MINIMUM VALUE
    1367 00001ed0 00000004          .LONG   4                    ;MAXIMUM VALUE
    1368 00001ef0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1369 00001f10 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1370 00001f30 00004c20'         .LONG   JUST_BIN            ;JUST SHOW THE NUMBER
    1371 00001f50     000d          .WORD   COINBITS             ;WRAP AROUND
    1372 00001f60 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1373 00001f80 000046c0"         .LONG   M_CST                ;POINTER TO HEADER MESSAGE
    1374                    
    1375 00001fa0           DO_CONT:
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1376 00001fa0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1377 00001fc0 000047f0"         .LONG   M_CONT2               ;POINTER TO HEADER MESSAGE
    1378 00001fe0 00007670"         .LONG   HELP_CC              ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1379 00002000     000d          .WORD   ADJCCONT             ;CMOS ADJUSTMENT WE'RE SETTING
    1380 00002010 00000001          .LONG   1                    ;MINIMUM VALUE
    1381 00002030 00000004          .LONG   4                    ;MAXIMUM VALUE
    1382 00002050 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1383 00002070 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1384 00002090 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1385 000020b0     000d          .WORD   COINBITS             ;WRAP AROUND
    1386 000020c0 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1387 000020e0 00004750"         .LONG   M_CONT               ;POINTER TO HEADER MESSAGE
    1388                    
    1389 00002100           DO_CRFR:
    1390 00002100 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1391 00002120 00004930"         .LONG   M_CRFR2              ;POINTER TO HEADER MESSAGE
    1392 00002140 00007700"         .LONG   HELP_CRFR            ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1393 00002160     000b          .WORD   ADJFRAC              ;CMOS ADJUSTMENT WE'RE SETTING
    1394 00002170 00000000          .LONG   0                    ;MINIMUM VALUE
    1395 00002190 00000001          .LONG   1                    ;MAXIMUM VALUE
    1396 000021b0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1
    1397 000021d0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1398 000021f0 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1399 00002210     0001          .WORD   WRAP_VAL             ;WRAP AROUND
    1400 00002220 0000c250"         .LONG   LIST_NOYES           ;LIST OF MESSAGES FOR THIS ADJ.
    1401 00002240 00004880"         .LONG   M_CRFR               ;POINTER TO HEADER MESSAGE
    1402                    
    1403 00002260           DO_CPD: 
    1404 00002260 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1405 00002280 000049c0"         .LONG   M_CPD                ;POINTER TO HEADER MESSAGE
    1406 000022a0 000077f0"         .LONG   HELP_CPD             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1407 000022c0     000a          .WORD   ADJCDIV              ;CMOS ADJUSTMENT WE'RE SETTING
    1408 000022d0 00000000          .LONG   0                    ;MINIMUM VALUE
    1409 000022f0 00000014          .LONG   20                   ;MAXIMUM VALUE
    1410 00002310 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1411 00002330 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1412 00002350 00004b60'         .LONG   BIN_OR_MESS             ;JUST SHOW THE NUMBER
    1413 00002370     0000          .WORD   0                    ;NO WRAP AROUND
    1414 00002380 0000cfc0"         .LONG   M_NO_COL             ;NO EXTRA INFO NEEDED
    1415 000023a0 000049c0"         .LONG   M_CPD                ;POINTER TO HEADER MESSAGE
    1416                    
    1417 000023c0           DO_MAX: 
    1418 000023c0 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1419 000023e0 00004a40"         .LONG   M_MAX                ;POINTER TO HEADER MESSAGE
    1420 00002400 000078e0"         .LONG   HELP_MAX             ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1421 00002420     0012          .WORD   ADJMAXC              ;CMOS ADJUSTMENT WE'RE SETTING
    1422 00002430 00000005          .LONG   5                    ;MINIMUM VALUE
    1423 00002450 00000063          .LONG   99                   ;MAXIMUM VALUE
    1424 00002470 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1425 00002490 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1426 000024b0 00004c20'         .LONG   JUST_BIN             ;JUST SHOW THE NUMBER
    1427 000024d0     0001          .WORD   WRAP_VAL             ;WRAP AROUND
    1428 000024e0 00000000          .LONG   0                    ;NO EXTRA INFO NEEDED
    1429 00002500 00004a40"         .LONG   M_MAX                ;POINTER TO HEADER MESSAGE
    1430                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

    1431 00002520           DO_FREE:
    1432 00002520 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1433 00002540 00003880"         .LONG   MESS_FREE            ;POINTER TO HEADER MESSAGE
    1434 00002560 00006a60"         .LONG   HELP_FREE            ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1435 00002580     0013          .WORD   ADJFREPL             ;CMOS ADJUSTMENT WE'RE SETTING
    1436 00002590 00000000          .LONG   0                    ;MINIMUM VALUE
    1437 000025b0 00000001          .LONG   1                    ;MAXIMUM VALUE
    1438 000025d0 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 250'S
    1439 000025f0 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1440 00002610 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1441 00002630     0001          .WORD   WRAP_VAL             ;WRAP AROUND
    1442 00002640 0000c250"         .LONG   LIST_NOYES           ;LIST OF MESSAGES FOR THIS ADJ.
    1443 00002660 00003880"         .LONG   MESS_FREE            ;POINTER TO HEADER MESSAGE
    1444                    
    1445 00002680           DO_CTIT:
    1446 00002680 000005a0'         .LONG   GEN_ADJ              ;ROUTINE TO RUN
    1447 000026a0 00003c20"         .LONG   MESS_CTIT            ;POINTER TO HEADER MESSAGE
    1448 000026c0 00006b50"         .LONG   CTIT_HELP            ;POINTER TO HELP MESSAGES FOR RIGHT SIDE
    1449 000026e0     0017          .WORD   ADJNOCPAG            ;CMOS ADJUSTMENT WE'RE SETTING
    1450 000026f0 00000000          .LONG   0                    ;MINIMUM VALUE
    1451 00002710 00000001          .LONG   1                    ;MAXIMUM VALUE
    1452 00002730 00000001          .LONG   1                    ;MOVE UP AND DOWN BY 1'S
    1453 00002750 00000000          .LONG   0                    ;DON'T SUB ZERO FOR ANY
    1454 00002770 00004ca0'         .LONG   LIST_1LINE           ;MESSAGE LIST USED FOR VALUES.
    1455 00002790     0001          .WORD   WRAP_VAL             ;WRAP AROUND
    1456 000027a0 0000c290"         .LONG   LIST_YESNO           ;LIST OF MESSAGES FOR THIS ADJ.
    1457 000027c0 00003c20"         .LONG   MESS_CTIT            ;POINTER TO HEADER MESSAGE
    1458                    
    1459              fffe  AM_BDY  EQU     -2
    1460              00a7  AM_WID  EQU     0A7H
    1461              005e  AM_X    EQU     TIT_ULX+GAP+MB_XWID+(AM_WID/2)+C_KLUDGE
    1462              0054  AM_Y    EQU     INST_LRY+BOX_YGAP+MB_YWID+GAP-AM_BDY
    1463              00b6  AM_RX   EQU     TIT_ULX+(2*GAP)+AM_WID+(2*MB_XWID)
    1464              00b8  AM_HX   EQU     AM_RX+BOX_XGAP
    1465                    
    1466 000027e0           MEN_ADJ:
    1467 000027e0 00000000!         .LONG   RD7FONT         ;FONT
    1468 00002800 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    1469 00002820 00003780"         .LONG   M_GADJ          ;TITLE
    1470 00002840     0202          .WORD   COLOR_WHITE    ;COLOR OF TITLE
    1471 00002850     005e          .WORD   AM_X            ;UL X
    1472 00002860     0054          .WORD   AM_Y            ;UL Y
    1473 00002870     000c          .WORD   12
    1474 00002880     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
    1475 00002890     000c          .WORD   12              ;HEIGHT OF SELECTION BAR
    1476 000028a0     fffe          .WORD   AM_BDY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1477 000028b0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    1478 000028c0     00a7          .WORD   AM_WID          ;WIDTH OF BAR!
    1479 000028d0     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    1480 000028e0 00000000!         .LONG   MESS_MM,0,BLNK_HELP        ;RETURN TO MAIN MENU
    1481 00002940 000038d0"         .LONG   MESS_PRICE,DO_PRICE,ADJ_HELP
    1482 000029a0 00003960"         .LONG   MESS_MULT,DO_MULT,ADJ_HELP
    1483 00002a00 00003a00"         .LONG   MESS_PARAM,DO_PARAM,ADJ_HELP
    1484 00002a60 00003880"         .LONG   MESS_FREE,DO_FREE,ADJ_HELP      ;FREE PLAY
    1485 00002ac0 00003a80"         .LONG   MESS_DIFF,DO_DIFF,ADJ_HELP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

    1486 00002b20 00003b00"         .LONG   MESS_SPEEDS,DO_SPEEDS,ADJ_HELP
    1487 00002b80 00003ca0"         .LONG   MESS_AMODE,DO_AMODE,ADJ_HELP
    1488 00002be0 00000000!         .LONG   MESS_MM,0,BLNK_HELP        ;RETURN TO MAIN MENU
    1489 00002c40 00000000          .LONG   0               ;END
    1490                    
    1491 00002c60           MEN_CUST:
    1492 00002c60 00000000!         .LONG   RD7FONT                 ;FONT
    1493 00002c80 00000000!         .LONG   STRCNRM                 ;CENTER PLEASE
    1494 00002ca0 00003800"         .LONG   M_CUSPRI                ;TITLE
    1495 00002cc0     0707          .WORD   COLOR_BLUE              ;COLOR OF TITLE
    1496 00002cd0     005e          .WORD   AM_X                    ;UL X
    1497 00002ce0     0054          .WORD   AM_Y                    ;UL Y
    1498 00002cf0     000b          .WORD   11                      ;VERTICAL SPACING
    1499 00002d00     0707          .WORD   COLOR_BLUE              ;COLOR WHEN NOT SELECTED
    1500 00002d10     000c          .WORD   12                      ;HEIGHT OF SELECTION BAR
    1501 00002d20     fffe          .WORD   AM_BDY                  ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1502 00002d30     0006          .WORD   BAR_DX                  ;EXTRA X ON EACH SIDE.
    1503 00002d40     00a7          .WORD   AM_WID                  ;WIDTH OF BAR!
    1504 00002d50     3d3d          .WORD   COLOR_DECAY             ;TEXT COLOR OF SELECTED ITEM
    1505 00002d60 00004ac0"         .LONG   MESS_AM,0,BLNK_HELP     ;RETURN TO MAIN MENU
    1506 00002dc0 00003ee0"         .LONG   M_LCU,DO_LCOIN,ADJ_HELP ;LEFT SLOT UNITS
    1507 00002e20 00004010"         .LONG   M_RCU,DO_RCOIN,ADJ_HELP ;RIGHT SLOT UNITS
    1508 00002e80 00003f90"         .LONG   M_CCU,DO_CCOIN,ADJ_HELP ;CENTER SLOT UNITS
    1509 00002ee0 000040c0"         .LONG   M_XCU,DO_XCOIN,ADJ_HELP ;RIGHT SLOT UNITS
    1510 00002f40 00004470"         .LONG   M_DBV,DO_DBV,ADJ_HELP   ;DOLLAR BILL VALIDATOR
    1511 00002fa0 000044c0"         .LONG   M_UC,DO_UC,ADJ_HELP     ;UNITS FOR CREDIT
    1512 00003000 00004540"         .LONG   M_UB,DO_UB,ADJ_HELP     ;UNITS FOR BONUS
    1513 00003060 000045b0"         .LONG   M_UM,DO_UM,ADJ_HELP     ;MINIMUM UNITS
    1514 000030c0 000046c0"         .LONG   M_CST,DO_CST,ADJ_HELP   ;CREDITS REQUIRED TO START
    1515 00003120 00004750"         .LONG   M_CONT,DO_CONT,ADJ_HELP         ;CREDITS REQUIRED TO CONTINUE
    1516 00003180 00003c20"         .LONG   MESS_CTIT,DO_CTIT,ADJ_HELP      ;COIN PAGE HELP LINE
    1517 000031e0 00004880"         .LONG   M_CRFR,DO_CRFR,ADJ_HELP         ;SHOW CREDIT FRACTIONS
    1518 00003240 000049c0"         .LONG   M_CPD,DO_CPD,ADJ_HELP           ;COINS PER DOLLAR
    1519 000032a0 00004a40"         .LONG   M_MAX,DO_MAX,ADJ_HELP           ;MAXIMUM CREDITS
    1520 00003300 00000000          .LONG   0
    1521                    
    1522 00003320           MEN_MULT:
    1523 00003320 00000000!         .LONG   RD7FONT                 ;FONT
    1524 00003340 00000000!         .LONG   STRCNRM                 ;CENTER PLEASE
    1525 00003360 000036e0"         .LONG   M_MULT                  ;TITLE
    1526 00003380     0707          .WORD   COLOR_BLUE              ;COLOR OF TITLE
    1527 00003390     005e          .WORD   AM_X                    ;UL X
    1528 000033a0     0054          .WORD   AM_Y                    ;UL Y
    1529 000033b0     000b          .WORD   11                      ;VERTICAL SPACING
    1530 000033c0     0707          .WORD   COLOR_BLUE              ;COLOR WHEN NOT SELECTED
    1531 000033d0     000c          .WORD   12                      ;HEIGHT OF SELECTION BAR
    1532 000033e0     fffe          .WORD   AM_BDY                  ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1533 000033f0     0006          .WORD   BAR_DX                  ;EXTRA X ON EACH SIDE.
    1534 00003400     00a7          .WORD   AM_WID                  ;WIDTH OF BAR!
    1535 00003410     3d3d          .WORD   COLOR_DECAY             ;TEXT COLOR OF SELECTED ITEM
    1536 00003420 00004ac0"         .LONG   MESS_AM,0,BLNK_HELP     ;RETURN TO MAIN MENU
    1537 00003480 00004140"         .LONG   M_TOTALIZER,DO_TOTALIZER,ADJ_HELP
    1538 000034e0 000041c0"         .LONG   M_LMULT,DO_LMULT,ADJ_HELP       ;LEFT SLOT UNITS
    1539 00003540 00004250"         .LONG   M_RMULT,DO_RMULT,ADJ_HELP       ;LEFT SLOT UNITS
    1540 000035a0 000042e0"         .LONG   M_CMULT,DO_CMULT,ADJ_HELP       ;LEFT SLOT UNITS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

    1541 00003600 00004370"         .LONG   M_XMULT,DO_XMULT,ADJ_HELP       ;LEFT SLOT UNITS
    1542 00003660 00004400"         .LONG   M_DBVMULT,DO_DBVMULT,ADJ_HELP   ;LEFT SLOT UNITS
    1543 000036c0 00000000          .LONG   0
    1544 000036e0           M_MULT
    1545 000036e0       43          .STRING         "CUSTOM MULTIPLIERS"
    1546 00003770       00          .BYTE     0
    1547 00003780                   .EVEN
    1548                    
    1549 00003780           M_GADJ  
    1550 00003780       47          .STRING         "GAME ADJUSTMENT"
    1551 000037f8       00          .BYTE     0
    1552 00003800                   .EVEN
    1553                    
    1554 00003800           M_CUSPRI:
    1555 00003800       43          .STRING         "CUSTOM PRICING"
    1556 00003870       00          .BYTE     0
    1557 00003880                   .EVEN
    1558                    
    1559 00003880           MESS_FREE:      
    1560 00003880       46          .STRING "FREE PLAY"
    1561 000038c8       00          .BYTE 0
    1562 000038d0                   .EVEN
    1563                    
    1564 000038d0           MESS_PRICE:
    1565 000038d0       53          .STRING "STANDARD PRICING"
    1566 00003950       00          .BYTE 0
    1567 00003960                   .EVEN
    1568 00003960           MESS_MULT:
    1569 00003960       43          .STRING "CUSTOM MULTIPLIERS"
    1570 000039f0       00          .BYTE 0
    1571 00003a00                   .EVEN
    1572 00003a00           MESS_PARAM:
    1573 00003a00       43          .STRING "CUSTOM PRICING"
    1574 00003a70       00          .BYTE 0
    1575 00003a80                   .EVEN
    1576 00003a80           MESS_DIFF:
    1577 00003a80       47          .STRING "GAME DIFFICULTY"
    1578 00003af8       00          .BYTE 0
    1579 00003b00                   .EVEN
    1580 00003b00           MESS_SPEEDS:
    1581 00003b00       41          .string "AVERAGE GAME TIME",0
    1582 00003b90                   .even
    1583                    
    1584 00003b90           MESS_CNTR:
    1585 00003b90       43          .STRING "COIN COUNTER MODE"
    1586 00003c18       00          .BYTE 0
    1587 00003c20                   .EVEN
    1588 00003c20           MESS_CTIT:
    1589 00003c20       43          .STRING "COIN PAGE HELP"
    1590 00003c90       00          .BYTE 0
    1591 00003ca0                   .EVEN
    1592 00003ca0           MESS_AMODE:     
    1593 00003ca0       41          .STRING "ATTRACT-MODE SOUND"   ;FOR MENU
    1594 00003d30       00          .BYTE 0
    1595 00003d40                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

    1596 00003d40           MESS_AMOD2:     
    1597 00003d40       41          .STRING "A-MODE SOUND"        ;FOR TITLE BOX (SHORTER VER.)
    1598 00003da0       00          .BYTE 0
    1599 00003db0                   .EVEN
    1600 00003db0           MESS_AHSRES:    
    1601 00003db0       41          .STRING "AUTO HIGH SCORE RESET"    ;FOR MENU
    1602 00003e58       00          .BYTE 0
    1603 00003e60                   .EVEN
    1604 00003e60           MESS_HSR2:
    1605 00003e60       41          .STRING "AUTO H.S. RESET"
    1606 00003ed8       00          .BYTE 0
    1607 00003ee0                   .EVEN
    1608                    
    1609                    
    1610 00003ee0           M_LCU:  
    1611 00003ee0       4c          .STRING "LEFT CHUTE (1) UNITS"
    1612 00003f80       00          .BYTE 0
    1613 00003f90                   .EVEN
    1614 00003f90           M_CCU:  
    1615 00003f90       43          .STRING "CHUTE (3) UNITS"
    1616 00004008       00          .BYTE 0
    1617 00004010                   .EVEN
    1618 00004010           M_RCU:  
    1619 00004010       52          .STRING "RIGHT CHUTE (2) UNITS"
    1620 000040b8       00          .BYTE 0
    1621 000040c0                   .EVEN
    1622 000040c0           M_XCU:  
    1623 000040c0       43          .STRING "CHUTE (4) UNITS"
    1624 00004138       00          .BYTE 0
    1625 00004140                   .EVEN
    1626 00004140           M_TOTALIZER
    1627 00004140       54          .STRING "TOTALIZER MODE"
    1628 000041b0       00          .BYTE 0
    1629 000041c0                   .EVEN
    1630 000041c0           M_LMULT
    1631 000041c0       43          .STRING "CHUTE 1 TOTALIZER"
    1632 00004248       00          .BYTE 0
    1633 00004250                   .EVEN
    1634 00004250           M_RMULT
    1635 00004250       43          .STRING "CHUTE 2 TOTALIZER"
    1636 000042d8       00          .BYTE 0
    1637 000042e0                   .EVEN
    1638 000042e0           M_CMULT
    1639 000042e0       43          .STRING "CHUTE 3 TOTALIZER"
    1640 00004368       00          .BYTE 0
    1641 00004370                   .EVEN
    1642 00004370           M_XMULT
    1643 00004370       43          .STRING "CHUTE 4 TOTALIZER"
    1644 000043f8       00          .BYTE 0
    1645 00004400                   .EVEN
    1646 00004400           M_DBVMULT
    1647 00004400       44          .STRING "DBV TOTALIZER"
    1648 00004468       00          .BYTE 0
    1649 00004470                   .EVEN
    1650 00004470           M_DBV:  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

    1651 00004470       44          .STRING "DBV UNITS"
    1652 000044b8       00          .BYTE 0
    1653 000044c0                   .EVEN
    1654 000044c0           M_UC:   
    1655 000044c0       55          .STRING "UNITS / CREDIT"
    1656 00004530       00          .BYTE 0
    1657 00004540                   .EVEN
    1658 00004540           M_UB:   
    1659 00004540       55          .STRING "UNITS / BONUS"
    1660 000045a8       00          .BYTE 0
    1661 000045b0                   .EVEN
    1662 000045b0           M_UM:   
    1663 000045b0       4d          .STRING "MIN. UNITS REQUIRED"
    1664 00004648       00          .BYTE 0
    1665 00004650                   .EVEN
    1666 00004650           M_UM2:  
    1667 00004650       4d          .STRING  "MINIMUM UNITS"
    1668 000046b8       00          .BYTE 0
    1669 000046c0                   .EVEN
    1670 000046c0           M_CST:  
    1671 000046c0       43          .STRING "CREDITS TO START"
    1672 00004740       00          .BYTE 0
    1673 00004750                   .EVEN
    1674 00004750           M_CONT: 
    1675 00004750       43          .STRING "CREDITS TO CONTINUE"
    1676 000047e8       00          .BYTE 0
    1677 000047f0                   .EVEN
    1678 000047f0           M_CONT2:
    1679 000047f0       43          .STRING "CRED. TO CONTINUE"
    1680 00004878       00          .BYTE 0
    1681 00004880                   .EVEN
    1682 00004880           M_CRFR: 
    1683 00004880       53          .STRING "SHOW CREDIT FRACTIONS"
    1684 00004928       00          .BYTE 0
    1685 00004930                   .EVEN
    1686 00004930           M_CRFR2:
    1687 00004930       43          .STRING "CREDIT FRACTIONS"
    1688 000049b0       00          .BYTE 0
    1689 000049c0                   .EVEN
    1690 000049c0           M_CPD:  
    1691 000049c0       43          .STRING "COINS PER BILL"
    1692 00004a30       00          .BYTE 0
    1693 00004a40                   .EVEN
    1694 00004a40           M_MAX:  
    1695 00004a40       4d          .STRING "MAXIMUM CREDITS"
    1696 00004ab8       00          .BYTE 0
    1697 00004ac0                   .EVEN
    1698 00004ac0           MESS_AM:
    1699 00004ac0       52          .STRING "RETURN TO ADJ. MENU"
    1700 00004b58       00          .BYTE 0
    1701 00004b60                   .EVEN
    1702              0036  ADJT_Y  EQU     INST_ULY+9                ;CENTER IN THE BOX
    1703 00004b60           ADJT_SETUP:
    1704 00004b60                   MESS_MAC  RD7FONT,SPACING20,200,ADJT_Y,COLOR_LF,STRCNRM,0
    1705                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

    1706              0084  CSET_Y  EQU     CUR_ULY+7
    1707 00004c00                   .EVEN
    1708                    
    1709              0098  MOC_Y1   EQU     CSET_Y+20
    1710              00a2  MOC_Y2   EQU     MOC_Y1+10
    1711              00ac  MOC_Y3   EQU     MOC_Y2+10
    1712                    
    1713 00004c00           MESS_OPEN_OR_CANCEL
    1714 00004c00                    MESS_MAC  RD7FONT,SPACING20,AM_X,MOC_Y1,COLOR_LF,STRCNRM,0
    1715 00004ca0       4f           .STRING   "OPEN COIN DOOR, OR"
    1716 00004d30       00           .BYTE   0,1
    1717 00004d40                    .EVEN
    1718 00004d40                    MESS_MAC  RD7FONT,SPACING20,AM_X,MOC_Y2,COLOR_LF,STRCNRM,0
    1719 00004de0       50           .STRING   "PRESS ANY BUTTON"
    1720 00004e60       00           .BYTE   0,1
    1721 00004e70                    .EVEN
    1722 00004e70                    MESS_MAC  RD7FONT,SPACING20,AM_X,MOC_Y3,COLOR_LF,STRCNRM,0
    1723 00004f10       54           .STRING   "TO CANCEL"
    1724 00004f58       00           .BYTE   0,0
    1725 00004f70                    .EVEN
    1726                    
    1727              009d  IN_Y1    EQU     CUR_ULY+32
    1728              00a9  IN_Y2    EQU     IN_Y1+12
    1729              00d0  IN_Y3    EQU     IN_Y2+39
    1730              00dc  IN_Y4    EQU     IN_Y3+12
    1731                    
    1732 00004f70           INST_TO_ADJ
    1733 00004f70                     MESS_MAC  RD7FONT,SPACING07,AM_X,IN_Y1,COLOR_WHITE,STRCNRM,0
    1734 00005010       4d           .STRING   "MODIFY VALUE WITH"
    1735 00005098       00           .BYTE   0,1
    1736 000050b0                    .EVEN
    1737 000050b0                     MESS_MAC  RD7FONT,SPACING07,AM_X,IN_Y2,COLOR_WHITE,STRCNRM,0
    1738 00005150       41           .STRING   "ANY STICK"
    1739 00005198       00           .BYTE   0,1
    1740 000051b0                    .EVEN
    1741 000051b0                    MESS_MAC  RD7FONT,SPACING07,AM_X,IN_Y3,COLOR_WHITE,STRCNRM,0
    1742 00005250       50           .STRING   "PRESS ANY BUTTON"
    1743 000052d0       00           .BYTE   0,1
    1744 000052e0                    .EVEN
    1745 000052e0                    MESS_MAC  RD7FONT,SPACING07,AM_X,IN_Y4,COLOR_WHITE,STRCNRM,0
    1746 00005380       57           .STRING   "WHEN VALUE IS CORRECT."
    1747 00005430       00           .BYTE   0,0
    1748 00005440                    .EVEN
    1749              005a  ADNOW_Y1 EQU     CUR_ULY-35
    1750              0066  ADNOW_Y2 EQU     ADNOW_Y1+12
    1751                    
    1752 00005440           MES_ADJUSTING
    1753 00005440                    MESS_MAC  RD7FONT,SPACING07,AM_X,ADNOW_Y1,COLOR_LF,STRCNRM,0
    1754 000054e0       41           .STRING   "ADJUSTING"
    1755 00005528       00           .BYTE   0,0
    1756 00005540                    .EVEN
    1757                    
    1758 00005540           MES_ADNAME
    1759 00005540                    MESS_MAC  RD7FONT,SPACING07,AM_X,ADNOW_Y2,COLOR_LF,STRCNRM,0
    1760                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

    1761              0032  INSTR_Y  EQU     INST_ULY+5
    1762              003c  INSTR_2Y EQU     INSTR_Y+10
    1763                    
    1764 000055e0           ADJ_ADV
    1765 000055e0                     MESS_MAC  RD7FONT,SPACING07,AM_X,INSTR_Y,COLOR_BPR,STRCNRM,0
    1766 00005680       53           .STRING   "SELECT WITH ANY STICK"
    1767 00005728       00           .BYTE   0,1
    1768 00005740                    .EVEN
    1769 00005740                    MESS_MAC  RD7FONT,SPACING07,AM_X,INSTR_2Y,COLOR_BPR,STRCNRM,0
    1770 000057e0       50           .STRING   "PRESS A BUTTON TO MODIFY"
    1771 000058a0       00           .BYTE   0,0
    1772 000058b0                    .EVEN
    1773                    
    1774              00b6  AAY      EQU     IN_Y1+19H
    1775                    
    1776 000058b0           ADJ_ARROW
    1777 000058b0                    MESS_MAC  RD7FONT,0FFFDH,AM_X,AAY,COLOR_LF,STRCNRM,0
    1778 00005950       2d           .STRING   "----->    ----->    ----->    ----->    ----->"
    1779 00005ac0       00           .BYTE   0,0
    1780 00005ad0                    .EVEN
    1781                    
    1782                    
    1783 00005ad0           MESS_TAMPERED
    1784 00005ad0       43           .STRING "CUSTOM"
    1785 00005b00       00           .BYTE   0
    1786 00005b10                    .EVEN
    1787                    
    1788 00005b10           MESS_DIP
    1789 00005b10       44          .STRING "DIPSWITCH",0
    1790 00005b60                   .EVEN
    1791                    
    1792 00005b60           M_MULTVAL
    1793 00005b60       4d           .STRING "MULTIPLIER VALUES"
    1794 00005be8       00           .BYTE   0
    1795 00005bf0                    .EVEN
    1796 00005bf0           M_MULTVAL1
    1797 00005bf0       43           .STRING "CHUTE 1 MULTIPLIER : "
    1798 00005c98       00           .BYTE   0
    1799 00005ca0                    .EVEN
    1800 00005ca0           M_MULTVAL2
    1801 00005ca0       43           .STRING "CHUTE 2 MULTIPLIER : "
    1802 00005d48       00           .BYTE   0
    1803 00005d50                    .EVEN
    1804 00005d50           M_MULTVAL3
    1805 00005d50       43           .STRING "CHUTE 3 MULTIPLIER : "
    1806 00005df8       00           .BYTE   0
    1807 00005e00                    .EVEN
    1808 00005e00           M_MULTVAL4
    1809 00005e00       43           .STRING "CHUTE 4 MULTIPLIER : "
    1810 00005ea8       00           .BYTE   0
    1811 00005eb0                    .EVEN
    1812 00005eb0           M_MULTVAL5
    1813 00005eb0       56           .STRING "VALIDATOR MULTIPLIER : "
    1814 00005f68       00           .BYTE   0
    1815 00005f70                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

    1816                    
    1817                    
    1818 00005f70           M_SLOTVAL
    1819 00005f70       53           .STRING "S1     S2     S3     S4     DBV"
    1820 00006068       00           .BYTE   0
    1821 00006070                    .EVEN
    1822                    
    1823 00006070       47  MESS_GP  .STRING "GAME PRICING:"
    1824 000060d8       00           .BYTE   0
    1825 000060e0                    .EVEN
    1826 000060e0       46  MESS_FP  .STRING "FREE PLAY:"
    1827 00006130       00           .BYTE   0
    1828 00006140                    .EVEN
    1829 00006140       4d  MESS_MAX .STRING "MAXIMUM CREDITS:"
    1830 000061c0       00           .BYTE   0
    1831 000061d0                    .EVEN
    1832                    
    1833 000061d0       43  M_CTS_PL         .STRING "CREDITS TO START:"
    1834 00006258       00           .BYTE 0
    1835 00006260                    .EVEN
    1836 00006260       43  M_CTC_PL         .STRING "CREDITS TO CONTINUE:"
    1837 00006300       00           .BYTE 0
    1838 00006310                    .EVEN
    1839                    
    1840 00006310           HELP_DIFF
    1841 00006310     0001           .WORD   1               ;CENTER JUSTIFY
    1842 00006320     0707           .WORD   COLOR_BLUE     ;COLOR
    1843 00006330     0006           .WORD   6               ;6 ENTRIES
    1844 00006340 00007dd0"          .LONG   DH_0
    1845 00006360 00007ea0"          .LONG   DH_1
    1846 00006380 00007f60"          .LONG   M_NULL
    1847 000063a0 00007f70"          .LONG   DH_3
    1848 000063c0 00008010"          .LONG   DH_4
    1849 000063e0 000080b0"          .LONG   DH_5
    1850 00006400           HELP_SPEEDS
    1851 00006400     0001           .WORD   1               ;CENTER JUSTIFY
    1852 00006410     0707           .WORD   COLOR_BLUE     ;COLOR
    1853 00006420     0006           .WORD   6               ;6 ENTRIES
    1854 00006430 00008150"          .LONG   SH_0
    1855 00006450 00008240"          .LONG   SH_1
    1856 00006470 00007f60"          .LONG   M_NULL
    1857 00006490 00008320"          .LONG   SH_3
    1858 000064b0 000083c0"          .LONG   SH_4
    1859 000064d0 00008460"          .LONG   SH_5
    1860                    
    1861 000064f0           HELP_CNTR
    1862 000064f0     0001           .WORD   1               ;CENTER JUSTIFY
    1863 00006500     0707           .WORD   COLOR_BLUE     ;COLOR
    1864 00006510     0006           .WORD   6               ;6 ENTRIES
    1865 00006520 000079d0"          .LONG   CNTRH_0
    1866 00006540 00007aa0"          .LONG   CNTRH_1
    1867 00006560 00007f60"          .LONG   M_NULL
    1868 00006580 00007b30"          .LONG   CNTRH_3
    1869 000065a0 00007c10"          .LONG   CNTRH_4
    1870 000065c0 00007cf0"          .LONG   CNTRH_5
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1871                    
    1872 000065e0           HELP_PRICE
    1873 000065e0     0000           .WORD   0               ;CENTER JUSTIFY
    1874 000065f0     0707           .WORD   COLOR_BLUE     ;COLOR
    1875 00006600     0004           .WORD   4               ;5 ENTRIES
    1876 00006610 00008700"          .LONG   PH_0
    1877 00006630 000087c0"          .LONG   PH_1
    1878 00006650 00008870"          .LONG   PH_2
    1879 00006670 000088f0"          .LONG   PH_3
    1880                    
    1881 00006690           HELP_MULT
    1882 00006690     0000           .WORD   0               ;CENTER JUSTIFY
    1883 000066a0     0707           .WORD   COLOR_BLUE     ;COLOR
    1884 000066b0     0003           .WORD   3               ;5 ENTRIES
    1885 000066c0 00008500"          .LONG   MH_0
    1886 000066e0 000085c0"          .LONG   MH_1
    1887 00006700 00008680"          .LONG   MH_2
    1888                    
    1889 00006720           HELP_DIP
    1890 00006720     0000          .WORD   0             ;CENTER JUSTIFY
    1891 00006730     0303          .WORD   COLOR_RED       ;COLOR
    1892 00006740     0003          .WORD   3
    1893 00006750 00008980"         .LONG   DIH_0
    1894 00006770 00008a30"         .LONG   DIH_1
    1895 00006790 00008af0"         .LONG   DIH_2
    1896                    
    1897 000067b0           HELP_PARAM
    1898 000067b0     0000           .WORD   0               ;CENTER JUSTIFY
    1899 000067c0     0707           .WORD   COLOR_BLUE     ;COLOR
    1900 000067d0     0006           .WORD   6               ;5 ENTRIES
    1901 000067e0 00009980"          .LONG   PP_0
    1902 00006800 00009a40"          .LONG   PP_1
    1903 00006820 00009af0"          .LONG   PP_2
    1904 00006840 00009bc0"          .LONG   PP_3
    1905 00006860 00009ca0"          .LONG   PP_4
    1906 00006880 00009d70"          .LONG   PP_5
    1907                    
    1908                    
    1909                    
    1910                    
    1911                    
    1912                    
    1913 000068a0           HELP_AMODE
    1914 000068a0     0000           .WORD   0               ;CENTER JUSTIFY
    1915 000068b0     0707           .WORD   COLOR_BLUE     ;COLOR
    1916 000068c0     0005           .WORD   5               ;6 ENTRIES
    1917 000068d0 00008b40"          .LONG   HAM_1
    1918 000068f0 00008c00"          .LONG   HAM_2
    1919 00006910 00008cd0"          .LONG   HAM_3
    1920 00006930 00007f60"          .LONG   M_NULL
    1921 00006950 00008d80"          .LONG   HAM_4
    1922                    
    1923 00006970           HELP_AHSRES
    1924 00006970     0000           .WORD   0               ;CENTER JUSTIFY
    1925 00006980     0707           .WORD   COLOR_BLUE     ;COLOR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1926 00006990     0006           .WORD   6               ;6 ENTRIES
    1927 000069a0 00008e30"          .LONG   HAH_1
    1928 000069c0 00008ef0"          .LONG   HAH_2
    1929 000069e0 00008fb0"          .LONG   HAH_3
    1930 00006a00 00009080"          .LONG   HAH_4
    1931 00006a20 00007f60"          .LONG   M_NULL
    1932 00006a40 00009140"          .LONG   HAH_5
    1933                    
    1934 00006a60           HELP_FREE
    1935 00006a60     0000           .WORD   0
    1936 00006a70     0707           .WORD   COLOR_BLUE
    1937 00006a80     0006           .WORD   6
    1938 00006a90 000091f0"          .LONG   FP_M1
    1939 00006ab0 000092a0"          .LONG   FP_M2
    1940 00006ad0 00009360"          .LONG   FP_M3
    1941 00006af0 00009420"          .LONG   FP_M4
    1942 00006b10 00007f60"          .LONG   M_NULL
    1943 00006b30 00009480"          .LONG   FP_M5
    1944                    
    1945 00006b50           CTIT_HELP
    1946 00006b50     0000           .WORD   0
    1947 00006b60     0202           .WORD   COLOR_WHITE
    1948 00006b70     0005           .WORD   5
    1949 00006b80 00009520"          .LONG   CT_M1
    1950 00006ba0 000095f0"          .LONG   CT_M2
    1951 00006bc0 000096c0"          .LONG   CT_M3
    1952 00006be0 000097a0"          .LONG   CT_M4
    1953 00006c00 00009890"          .LONG   CT_M5
    1954                    
    1955 00006c20           HELP_LCU
    1956 00006c20     0000           .WORD   0
    1957 00006c30     0202           .WORD   COLOR_WHITE
    1958 00006c40     0006           .WORD   6
    1959 00006c50 00009e40"          .LONG   LC_M1
    1960 00006c70 00009f20"          .LONG   LC_M2
    1961 00006c90 0000a010"          .LONG   LC_M3
    1962 00006cb0 0000a100"          .LONG   LC_M4
    1963 00006cd0 0000a1b0"          .LONG   LC_M5
    1964 00006cf0 0000a280"          .LONG   LC_M6
    1965                    
    1966 00006d10           HELP_CCU
    1967 00006d10     0000           .WORD   0
    1968 00006d20     0202           .WORD   COLOR_WHITE
    1969 00006d30     0006           .WORD   6
    1970 00006d40 00009e40"          .LONG   LC_M1
    1971 00006d60 00009f20"          .LONG   LC_M2
    1972 00006d80 0000a010"          .LONG   LC_M3
    1973 00006da0 0000a100"          .LONG   LC_M4
    1974 00006dc0 0000a340"          .LONG   CC_M5
    1975 00006de0 0000a280"          .LONG   LC_M6
    1976                    
    1977 00006e00           HELP_RCU
    1978 00006e00     0000           .WORD   0
    1979 00006e10     0202           .WORD   COLOR_WHITE
    1980 00006e20     0006           .WORD   6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

    1981 00006e30 00009e40"          .LONG   LC_M1
    1982 00006e50 00009f20"          .LONG   LC_M2
    1983 00006e70 0000a010"          .LONG   LC_M3
    1984 00006e90 0000a100"          .LONG   LC_M4
    1985 00006eb0 0000a410"          .LONG   RC_M5
    1986 00006ed0 0000a280"          .LONG   LC_M6
    1987 00006ef0           HELP_XCU
    1988 00006ef0     0000           .WORD   0
    1989 00006f00     0202           .WORD   COLOR_WHITE
    1990 00006f10     0006           .WORD   6
    1991 00006f20 00009e40"          .LONG   LC_M1
    1992 00006f40 00009f20"          .LONG   LC_M2
    1993 00006f60 0000a010"          .LONG   LC_M3
    1994 00006f80 0000a100"          .LONG   LC_M4
    1995 00006fa0 0000a4e0"          .LONG   XC_M5
    1996 00006fc0 0000a280"          .LONG   LC_M6
    1997                    
    1998 00006fe0           HELP_LMULT
    1999 00006fe0     0000           .WORD   0
    2000 00006ff0     0202           .WORD   COLOR_WHITE
    2001 00007000     0003           .WORD   3
    2002 00007010 0000a5c0"          .LONG   MZ_M1
    2003 00007030 0000a660"          .LONG   MZ_M2
    2004 00007050 0000a700"          .LONG   MZ_C1
    2005                    
    2006 00007070           HELP_RMULT
    2007 00007070     0000           .WORD   0
    2008 00007080     0202           .WORD   COLOR_WHITE
    2009 00007090     0003           .WORD   3
    2010 000070a0 0000a5c0"          .LONG   MZ_M1
    2011 000070c0 0000a660"          .LONG   MZ_M2
    2012 000070e0 0000a750"          .LONG   MZ_C2
    2013                    
    2014 00007100           HELP_CMULT
    2015 00007100     0000           .WORD   0
    2016 00007110     0202           .WORD   COLOR_WHITE
    2017 00007120     0003           .WORD   3
    2018 00007130 0000a5c0"          .LONG   MZ_M1
    2019 00007150 0000a660"          .LONG   MZ_M2
    2020 00007170 0000a7a0"          .LONG   MZ_C3
    2021                    
    2022 00007190           HELP_XMULT
    2023 00007190     0000           .WORD   0
    2024 000071a0     0202           .WORD   COLOR_WHITE
    2025 000071b0     0003           .WORD   3
    2026 000071c0 0000a5c0"          .LONG   MZ_M1
    2027 000071e0 0000a660"          .LONG   MZ_M2
    2028 00007200 0000a7f0"          .LONG   MZ_C4
    2029                    
    2030 00007220           HELP_BMULT
    2031 00007220     0000           .WORD   0
    2032 00007230     0202           .WORD   COLOR_WHITE
    2033 00007240     0003           .WORD   3
    2034 00007250 0000a5c0"          .LONG   MZ_M1
    2035 00007270 0000a660"          .LONG   MZ_M2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

    2036 00007290 0000aae0"          .LONG   MZ_DB
    2037                    
    2038 000072b0           HELP_TOTALIZER
    2039 000072b0     0000           .WORD   0
    2040 000072c0     0202           .WORD   COLOR_WHITE
    2041 000072d0     0003           .WORD   3
    2042 000072e0 0000a840"          .LONG   MR_M1
    2043 00007300 0000a900"          .LONG   MR_M2
    2044 00007320 0000a9f0"          .LONG   MR_M3
    2045 00007340           HELP_DBV
    2046 00007340     0000           .WORD   0
    2047 00007350     0202           .WORD   COLOR_WHITE
    2048 00007360     0006           .WORD   6
    2049 00007370 00009e40"          .LONG   LC_M1
    2050 00007390 00009f20"          .LONG   LC_M2
    2051 000073b0 0000a010"          .LONG   LC_M3
    2052 000073d0 0000a100"          .LONG   LC_M4
    2053 000073f0 0000aae0"          .LONG   DBV_M5
    2054 00007410 0000a280"          .LONG   LC_M6
    2055                    
    2056 00007430     0000  HELP_UC  .WORD   0
    2057 00007440     0202           .WORD   COLOR_WHITE
    2058 00007450     0003           .WORD   3
    2059 00007460 0000ab60"          .LONG   UC_M1
    2060 00007480 0000ac40"          .LONG   UC_M2
    2061 000074a0 0000ad10"          .LONG   UC_M3
    2062                    
    2063 000074c0     0000  HELP_UB  .WORD   0
    2064 000074d0     0202           .WORD   COLOR_WHITE
    2065 000074e0     0003           .WORD   3
    2066 000074f0 0000ad50"          .LONG   UB_M1
    2067 00007510 0000ae20"          .LONG   UB_M2
    2068 00007530 0000af00"          .LONG   UB_M3
    2069                    
    2070 00007550     0000  HELP_UM  .WORD   0
    2071 00007560     0202           .WORD   COLOR_WHITE
    2072 00007570     0003           .WORD   3
    2073 00007580 0000af90"          .LONG   UM_M1
    2074 000075a0 0000b070"          .LONG   UM_M2
    2075 000075c0 0000b120"          .LONG   UM_M3
    2076                    
    2077                    
    2078 000075e0     0000  HELP_CS  .WORD   0
    2079 000075f0     0202           .WORD   COLOR_WHITE
    2080 00007600     0003           .WORD   3
    2081 00007610 0000b1e0"          .LONG   CS_M1
    2082 00007630 0000b2a0"          .LONG   CS_M2
    2083 00007650 0000b320"          .LONG   CS_M3
    2084                    
    2085 00007670     0000  HELP_CC  .WORD   0
    2086 00007680     0202           .WORD   COLOR_WHITE
    2087 00007690     0003           .WORD   3
    2088 000076a0 0000b1e0"          .LONG   CS_M1
    2089 000076c0 0000b2a0"          .LONG   CS_M2
    2090 000076e0 0000b380"          .LONG   CC_M3
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    2091                    
    2092 00007700           HELP_CRFR
    2093 00007700     0000           .WORD   0
    2094 00007710     0202           .WORD   COLOR_WHITE
    2095 00007720     0006           .WORD   6
    2096 00007730 0000b410"          .LONG   FR_M1
    2097 00007750 0000b4a0"          .LONG   FR_M2
    2098 00007770 0000b580"          .LONG   FR_M3
    2099 00007790 00007f60"          .LONG   M_NULL
    2100 000077b0 0000b660"          .LONG   FR_M4
    2101 000077d0 0000b700"          .LONG   FR_M5
    2102                    
    2103 000077f0     0000  HELP_CPD .WORD   0
    2104 00007800     0202           .WORD   COLOR_WHITE
    2105 00007810     0006           .WORD   6
    2106 00007820 0000b7f0"          .LONG   CPD_M1
    2107 00007840 0000b8c0"          .LONG   CPD_M2
    2108 00007860 0000b960"          .LONG   CPD_M3
    2109 00007880 0000ba30"          .LONG   CPD_M4
    2110 000078a0 0000bae0"          .LONG   CPD_M5
    2111 000078c0 0000bbc0"          .LONG   CPD_M6
    2112                    
    2113 000078e0     0000  HELP_MAX .WORD   0
    2114 000078f0     0202           .WORD   COLOR_WHITE
    2115 00007900     0006           .WORD   6
    2116 00007910 0000bc90"          .LONG   MC_M1
    2117 00007930 0000bd40"          .LONG   MC_M2
    2118 00007950 0000bdf0"          .LONG   MC_M3
    2119 00007970 0000bec0"          .LONG   MC_M4
    2120 00007990 00007f60"          .LONG   M_NULL
    2121 000079b0 0000bf30"          .LONG   MC_M5
    2122                    
    2123                    
    2124 000079d0       54  CNTRH_0     .STRING "THIS CONTROLS MECHANICAL"
    2125 00007a90       00           .BYTE 0
    2126 00007aa0                    .EVEN
    2127 00007aa0       43  CNTRH_1     .STRING "COIN COUNTER MODE"
    2128 00007b28       00             .BYTE 0
    2129 00007b30                    .EVEN
    2130 00007b30       43  CNTRH_3     .STRING "CNTR1 = MULT OF LOW COIN: 1"
    2131 00007c08       00           .BYTE 0
    2132 00007c10                    .EVEN
    2133 00007c10       43  CNTRH_4     .STRING "CNTR1 = 1 COUNT/COIN:     2"
    2134 00007ce8       00           .BYTE 0                
    2135 00007cf0                    .EVEN
    2136 00007cf0       43  CNTRH_5     .STRING "CNTR1=LCOIN, CNTR2=RCOIN: 3"
    2137 00007dc8       00           .BYTE 0
    2138 00007dd0                    .EVEN
    2139                    
    2140                    
    2141 00007dd0       54  DH_0     .STRING "THIS CONTROLS THE OVERALL"
    2142 00007e98       00           .BYTE 0
    2143 00007ea0                    .EVEN
    2144 00007ea0       44  DH_1     .STRING "DIFFICULTY OF GAME PLAY."
    2145 00007f60       00  M_NULL   .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

    2146 00007f70                    .EVEN
    2147 00007f70       45  DH_3     .STRING "EASIEST  SETTING: 1"
    2148 00008008       00           .BYTE 0
    2149 00008010                    .EVEN
    2150 00008010       48  DH_4     .STRING "HARDEST SETTING: 10"
    2151 000080a8       00           .BYTE 0
    2152 000080b0                    .EVEN
    2153 000080b0       46  DH_5     .STRING "FACTORY SETTING: 5"
    2154 00008140       00           .BYTE 0
    2155 00008150                    .EVEN
    2156                    
    2157                    
    2158 00008150       54  SH_0     .STRING "THIS CONTROLS SPEED OF CLOCK"
    2159 00008230       00           .BYTE 0
    2160 00008240                    .EVEN
    2161 00008240       41  SH_1     .STRING "AND ADJUSTS DAMAGE PER HIT."
    2162 00008318       00           .BYTE 0
    2163 00008320                    .EVEN
    2164 00008320       53  SH_3     .STRING "SLOWEST SETTING: 1"
    2165 000083b0       00           .BYTE 0
    2166 000083c0                    .EVEN
    2167 000083c0       46  SH_4     .STRING "FASTEST SETTING: 5"
    2168 00008450       00           .BYTE 0
    2169 00008460                    .EVEN
    2170 00008460       46  SH_5     .STRING "FACTORY SETTING: 3"
    2171 000084f0       00           .BYTE 0
    2172 00008500                    .EVEN
    2173                    
    2174                    
    2175                    
    2176                    
    2177                    
    2178                    
    2179 00008500       43  MH_0     .STRING "CUSTOMISE THE INTERNAL"
    2180 000085b0       00           .BYTE 0
    2181 000085c0                    .EVEN
    2182 000085c0       43  MH_1     .STRING "COIN CHUTE MULTIPLIERS"
    2183 00008670       00           .BYTE 0
    2184 00008680                    .EVEN
    2185 00008680       46  MH_2     .STRING "FOR EACH CHUTE."
    2186 000086f8       00           .BYTE 0
    2187 00008700                    .EVEN
    2188                    
    2189 00008700       53  PH_0     .STRING "SELECT BUILT-IN PRICING"
    2190 000087b8       00           .BYTE 0
    2191 000087c0                    .EVEN
    2192 000087c0       4d  PH_1     .STRING "MODE, SELECTING COINS"
    2193 00008868       00           .BYTE 0
    2194 00008870                    .EVEN
    2195 00008870       50  PH_2     .STRING "PER CREDIT, AND"
    2196 000088e8       00           .BYTE 0
    2197 000088f0                    .EVEN
    2198 000088f0       43  PH_3     .STRING "COIN SLOT VALUE."
    2199 00008970       00           .BYTE 0
    2200 00008980                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

    2201                    
    2202 00008980       54  DIH_0   .STRING "THIS OPTION IS BEING",0
    2203 00008a30                   .EVEN
    2204 00008a30       41  DIH_1   .STRING "ADJUSTED FROM DIPSWITCH",0
    2205 00008af0                   .EVEN
    2206 00008af0       53  DIH_2   .STRING "SETTINGS.",0
    2207 00008b40                   .EVEN
    2208                    
    2209                    
    2210                    
    2211                    
    2212                    
    2213                    
    2214 00008b40       54  HAM_1    .STRING "THIS DETERMINES WHETHER"
    2215 00008bf8       00           .BYTE 0
    2216 00008c00                    .EVEN
    2217 00008c00       54  HAM_2    .STRING "THE GAME WILL MAKE SOUNDS"
    2218 00008cc8       00           .BYTE 0
    2219 00008cd0                    .EVEN
    2220 00008cd0       49  HAM_3    .STRING "IN THE ATTRACT MODE."
    2221 00008d70       00           .BYTE 0
    2222 00008d80                    .EVEN
    2223 00008d80       46  HAM_4    .STRING "FACTORY SETTING: OFF"
    2224 00008e20       00           .BYTE 0
    2225 00008e30                    .EVEN
    2226 00008e30       54  HAH_1    .STRING "THE ALL TIME HIGH SCORE"
    2227 00008ee8       00           .BYTE 0
    2228 00008ef0                    .EVEN
    2229 00008ef0       54  HAH_2    .STRING "TABLE WILL BE RESET TO"
    2230 00008fa0       00           .BYTE 0
    2231 00008fb0                    .EVEN
    2232 00008fb0       46  HAH_3    .STRING "FACTORY VALUES EACH TIME"
    2233 00009070       00           .BYTE 0
    2234 00009080                    .EVEN
    2235 00009080       54  HAH_4    .STRING "THIS MANY PLAYS OCCURS."
    2236 00009138       00           .BYTE 0
    2237 00009140                    .EVEN
    2238 00009140       46  HAH_5    .STRING "FACTORY SETTING: 5000"
    2239 000091e8       00           .BYTE 0
    2240 000091f0                    .EVEN
    2241                    
    2242                    
    2243 000091f0       53  FP_M1    .STRING "SETTING FREE PLAY TO"
    2244 00009290       00           .BYTE 0
    2245 000092a0                    .EVEN
    2246 000092a0       22  FP_M2    .BYTE   ASCII_DQ
    2247 000092a8       59           .STRING "YES"
    2248 000092c0       22           .BYTE   ASCII_DQ
    2249 000092c8       20           .STRING " ALLOWS UNLIMITED"
    2250 00009350       00           .BYTE 0
    2251 00009360                    .EVEN
    2252 00009360       50  FP_M3    .STRING "PLAY WITHOUT INSERTING"
    2253 00009410       00           .BYTE 0
    2254 00009420                    .EVEN
    2255 00009420       41  FP_M4    .STRING "ANY COINS."
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

    2256 00009470       00           .BYTE 0
    2257 00009480                    .EVEN
    2258 00009480       46  FP_M5    .STRING "FACTORY SETTING: NO"
    2259 00009518       00           .BYTE 0
    2260 00009520                    .EVEN
    2261 00009520       57  CT_M1    .STRING "WHENEVER STANDARD PRICING"
    2262 000095e8       00           .BYTE 0
    2263 000095f0                    .EVEN
    2264 000095f0       49  CT_M2    .STRING "IS USED, A CORRESPONDING"
    2265 000096b0       00           .BYTE 0
    2266 000096c0                    .EVEN
    2267 000096c0       4d  CT_M3    .STRING "MESSAGE IS DISPLAYED ON THE"
    2268 00009798       00           .BYTE 0
    2269 000097a0                    .EVEN
    2270 000097a0       43  CT_M4    .STRING "CREDITS SCREEN.  SETTING THIS"
    2271 00009888       00           .BYTE 0
    2272 00009890                    .EVEN
    2273 00009890       54  CT_M5    .STRING "TO "
    2274 000098a8       22           .BYTE ASCII_DQ
    2275 000098b0       4e           .STRING "NO"
    2276 000098c0       22           .BYTE ASCII_DQ
    2277 000098c8       20           .STRING " DISABLES THE MESSAGE."
    2278 00009978       00           .BYTE 0
    2279 00009980                    .EVEN
    2280                    
    2281 00009980       54  PP_0     .STRING "THIS ALLOWS ADJUSTMENT"
    2282 00009a30       00           .BYTE 0
    2283 00009a40                    .EVEN
    2284 00009a40       4f  PP_1     .STRING "OF PRICING PARAMETERS"
    2285 00009ae8       00           .BYTE 0
    2286 00009af0                    .EVEN
    2287 00009af0       28  PP_2     .STRING "(FOR NON-STANDARD MODES),"
    2288 00009bb8       00           .BYTE 0
    2289 00009bc0                    .EVEN
    2290 00009bc0       46  PP_3     .STRING "FREE PLAY, MAXIMUM CREDITS,"
    2291 00009c98       00           .BYTE 0
    2292 00009ca0                    .EVEN
    2293 00009ca0       43  PP_4     .STRING "CREDITS REQUIRED TO START"
    2294 00009d68       00           .BYTE 0
    2295 00009d70                    .EVEN
    2296 00009d70       41  PP_5     .STRING "AND CREDITS TO CONTINUE."
    2297 00009e30       00           .BYTE 0
    2298 00009e40                    .EVEN
    2299                    
    2300                    
    2301 00009e40       45  LC_M1    .STRING "EACH COIN INSERTED ADDS TO"
    2302 00009f10       00           .BYTE 0
    2303 00009f20                    .EVEN
    2304 00009f20       43  LC_M2    .STRING "COIN UNITS.  THIS ADJUSTMENT"
    2305 0000a000       00           .BYTE 0
    2306 0000a010                    .EVEN
    2307 0000a010       53  LC_M3    .STRING "SPECIFIES THE NUMBER OF COIN"
    2308 0000a0f0       00           .BYTE 0
    2309 0000a100                    .EVEN
    2310 0000a100       55  LC_M4    .STRING "UNITS GIVEN FOR EACH"
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

    2311 0000a1a0       00           .BYTE 0
    2312 0000a1b0                    .EVEN
    2313 0000a1b0       43  LC_M5    .STRING "COIN IN LEFT COIN CHUTE."
    2314 0000a270       00           .BYTE 0
    2315 0000a280                    .EVEN
    2316 0000a280       28  LC_M6    .STRING "(SEE "
    2317 0000a2a8       22           .BYTE ASCII_DQ
    2318 0000a2b0       55           .STRING "UNITS / CREDIT"
    2319 0000a320       22           .BYTE ASCII_DQ
    2320 0000a328       29           .STRING ")"
    2321 0000a330       00           .BYTE 0
    2322 0000a340                    .EVEN
    2323 0000a340       43  CC_M5    .STRING "COIN IN THIRD COIN CHUTE."
    2324 0000a408       00           .BYTE 0
    2325 0000a410                    .EVEN
    2326 0000a410       43  RC_M5    .STRING "COIN IN RIGHT COIN CHUTE."
    2327 0000a4d8       00           .BYTE 0
    2328 0000a4e0                    .EVEN
    2329 0000a4e0       43  XC_M5    .STRING "COIN IN FOURTH COIN CHUTE."
    2330 0000a5b0       00           .BYTE 0
    2331 0000a5c0                    .EVEN
    2332 0000a5c0       4d  MZ_M1    .STRING "MODIFIY TOTALIZING"
    2333 0000a650       00           .BYTE 0
    2334 0000a660                    .EVEN
    2335 0000a660       4d  MZ_M2    .STRING "MULTIPLER VALUE FOR"
    2336 0000a6f8       00           .BYTE 0
    2337 0000a700                    .EVEN
    2338 0000a700       43  MZ_C1    .STRING "CHUTE 1."
    2339 0000a740       00           .BYTE 0
    2340 0000a750                    .EVEN
    2341 0000a750       43  MZ_C2    .STRING "CHUTE 2."
    2342 0000a790       00           .BYTE 0
    2343 0000a7a0                    .EVEN
    2344 0000a7a0       43  MZ_C3    .STRING "CHUTE 3."
    2345 0000a7e0       00           .BYTE 0
    2346 0000a7f0                    .EVEN
    2347 0000a7f0       43  MZ_C4    .STRING "CHUTE 4."
    2348 0000a830       00           .BYTE 0
    2349 0000a840                    .EVEN
    2350                    
    2351 0000a840       54  MR_M1    .STRING "TOTALIZER MODE, EITHER."
    2352 0000a8f8       00           .BYTE 0
    2353 0000a900                    .EVEN
    2354                    
    2355 0000a900       53  MR_M2    .STRING "STANDARD TOTALIZER MODE (NO)"
    2356 0000a9e0       00           .BYTE 0
    2357 0000a9f0                    .EVEN
    2358                    
    2359 0000a9f0       43  MR_M3    .STRING "CUSTOM TOTALIZER MODE (YES)."
    2360 0000aad0       00           .BYTE 0
    2361 0000aae0                    .EVEN
    2362                    
    2363 0000aae0           MZ_DB
    2364 0000aae0       42  DBV_M5   .STRING "BILL VALIDATOR."
    2365 0000ab58       00           .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

    2366 0000ab60                    .EVEN
    2367 0000ab60       54  UC_M1    .STRING "THIS IS THE NUMBER OF COIN"
    2368 0000ac30       00           .BYTE 0
    2369 0000ac40                    .EVEN
    2370 0000ac40       55  UC_M2    .STRING "UNITS REQUIRED TO BUY ONE"
    2371 0000ad08       00           .BYTE 0
    2372 0000ad10                    .EVEN
    2373 0000ad10       43  UC_M3    .STRING "CREDIT."
    2374 0000ad48       00           .BYTE 0
    2375 0000ad50                    .EVEN
    2376 0000ad50       31  UB_M1    .STRING "1 BONUS CREDIT IS AWARDED"
    2377 0000ae18       00           .BYTE 0
    2378 0000ae20                    .EVEN
    2379 0000ae20       41  UB_M2    .STRING "AFTER THIS MANY COIN UNITS"
    2380 0000aef0       00           .BYTE 0
    2381 0000af00                    .EVEN
    2382 0000af00       48  UB_M3    .STRING "HAVE ACCUMULATED."
    2383 0000af88       00           .BYTE 0
    2384 0000af90                    .EVEN
    2385                    
    2386 0000af90       4e  UM_M1    .STRING "NO CREDITS WILL BE AWARDED"
    2387 0000b060       00           .BYTE 0
    2388 0000b070                    .EVEN
    2389 0000b070       55  UM_M2    .STRING "UNTIL THIS MANY COIN"
    2390 0000b110       00           .BYTE 0
    2391 0000b120                    .EVEN
    2392 0000b120       55  UM_M3    .STRING "UNITS HAVE ACCUMULATED."
    2393 0000b1d8       00           .BYTE 0
    2394 0000b1e0                    .EVEN
    2395                    
    2396 0000b1e0       45  CS_M1    .STRING "EACH PLAYER NEEDS THIS"
    2397 0000b290       00           .BYTE 0
    2398 0000b2a0                    .EVEN
    2399 0000b2a0       4d  CS_M2    .STRING "MANY CREDITS TO"
    2400 0000b318       00           .BYTE 0
    2401 0000b320                    .EVEN
    2402 0000b320       42  CS_M3    .STRING "BEGIN PLAY."
    2403 0000b378       00           .BYTE 0
    2404 0000b380                    .EVEN
    2405                    
    2406 0000b380       43  CC_M3    .STRING "CONTINUE A GAME."
    2407 0000b400       00           .BYTE 0
    2408 0000b410                    .EVEN
    2409                    
    2410 0000b410       57  FR_M1    .STRING "WHEN SET TO YES,"
    2411 0000b490       00           .BYTE 0
    2412 0000b4a0                    .EVEN
    2413 0000b4a0       46  FR_M2    .STRING "FRACTIONAL CREDITS WILL BE"
    2414 0000b570       00           .BYTE 0
    2415 0000b580                    .EVEN
    2416 0000b580       53  FR_M3    .STRING "SEEN ON THE CREDITS SCREEN."
    2417 0000b658       00           .BYTE 0
    2418 0000b660                    .EVEN
    2419 0000b660       46  FR_M4    .STRING "FRACTION SHOWN IS:"
    2420 0000b6f0       00           .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

    2421 0000b700                    .EVEN
    2422 0000b700       28  FR_M5    .STRING "(COIN UNITS / "
    2423 0000b770       22           .BYTE ASCII_DQ
    2424 0000b778       55           .STRING "UNITS/CREDIT"
    2425 0000b7d8       22           .BYTE ASCII_DQ
    2426 0000b7e0       29           .STRING ")"
    2427 0000b7e8       00           .BYTE 0
    2428 0000b7f0                    .EVEN
    2429                    
    2430 0000b7f0       54  CPD_M1   .STRING "THE DETAILED BOOKKEEPING"
    2431 0000b8b0       00           .BYTE 0
    2432 0000b8c0                    .EVEN
    2433 0000b8c0       53  CPD_M2   .STRING "SCREEN SHOWS TOTAL"
    2434 0000b950       00           .BYTE 0
    2435 0000b960                    .EVEN
    2436 0000b960       43  CPD_M3   .STRING "COLLECTIONS BASED ON THIS"
    2437 0000ba28       00           .BYTE 0
    2438 0000ba30                    .EVEN
    2439 0000ba30       4d  CPD_M4   .STRING "MANY COINS PER BILL."
    2440 0000bad0       00           .BYTE 0
    2441 0000bae0                    .EVEN
    2442 0000bae0       28  CPD_M5   .STRING "(SET TO ZERO TO DISABLE THE"
    2443 0000bbb8       00           .BYTE 0
    2444 0000bbc0                    .EVEN
    2445 0000bbc0       44  CPD_M6   .STRING "DISPLAY OF MONEY TOTALS.)"
    2446 0000bc88       00           .BYTE 0
    2447 0000bc90                    .EVEN
    2448                    
    2449 0000bc90       54  MC_M1    .STRING "THIS IS THE LIMIT FOR"
    2450 0000bd38       00           .BYTE 0
    2451 0000bd40                    .EVEN
    2452 0000bd40       54  MC_M2    .STRING "THE CREDITS COUNTER."
    2453 0000bde0       00           .BYTE 0
    2454 0000bdf0                    .EVEN
    2455 0000bdf0       41  MC_M3    .STRING "ADDITIONAL COINS INSERTED"
    2456 0000beb8       00           .BYTE 0
    2457 0000bec0                    .EVEN
    2458 0000bec0       57  MC_M4    .STRING "WILL BE LOST."
    2459 0000bf28       00           .BYTE 0
    2460 0000bf30                    .EVEN
    2461 0000bf30       46  MC_M5    .STRING "FACTORY SETTING: 50"
    2462 0000bfc8       00           .BYTE 0
    2463 0000bfd0                    .EVEN
    2464                    
    2465 0000bfd0           LIST_CNTR       
    2466 0000bfd0 0000c450"          .LONG   CNTR_1,CNTR_2,CNTR_3
    2467 0000c030           LIST_DIFF       
    2468 0000c030 0000ca20"          .LONG   DIFF_1,DIFF_2,DIFF_3,DIFF_4,DIFF_5
    2469 0000c0d0 0000cc40"          .LONG   DIFF_6,DIFF_7,DIFF_8,DIFF_9,DIFF_10
    2470                    
    2471 0000c170           LIST_SPEEDS
    2472 0000c170 0000c5f0"         .long   SPEED_1,SPEED_2,SPEED_3
    2473 0000c1d0 0000c7a0"         .long   SPEED_4,SPEED_5
    2474                    
    2475                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

    2476                    
    2477                    
    2478 0000c210           LIST_AMODE
    2479 0000c210 0000ce80"          .LONG   M_AMS,M_NOAMS
    2480                    
    2481 0000c250           LIST_NOYES
    2482 0000c250 0000c310"          .LONG   M_NO,M_YES
    2483                    
    2484 0000c290           LIST_YESNO
    2485 0000c290 0000c330"          .LONG   M_YES,M_NO
    2486                    
    2487 0000c2d0           LIST_DIPNOYES
    2488 0000c2d0 0000c3d0"         .LONG   M_DNO, M_DYES
    2489                    
    2490 0000c310       4e  M_NO     .STRING "NO"
    2491 0000c320       00           .BYTE   0
    2492 0000c330                    .EVEN
    2493                    
    2494 0000c330       59  M_YES    .STRING "YES"
    2495 0000c348       00           .BYTE   0
    2496 0000c350                    .EVEN
    2497                    
    2498 0000c350       44  M_DYES  .STRING "DIPSWITCH - YES",0
    2499 0000c3d0                   .EVEN
    2500                    
    2501 0000c3d0       44  M_DNO   .STRING "DIPSWITCH - NO",0
    2502 0000c450                   .EVEN
    2503                    
    2504 0000c450       31  CNTR_1   .STRING "1 (PROPORTIONAL)"
    2505 0000c4d0       00           .BYTE   0
    2506 0000c4e0                    .EVEN
    2507 0000c4e0       32  CNTR_2   .STRING "2 (1 COUNT/COIN)"
    2508 0000c560       00           .BYTE   0
    2509 0000c570                    .EVEN
    2510 0000c570       33  CNTR_3   .STRING "3 (2 COUNTERS)"
    2511 0000c5e0       00           .BYTE   0
    2512 0000c5f0                    .EVEN
    2513                    
    2514 0000c5f0       31  SPEED_1 .string "1 (APPROX. 3:00)",0
    2515 0000c680                   .even
    2516 0000c680       32  SPEED_2 .string "2 (APPROX. 2:00)",0
    2517 0000c710                   .even
    2518 0000c710       33  SPEED_3 .string "3 (APPROX. 1:45)",0
    2519 0000c7a0                   .even
    2520 0000c7a0       34  SPEED_4 .string "4 (APPROX. 1:30)",0
    2521 0000c830                   .even
    2522 0000c830       35  SPEED_5 .string "5 (APPROX. 1:15)",0
    2523 0000c8c0                   .even
    2524                    
    2525 0000c8c0       34  N_4     .string "4",0
    2526 0000c8d0       35  N_5     .string "5",0
    2527 0000c8e0       36  N_6     .string "6",0
    2528 0000c8f0       37  N_7     .string "7",0
    2529 0000c900       38  N_8     .string "8 (DEFAULT)",0
    2530 0000c960       39  N_9     .string "9",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2531 0000c970       31  N_10    .string "10",0
    2532 0000c988       31  N_11    .string "11",0
    2533 0000c9a0       31  N_12    .string "12",0
    2534 0000c9b8       31  N_13    .string "13",0
    2535 0000c9d0       31  N_14    .string "14",0
    2536 0000c9e8       31  N_15    .string "15",0
    2537 0000ca00       31  N_16    .string "16",0
    2538 0000ca20                   .even
    2539                    
    2540                    
    2541 0000ca20       31  DIFF_1   .STRING "1 (SUPER EASY)"
    2542 0000ca90       00           .BYTE   0
    2543 0000caa0                    .EVEN
    2544 0000caa0       32  DIFF_2   .STRING "2 (EXTRA EASY)"
    2545 0000cb10       00           .BYTE   0
    2546 0000cb20                    .EVEN
    2547 0000cb20       33  DIFF_3   .STRING "3 (VERY EASY)"
    2548 0000cb88       00           .BYTE   0
    2549 0000cb90                    .EVEN
    2550 0000cb90       34  DIFF_4   .STRING "4 (EASY)"
    2551 0000cbd0       00           .BYTE   0
    2552 0000cbe0                    .EVEN
    2553 0000cbe0       35  DIFF_5   .STRING "5 (NORMAL)"
    2554 0000cc30       00           .BYTE   0
    2555 0000cc40                    .EVEN
    2556 0000cc40       36  DIFF_6   .STRING "6 (HARD)"
    2557 0000cc80       00           .BYTE   0
    2558 0000cc90                    .EVEN
    2559 0000cc90       37  DIFF_7   .STRING "7 (VERY HARD)"
    2560 0000ccf8       00           .BYTE   0
    2561 0000cd00                    .EVEN
    2562 0000cd00       38  DIFF_8   .STRING "8 (EXTRA HARD)"
    2563 0000cd70       00           .BYTE   0
    2564 0000cd80                    .EVEN
    2565 0000cd80       39  DIFF_9   .STRING "9 (SUPER HARD)"
    2566 0000cdf0       00           .BYTE   0
    2567 0000ce00                    .EVEN
    2568 0000ce00       31  DIFF_10  .STRING "10 (IMPOSSIBLE)"
    2569 0000ce78       00           .BYTE   0
    2570 0000ce80                    .EVEN
    2571                    
    2572                    
    2573                    
    2574                    
    2575 0000ce80       4f  M_AMS    .STRING "ON"
    2576 0000ce90       00           .BYTE 0
    2577 0000cea0                    .EVEN
    2578 0000cea0       4f  M_NOAMS  .STRING "OFF"
    2579 0000ceb8       00           .BYTE 0
    2580 0000cec0                    .EVEN
    2581 0000cec0       4f  MESS_OFF .STRING "OFF"
    2582 0000ced8       00           .BYTE 0
    2583 0000cee0                    .EVEN
    2584                    
    2585 0000cee0       4e  M_NOBONUS  .STRING "NO BONUS CREDIT"
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:41 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

    2586 0000cf58       00           .BYTE 0
    2587 0000cf60                    .EVEN
    2588                    
    2589 0000cf60       4e  M_NOMIN  .STRING "NO MINIMUM"
    2590 0000cfb0       00           .BYTE 0
    2591 0000cfc0                    .EVEN
    2592                    
    2593 0000cfc0       4e  M_NO_COL .STRING "NO MONEY TOTALS"
    2594 0000d038       00           .BYTE 0
    2595 0000d040                    .EVEN
    2596                    
    2597                    
    2598                            .end

 No Errors,  No Warnings
