TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Jamie Rivett
       4                    * Initiated:            5/17/94
       5                    *
       6                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    **************************************************************
       9                    
      10                            .file   "bam.asm"
      12                            .width  132
      13                            .option b,d,l,t
      14                            .mnolist
      15                    
      16                    
      17                            .include        "macros.h"
      18                            .include        "jjxm.h"
      19                            .include        "mproc.equ"             ;Mproc equates
      20                            .include        "display.equ"           ;Display proc equates
      21                            .include        "gsp.equ"               ;Gsp asm equates
      22                            .include        "sys.equ"
      23                            .include        "game.equ"
      24                            .include        "plyr.equ"
      25                            .include        "anim.equ"
      26                            .include        "audit.equ"
      27                            .include        "sound.h"
      28                            .include        "ring.equ"
      29                            .include        "lifebar.h"
      30                            .include        "damage.equ"
      31                    
      32                    
      33                    ******************************************************************************
      34                    * EXTERNAL REFERENCES
      35                    
      36                            .ref    get_punch_dtime,ck_teammate_pin,raisearm_check
      37                            .ref    can_pin,round_award,set_raisearm_bit
      38                            .ref    change_anim1,change_anim1a
      39                            .ref    change_anim2,change_anim2a
      40                            .ref    keep_attached,drone_change_back,std_walk_fast,std_taunt
      41                            .ref    get_opp_plyrmode,mode_dead,get_opp_process
      42                            .ref    check_secret_moves,process_ptrs,master_keep_attached
      43                            .ref    mode_choking,do_taunt,execute_walk,bounce_off_ropes
      44                            .ref    climb_turnbuckle,ck_ignore,CLIMB_ROPES
      45                            .ref    JUMP_ROPES,ADD_IF_SILENT,FIND_AND_KILL_ENDLESS
      46                            .ref    DO_REVERSAL,PCNT,DO_REVERSAL_MESS,CHECK_COMBO_GO
      47                            .ref    BONUS_MESS,BLOCK_WOOSH
      48                            .ref    blocking_off
      49                            .ref    hyper_speed_on
      50                            .ref    in_finish_move
      51                            .ref    p1rounds,p2rounds
      52                            .if NUM_BAM_FINISHES
      53                            .ref    bam_finish1_move
      54                            .if NUM_BAM_FINISHES > 1
      55                            .ref    bam_finish2_move
      56                            .endif
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .endif
      58                    
      59                    ******************************************************************************
      60                    * ANIMATION SEQUENCES
      61                    
      62                            .ref    wres_slave_anim
      63                            .ref    bam_zip_anim
      64                            .ref    start_run_anim
      65                    
      66                            .ref    bam_stand2_anim,bam_stand8_anim
      67                            .ref    bam_stand4_anim,bam_stand6_anim
      68                            .ref    bam_torso2_anim,bam_torso8_anim
      69                            .ref    bam_torso4_anim,bam_torso6_anim
      70                            .ref    bam_pogo_anim
      71                            .ref    bam_3_hiptoss_anim
      72                    
      73                            .ref    bam_2_to_4_turn_anim,bam_8_to_6_turn_anim       ;stand
      74                            .ref    bam_4_to_2_turn_anim,bam_6_to_8_turn_anim
      75                            .ref    bam_4_to_6_turn_anim,bam_6_to_4_turn_anim
      76                            .ref    bam_2_to_8_turn_anim,bam_8_to_2_turn_anim
      77                            .ref    bam_4_to_8_turn_anim,bam_6_to_2_turn_anim
      78                            .ref    bam_2_to_6_turn_anim,bam_8_to_4_turn_anim
      79                    
      80                            .ref    bam_2_to_4_turn2_anim,bam_8_to_6_turn2_anim     ;torso
      81                            .ref    bam_4_to_2_turn2_anim,bam_6_to_8_turn2_anim
      82                            .ref    bam_4_to_6_turn2_anim,bam_6_to_4_turn2_anim
      83                            .ref    bam_2_to_8_turn2_anim,bam_8_to_2_turn2_anim
      84                            .ref    bam_4_to_8_turn2_anim,bam_6_to_2_turn2_anim
      85                            .ref    bam_2_to_6_turn2_anim,bam_8_to_4_turn2_anim
      86                    
      87                            .ref    bam_walk1_f2_anim,bam_walk2_f2_anim,bam_walk4_f2_anim
      88                            .ref    bam_walk5_f2_anim,bam_walk6_f2_anim,bam_walk8_f2_anim
      89                    
      90                            .ref    bam_walk1_f4_anim,bam_walk2_f4_anim,bam_walk4_f4_anim
      91                            .ref    bam_walk5_f4_anim,bam_walk6_f4_anim,bam_walk8_f4_anim
      92                    
      93                            .ref    bam_4_fpunch_anim
      94                            .ref    bam_2_fpunch_anim
      95                            .ref    bam_4_block_anim
      96                            .ref    bam_2_butts_anim,bam_4_butts_anim
      97                    
      98                            .ref    bam_run2_anim
      99                    
     100                            .ref    bam_2_head_hit_anim,bam_4_head_hit_anim
     101                            .ref    bam_2_head_hit2_anim,bam_4_head_hit2_anim
     102                            .ref    bam_2_body_hit_anim,bam_4_body_hit_anim
     103                    
     104                            .ref    bam_2_punch_anim,bam_4_punch_anim
     105                            .ref    bam_2_kick_anim,bam_4_kick_anim
     106                            .ref    bam_flying_kick_anim
     107                    
     108                            .ref    bam_2_body_hit_anim,bam_4_body_hit_anim
     109                            .ref    bam_hitonground_anim
     110                    
     111                            .ref    bam_2_butt_anim,bam_4_butt_anim
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                            .ref    bam_2_knee_anim,bam_4_knee_anim
     113                    ;       .ref    bam_4_bigboot_anim
     114                    
     115                            .ref    bam_head_hit2_anim,bam_head_hit_dizzy_anim
     116                            .ref    bam_2_stomp_anim,bam_4_stomp_anim
     117                    
     118                            .ref    bam_4_push_anim
     119                            .ref    bam_4_losebal_anim
     120                    
     121                            .ref    bam_2_grabfling_anim
     122                            .ref    bam_4_grabfling_anim
     123                    
     124                            .ref    bam_fall_back_anim,bam_knees_anim
     125                    
     126                            .ref    bam_2_faceup_getup_anim
     127                            .ref    bam_4_faceup_getup_anim
     128                    
     129                            .ref    bam_2_lbowdrop_anim,bam_4_lbowdrop_anim
     130                    
     131                            .ref    bam_4_jumpkick_anim
     132                    
     133                    ;       .ref    bam_running_headbutt
     134                            .ref    bam_3_pile_driver_anim
     135                    
     136                            .ref    bam_4_graboh_anim,bam_heldoh_anim
     137                            .ref    bam_2_graboh_anim
     138                            .ref    bam_holdoh_anim
     139                            .ref    bam_stndholdoh_anim
     140                    
     141                            .ref    bam_backbreaker_anim
     142                    
     143                            .ref    mode_inair2,mode_puppet
     144                            .ref    bam_2_pin_anim
     145                            .ref    bam_4_pin_anim
     146                    
     147                            .ref    bam_3_butt_drop_anim
     148                    
     149                            .ref    bam_climb_up_anim,bam_climb_down_anim,bam_bellyflop_anim
     150                            .ref    bam_combo_knees_anim,bam_combo_punch_anim
     151                            .ref    bam_2_raise_arm_anim,bam_4_raise_arm_anim
     152                    
     153                            .ref    bam_neckbreaker2_anim,bam_slamdwn_anim
     154                            .ref    bam_4_superkick_anim,bam_3_hiptoss2_anim
     155                            .ref    bam_neckbreaker_run_anim
     156                            .ref    bam_fly_cline_anim,bam_4_slap_anim
     157                            .ref    bam_neckbreaker_anim,bam_2_hair_pickup_anim
     158                            .ref    bam_2_superkick_anim,bam_2_slap_anim
     159                            .ref    bam_3_head_hold2_anim,bam_3_head_held_stand_anim
     160                            .ref    bam_3_head_hold_anim
     161                            .ref    bam_4_hair_pickup_anim
     162                            .ref    bam_2_napalm_anim,bam_4_napalm_anim
     163                    
     164                    ******************************************************************************
     165                    * SYMBOLS DEFINED IN THIS FILE
     166                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167                    ******************************************************************************
     168                    * EQUATES FOR THIS FILE
     169                    
     170                    *****************************************************************************
     171                    
     172 00000000           bam_secret_moves
     173                    ;Button held down moves need to be first entry
     174 00000000 00001b50'         .long   tcglfirepnch    ;must have this one
     175                    
     176 00000020 000006a0'         .long   tcglneck_grab
     177 00000040 00001460'         .long   tcglgrab_fling
     178 00000060 00000e30'         .long   tcglhip_toss
     179 00000080 000012d0'         .long   tcglgrab_fling2
     180 000000a0 00001320'         .long   tcglhip_toss2
     181 000000c0 00000280'         .long   tcgljumpkick
     182 000000e0 000012d0'         .long   tcglgrab_fling2
     183 00000100 00001320'         .long   tcglhip_toss2
     184 00000120 00000ae0'         .long   tcglnapalm
     185 00000140 00000000          .long   0
     186                    
     187                    ******************************************************************************
     188                    *
     189                    * SPECIAL MOVE PROCESSES - Secret moves
     190                    *
     191                    ;a8=process of wrestler
     192                    
     193 00000160            SUBR   bam_smove_table
     194 00000160 00002b90'         .long   bam_charge_neckbreaker
     195 00000180 00003c60'         .long   bam_hdhold_combo1
     196 000001a0 00003110'         .long   bam_hdhold_pile
     197 000001c0 00002040'         .long   bam_hdhold_pogo
     198 000001e0 00004550'         .long   bam_hdhold_combo2
     199                    ;       .long   bam_hdhold_anti_combo
     200 00000200 00004e40'         .long   bam_grab_toss_air
     201 00000220 00000000!         .long   std_walk_fast
     202 00000240 00000000!         .long   std_taunt
     203                    
     204                            .if NUM_BAM_FINISHES
     205                            .long   bam_finish_move1
     206                            .endif
     207                            .if NUM_BAM_FINISHES > 1
     208                            .long   bam_finish_move2
     209                            .endif
     210 00000260 00000000          .long   0
     211                    
     212                    ;       .long   bam_hdhold_graboh
     213                    ;       .long   bam_hdhold_neckbreaker
     214                    
     215                    *******************************************************************************
     216                    
     217 00000280           tcgljumpkick
     218 00000280     0100          .word   B_SKICK,                J_ALL
     219 000002a0     0004          .word   J_AWAY,                 J_REAL_LR | J_UP | J_DOWN
     220 000002c0     0004          .word   J_AWAY,                 J_REAL_LR | J_UP | J_DOWN
     221 000002e0     8020          .word   8000h | 32              ;max
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

     222 000002f0 00000310'         .long   tcglscrt_flykick
     223                    
     224 00000310           tcglscrt_flykick
     225 00000310     b5a0          move    *a13(ANIMODE),a0
         00000320     0660  
     226 00000330     1fa0          btst    MODE_UNINT_BIT,a0
     227 00000340     cb00          jrnz    tcglout
         00000350     01cd  
     228                    
     229                    ;Don't do it when he is on ground
     230 00000360     0d5f          calla   get_opp_plyrmode
         00000370 00000000! 
     231 00000390     0b40          cmpi    MODE_ONGROUND,a0
         000003a0     fffb  
     232 000003b0     ca00          jrz     tcglout
         000003c0     01c6  
     233 000003d0     0b40          cmpi    MODE_DEAD,a0
         000003e0     fff6  
     234 000003f0     ca00          jrz     tcglout
         00000400     01c2  
     235 00000410     0b40          cmpi    MODE_HEADHELD,a0
         00000420     ffec  
     236 00000430     ca00          jrz     tcglout
         00000440     01be  
     237 00000450     0b40          cmpi    MODE_ATTACHED,a0
         00000460     fffc  
     238 00000470     ca00          jrz     tcglout
         00000480     01ba  
     239                    
     240 00000490     09e0          movi    bam_4_jumpkick_anim,a0
         000004a0 00000000! 
     241 000004c0     0d5f          calla   change_anim1a
         000004d0 00000000! 
     242                    
     243 000004f0                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
     244                    
     245 00000690     0960          rets
     246                    
     247                    *******************************************************************************
     248                    
     249 000006a0           tcglneck_grab
     250 000006a0     0040          .word   B_SPUNCH,               J_ALL
     251 000006c0     0008          .word   J_TOWARD,               J_REAL_LR
     252 000006e0     0008          .word   J_TOWARD,               J_REAL_LR
     253 00000700     8020          .word   8000h | 32              ;max
     254 00000710 00000730'         .long   tcglscrt_neck
     255                    
     256 00000730           tcglscrt_neck
     257 00000730     b5a0          move    *a13(ANIMODE),a0
         00000740     0660  
     258 00000750     1fa0          btst    MODE_UNINT_BIT,a0
     259 00000760     cb00          jrnz    tcglout
         00000770     018b  
     260                    
     261                    ;Don't do it when he is on ground
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

     262 00000780     0d5f          calla   get_opp_plyrmode
         00000790 00000000! 
     263 000007b0     0b40          cmpi    MODE_ONGROUND,a0
         000007c0     fffb  
     264 000007d0     ca00          jrz     tcglout
         000007e0     0184  
     265 000007f0     0b40          cmpi    MODE_DEAD,a0
         00000800     fff6  
     266 00000810     ca00          jrz     tcglout
         00000820     0180  
     267 00000830     0b40          cmpi    MODE_HEADHELD,a0
         00000840     ffec  
     268 00000850     ca00          jrz     tcglout
         00000860     017c  
     269                    ;Mode held overhead!
     270 00000870     0b40          cmpi    MODE_ATTACHED,a0
         00000880     fffc  
     271 00000890     ca00          jrz     tcglout
         000008a0     0178  
     272                    
     273 000008b0     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         000008c0     0cd0  
     274 000008d0     07a0          move    @PCNT,a0,L
         000008e0 00000000! 
     275 00000900     45c0          sub     a14,a0
     276 00000910     0b40          cmpi    2*60,a0
         00000920     ff87  
     277 00000930     c507          jrge    tcglok2
     278                    
     279                    ;This head grab is too close (in terms of time) to most recent grab
     280                            .ref    bam_3_fake_hold_anim
     281 00000940     09e0          movi    bam_3_fake_hold_anim,a0
         00000950 00000000! 
     282 00000970     0d5f          calla   change_anim1a
         00000980 00000000! 
     283 000009a0     0960          rets
     284                    
     285 000009b0           tcglok2
     286 000009b0     b5a1          move    *a13(CLOSEST_XDIST),a1
         000009c0     0370  
     287 000009d0     0b41          cmpi    100,a1
         000009e0     ff9b  
     288 000009f0     c707          jrgt    tcglstd_grab
     289                    
     290 00000a00     09e0          movi    bam_3_head_hold2_anim,a0
         00000a10 00000000! 
     291 00000a30     0d5f          calla   change_anim1a
         00000a40 00000000! 
     292                    
     293 00000a60     0960          rets
     294                    
     295 00000a70           tcglstd_grab
     296 00000a70     09e0          movi    bam_3_head_hold_anim,a0
         00000a80 00000000! 
     297 00000aa0     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

         00000ab0 00000000! 
     298                    
     299 00000ad0     0960          rets
     300                    
     301                    *******************************************************************************
     302                    
     303 00000ae0           tcglnapalm
     304 00000ae0     0010          .word   B_PUNCH,                J_ALL
     305 00000b00     0002          .word   J_DOWN,                 J_REAL_LR
     306 00000b20     0002          .word   J_DOWN,                 J_REAL_LR
     307 00000b40     8032          .word   8000h | 50              ;max
     308 00000b50 00000b70'         .long   tcglscrt_napalm
     309                    
     310 00000b70           tcglscrt_napalm
     311 00000b70     b5a0          move    *a13(ANIMODE),a0
         00000b80     0660  
     312 00000b90     1fa0          btst    MODE_UNINT_BIT,a0
     313 00000ba0     cb00          jrnz    tcglout
         00000bb0     0147  
     314                    
     315 00000bc0     b5a0          move    *a13(PLYRMODE),a0
         00000bd0     05c0  
     316 00000be0     0b40          cmpi    MODE_ONTURNBKL,a0
         00000bf0     fff9  
     317 00000c00     ca00          jrz     tcglout
         00000c10     0141  
     318                    
     319                            ;only if opponent is on the ground (and not dead!)
     320 00000c20     0d5f          calla   get_opp_plyrmode
         00000c30 00000000! 
     321 00000c50     0b40          cmpi    MODE_ONGROUND,a0
         00000c60     fffb  
     322 00000c70     cb00          jrne    tcglout
         00000c80     013a  
     323                    
     324                            ;smart-target him (don't wanna hit standing guys)
     325 00000c90     b7ae          move    *a13(STATUS_FLAGS),a14,L
         00000ca0     0b50  
     326 00000cb0     0bae          ori     M_SMART_ATTACK,a14
         00000cc0 00000010  
     327 00000ce0     b3cd          move    a14,*a13(STATUS_FLAGS),L
         00000cf0     0b50  
     328 00000d00     0d5f          calla   get_opp_process
         00000d10 00000000! 
     329 00000d30     b20d          move    a0,*a13(SMART_TARGET),L
         00000d40     0ca0  
     330                    
     331 00000d50                   FACE24  bam,napalm_anim
     332 00000df0     0d5f          calla   change_anim1a
         00000e00 00000000! 
     333                    
     334                            ;do some sound here
     335                    
     336 00000e20     0960          rets
     337                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     338                    *******************************************************************************
     339                    
     340 00000e30           tcglhip_toss
     341                    ;       .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     342                    ;       .word   8000h | 10              ;max
     343                    ;       .long   tcglscrt_hiptoss
     344                    
     345 00000e30     0010          .word   B_PUNCH,                J_ALL
     346 00000e50     0004          .word   J_AWAY,         J_REAL_LR
     347 00000e70     0004          .word   J_AWAY,         J_REAL_LR
     348 00000e90     8020          .word   8000h | 32              ;max
     349 00000ea0 00000ec0'         .long   tcglscrt_hiptoss
     350                    
     351 00000ec0           tcglscrt_hiptoss
     352 00000ec0     b5a0          move    *a13(ANIMODE),a0
         00000ed0     0660  
     353 00000ee0     1fa0          btst    MODE_UNINT_BIT,a0
     354 00000ef0     cb00          jrnz    tcglout
         00000f00     0112  
     355                    
     356                    ;Don't do it when he is on ground
     357 00000f10     0d5f          calla   get_opp_plyrmode
         00000f20 00000000! 
     358 00000f40     0b40          cmpi    MODE_ONGROUND,a0
         00000f50     fffb  
     359 00000f60     ca00          jrz     tcglout
         00000f70     010b  
     360                    ;       cmpi    MODE_BLOCK,a0
     361                    ;       jrz     tcglout
     362 00000f80     0b40          cmpi    MODE_DEAD,a0
         00000f90     fff6  
     363 00000fa0     ca00          jrz     tcglout
         00000fb0     0107  
     364 00000fc0     0b40          cmpi    MODE_HEADHELD,a0
         00000fd0     ffec  
     365 00000fe0     ca00          jrz     tcglout
         00000ff0     0103  
     366 00001000     0b40          cmpi    MODE_INAIR,a0
         00001010     fffd  
     367 00001020     ca09          jrz     tcgldoit
     368 00001030     0b40          cmpi    MODE_INAIR2,a0
         00001040     ffea  
     369 00001050     ca06          jrz     tcgldoit
     370                    
     371 00001060     b5a0          move    *a13(CLOSEST_DIST),a0
         00001070     0360  
     372 00001080     0b40          cmpi    80h,a0
         00001090     ff7f  
     373 000010a0     c700          jrgt    tcglout
         000010b0     00f7  
     374                    
     375 000010c0           tcgldoit
     376 000010c0     09e0          movi    bam_3_hiptoss_anim,a0
         000010d0 00000000! 
     377 000010f0     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

         00001100 00000000! 
     378                    
     379 00001120                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
     380                    
     381 000012c0     0960          rets
     382                    
     383                    *******************************************************************************
     384                    
     385 000012d0           tcglgrab_fling2
     386 000012d0     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     387 000012f0     800a          .word   8000h | 10              ;max
     388 00001300 00001370'         .long   tcglscrt_grabfling2
     389                    
     390 00001320           tcglhip_toss2
     391 00001320     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     392 00001340     800a          .word   8000h | 10              ;max
     393 00001350 00001370'         .long   tcglscrt_grabfling2
     394                    
     395 00001370           tcglscrt_grabfling2
     396 00001370     b5a0          move    *a13(ANIMODE),a0
         00001380     0660  
     397 00001390     1fa0          btst    MODE_UNINT_BIT,a0
     398 000013a0     cb00          jrnz    tcglout
         000013b0     00c7  
     399                    
     400                    ;If opponent is running, do a hip toss
     401 000013c0     0d5f          calla   get_opp_plyrmode
         000013d0 00000000! 
     402 000013f0     0b40          cmpi    MODE_BOUNCING,a0
         00001400     fffa  
     403 00001410     ca1b          jrz     tcglyes
     404 00001420     0b40          cmpi    MODE_RUNNING,a0
         00001430     fffe  
     405 00001440     ca18          jrz     tcglyes
     406 00001450     0960          rets
     407                    
     408                    *******************************************************************************
     409                    
     410 00001460           tcglgrab_fling
     411                    ;       .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     412                    ;       .word   8000h | 10              ;max
     413                    ;       .long   tcglscrt_grabfling
     414                    
     415 00001460     0040          .word   B_SPUNCH,               J_ALL
     416 00001480     0004          .word   J_AWAY,         J_REAL_LR
     417 000014a0     0004          .word   J_AWAY,         J_REAL_LR
     418 000014c0     8020          .word   8000h | 32              ;max
     419 000014d0 000014f0'         .long   tcglscrt_grabfling
     420                    
     421 000014f0           tcglscrt_grabfling
     422                    
     423                    ;Make this miss, rotate to missed opponent,
     424                    ;and stay rotated to flung opponent, also make
     425                    ;this work from both angles!
     426                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     427 000014f0     b5a0          move    *a13(ANIMODE),a0
         00001500     0660  
     428 00001510     1fa0          btst    MODE_UNINT_BIT,a0
     429 00001520     cb00          jrnz    tcglout
         00001530     00af  
     430                    
     431                    ;If opponent is running, do a hip toss
     432 00001540     0d5f          calla   get_opp_plyrmode
         00001550 00000000! 
     433 00001570     0b40          cmpi    MODE_BOUNCING,a0
         00001580     fffa  
     434 00001590     ca03          jrz     tcglyes
     435 000015a0     0b40          cmpi    MODE_RUNNING,a0
         000015b0     fffe  
     436 000015c0     cb21          jrnz    tcglnope
     437 000015d0           tcglyes
     438 000015d0     09e0          movi    bam_3_hiptoss_anim,a0
         000015e0 00000000! 
     439 00001600     0d5f          calla   change_anim1a
         00001610 00000000! 
     440                    
     441 00001630                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
     442                    
     443 000017d0     0960          rets
     444 000017e0           tcglnope
     445                    ;Don't fling when he is on ground
     446 000017e0     0d5f          calla   get_opp_plyrmode
         000017f0 00000000! 
     447 00001810     0b40          cmpi    MODE_DEAD,a0
         00001820     fff6  
     448 00001830     ca7f          jrz     tcglout
     449 00001840     0b40          cmpi    MODE_HEADHELD,a0
         00001850     ffec  
     450 00001860     ca7c          jrz     tcglout
     451 00001870     0b40          cmpi    MODE_ONGROUND,a0
         00001880     fffb  
     452 00001890     ca79          jrz     tcglout
     453                    ;Mode held overhead!
     454 000018a0     0b40          cmpi    MODE_ATTACHED,a0
         000018b0     fffc  
     455 000018c0     ca76          jrz     tcglout
     456                    
     457                    ;       move    *a13(LAST_FLING_ATTEMPT),a14,L
     458                    ;       move    @PCNT,a0,L
     459                    ;       sub     a14,a0
     460                    ;       cmpi    3*60,a0
     461                    ;       jrge    tcglok2a
     462                    ;
     463                    ;       FACE24  bam,slap_anim
     464                    ;       calla   change_anim1a
     465                    ;
     466                    ;       WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
     467                    ;       rets
     468                    ;
     469                    ;tcglok2a
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     470                    ;       move    @PCNT,a14,L                     ;use 32-bit PCNT!
     471                    ;       move    a14,*a13(LAST_FLING_ATTEMPT),L
     472                    
     473 000018d0                   FACE24  bam,grabfling_anim
     474 00001970     0d5f          calla   change_anim1a
         00001980 00000000! 
     475                    
     476 000019a0                   WRSND   W_BAMBAM,GRABFLING_T1,PUNCH_T2
     477                    
     478 00001b40     0960          rets
     479                    
     480                    
     481                    *******************************************************************************
     482                    
     483 00001b50           tcglfirepnch
     484                    
     485 00001b50     b5a0          move    *a13(BUT_VAL_UP),a0
         00001b60     0bb0  
     486 00001b70     1fe0          btst    PLAYER_PUNCH_BIT,a0
     487 00001b80     ca0c          jrz     tcglno_punch
     488                    
     489 00001b90     b5a0          move    *a13(PLYRNUM),a0
         00001ba0     0580  
     490 00001bb0     0d5f          calla   get_punch_dtime
         00001bc0 00000000! 
     491 00001be0     0b40          cmpi    85,a0                   ;> min?
         00001bf0     ffaa  
     492 00001c00     c404          jrlt    tcglno_punch
     493                    
     494 00001c10     0d3f          callr   tcglscrt_firepnch
         00001c20     0004  
     495 00001c30     0de0          setc
     496 00001c40     0960          rets
     497                    
     498 00001c50           tcglno_punch
     499 00001c50     0320          clrc
     500 00001c60     0960          rets
     501                    
     502                    
     503 00001c70           tcglscrt_firepnch
     504                    
     505 00001c70     b5a0          move    *a13(PLYRMODE),a0
         00001c80     05c0  
     506 00001c90     0b40          cmpi    MODE_HEADHELD,a0
         00001ca0     ffec  
     507 00001cb0     ca37          jrz     tcglout
     508 00001cc0     0b40          cmpi    MODE_HEADHOLD,a0
         00001cd0     ffef  
     509 00001ce0     ca34          jrz     tcglout
     510                    
     511 00001cf0     b5a0          move    *a13(ANIMODE),a0
         00001d00     0660  
     512 00001d10     1fa0          btst    MODE_UNINT_BIT,a0
     513 00001d20     cb30          jrnz    tcglout
     514                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     515 00001d30     0d5f          calla   get_opp_plyrmode
         00001d40 00000000! 
     516 00001d60     0b40          cmpi    MODE_DEAD,a0
         00001d70     fff6  
     517 00001d80     ca2a          jrz     tcglout
     518                    ;Mode held overhead!
     519 00001d90     0b40          cmpi    MODE_ATTACHED,a0
         00001da0     fffc  
     520 00001db0     ca27          jrz     tcglout
     521                    
     522 00001dc0           tcglok
     523 00001dc0                   FACE24  bam,fpunch_anim
     524 00001e60     0d5f          calla   change_anim1a
         00001e70 00000000! 
     525 00001e90                   WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
     526 00002030           tcglout
     527 00002030     0960          rets
     528                    
     529                            .if NUM_BAM_FINISHES
     530                    ******************************************************************************
     531                     SUBRP  bam_finish_move1
     532                    
     533                    tyipTIMEOUT     .equ    TSEC
     534                    
     535                    tyipend_wait
     536                            SLEEP           TSEC/4
     537                            move            @p1rounds,a0                    ; Get player 1 rounds
     538                            move            @p2rounds,a1                    ; Get player 2 rounds
     539                            or              a1,a0                           ; Put em together
     540                            cmpi            2,a0                            ; Anybody got 2?
     541                            jrlt            tyipend_wait                    ; br = no
     542                    
     543                    tyipreset
     544                            clr             a11
     545                            move            a11,@in_finish_move
     546                            SLEEPK          1
     547                            WAITSWITCH_DWN  J_UP,0,tyipreset
     548                            movi            tyipTIMEOUT,a11
     549                            move            a11,@in_finish_move
     550                            WAITSWITCH_DWN  J_DOWN,0,tyipreset
     551                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,tyipreset
     552                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,tyipreset
     553                            WAITSWITCH_DWN  B_PUNCH,J_ALL,tyipreset
     554                    
     555                            movi            bam_finish1_move,a0
     556                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     557                            DIE
     558                            .endif
     559                            
     560                    
     561                            .if NUM_BAM_FINISHES > 1
     562                    ******************************************************************************
     563                     SUBRP  bam_finish_move2
     564                    
     565                    obncTIMEOUT     .equ    TSEC
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     566                    
     567                    obncend_wait
     568                            SLEEP           TSEC/4
     569                            move            @p1rounds,a0                    ; Get player 1 rounds
     570                            move            @p2rounds,a1                    ; Get player 2 rounds
     571                            or              a1,a0                           ; Put em together
     572                            cmpi            2,a0                            ; Anybody got 2?
     573                            jrlt            obncend_wait                    ; br = no
     574                    
     575                    obncreset
     576                            clr             a11
     577                            move            a11,@in_finish_move
     578                            SLEEPK          1
     579                            WAITSWITCH_DWN  J_UP,0,obncreset
     580                            movi            obncTIMEOUT,a11
     581                            move            a11,@in_finish_move
     582                            WAITSWITCH_DWN  J_UP,0,obncreset
     583                            WAITSWITCH_DWN  J_RIGHT,J_UP,obncreset
     584                            WAITSWITCH_DWN  J_RIGHT,J_UP,obncreset
     585                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,obncreset
     586                    
     587                            movi            bam_finish2_move,a0
     588                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     589                            DIE
     590                            .endif
     591                    
     592                    
     593                    *****************************************************************************
     594                    
     595 00002040           bam_hdhold_pogo
     596                    
     597              003c  fgaoTIMEOUT     .equ    60
     598                    
     599 00002040           fgaolp0
     600 00002040                   SLEEPK  1
     601 00002080           fgaolp
     602 00002080     b500          move    *a8(PLYRMODE),a0
         00002090     05c0  
     603 000020a0     0b40          cmpi    MODE_HEADHOLD,a0
         000020b0     ffef  
     604 000020c0     ca03          jrz     fgaocont
     605 000020d0     0b40          cmpi    MODE_HEADHELD,a0
         000020e0     ffec  
     606 000020f0     cbf4          jrnz    fgaolp0
     607 00002100           fgaocont
     608 00002100     576b          clr     a11
     609                    
     610                    ;       WAITSWITCH_DWN  J_UP,0,fgaolp
     611 00002110                   WAITSWITCH_DWN  J_DOWN,0,fgaolp
     612                    
     613 00002270     09cb          movi    fgaoTIMEOUT,a11
         00002280     003c  
     614                    
     615 00002290                   WAITSWITCH_DWN  J_DOWN,0,fgaolp
     616 000023f0                   WAITSWITCH_DWN  B_SKICK,J_ALL,fgaolp
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     617                    
     618 00002550     b500          move    *a8(PLYRMODE),a0
         00002560     05c0  
     619 00002570     0b40          cmpi    MODE_HEADHOLD,a0
         00002580     ffef  
     620 00002590     ca1c          jrz     fgaoslam
     621 000025a0     0b40          cmpi    MODE_HEADHELD,a0
         000025b0     ffec  
     622 000025c0     cba7          jrnz    fgaolp0
     623 000025d0     b50e          move    *a8(I_WILL_DIE),A14
         000025e0     0b30  
     624 000025f0     cba4          jrnz    fgaolp0
     625                    
     626 00002600     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002610     0ae0  
     627 00002620     cba1          jrnz    fgaolp0                         ;ignore
     628                    
     629 00002630     0d5f          CALLA   DO_REVERSAL
         00002640 00000000! 
     630 00002660     0d5f          CALLA   DO_REVERSAL_MESS
         00002670 00000000! 
     631                    
     632                            ;target WHOHITME -- don't hit anyone else
     633 00002690                   SMRTTGT a8,WHOHITME
     634                    
     635                            ;immobilize WHOHITME
     636 00002730     b700          move    *a8(WHOHITME),a0,L
         00002740     04e0  
     637 00002750     c018          jruc    fgaois_reversal
     638                    
     639 00002760           fgaoslam
     640 00002760     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002770     0ae0  
     641 00002780     cb8b          jrnz    fgaolp0                         ;ignore
     642 00002790     1bea          movk    31,a10
     643 000027a0                   CREATE  MESSAGE_PID,BONUS_MESS
     644                    
     645                            ;target WHOIHIT -- don't hit anyone else
     646 00002820                   SMRTTGT a8,WHOIHIT
     647                    
     648                            ;immobilize WHOIHIT
     649 000028c0     b700          move    *a8(WHOIHIT),a0,L
         000028d0     0500  
     650                    
     651 000028e0           fgaois_reversal
     652 000028e0     19ee          movk    15,a14
     653 000028f0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00002900     0ae0  
     654                    
     655 00002910     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00002920 00000000! 
     656                    
     657 00002940     09ee          movi    bam_pogo_anim,a14
         00002950 00000000! 
     658 00002970     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

         00002980     0930  
     659 00002990                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     660                    
     661 00002b30                   SLEEPK  20
     662                    
     663 00002b70     c000          jruc    fgaolp
         00002b80     ff4f  
     664                    
     665                    *******************************************************************************
     666                    
     667                    ;       STRUCTPD
     668                    ;       WORD            dcidCHARGE_TIME ;UDW
     669              0160  dcidCHARGE_TIME .equ    SM_USRW1
     670                    
     671 00002b90           bam_charge_neckbreaker
     672                    
     673 00002b90           dcidstart_over
     674 00002b90     57ce          clr     a14
     675 00002ba0     b1cd          move    a14,*a13(dcidCHARGE_TIME),W
         00002bb0     0160  
     676 00002bc0           dcidloop1
     677 00002bc0                   SLEEPK  1
     678                    
     679 00002c00     b5ae          move    *a13(dcidCHARGE_TIME),a14,W
         00002c10     0160  
     680 00002c20     102e          inc     a14
     681 00002c30     b1cd          move    a14,*a13(dcidCHARGE_TIME),W
         00002c40     0160  
     682                    
     683 00002c50     b500          move    *a8(BUT_VAL_CUR),a0
         00002c60     0b90  
     684 00002c70     1fa0          btst    PLAYER_SPUNCH_BIT,a0
     685 00002c80     ca01          jrz     dcidp1
     686                    
     687 00002c90     c0f2          jruc    dcidloop1
     688                    
     689 00002ca0           dcidp1
     690                    
     691                    ;no longer holding button
     692 00002ca0     b5ae          move    *a13(dcidCHARGE_TIME),a14
         00002cb0     0160  
     693 00002cc0     0b4e          cmpi    100,a14
         00002cd0     ff9b  
     694 00002ce0     c4ea          jrlt    dcidstart_over
     695                    
     696                    ;Success!  Check for the UNINT bit, then queue it up.
     697 00002cf0     b50e          move    *a8(ANIMODE),a14
         00002d00     0660  
     698 00002d10     1fae          btst    MODE_UNINT_BIT,a14
     699 00002d20     cbe6          jrnz    dcidstart_over
     700                    
     701 00002d30     b500          move    *a8(GETUP_TIME),a0
         00002d40     0460  
     702 00002d50     cbe3          jrnz    dcidstart_over
     703                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     704 00002d60     b500          move    *a8(PLYRMODE),a0
         00002d70     05c0  
     705 00002d80     0b40          cmpi    MODE_HEADHELD,a0
         00002d90     ffec  
     706 00002da0     cade          jrz     dcidstart_over
     707 00002db0     0b40          cmpi    MODE_HEADHOLD,a0
         00002dc0     ffef  
     708 00002dd0     cadb          jrz     dcidstart_over
     709 00002de0     0b40          cmpi    MODE_ONGROUND,a0
         00002df0     fffb  
     710 00002e00     cad8          jrz     dcidstart_over
     711 00002e10     0b40          cmpi    MODE_DEAD,a0
         00002e20     fff6  
     712 00002e30     cad5          jrz     dcidstart_over
     713                    
     714 00002e40     09ee          movi    bam_neckbreaker2_anim,a14
         00002e50 00000000! 
     715                    
     716 00002e70     b500          move    *a8(PLYRMODE),a0
         00002e80     05c0  
     717 00002e90     0b40          cmpi    MODE_RUNNING,a0
         00002ea0     fffe  
     718 00002eb0     cb03          jrnz    dcidcont
     719                    
     720 00002ec0     09ee          movi    bam_neckbreaker_run_anim,a14
         00002ed0 00000000! 
     721                    
     722 00002ef0           dcidcont
     723 00002ef0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00002f00     0930  
     724                    
     725 00002f10                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     726                    
     727 000030b0                   SLEEP   TSEC*3
     728 00003100     c0a8          jruc    dcidstart_over
     729                            
     730                    ;*****************************************************************************
     731                    ;bam_hdhold_neckbreaker
     732                    ;
     733                    ;dcidTIMEOUT    .equ    60
     734                    ;
     735                    ;dcidlp0
     736                    ;       SLEEPK  1
     737                    ;dcidlp
     738                    ;       move    *a8(PLYRMODE),a0
     739                    ;       cmpi    MODE_HEADHOLD,a0
     740                    ;       jrz     dcidcont
     741                    ;       cmpi    MODE_HEADHELD,a0
     742                    ;       jrnz    dcidlp0
     743                    ;dcidcont
     744                    ;       clr     a11
     745                    ;
     746                    ;       WAITSWITCH_DWN  B_SPUNCH,0,dcidlp
     747                    ;
     748                    ;       movi    dcidTIMEOUT,a11
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

     749                    ;
     750                    ;       WAITSWITCH_DWN  B_SKICK,0,dcidlp
     751                    ;       WAITSWITCH_DWN  B_SPUNCH,0,dcidlp
     752                    ;       WAITSWITCH_DWN  B_SKICK,0,dcidlp
     753                    ;
     754                    ;       move    *a8(PLYRMODE),a0
     755                    ;       cmpi    MODE_HEADHELD,a0
     756                    ;       jrnz    dcidslam
     757                    ;       move    *a8(I_WILL_DIE),A14
     758                    ;       jrnz    dcidlp0
     759                    ;
     760                    ;       move    *a8(IMMOBILIZE_TIME),a14
     761                    ;       jrnz    dcidlp0                         ;ignore
     762                    ;
     763                    ;       CALLA   DO_REVERSAL
     764                    ;       CALLA   DO_REVERSAL_MESS
     765                    ;
     766                    ;       ;target WHOHITME -- don't hit anyone else
     767                    ;       SMRTTGT a8,WHOHITME
     768                    ;
     769                    ;       ;immobilize WHOHITME
     770                    ;       move    *a8(WHOHITME),a0,L
     771                    ;       jruc    dcidis_reversal
     772                    ;
     773                    ;dcidslam
     774                    ;       move    *a8(IMMOBILIZE_TIME),a14
     775                    ;       jrnz    dcidlp0                         ;ignore
     776                    ;
     777                    ;       movk    4,a10
     778                    ;       CREATE  MESSAGE_PID,BONUS_MESS
     779                    ;
     780                    ;       ;target WHOIHIT -- don't hit anyone else
     781                    ;       SMRTTGT a8,WHOIHIT
     782                    ;
     783                    ;       ;immobilize WHOIHIT
     784                    ;       move    *a8(WHOIHIT),a0,L
     785                    ;
     786                    ;dcidis_reversal
     787                    ;       movk    15,a14
     788                    ;       move    a14,*a0(IMMOBILIZE_TIME)
     789                    ;
     790                    ;       CALLA   FIND_AND_KILL_ENDLESS
     791                    ;
     792                    ;       movi    bam_neckbreaker_anim,a14
     793                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
     794                    ;       WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     795                    ;
     796                    ;       SLEEPK  20
     797                    ;
     798                    ;       jruc    dcidlp
     799                    ;
     800                    ;*****************************************************************************
     801                    ;bam_hdhold_graboh
     802                    ;
     803                    ;dcidTIMEOUT    .equ    60
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     804                    ;
     805                    ;dcidlp0
     806                    ;       SLEEPK  1
     807                    ;dcidlp
     808                    ;       move    *a8(PLYRMODE),a0
     809                    ;       cmpi    MODE_HEADHOLD,a0
     810                    ;       jrz     dcidcont0
     811                    ;       cmpi    MODE_HEADHELD,a0
     812                    ;       jrnz    dcidlp0
     813                    ;dcidcont0
     814                    ;       clr     a11
     815                    ;
     816                    ;       WAITSWITCH_DWN  J_DOWN,0,dcidlp
     817                    ;
     818                    ;       movi    dcidTIMEOUT,a11
     819                    ;
     820                    ;       WAITSWITCH_DWN  J_DOWN_TOWARD,0,dcidlp
     821                    ;       WAITSWITCH_DWN  J_TOWARD,0,dcidlp
     822                    ;       WAITSWITCH_DWN  B_KICK,J_ALL,dcidlp
     823                    ;
     824                    ;       move    *a8(PLYRMODE),a0
     825                    ;       cmpi    MODE_HEADHOLD,a0
     826                    ;       jrz     dciddograb
     827                    ;       cmpi    MODE_HEADHELD,a0
     828                    ;       jrnz    dcidlp0
     829                    ;       move    *a8(I_WILL_DIE),A14
     830                    ;       jrnz    dcidlp0
     831                    ;
     832                    ;       move    *a8(IMMOBILIZE_TIME),a14
     833                    ;       jrnz    dcidlp0                         ;ignore
     834                    ;
     835                    ;       CALLA   DO_REVERSAL
     836                    ;       CALLA   DO_REVERSAL_MESS
     837                    ;
     838                    ;       ;target WHOHITME -- don't hit anyone else
     839                    ;       SMRTTGT a8,WHOHITME
     840                    ;
     841                    ;       ;immobilize WHOHITME
     842                    ;       move    *a8(WHOHITME),a0,L
     843                    ;       jruc    dcidis_reversal
     844                    ;
     845                    ;dciddograb
     846                    ;       move    *a8(IMMOBILIZE_TIME),a14
     847                    ;       jrnz    dcidlp0                         ;ignore
     848                    ;
     849                    ;       movk    6,a10
     850                    ;       CREATE  MESSAGE_PID,BONUS_MESS
     851                    ;
     852                    ;       ;target WHOIHIT -- don't hit anyone else
     853                    ;       SMRTTGT a8,WHOIHIT
     854                    ;
     855                    ;       ;immobilize WHOIHIT
     856                    ;       move    *a8(WHOIHIT),a0,L
     857                    ;
     858                    ;dcidis_reversal
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     859                    ;       movk    15,a14
     860                    ;       move    a14,*a0(IMMOBILIZE_TIME)
     861                    ;
     862                    ;       CALLA   FIND_AND_KILL_ENDLESS
     863                    ;
     864                    ;       movi    bam_4_graboh_anim,a14
     865                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
     866                    ;
     867                    ;       WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     868                    ;
     869                    ;       SLEEPK  20
     870                    ;
     871                    ;       jruc    dcidlp
     872                    ;
     873                    *****************************************************************************
     874 00003110           bam_hdhold_pile
     875                    
     876              003c  wfsyTIMEOUT     .equ    60
     877                    
     878 00003110           wfsylp0
     879 00003110                   SLEEPK  1
     880 00003150           wfsylp
     881 00003150     b500          move    *a8(PLYRMODE),a0
         00003160     05c0  
     882 00003170     0b40          cmpi    MODE_HEADHOLD,a0
         00003180     ffef  
     883 00003190     ca03          jrz     wfsycont
     884 000031a0     0b40          cmpi    MODE_HEADHELD,a0
         000031b0     ffec  
     885 000031c0     cbf4          jrnz    wfsylp0
     886 000031d0           wfsycont
     887 000031d0     576b          clr     a11
     888                    
     889                    ;       WAITSWITCH_DWN  J_AWAY,0,wfsylp
     890 000031e0                   WAITSWITCH_DWN  J_TOWARD,0,wfsylp
     891                    
     892 00003340     09cb          movi    wfsyTIMEOUT,a11
         00003350     003c  
     893                    
     894 00003360                   WAITSWITCH_DWN  J_TOWARD,0,wfsylp
     895 000034c0                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,wfsylp
     896                    
     897 00003620     b500          move    *a8(PLYRMODE),a0
         00003630     05c0  
     898 00003640     0b40          cmpi    MODE_HEADHOLD,a0
         00003650     ffef  
     899 00003660     ca1c          jrz     wfsyslam
     900 00003670     0b40          cmpi    MODE_HEADHELD,a0
         00003680     ffec  
     901 00003690     cba7          jrnz    wfsylp0
     902 000036a0     b50e          move    *a8(I_WILL_DIE),A14
         000036b0     0b30  
     903 000036c0     cba4          jrnz    wfsylp0
     904                    
     905 000036d0     b50e          move    *a8(IMMOBILIZE_TIME),a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

         000036e0     0ae0  
     906 000036f0     cba1          jrnz    wfsylp0                         ;ignore
     907                    
     908 00003700     0d5f          CALLA   DO_REVERSAL
         00003710 00000000! 
     909 00003730     0d5f          CALLA   DO_REVERSAL_MESS
         00003740 00000000! 
     910                    
     911                            ;target WHOHITME -- don't hit anyone else
     912 00003760                   SMRTTGT a8,WHOHITME
     913                    
     914                            ;immobilize WHOHITME
     915 00003800     b700          move    *a8(WHOHITME),a0,L
         00003810     04e0  
     916 00003820     c018          jruc    wfsyis_reversal
     917                    
     918 00003830           wfsyslam
     919 00003830     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003840     0ae0  
     920 00003850     cb8b          jrnz    wfsylp0                         ;ignore
     921                    
     922 00003860     18ea          movk    7,a10
     923 00003870                   CREATE  MESSAGE_PID,BONUS_MESS
     924                    
     925                            ;target WHOIHIT -- don't hit anyone else
     926 000038f0                   SMRTTGT a8,WHOIHIT
     927                    
     928                            ;immobilize WHOIHIT
     929 00003990     b700          move    *a8(WHOIHIT),a0,L
         000039a0     0500  
     930                    
     931 000039b0           wfsyis_reversal
     932 000039b0     19ee          movk    15,a14
     933 000039c0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000039d0     0ae0  
     934                    
     935 000039e0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000039f0 00000000! 
     936 00003a10     09ee          movi    bam_3_pile_driver_anim,a14
         00003a20 00000000! 
     937 00003a40     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003a50     0930  
     938                    
     939 00003a60                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     940                    
     941 00003c00                   SLEEPK  20
     942                    
     943 00003c40     c000          jruc    wfsylp
         00003c50     ff4f  
     944                    
     945                    *******************************************************************************
     946                    *
     947 00003c60           bam_hdhold_combo1
     948                    
     949              003c  rtgiTIMEOUT     .equ    60
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     950                    
     951 00003c60           rtgilp0
     952 00003c60                   SLEEPK  1
     953 00003ca0           rtgilp
     954 00003ca0     b500          move    *a8(PLYRMODE),a0
         00003cb0     05c0  
     955 00003cc0     0b40          cmpi    MODE_HEADHOLD,a0
         00003cd0     ffef  
     956 00003ce0     cbf7          jrnz    rtgilp0
     957                    ;       jrz     rtgicont
     958                    ;       cmpi    MODE_HEADHELD,a0
     959                    ;       jrnz    rtgilp0
     960                    ;rtgicont
     961                    ;In combo mode?
     962 00003cf0     0d5f          calla   CHECK_COMBO_GO
         00003d00 00000000! 
     963 00003d20     c4f3          jrlt    rtgilp0
     964                    
     965                    
     966 00003d30     576b          clr     a11
     967                    
     968 00003d40                   WAITSWITCH_DWN  J_TOWARD,0,rtgilp
     969                    
     970 00003ea0     09cb          movi    rtgiTIMEOUT,a11
         00003eb0     003c  
     971                    
     972 00003ec0                   WAITSWITCH_DWN  J_TOWARD,0,rtgilp
     973 00004020                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,rtgilp
     974                    
     975 00004180     b500          move    *a8(PLYRMODE),a0
         00004190     05c0  
     976 000041a0     0b40          cmpi    MODE_HEADHOLD,a0
         000041b0     ffef  
     977 000041c0     ca03          jrz     rtgislam
     978 000041d0     0b40          cmpi    MODE_HEADHELD,a0
         000041e0     ffec  
     979 000041f0     cba6          jrnz    rtgilp0
     980                    
     981                    
     982 00004200           rtgislam
     983 00004200     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004210     0ae0  
     984 00004220     cba3          jrnz    rtgilp0                         ;ignore
     985                    
     986                    ;Start combo rules here
     987                    ;       move    *a8(ATTACH_PROC),a14,L
     988                    ;       movk    15,a0
     989                    ;       move    a0,*a14(IMMOBILIZE_TIME)
     990                    
     991                            ;target WHOIHIT
     992 00004230                   SMRTTGT a8,WHOIHIT
     993                    
     994 000042d0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000042e0 00000000! 
     995 00004300     09ee          movi    bam_combo_knees_anim,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

         00004310 00000000! 
     996 00004330     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004340     0930  
     997                    
     998 00004350                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
     999                    
    1000 000044f0                   SLEEPK  20
    1001                    
    1002 00004530     c000          jruc    rtgilp
         00004540     ff75  
    1003                    
    1004                    ;*******************************************************************************
    1005                    ;*
    1006                    ;bam_hdhold_anti_combo
    1007                    ;
    1008                    ;rtgiTIMEOUT    .equ    80
    1009                    ;
    1010                    ;rtgilp0
    1011                    ;       SLEEPK  1
    1012                    ;rtgilp
    1013                    ;;Is my opponent in combo mode?
    1014                    ;;      move    *a8(IMMOBILIZE_TIME),a14
    1015                    ;;      jrz     rtgilp0
    1016                    ;;      move    *a8(CLOSEST_NUM),a0
    1017                    ;;      X32     a0
    1018                    ;;      addi    process_ptrs,a0
    1019                    ;;      move    *a0,a0,L
    1020                    ;;      move    *a0(COMBO_COUNT),a0
    1021                    ;;      jrz     rtgilp0
    1022                    ;
    1023                    ;       clr     a11
    1024                    ;
    1025                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,rtgilp
    1026                    ;
    1027                    ;       movi    rtgiTIMEOUT,a11
    1028                    ;
    1029                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,rtgilp
    1030                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,rtgilp
    1031                    ;
    1032                    ;;Is my opponent in combo mode?
    1033                    ;       move    *a8(CLOSEST_NUM),a0
    1034                    ;       X32     a0
    1035                    ;       addi    process_ptrs,a0
    1036                    ;       move    *a0,a0,L
    1037                    ;       move    *a0(COMBO_COUNT),a0
    1038                    ;       jrz     rtgilp0
    1039                    ;
    1040                    ;       move    *a8(ANTI_COMBO_TIME),a0         ;Time stamp
    1041                    ;       move    @PCNT,a14
    1042                    ;       sub     a0,a14
    1043                    ;       abs     a14
    1044                    ;       cmpi    80,a14
    1045                    ;       jrge    rtgilp0
    1046                    ;       move    *a8(I_WILL_DIE),A14
    1047                    ;       jrnz    rtgilp0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

    1048                    ;
    1049                    ;;Combo breaker message!
    1050                    ;       CALLA   DO_REVERSAL
    1051                    ;       CALLA   DO_REVERSAL_MESS
    1052                    ;
    1053                    ;       clr     a0
    1054                    ;       move    a0,*a8(IMMOBILIZE_TIME)
    1055                    ;
    1056                    ;       move    *a8(WHOHITME),a14,L
    1057                    ;       movk    15,a0
    1058                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1059                    ;
    1060                    ;       ;target WHOHITME
    1061                    ;       SMRTTGT a8,WHOHITME
    1062                    ;
    1063                    ;       CALLA   FIND_AND_KILL_ENDLESS
    1064                    ;       movi    bam_3_pile_driver_anim,a14
    1065                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
    1066                    ;
    1067                    ;       WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    1068                    ;
    1069                    ;       SLEEPK  20
    1070                    ;
    1071                    ;       jruc    rtgilp
    1072                    ;
    1073                    *******************************************************************************
    1074                    *
    1075 00004550           bam_hdhold_combo2
    1076                    
    1077              003c  kgkgTIMEOUT     .equ    60
    1078                    
    1079 00004550           kgkglp0
    1080 00004550                   SLEEPK  1
    1081 00004590           kgkglp
    1082 00004590     b500          move    *a8(PLYRMODE),a0
         000045a0     05c0  
    1083 000045b0     0b40          cmpi    MODE_HEADHOLD,a0
         000045c0     ffef  
    1084 000045d0     cbf7          jrnz    kgkglp0
    1085                    ;       jrz     kgkgcont
    1086                    ;       cmpi    MODE_HEADHELD,a0
    1087                    ;       jrnz    kgkglp0
    1088                    ;kgkgcont
    1089                    ;In combo mode?
    1090 000045e0     0d5f          calla   CHECK_COMBO_GO
         000045f0 00000000! 
    1091 00004610     c4f3          jrlt    kgkglp0
    1092                    
    1093 00004620     576b          clr     a11
    1094                    
    1095 00004630                   WAITSWITCH_DWN  J_TOWARD,0,kgkglp
    1096                    
    1097 00004790     09cb          movi    kgkgTIMEOUT,a11
         000047a0     003c  
    1098                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1099 000047b0                   WAITSWITCH_DWN  J_TOWARD,0,kgkglp
    1100 00004910                   WAITSWITCH_DWN  B_PUNCH,J_ALL,kgkglp
    1101                    
    1102 00004a70     b500          move    *a8(PLYRMODE),a0
         00004a80     05c0  
    1103 00004a90     0b40          cmpi    MODE_HEADHOLD,a0
         00004aa0     ffef  
    1104 00004ab0     ca03          jrz     kgkgslam
    1105 00004ac0     0b40          cmpi    MODE_HEADHELD,a0
         00004ad0     ffec  
    1106 00004ae0     cba6          jrnz    kgkglp0
    1107                    
    1108 00004af0           kgkgslam
    1109 00004af0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004b00     0ae0  
    1110 00004b10     cba3          jrnz    kgkglp0                         ;ignore
    1111                    
    1112                    ;Start combo rules here
    1113                    ;       move    *a8(ATTACH_PROC),a14,L
    1114                    ;       movk    15,a0
    1115                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1116                    
    1117                            ;target WHOIHIT
    1118 00004b20                   SMRTTGT a8,WHOIHIT
    1119                    
    1120 00004bc0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004bd0 00000000! 
    1121 00004bf0     09ee          movi    bam_combo_punch_anim,a14
         00004c00 00000000! 
    1122 00004c20     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004c30     0930  
    1123                    
    1124 00004c40                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    1125                    
    1126 00004de0                   SLEEPK  20
    1127                    
    1128 00004e20     c000          jruc    kgkglp
         00004e30     ff75  
    1129                    
    1130                    
    1131                    *******************************************************************************
    1132                    *
    1133                    
    1134 00004e40           bam_grab_toss_air
    1135                    
    1136              0028  qdpoTIMEOUT     .equ    40
    1137                    
    1138 00004e40           qdpolp0
    1139 00004e40                   SLEEPK  1
    1140 00004e80           qdpolp
    1141 00004e80     576b          clr     a11
    1142                    
    1143 00004e90                   WAITSWITCH_DWN  J_AWAY,0,qdpolp
    1144                    
    1145 00004ff0     09cb          movi    qdpoTIMEOUT,a11
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

         00005000     0028  
    1146                    
    1147 00005010                   WAITSWITCH_DWN  J_AWAY,0,qdpolp
    1148 00005170                   WAITSWITCH_DWN  B_PUNCH,J_ALL,qdpolp
    1149                    
    1150 000052d0     b500          move    *a8(ANIMODE),a0
         000052e0     0660  
    1151 000052f0     1fa0          btst    MODE_UNINT_BIT,a0
    1152 00005300     cbb7          jrnz    qdpolp
    1153                    
    1154 00005310     b500          move    *a8(PLYRMODE),a0
         00005320     05c0  
    1155 00005330     0b40          cmpi    MODE_HEADHOLD,a0
         00005340     ffef  
    1156 00005350     caae          jreq    qdpolp0
    1157                    
    1158                    ;Don't do it when he is on ground
    1159 00005360                   SWAP    a8,a13
    1160 00005390     0d5f          calla   get_opp_plyrmode
         000053a0 00000000! 
    1161 000053c0                   SWAP    a8,a13
    1162                    ;Don't do it when he is on ground
    1163 000053f0     0b40          cmpi    MODE_ONGROUND,a0
         00005400     fffb  
    1164 00005410     caa6          jrz     qdpolp
    1165 00005420     0b40          cmpi    MODE_DEAD,a0
         00005430     fff6  
    1166 00005440     caa3          jrz     qdpolp
    1167 00005450     0b40          cmpi    MODE_INAIR,a0
         00005460     fffd  
    1168 00005470     ca39          jrz     qdpodoit2
    1169 00005480     0b40          cmpi    MODE_INAIR2,a0
         00005490     ffea  
    1170 000054a0     ca36          jrz     qdpodoit2
    1171                    
    1172 000054b0     b500          move    *a8(CLOSEST_NUM),a0
         000054c0     03a0  
    1173 000054d0                   X32     a0
    1174 000054e0     0b20          addi    process_ptrs,a0
         000054f0 00000000! 
    1175 00005510     8600          move    *a0,a0,L
    1176 00005520     b400          move    *a0(ATTACK_TYPE),a0
         00005530     05e0  
    1177 00005540     0b40          cmpi    AT_LEAPING,a0
         00005550     ffc6  
    1178 00005560     ca2a          jrz     qdpodoit2
    1179                    
    1180 00005570     b500          move    *a8(CLOSEST_DIST),a0
         00005580     0360  
    1181 00005590     0b40          cmpi    68h,a0
         000055a0     ff97  
    1182 000055b0     c78c          jrgt    qdpolp
    1183                    
    1184 000055c0     09ee          movi    bam_3_hiptoss_anim,a14
         000055d0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1185 000055f0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005600     0930  
    1186                    
    1187 00005610                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
    1188                    
    1189 000057b0                   SLEEPK  20
    1190 000057f0     c000          jruc    qdpolp
         00005800     ff67  
    1191                    
    1192 00005810     09ee  qdpodoit2       movi    bam_3_hiptoss2_anim,a14
         00005820 00000000! 
    1193 00005840     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005850     0930  
    1194                    
    1195 00005860                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
    1196                    
    1197 00005a00                   SLEEPK  20
    1198 00005a40     c000          jruc    qdpolp
         00005a50     ff42  
    1199                    
    1200                    *****************************************************************************
    1201                    
    1202 00005a60            SUBR   bam_ani_init
    1203                    
    1204 00005a60     b5a0          move    *a13(FACING_DIR),a0
         00005a70     04c0  
    1205 00005a80     1f80          btst    PLAYER_RIGHT_BIT,a0
    1206 00005a90     cb18          jrnz    dagfp1
    1207                    ;Plyr 2
    1208 00005aa0     09e0          movi    bam_stand4_anim,a0
         00005ab0 00000000! 
    1209 00005ad0     0d5f          calla   change_anim1a
         00005ae0 00000000! 
    1210                    
    1211 00005b00     09e0          movi    bam_torso4_anim,a0
         00005b10 00000000! 
    1212 00005b30     0d5f          calla   change_anim2a
         00005b40 00000000! 
    1213                    
    1214 00005b60                   PUSH    a10
    1215 00005b70     4daa          move    a13,a10
    1216 00005b80                   CREATE  TAUNT_PID,do_taunt
    1217 00005c00                   PULL    a10
    1218                    
    1219 00005c10     0960          rets
    1220                    
    1221 00005c20           dagfp1
    1222 00005c20     09e0          movi    bam_stand2_anim,a0
         00005c30 00000000! 
    1223 00005c50     0d5f          calla   change_anim1a
         00005c60 00000000! 
    1224                    
    1225 00005c80     09e0          movi    bam_torso2_anim,a0
         00005c90 00000000! 
    1226 00005cb0     0d5f          calla   change_anim2a
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

         00005cc0 00000000! 
    1227                    
    1228 00005ce0     0960          rets
    1229                    
    1230                    
    1231                    *****************************************************************************
    1232                    *
    1233                    * BAM BAM CONTROL CODE
    1234                    *
    1235                    * a13 = * bam process
    1236                    
    1237 00005cf0            SUBR   move_bam
    1238                    
    1239 00005cf0     09eb          movi    bam_secret_moves,a11
         00005d00 00000000' 
    1240 00005d20     0d5f          calla   check_secret_moves
         00005d30 00000000! 
    1241                    
    1242 00005d50     b5a0          move    *a13(PLYRMODE),a0
         00005d60     05c0  
    1243 00005d70     24a0          sll     5,a0                    ;x 32
    1244 00005d80     0b20          addi    eimpmode_table,a0
         00005d90 00005de0' 
    1245 00005db0     8600          move    *a0,a0,L
    1246 00005dc0     0920          call    a0
    1247 00005dd0     0960          rets
    1248                    
    1249 00005de0           eimpmode_table
    1250 00005de0 00006120'         .long   mode_normal             ;0
    1251 00005e00 0000d2e0'         .long   mode_running            ;1
    1252 00005e20 0000f760'         .long   mode_inair              ;2
    1253 00005e40 0000f770'         .long   mode_attached           ;3
    1254 00005e60 0000f8e0'         .long   mode_onground           ;4
    1255 00005e80 0000f8f0'         .long   mode_bouncing           ;5
    1256 00005ea0 0000fb90'         .long   mode_onturnbkl          ;6
    1257 00005ec0 00010530'         .long   mode_block              ;7
    1258 00005ee0 00010fb0'         .long   mode_dizzy              ;8
    1259 00005f00 00000000!         .long   mode_dead               ;9
    1260 00005f20 00010fc0'         .long   mode_oppoverhead        ;10
    1261 00005f40 00011e10'         .long   mode_climbturnbkl       ;11
    1262 00005f60 00011e20'         .long   mode_waitanim           ;12
    1263 00005f80 00011ea0'         .long   mode_grapple            ;13
    1264 00005fa0 00011eb0'         .long   mode_master             ;14
    1265 00005fc0 00011ef0'         .long   mode_slave              ;15
    1266 00005fe0 00011f00'         .long   mode_headhold           ;16
    1267 00006000 00013330'         .long   mode_puppet2            ;17
    1268 00006020 00006120'         .long   mode_normal     ;18
    1269 00006040 00013340'         .long   mode_headheld           ;19
    1270 00006060 00000000!         .long   mode_puppet             ;20
    1271 00006080 00000000!         .long   mode_inair2             ;21
    1272 000060a0 00006120'         .long   mode_normal     ;22
    1273 000060c0 00006120'         .long   mode_normal     ;23
    1274 000060e0 00013800'         .long   mode_chokehold          ;24
    1275 00006100 00000000!         .long   mode_choking            ;25
    1276                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1277                    
    1278                    *****************************************************************************
    1279                    
    1280 00006120           mode_normal
    1281                    
    1282 00006120     b5a0          move    *a13(ANIMODE),a0
         00006130     0660  
    1283 00006140     1fa0          btst    MODE_UNINT_BIT,a0
    1284 00006150     cb00          jrnz    owvkno_interrupt
         00006160     00b0  
    1285                    
    1286 00006170     b5a0          move    *a13(I_WILL_DIE),a0
         00006180     0b30  
    1287 00006190     ca1f          jrz     owvknope
    1288 000061a0     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         000061b0     0ae0  
    1289 000061c0     cb1c          jrnz    owvknope
    1290                    ;Player has died amidst a combo...
    1291                    ;Knock me down.
    1292 000061d0     09e0          movi    bam_fall_back_anim,a0
         000061e0 00000000! 
    1293 00006200     0d5f          calla   change_anim1a
         00006210 00000000! 
    1294                    
    1295                    ;Zero health bar
    1296 00006230     09c0          movi    -10,a0
         00006240     fff6  
    1297 00006250     b5a1          move    *a13(PLYRNUM),a1
         00006260     0580  
    1298 00006270     0d5f          calla   adjust_health
         00006280 00000000! 
    1299                    
    1300 000062a0                   SETMODE DEAD
    1301                    
    1302 00006350     5600          clr     a0
    1303 00006360     b00d          move    a0,*a13(I_WILL_DIE)
         00006370     0b30  
    1304                    
    1305 00006380     0960          rets
    1306                    
    1307 00006390           owvknope
    1308                    
    1309                    ;Perhaps we need to interrupt any sequence when a wrestler has won?
    1310                    
    1311 00006390     0d5f          calla   get_opp_plyrmode
         000063a0 00000000! 
    1312 000063c0     0b40          cmpi    MODE_DEAD,a0
         000063d0     fff6  
    1313 000063e0     cb49          jrne    owvkopp_not_dead
    1314                    
    1315                            ;if closest is a zombie, skip pin section.
    1316 000063f0     0d5f          calla   get_opp_process
         00006400 00000000! 
    1317 00006420     b40e          move    *a0(STATUS_FLAGS),a14
         00006430     0b50  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1318 00006440     1f8e          btst    B_ZOMBIE,a14
    1319 00006450     cb42          jrnz    owvkopp_not_dead
    1320                            
    1321                            ;all opponents are dead.  Check for pins/raisearms
    1322                    
    1323                            ;if we're attached to someone, don't interrupt it.
    1324 00006460     b7a1          move    *a13(ATTACH_PROC),a1,L
         00006470     03e0  
    1325 00006480     ca04          jrz     owvkno_attch
    1326 00006490     b622          move    *a1(ATTACH_PROC),a2,L
         000064a0     03e0  
    1327 000064b0     484d          cmp     a2,a13
    1328 000064c0     ca3b          jreq    owvkno_pin_yet
    1329 000064d0           owvkno_attch
    1330                    
    1331                            ;if a teammate has pinned, raise yer arm.
    1332 000064d0     0d5f          calla   ck_teammate_pin 
         000064e0 00000000! 
    1333 00006500     c823          jrc     owvkraisearm
    1334                    
    1335                            ;nobody has pinned.  if we're outside or all our opponents are
    1336                            ; outside, do a raisearm.
    1337 00006510     0d5f          calla   raisearm_check
         00006520 00000000! 
    1338 00006540     c81f          jrc     owvkraisearm
    1339                    
    1340                            ;we're inside with a pinnable opponent.  any button pins.
    1341 00006550     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006560     0b90  
    1342 00006570     ca30          jrz     owvkno_pin_yet
    1343                    
    1344                            ;we have a press -- make sure opponent is on the ground
    1345 00006580     0d5f          calla   can_pin
         00006590 00000000! 
    1346 000065b0     c92c          jrnc    owvkopp_notgnd
    1347                    
    1348                            ;opponent is on the ground.  pin him.
    1349 000065c0                   FACE24  bam,pin_anim
    1350 00006660     0d5f          calla   change_anim1a
         00006670 00000000! 
    1351                    
    1352                            ;set the 'I did a pin' flag.
    1353 00006690     b5ae          move    *a13(STATUS_FLAGS),a14
         000066a0     0b50  
    1354 000066b0     0bae          ori     M_DID_PIN,a14
         000066c0 00000002  
    1355 000066e0     b1cd          move    a14,*a13(STATUS_FLAGS)
         000066f0     0b50  
    1356                    
    1357                            ;if we're a temp drone for auto-pin purposes, turn back into
    1358                            ; a normal player here.
    1359 00006700     0d5f          calla   drone_change_back
         00006710 00000000! 
    1360                    
    1361 00006730     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1362                    
    1363 00006740           owvkraisearm
    1364 00006740                   FACE24  bam,raise_arm_anim
    1365 000067e0     0d5f          calla   change_anim1a
         000067f0 00000000! 
    1366 00006810     0d5f          calla   set_raisearm_bit
         00006820 00000000! 
    1367                    
    1368                            ;if we're a temp drone for auto-pin purposes, turn back into
    1369                            ; a normal player here.
    1370 00006840     0d5f          calla   drone_change_back
         00006850 00000000! 
    1371                    
    1372 00006870     0960          rets
    1373                    
    1374 00006880           owvktoo_far_to_pin
    1375 00006880           owvkopp_notgnd
    1376 00006880           owvkopp_not_dead
    1377 00006880           owvkno_pin_yet
    1378                    
    1379 00006880     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006890     0ae0  
    1380 000068a0     cb36          jrnz    owvkimmobilized
    1381                    
    1382 000068b0     b5a0          move    *a13(BUT_VAL_CUR),a0
         000068c0     0b90  
    1383 000068d0     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1384 000068e0     ca07          jrz     owvknblk                        ;1 for down transitions
    1385 000068f0     0d3f          callr   owvkblock                       ;& 1 for current buttons
         00006900     01e8  
    1386 00006910     c804          jrc     owvknblk
    1387 00006920     5600          clr     a0
    1388 00006930     b00d          move    a0,*a13(ATTACK_TYPE)
         00006940     05e0  
    1389 00006950     0960          rets
    1390 00006960           owvknblk
    1391 00006960     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006970     0b90  
    1392 00006980     0b80          andi    011111b,a0
         00006990 ffffffe0  
    1393 000069b0     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         000069c0     fff6  
    1394 000069d0     ca00          jrz     owvkpunchkick
         000069e0     0542  
    1395                    
    1396 000069f0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00006a00     0ba0  
    1397 00006a10     0b80          andi    011111b,a0
         00006a20 ffffffe0  
    1398 00006a40                   X32     a0
    1399 00006a50     0b20          addi    owvkaction_table,a0
         00006a60 00006c80' 
    1400 00006a80     8600          move    *a0,a0,L
    1401 00006a90     0920          call    a0
    1402                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1403 00006aa0     b5a0          move    *a13(ANIMODE),a0
         00006ab0     0660  
    1404 00006ac0     1fa0          btst    MODE_UNINT_BIT,a0
    1405 00006ad0     cb19          jrnz    owvkno_interrupt
    1406                    
    1407                    
    1408 00006ae0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00006af0     0bc0  
    1409 00006b00     b00d          move    a0,*a13(MOVE_DIR)
         00006b10     04b0  
    1410 00006b20     0d5f          calla   climb_turnbuckle
         00006b30 00000000! 
    1411 00006b50     c90e          jrnc    owvkno_climb
    1412 00006b60     b5a5          move    *a13(WRESTLERNUM),A5
         00006b70     0590  
    1413 00006b80     09e2          MOVI    CLIMB_ROPES,A2
         00006b90 00000000! 
    1414 00006bb0     09c0          MOVI    1000,A0
         00006bc0     03e8  
    1415 00006bd0     0d5f          CALLA   ADD_IF_SILENT
         00006be0 00000000! 
    1416 00006c00     0960          rets
    1417                    
    1418 00006c10           owvkimmobilized
    1419 00006c10     57ce          clr     a14
    1420 00006c20     b1cd          move    a14,*a13(MOVE_DIR)
         00006c30     04b0  
    1421 00006c40           owvkno_climb
    1422 00006c40     0d5f          calla   execute_walk
         00006c50 00000000! 
    1423                    
    1424 00006c70           owvkno_interrupt
    1425 00006c70     0960          rets
    1426                    
    1427 00006c80           owvkaction_table
    1428 00006c80 00007080'         .long   owvkz,owvkpunch,owvkblock,owvkblock                     ;0-3
    1429 00006d00 00008970'         .long   owvksuper_punch,owvksuper_punch,owvkblock,owvkblock     ;4-7
    1430 00006d80 0000a510'         .long   owvkkick,owvkpunchkick,owvkblock,owvkblock              ;8-11
    1431 00006e00 00008970'         .long   owvksuper_punch,owvkpunchkick,owvkblock,owvkblock       ;12-15
    1432 00006e80 0000be80'         .long   owvksuper_kick,owvksuper_kick,owvkblock,owvkblock       ;16-19
    1433 00006f00 0000d0d0'         .long   owvkgraboh,owvkgraboh,owvkblock,owvkblock               ;20-23
    1434 00006f80 0000be80'         .long   owvksuper_kick,owvkpunchkick,owvkblock,owvkblock        ;24-27
    1435 00007000 0000d0d0'         .long   owvkgraboh,owvkgraboh,owvkblock,owvkblock               ;28-31
    1436                    
    1437                    ************
    1438 00007080           owvkz           ;0
    1439                    
    1440 00007080     0960          rets
    1441                    
    1442                    
    1443                    ************
    1444 00007090           owvkpunch               ;1
    1445                    *
    1446                    * MODE             DX  DZ       ACTION
    1447                    * ----------------------------------------------------
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1448                    * normal        <  50   92      headbutt
    1449                    * dizzy                 "               "
    1450                    * normal        >               normal punch
    1451                    * dizzy                 "               "
    1452                    *
    1453                    * onground      < 120  120      elbow drop
    1454                    * onground      >               normal punch
    1455                    *
    1456                    * running                       hiptoss
    1457                    * bouncing                      nothing
    1458                    *
    1459                    * onturnbkl     <  60   96      yank down
    1460                    * onturnbkl     >               normal punch
    1461                    * climbturnbkl                  normal punch
    1462                    *
    1463 00007090                   JJXM_INIT
    1464 00007100                   JJXM    NORMAL,          50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1465 000071d0                   JJXM    DIZZY,           50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1466 000072a0                   JJXM    BLOCK,           50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1467 00007370                   JJXM    ONGROUND,       160,140,owvkpunch_lbowdrop,owvkpunch_punch
    1468 00007440                   JJXM    RUNNING,         50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1469 00007510                   JJXM    BOUNCING,        50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1470 000075e0                   JJXM    ONTURNBKL,              owvkpunch_punch
    1471 00007630                   JJXM    CLIMBTURNBKL,           owvkpunch_punch
    1472 00007680                   JJXM    INAIR,           50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1473 00007750                   JJXM    ATTACHED,        50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1474 00007820                   JJXM    DEAD,           160,140,owvkpunch_lbowdrop,owvkpunch_punch
    1475 000078d0                   JJXM    OPPOVERHEAD,     50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1476 00007980                   JJXM    WAITANIM,        50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1477 00007a30                   JJXM    GRAPPLE,         50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1478 00007ad0                   JJXM    MASTER,          50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1479 00007b70                   JJXM    SLAVE,           50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1480 00007c10                   JJXM    HEADHOLD,        50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1481 00007cb0                   JJXM    HEADHELD,        50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1482 00007d50                   JJXM    CHOKEHOLD,       50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1483 00007df0                   JJXM    PUPPET,          50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1484 00007e90                   JJXM    PUPPET2,         50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1485 00007f30                   JJXM    INAIR2,          50, 45,owvkpunch_hdbutt,owvkpunch_punch
    1486 00007fd0                   JJXM_END
    1487                    
    1488                    
    1489                    *****
    1490 00007ff0           owvkpunch_rets
    1491 00007ff0     0960          rets
    1492                    
    1493                    *****
    1494 00008000           owvkpunch_punch
    1495 00008000           std_punch
    1496                    
    1497 00008000                   FACE24  bam,punch_anim
    1498 000080a0     0d5f          calla   change_anim1a
         000080b0 00000000! 
    1499                    
    1500 000080d0                   WRSND   W_BAMBAM,PUNCH_T1,PUNCH_T2
    1501 00008270     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1502                    
    1503                    *****
    1504 00008280           owvkpunch_hdbutt
    1505                    
    1506 00008280                   FACE24  bam,butt_anim
    1507 00008320     0d5f          calla   change_anim1a
         00008330 00000000! 
    1508                    
    1509 00008350                   WRSND   W_BAMBAM,HDBUTT_T1,HDBUTT_T2
    1510 000084f0     0960          rets
    1511                    
    1512                    *****
    1513 00008500           owvkpunch_lbowdrop
    1514                    
    1515 00008500                   FACE24  bam,lbowdrop_anim
    1516 000085a0     0d5f          calla   change_anim1a
         000085b0 00000000! 
    1517                    
    1518 000085d0                   WRSND   W_BAMBAM,LBOWDROP_T1,LBOWDROP_T2
    1519 00008770     0960          rets
    1520                    
    1521                    *****
    1522                    
    1523 00008780     0960          rets
    1524                    
    1525                    ************
    1526 00008790           owvkblock               ;2
    1527 00008790           std_block
    1528 00008790     05a0          move    @blocking_off,a0
         000087a0 00000000! 
    1529 000087c0     cb18          jrnz    owvkno_blocking
    1530                    
    1531 000087d0                   RND_AWARD       a13,BLOCKS_AWD
    1532                    
    1533 00008870     09e0          movi    bam_4_block_anim,a0
         00008880 00000000! 
    1534 000088a0     0d5f          calla   change_anim1
         000088b0 00000000! 
    1535                    
    1536 000088d0     0d5f          calla   BLOCK_WOOSH
         000088e0 00000000! 
    1537                    
    1538 00008900     5600          clr     a0
    1539 00008910     b00d          move    a0,*a13(BLOCK_TIME)
         00008920     0d30  
    1540 00008930     0320          clrc
    1541 00008940     0960          rets
    1542                    
    1543 00008950           owvkno_blocking
    1544 00008950     0de0          setc
    1545 00008960     0960          rets
    1546                    
    1547                    
    1548                    ************
    1549 00008970           owvksuper_punch ;4
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1550                    *
    1551                    * MODE             DX  DZ       ACTION
    1552                    * ----------------------------------------------------
    1553                    * normal        <  50   92      close in super move
    1554                    * dizzy                 "               "
    1555                    * normal        >               jumping punch move
    1556                    * dizzy                 "               "
    1557                    *
    1558                    * onground      < 120  120      super elbow drop
    1559                    * onground      >               normal punch
    1560                    *
    1561                    * running                       hip toss
    1562                    * bouncing                      nothing
    1563                    *
    1564                    * onturnbkl     <  60   96      yank down
    1565                    * onturnbkl     >               normal punch
    1566                    * climbturnbkl                  normal punch
    1567                    *
    1568 00008970                   JJXM_INIT
    1569 000089e0                   JJXM    NORMAL,          90, 55,owvkspunch_special,owvkspunch_jump
    1570 00008ab0                   JJXM    DIZZY,           90, 55,owvkspunch_special,owvkspunch_jump
    1571 00008b80                   JJXM    BLOCK,           90, 55,owvkspunch_special,owvkspunch_jump
    1572 00008c50                   JJXM    ONGROUND,       160,140,owvkspunch_lbowdrop,std_punch
    1573 00008d20                   JJXM    RUNNING,         90, 55,owvkspunch_special,owvkspunch_jump
    1574 00008df0                   JJXM    BOUNCING,        90, 55,owvkspunch_special,owvkspunch_jump
    1575 00008ec0                   JJXM    ONTURNBKL,              owvkspunch_jump
    1576 00008f10                   JJXM    CLIMBTURNBKL,           std_punch
    1577 00008f60                   JJXM    INAIR,           90, 55,owvkspunch_special,owvkspunch_jump
    1578 00009030                   JJXM    ATTACHED,        85, 55,owvkspunch_special,owvkspunch_jump
    1579 000090f0                   JJXM    DEAD,            160,140,owvkspunch_lbowdrop,std_punch
    1580 000091c0                   JJXM    OPPOVERHEAD,     90, 55,owvkspunch_special,owvkspunch_jump
    1581 00009270                   JJXM    WAITANIM,        90, 55,owvkspunch_special,owvkspunch_jump
    1582 00009320                   JJXM    GRAPPLE,         90, 55,owvkspunch_special,owvkspunch_jump
    1583 000093c0                   JJXM    MASTER,          90, 55,owvkspunch_special,owvkspunch_jump
    1584 00009460                   JJXM    SLAVE,           90, 55,owvkspunch_special,owvkspunch_jump
    1585 00009500                   JJXM    HEADHOLD,        90, 55,owvkspunch_special,owvkspunch_jump
    1586 000095a0                   JJXM    HEADHELD,               do_pile                         ;19
    1587 000095f0                   JJXM    CHOKEHOLD,       90, 55,owvkspunch_special,owvkspunch_jump
    1588 00009690                   JJXM    PUPPET,          90, 45,owvkspunch_special,owvkspunch_jump
    1589 00009730                   JJXM    PUPPET2,         90, 45,owvkspunch_special,owvkspunch_jump
    1590 000097d0                   JJXM    INAIR2,          90, 45,owvkspunch_special,owvkspunch_jump
    1591 00009870                   JJXM_END
    1592                    
    1593 00009890           owvkspunch_rets
    1594 00009890     0960          rets
    1595                    
    1596                    *****
    1597 000098a0           owvkspunch_jump
    1598                    ;jumping punch attack
    1599 000098a0                   FACE24  bam,slap_anim
    1600 00009940     0d5f          calla   change_anim1a
         00009950 00000000! 
    1601                    
    1602 00009970                   WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
    1603                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1604 00009b10     0960          rets
    1605                    
    1606                    *****
    1607 00009b20           owvkspunch_special
    1608                    ;If stick is toward opponent, then do head hold
    1609                    ;       move    *a13(STICK_VAL_CUR),a0
    1610                    ;       move    *a13(NEW_FACING_DIR),a1
    1611                    ;       andi    0ch,a1
    1612                    ;       cmp     a0,a1
    1613                    ;
    1614                    ;       jrz     owvkcont
    1615                    
    1616 00009b20     b5a1          move    *a13(CLOSEST_XDIST),a1
         00009b30     0370  
    1617 00009b40     0b41          cmpi    55,a1
         00009b50     ffc8  
    1618 00009b60     c7d3          jrgt    owvkspunch_jump
    1619                    ;       jruc    owvkhdbutt
    1620                    ;owvkcont
    1621                    ;
    1622                    ;       movi    bam_3_head_hold2_anim,a0
    1623                    ;       calla   change_anim1a
    1624                    ;
    1625                    ;       WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    1626                    ;
    1627                    ;       rets
    1628                    ;owvkhdbutt
    1629 00009b70                   FACE24  bam,butts_anim
    1630 00009c10     0d5f          calla   change_anim1a
         00009c20 00000000! 
    1631                    
    1632 00009c40                   WRSND   W_BAMBAM,HDBUTT_T1,HDBUTT_T2
    1633 00009de0     0960          rets
    1634                    
    1635                    *****
    1636 00009df0           owvkspunch_lbowdrop
    1637                     
    1638                    ;If near opponents head, and facing down, do the hair grab!
    1639                    ;Allow hair grab from below!
    1640                    
    1641                    ;       move    *a13(FACING_DIR),a14
    1642                    ;       btst    MOVE_DOWN_BIT,a14
    1643                    ;       jrz     owvkno
    1644                    
    1645 00009df0     b5ae          move    *a13(CLOSEST_NUM),a14
         00009e00     03a0  
    1646 00009e10                   X32     a14
    1647 00009e20     0b2e          addi    process_ptrs,a14
         00009e30 00000000! 
    1648 00009e50     87ce          move    *a14,a14,L
    1649 00009e60     b5c2          move    *a14(PLYRMODE),a2
         00009e70     05c0  
    1650 00009e80     0b42          cmpi    MODE_DEAD,a2
         00009e90     fff6  
    1651 00009ea0     ca3e          jrz     owvkno
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1652 00009eb0     b7a1          move    *a13(OBJ_XPOS),a1,L 
         00009ec0     0100  
    1653 00009ed0     b7c2          move    *a14(OBJ_XPOS),a2,L
         00009ee0     0100  
    1654 00009ef0     4441          sub     a2,a1
    1655 00009f00     0381          abs     a1
    1656 00009f10     2e01          srl     16,a1
    1657 00009f20     0b41          cmpi    20h,a1  ;28
         00009f30     ffdf  
    1658 00009f40     c434          jrlt    owvkno
    1659                    
    1660                    ;At head or feet!
    1661                    
    1662 00009f50     b5ce          move    *a14(OBJ_CONTROL),a14
         00009f60     0780  
    1663 00009f70     0b8e          andi    M_FLIPH,a14
         00009f80 ffffffef  
    1664 00009fa0     b5a0          move    *a13(OBJ_CONTROL),a0
         00009fb0     0780  
    1665 00009fc0     0b80          andi    M_FLIPH,a0
         00009fd0 ffffffef  
    1666 00009ff0     480e          cmp     a0,a14
    1667 0000a000     ca28          jrz     owvkno
    1668                    
    1669                    ;At head!  Do hair pickup.
    1670                    
    1671 0000a010                   FACE24  bam,hair_pickup_anim
    1672 0000a0b0     0d5f          calla   change_anim1
         0000a0c0 00000000! 
    1673 0000a0e0                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1674 0000a280     0960          rets
    1675                    
    1676 0000a290           owvkno
    1677 0000a290                   FACE24  bam,lbowdrop_anim
    1678 0000a330     0d5f          calla   change_anim1a
         0000a340 00000000! 
    1679                    
    1680 0000a360                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1681                    
    1682 0000a500     0960          rets
    1683                    
    1684                    
    1685                    ************
    1686 0000a510           owvkkick                ;8
    1687                    *
    1688                    * MODE             DX  DZ       ACTION
    1689                    * ----------------------------------------------------
    1690                    * normal        <  50   92      knee
    1691                    * dizzy                 "               "
    1692                    * normal        >               normal kick
    1693                    * dizzy                 "               "
    1694                    *
    1695                    * onground      < 120  120      stomp
    1696                    * onground      >               normal kick
    1697                    *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1698                    * running                       normal kick
    1699                    * bouncing                      normal kick
    1700                    *
    1701                    * onturnbkl                     normal kick
    1702                    * climbturnbkl                  normal kick
    1703                    *
    1704 0000a510                   JJXM_INIT
    1705 0000a580                   JJXM    NORMAL,          60, 92,owvkkick_knee,owvkkick_kick
    1706 0000a650                   JJXM    DIZZY,           60, 92,owvkkick_knee,owvkkick_kick
    1707 0000a720                   JJXM    BLOCK,           60, 92,owvkkick_knee,owvkkick_kick
    1708 0000a7f0                   JJXM    ONGROUND,       160,140,owvkkick_stomp,owvkkick_kick
    1709 0000a8c0                   JJXM    RUNNING,         60, 92,owvkkick_knee,owvkkick_kick
    1710 0000a990                   JJXM    BOUNCING,        60, 92,owvkkick_knee,owvkkick_kick
    1711 0000aa60                   JJXM    ONTURNBKL,              owvkkick_kick
    1712 0000aab0                   JJXM    CLIMBTURNBKL,           owvkkick_kick
    1713 0000ab00                   JJXM    INAIR,           60, 92,owvkkick_knee,owvkkick_kick
    1714 0000abd0                   JJXM    ATTACHED,        60, 92,owvkkick_knee,owvkkick_kick
    1715 0000aca0                   JJXM    DEAD,           160,140,owvkkick_stomp,owvkkick_kick
    1716 0000ad70                   JJXM    OPPOVERHEAD,     60, 92,owvkkick_knee,owvkkick_kick
    1717 0000ae40                   JJXM    WAITANIM,        60, 92,owvkkick_knee,owvkkick_kick
    1718 0000aef0                   JJXM    GRAPPLE,         60, 92,owvkkick_knee,owvkkick_kick
    1719 0000afa0                   JJXM    MASTER,          60, 92,owvkkick_knee,owvkkick_kick
    1720 0000b050                   JJXM    SLAVE,           60, 92,owvkkick_knee,owvkkick_kick
    1721 0000b100                   JJXM    HEADHOLD,        60, 92,owvkkick_knee,owvkkick_kick
    1722 0000b1a0                   JJXM    HEADHELD,        60, 92,owvkkick_knee,owvkkick_kick
    1723 0000b240                   JJXM    CHOKEHOLD,       60, 92,owvkkick_knee,owvkkick_kick
    1724 0000b2e0                   JJXM    PUPPET,          60, 92,owvkkick_knee,owvkkick_kick
    1725 0000b380                   JJXM    PUPPET2,         60, 92,owvkkick_knee,owvkkick_kick
    1726 0000b420                   JJXM    INAIR2,                 owvkkick_TB
    1727 0000b460                   JJXM_END
    1728                    
    1729                    
    1730                    *****
    1731 0000b480           owvkkick_TB
    1732                    
    1733                            .ref    bam_kick_TB_anim
    1734 0000b480     09e0          movi    bam_kick_TB_anim,a0
         0000b490 00000000! 
    1735 0000b4b0     0d5f          calla   change_anim1a
         0000b4c0 00000000! 
    1736                    
    1737 0000b4e0                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1738 0000b680     0960          rets
    1739                    
    1740                    *****
    1741 0000b690           owvkkick_kick
    1742 0000b690           std_kick
    1743                    
    1744 0000b690                   FACE24  bam,kick_anim
    1745 0000b730     0d5f          calla   change_anim1a
         0000b740 00000000! 
    1746                    
    1747 0000b760                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1748 0000b900     0960          rets
    1749                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1750                    *****
    1751 0000b910           owvkkick_knee
    1752 0000b910           std_knee
    1753                    
    1754 0000b910                   FACE24  bam,knee_anim
    1755 0000b9b0     0d5f          calla   change_anim1a
         0000b9c0 00000000! 
    1756                    
    1757 0000b9e0                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1758 0000bb80     0960          rets
    1759                    
    1760                    *****
    1761 0000bb90           owvkkick_stomp
    1762 0000bb90           attack_stomp
    1763                    
    1764 0000bb90                   FACE24  bam,stomp_anim
    1765 0000bc30     0d5f          calla   change_anim1a
         0000bc40 00000000! 
    1766                    
    1767 0000bc60                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1768                    
    1769 0000be00     0960          rets
    1770                    
    1771                    
    1772                    ************
    1773 0000be10           owvkpunchkick   ;9
    1774                    
    1775 0000be10     09e0          movi    start_run_anim,a0
         0000be20 00000000! 
    1776 0000be40     0d5f          calla   change_anim1a
         0000be50 00000000! 
    1777                    
    1778 0000be70     0960          rets
    1779                    
    1780                    ************
    1781 0000be80           owvksuper_kick  ;16
    1782                    *
    1783                    * MODE             DX  DZ       ACTION
    1784                    * ----------------------------------------------------
    1785                    * normal        <  60   60      close in super move
    1786                    * dizzy                 "               "
    1787                    * normal        >               jumping kick move
    1788                    * dizzy                 "               "
    1789                    *
    1790                    * onground      < 120  120      super stomp
    1791                    * onground      >               normal kick
    1792                    *
    1793                    * running                       big boot
    1794                    * bouncing                      big boot
    1795                    *
    1796                    * onturnbkl     <  60   96      jumping kick move
    1797                    * climbturnbkl          "               "
    1798                    * onturnbkl     >               normal kick
    1799                    * climbturnbkl          "               "
    1800                    *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1801 0000be80                   JJXM_INIT
    1802 0000bef0                   JJXM    NORMAL,          60, 60,owvkskick_special,owvkskick_kick
    1803 0000bfc0                   JJXM    DIZZY,           60, 60,owvkskick_special,owvkskick_kick
    1804 0000c090                   JJXM    BLOCK,           60, 60,owvkskick_special,owvkskick_kick
    1805 0000c160                   JJXM    ONGROUND,       160,140,attack_stomp,std_kick
    1806 0000c220                   JJXM    RUNNING,         60, 60,owvkskick_special,owvkskick_kick
    1807 0000c2f0                   JJXM    BOUNCING,        60, 60,owvkskick_special,owvkskick_kick
    1808 0000c3c0                   JJXM    ONTURNBKL,       60, 96,owvkskick_kick,std_kick
    1809 0000c490                   JJXM    CLIMBTURNBKL,    60, 96,owvkskick_kick,std_kick
    1810 0000c560                   JJXM    INAIR,           60, 60,owvkskick_special,owvkskick_kick
    1811 0000c630                   JJXM    ATTACHED,        60, 60,owvkskick_special,owvkskick_kick
    1812 0000c6d0                   JJXM    DEAD,           160,140,attack_stomp,std_kick
    1813 0000c7a0                   JJXM    OPPOVERHEAD,     60, 60,owvkskick_special,owvkskick_kick
    1814 0000c840                   JJXM    WAITANIM,        60, 60,owvkskick_special,owvkskick_kick
    1815 0000c8e0                   JJXM    GRAPPLE,         60, 60,owvkskick_special,owvkskick_kick
    1816 0000c980                   JJXM    MASTER,          60, 60,owvkskick_special,owvkskick_kick
    1817 0000ca20                   JJXM    SLAVE,           60, 60,owvkskick_special,owvkskick_kick
    1818 0000cac0                   JJXM    HEADHOLD,        60, 60,owvkskick_special,owvkskick_kick
    1819 0000cb60                   JJXM    HEADHELD,        60, 60,owvkskick_special,owvkskick_kick
    1820 0000cc00                   JJXM    CHOKEHOLD,       60, 60,owvkskick_special,owvkskick_kick
    1821 0000cca0                   JJXM    PUPPET,          60, 60,owvkskick_special,owvkskick_kick
    1822 0000cd40                   JJXM    PUPPET2,         60, 60,owvkskick_special,owvkskick_kick
    1823 0000cde0                   JJXM    INAIR2,                 owvkkick_TB
    1824 0000ce30                   JJXM_END
    1825                    
    1826                    *****
    1827 0000ce50           owvkskick_special
    1828 0000ce50           owvkskick_kick
    1829                    
    1830                    ;Jumping karate kick
    1831 0000ce50                   FACE24  bam,superkick_anim
    1832 0000cef0     0d5f          calla   change_anim1a
         0000cf00 00000000! 
    1833                    
    1834                    ;       WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    1835 0000cf20                   WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
    1836                    
    1837 0000d0c0     0960          rets
    1838                    
    1839                    *****
    1840                    ;owvkskick_bigboot
    1841                    ;
    1842                    ;       movi    bam_4_bigboot_anim,a0
    1843                    ;       calla   change_anim1a
    1844                    ;
    1845                    ;       WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    1846                    ;
    1847                    ;       rets
    1848                    
    1849                    
    1850                    ************
    1851 0000d0d0           owvkgraboh              ;8
    1852                    
    1853                    ;Both super buttons at the same time!
    1854                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1855 0000d0d0     09e0          movi    bam_4_graboh_anim,a0
         0000d0e0 00000000! 
    1856 0000d100     0d5f          calla   change_anim1a
         0000d110 00000000! 
    1857                    
    1858 0000d130                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    1859                    
    1860 0000d2d0     0960          rets
    1861                    
    1862                    
    1863                    *****************************************************************************
    1864                    *
    1865                    * RUNNING (if GETUP_TIME > 0 then player is out of control)
    1866                    *
    1867                    
    1868          00064000  whrkXRUN_VAL    equ     BAM_XRUN
    1869          00020000  whrkZDRIFT_VAL  equ     BAM_ZDRIFT
    1870                    
    1871 0000d2e0           mode_running
    1872                    
    1873 0000d2e0     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         0000d2f0     07b0  
    1874 0000d300     1020          addk    1,a0
    1875 0000d310     b00d          move    a0,*a13(RUN_TIME)
         0000d320     07b0  
    1876                    
    1877 0000d330     b5a0          move    *a13(USR_VAR1),a0
         0000d340     0850  
    1878 0000d350     cb11          jrnz    whrkno_vel
    1879                    
    1880 0000d360     0d5f          calla   bounce_off_ropes
         0000d370 00000000! 
    1881                    
    1882 0000d390     09e0          movi    whrkXRUN_VAL,a0
         0000d3a0 00064000  
    1883 0000d3c0     b5ae          move    *a13(MOVE_DIR),a14
         0000d3d0     04b0  
    1884 0000d3e0     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1885 0000d3f0     cb01          jrnz    whrkpos
    1886 0000d400     03a0          neg     a0
    1887 0000d410           whrkpos
    1888 0000d410     05ae          move    @hyper_speed_on,a14
         0000d420 00000000! 
    1889 0000d440     63c0          sll     a14,a0
    1890 0000d450     b20d          move    a0,*a13(OBJ_XVEL),L
         0000d460     02d0  
    1891                    
    1892 0000d470           whrkno_vel
    1893                    
    1894 0000d470     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         0000d480     0460  
    1895 0000d490     cb38          jrnz    whrkout_of_control
    1896                    
    1897 0000d4a0     b5a0          move    *a13(ANIMODE),a0
         0000d4b0     0660  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1898 0000d4c0     1fa0          btst    MODE_UNINT_BIT,a0
    1899 0000d4d0     cb16          jrnz    whrkno_interrupt
    1900                    
    1901 0000d4e0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d4f0     0bc0  
    1902 0000d500     b5a1          move    *a13(MOVE_DIR),a1
         0000d510     04b0  
    1903 0000d520     5401          or      a0,a1
    1904 0000d530     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         0000d540 fffffff3  
    1905 0000d560     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         0000d570     fff3  
    1906 0000d580     cb0b          jrne    whrkcontinue_run
    1907                    
    1908                            ;braking with stick.  abort run.
    1909                    
    1910 0000d590                   SETMODE NORMAL
    1911                    
    1912 0000d640           whrkcontinue_run
    1913 0000d640           whrkno_interrupt
    1914                    
    1915 0000d640     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d650     0bc0  
    1916 0000d660     5621          clr     a1
    1917                    
    1918 0000d670     09e1          movi    -whrkZDRIFT_VAL,a1
         0000d680 fffe0000  
    1919 0000d6a0     1fe0          btst    PLAYER_UP_BIT,a0
    1920 0000d6b0     cb06          jrnz    whrksetvel
    1921                    
    1922 0000d6c0     09e1          movi    whrkZDRIFT_VAL,a1
         0000d6d0 00020000  
    1923 0000d6f0     1fc0          btst    PLAYER_DOWN_BIT,a0
    1924 0000d700     cb01          jrnz    whrksetvel
    1925                    
    1926 0000d710     5621          clr     a1
    1927 0000d720           whrksetvel
    1928 0000d720     b22d          move    a1,*a13(OBJ_ZVEL),L
         0000d730     0310  
    1929                    
    1930                    ;Delay reading buttons after just getting out of an out of control run
    1931                    ;so a mistaken move isn't fired off
    1932 0000d740     b5a0          move    *a13(DELAY_BUTNS),a0
         0000d750     0ab0  
    1933 0000d760     cb0b          jrnz    whrkout_of_control
    1934                    
    1935                    
    1936 0000d770     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000d780     0ba0  
    1937 0000d790     0b80          andi    011111b,a0
         0000d7a0 ffffffe0  
    1938 0000d7c0                   X32     a0
    1939 0000d7d0     0b20          addi    whrkaction_table,a0
         0000d7e0 0000d830' 
    1940 0000d800     8600          move    *a0,a0,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

    1941 0000d810     0920          call    a0
    1942 0000d820           whrkout_of_control
    1943 0000d820     0960          rets
    1944                    
    1945 0000d830           whrkaction_table
    1946 0000d830 0000dc30'         .long   whrkz,whrkpunch,whrkblock,whrkblock                     ;0-3
    1947 0000d8b0 0000dc40'         .long   whrksuper_punch,whrksuper_punch,whrkblock,whrkblock     ;4-7
    1948 0000d930 0000ed60'         .long   whrkkick,whrkpunchkick,whrkblock,whrkblock              ;8-11
    1949 0000d9b0 0000dc40'         .long   whrksuper_punch,whrkpunchkick,whrkblock,whrkblock       ;12-15
    1950 0000da30 0000ed60'         .long   whrksuper_kick,whrksuper_kick,whrkblock,whrkblock       ;16-19
    1951 0000dab0 0000dc40'         .long   whrkgraboh,whrkgraboh,whrkblock,whrkblock               ;20-23
    1952 0000db30 0000ed60'         .long   whrksuper_kick,whrkpunchkick,whrkblock,whrkblock        ;24-27
    1953 0000dbb0 0000dc40'         .long   whrkgraboh,whrkgraboh,whrkblock,whrkblock               ;28-31
    1954                    
    1955                    ************
    1956 0000dc30           whrkz
    1957 0000dc30     0960          rets
    1958                    
    1959                    
    1960                    ************
    1961 0000dc40           whrkpunch               ;1
    1962 0000dc40           whrksuper_punch ;4
    1963 0000dc40           whrkpunchkick
    1964 0000dc40           whrkgraboh
    1965                    *
    1966                    * MODE             DX  DZ       ACTION
    1967                    * ----------------------------------------------------
    1968                    * normal                        flying clothesline
    1969                    * dizzy                                 "
    1970                    *
    1971                    * onground      < 176 176       belly flop
    1972                    * onground      >               nothing
    1973                    *
    1974                    * running                       flying clothesline
    1975                    * bouncing                      flying clothesline
    1976                    *
    1977                    * onturnbkl                     flying clothesline
    1978                    * climbturnbkl                  flying clothesline
    1979                    *
    1980 0000dc40                   JJXM_INIT
    1981 0000dcb0                   JJXM    NORMAL,                 whrkpunch_clothesline
    1982 0000dcf0                   JJXM    DIZZY,                  whrkpunch_clothesline
    1983 0000dd30                   JJXM    BLOCK,                  whrkpunch_clothesline
    1984 0000dd70                   JJXM    ONGROUND,       176,176,whrkpunch_bellyflop,whrkpunch_rets
    1985 0000de20                   JJXM    RUNNING,                whrkpunch_clothesline
    1986 0000de60                   JJXM    BOUNCING,               whrkpunch_clothesline
    1987 0000dea0                   JJXM    ONTURNBKL,              whrkpunch_clothesline
    1988 0000dee0                   JJXM    CLIMBTURNBKL,           whrkpunch_clothesline
    1989 0000df20                   JJXM    INAIR,                  whrkpunch_clothesline
    1990 0000df60                   JJXM    ATTACHED,               whrkpunch_clothesline
    1991 0000dfa0                   JJXM    DEAD,           176,176,whrkpunch_bellyflop,whrkpunch_rets
    1992 0000e050                   JJXM    OPPOVERHEAD,            whrkpunch_clothesline
    1993 0000e090                   JJXM    WAITANIM,               whrkpunch_clothesline
    1994 0000e0d0                   JJXM    GRAPPLE,                whrkpunch_clothesline
    1995 0000e110                   JJXM    MASTER,                 whrkpunch_clothesline
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1996 0000e150                   JJXM    SLAVE,                  whrkpunch_clothesline
    1997 0000e190                   JJXM    HEADHOLD,               whrkpunch_clothesline
    1998 0000e1d0                   JJXM    HEADHELD,               whrkpunch_clothesline
    1999 0000e210                   JJXM    CHOKEHOLD,              whrkpunch_clothesline
    2000 0000e250                   JJXM    PUPPET,                 whrkpunch_clothesline
    2001 0000e290                   JJXM    PUPPET2,                whrkpunch_clothesline
    2002 0000e2d0                   JJXM    INAIR2,                 whrkpunch_clothesline
    2003 0000e310                   JJXM_END
    2004                    
    2005                    
    2006 0000e330           whrkpunch_rets
    2007 0000e330     0960          rets
    2008                    
    2009                    *****
    2010 0000e340           whrkpunch_clothesline
    2011                    ;Only allow clothesline if near center of ring, and running toward opponent
    2012 0000e340     b5a1          move    *a13(MOVE_DIR),a1
         0000e350     04b0  
    2013 0000e360     1fa1          btst    MOVE_LEFT_BIT,a1
    2014 0000e370     cb06          jrnz    whrklft
    2015                    ;Moving right
    2016                            
    2017 0000e380     b5a0          move    *a13(OBJ_XPOSINT),a0
         0000e390     0110  
    2018 0000e3a0     0b40          cmpi    RING_X_MID+70h,a0
         0000e3b0     fb8f  
    2019 0000e3c0     c407          jrlt    whrkok
    2020                    
    2021                    ;       LOCKUP
    2022                    
    2023 0000e3d0     0960          rets
    2024                    
    2025 0000e3e0           whrklft
    2026                    ;Moving left
    2027                            
    2028 0000e3e0     b5a0          move    *a13(OBJ_XPOSINT),a0
         0000e3f0     0110  
    2029 0000e400     0b40          cmpi    RING_X_MID-70h,a0
         0000e410     fc6f  
    2030 0000e420     c701          jrgt    whrkok
    2031                    
    2032                    ;       LOCKUP
    2033                    
    2034 0000e430     0960          rets
    2035 0000e440           whrkok
    2036 0000e440     b5a1          move    *a13(MOVE_DIR),a1
         0000e450     04b0  
    2037 0000e460     b5a0          move    *a13(NEW_FACING_DIR),a0 ;Current facing dir (9,10,6,5 only)
         0000e470     04d0  
    2038 0000e480     24a0          sll     5,a0
    2039 0000e490     0b20          addi    whrkmv_tbl,a0
         0000e4a0 0000e7f0' 
    2040 0000e4c0     8600          move    *a0,a0,L
    2041 0000e4d0     4a01          btst    a0,a1
    2042 0000e4e0     ca01          jrz     whrkyes
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

    2043                    
    2044                    ;       LOCKUP
    2045                    
    2046 0000e4f0     0960          rets
    2047 0000e500           whrkyes
    2048                    
    2049                    ;Will lunge toward opponent
    2050                    ;Is facing opponent - nt running away from him!
    2051 0000e500     09e0          movi    bam_fly_cline_anim,a0
         0000e510 00000000! 
    2052 0000e530     0d5f          calla   change_anim1a
         0000e540 00000000! 
    2053                    
    2054 0000e560                   SETMODE INAIR
    2055                    
    2056 0000e610     5600          clr     a0
    2057 0000e620     b00d          move    a0,*a13(RUN_TIME)
         0000e630     07b0  
    2058                    
    2059 0000e640                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    2060                    
    2061 0000e7e0     0960          rets
    2062                    
    2063 0000e7f0 00000000  whrkmv_tbl      .long   0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
    2064 0000e8d0 00000000          .long   0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT
    2065                    
    2066                    
    2067                    *****
    2068 0000e950           whrkpunch_bellyflop
    2069 0000e950           attack_bellyflop
    2070                    
    2071 0000e950                   SETMODE INAIR
    2072                    
    2073 0000ea00     5600          clr     a0
    2074 0000ea10     b00d          move    a0,*a13(RUN_TIME)
         0000ea20     07b0  
    2075                    
    2076 0000ea30     09e0          movi    bam_3_butt_drop_anim,a0
         0000ea40 00000000! 
    2077 0000ea60     0d5f          calla   change_anim1a
         0000ea70 00000000! 
    2078 0000ea90                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    2079 0000ec30     0960          rets
    2080                    
    2081                    ************
    2082 0000ec40           whrkblock               ;2
    2083 0000ec40     b7a0          move    *a13(OBJ_XVEL),a0,L
         0000ec50     02d0  
    2084 0000ec60     2be0          sra     1,a0
    2085 0000ec70     b20d          move    a0,*a13(OBJ_XVEL),L
         0000ec80     02d0  
    2086 0000ec90                   SETMODE NORMAL
    2087 0000ed40     c000          jruc    std_block
         0000ed50     f9a3  
    2088                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    2089                    ************
    2090 0000ed60           whrkkick                ;8
    2091 0000ed60           whrksuper_kick  ;16
    2092                    *
    2093                    * MODE             DX  DZ       ACTION
    2094                    * ----------------------------------------------------
    2095                    * normal                        flying kick
    2096                    * dizzy                                 "
    2097                    *
    2098                    * onground      < 176 176       running stomp
    2099                    * onground      >               nothing
    2100                    *
    2101                    * running                       flying kick
    2102                    * bouncing                      flying kick
    2103                    *
    2104                    * onturnbkl                     flying kick
    2105                    * climbturnbkl                  flying kick
    2106                    *
    2107 0000ed60                   JJXM_INIT
    2108 0000edd0                   JJXM    NORMAL,                 whrkkick_flyingkick
    2109 0000ee10                   JJXM    DIZZY,                  whrkkick_flyingkick
    2110 0000ee50                   JJXM    BLOCK,                  whrkkick_flyingkick
    2111 0000ee90                   JJXM    ONGROUND,       176,176,attack_bellyflop,whrkkick_rets
    2112 0000ef30                   JJXM    RUNNING,                whrkkick_flyingkick
    2113 0000ef70                   JJXM    BOUNCING,               whrkkick_flyingkick
    2114 0000efb0                   JJXM    ONTURNBKL,              whrkkick_flyingkick
    2115 0000eff0                   JJXM    CLIMBTURNBKL,           whrkkick_flyingkick
    2116 0000f030                   JJXM    INAIR,                  whrkkick_flyingkick
    2117 0000f070                   JJXM    ATTACHED,               whrkkick_flyingkick
    2118 0000f0b0                   JJXM    DEAD,           176,176,attack_bellyflop,whrkkick_rets
    2119 0000f160                   JJXM    OPPOVERHEAD,            whrkkick_flyingkick
    2120 0000f1a0                   JJXM    WAITANIM,               whrkkick_flyingkick
    2121 0000f1e0                   JJXM    GRAPPLE,                whrkkick_flyingkick
    2122 0000f220                   JJXM    MASTER,                 whrkkick_flyingkick
    2123 0000f260                   JJXM    SLAVE,                  whrkkick_flyingkick
    2124 0000f2a0                   JJXM    HEADHOLD,               whrkkick_flyingkick
    2125 0000f2e0                   JJXM    HEADHELD,               whrkkick_flyingkick
    2126 0000f320                   JJXM    CHOKEHOLD,              whrkkick_flyingkick
    2127 0000f360                   JJXM    PUPPET,                 whrkkick_flyingkick
    2128 0000f3a0                   JJXM    PUPPET2,                whrkkick_flyingkick
    2129 0000f3e0                   JJXM    INAIR2,                 whrkkick_flyingkick
    2130 0000f420                   JJXM_END
    2131                    
    2132                    
    2133 0000f440           whrkkick_rets
    2134 0000f440     0960          rets
    2135                    
    2136                    *****
    2137 0000f450           whrkkick_flyingkick
    2138                    
    2139 0000f450     0d5f          calla   ck_ignore
         0000f460 00000000! 
    2140 0000f480     c800          jrc     whrkz
         0000f490     fe79  
    2141                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2142 0000f4a0     09e0          movi    bam_flying_kick_anim,a0
         0000f4b0 00000000! 
    2143 0000f4d0     0d5f          calla   change_anim1a
         0000f4e0 00000000! 
    2144                    
    2145 0000f500                   SETMODE INAIR
    2146                    
    2147 0000f5b0                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    2148                    
    2149 0000f750     0960          rets
    2150                    
    2151                    ;*****
    2152                    ;whrkkick_runstomp
    2153                    ;
    2154                    ;       rets
    2155                    
    2156                    *****************************************************************************
    2157                    *
    2158                    
    2159 0000f760           mode_inair      ;2
    2160                    
    2161 0000f760     0960          rets
    2162                    
    2163                    *****************************************************************************
    2164                    *
    2165                    
    2166 0000f770           mode_attached   ;3
    2167                    
    2168 0000f770     0d5f          calla   keep_attached
         0000f780 00000000! 
    2169 0000f7a0     cb12          jrnz    equhstill_attached
    2170                    
    2171 0000f7b0     5600          clr     a0
    2172 0000f7c0     b20d          move    a0,*a13(ATTACH_PROC),L
         0000f7d0     03e0  
    2173                    
    2174 0000f7e0                   SETMODE NORMAL
    2175                    
    2176 0000f890     09c0          movi    MODE_NORMAL,a0
         0000f8a0     0000  
    2177 0000f8b0     b00d          move    a0,*a13(ANIMODE)
         0000f8c0     0660  
    2178                    
    2179 0000f8d0           equhstill_attached
    2180 0000f8d0     0960          rets
    2181                    
    2182                    
    2183                    *****************************************************************************
    2184                    *
    2185                    
    2186 0000f8e0           mode_onground   ;4
    2187                    
    2188 0000f8e0     0960          rets
    2189                    
    2190                    *****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2191                    *
    2192                    * bouncing off ropes while running
    2193                    
    2194 0000f8f0           mode_bouncing   ;5
    2195                    
    2196 0000f8f0     5600          clr     a0
    2197 0000f900     b20d          move    a0,*a13(OBJ_XVEL),L
         0000f910     02d0  
    2198 0000f920     b20d          move    a0,*a13(OBJ_ZVEL),L
         0000f930     0310  
    2199                    
    2200 0000f940     b5a0          move    *a13(ANIMODE),a0
         0000f950     0660  
    2201 0000f960     1fe0          btst    MODE_END_BIT,a0
    2202 0000f970     ca20          jrz     vbnmnot_ended
    2203                    
    2204 0000f980     b5a0          move    *a13(MOVE_DIR),a0
         0000f990     04b0  
    2205 0000f9a0     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         0000f9b0 0000000c  
    2206 0000f9d0     b00d          move    a0,*a13(MOVE_DIR)
         0000f9e0     04b0  
    2207                    
    2208 0000f9f0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000fa00     04d0  
    2209 0000fa10     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         0000fa20 fffffffc  
    2210 0000fa40     5401          or      a0,a1                   ;LEFT or RIGHT
    2211 0000fa50     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         0000fa60     04c0  
    2212                    
    2213 0000fa70     09e0          movi    bam_run2_anim,a0
         0000fa80 00000000! 
    2214 0000faa0     0d5f          calla   change_anim1a
         0000fab0 00000000! 
    2215                    
    2216 0000fad0                   SETMODE RUNNING
    2217                    
    2218                    ;       clr     a0
    2219                    ;       move    a0,*a13(GETUP_TIME)     ;in control
    2220                    
    2221 0000fb80           vbnmnot_ended
    2222 0000fb80     0960          rets
    2223                    
    2224                    
    2225                    *****************************************************************************
    2226                    *
    2227                    * STANDING ON TOP OF TURNBUCKLE
    2228                    
    2229 0000fb90           mode_onturnbkl  ;6
    2230                    
    2231                    ;       ;check unint
    2232                    ;       move    *a13(ANIMODE),a14
    2233                    ;       btst    MODE_UNINT_BIT,a14
    2234                    ;       jrnz    oipfno_interrupt
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2235                    
    2236 0000fb90     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000fba0     0bc0  
    2237 0000fbb0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2238 0000fbc0     ca12          jrz     oipfno_climbdown
    2239                    
    2240 0000fbd0     09e0          movi    bam_climb_down_anim,a0
         0000fbe0 00000000! 
    2241 0000fc00     0d5f          calla   change_anim1a
         0000fc10 00000000! 
    2242                    
    2243 0000fc30                   SETMODE CLIMBTURNBKL
    2244                    
    2245 0000fce0           oipfno_interrupt
    2246 0000fce0     0960          rets
    2247                    
    2248 0000fcf0           oipfno_climbdown
    2249 0000fcf0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000fd00     0ba0  
    2250 0000fd10     0b80          andi    011111b,a0
         0000fd20 ffffffe0  
    2251 0000fd40     ca51          jrz     oipfz
    2252                    
    2253 0000fd50                   X32     a0
    2254 0000fd60     0b20          addi    oipfaction_table,a0
         0000fd70 0000fe60' 
    2255 0000fd90     8600          move    *a0,a0,L
    2256 0000fda0     0920          call    a0
    2257                    
    2258 0000fdb0     b5a5          move    *a13(PLYRNUM),a5
         0000fdc0     0580  
    2259 0000fdd0     09e2          movi    JUMP_ROPES,a2
         0000fde0 00000000! 
    2260 0000fe00     09c0          movi    1000,a0
         0000fe10     03e8  
    2261 0000fe20     0d5f          calla   ADD_IF_SILENT
         0000fe30 00000000! 
    2262                    
    2263 0000fe50     0960          rets
    2264                    
    2265                    
    2266                    ;For standing on top of turnbuckles
    2267                    
    2268 0000fe60           oipfaction_table
    2269 0000fe60 00010260'         .long   oipfz,oipfpunch,oipfblock,oipfblock                     ;0-3
    2270 0000fee0 00010270'         .long   oipfsuper_punch,oipfsuper_punch,oipfblock,oipfblock     ;4-7
    2271 0000ff60 00010270'         .long   oipfkick,oipfpunchkick,oipfblock,oipfblock              ;8-11
    2272 0000ffe0 00010270'         .long   oipfsuper_punch,oipfpunchkick,oipfblock,oipfblock       ;12-15
    2273 00010060 00010270'         .long   oipfsuper_kick,oipfsuper_kick,oipfblock,oipfblock       ;16-19
    2274 000100e0 00010270'         .long   oipfgraboh,oipfgraboh,oipfblock,oipfblock               ;20-23
    2275 00010160 00010270'         .long   oipfsuper_kick,oipfpunchkick,oipfblock,oipfblock        ;24-27
    2276 000101e0 00010270'         .long   oipfgraboh,oipfgraboh,oipfblock,oipfblock               ;28-31
    2277                    
    2278                    ************
    2279 00010260           oipfz
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2280 00010260     0960          rets
    2281                    
    2282                    ************
    2283 00010270           oipfpunch               ;1
    2284 00010270           oipfblock               ;2
    2285 00010270           oipfsuper_punch ;4
    2286 00010270           oipfkick                ;8
    2287 00010270           oipfsuper_kick  ;16
    2288 00010270           oipfgraboh
    2289 00010270           oipfpunchkick
    2290                    
    2291 00010270                   SETMODE INAIR
    2292                    
    2293 00010320     09e0          movi    bam_bellyflop_anim,a0
         00010330 00000000! 
    2294 00010350     0d5f          calla   change_anim1a
         00010360 00000000! 
    2295                    
    2296 00010380                   WRSND   W_BAMBAM,TURNDIVE_T1,TURNDIVE_T2
    2297                    
    2298 00010520     0960          rets
    2299                    
    2300                    *****************************************************************************
    2301                    * blocking
    2302                    
    2303 00010530           mode_block      ;7
    2304                    
    2305 00010530     b5a0          move    *a13(BLOCK_TIME),a0
         00010540     0d30  
    2306 00010550     1020          inc     a0
    2307 00010560     b00d          move    a0,*a13(BLOCK_TIME)
         00010570     0d30  
    2308 00010580     0b40          cmpi    160,a0
         00010590     ff5f  
    2309 000105a0     c413          jrlt    cimcno
    2310                    
    2311 000105b0     0d5f          calla   get_opp_plyrmode
         000105c0 00000000! 
    2312 000105e0     0b40          cmpi    MODE_BLOCK,a0
         000105f0     fff8  
    2313 00010600     cb0d          jrnz    cimcno
    2314 00010610     b5a0          move    *a13(CLOSEST_XDIST),a0
         00010620     0370  
    2315 00010630     0b40          cmpi    61h,a0
         00010640     ff9e  
    2316 00010650     c508          jrge    cimcno
    2317 00010660     0b40          cmpi    45,a0
         00010670     ffd2  
    2318 00010680     c405          jrlt    cimcno
    2319 00010690     b5a0          move    *a13(CLOSEST_ZDIST),a0
         000106a0     0390  
    2320 000106b0     0b40          cmpi    30,a0
         000106c0     ffe1  
    2321 000106d0     c461          jrlt    cimcpunchblock
    2322                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2323 000106e0           cimcno
    2324 000106e0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000106f0     0ba0  
    2325 00010700     0b80          andi    011111b,a0
         00010710 ffffffe0  
    2326 00010730     ca0c          jrz     cimcno_interrupt
    2327                    
    2328                            ;press.  if block isn't down, let mode_normal handle it
    2329 00010740     4c02          move    a0,a2                   ;save a0 from ...val_down
    2330 00010750     b5a0          move    *a13(BUT_VAL_CUR),a0
         00010760     0b90  
    2331 00010770     1fc0          btst    PLAYER_BLOCK_BIT,a0
    2332 00010780     ca08          jrz     cimcset_mode_normal
    2333 00010790     4c40          move    a2,a0                   ;restore a0 from ...val_down
    2334                    
    2335 000107a0                   X32     a0
    2336 000107b0     0b20          addi    cimcaction_table,a0
         000107c0 000108e0' 
    2337 000107e0     8600          move    *a0,a0,L
    2338 000107f0     0920          call    a0
    2339                    
    2340 00010800           cimcno_interrupt
    2341 00010800     0960          rets
    2342                    
    2343 00010810           cimcset_mode_normal
    2344 00010810                   SETMODE NORMAL
    2345 000108c0     c000          jruc    mode_normal
         000108d0     f584  
    2346                    
    2347 000108e0           cimcaction_table
    2348 000108e0 00010ce0'         .long   cimcz,cimcpunchblock,cimcz      ;0-2
    2349 00010940 00010cf0'         .long   cimcpunchblock          ;3
    2350 00010960 00010ce0'         .long   cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz       ;4-10
    2351 00010a40 00010ce0'         .long   cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz       ;11-17
    2352 00010b20 00010ce0'         .long   cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz       ;18-24
    2353 00010c00 00010ce0'         .long   cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz       ;25-31
    2354                    
    2355                    ************
    2356 00010ce0           cimcz
    2357 00010ce0     0960          rets
    2358                    
    2359                    ************
    2360 00010cf0           cimcpunchblock  ;3
    2361                    *
    2362                    * MODE             DX  DZ       ACTION
    2363                    * ----------------------------------------------------
    2364                    * all                           push
    2365                    *
    2366                    
    2367                    ;This push has no collisions set!
    2368                    
    2369 00010cf0                   SETMODE NORMAL
    2370                    
    2371 00010da0     09e0          movi    bam_4_push_anim,a0
         00010db0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2372 00010dd0     0d5f          calla   change_anim1a
         00010de0 00000000! 
    2373                    
    2374 00010e00                   WRSND   W_BAMBAM,PUSH_T1,PUSH_T2
    2375                    
    2376 00010fa0     0960          rets
    2377                    
    2378                    *****************************************************************************
    2379                    * doink with zero health
    2380                    
    2381 00010fb0           mode_dizzy      ;8
    2382                    
    2383                    ;       move    *a13(GETUP_TIME),a0
    2384                    ;       jrnz    cardstill_going
    2385                    ;
    2386                    ;       calla   clear_damage_log
    2387                    ;
    2388                    ;       clr     a0
    2389                    ;       move    a0,*a13(STARS_FLAG)
    2390                    ;
    2391                    ;       SETMODE NORMAL
    2392                    ;
    2393                    ;cardstill_going
    2394 00010fb0     0960          rets
    2395                    
    2396                    
    2397                    
    2398                    
    2399                    *****************************************************************************
    2400                    * opponent held overhead
    2401                    
    2402 00010fc0           mode_oppoverhead ;10
    2403                    
    2404 00010fc0     b7a2          move    *a13(ATTACH_PROC),a2,L          ;proc attached to
         00010fd0     03e0  
    2405 00010fe0     ca03          jrz     motnnot_attached
    2406 00010ff0     b640          move    *a2(ATTACH_PROC),a0,L
         00011000     03e0  
    2407 00011010     cb1a          jrnz    motnstill_attached
    2408                    
    2409 00011020           motnnot_attached
    2410                    
    2411 00011020     b5a0          move    *a13(ANIMODE),a0                ;* remove this????
         00011030     0660  
    2412 00011040     1fa0          btst    MODE_UNINT_BIT,a0               ;*
    2413 00011050     cb4d          jrnz    motnno_interrupt                        ;*
    2414                    
    2415 00011060     5600          clr     a0
    2416 00011070     b20d          move    a0,*a13(ATTACH_PROC),L
         00011080     03e0  
    2417                    
    2418 00011090     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000110a0 00000000! 
    2419 000110c0                   SETMODE NORMAL
    2420                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   52

    2421 00011170     09c0          movi    MODE_NORMAL,a0
         00011180     0000  
    2422 00011190     b00d          move    a0,*a13(ANIMODE)
         000111a0     0660  
    2423                    
    2424 000111b0     0960          rets
    2425                    
    2426 000111c0           motnstill_attached
    2427 000111c0     b5a0          move    *a13(ANIMODE),a0
         000111d0     0660  
    2428 000111e0     1fa0          btst    MODE_UNINT_BIT,a0
    2429 000111f0     cb33          jrnz    motnno_interrupt
    2430                    
    2431 00011200     b5a0          move    *a13(FACING_DIR),a0
         00011210     04c0  
    2432 00011220     0b80          andni   MOVE_UP,a0
         00011230 00000001  
    2433 00011250     0ba0          ori     MOVE_DOWN,a0
         00011260 00000002  
    2434 00011280     b00d          move    a0,*a13(FACING_DIR)
         00011290     04c0  
    2435 000112a0     b00d          move    a0,*a13(NEW_FACING_DIR)
         000112b0     04d0  
    2436                    
    2437 000112c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000112d0     0bc0  
    2438 000112e0     ca0c          jrz     motnstand
    2439                    
    2440 000112f0     b00d          move    a0,*a13(MOVE_DIR)
         00011300     04b0  
    2441 00011310     0d5f          calla   execute_walk
         00011320 00000000! 
    2442                    
    2443 00011340     09e0          movi    bam_holdoh_anim,a0
         00011350 00000000! 
    2444 00011370     0d5f          calla   change_anim2
         00011380 00000000! 
    2445 000113a0     c00d          jruc    motnck_butns
    2446 000113b0           motnstand
    2447 000113b0     5600          clr     a0
    2448 000113c0     b00d          move    a0,*a13(MOVE_DIR)
         000113d0     04b0  
    2449 000113e0     b20d          move    a0,*a13(OBJ_XVEL),L
         000113f0     02d0  
    2450 00011400     b20d          move    a0,*a13(OBJ_ZVEL),L
         00011410     0310  
    2451                    
    2452 00011420     09e0          movi    bam_stndholdoh_anim,a0
         00011430 00000000! 
    2453 00011450     0d5f          calla   change_anim1
         00011460 00000000! 
    2454                    
    2455 00011480           motnck_butns
    2456                    
    2457 00011480     b5a0          move    *a13(BUT_VAL_DOWN),a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   53

         00011490     0ba0  
    2458 000114a0     0b80          andi    011111b,a0
         000114b0 ffffffe0  
    2459 000114d0                   X32     a0
    2460 000114e0     0b20          addi    motnaction_table,a0
         000114f0 00011540' 
    2461 00011510     8600          move    *a0,a0,L
    2462 00011520     0920          call    a0
    2463                    
    2464 00011530           motnno_interrupt
    2465 00011530     0960          rets
    2466                    
    2467 00011540           motnaction_table
    2468 00011540 00011940'         .long   motnz,motnpunch,motnblock,motnblock                     ;0-3
    2469 000115c0 00011950'         .long   motnsuper_punch,motnsuper_punch,motnblock,motnblock     ;4-7
    2470 00011640 00011950'         .long   motnkick,motnpunchkick,motnblock,motnblock              ;8-11
    2471 000116c0 00011950'         .long   motnsuper_punch,motnpunchkick,motnblock,motnblock       ;12-15
    2472 00011740 00011b90'         .long   motnsuper_kick,motnsuper_kick,motnblock,motnblock       ;16-19
    2473 000117c0 00011b90'         .long   motngraboh,motngraboh,motnblock,motnblock               ;20-23
    2474 00011840 00011b90'         .long   motnsuper_kick,motnpunchkick,motnblock,motnblock        ;24-27
    2475 000118c0 00011b90'         .long   motngraboh,motngraboh,motnblock,motnblock               ;28-31
    2476                    
    2477                    ************
    2478 00011940           motnz
    2479 00011940     0960          rets
    2480                    
    2481                    ************
    2482 00011950           motnpunch               ;1
    2483 00011950           motnblock               ;2
    2484 00011950           motnsuper_punch ;4
    2485 00011950           motnkick                ;8
    2486 00011950           motnpunchkick   ;9
    2487                    
    2488                    ;       move    *a13(STICK_VAL_CUR),a0
    2489                    ;       btst    PLAYER_DOWN_BIT,a0
    2490                    ;       jrz     motnz
    2491                    
    2492 00011950     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011960 00000000! 
    2493 00011980     09e0          movi    bam_slamdwn_anim,a0
         00011990 00000000! 
    2494 000119b0     0d5f          calla   change_anim1a
         000119c0 00000000! 
    2495                    
    2496 000119e0                   WRSND   W_BAMBAM,PUNCH_T1,PUNCH_T2
    2497                    
    2498 00011b80     0960          rets
    2499                    
    2500 00011b90           motnsuper_kick  ;16
    2501 00011b90           motngraboh              ;20
    2502                    
    2503 00011b90     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011ba0     0bc0  
    2504 00011bb0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2505 00011bc0     cad8          jrz     motnkick
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   54

    2506                    
    2507 00011bd0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011be0 00000000! 
    2508 00011c00     09e0          movi    bam_backbreaker_anim,a0
         00011c10 00000000! 
    2509 00011c30     0d5f          calla   change_anim1a
         00011c40 00000000! 
    2510                    
    2511 00011c60                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
    2512                    
    2513 00011e00     0960          rets
    2514                    
    2515                    *****************************************************************************
    2516                    *
    2517                    * CLIMBING UP OR DOWN THE TURNBUCKLE
    2518                    
    2519 00011e10           mode_climbturnbkl       ;11
    2520                    
    2521 00011e10     0960          rets
    2522                    
    2523                    *****************************************************************************
    2524                    
    2525 00011e20           mode_waitanim   ;12
    2526                    
    2527 00011e20     b5a0          move    *a13(ANIMODE),a0
         00011e30     0660  
    2528 00011e40     1fe0          btst    MODE_END_BIT,a0
    2529 00011e50     ca03          jrz     dlgjnot_ended
    2530                    
    2531 00011e60     b7a0          move    *a13(CODE_ADDR),a0,L
         00011e70     0430  
    2532 00011e80     0920          call    a0
    2533                    
    2534 00011e90           dlgjnot_ended
    2535 00011e90     0960          rets
    2536                    
    2537                    
    2538                    *****************************************************************************
    2539                    
    2540 00011ea0           mode_grapple    ;13
    2541                    
    2542 00011ea0     0960          rets
    2543                    ;
    2544                    ;       move    *a13(GETUP_TIME),a0
    2545                    ;       jrnz    reovstill_going
    2546                    ;
    2547                    ;;now get move off
    2548                    ;;if opponents meter almost zero then break apart
    2549                    ;
    2550                    ;       calla   break_lockup
    2551                    ;       rets
    2552                    ;
    2553                    ;
    2554                    ;reovstill_going
    2555                    ;       calla   lineup_grapple
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   55

    2556                    ;       rets
    2557                    
    2558                    
    2559                    *****************************************************************************
    2560                    
    2561 00011eb0           mode_master     ;14
    2562                    
    2563 00011eb0     0d5f          calla   master_keep_attached    ;keep slave attached to me
         00011ec0 00000000! 
    2564                    
    2565 00011ee0     0960          rets
    2566                    
    2567                    *****************************************************************************
    2568                    
    2569 00011ef0           mode_slave      ;15
    2570 00011ef0     0960          rets
    2571                    
    2572                    *****************************************************************************
    2573                    
    2574 00011f00           mode_headhold   ;16
    2575                    
    2576                    ;Bozo power move
    2577                            .ref    bozo_check
    2578 00011f00     0d5f          calla   bozo_check
         00011f10 00000000! 
    2579 00011f30     c929          jrnc    rkvdfail
    2580                    
    2581 00011f40                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2582                    
    2583 000120e0     09e0          movi    bam_pogo_anim,a0
         000120f0 00000000! 
    2584 00012110     05ae          move    @PCNT,a14
         00012120 00000000! 
    2585 00012140     1fee          btst    0,a14
    2586 00012150     ca03          jrz     rkvdtag
    2587 00012160     09e0          movi    bam_neckbreaker_anim,a0
         00012170 00000000! 
    2588 00012190     0d5f  rkvdtag calla   change_anim1a
         000121a0 00000000! 
    2589                    
    2590 000121c0     0960          rets
    2591                    
    2592 000121d0           rkvdfail
    2593 000121d0     b7a0          move    *a13(WHOIHIT),a0,L
         000121e0     0500  
    2594 000121f0     b400          move    *a0(PLYRMODE),a0
         00012200     05c0  
    2595 00012210     0b40          cmpi    MODE_HEADHELD,a0
         00012220     ffec  
    2596 00012230     cb10          jrnz    rkvdexit
    2597                    
    2598                    ;       move    *a13(ATTACH_PROC),a10,L
    2599                    ;       jrz     rkvdexit
    2600                    
    2601 00012240     b5a0          move    *a13(ANIMODE),a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   56

         00012250     0660  
    2602 00012260     1fa0          btst    MODE_UNINT_BIT,a0
    2603 00012270     cb0b          jrnz    rkvdno_interrupt
    2604                    
    2605 00012280     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00012290     0ba0  
    2606 000122a0     0b80          andi    011111b,a0
         000122b0 ffffffe0  
    2607 000122d0                   X32     a0
    2608 000122e0     0b20          addi    rkvdaction_table,a0
         000122f0 00012510' 
    2609 00012310     8600          move    *a0,a0,L
    2610 00012320     0920          call    a0
    2611                    
    2612 00012330           rkvdno_interrupt
    2613 00012330     0960          rets
    2614                    
    2615 00012340           rkvdexit
    2616 00012340     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00012350     0140  
    2617 00012360     0d0e          subi    [6,0],a14
         00012370 fff9ffff  
    2618 00012390     b3cd          move    a14,*a13(OBJ_ZPOS),L
         000123a0     0140  
    2619                    
    2620 000123b0     1941          movk    MOVE_DOWN_RIGHT,a1
    2621 000123c0     b5a0          move    *a13(OBJ_CONTROL),a0
         000123d0     0780  
    2622 000123e0     1f60          btst    B_FLIPH,a0
    2623 000123f0     ca01          jrz     rkvdright
    2624 00012400     18c1          movk    MOVE_DOWN_LEFT,a1
    2625 00012410     b02d  rkvdright       move    a1,*a13(FACING_DIR)
         00012420     04c0  
    2626 00012430     b02d          move    a1,*a13(NEW_FACING_DIR)
         00012440     04d0  
    2627                    
    2628 00012450                   SETMODE NORMAL
    2629                    
    2630 00012500     0960          rets
    2631                    
    2632 00012510           rkvdaction_table
    2633 00012510 00012910'         .long   rkvdz,rkvdpunch,rkvdblock,rkvdblock                     ;0-3
    2634 00012590 00012b60'         .long   rkvdsuper_punch,rkvdsuper_punch,rkvdblock,rkvdblock     ;4-7
    2635 00012610 00012e20'         .long   rkvdkick,rkvdpunchkick,rkvdblock,rkvdblock              ;8-11
    2636 00012690 00012b60'         .long   rkvdsuper_punch,rkvdpunchkick,rkvdblock,rkvdblock       ;12-15
    2637 00012710 00013060'         .long   rkvdsuper_kick,rkvdsuper_kick,rkvdblock,rkvdblock       ;16-19
    2638 00012790 00012910'         .long   rkvdgraboh,rkvdgraboh,rkvdblock,rkvdblock               ;20-23
    2639 00012810 00013060'         .long   rkvdsuper_kick,rkvdpunchkick,rkvdblock,rkvdblock        ;24-27
    2640 00012890 00012910'         .long   rkvdgraboh,rkvdgraboh,rkvdblock,rkvdblock               ;28-31
    2641                    
    2642                    
    2643                    ************
    2644 00012910           rkvdblock
    2645 00012910           rkvdgraboh
    2646 00012910           rkvdz           ;0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   57

    2647 00012910     0960          rets
    2648                    
    2649                    ************
    2650 00012920           rkvdpunch               ;1
    2651                    
    2652 00012920     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012930 00000000! 
    2653 00012950                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    2654                            .ref    bam_4_knee2_anim
    2655 00012af0     09e0          movi    bam_4_knee2_anim,a0
         00012b00 00000000! 
    2656 00012b20     0d5f          calla   change_anim1a
         00012b30 00000000! 
    2657 00012b50     0960          rets
    2658                    
    2659                    ************
    2660 00012b60           rkvdsuper_punch ;4
    2661                    
    2662 00012b60     0960          rets
    2663                    
    2664                    ************
    2665 00012b70           do_pile
    2666 00012b70     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012b80 00000000! 
    2667                    ;This flag is only set if bam bam has done repeated kicks!
    2668 00012ba0     b5a0          move    *a13(USR_VAR2),a0
         00012bb0     0860  
    2669 00012bc0     cad4          jrz     rkvdz
    2670                    
    2671 00012bd0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00012be0     0bc0  
    2672 00012bf0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2673 00012c00     cad1          jrz     rkvdpunch
    2674                    
    2675 00012c10                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2676 00012db0     09e0          movi    bam_3_pile_driver_anim,a0
         00012dc0 00000000! 
    2677 00012de0     0d5f          calla   change_anim1a
         00012df0 00000000! 
    2678 00012e10     0960          rets
    2679                    
    2680 00012e20           rkvdpunchkick
    2681 00012e20           rkvdkick
    2682                    
    2683                    ;       move    *a13(STICK_VAL_CUR),a0
    2684                    ;       btst    PLAYER_DOWN_BIT,a0
    2685                    ;       jrz     rkvdknee
    2686                    ;
    2687                    ;       move    *a13(STICK_REL_CUR),a0
    2688                    ;       btst    MOVE_TOWARD_BIT,a0
    2689                    ;       jrz     rkvdknee
    2690                    ;
    2691                    ;       .ref    bam_hdbutts_anim
    2692                    ;       movi    bam_hdbutts_anim,a0
    2693                    ;       calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   58

    2694                    ;       rets
    2695                    ;
    2696                    ;rkvdknee
    2697 00012e20     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012e30 00000000! 
    2698 00012e50                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    2699 00012ff0     09e0          movi    bam_4_knee2_anim,a0
         00013000 00000000! 
    2700 00013020     0d5f          calla   change_anim1a
         00013030 00000000! 
    2701 00013050     0960          rets
    2702                    
    2703 00013060           rkvdsuper_kick  ;16
    2704                    ;If stick is toward opponent, then do quick knees
    2705 00013060     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013070     0bc0  
    2706 00013080     b5a1          move    *a13(NEW_FACING_DIR),a1
         00013090     04d0  
    2707 000130a0     0b81          andi    0ch,a1
         000130b0 fffffff3  
    2708 000130d0     4801          cmp     a0,a1
    2709 000130e0     cb82          jrnz    rkvdz
    2710                    
    2711                    ;Quick knees
    2712 000130f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013100 00000000! 
    2713 00013120                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    2714 000132c0     09e0          movi    bam_knees_anim,a0
         000132d0 00000000! 
    2715 000132f0     0d5f          calla   change_anim1a
         00013300 00000000! 
    2716 00013320     0960          rets
    2717                    
    2718                    *****************************************************************************
    2719 00013330           mode_puppet2    ;17
    2720                    
    2721                    ;       ;check for the head-grab breaker
    2722                    ;       move    *a13(BUT_VAL_DOWN),a0
    2723                    ;       btst    PLAYER_KICK_BIT,a0
    2724                    ;       jrz     ufmhout
    2725                    ;
    2726                    ;       ;check the time - must do it within 20 ticks
    2727                    ;       move    *a13(HEAD_GRAB_TIME),a14
    2728                    ;       move    @PCNT,a0
    2729                    ;       sub     a14,a0
    2730                    ;       cmpi    KICK_OUT,a0
    2731                    ;       jrgt    ufmhout
    2732                    ;
    2733                    ;       move    *a13(PLYR_TYPE),a14
    2734                    ;       cmpi    PTYPE_DRONE,a14
    2735                    ;       jrz     ufmhout
    2736                    ;     
    2737                    ;       ;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
    2738                    ;       move    *a13(ATTACH_PROC),a0,L
    2739                    ;       clr     a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   59

    2740                    ;       move    a14,*a13(ATTACH_PROC),L
    2741                    ;       move    a14,*a0(ATTACH_PROC),L
    2742                    ;       movi    15,a14
    2743                    ;       move    a14,*a0(IMMOBILIZE_TIME)
    2744                    ;       SETMODE NORMAL
    2745                    ;       jruc    std_knee
    2746                    ;
    2747                    ;ufmhout
    2748 00013330     0960          rets
    2749                    
    2750                    *****************************************************************************
    2751 00013340           mode_headheld   ;19
    2752 00013340     b5a0          move    *a13(ANIMODE),a0
         00013350     0660  
    2753 00013360     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2754 00013370     cb80          janz    mode_choking
         00013380 00000000! 
    2755                    
    2756                    ;Bozo reversal
    2757 000133a0     0d5f          calla   bozo_check
         000133b0 00000000! 
    2758 000133d0     c932          jrnc    vqwtfail
    2759                    
    2760 000133e0                   PUSH    a8
    2761 000133f0     4da8          move    a13,a8
    2762 00013400     0d5f          CALLA   DO_REVERSAL
         00013410 00000000! 
    2763 00013430     0d5f          CALLA   DO_REVERSAL_MESS
         00013440 00000000! 
    2764 00013460                   PULL    a8
    2765                    
    2766 00013470                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2767                    
    2768 00013610     09e0          movi    bam_pogo_anim,a0
         00013620 00000000! 
    2769 00013640     05ae          move    @PCNT,a14
         00013650 00000000! 
    2770 00013670     1fee          btst    0,a14
    2771 00013680     ca03          jrz     vqwttag
    2772 00013690     09e0          movi    bam_neckbreaker_anim,a0
         000136a0 00000000! 
    2773 000136c0     0d5f  vqwttag calla   change_anim1a
         000136d0 00000000! 
    2774                    
    2775 000136f0     0960          rets
    2776 00013700           vqwtfail
    2777                    
    2778                    ;He may have let me go by hitting his block butn!
    2779 00013700     b7a0          move    *a13(ATTACH_PROC),a0,L
         00013710     03e0  
    2780 00013720     cb0c          jrnz    vqwtno_luck
    2781                    
    2782                    ;Make sure this guy is on ground
    2783 00013730     b5a0          move    *a13(OBJ_YPOSINT),a0
         00013740     0130  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   60

    2784 00013750     b5a1          move    *a13(GROUND_Y),a1
         00013760     0570  
    2785 00013770     4820          cmp     a1,a0                   ;a0-a1
    2786 00013780     c706          jrgt    vqwtno_luck
    2787                    
    2788                    ;hit_gnd
    2789                    
    2790 00013790     09e0          movi    bam_3_head_held_stand_anim,a0
         000137a0 00000000! 
    2791 000137c0     0d5f          calla   change_anim1a
         000137d0 00000000! 
    2792                    
    2793 000137f0           vqwtno_luck
    2794 000137f0     0960          rets
    2795                    
    2796                    *****************************************************************************
    2797 00013800           mode_chokehold  ;24
    2798 00013800     0960          rets
    2799                    
    2800                    *****************************************************************************
    2801                    
    2802                    ;mwsuVEL        equ     30000h          ;38000h ;30000h
    2803                    ;mwsuDVEL       equ     21f0eh          ;27978h ;21f0eh
    2804                    ;mwsuVEL        equ     38000h          ;38000h ;30000h
    2805                    ;mwsuDVEL       equ     30000h          ;27978h ;21f0eh
    2806          0003a000  mwsuVEL equ     3a000h          ;38000h ;30000h
    2807          00031000  mwsuDVEL        equ     31000h          ;27978h ;21f0eh
    2808                    
    2809                    
    2810 00013810            SUBR bam_velocity_table
    2811                    
    2812                    ;               X,      Z
    2813                    
    2814 00013810 00000000          .long   0,      -mwsuVEL        ;0 UP
    2815                    
    2816 00013850 00031000          .long   mwsuDVEL,       -mwsuDVEL       ;1 UP-RIGHT
    2817                    
    2818 00013890 0003a000          .long   mwsuVEL,        0       ;2 RIGHT
    2819                    
    2820 000138d0 00031000          .long   mwsuDVEL,       mwsuDVEL        ;3 DOWN-RIGHT
    2821                    
    2822 00013910 00000000          .long   0,      mwsuVEL ;4 DOWN
    2823                    
    2824 00013950 fffcf000          .long   -mwsuDVEL,      mwsuDVEL        ;5 DOWN-LEFT
    2825                    
    2826 00013990 fffc6000          .long   -mwsuVEL,       0       ;6 LEFT
    2827                    
    2828 000139d0 fffcf000          .long   -mwsuDVEL,      -mwsuDVEL       ;7 UP-LEFT
    2829                    
    2830                    
    2831                    *****************************************************************************
    2832                    
    2833 00013a10            SUBR bam_rotate_anims_table
    2834                    ; old = up right
    2835 00013a10 00000000!         .long   bam_stand2_anim         ;new = up right
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   61

    2836 00013a30 00000000!         .long   bam_2_to_4_turn_anim    ;    = down right
    2837 00013a50 00000000!         .long   bam_2_to_6_turn_anim    ;    = down left ***
    2838 00013a70 00000000!         .long   bam_2_to_8_turn_anim    ;    = up left
    2839                    
    2840                    ; old = down right
    2841 00013a90 00000000!         .long   bam_4_to_2_turn_anim    ;new = up right
    2842 00013ab0 00000000!         .long   bam_stand4_anim         ;    = down right
    2843 00013ad0 00000000!         .long   bam_4_to_6_turn_anim    ;    = down left
    2844 00013af0 00000000!         .long   bam_4_to_8_turn_anim    ;    = up left ***
    2845                    
    2846                    ; old = down left
    2847 00013b10 00000000!         .long   bam_6_to_2_turn_anim    ;new = up right ***
    2848 00013b30 00000000!         .long   bam_6_to_4_turn_anim    ;    = down right
    2849 00013b50 00000000!         .long   bam_stand6_anim         ;    = down left
    2850 00013b70 00000000!         .long   bam_6_to_8_turn_anim    ;    = up left
    2851                    
    2852                    ; old = up left
    2853 00013b90 00000000!         .long   bam_8_to_2_turn_anim    ;new = up right
    2854 00013bb0 00000000!         .long   bam_8_to_4_turn_anim    ;    = down right ***
    2855 00013bd0 00000000!         .long   bam_8_to_6_turn_anim    ;    = down left
    2856 00013bf0 00000000!         .long   bam_stand8_anim         ;    = up left
    2857                    
    2858                    
    2859 00013c10            SUBR bam_leg_anims_table
    2860                    ;  MOVE
    2861                    ;(eska1 - UP)                           FACING
    2862 00013c10 00000000!         .long   bam_walk1_f2_anim       ;1 (UP)
    2863 00013c30 00000000!         .long   bam_walk1_f2_anim       ;2 (UP_RIGHT)
    2864 00013c50 00000000!         .long   bam_walk1_f4_anim       ;3 (RIGHT)
    2865 00013c70 00000000!         .long   bam_walk1_f4_anim       ;4 (DOWN_RIGHT)
    2866 00013c90 00000000!         .long   bam_walk1_f4_anim       ;5 (DOWN)
    2867 00013cb0 00000000!         .long   bam_walk1_f4_anim       ;6 (DOWN_LEFT)
    2868 00013cd0 00000000!         .long   bam_walk1_f2_anim       ;7 (LEFT)
    2869 00013cf0 00000000!         .long   bam_walk1_f2_anim       ;8 (UP-LEFT)
    2870                    
    2871                    ;(eska2 - UP-RIGHT)
    2872 00013d10 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2873 00013d30 00000000!         .long   bam_walk2_f2_anim       ;2 (UP_RIGHT)
    2874 00013d50 00000000!         .long   bam_walk2_f2_anim       ;3 (RIGHT)
    2875 00013d70 00000000!         .long   bam_walk2_f4_anim       ;4 (DOWN_RIGHT)
    2876 00013d90 00000000!         .long   bam_walk8_f4_anim       ;5 (DOWN)
    2877 00013db0 00000000!         .long   bam_walk8_f4_anim       ;6 (DOWN_LEFT)
    2878 00013dd0 00000000!         .long   bam_walk4_f2_anim       ;7 (LEFT)
    2879 00013df0 00000000!         .long   bam_walk4_f2_anim       ;8 (UP-LEFT)
    2880                    
    2881                    ;(eska3 - RIGHT)
    2882 00013e10 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2883 00013e30 00000000!         .long   bam_walk2_f2_anim       ;2 (UP_RIGHT)
    2884 00013e50 00000000!         .long   bam_walk2_f2_anim       ;3 (RIGHT)
    2885 00013e70 00000000!         .long   bam_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2886 00013e90 00000000!         .long   bam_walk4_f4_anim       ;5 (DOWN)
    2887 00013eb0 00000000!         .long   bam_walk8_f4_anim       ;6 (DOWN_LEFT)
    2888 00013ed0 00000000!         .long   bam_walk6_f2_anim       ;7 (LEFT)
    2889 00013ef0 00000000!         .long   bam_walk6_f2_anim       ;8 (UP-LEFT)
    2890                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   62

    2891                    
    2892                    ;(eska4 - DOWN-RIGHT)
    2893 00013f10 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2894 00013f30 00000000!         .long   bam_walk8_f2_anim       ;2 (UP_RIGHT)
    2895 00013f50 00000000!         .long   bam_walk4_f4_anim       ;3 (RIGHT)
    2896 00013f70 00000000!         .long   bam_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2897 00013f90 00000000!         .long   bam_walk2_f4_anim       ;5 (DOWN)
    2898 00013fb0 00000000!         .long   bam_walk6_f4_anim       ;6 (DOWN_LEFT)
    2899 00013fd0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2900 00013ff0 00000000!         .long   bam_walk6_f2_anim       ;8 (UP-LEFT)
    2901                    
    2902                    ;(eska5 - DOWN)
    2903 00014010 00000000!         .long   bam_walk5_f2_anim       ;1 (UP)
    2904 00014030 00000000!         .long   bam_walk5_f2_anim       ;2 (UP_RIGHT)
    2905 00014050 00000000!         .long   bam_walk5_f4_anim       ;3 (RIGHT)
    2906 00014070 00000000!         .long   bam_walk5_f4_anim       ;4 (DOWN_RIGHT)
    2907 00014090 00000000!         .long   bam_walk5_f4_anim       ;5 (DOWN)
    2908 000140b0 00000000!         .long   bam_walk5_f4_anim       ;6 (DOWN_LEFT)
    2909 000140d0 00000000!         .long   bam_walk5_f2_anim       ;7 (LEFT)
    2910 000140f0 00000000!         .long   bam_walk5_f2_anim       ;8 (UP-LEFT)
    2911                    
    2912                    ;(eska6 - DOWN-LEFT)
    2913 00014110 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2914 00014130 00000000!         .long   bam_walk6_f2_anim       ;2 (UP_RIGHT)
    2915 00014150 00000000!         .long   bam_walk2_f2_anim       ;3 (RIGHT)
    2916 00014170 00000000!         .long   bam_walk6_f4_anim       ;4 (DOWN_RIGHT)
    2917 00014190 00000000!         .long   bam_walk2_f4_anim       ;5 (DOWN)
    2918 000141b0 00000000!         .long   bam_walk4_f4_anim       ;6 (DOWN_LEFT)
    2919 000141d0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2920 000141f0 00000000!         .long   bam_walk8_f2_anim       ;8 (UP-LEFT)
    2921                    
    2922                    ;(eska7 - LEFT)
    2923 00014210 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2924 00014230 00000000!         .long   bam_walk6_f2_anim       ;2 (UP_RIGHT)
    2925 00014250 00000000!         .long   bam_walk6_f2_anim       ;3 (RIGHT)
    2926 00014270 00000000!         .long   bam_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2927 00014290 00000000!         .long   bam_walk4_f4_anim       ;5 (DOWN)
    2928 000142b0 00000000!         .long   bam_walk4_f4_anim       ;6 (DOWN_LEFT)
    2929 000142d0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2930 000142f0 00000000!         .long   bam_walk2_f2_anim       ;8 (UP-LEFT)
    2931                    
    2932                    ;(eska8 - UP-LEFT)
    2933 00014310 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2934 00014330 00000000!         .long   bam_walk4_f2_anim       ;2 (UP_RIGHT)
    2935 00014350 00000000!         .long   bam_walk6_f2_anim       ;3 (RIGHT)
    2936 00014370 00000000!         .long   bam_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2937 00014390 00000000!         .long   bam_walk6_f4_anim       ;5 (DOWN)
    2938 000143b0 00000000!         .long   bam_walk2_f4_anim       ;6 (DOWN_LEFT)
    2939 000143d0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2940 000143f0 00000000!         .long   bam_walk2_f2_anim       ;8 (UP-LEFT)
    2941                    
    2942                    
    2943 00014410            SUBR bam_torso_anims_table
    2944                    ; old = up right
    2945 00014410 00000000!         .long   bam_torso2_anim         ;new = up right
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 10:57:36 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   63

    2946 00014430 00000000!         .long   bam_2_to_4_turn2_anim   ;    = down right
    2947 00014450 00000000!         .long   bam_2_to_6_turn2_anim   ;    = down left ***
    2948 00014470 00000000!         .long   bam_2_to_8_turn2_anim   ;    = up left
    2949                    
    2950                    ; old = down right
    2951 00014490 00000000!         .long   bam_4_to_2_turn2_anim   ;new = up right
    2952 000144b0 00000000!         .long   bam_torso4_anim         ;    = down right
    2953 000144d0 00000000!         .long   bam_4_to_6_turn2_anim   ;    = down left
    2954 000144f0 00000000!         .long   bam_4_to_8_turn2_anim   ;    = up left ***
    2955                    
    2956                    ; old = down left
    2957 00014510 00000000!         .long   bam_6_to_2_turn2_anim   ;new = up right ***
    2958 00014530 00000000!         .long   bam_6_to_4_turn2_anim   ;    = down right
    2959 00014550 00000000!         .long   bam_torso6_anim         ;    = down left
    2960 00014570 00000000!         .long   bam_6_to_8_turn2_anim   ;    = up left
    2961                    
    2962                    ; old = up left
    2963 00014590 00000000!         .long   bam_8_to_2_turn2_anim   ;new = up right
    2964 000145b0 00000000!         .long   bam_8_to_4_turn2_anim   ;    = down right ***
    2965 000145d0 00000000!         .long   bam_8_to_6_turn2_anim   ;    = down left
    2966 000145f0 00000000!         .long   bam_torso8_anim         ;    = up left
    2967                    
    2968                    
    2969                    ******************************************************************************
    2970                    
    2971                            .end

 No Errors,  No Warnings
