TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "bam.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "jjxm.h"
      11                            .include        "mproc.equ"             ;Mproc equates
      12                            .include        "display.equ"           ;Display proc equates
      13                            .include        "gsp.equ"               ;Gsp asm equates
      14                            .include        "sys.equ"
      15                            .include        "game.equ"
      16                            .include        "plyr.equ"
      17                            .include        "anim.equ"
      18                            .include        "audit.equ"
      19                            .include        "sound.h"
      20                            .include        "ring.equ"
      21                            .include        "lifebar.h"
      22                            .include        "damage.equ"
      23                    
      24                    
      25                    
      26                            .ref    get_punch_dtime,ck_teammate_pin,raisearm_check
      27                            .ref    can_pin,round_award,set_raisearm_bit
      28                            .ref    change_anim1,change_anim1a
      29                            .ref    change_anim2,change_anim2a
      30                            .ref    keep_attached,drone_change_back,std_walk_fast,std_taunt
      31                            .ref    get_opp_plyrmode,mode_dead,get_opp_process
      32                            .ref    check_secret_moves,process_ptrs,master_keep_attached
      33                            .ref    mode_choking,do_taunt,execute_walk,bounce_off_ropes
      34                            .ref    climb_turnbuckle,ck_ignore,CLIMB_ROPES
      35                            .ref    JUMP_ROPES,ADD_IF_SILENT,FIND_AND_KILL_ENDLESS
      36                            .ref    DO_REVERSAL,PCNT,DO_REVERSAL_MESS,CHECK_COMBO_GO
      37                            .ref    BONUS_MESS,BLOCK_WOOSH
      38                            .ref    blocking_off
      39                            .ref    hyper_speed_on
      40                            .ref    in_finish_move
      41                            .ref    p1rounds,p2rounds
      42                            .if NUM_BAM_FINISHES
      43                            .ref    bam_finish1_move
      44                            .if NUM_BAM_FINISHES > 1
      45                            .ref    bam_finish2_move
      46                            .endif
      47                            .endif
      48                    
      49                    
      50                            .ref    wres_slave_anim
      51                            .ref    bam_zip_anim
      52                            .ref    start_run_anim
      53                    
      54                            .ref    bam_stand2_anim,bam_stand8_anim
      55                            .ref    bam_stand4_anim,bam_stand6_anim
      56                            .ref    bam_torso2_anim,bam_torso8_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .ref    bam_torso4_anim,bam_torso6_anim
      58                            .ref    bam_pogo_anim
      59                            .ref    bam_3_hiptoss_anim
      60                    
      61                            .ref    bam_2_to_4_turn_anim,bam_8_to_6_turn_anim       ;stand
      62                            .ref    bam_4_to_2_turn_anim,bam_6_to_8_turn_anim
      63                            .ref    bam_4_to_6_turn_anim,bam_6_to_4_turn_anim
      64                            .ref    bam_2_to_8_turn_anim,bam_8_to_2_turn_anim
      65                            .ref    bam_4_to_8_turn_anim,bam_6_to_2_turn_anim
      66                            .ref    bam_2_to_6_turn_anim,bam_8_to_4_turn_anim
      67                    
      68                            .ref    bam_2_to_4_turn2_anim,bam_8_to_6_turn2_anim     ;torso
      69                            .ref    bam_4_to_2_turn2_anim,bam_6_to_8_turn2_anim
      70                            .ref    bam_4_to_6_turn2_anim,bam_6_to_4_turn2_anim
      71                            .ref    bam_2_to_8_turn2_anim,bam_8_to_2_turn2_anim
      72                            .ref    bam_4_to_8_turn2_anim,bam_6_to_2_turn2_anim
      73                            .ref    bam_2_to_6_turn2_anim,bam_8_to_4_turn2_anim
      74                    
      75                            .ref    bam_walk1_f2_anim,bam_walk2_f2_anim,bam_walk4_f2_anim
      76                            .ref    bam_walk5_f2_anim,bam_walk6_f2_anim,bam_walk8_f2_anim
      77                    
      78                            .ref    bam_walk1_f4_anim,bam_walk2_f4_anim,bam_walk4_f4_anim
      79                            .ref    bam_walk5_f4_anim,bam_walk6_f4_anim,bam_walk8_f4_anim
      80                    
      81                            .ref    bam_4_fpunch_anim
      82                            .ref    bam_2_fpunch_anim
      83                            .ref    bam_4_block_anim
      84                            .ref    bam_2_butts_anim,bam_4_butts_anim
      85                    
      86                            .ref    bam_run2_anim
      87                    
      88                            .ref    bam_2_head_hit_anim,bam_4_head_hit_anim
      89                            .ref    bam_2_head_hit2_anim,bam_4_head_hit2_anim
      90                            .ref    bam_2_body_hit_anim,bam_4_body_hit_anim
      91                    
      92                            .ref    bam_2_punch_anim,bam_4_punch_anim
      93                            .ref    bam_2_kick_anim,bam_4_kick_anim
      94                            .ref    bam_flying_kick_anim
      95                    
      96                            .ref    bam_2_body_hit_anim,bam_4_body_hit_anim
      97                            .ref    bam_hitonground_anim
      98                    
      99                            .ref    bam_2_butt_anim,bam_4_butt_anim
     100                            .ref    bam_2_knee_anim,bam_4_knee_anim
     101                    
     102                            .ref    bam_head_hit2_anim,bam_head_hit_dizzy_anim
     103                            .ref    bam_2_stomp_anim,bam_4_stomp_anim
     104                    
     105                            .ref    bam_4_push_anim
     106                            .ref    bam_4_losebal_anim
     107                    
     108                            .ref    bam_2_grabfling_anim
     109                            .ref    bam_4_grabfling_anim
     110                    
     111                            .ref    bam_fall_back_anim,bam_knees_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                    
     113                            .ref    bam_2_faceup_getup_anim
     114                            .ref    bam_4_faceup_getup_anim
     115                    
     116                            .ref    bam_2_lbowdrop_anim,bam_4_lbowdrop_anim
     117                    
     118                            .ref    bam_4_jumpkick_anim
     119                    
     120                            .ref    bam_3_pile_driver_anim
     121                    
     122                            .ref    bam_4_graboh_anim,bam_heldoh_anim
     123                            .ref    bam_2_graboh_anim
     124                            .ref    bam_holdoh_anim
     125                            .ref    bam_stndholdoh_anim
     126                    
     127                            .ref    bam_backbreaker_anim
     128                    
     129                            .ref    mode_inair2,mode_puppet
     130                            .ref    bam_2_pin_anim
     131                            .ref    bam_4_pin_anim
     132                    
     133                            .ref    bam_3_butt_drop_anim
     134                    
     135                            .ref    bam_climb_up_anim,bam_climb_down_anim,bam_bellyflop_anim
     136                            .ref    bam_combo_knees_anim,bam_combo_punch_anim
     137                            .ref    bam_2_raise_arm_anim,bam_4_raise_arm_anim
     138                    
     139                            .ref    bam_neckbreaker2_anim,bam_slamdwn_anim
     140                            .ref    bam_4_superkick_anim,bam_3_hiptoss2_anim
     141                            .ref    bam_neckbreaker_run_anim
     142                            .ref    bam_fly_cline_anim,bam_4_slap_anim
     143                            .ref    bam_neckbreaker_anim,bam_2_hair_pickup_anim
     144                            .ref    bam_2_superkick_anim,bam_2_slap_anim
     145                            .ref    bam_3_head_hold2_anim,bam_3_head_held_stand_anim
     146                            .ref    bam_3_head_hold_anim
     147                            .ref    bam_4_hair_pickup_anim
     148                            .ref    bam_2_napalm_anim,bam_4_napalm_anim
     149                    
     150                    
     151                    
     152                    
     153 00000000           bam_secret_moves
     154 00000000 00001b50'         .long   ediifirepnch    ;must have this one
     155                    
     156 00000020 000006a0'         .long   ediineck_grab
     157 00000040 00001460'         .long   ediigrab_fling
     158 00000060 00000e30'         .long   ediihip_toss
     159 00000080 000012d0'         .long   ediigrab_fling2
     160 000000a0 00001320'         .long   ediihip_toss2
     161 000000c0 00000280'         .long   ediijumpkick
     162 000000e0 000012d0'         .long   ediigrab_fling2
     163 00000100 00001320'         .long   ediihip_toss2
     164 00000120 00000ae0'         .long   ediinapalm
     165 00000140 00000000          .long   0
     166                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167                    
     168 00000160            SUBR   bam_smove_table
     169 00000160 00002b90'         .long   bam_charge_neckbreaker
     170 00000180 00003c60'         .long   bam_hdhold_combo1
     171 000001a0 00003110'         .long   bam_hdhold_pile
     172 000001c0 00002040'         .long   bam_hdhold_pogo
     173 000001e0 00004550'         .long   bam_hdhold_combo2
     174 00000200 00004e40'         .long   bam_grab_toss_air
     175 00000220 00000000!         .long   std_walk_fast
     176 00000240 00000000!         .long   std_taunt
     177                    
     178                            .if NUM_BAM_FINISHES
     179                            .long   bam_finish_move1
     180                            .endif
     181                            .if NUM_BAM_FINISHES > 1
     182                            .long   bam_finish_move2
     183                            .endif
     184 00000260 00000000          .long   0
     185                    
     186                    
     187                    
     188 00000280           ediijumpkick
     189 00000280     0100          .word   B_SKICK,                J_ALL
     190 000002a0     0004          .word   J_AWAY,                 J_REAL_LR | J_UP | J_DOWN
     191 000002c0     0004          .word   J_AWAY,                 J_REAL_LR | J_UP | J_DOWN
     192 000002e0     8020          .word   8000h | 32              ;max
     193 000002f0 00000310'         .long   ediiscrt_flykick
     194                    
     195 00000310           ediiscrt_flykick
     196 00000310     b5a0          move    *a13(ANIMODE),a0
         00000320     0660  
     197 00000330     1fa0          btst    MODE_UNINT_BIT,a0
     198 00000340     cb00          jrnz    ediiout
         00000350     01cd  
     199                    
     200 00000360     0d5f          calla   get_opp_plyrmode
         00000370 00000000! 
     201 00000390     0b40          cmpi    MODE_ONGROUND,a0
         000003a0     fffb  
     202 000003b0     ca00          jrz     ediiout
         000003c0     01c6  
     203 000003d0     0b40          cmpi    MODE_DEAD,a0
         000003e0     fff6  
     204 000003f0     ca00          jrz     ediiout
         00000400     01c2  
     205 00000410     0b40          cmpi    MODE_HEADHELD,a0
         00000420     ffec  
     206 00000430     ca00          jrz     ediiout
         00000440     01be  
     207 00000450     0b40          cmpi    MODE_ATTACHED,a0
         00000460     fffc  
     208 00000470     ca00          jrz     ediiout
         00000480     01ba  
     209                    
     210 00000490     09e0          movi    bam_4_jumpkick_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

         000004a0 00000000! 
     211 000004c0     0d5f          calla   change_anim1a
         000004d0 00000000! 
     212                    
     213 000004f0                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
     214                    
     215 00000690     0960          rets
     216                    
     217                    
     218 000006a0           ediineck_grab
     219 000006a0     0040          .word   B_SPUNCH,               J_ALL
     220 000006c0     0008          .word   J_TOWARD,               J_REAL_LR
     221 000006e0     0008          .word   J_TOWARD,               J_REAL_LR
     222 00000700     8020          .word   8000h | 32              ;max
     223 00000710 00000730'         .long   ediiscrt_neck
     224                    
     225 00000730           ediiscrt_neck
     226 00000730     b5a0          move    *a13(ANIMODE),a0
         00000740     0660  
     227 00000750     1fa0          btst    MODE_UNINT_BIT,a0
     228 00000760     cb00          jrnz    ediiout
         00000770     018b  
     229                    
     230 00000780     0d5f          calla   get_opp_plyrmode
         00000790 00000000! 
     231 000007b0     0b40          cmpi    MODE_ONGROUND,a0
         000007c0     fffb  
     232 000007d0     ca00          jrz     ediiout
         000007e0     0184  
     233 000007f0     0b40          cmpi    MODE_DEAD,a0
         00000800     fff6  
     234 00000810     ca00          jrz     ediiout
         00000820     0180  
     235 00000830     0b40          cmpi    MODE_HEADHELD,a0
         00000840     ffec  
     236 00000850     ca00          jrz     ediiout
         00000860     017c  
     237 00000870     0b40          cmpi    MODE_ATTACHED,a0
         00000880     fffc  
     238 00000890     ca00          jrz     ediiout
         000008a0     0178  
     239                    
     240 000008b0     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         000008c0     0cd0  
     241 000008d0     07a0          move    @PCNT,a0,L
         000008e0 00000000! 
     242 00000900     45c0          sub     a14,a0
     243 00000910     0b40          cmpi    2*60,a0
         00000920     ff87  
     244 00000930     c507          jrge    ediiok2
     245                    
     246                            .ref    bam_3_fake_hold_anim
     247 00000940     09e0          movi    bam_3_fake_hold_anim,a0
         00000950 00000000! 
     248 00000970     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

         00000980 00000000! 
     249 000009a0     0960          rets
     250                    
     251 000009b0           ediiok2
     252 000009b0     b5a1          move    *a13(CLOSEST_XDIST),a1
         000009c0     0370  
     253 000009d0     0b41          cmpi    100,a1
         000009e0     ff9b  
     254 000009f0     c707          jrgt    ediistd_grab
     255                    
     256 00000a00     09e0          movi    bam_3_head_hold2_anim,a0
         00000a10 00000000! 
     257 00000a30     0d5f          calla   change_anim1a
         00000a40 00000000! 
     258                    
     259 00000a60     0960          rets
     260                    
     261 00000a70           ediistd_grab
     262 00000a70     09e0          movi    bam_3_head_hold_anim,a0
         00000a80 00000000! 
     263 00000aa0     0d5f          calla   change_anim1a
         00000ab0 00000000! 
     264                    
     265 00000ad0     0960          rets
     266                    
     267                    
     268 00000ae0           ediinapalm
     269 00000ae0     0010          .word   B_PUNCH,                J_ALL
     270 00000b00     0002          .word   J_DOWN,                 J_REAL_LR
     271 00000b20     0002          .word   J_DOWN,                 J_REAL_LR
     272 00000b40     8032          .word   8000h | 50              ;max
     273 00000b50 00000b70'         .long   ediiscrt_napalm
     274                    
     275 00000b70           ediiscrt_napalm
     276 00000b70     b5a0          move    *a13(ANIMODE),a0
         00000b80     0660  
     277 00000b90     1fa0          btst    MODE_UNINT_BIT,a0
     278 00000ba0     cb00          jrnz    ediiout
         00000bb0     0147  
     279                    
     280 00000bc0     b5a0          move    *a13(PLYRMODE),a0
         00000bd0     05c0  
     281 00000be0     0b40          cmpi    MODE_ONTURNBKL,a0
         00000bf0     fff9  
     282 00000c00     ca00          jrz     ediiout
         00000c10     0141  
     283                    
     284                            ;only if opponent is on the ground (and not dead!)
     285 00000c20     0d5f          calla   get_opp_plyrmode
         00000c30 00000000! 
     286 00000c50     0b40          cmpi    MODE_ONGROUND,a0
         00000c60     fffb  
     287 00000c70     cb00          jrne    ediiout
         00000c80     013a  
     288                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     289                            ;smart-target him (don't wanna hit standing guys)
     290 00000c90     b7ae          move    *a13(STATUS_FLAGS),a14,L
         00000ca0     0b50  
     291 00000cb0     0bae          ori     M_SMART_ATTACK,a14
         00000cc0 00000010  
     292 00000ce0     b3cd          move    a14,*a13(STATUS_FLAGS),L
         00000cf0     0b50  
     293 00000d00     0d5f          calla   get_opp_process
         00000d10 00000000! 
     294 00000d30     b20d          move    a0,*a13(SMART_TARGET),L
         00000d40     0ca0  
     295                    
     296 00000d50                   FACE24  bam,napalm_anim
     297 00000df0     0d5f          calla   change_anim1a
         00000e00 00000000! 
     298                    
     299                            ;do some sound here
     300                    
     301 00000e20     0960          rets
     302                    
     303                    
     304 00000e30           ediihip_toss
     305                    
     306 00000e30     0010          .word   B_PUNCH,                J_ALL
     307 00000e50     0004          .word   J_AWAY,         J_REAL_LR
     308 00000e70     0004          .word   J_AWAY,         J_REAL_LR
     309 00000e90     8020          .word   8000h | 32              ;max
     310 00000ea0 00000ec0'         .long   ediiscrt_hiptoss
     311                    
     312 00000ec0           ediiscrt_hiptoss
     313 00000ec0     b5a0          move    *a13(ANIMODE),a0
         00000ed0     0660  
     314 00000ee0     1fa0          btst    MODE_UNINT_BIT,a0
     315 00000ef0     cb00          jrnz    ediiout
         00000f00     0112  
     316                    
     317 00000f10     0d5f          calla   get_opp_plyrmode
         00000f20 00000000! 
     318 00000f40     0b40          cmpi    MODE_ONGROUND,a0
         00000f50     fffb  
     319 00000f60     ca00          jrz     ediiout
         00000f70     010b  
     320 00000f80     0b40          cmpi    MODE_DEAD,a0
         00000f90     fff6  
     321 00000fa0     ca00          jrz     ediiout
         00000fb0     0107  
     322 00000fc0     0b40          cmpi    MODE_HEADHELD,a0
         00000fd0     ffec  
     323 00000fe0     ca00          jrz     ediiout
         00000ff0     0103  
     324 00001000     0b40          cmpi    MODE_INAIR,a0
         00001010     fffd  
     325 00001020     ca09          jrz     ediidoit
     326 00001030     0b40          cmpi    MODE_INAIR2,a0
         00001040     ffea  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     327 00001050     ca06          jrz     ediidoit
     328                    
     329 00001060     b5a0          move    *a13(CLOSEST_DIST),a0
         00001070     0360  
     330 00001080     0b40          cmpi    80h,a0
         00001090     ff7f  
     331 000010a0     c700          jrgt    ediiout
         000010b0     00f7  
     332                    
     333 000010c0           ediidoit
     334 000010c0     09e0          movi    bam_3_hiptoss_anim,a0
         000010d0 00000000! 
     335 000010f0     0d5f          calla   change_anim1a
         00001100 00000000! 
     336                    
     337 00001120                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
     338                    
     339 000012c0     0960          rets
     340                    
     341                    
     342 000012d0           ediigrab_fling2
     343 000012d0     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     344 000012f0     800a          .word   8000h | 10              ;max
     345 00001300 00001370'         .long   ediiscrt_grabfling2
     346                    
     347 00001320           ediihip_toss2
     348 00001320     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     349 00001340     800a          .word   8000h | 10              ;max
     350 00001350 00001370'         .long   ediiscrt_grabfling2
     351                    
     352 00001370           ediiscrt_grabfling2
     353 00001370     b5a0          move    *a13(ANIMODE),a0
         00001380     0660  
     354 00001390     1fa0          btst    MODE_UNINT_BIT,a0
     355 000013a0     cb00          jrnz    ediiout
         000013b0     00c7  
     356                    
     357 000013c0     0d5f          calla   get_opp_plyrmode
         000013d0 00000000! 
     358 000013f0     0b40          cmpi    MODE_BOUNCING,a0
         00001400     fffa  
     359 00001410     ca1b          jrz     ediiyes
     360 00001420     0b40          cmpi    MODE_RUNNING,a0
         00001430     fffe  
     361 00001440     ca18          jrz     ediiyes
     362 00001450     0960          rets
     363                    
     364                    
     365 00001460           ediigrab_fling
     366                    
     367 00001460     0040          .word   B_SPUNCH,               J_ALL
     368 00001480     0004          .word   J_AWAY,         J_REAL_LR
     369 000014a0     0004          .word   J_AWAY,         J_REAL_LR
     370 000014c0     8020          .word   8000h | 32              ;max
     371 000014d0 000014f0'         .long   ediiscrt_grabfling
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

     372                    
     373 000014f0           ediiscrt_grabfling
     374                    
     375                    
     376 000014f0     b5a0          move    *a13(ANIMODE),a0
         00001500     0660  
     377 00001510     1fa0          btst    MODE_UNINT_BIT,a0
     378 00001520     cb00          jrnz    ediiout
         00001530     00af  
     379                    
     380 00001540     0d5f          calla   get_opp_plyrmode
         00001550 00000000! 
     381 00001570     0b40          cmpi    MODE_BOUNCING,a0
         00001580     fffa  
     382 00001590     ca03          jrz     ediiyes
     383 000015a0     0b40          cmpi    MODE_RUNNING,a0
         000015b0     fffe  
     384 000015c0     cb21          jrnz    ediinope
     385 000015d0           ediiyes
     386 000015d0     09e0          movi    bam_3_hiptoss_anim,a0
         000015e0 00000000! 
     387 00001600     0d5f          calla   change_anim1a
         00001610 00000000! 
     388                    
     389 00001630                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
     390                    
     391 000017d0     0960          rets
     392 000017e0           ediinope
     393 000017e0     0d5f          calla   get_opp_plyrmode
         000017f0 00000000! 
     394 00001810     0b40          cmpi    MODE_DEAD,a0
         00001820     fff6  
     395 00001830     ca7f          jrz     ediiout
     396 00001840     0b40          cmpi    MODE_HEADHELD,a0
         00001850     ffec  
     397 00001860     ca7c          jrz     ediiout
     398 00001870     0b40          cmpi    MODE_ONGROUND,a0
         00001880     fffb  
     399 00001890     ca79          jrz     ediiout
     400 000018a0     0b40          cmpi    MODE_ATTACHED,a0
         000018b0     fffc  
     401 000018c0     ca76          jrz     ediiout
     402                    
     403                    
     404 000018d0                   FACE24  bam,grabfling_anim
     405 00001970     0d5f          calla   change_anim1a
         00001980 00000000! 
     406                    
     407 000019a0                   WRSND   W_BAMBAM,GRABFLING_T1,PUNCH_T2
     408                    
     409 00001b40     0960          rets
     410                    
     411                    
     412                    
     413 00001b50           ediifirepnch
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     414                    
     415 00001b50     b5a0          move    *a13(BUT_VAL_UP),a0
         00001b60     0bb0  
     416 00001b70     1fe0          btst    PLAYER_PUNCH_BIT,a0
     417 00001b80     ca0c          jrz     ediino_punch
     418                    
     419 00001b90     b5a0          move    *a13(PLYRNUM),a0
         00001ba0     0580  
     420 00001bb0     0d5f          calla   get_punch_dtime
         00001bc0 00000000! 
     421 00001be0     0b40          cmpi    85,a0                   ;> min?
         00001bf0     ffaa  
     422 00001c00     c404          jrlt    ediino_punch
     423                    
     424 00001c10     0d3f          callr   ediiscrt_firepnch
         00001c20     0004  
     425 00001c30     0de0          setc
     426 00001c40     0960          rets
     427                    
     428 00001c50           ediino_punch
     429 00001c50     0320          clrc
     430 00001c60     0960          rets
     431                    
     432                    
     433 00001c70           ediiscrt_firepnch
     434                    
     435 00001c70     b5a0          move    *a13(PLYRMODE),a0
         00001c80     05c0  
     436 00001c90     0b40          cmpi    MODE_HEADHELD,a0
         00001ca0     ffec  
     437 00001cb0     ca37          jrz     ediiout
     438 00001cc0     0b40          cmpi    MODE_HEADHOLD,a0
         00001cd0     ffef  
     439 00001ce0     ca34          jrz     ediiout
     440                    
     441 00001cf0     b5a0          move    *a13(ANIMODE),a0
         00001d00     0660  
     442 00001d10     1fa0          btst    MODE_UNINT_BIT,a0
     443 00001d20     cb30          jrnz    ediiout
     444                    
     445 00001d30     0d5f          calla   get_opp_plyrmode
         00001d40 00000000! 
     446 00001d60     0b40          cmpi    MODE_DEAD,a0
         00001d70     fff6  
     447 00001d80     ca2a          jrz     ediiout
     448 00001d90     0b40          cmpi    MODE_ATTACHED,a0
         00001da0     fffc  
     449 00001db0     ca27          jrz     ediiout
     450                    
     451 00001dc0           ediiok
     452 00001dc0                   FACE24  bam,fpunch_anim
     453 00001e60     0d5f          calla   change_anim1a
         00001e70 00000000! 
     454 00001e90                   WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
     455 00002030           ediiout
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     456 00002030     0960          rets
     457                    
     458                            .if NUM_BAM_FINISHES
     459                     SUBRP  bam_finish_move1
     460                    
     461                    qkvlTIMEOUT     .equ    TSEC
     462                    
     463                    qkvlend_wait
     464                            SLEEP           TSEC/4
     465                            move            @p1rounds,a0                    ; Get player 1 rounds
     466                            move            @p2rounds,a1                    ; Get player 2 rounds
     467                            or              a1,a0                           ; Put em together
     468                            cmpi            2,a0                            ; Anybody got 2?
     469                            jrlt            qkvlend_wait                    ; br = no
     470                    
     471                    qkvlreset
     472                            clr             a11
     473                            move            a11,@in_finish_move
     474                            SLEEPK          1
     475                            WAITSWITCH_DWN  J_UP,0,qkvlreset
     476                            movi            qkvlTIMEOUT,a11
     477                            move            a11,@in_finish_move
     478                            WAITSWITCH_DWN  J_DOWN,0,qkvlreset
     479                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,qkvlreset
     480                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,qkvlreset
     481                            WAITSWITCH_DWN  B_PUNCH,J_ALL,qkvlreset
     482                    
     483                            movi            bam_finish1_move,a0
     484                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     485                            DIE
     486                            .endif
     487                            
     488                    
     489                            .if NUM_BAM_FINISHES > 1
     490                     SUBRP  bam_finish_move2
     491                    
     492                    adfwTIMEOUT     .equ    TSEC
     493                    
     494                    adfwend_wait
     495                            SLEEP           TSEC/4
     496                            move            @p1rounds,a0                    ; Get player 1 rounds
     497                            move            @p2rounds,a1                    ; Get player 2 rounds
     498                            or              a1,a0                           ; Put em together
     499                            cmpi            2,a0                            ; Anybody got 2?
     500                            jrlt            adfwend_wait                    ; br = no
     501                    
     502                    adfwreset
     503                            clr             a11
     504                            move            a11,@in_finish_move
     505                            SLEEPK          1
     506                            WAITSWITCH_DWN  J_UP,0,adfwreset
     507                            movi            adfwTIMEOUT,a11
     508                            move            a11,@in_finish_move
     509                            WAITSWITCH_DWN  J_UP,0,adfwreset
     510                            WAITSWITCH_DWN  J_RIGHT,J_UP,adfwreset
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     511                            WAITSWITCH_DWN  J_RIGHT,J_UP,adfwreset
     512                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,adfwreset
     513                    
     514                            movi            bam_finish2_move,a0
     515                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     516                            DIE
     517                            .endif
     518                    
     519                    
     520                    
     521 00002040           bam_hdhold_pogo
     522                    
     523              003c  bbavTIMEOUT     .equ    60
     524                    
     525 00002040           bbavlp0
     526 00002040                   SLEEPK  1
     527 00002080           bbavlp
     528 00002080     b500          move    *a8(PLYRMODE),a0
         00002090     05c0  
     529 000020a0     0b40          cmpi    MODE_HEADHOLD,a0
         000020b0     ffef  
     530 000020c0     ca03          jrz     bbavcont
     531 000020d0     0b40          cmpi    MODE_HEADHELD,a0
         000020e0     ffec  
     532 000020f0     cbf4          jrnz    bbavlp0
     533 00002100           bbavcont
     534 00002100     576b          clr     a11
     535                    
     536 00002110                   WAITSWITCH_DWN  J_DOWN,0,bbavlp
     537                    
     538 00002270     09cb          movi    bbavTIMEOUT,a11
         00002280     003c  
     539                    
     540 00002290                   WAITSWITCH_DWN  J_DOWN,0,bbavlp
     541 000023f0                   WAITSWITCH_DWN  B_SKICK,J_ALL,bbavlp
     542                    
     543 00002550     b500          move    *a8(PLYRMODE),a0
         00002560     05c0  
     544 00002570     0b40          cmpi    MODE_HEADHOLD,a0
         00002580     ffef  
     545 00002590     ca1c          jrz     bbavslam
     546 000025a0     0b40          cmpi    MODE_HEADHELD,a0
         000025b0     ffec  
     547 000025c0     cba7          jrnz    bbavlp0
     548 000025d0     b50e          move    *a8(I_WILL_DIE),A14
         000025e0     0b30  
     549 000025f0     cba4          jrnz    bbavlp0
     550                    
     551 00002600     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002610     0ae0  
     552 00002620     cba1          jrnz    bbavlp0                         ;ignore
     553                    
     554 00002630     0d5f          CALLA   DO_REVERSAL
         00002640 00000000! 
     555 00002660     0d5f          CALLA   DO_REVERSAL_MESS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

         00002670 00000000! 
     556                    
     557                            ;target WHOHITME -- don't hit anyone else
     558 00002690                   SMRTTGT a8,WHOHITME
     559                    
     560                            ;immobilize WHOHITME
     561 00002730     b700          move    *a8(WHOHITME),a0,L
         00002740     04e0  
     562 00002750     c018          jruc    bbavis_reversal
     563                    
     564 00002760           bbavslam
     565 00002760     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002770     0ae0  
     566 00002780     cb8b          jrnz    bbavlp0                         ;ignore
     567 00002790     1bea          movk    31,a10
     568 000027a0                   CREATE  MESSAGE_PID,BONUS_MESS
     569                    
     570                            ;target WHOIHIT -- don't hit anyone else
     571 00002820                   SMRTTGT a8,WHOIHIT
     572                    
     573                            ;immobilize WHOIHIT
     574 000028c0     b700          move    *a8(WHOIHIT),a0,L
         000028d0     0500  
     575                    
     576 000028e0           bbavis_reversal
     577 000028e0     19ee          movk    15,a14
     578 000028f0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00002900     0ae0  
     579                    
     580 00002910     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00002920 00000000! 
     581                    
     582 00002940     09ee          movi    bam_pogo_anim,a14
         00002950 00000000! 
     583 00002970     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00002980     0930  
     584 00002990                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     585                    
     586 00002b30                   SLEEPK  20
     587                    
     588 00002b70     c000          jruc    bbavlp
         00002b80     ff4f  
     589                    
     590                    
     591              0160  bmuhCHARGE_TIME .equ    SM_USRW1
     592                    
     593 00002b90           bam_charge_neckbreaker
     594                    
     595 00002b90           bmuhstart_over
     596 00002b90     57ce          clr     a14
     597 00002ba0     b1cd          move    a14,*a13(bmuhCHARGE_TIME),W
         00002bb0     0160  
     598 00002bc0           bmuhloop1
     599 00002bc0                   SLEEPK  1
     600                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     601 00002c00     b5ae          move    *a13(bmuhCHARGE_TIME),a14,W
         00002c10     0160  
     602 00002c20     102e          inc     a14
     603 00002c30     b1cd          move    a14,*a13(bmuhCHARGE_TIME),W
         00002c40     0160  
     604                    
     605 00002c50     b500          move    *a8(BUT_VAL_CUR),a0
         00002c60     0b90  
     606 00002c70     1fa0          btst    PLAYER_SPUNCH_BIT,a0
     607 00002c80     ca01          jrz     bmuhp1
     608                    
     609 00002c90     c0f2          jruc    bmuhloop1
     610                    
     611 00002ca0           bmuhp1
     612                    
     613 00002ca0     b5ae          move    *a13(bmuhCHARGE_TIME),a14
         00002cb0     0160  
     614 00002cc0     0b4e          cmpi    100,a14
         00002cd0     ff9b  
     615 00002ce0     c4ea          jrlt    bmuhstart_over
     616                    
     617 00002cf0     b50e          move    *a8(ANIMODE),a14
         00002d00     0660  
     618 00002d10     1fae          btst    MODE_UNINT_BIT,a14
     619 00002d20     cbe6          jrnz    bmuhstart_over
     620                    
     621 00002d30     b500          move    *a8(GETUP_TIME),a0
         00002d40     0460  
     622 00002d50     cbe3          jrnz    bmuhstart_over
     623                    
     624 00002d60     b500          move    *a8(PLYRMODE),a0
         00002d70     05c0  
     625 00002d80     0b40          cmpi    MODE_HEADHELD,a0
         00002d90     ffec  
     626 00002da0     cade          jrz     bmuhstart_over
     627 00002db0     0b40          cmpi    MODE_HEADHOLD,a0
         00002dc0     ffef  
     628 00002dd0     cadb          jrz     bmuhstart_over
     629 00002de0     0b40          cmpi    MODE_ONGROUND,a0
         00002df0     fffb  
     630 00002e00     cad8          jrz     bmuhstart_over
     631 00002e10     0b40          cmpi    MODE_DEAD,a0
         00002e20     fff6  
     632 00002e30     cad5          jrz     bmuhstart_over
     633                    
     634 00002e40     09ee          movi    bam_neckbreaker2_anim,a14
         00002e50 00000000! 
     635                    
     636 00002e70     b500          move    *a8(PLYRMODE),a0
         00002e80     05c0  
     637 00002e90     0b40          cmpi    MODE_RUNNING,a0
         00002ea0     fffe  
     638 00002eb0     cb03          jrnz    bmuhcont
     639                    
     640 00002ec0     09ee          movi    bam_neckbreaker_run_anim,a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

         00002ed0 00000000! 
     641                    
     642 00002ef0           bmuhcont
     643 00002ef0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00002f00     0930  
     644                    
     645 00002f10                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     646                    
     647 000030b0                   SLEEP   TSEC*3
     648 00003100     c0a8          jruc    bmuhstart_over
     649                            
     650 00003110           bam_hdhold_pile
     651                    
     652              003c  omsqTIMEOUT     .equ    60
     653                    
     654 00003110           omsqlp0
     655 00003110                   SLEEPK  1
     656 00003150           omsqlp
     657 00003150     b500          move    *a8(PLYRMODE),a0
         00003160     05c0  
     658 00003170     0b40          cmpi    MODE_HEADHOLD,a0
         00003180     ffef  
     659 00003190     ca03          jrz     omsqcont
     660 000031a0     0b40          cmpi    MODE_HEADHELD,a0
         000031b0     ffec  
     661 000031c0     cbf4          jrnz    omsqlp0
     662 000031d0           omsqcont
     663 000031d0     576b          clr     a11
     664                    
     665 000031e0                   WAITSWITCH_DWN  J_TOWARD,0,omsqlp
     666                    
     667 00003340     09cb          movi    omsqTIMEOUT,a11
         00003350     003c  
     668                    
     669 00003360                   WAITSWITCH_DWN  J_TOWARD,0,omsqlp
     670 000034c0                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,omsqlp
     671                    
     672 00003620     b500          move    *a8(PLYRMODE),a0
         00003630     05c0  
     673 00003640     0b40          cmpi    MODE_HEADHOLD,a0
         00003650     ffef  
     674 00003660     ca1c          jrz     omsqslam
     675 00003670     0b40          cmpi    MODE_HEADHELD,a0
         00003680     ffec  
     676 00003690     cba7          jrnz    omsqlp0
     677 000036a0     b50e          move    *a8(I_WILL_DIE),A14
         000036b0     0b30  
     678 000036c0     cba4          jrnz    omsqlp0
     679                    
     680 000036d0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000036e0     0ae0  
     681 000036f0     cba1          jrnz    omsqlp0                         ;ignore
     682                    
     683 00003700     0d5f          CALLA   DO_REVERSAL
         00003710 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     684 00003730     0d5f          CALLA   DO_REVERSAL_MESS
         00003740 00000000! 
     685                    
     686                            ;target WHOHITME -- don't hit anyone else
     687 00003760                   SMRTTGT a8,WHOHITME
     688                    
     689                            ;immobilize WHOHITME
     690 00003800     b700          move    *a8(WHOHITME),a0,L
         00003810     04e0  
     691 00003820     c018          jruc    omsqis_reversal
     692                    
     693 00003830           omsqslam
     694 00003830     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003840     0ae0  
     695 00003850     cb8b          jrnz    omsqlp0                         ;ignore
     696                    
     697 00003860     18ea          movk    7,a10
     698 00003870                   CREATE  MESSAGE_PID,BONUS_MESS
     699                    
     700                            ;target WHOIHIT -- don't hit anyone else
     701 000038f0                   SMRTTGT a8,WHOIHIT
     702                    
     703                            ;immobilize WHOIHIT
     704 00003990     b700          move    *a8(WHOIHIT),a0,L
         000039a0     0500  
     705                    
     706 000039b0           omsqis_reversal
     707 000039b0     19ee          movk    15,a14
     708 000039c0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000039d0     0ae0  
     709                    
     710 000039e0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000039f0 00000000! 
     711 00003a10     09ee          movi    bam_3_pile_driver_anim,a14
         00003a20 00000000! 
     712 00003a40     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003a50     0930  
     713                    
     714 00003a60                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
     715                    
     716 00003c00                   SLEEPK  20
     717                    
     718 00003c40     c000          jruc    omsqlp
         00003c50     ff4f  
     719                    
     720 00003c60           bam_hdhold_combo1
     721                    
     722              003c  ltjaTIMEOUT     .equ    60
     723                    
     724 00003c60           ltjalp0
     725 00003c60                   SLEEPK  1
     726 00003ca0           ltjalp
     727 00003ca0     b500          move    *a8(PLYRMODE),a0
         00003cb0     05c0  
     728 00003cc0     0b40          cmpi    MODE_HEADHOLD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

         00003cd0     ffef  
     729 00003ce0     cbf7          jrnz    ltjalp0
     730 00003cf0     0d5f          calla   CHECK_COMBO_GO
         00003d00 00000000! 
     731 00003d20     c4f3          jrlt    ltjalp0
     732                    
     733                    
     734 00003d30     576b          clr     a11
     735                    
     736 00003d40                   WAITSWITCH_DWN  J_TOWARD,0,ltjalp
     737                    
     738 00003ea0     09cb          movi    ltjaTIMEOUT,a11
         00003eb0     003c  
     739                    
     740 00003ec0                   WAITSWITCH_DWN  J_TOWARD,0,ltjalp
     741 00004020                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,ltjalp
     742                    
     743 00004180     b500          move    *a8(PLYRMODE),a0
         00004190     05c0  
     744 000041a0     0b40          cmpi    MODE_HEADHOLD,a0
         000041b0     ffef  
     745 000041c0     ca03          jrz     ltjaslam
     746 000041d0     0b40          cmpi    MODE_HEADHELD,a0
         000041e0     ffec  
     747 000041f0     cba6          jrnz    ltjalp0
     748                    
     749                    
     750 00004200           ltjaslam
     751 00004200     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004210     0ae0  
     752 00004220     cba3          jrnz    ltjalp0                         ;ignore
     753                    
     754                    
     755                            ;target WHOIHIT
     756 00004230                   SMRTTGT a8,WHOIHIT
     757                    
     758 000042d0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000042e0 00000000! 
     759 00004300     09ee          movi    bam_combo_knees_anim,a14
         00004310 00000000! 
     760 00004330     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004340     0930  
     761                    
     762 00004350                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
     763                    
     764 000044f0                   SLEEPK  20
     765                    
     766 00004530     c000          jruc    ltjalp
         00004540     ff75  
     767                    
     768 00004550           bam_hdhold_combo2
     769                    
     770              003c  lmtaTIMEOUT     .equ    60
     771                    
     772 00004550           lmtalp0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     773 00004550                   SLEEPK  1
     774 00004590           lmtalp
     775 00004590     b500          move    *a8(PLYRMODE),a0
         000045a0     05c0  
     776 000045b0     0b40          cmpi    MODE_HEADHOLD,a0
         000045c0     ffef  
     777 000045d0     cbf7          jrnz    lmtalp0
     778 000045e0     0d5f          calla   CHECK_COMBO_GO
         000045f0 00000000! 
     779 00004610     c4f3          jrlt    lmtalp0
     780                    
     781 00004620     576b          clr     a11
     782                    
     783 00004630                   WAITSWITCH_DWN  J_TOWARD,0,lmtalp
     784                    
     785 00004790     09cb          movi    lmtaTIMEOUT,a11
         000047a0     003c  
     786                    
     787 000047b0                   WAITSWITCH_DWN  J_TOWARD,0,lmtalp
     788 00004910                   WAITSWITCH_DWN  B_PUNCH,J_ALL,lmtalp
     789                    
     790 00004a70     b500          move    *a8(PLYRMODE),a0
         00004a80     05c0  
     791 00004a90     0b40          cmpi    MODE_HEADHOLD,a0
         00004aa0     ffef  
     792 00004ab0     ca03          jrz     lmtaslam
     793 00004ac0     0b40          cmpi    MODE_HEADHELD,a0
         00004ad0     ffec  
     794 00004ae0     cba6          jrnz    lmtalp0
     795                    
     796 00004af0           lmtaslam
     797 00004af0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004b00     0ae0  
     798 00004b10     cba3          jrnz    lmtalp0                         ;ignore
     799                    
     800                    
     801                            ;target WHOIHIT
     802 00004b20                   SMRTTGT a8,WHOIHIT
     803                    
     804 00004bc0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004bd0 00000000! 
     805 00004bf0     09ee          movi    bam_combo_punch_anim,a14
         00004c00 00000000! 
     806 00004c20     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004c30     0930  
     807                    
     808 00004c40                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
     809                    
     810 00004de0                   SLEEPK  20
     811                    
     812 00004e20     c000          jruc    lmtalp
         00004e30     ff75  
     813                    
     814                    
     815                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     816 00004e40           bam_grab_toss_air
     817                    
     818              0028  mrhpTIMEOUT     .equ    40
     819                    
     820 00004e40           mrhplp0
     821 00004e40                   SLEEPK  1
     822 00004e80           mrhplp
     823 00004e80     576b          clr     a11
     824                    
     825 00004e90                   WAITSWITCH_DWN  J_AWAY,0,mrhplp
     826                    
     827 00004ff0     09cb          movi    mrhpTIMEOUT,a11
         00005000     0028  
     828                    
     829 00005010                   WAITSWITCH_DWN  J_AWAY,0,mrhplp
     830 00005170                   WAITSWITCH_DWN  B_PUNCH,J_ALL,mrhplp
     831                    
     832 000052d0     b500          move    *a8(ANIMODE),a0
         000052e0     0660  
     833 000052f0     1fa0          btst    MODE_UNINT_BIT,a0
     834 00005300     cbb7          jrnz    mrhplp
     835                    
     836 00005310     b500          move    *a8(PLYRMODE),a0
         00005320     05c0  
     837 00005330     0b40          cmpi    MODE_HEADHOLD,a0
         00005340     ffef  
     838 00005350     caae          jreq    mrhplp0
     839                    
     840 00005360                   SWAP    a8,a13
     841 00005390     0d5f          calla   get_opp_plyrmode
         000053a0 00000000! 
     842 000053c0                   SWAP    a8,a13
     843 000053f0     0b40          cmpi    MODE_ONGROUND,a0
         00005400     fffb  
     844 00005410     caa6          jrz     mrhplp
     845 00005420     0b40          cmpi    MODE_DEAD,a0
         00005430     fff6  
     846 00005440     caa3          jrz     mrhplp
     847 00005450     0b40          cmpi    MODE_INAIR,a0
         00005460     fffd  
     848 00005470     ca39          jrz     mrhpdoit2
     849 00005480     0b40          cmpi    MODE_INAIR2,a0
         00005490     ffea  
     850 000054a0     ca36          jrz     mrhpdoit2
     851                    
     852 000054b0     b500          move    *a8(CLOSEST_NUM),a0
         000054c0     03a0  
     853 000054d0                   X32     a0
     854 000054e0     0b20          addi    process_ptrs,a0
         000054f0 00000000! 
     855 00005510     8600          move    *a0,a0,L
     856 00005520     b400          move    *a0(ATTACK_TYPE),a0
         00005530     05e0  
     857 00005540     0b40          cmpi    AT_LEAPING,a0
         00005550     ffc6  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

     858 00005560     ca2a          jrz     mrhpdoit2
     859                    
     860 00005570     b500          move    *a8(CLOSEST_DIST),a0
         00005580     0360  
     861 00005590     0b40          cmpi    68h,a0
         000055a0     ff97  
     862 000055b0     c78c          jrgt    mrhplp
     863                    
     864 000055c0     09ee          movi    bam_3_hiptoss_anim,a14
         000055d0 00000000! 
     865 000055f0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005600     0930  
     866                    
     867 00005610                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
     868                    
     869 000057b0                   SLEEPK  20
     870 000057f0     c000          jruc    mrhplp
         00005800     ff67  
     871                    
     872 00005810     09ee  mrhpdoit2       movi    bam_3_hiptoss2_anim,a14
         00005820 00000000! 
     873 00005840     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005850     0930  
     874                    
     875 00005860                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
     876                    
     877 00005a00                   SLEEPK  20
     878 00005a40     c000          jruc    mrhplp
         00005a50     ff42  
     879                    
     880                    
     881 00005a60            SUBR   bam_ani_init
     882                    
     883 00005a60     b5a0          move    *a13(FACING_DIR),a0
         00005a70     04c0  
     884 00005a80     1f80          btst    PLAYER_RIGHT_BIT,a0
     885 00005a90     cb18          jrnz    ujhcp1
     886 00005aa0     09e0          movi    bam_stand4_anim,a0
         00005ab0 00000000! 
     887 00005ad0     0d5f          calla   change_anim1a
         00005ae0 00000000! 
     888                    
     889 00005b00     09e0          movi    bam_torso4_anim,a0
         00005b10 00000000! 
     890 00005b30     0d5f          calla   change_anim2a
         00005b40 00000000! 
     891                    
     892 00005b60                   PUSH    a10
     893 00005b70     4daa          move    a13,a10
     894 00005b80                   CREATE  TAUNT_PID,do_taunt
     895 00005c00                   PULL    a10
     896                    
     897 00005c10     0960          rets
     898                    
     899 00005c20           ujhcp1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     900 00005c20     09e0          movi    bam_stand2_anim,a0
         00005c30 00000000! 
     901 00005c50     0d5f          calla   change_anim1a
         00005c60 00000000! 
     902                    
     903 00005c80     09e0          movi    bam_torso2_anim,a0
         00005c90 00000000! 
     904 00005cb0     0d5f          calla   change_anim2a
         00005cc0 00000000! 
     905                    
     906 00005ce0     0960          rets
     907                    
     908                    
     909                    
     910 00005cf0            SUBR   move_bam
     911                    
     912 00005cf0     09eb          movi    bam_secret_moves,a11
         00005d00 00000000' 
     913 00005d20     0d5f          calla   check_secret_moves
         00005d30 00000000! 
     914                    
     915 00005d50     b5a0          move    *a13(PLYRMODE),a0
         00005d60     05c0  
     916 00005d70     24a0          sll     5,a0                    ;x 32
     917 00005d80     0b20          addi    svutmode_table,a0
         00005d90 00005de0' 
     918 00005db0     8600          move    *a0,a0,L
     919 00005dc0     0920          call    a0
     920 00005dd0     0960          rets
     921                    
     922 00005de0           svutmode_table
     923 00005de0 00006120'         .long   mode_normal             ;0
     924 00005e00 0000d2e0'         .long   mode_running            ;1
     925 00005e20 0000f760'         .long   mode_inair              ;2
     926 00005e40 0000f770'         .long   mode_attached           ;3
     927 00005e60 0000f8e0'         .long   mode_onground           ;4
     928 00005e80 0000f8f0'         .long   mode_bouncing           ;5
     929 00005ea0 0000fb90'         .long   mode_onturnbkl          ;6
     930 00005ec0 00010530'         .long   mode_block              ;7
     931 00005ee0 00010fb0'         .long   mode_dizzy              ;8
     932 00005f00 00000000!         .long   mode_dead               ;9
     933 00005f20 00010fc0'         .long   mode_oppoverhead        ;10
     934 00005f40 00011e10'         .long   mode_climbturnbkl       ;11
     935 00005f60 00011e20'         .long   mode_waitanim           ;12
     936 00005f80 00011ea0'         .long   mode_grapple            ;13
     937 00005fa0 00011eb0'         .long   mode_master             ;14
     938 00005fc0 00011ef0'         .long   mode_slave              ;15
     939 00005fe0 00011f00'         .long   mode_headhold           ;16
     940 00006000 00013330'         .long   mode_puppet2            ;17
     941 00006020 00006120'         .long   mode_normal     ;18
     942 00006040 00013340'         .long   mode_headheld           ;19
     943 00006060 00000000!         .long   mode_puppet             ;20
     944 00006080 00000000!         .long   mode_inair2             ;21
     945 000060a0 00006120'         .long   mode_normal     ;22
     946 000060c0 00006120'         .long   mode_normal     ;23
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     947 000060e0 00013800'         .long   mode_chokehold          ;24
     948 00006100 00000000!         .long   mode_choking            ;25
     949                    
     950                    
     951                    
     952 00006120           mode_normal
     953                    
     954 00006120     b5a0          move    *a13(ANIMODE),a0
         00006130     0660  
     955 00006140     1fa0          btst    MODE_UNINT_BIT,a0
     956 00006150     cb00          jrnz    yhkuno_interrupt
         00006160     00b0  
     957                    
     958 00006170     b5a0          move    *a13(I_WILL_DIE),a0
         00006180     0b30  
     959 00006190     ca1f          jrz     yhkunope
     960 000061a0     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         000061b0     0ae0  
     961 000061c0     cb1c          jrnz    yhkunope
     962 000061d0     09e0          movi    bam_fall_back_anim,a0
         000061e0 00000000! 
     963 00006200     0d5f          calla   change_anim1a
         00006210 00000000! 
     964                    
     965 00006230     09c0          movi    -10,a0
         00006240     fff6  
     966 00006250     b5a1          move    *a13(PLYRNUM),a1
         00006260     0580  
     967 00006270     0d5f          calla   adjust_health
         00006280 00000000! 
     968                    
     969 000062a0                   SETMODE DEAD
     970                    
     971 00006350     5600          clr     a0
     972 00006360     b00d          move    a0,*a13(I_WILL_DIE)
         00006370     0b30  
     973                    
     974 00006380     0960          rets
     975                    
     976 00006390           yhkunope
     977                    
     978                    
     979 00006390     0d5f          calla   get_opp_plyrmode
         000063a0 00000000! 
     980 000063c0     0b40          cmpi    MODE_DEAD,a0
         000063d0     fff6  
     981 000063e0     cb49          jrne    yhkuopp_not_dead
     982                    
     983                            ;if closest is a zombie, skip pin section.
     984 000063f0     0d5f          calla   get_opp_process
         00006400 00000000! 
     985 00006420     b40e          move    *a0(STATUS_FLAGS),a14
         00006430     0b50  
     986 00006440     1f8e          btst    B_ZOMBIE,a14
     987 00006450     cb42          jrnz    yhkuopp_not_dead
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

     988                            
     989                            ;all opponents are dead.  Check for pins/raisearms
     990                    
     991                            ;if we're attached to someone, don't interrupt it.
     992 00006460     b7a1          move    *a13(ATTACH_PROC),a1,L
         00006470     03e0  
     993 00006480     ca04          jrz     yhkuno_attch
     994 00006490     b622          move    *a1(ATTACH_PROC),a2,L
         000064a0     03e0  
     995 000064b0     484d          cmp     a2,a13
     996 000064c0     ca3b          jreq    yhkuno_pin_yet
     997 000064d0           yhkuno_attch
     998                    
     999                            ;if a teammate has pinned, raise yer arm.
    1000 000064d0     0d5f          calla   ck_teammate_pin 
         000064e0 00000000! 
    1001 00006500     c823          jrc     yhkuraisearm
    1002                    
    1003                            ;nobody has pinned.  if we're outside or all our opponents are
    1004                            ; outside, do a raisearm.
    1005 00006510     0d5f          calla   raisearm_check
         00006520 00000000! 
    1006 00006540     c81f          jrc     yhkuraisearm
    1007                    
    1008                            ;we're inside with a pinnable opponent.  any button pins.
    1009 00006550     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006560     0b90  
    1010 00006570     ca30          jrz     yhkuno_pin_yet
    1011                    
    1012                            ;we have a press -- make sure opponent is on the ground
    1013 00006580     0d5f          calla   can_pin
         00006590 00000000! 
    1014 000065b0     c92c          jrnc    yhkuopp_notgnd
    1015                    
    1016                            ;opponent is on the ground.  pin him.
    1017 000065c0                   FACE24  bam,pin_anim
    1018 00006660     0d5f          calla   change_anim1a
         00006670 00000000! 
    1019                    
    1020                            ;set the 'I did a pin' flag.
    1021 00006690     b5ae          move    *a13(STATUS_FLAGS),a14
         000066a0     0b50  
    1022 000066b0     0bae          ori     M_DID_PIN,a14
         000066c0 00000002  
    1023 000066e0     b1cd          move    a14,*a13(STATUS_FLAGS)
         000066f0     0b50  
    1024                    
    1025                            ;if we're a temp drone for auto-pin purposes, turn back into
    1026                            ; a normal player here.
    1027 00006700     0d5f          calla   drone_change_back
         00006710 00000000! 
    1028                    
    1029 00006730     0960          rets
    1030                    
    1031 00006740           yhkuraisearm
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1032 00006740                   FACE24  bam,raise_arm_anim
    1033 000067e0     0d5f          calla   change_anim1a
         000067f0 00000000! 
    1034 00006810     0d5f          calla   set_raisearm_bit
         00006820 00000000! 
    1035                    
    1036                            ;if we're a temp drone for auto-pin purposes, turn back into
    1037                            ; a normal player here.
    1038 00006840     0d5f          calla   drone_change_back
         00006850 00000000! 
    1039                    
    1040 00006870     0960          rets
    1041                    
    1042 00006880           yhkutoo_far_to_pin
    1043 00006880           yhkuopp_notgnd
    1044 00006880           yhkuopp_not_dead
    1045 00006880           yhkuno_pin_yet
    1046                    
    1047 00006880     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006890     0ae0  
    1048 000068a0     cb36          jrnz    yhkuimmobilized
    1049                    
    1050 000068b0     b5a0          move    *a13(BUT_VAL_CUR),a0
         000068c0     0b90  
    1051 000068d0     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1052 000068e0     ca07          jrz     yhkunblk                        ;1 for down transitions
    1053 000068f0     0d3f          callr   yhkublock                       ;& 1 for current buttons
         00006900     01e8  
    1054 00006910     c804          jrc     yhkunblk
    1055 00006920     5600          clr     a0
    1056 00006930     b00d          move    a0,*a13(ATTACK_TYPE)
         00006940     05e0  
    1057 00006950     0960          rets
    1058 00006960           yhkunblk
    1059 00006960     b5a0          move    *a13(BUT_VAL_CUR),a0
         00006970     0b90  
    1060 00006980     0b80          andi    011111b,a0
         00006990 ffffffe0  
    1061 000069b0     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         000069c0     fff6  
    1062 000069d0     ca00          jrz     yhkupunchkick
         000069e0     0542  
    1063                    
    1064 000069f0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00006a00     0ba0  
    1065 00006a10     0b80          andi    011111b,a0
         00006a20 ffffffe0  
    1066 00006a40                   X32     a0
    1067 00006a50     0b20          addi    yhkuaction_table,a0
         00006a60 00006c80' 
    1068 00006a80     8600          move    *a0,a0,L
    1069 00006a90     0920          call    a0
    1070                    
    1071 00006aa0     b5a0          move    *a13(ANIMODE),a0
         00006ab0     0660  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

    1072 00006ac0     1fa0          btst    MODE_UNINT_BIT,a0
    1073 00006ad0     cb19          jrnz    yhkuno_interrupt
    1074                    
    1075                    
    1076 00006ae0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00006af0     0bc0  
    1077 00006b00     b00d          move    a0,*a13(MOVE_DIR)
         00006b10     04b0  
    1078 00006b20     0d5f          calla   climb_turnbuckle
         00006b30 00000000! 
    1079 00006b50     c90e          jrnc    yhkuno_climb
    1080 00006b60     b5a5          move    *a13(WRESTLERNUM),A5
         00006b70     0590  
    1081 00006b80     09e2          MOVI    CLIMB_ROPES,A2
         00006b90 00000000! 
    1082 00006bb0     09c0          MOVI    1000,A0
         00006bc0     03e8  
    1083 00006bd0     0d5f          CALLA   ADD_IF_SILENT
         00006be0 00000000! 
    1084 00006c00     0960          rets
    1085                    
    1086 00006c10           yhkuimmobilized
    1087 00006c10     57ce          clr     a14
    1088 00006c20     b1cd          move    a14,*a13(MOVE_DIR)
         00006c30     04b0  
    1089 00006c40           yhkuno_climb
    1090 00006c40     0d5f          calla   execute_walk
         00006c50 00000000! 
    1091                    
    1092 00006c70           yhkuno_interrupt
    1093 00006c70     0960          rets
    1094                    
    1095 00006c80           yhkuaction_table
    1096 00006c80 00007080'         .long   yhkuz,yhkupunch,yhkublock,yhkublock                     ;0-3
    1097 00006d00 00008970'         .long   yhkusuper_punch,yhkusuper_punch,yhkublock,yhkublock     ;4-7
    1098 00006d80 0000a510'         .long   yhkukick,yhkupunchkick,yhkublock,yhkublock              ;8-11
    1099 00006e00 00008970'         .long   yhkusuper_punch,yhkupunchkick,yhkublock,yhkublock       ;12-15
    1100 00006e80 0000be80'         .long   yhkusuper_kick,yhkusuper_kick,yhkublock,yhkublock       ;16-19
    1101 00006f00 0000d0d0'         .long   yhkugraboh,yhkugraboh,yhkublock,yhkublock               ;20-23
    1102 00006f80 0000be80'         .long   yhkusuper_kick,yhkupunchkick,yhkublock,yhkublock        ;24-27
    1103 00007000 0000d0d0'         .long   yhkugraboh,yhkugraboh,yhkublock,yhkublock               ;28-31
    1104                    
    1105 00007080           yhkuz           ;0
    1106                    
    1107 00007080     0960          rets
    1108                    
    1109                    
    1110 00007090           yhkupunch               ;1
    1111 00007090                   JJXM_INIT
    1112 00007100                   JJXM    NORMAL,          50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1113 000071d0                   JJXM    DIZZY,           50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1114 000072a0                   JJXM    BLOCK,           50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1115 00007370                   JJXM    ONGROUND,       160,140,yhkupunch_lbowdrop,yhkupunch_punch
    1116 00007440                   JJXM    RUNNING,         50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1117 00007510                   JJXM    BOUNCING,        50, 45,yhkupunch_hdbutt,yhkupunch_punch
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1118 000075e0                   JJXM    ONTURNBKL,              yhkupunch_punch
    1119 00007630                   JJXM    CLIMBTURNBKL,           yhkupunch_punch
    1120 00007680                   JJXM    INAIR,           50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1121 00007750                   JJXM    ATTACHED,        50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1122 00007820                   JJXM    DEAD,           160,140,yhkupunch_lbowdrop,yhkupunch_punch
    1123 000078d0                   JJXM    OPPOVERHEAD,     50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1124 00007980                   JJXM    WAITANIM,        50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1125 00007a30                   JJXM    GRAPPLE,         50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1126 00007ad0                   JJXM    MASTER,          50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1127 00007b70                   JJXM    SLAVE,           50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1128 00007c10                   JJXM    HEADHOLD,        50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1129 00007cb0                   JJXM    HEADHELD,        50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1130 00007d50                   JJXM    CHOKEHOLD,       50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1131 00007df0                   JJXM    PUPPET,          50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1132 00007e90                   JJXM    PUPPET2,         50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1133 00007f30                   JJXM    INAIR2,          50, 45,yhkupunch_hdbutt,yhkupunch_punch
    1134 00007fd0                   JJXM_END
    1135                    
    1136                    
    1137 00007ff0           yhkupunch_rets
    1138 00007ff0     0960          rets
    1139                    
    1140 00008000           yhkupunch_punch
    1141 00008000           std_punch
    1142                    
    1143 00008000                   FACE24  bam,punch_anim
    1144 000080a0     0d5f          calla   change_anim1a
         000080b0 00000000! 
    1145                    
    1146 000080d0                   WRSND   W_BAMBAM,PUNCH_T1,PUNCH_T2
    1147 00008270     0960          rets
    1148                    
    1149 00008280           yhkupunch_hdbutt
    1150                    
    1151 00008280                   FACE24  bam,butt_anim
    1152 00008320     0d5f          calla   change_anim1a
         00008330 00000000! 
    1153                    
    1154 00008350                   WRSND   W_BAMBAM,HDBUTT_T1,HDBUTT_T2
    1155 000084f0     0960          rets
    1156                    
    1157 00008500           yhkupunch_lbowdrop
    1158                    
    1159 00008500                   FACE24  bam,lbowdrop_anim
    1160 000085a0     0d5f          calla   change_anim1a
         000085b0 00000000! 
    1161                    
    1162 000085d0                   WRSND   W_BAMBAM,LBOWDROP_T1,LBOWDROP_T2
    1163 00008770     0960          rets
    1164                    
    1165                    
    1166 00008780     0960          rets
    1167                    
    1168 00008790           yhkublock               ;2
    1169 00008790           std_block
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1170 00008790     05a0          move    @blocking_off,a0
         000087a0 00000000! 
    1171 000087c0     cb18          jrnz    yhkuno_blocking
    1172                    
    1173 000087d0                   RND_AWARD       a13,BLOCKS_AWD
    1174                    
    1175 00008870     09e0          movi    bam_4_block_anim,a0
         00008880 00000000! 
    1176 000088a0     0d5f          calla   change_anim1
         000088b0 00000000! 
    1177                    
    1178 000088d0     0d5f          calla   BLOCK_WOOSH
         000088e0 00000000! 
    1179                    
    1180 00008900     5600          clr     a0
    1181 00008910     b00d          move    a0,*a13(BLOCK_TIME)
         00008920     0d30  
    1182 00008930     0320          clrc
    1183 00008940     0960          rets
    1184                    
    1185 00008950           yhkuno_blocking
    1186 00008950     0de0          setc
    1187 00008960     0960          rets
    1188                    
    1189                    
    1190 00008970           yhkusuper_punch ;4
    1191 00008970                   JJXM_INIT
    1192 000089e0                   JJXM    NORMAL,          90, 55,yhkuspunch_special,yhkuspunch_jump
    1193 00008ab0                   JJXM    DIZZY,           90, 55,yhkuspunch_special,yhkuspunch_jump
    1194 00008b80                   JJXM    BLOCK,           90, 55,yhkuspunch_special,yhkuspunch_jump
    1195 00008c50                   JJXM    ONGROUND,       160,140,yhkuspunch_lbowdrop,std_punch
    1196 00008d20                   JJXM    RUNNING,         90, 55,yhkuspunch_special,yhkuspunch_jump
    1197 00008df0                   JJXM    BOUNCING,        90, 55,yhkuspunch_special,yhkuspunch_jump
    1198 00008ec0                   JJXM    ONTURNBKL,              yhkuspunch_jump
    1199 00008f10                   JJXM    CLIMBTURNBKL,           std_punch
    1200 00008f60                   JJXM    INAIR,           90, 55,yhkuspunch_special,yhkuspunch_jump
    1201 00009030                   JJXM    ATTACHED,        85, 55,yhkuspunch_special,yhkuspunch_jump
    1202 000090f0                   JJXM    DEAD,            160,140,yhkuspunch_lbowdrop,std_punch
    1203 000091c0                   JJXM    OPPOVERHEAD,     90, 55,yhkuspunch_special,yhkuspunch_jump
    1204 00009270                   JJXM    WAITANIM,        90, 55,yhkuspunch_special,yhkuspunch_jump
    1205 00009320                   JJXM    GRAPPLE,         90, 55,yhkuspunch_special,yhkuspunch_jump
    1206 000093c0                   JJXM    MASTER,          90, 55,yhkuspunch_special,yhkuspunch_jump
    1207 00009460                   JJXM    SLAVE,           90, 55,yhkuspunch_special,yhkuspunch_jump
    1208 00009500                   JJXM    HEADHOLD,        90, 55,yhkuspunch_special,yhkuspunch_jump
    1209 000095a0                   JJXM    HEADHELD,               do_pile                         ;19
    1210 000095f0                   JJXM    CHOKEHOLD,       90, 55,yhkuspunch_special,yhkuspunch_jump
    1211 00009690                   JJXM    PUPPET,          90, 45,yhkuspunch_special,yhkuspunch_jump
    1212 00009730                   JJXM    PUPPET2,         90, 45,yhkuspunch_special,yhkuspunch_jump
    1213 000097d0                   JJXM    INAIR2,          90, 45,yhkuspunch_special,yhkuspunch_jump
    1214 00009870                   JJXM_END
    1215                    
    1216 00009890           yhkuspunch_rets
    1217 00009890     0960          rets
    1218                    
    1219 000098a0           yhkuspunch_jump
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1220 000098a0                   FACE24  bam,slap_anim
    1221 00009940     0d5f          calla   change_anim1a
         00009950 00000000! 
    1222                    
    1223 00009970                   WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
    1224                    
    1225 00009b10     0960          rets
    1226                    
    1227 00009b20           yhkuspunch_special
    1228                    
    1229 00009b20     b5a1          move    *a13(CLOSEST_XDIST),a1
         00009b30     0370  
    1230 00009b40     0b41          cmpi    55,a1
         00009b50     ffc8  
    1231 00009b60     c7d3          jrgt    yhkuspunch_jump
    1232 00009b70                   FACE24  bam,butts_anim
    1233 00009c10     0d5f          calla   change_anim1a
         00009c20 00000000! 
    1234                    
    1235 00009c40                   WRSND   W_BAMBAM,HDBUTT_T1,HDBUTT_T2
    1236 00009de0     0960          rets
    1237                    
    1238 00009df0           yhkuspunch_lbowdrop
    1239                     
    1240                    
    1241                    
    1242 00009df0     b5ae          move    *a13(CLOSEST_NUM),a14
         00009e00     03a0  
    1243 00009e10                   X32     a14
    1244 00009e20     0b2e          addi    process_ptrs,a14
         00009e30 00000000! 
    1245 00009e50     87ce          move    *a14,a14,L
    1246 00009e60     b5c2          move    *a14(PLYRMODE),a2
         00009e70     05c0  
    1247 00009e80     0b42          cmpi    MODE_DEAD,a2
         00009e90     fff6  
    1248 00009ea0     ca3e          jrz     yhkuno
    1249 00009eb0     b7a1          move    *a13(OBJ_XPOS),a1,L 
         00009ec0     0100  
    1250 00009ed0     b7c2          move    *a14(OBJ_XPOS),a2,L
         00009ee0     0100  
    1251 00009ef0     4441          sub     a2,a1
    1252 00009f00     0381          abs     a1
    1253 00009f10     2e01          srl     16,a1
    1254 00009f20     0b41          cmpi    20h,a1  ;28
         00009f30     ffdf  
    1255 00009f40     c434          jrlt    yhkuno
    1256                    
    1257                    
    1258 00009f50     b5ce          move    *a14(OBJ_CONTROL),a14
         00009f60     0780  
    1259 00009f70     0b8e          andi    M_FLIPH,a14
         00009f80 ffffffef  
    1260 00009fa0     b5a0          move    *a13(OBJ_CONTROL),a0
         00009fb0     0780  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1261 00009fc0     0b80          andi    M_FLIPH,a0
         00009fd0 ffffffef  
    1262 00009ff0     480e          cmp     a0,a14
    1263 0000a000     ca28          jrz     yhkuno
    1264                    
    1265                    
    1266 0000a010                   FACE24  bam,hair_pickup_anim
    1267 0000a0b0     0d5f          calla   change_anim1
         0000a0c0 00000000! 
    1268 0000a0e0                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1269 0000a280     0960          rets
    1270                    
    1271 0000a290           yhkuno
    1272 0000a290                   FACE24  bam,lbowdrop_anim
    1273 0000a330     0d5f          calla   change_anim1a
         0000a340 00000000! 
    1274                    
    1275 0000a360                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1276                    
    1277 0000a500     0960          rets
    1278                    
    1279                    
    1280 0000a510           yhkukick                ;8
    1281 0000a510                   JJXM_INIT
    1282 0000a580                   JJXM    NORMAL,          60, 92,yhkukick_knee,yhkukick_kick
    1283 0000a650                   JJXM    DIZZY,           60, 92,yhkukick_knee,yhkukick_kick
    1284 0000a720                   JJXM    BLOCK,           60, 92,yhkukick_knee,yhkukick_kick
    1285 0000a7f0                   JJXM    ONGROUND,       160,140,yhkukick_stomp,yhkukick_kick
    1286 0000a8c0                   JJXM    RUNNING,         60, 92,yhkukick_knee,yhkukick_kick
    1287 0000a990                   JJXM    BOUNCING,        60, 92,yhkukick_knee,yhkukick_kick
    1288 0000aa60                   JJXM    ONTURNBKL,              yhkukick_kick
    1289 0000aab0                   JJXM    CLIMBTURNBKL,           yhkukick_kick
    1290 0000ab00                   JJXM    INAIR,           60, 92,yhkukick_knee,yhkukick_kick
    1291 0000abd0                   JJXM    ATTACHED,        60, 92,yhkukick_knee,yhkukick_kick
    1292 0000aca0                   JJXM    DEAD,           160,140,yhkukick_stomp,yhkukick_kick
    1293 0000ad70                   JJXM    OPPOVERHEAD,     60, 92,yhkukick_knee,yhkukick_kick
    1294 0000ae40                   JJXM    WAITANIM,        60, 92,yhkukick_knee,yhkukick_kick
    1295 0000aef0                   JJXM    GRAPPLE,         60, 92,yhkukick_knee,yhkukick_kick
    1296 0000afa0                   JJXM    MASTER,          60, 92,yhkukick_knee,yhkukick_kick
    1297 0000b050                   JJXM    SLAVE,           60, 92,yhkukick_knee,yhkukick_kick
    1298 0000b100                   JJXM    HEADHOLD,        60, 92,yhkukick_knee,yhkukick_kick
    1299 0000b1a0                   JJXM    HEADHELD,        60, 92,yhkukick_knee,yhkukick_kick
    1300 0000b240                   JJXM    CHOKEHOLD,       60, 92,yhkukick_knee,yhkukick_kick
    1301 0000b2e0                   JJXM    PUPPET,          60, 92,yhkukick_knee,yhkukick_kick
    1302 0000b380                   JJXM    PUPPET2,         60, 92,yhkukick_knee,yhkukick_kick
    1303 0000b420                   JJXM    INAIR2,                 yhkukick_TB
    1304 0000b460                   JJXM_END
    1305                    
    1306                    
    1307 0000b480           yhkukick_TB
    1308                    
    1309                            .ref    bam_kick_TB_anim
    1310 0000b480     09e0          movi    bam_kick_TB_anim,a0
         0000b490 00000000! 
    1311 0000b4b0     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

         0000b4c0 00000000! 
    1312                    
    1313 0000b4e0                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1314 0000b680     0960          rets
    1315                    
    1316 0000b690           yhkukick_kick
    1317 0000b690           std_kick
    1318                    
    1319 0000b690                   FACE24  bam,kick_anim
    1320 0000b730     0d5f          calla   change_anim1a
         0000b740 00000000! 
    1321                    
    1322 0000b760                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1323 0000b900     0960          rets
    1324                    
    1325 0000b910           yhkukick_knee
    1326 0000b910           std_knee
    1327                    
    1328 0000b910                   FACE24  bam,knee_anim
    1329 0000b9b0     0d5f          calla   change_anim1a
         0000b9c0 00000000! 
    1330                    
    1331 0000b9e0                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1332 0000bb80     0960          rets
    1333                    
    1334 0000bb90           yhkukick_stomp
    1335 0000bb90           attack_stomp
    1336                    
    1337 0000bb90                   FACE24  bam,stomp_anim
    1338 0000bc30     0d5f          calla   change_anim1a
         0000bc40 00000000! 
    1339                    
    1340 0000bc60                   WRSND   W_BAMBAM,KICK_T1,KICK_T2
    1341                    
    1342 0000be00     0960          rets
    1343                    
    1344                    
    1345 0000be10           yhkupunchkick   ;9
    1346                    
    1347 0000be10     09e0          movi    start_run_anim,a0
         0000be20 00000000! 
    1348 0000be40     0d5f          calla   change_anim1a
         0000be50 00000000! 
    1349                    
    1350 0000be70     0960          rets
    1351                    
    1352 0000be80           yhkusuper_kick  ;16
    1353 0000be80                   JJXM_INIT
    1354 0000bef0                   JJXM    NORMAL,          60, 60,yhkuskick_special,yhkuskick_kick
    1355 0000bfc0                   JJXM    DIZZY,           60, 60,yhkuskick_special,yhkuskick_kick
    1356 0000c090                   JJXM    BLOCK,           60, 60,yhkuskick_special,yhkuskick_kick
    1357 0000c160                   JJXM    ONGROUND,       160,140,attack_stomp,std_kick
    1358 0000c220                   JJXM    RUNNING,         60, 60,yhkuskick_special,yhkuskick_kick
    1359 0000c2f0                   JJXM    BOUNCING,        60, 60,yhkuskick_special,yhkuskick_kick
    1360 0000c3c0                   JJXM    ONTURNBKL,       60, 96,yhkuskick_kick,std_kick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1361 0000c490                   JJXM    CLIMBTURNBKL,    60, 96,yhkuskick_kick,std_kick
    1362 0000c560                   JJXM    INAIR,           60, 60,yhkuskick_special,yhkuskick_kick
    1363 0000c630                   JJXM    ATTACHED,        60, 60,yhkuskick_special,yhkuskick_kick
    1364 0000c6d0                   JJXM    DEAD,           160,140,attack_stomp,std_kick
    1365 0000c7a0                   JJXM    OPPOVERHEAD,     60, 60,yhkuskick_special,yhkuskick_kick
    1366 0000c840                   JJXM    WAITANIM,        60, 60,yhkuskick_special,yhkuskick_kick
    1367 0000c8e0                   JJXM    GRAPPLE,         60, 60,yhkuskick_special,yhkuskick_kick
    1368 0000c980                   JJXM    MASTER,          60, 60,yhkuskick_special,yhkuskick_kick
    1369 0000ca20                   JJXM    SLAVE,           60, 60,yhkuskick_special,yhkuskick_kick
    1370 0000cac0                   JJXM    HEADHOLD,        60, 60,yhkuskick_special,yhkuskick_kick
    1371 0000cb60                   JJXM    HEADHELD,        60, 60,yhkuskick_special,yhkuskick_kick
    1372 0000cc00                   JJXM    CHOKEHOLD,       60, 60,yhkuskick_special,yhkuskick_kick
    1373 0000cca0                   JJXM    PUPPET,          60, 60,yhkuskick_special,yhkuskick_kick
    1374 0000cd40                   JJXM    PUPPET2,         60, 60,yhkuskick_special,yhkuskick_kick
    1375 0000cde0                   JJXM    INAIR2,                 yhkukick_TB
    1376 0000ce30                   JJXM_END
    1377                    
    1378 0000ce50           yhkuskick_special
    1379 0000ce50           yhkuskick_kick
    1380                    
    1381 0000ce50                   FACE24  bam,superkick_anim
    1382 0000cef0     0d5f          calla   change_anim1a
         0000cf00 00000000! 
    1383                    
    1384 0000cf20                   WRSND   W_BAMBAM,SPUNCH_T1,SPUNCH_T2
    1385                    
    1386 0000d0c0     0960          rets
    1387                    
    1388                    
    1389                    
    1390 0000d0d0           yhkugraboh              ;8
    1391                    
    1392                    
    1393 0000d0d0     09e0          movi    bam_4_graboh_anim,a0
         0000d0e0 00000000! 
    1394 0000d100     0d5f          calla   change_anim1a
         0000d110 00000000! 
    1395                    
    1396 0000d130                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    1397                    
    1398 0000d2d0     0960          rets
    1399                    
    1400                    
    1401                    
    1402          00064000  zcqaXRUN_VAL    equ     BAM_XRUN
    1403          00020000  zcqaZDRIFT_VAL  equ     BAM_ZDRIFT
    1404                    
    1405 0000d2e0           mode_running
    1406                    
    1407 0000d2e0     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         0000d2f0     07b0  
    1408 0000d300     1020          addk    1,a0
    1409 0000d310     b00d          move    a0,*a13(RUN_TIME)
         0000d320     07b0  
    1410                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1411 0000d330     b5a0          move    *a13(USR_VAR1),a0
         0000d340     0850  
    1412 0000d350     cb11          jrnz    zcqano_vel
    1413                    
    1414 0000d360     0d5f          calla   bounce_off_ropes
         0000d370 00000000! 
    1415                    
    1416 0000d390     09e0          movi    zcqaXRUN_VAL,a0
         0000d3a0 00064000  
    1417 0000d3c0     b5ae          move    *a13(MOVE_DIR),a14
         0000d3d0     04b0  
    1418 0000d3e0     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1419 0000d3f0     cb01          jrnz    zcqapos
    1420 0000d400     03a0          neg     a0
    1421 0000d410           zcqapos
    1422 0000d410     05ae          move    @hyper_speed_on,a14
         0000d420 00000000! 
    1423 0000d440     63c0          sll     a14,a0
    1424 0000d450     b20d          move    a0,*a13(OBJ_XVEL),L
         0000d460     02d0  
    1425                    
    1426 0000d470           zcqano_vel
    1427                    
    1428 0000d470     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         0000d480     0460  
    1429 0000d490     cb38          jrnz    zcqaout_of_control
    1430                    
    1431 0000d4a0     b5a0          move    *a13(ANIMODE),a0
         0000d4b0     0660  
    1432 0000d4c0     1fa0          btst    MODE_UNINT_BIT,a0
    1433 0000d4d0     cb16          jrnz    zcqano_interrupt
    1434                    
    1435 0000d4e0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d4f0     0bc0  
    1436 0000d500     b5a1          move    *a13(MOVE_DIR),a1
         0000d510     04b0  
    1437 0000d520     5401          or      a0,a1
    1438 0000d530     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         0000d540 fffffff3  
    1439 0000d560     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         0000d570     fff3  
    1440 0000d580     cb0b          jrne    zcqacontinue_run
    1441                    
    1442                            ;braking with stick.  abort run.
    1443                    
    1444 0000d590                   SETMODE NORMAL
    1445                    
    1446 0000d640           zcqacontinue_run
    1447 0000d640           zcqano_interrupt
    1448                    
    1449 0000d640     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d650     0bc0  
    1450 0000d660     5621          clr     a1
    1451                    
    1452 0000d670     09e1          movi    -zcqaZDRIFT_VAL,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

         0000d680 fffe0000  
    1453 0000d6a0     1fe0          btst    PLAYER_UP_BIT,a0
    1454 0000d6b0     cb06          jrnz    zcqasetvel
    1455                    
    1456 0000d6c0     09e1          movi    zcqaZDRIFT_VAL,a1
         0000d6d0 00020000  
    1457 0000d6f0     1fc0          btst    PLAYER_DOWN_BIT,a0
    1458 0000d700     cb01          jrnz    zcqasetvel
    1459                    
    1460 0000d710     5621          clr     a1
    1461 0000d720           zcqasetvel
    1462 0000d720     b22d          move    a1,*a13(OBJ_ZVEL),L
         0000d730     0310  
    1463                    
    1464 0000d740     b5a0          move    *a13(DELAY_BUTNS),a0
         0000d750     0ab0  
    1465 0000d760     cb0b          jrnz    zcqaout_of_control
    1466                    
    1467                    
    1468 0000d770     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000d780     0ba0  
    1469 0000d790     0b80          andi    011111b,a0
         0000d7a0 ffffffe0  
    1470 0000d7c0                   X32     a0
    1471 0000d7d0     0b20          addi    zcqaaction_table,a0
         0000d7e0 0000d830' 
    1472 0000d800     8600          move    *a0,a0,L
    1473 0000d810     0920          call    a0
    1474 0000d820           zcqaout_of_control
    1475 0000d820     0960          rets
    1476                    
    1477 0000d830           zcqaaction_table
    1478 0000d830 0000dc30'         .long   zcqaz,zcqapunch,zcqablock,zcqablock                     ;0-3
    1479 0000d8b0 0000dc40'         .long   zcqasuper_punch,zcqasuper_punch,zcqablock,zcqablock     ;4-7
    1480 0000d930 0000ed60'         .long   zcqakick,zcqapunchkick,zcqablock,zcqablock              ;8-11
    1481 0000d9b0 0000dc40'         .long   zcqasuper_punch,zcqapunchkick,zcqablock,zcqablock       ;12-15
    1482 0000da30 0000ed60'         .long   zcqasuper_kick,zcqasuper_kick,zcqablock,zcqablock       ;16-19
    1483 0000dab0 0000dc40'         .long   zcqagraboh,zcqagraboh,zcqablock,zcqablock               ;20-23
    1484 0000db30 0000ed60'         .long   zcqasuper_kick,zcqapunchkick,zcqablock,zcqablock        ;24-27
    1485 0000dbb0 0000dc40'         .long   zcqagraboh,zcqagraboh,zcqablock,zcqablock               ;28-31
    1486                    
    1487 0000dc30           zcqaz
    1488 0000dc30     0960          rets
    1489                    
    1490                    
    1491 0000dc40           zcqapunch               ;1
    1492 0000dc40           zcqasuper_punch ;4
    1493 0000dc40           zcqapunchkick
    1494 0000dc40           zcqagraboh
    1495 0000dc40                   JJXM_INIT
    1496 0000dcb0                   JJXM    NORMAL,                 zcqapunch_clothesline
    1497 0000dcf0                   JJXM    DIZZY,                  zcqapunch_clothesline
    1498 0000dd30                   JJXM    BLOCK,                  zcqapunch_clothesline
    1499 0000dd70                   JJXM    ONGROUND,       176,176,zcqapunch_bellyflop,zcqapunch_rets
    1500 0000de20                   JJXM    RUNNING,                zcqapunch_clothesline
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1501 0000de60                   JJXM    BOUNCING,               zcqapunch_clothesline
    1502 0000dea0                   JJXM    ONTURNBKL,              zcqapunch_clothesline
    1503 0000dee0                   JJXM    CLIMBTURNBKL,           zcqapunch_clothesline
    1504 0000df20                   JJXM    INAIR,                  zcqapunch_clothesline
    1505 0000df60                   JJXM    ATTACHED,               zcqapunch_clothesline
    1506 0000dfa0                   JJXM    DEAD,           176,176,zcqapunch_bellyflop,zcqapunch_rets
    1507 0000e050                   JJXM    OPPOVERHEAD,            zcqapunch_clothesline
    1508 0000e090                   JJXM    WAITANIM,               zcqapunch_clothesline
    1509 0000e0d0                   JJXM    GRAPPLE,                zcqapunch_clothesline
    1510 0000e110                   JJXM    MASTER,                 zcqapunch_clothesline
    1511 0000e150                   JJXM    SLAVE,                  zcqapunch_clothesline
    1512 0000e190                   JJXM    HEADHOLD,               zcqapunch_clothesline
    1513 0000e1d0                   JJXM    HEADHELD,               zcqapunch_clothesline
    1514 0000e210                   JJXM    CHOKEHOLD,              zcqapunch_clothesline
    1515 0000e250                   JJXM    PUPPET,                 zcqapunch_clothesline
    1516 0000e290                   JJXM    PUPPET2,                zcqapunch_clothesline
    1517 0000e2d0                   JJXM    INAIR2,                 zcqapunch_clothesline
    1518 0000e310                   JJXM_END
    1519                    
    1520                    
    1521 0000e330           zcqapunch_rets
    1522 0000e330     0960          rets
    1523                    
    1524 0000e340           zcqapunch_clothesline
    1525 0000e340     b5a1          move    *a13(MOVE_DIR),a1
         0000e350     04b0  
    1526 0000e360     1fa1          btst    MOVE_LEFT_BIT,a1
    1527 0000e370     cb06          jrnz    zcqalft
    1528                            
    1529 0000e380     b5a0          move    *a13(OBJ_XPOSINT),a0
         0000e390     0110  
    1530 0000e3a0     0b40          cmpi    RING_X_MID+70h,a0
         0000e3b0     fb8f  
    1531 0000e3c0     c407          jrlt    zcqaok
    1532                    
    1533                    
    1534 0000e3d0     0960          rets
    1535                    
    1536 0000e3e0           zcqalft
    1537                            
    1538 0000e3e0     b5a0          move    *a13(OBJ_XPOSINT),a0
         0000e3f0     0110  
    1539 0000e400     0b40          cmpi    RING_X_MID-70h,a0
         0000e410     fc6f  
    1540 0000e420     c701          jrgt    zcqaok
    1541                    
    1542                    
    1543 0000e430     0960          rets
    1544 0000e440           zcqaok
    1545 0000e440     b5a1          move    *a13(MOVE_DIR),a1
         0000e450     04b0  
    1546 0000e460     b5a0          move    *a13(NEW_FACING_DIR),a0 ;Current facing dir (9,10,6,5 only)
         0000e470     04d0  
    1547 0000e480     24a0          sll     5,a0
    1548 0000e490     0b20          addi    zcqamv_tbl,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

         0000e4a0 0000e7f0' 
    1549 0000e4c0     8600          move    *a0,a0,L
    1550 0000e4d0     4a01          btst    a0,a1
    1551 0000e4e0     ca01          jrz     zcqayes
    1552                    
    1553                    
    1554 0000e4f0     0960          rets
    1555 0000e500           zcqayes
    1556                    
    1557 0000e500     09e0          movi    bam_fly_cline_anim,a0
         0000e510 00000000! 
    1558 0000e530     0d5f          calla   change_anim1a
         0000e540 00000000! 
    1559                    
    1560 0000e560                   SETMODE INAIR
    1561                    
    1562 0000e610     5600          clr     a0
    1563 0000e620     b00d          move    a0,*a13(RUN_TIME)
         0000e630     07b0  
    1564                    
    1565 0000e640                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    1566                    
    1567 0000e7e0     0960          rets
    1568                    
    1569 0000e7f0 00000000  zcqamv_tbl      .long   0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
    1570 0000e8d0 00000000          .long   0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT
    1571                    
    1572                    
    1573 0000e950           zcqapunch_bellyflop
    1574 0000e950           attack_bellyflop
    1575                    
    1576 0000e950                   SETMODE INAIR
    1577                    
    1578 0000ea00     5600          clr     a0
    1579 0000ea10     b00d          move    a0,*a13(RUN_TIME)
         0000ea20     07b0  
    1580                    
    1581 0000ea30     09e0          movi    bam_3_butt_drop_anim,a0
         0000ea40 00000000! 
    1582 0000ea60     0d5f          calla   change_anim1a
         0000ea70 00000000! 
    1583 0000ea90                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    1584 0000ec30     0960          rets
    1585                    
    1586 0000ec40           zcqablock               ;2
    1587 0000ec40     b7a0          move    *a13(OBJ_XVEL),a0,L
         0000ec50     02d0  
    1588 0000ec60     2be0          sra     1,a0
    1589 0000ec70     b20d          move    a0,*a13(OBJ_XVEL),L
         0000ec80     02d0  
    1590 0000ec90                   SETMODE NORMAL
    1591 0000ed40     c000          jruc    std_block
         0000ed50     f9a3  
    1592                    
    1593 0000ed60           zcqakick                ;8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1594 0000ed60           zcqasuper_kick  ;16
    1595 0000ed60                   JJXM_INIT
    1596 0000edd0                   JJXM    NORMAL,                 zcqakick_flyingkick
    1597 0000ee10                   JJXM    DIZZY,                  zcqakick_flyingkick
    1598 0000ee50                   JJXM    BLOCK,                  zcqakick_flyingkick
    1599 0000ee90                   JJXM    ONGROUND,       176,176,attack_bellyflop,zcqakick_rets
    1600 0000ef30                   JJXM    RUNNING,                zcqakick_flyingkick
    1601 0000ef70                   JJXM    BOUNCING,               zcqakick_flyingkick
    1602 0000efb0                   JJXM    ONTURNBKL,              zcqakick_flyingkick
    1603 0000eff0                   JJXM    CLIMBTURNBKL,           zcqakick_flyingkick
    1604 0000f030                   JJXM    INAIR,                  zcqakick_flyingkick
    1605 0000f070                   JJXM    ATTACHED,               zcqakick_flyingkick
    1606 0000f0b0                   JJXM    DEAD,           176,176,attack_bellyflop,zcqakick_rets
    1607 0000f160                   JJXM    OPPOVERHEAD,            zcqakick_flyingkick
    1608 0000f1a0                   JJXM    WAITANIM,               zcqakick_flyingkick
    1609 0000f1e0                   JJXM    GRAPPLE,                zcqakick_flyingkick
    1610 0000f220                   JJXM    MASTER,                 zcqakick_flyingkick
    1611 0000f260                   JJXM    SLAVE,                  zcqakick_flyingkick
    1612 0000f2a0                   JJXM    HEADHOLD,               zcqakick_flyingkick
    1613 0000f2e0                   JJXM    HEADHELD,               zcqakick_flyingkick
    1614 0000f320                   JJXM    CHOKEHOLD,              zcqakick_flyingkick
    1615 0000f360                   JJXM    PUPPET,                 zcqakick_flyingkick
    1616 0000f3a0                   JJXM    PUPPET2,                zcqakick_flyingkick
    1617 0000f3e0                   JJXM    INAIR2,                 zcqakick_flyingkick
    1618 0000f420                   JJXM_END
    1619                    
    1620                    
    1621 0000f440           zcqakick_rets
    1622 0000f440     0960          rets
    1623                    
    1624 0000f450           zcqakick_flyingkick
    1625                    
    1626 0000f450     0d5f          calla   ck_ignore
         0000f460 00000000! 
    1627 0000f480     c800          jrc     zcqaz
         0000f490     fe79  
    1628                    
    1629 0000f4a0     09e0          movi    bam_flying_kick_anim,a0
         0000f4b0 00000000! 
    1630 0000f4d0     0d5f          calla   change_anim1a
         0000f4e0 00000000! 
    1631                    
    1632 0000f500                   SETMODE INAIR
    1633                    
    1634 0000f5b0                   WRSND   W_BAMBAM,FLYKICK_T1,FLYKICK_T2
    1635                    
    1636 0000f750     0960          rets
    1637                    
    1638                    
    1639                    
    1640 0000f760           mode_inair      ;2
    1641                    
    1642 0000f760     0960          rets
    1643                    
    1644                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1645 0000f770           mode_attached   ;3
    1646                    
    1647 0000f770     0d5f          calla   keep_attached
         0000f780 00000000! 
    1648 0000f7a0     cb12          jrnz    hmowstill_attached
    1649                    
    1650 0000f7b0     5600          clr     a0
    1651 0000f7c0     b20d          move    a0,*a13(ATTACH_PROC),L
         0000f7d0     03e0  
    1652                    
    1653 0000f7e0                   SETMODE NORMAL
    1654                    
    1655 0000f890     09c0          movi    MODE_NORMAL,a0
         0000f8a0     0000  
    1656 0000f8b0     b00d          move    a0,*a13(ANIMODE)
         0000f8c0     0660  
    1657                    
    1658 0000f8d0           hmowstill_attached
    1659 0000f8d0     0960          rets
    1660                    
    1661                    
    1662                    
    1663 0000f8e0           mode_onground   ;4
    1664                    
    1665 0000f8e0     0960          rets
    1666                    
    1667                    
    1668 0000f8f0           mode_bouncing   ;5
    1669                    
    1670 0000f8f0     5600          clr     a0
    1671 0000f900     b20d          move    a0,*a13(OBJ_XVEL),L
         0000f910     02d0  
    1672 0000f920     b20d          move    a0,*a13(OBJ_ZVEL),L
         0000f930     0310  
    1673                    
    1674 0000f940     b5a0          move    *a13(ANIMODE),a0
         0000f950     0660  
    1675 0000f960     1fe0          btst    MODE_END_BIT,a0
    1676 0000f970     ca20          jrz     oqhinot_ended
    1677                    
    1678 0000f980     b5a0          move    *a13(MOVE_DIR),a0
         0000f990     04b0  
    1679 0000f9a0     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         0000f9b0 0000000c  
    1680 0000f9d0     b00d          move    a0,*a13(MOVE_DIR)
         0000f9e0     04b0  
    1681                    
    1682 0000f9f0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000fa00     04d0  
    1683 0000fa10     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         0000fa20 fffffffc  
    1684 0000fa40     5401          or      a0,a1                   ;LEFT or RIGHT
    1685 0000fa50     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         0000fa60     04c0  
    1686                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1687 0000fa70     09e0          movi    bam_run2_anim,a0
         0000fa80 00000000! 
    1688 0000faa0     0d5f          calla   change_anim1a
         0000fab0 00000000! 
    1689                    
    1690 0000fad0                   SETMODE RUNNING
    1691                    
    1692                    
    1693 0000fb80           oqhinot_ended
    1694 0000fb80     0960          rets
    1695                    
    1696                    
    1697                    
    1698 0000fb90           mode_onturnbkl  ;6
    1699                    
    1700                    
    1701 0000fb90     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000fba0     0bc0  
    1702 0000fbb0     1fc0          btst    PLAYER_DOWN_BIT,a0
    1703 0000fbc0     ca12          jrz     inrqno_climbdown
    1704                    
    1705 0000fbd0     09e0          movi    bam_climb_down_anim,a0
         0000fbe0 00000000! 
    1706 0000fc00     0d5f          calla   change_anim1a
         0000fc10 00000000! 
    1707                    
    1708 0000fc30                   SETMODE CLIMBTURNBKL
    1709                    
    1710 0000fce0           inrqno_interrupt
    1711 0000fce0     0960          rets
    1712                    
    1713 0000fcf0           inrqno_climbdown
    1714 0000fcf0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000fd00     0ba0  
    1715 0000fd10     0b80          andi    011111b,a0
         0000fd20 ffffffe0  
    1716 0000fd40     ca51          jrz     inrqz
    1717                    
    1718 0000fd50                   X32     a0
    1719 0000fd60     0b20          addi    inrqaction_table,a0
         0000fd70 0000fe60' 
    1720 0000fd90     8600          move    *a0,a0,L
    1721 0000fda0     0920          call    a0
    1722                    
    1723 0000fdb0     b5a5          move    *a13(PLYRNUM),a5
         0000fdc0     0580  
    1724 0000fdd0     09e2          movi    JUMP_ROPES,a2
         0000fde0 00000000! 
    1725 0000fe00     09c0          movi    1000,a0
         0000fe10     03e8  
    1726 0000fe20     0d5f          calla   ADD_IF_SILENT
         0000fe30 00000000! 
    1727                    
    1728 0000fe50     0960          rets
    1729                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1730                    
    1731                    
    1732 0000fe60           inrqaction_table
    1733 0000fe60 00010260'         .long   inrqz,inrqpunch,inrqblock,inrqblock                     ;0-3
    1734 0000fee0 00010270'         .long   inrqsuper_punch,inrqsuper_punch,inrqblock,inrqblock     ;4-7
    1735 0000ff60 00010270'         .long   inrqkick,inrqpunchkick,inrqblock,inrqblock              ;8-11
    1736 0000ffe0 00010270'         .long   inrqsuper_punch,inrqpunchkick,inrqblock,inrqblock       ;12-15
    1737 00010060 00010270'         .long   inrqsuper_kick,inrqsuper_kick,inrqblock,inrqblock       ;16-19
    1738 000100e0 00010270'         .long   inrqgraboh,inrqgraboh,inrqblock,inrqblock               ;20-23
    1739 00010160 00010270'         .long   inrqsuper_kick,inrqpunchkick,inrqblock,inrqblock        ;24-27
    1740 000101e0 00010270'         .long   inrqgraboh,inrqgraboh,inrqblock,inrqblock               ;28-31
    1741                    
    1742 00010260           inrqz
    1743 00010260     0960          rets
    1744                    
    1745 00010270           inrqpunch               ;1
    1746 00010270           inrqblock               ;2
    1747 00010270           inrqsuper_punch ;4
    1748 00010270           inrqkick                ;8
    1749 00010270           inrqsuper_kick  ;16
    1750 00010270           inrqgraboh
    1751 00010270           inrqpunchkick
    1752                    
    1753 00010270                   SETMODE INAIR
    1754                    
    1755 00010320     09e0          movi    bam_bellyflop_anim,a0
         00010330 00000000! 
    1756 00010350     0d5f          calla   change_anim1a
         00010360 00000000! 
    1757                    
    1758 00010380                   WRSND   W_BAMBAM,TURNDIVE_T1,TURNDIVE_T2
    1759                    
    1760 00010520     0960          rets
    1761                    
    1762                    
    1763 00010530           mode_block      ;7
    1764                    
    1765 00010530     b5a0          move    *a13(BLOCK_TIME),a0
         00010540     0d30  
    1766 00010550     1020          inc     a0
    1767 00010560     b00d          move    a0,*a13(BLOCK_TIME)
         00010570     0d30  
    1768 00010580     0b40          cmpi    160,a0
         00010590     ff5f  
    1769 000105a0     c413          jrlt    dbkcno
    1770                    
    1771 000105b0     0d5f          calla   get_opp_plyrmode
         000105c0 00000000! 
    1772 000105e0     0b40          cmpi    MODE_BLOCK,a0
         000105f0     fff8  
    1773 00010600     cb0d          jrnz    dbkcno
    1774 00010610     b5a0          move    *a13(CLOSEST_XDIST),a0
         00010620     0370  
    1775 00010630     0b40          cmpi    61h,a0
         00010640     ff9e  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1776 00010650     c508          jrge    dbkcno
    1777 00010660     0b40          cmpi    45,a0
         00010670     ffd2  
    1778 00010680     c405          jrlt    dbkcno
    1779 00010690     b5a0          move    *a13(CLOSEST_ZDIST),a0
         000106a0     0390  
    1780 000106b0     0b40          cmpi    30,a0
         000106c0     ffe1  
    1781 000106d0     c461          jrlt    dbkcpunchblock
    1782                    
    1783 000106e0           dbkcno
    1784 000106e0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000106f0     0ba0  
    1785 00010700     0b80          andi    011111b,a0
         00010710 ffffffe0  
    1786 00010730     ca0c          jrz     dbkcno_interrupt
    1787                    
    1788                            ;press.  if block isn't down, let mode_normal handle it
    1789 00010740     4c02          move    a0,a2                   ;save a0 from ...val_down
    1790 00010750     b5a0          move    *a13(BUT_VAL_CUR),a0
         00010760     0b90  
    1791 00010770     1fc0          btst    PLAYER_BLOCK_BIT,a0
    1792 00010780     ca08          jrz     dbkcset_mode_normal
    1793 00010790     4c40          move    a2,a0                   ;restore a0 from ...val_down
    1794                    
    1795 000107a0                   X32     a0
    1796 000107b0     0b20          addi    dbkcaction_table,a0
         000107c0 000108e0' 
    1797 000107e0     8600          move    *a0,a0,L
    1798 000107f0     0920          call    a0
    1799                    
    1800 00010800           dbkcno_interrupt
    1801 00010800     0960          rets
    1802                    
    1803 00010810           dbkcset_mode_normal
    1804 00010810                   SETMODE NORMAL
    1805 000108c0     c000          jruc    mode_normal
         000108d0     f584  
    1806                    
    1807 000108e0           dbkcaction_table
    1808 000108e0 00010ce0'         .long   dbkcz,dbkcpunchblock,dbkcz      ;0-2
    1809 00010940 00010cf0'         .long   dbkcpunchblock          ;3
    1810 00010960 00010ce0'         .long   dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz       ;4-10
    1811 00010a40 00010ce0'         .long   dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz       ;11-17
    1812 00010b20 00010ce0'         .long   dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz       ;18-24
    1813 00010c00 00010ce0'         .long   dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz       ;25-31
    1814                    
    1815 00010ce0           dbkcz
    1816 00010ce0     0960          rets
    1817                    
    1818 00010cf0           dbkcpunchblock  ;3
    1819                    
    1820                    
    1821 00010cf0                   SETMODE NORMAL
    1822                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1823 00010da0     09e0          movi    bam_4_push_anim,a0
         00010db0 00000000! 
    1824 00010dd0     0d5f          calla   change_anim1a
         00010de0 00000000! 
    1825                    
    1826 00010e00                   WRSND   W_BAMBAM,PUSH_T1,PUSH_T2
    1827                    
    1828 00010fa0     0960          rets
    1829                    
    1830                    
    1831 00010fb0           mode_dizzy      ;8
    1832                    
    1833 00010fb0     0960          rets
    1834                    
    1835                    
    1836                    
    1837                    
    1838                    
    1839 00010fc0           mode_oppoverhead ;10
    1840                    
    1841 00010fc0     b7a2          move    *a13(ATTACH_PROC),a2,L          ;proc attached to
         00010fd0     03e0  
    1842 00010fe0     ca03          jrz     mqgznot_attached
    1843 00010ff0     b640          move    *a2(ATTACH_PROC),a0,L
         00011000     03e0  
    1844 00011010     cb1a          jrnz    mqgzstill_attached
    1845                    
    1846 00011020           mqgznot_attached
    1847                    
    1848 00011020     b5a0          move    *a13(ANIMODE),a0                ;* remove this????
         00011030     0660  
    1849 00011040     1fa0          btst    MODE_UNINT_BIT,a0               ;*
    1850 00011050     cb4d          jrnz    mqgzno_interrupt                        ;*
    1851                    
    1852 00011060     5600          clr     a0
    1853 00011070     b20d          move    a0,*a13(ATTACH_PROC),L
         00011080     03e0  
    1854                    
    1855 00011090     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000110a0 00000000! 
    1856 000110c0                   SETMODE NORMAL
    1857                    
    1858 00011170     09c0          movi    MODE_NORMAL,a0
         00011180     0000  
    1859 00011190     b00d          move    a0,*a13(ANIMODE)
         000111a0     0660  
    1860                    
    1861 000111b0     0960          rets
    1862                    
    1863 000111c0           mqgzstill_attached
    1864 000111c0     b5a0          move    *a13(ANIMODE),a0
         000111d0     0660  
    1865 000111e0     1fa0          btst    MODE_UNINT_BIT,a0
    1866 000111f0     cb33          jrnz    mqgzno_interrupt
    1867                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

    1868 00011200     b5a0          move    *a13(FACING_DIR),a0
         00011210     04c0  
    1869 00011220     0b80          andni   MOVE_UP,a0
         00011230 00000001  
    1870 00011250     0ba0          ori     MOVE_DOWN,a0
         00011260 00000002  
    1871 00011280     b00d          move    a0,*a13(FACING_DIR)
         00011290     04c0  
    1872 000112a0     b00d          move    a0,*a13(NEW_FACING_DIR)
         000112b0     04d0  
    1873                    
    1874 000112c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000112d0     0bc0  
    1875 000112e0     ca0c          jrz     mqgzstand
    1876                    
    1877 000112f0     b00d          move    a0,*a13(MOVE_DIR)
         00011300     04b0  
    1878 00011310     0d5f          calla   execute_walk
         00011320 00000000! 
    1879                    
    1880 00011340     09e0          movi    bam_holdoh_anim,a0
         00011350 00000000! 
    1881 00011370     0d5f          calla   change_anim2
         00011380 00000000! 
    1882 000113a0     c00d          jruc    mqgzck_butns
    1883 000113b0           mqgzstand
    1884 000113b0     5600          clr     a0
    1885 000113c0     b00d          move    a0,*a13(MOVE_DIR)
         000113d0     04b0  
    1886 000113e0     b20d          move    a0,*a13(OBJ_XVEL),L
         000113f0     02d0  
    1887 00011400     b20d          move    a0,*a13(OBJ_ZVEL),L
         00011410     0310  
    1888                    
    1889 00011420     09e0          movi    bam_stndholdoh_anim,a0
         00011430 00000000! 
    1890 00011450     0d5f          calla   change_anim1
         00011460 00000000! 
    1891                    
    1892 00011480           mqgzck_butns
    1893                    
    1894 00011480     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011490     0ba0  
    1895 000114a0     0b80          andi    011111b,a0
         000114b0 ffffffe0  
    1896 000114d0                   X32     a0
    1897 000114e0     0b20          addi    mqgzaction_table,a0
         000114f0 00011540' 
    1898 00011510     8600          move    *a0,a0,L
    1899 00011520     0920          call    a0
    1900                    
    1901 00011530           mqgzno_interrupt
    1902 00011530     0960          rets
    1903                    
    1904 00011540           mqgzaction_table
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1905 00011540 00011940'         .long   mqgzz,mqgzpunch,mqgzblock,mqgzblock                     ;0-3
    1906 000115c0 00011950'         .long   mqgzsuper_punch,mqgzsuper_punch,mqgzblock,mqgzblock     ;4-7
    1907 00011640 00011950'         .long   mqgzkick,mqgzpunchkick,mqgzblock,mqgzblock              ;8-11
    1908 000116c0 00011950'         .long   mqgzsuper_punch,mqgzpunchkick,mqgzblock,mqgzblock       ;12-15
    1909 00011740 00011b90'         .long   mqgzsuper_kick,mqgzsuper_kick,mqgzblock,mqgzblock       ;16-19
    1910 000117c0 00011b90'         .long   mqgzgraboh,mqgzgraboh,mqgzblock,mqgzblock               ;20-23
    1911 00011840 00011b90'         .long   mqgzsuper_kick,mqgzpunchkick,mqgzblock,mqgzblock        ;24-27
    1912 000118c0 00011b90'         .long   mqgzgraboh,mqgzgraboh,mqgzblock,mqgzblock               ;28-31
    1913                    
    1914 00011940           mqgzz
    1915 00011940     0960          rets
    1916                    
    1917 00011950           mqgzpunch               ;1
    1918 00011950           mqgzblock               ;2
    1919 00011950           mqgzsuper_punch ;4
    1920 00011950           mqgzkick                ;8
    1921 00011950           mqgzpunchkick   ;9
    1922                    
    1923                    
    1924 00011950     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011960 00000000! 
    1925 00011980     09e0          movi    bam_slamdwn_anim,a0
         00011990 00000000! 
    1926 000119b0     0d5f          calla   change_anim1a
         000119c0 00000000! 
    1927                    
    1928 000119e0                   WRSND   W_BAMBAM,PUNCH_T1,PUNCH_T2
    1929                    
    1930 00011b80     0960          rets
    1931                    
    1932 00011b90           mqgzsuper_kick  ;16
    1933 00011b90           mqgzgraboh              ;20
    1934                    
    1935 00011b90     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011ba0     0bc0  
    1936 00011bb0     1fc0          btst    PLAYER_DOWN_BIT,a0
    1937 00011bc0     cad8          jrz     mqgzkick
    1938                    
    1939 00011bd0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00011be0 00000000! 
    1940 00011c00     09e0          movi    bam_backbreaker_anim,a0
         00011c10 00000000! 
    1941 00011c30     0d5f          calla   change_anim1a
         00011c40 00000000! 
    1942                    
    1943 00011c60                   WRSND   W_BAMBAM,HIPTOSS_T1,PUNCH_T2
    1944                    
    1945 00011e00     0960          rets
    1946                    
    1947                    
    1948 00011e10           mode_climbturnbkl       ;11
    1949                    
    1950 00011e10     0960          rets
    1951                    
    1952                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

    1953 00011e20           mode_waitanim   ;12
    1954                    
    1955 00011e20     b5a0          move    *a13(ANIMODE),a0
         00011e30     0660  
    1956 00011e40     1fe0          btst    MODE_END_BIT,a0
    1957 00011e50     ca03          jrz     nahfnot_ended
    1958                    
    1959 00011e60     b7a0          move    *a13(CODE_ADDR),a0,L
         00011e70     0430  
    1960 00011e80     0920          call    a0
    1961                    
    1962 00011e90           nahfnot_ended
    1963 00011e90     0960          rets
    1964                    
    1965                    
    1966                    
    1967 00011ea0           mode_grapple    ;13
    1968                    
    1969 00011ea0     0960          rets
    1970                    
    1971                    
    1972                    
    1973 00011eb0           mode_master     ;14
    1974                    
    1975 00011eb0     0d5f          calla   master_keep_attached    ;keep slave attached to me
         00011ec0 00000000! 
    1976                    
    1977 00011ee0     0960          rets
    1978                    
    1979                    
    1980 00011ef0           mode_slave      ;15
    1981 00011ef0     0960          rets
    1982                    
    1983                    
    1984 00011f00           mode_headhold   ;16
    1985                    
    1986                            .ref    bozo_check
    1987 00011f00     0d5f          calla   bozo_check
         00011f10 00000000! 
    1988 00011f30     c929          jrnc    espdfail
    1989                    
    1990 00011f40                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    1991                    
    1992 000120e0     09e0          movi    bam_pogo_anim,a0
         000120f0 00000000! 
    1993 00012110     05ae          move    @PCNT,a14
         00012120 00000000! 
    1994 00012140     1fee          btst    0,a14
    1995 00012150     ca03          jrz     espdtag
    1996 00012160     09e0          movi    bam_neckbreaker_anim,a0
         00012170 00000000! 
    1997 00012190     0d5f  espdtag calla   change_anim1a
         000121a0 00000000! 
    1998                    
    1999 000121c0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    2000                    
    2001 000121d0           espdfail
    2002 000121d0     b7a0          move    *a13(WHOIHIT),a0,L
         000121e0     0500  
    2003 000121f0     b400          move    *a0(PLYRMODE),a0
         00012200     05c0  
    2004 00012210     0b40          cmpi    MODE_HEADHELD,a0
         00012220     ffec  
    2005 00012230     cb10          jrnz    espdexit
    2006                    
    2007                    
    2008 00012240     b5a0          move    *a13(ANIMODE),a0
         00012250     0660  
    2009 00012260     1fa0          btst    MODE_UNINT_BIT,a0
    2010 00012270     cb0b          jrnz    espdno_interrupt
    2011                    
    2012 00012280     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00012290     0ba0  
    2013 000122a0     0b80          andi    011111b,a0
         000122b0 ffffffe0  
    2014 000122d0                   X32     a0
    2015 000122e0     0b20          addi    espdaction_table,a0
         000122f0 00012510' 
    2016 00012310     8600          move    *a0,a0,L
    2017 00012320     0920          call    a0
    2018                    
    2019 00012330           espdno_interrupt
    2020 00012330     0960          rets
    2021                    
    2022 00012340           espdexit
    2023 00012340     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00012350     0140  
    2024 00012360     0d0e          subi    [6,0],a14
         00012370 fff9ffff  
    2025 00012390     b3cd          move    a14,*a13(OBJ_ZPOS),L
         000123a0     0140  
    2026                    
    2027 000123b0     1941          movk    MOVE_DOWN_RIGHT,a1
    2028 000123c0     b5a0          move    *a13(OBJ_CONTROL),a0
         000123d0     0780  
    2029 000123e0     1f60          btst    B_FLIPH,a0
    2030 000123f0     ca01          jrz     espdright
    2031 00012400     18c1          movk    MOVE_DOWN_LEFT,a1
    2032 00012410     b02d  espdright       move    a1,*a13(FACING_DIR)
         00012420     04c0  
    2033 00012430     b02d          move    a1,*a13(NEW_FACING_DIR)
         00012440     04d0  
    2034                    
    2035 00012450                   SETMODE NORMAL
    2036                    
    2037 00012500     0960          rets
    2038                    
    2039 00012510           espdaction_table
    2040 00012510 00012910'         .long   espdz,espdpunch,espdblock,espdblock                     ;0-3
    2041 00012590 00012b60'         .long   espdsuper_punch,espdsuper_punch,espdblock,espdblock     ;4-7
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2042 00012610 00012e20'         .long   espdkick,espdpunchkick,espdblock,espdblock              ;8-11
    2043 00012690 00012b60'         .long   espdsuper_punch,espdpunchkick,espdblock,espdblock       ;12-15
    2044 00012710 00013060'         .long   espdsuper_kick,espdsuper_kick,espdblock,espdblock       ;16-19
    2045 00012790 00012910'         .long   espdgraboh,espdgraboh,espdblock,espdblock               ;20-23
    2046 00012810 00013060'         .long   espdsuper_kick,espdpunchkick,espdblock,espdblock        ;24-27
    2047 00012890 00012910'         .long   espdgraboh,espdgraboh,espdblock,espdblock               ;28-31
    2048                    
    2049                    
    2050 00012910           espdblock
    2051 00012910           espdgraboh
    2052 00012910           espdz           ;0
    2053 00012910     0960          rets
    2054                    
    2055 00012920           espdpunch               ;1
    2056                    
    2057 00012920     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012930 00000000! 
    2058 00012950                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    2059                            .ref    bam_4_knee2_anim
    2060 00012af0     09e0          movi    bam_4_knee2_anim,a0
         00012b00 00000000! 
    2061 00012b20     0d5f          calla   change_anim1a
         00012b30 00000000! 
    2062 00012b50     0960          rets
    2063                    
    2064 00012b60           espdsuper_punch ;4
    2065                    
    2066 00012b60     0960          rets
    2067                    
    2068 00012b70           do_pile
    2069 00012b70     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012b80 00000000! 
    2070 00012ba0     b5a0          move    *a13(USR_VAR2),a0
         00012bb0     0860  
    2071 00012bc0     cad4          jrz     espdz
    2072                    
    2073 00012bd0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00012be0     0bc0  
    2074 00012bf0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2075 00012c00     cad1          jrz     espdpunch
    2076                    
    2077 00012c10                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2078 00012db0     09e0          movi    bam_3_pile_driver_anim,a0
         00012dc0 00000000! 
    2079 00012de0     0d5f          calla   change_anim1a
         00012df0 00000000! 
    2080 00012e10     0960          rets
    2081                    
    2082 00012e20           espdpunchkick
    2083 00012e20           espdkick
    2084                    
    2085 00012e20     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00012e30 00000000! 
    2086 00012e50                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    2087 00012ff0     09e0          movi    bam_4_knee2_anim,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

         00013000 00000000! 
    2088 00013020     0d5f          calla   change_anim1a
         00013030 00000000! 
    2089 00013050     0960          rets
    2090                    
    2091 00013060           espdsuper_kick  ;16
    2092 00013060     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013070     0bc0  
    2093 00013080     b5a1          move    *a13(NEW_FACING_DIR),a1
         00013090     04d0  
    2094 000130a0     0b81          andi    0ch,a1
         000130b0 fffffff3  
    2095 000130d0     4801          cmp     a0,a1
    2096 000130e0     cb82          jrnz    espdz
    2097                    
    2098 000130f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013100 00000000! 
    2099 00013120                   WRSND   W_BAMBAM,UPRCUT_T1,UPRCUT_T2
    2100 000132c0     09e0          movi    bam_knees_anim,a0
         000132d0 00000000! 
    2101 000132f0     0d5f          calla   change_anim1a
         00013300 00000000! 
    2102 00013320     0960          rets
    2103                    
    2104 00013330           mode_puppet2    ;17
    2105                    
    2106 00013330     0960          rets
    2107                    
    2108 00013340           mode_headheld   ;19
    2109 00013340     b5a0          move    *a13(ANIMODE),a0
         00013350     0660  
    2110 00013360     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2111 00013370     cb80          janz    mode_choking
         00013380 00000000! 
    2112                    
    2113 000133a0     0d5f          calla   bozo_check
         000133b0 00000000! 
    2114 000133d0     c932          jrnc    ucmkfail
    2115                    
    2116 000133e0                   PUSH    a8
    2117 000133f0     4da8          move    a13,a8
    2118 00013400     0d5f          CALLA   DO_REVERSAL
         00013410 00000000! 
    2119 00013430     0d5f          CALLA   DO_REVERSAL_MESS
         00013440 00000000! 
    2120 00013460                   PULL    a8
    2121                    
    2122 00013470                   WRSND   W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
    2123                    
    2124 00013610     09e0          movi    bam_pogo_anim,a0
         00013620 00000000! 
    2125 00013640     05ae          move    @PCNT,a14
         00013650 00000000! 
    2126 00013670     1fee          btst    0,a14
    2127 00013680     ca03          jrz     ucmktag
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2128 00013690     09e0          movi    bam_neckbreaker_anim,a0
         000136a0 00000000! 
    2129 000136c0     0d5f  ucmktag calla   change_anim1a
         000136d0 00000000! 
    2130                    
    2131 000136f0     0960          rets
    2132 00013700           ucmkfail
    2133                    
    2134 00013700     b7a0          move    *a13(ATTACH_PROC),a0,L
         00013710     03e0  
    2135 00013720     cb0c          jrnz    ucmkno_luck
    2136                    
    2137 00013730     b5a0          move    *a13(OBJ_YPOSINT),a0
         00013740     0130  
    2138 00013750     b5a1          move    *a13(GROUND_Y),a1
         00013760     0570  
    2139 00013770     4820          cmp     a1,a0                   ;a0-a1
    2140 00013780     c706          jrgt    ucmkno_luck
    2141                    
    2142                    
    2143 00013790     09e0          movi    bam_3_head_held_stand_anim,a0
         000137a0 00000000! 
    2144 000137c0     0d5f          calla   change_anim1a
         000137d0 00000000! 
    2145                    
    2146 000137f0           ucmkno_luck
    2147 000137f0     0960          rets
    2148                    
    2149 00013800           mode_chokehold  ;24
    2150 00013800     0960          rets
    2151                    
    2152                    
    2153          0003a000  getpVEL equ     3a000h          ;38000h ;30000h
    2154          00031000  getpDVEL        equ     31000h          ;27978h ;21f0eh
    2155                    
    2156                    
    2157 00013810            SUBR bam_velocity_table
    2158                    
    2159                    
    2160 00013810 00000000          .long   0,      -getpVEL        ;0 UP
    2161                    
    2162 00013850 00031000          .long   getpDVEL,       -getpDVEL       ;1 UP-RIGHT
    2163                    
    2164 00013890 0003a000          .long   getpVEL,        0       ;2 RIGHT
    2165                    
    2166 000138d0 00031000          .long   getpDVEL,       getpDVEL        ;3 DOWN-RIGHT
    2167                    
    2168 00013910 00000000          .long   0,      getpVEL ;4 DOWN
    2169                    
    2170 00013950 fffcf000          .long   -getpDVEL,      getpDVEL        ;5 DOWN-LEFT
    2171                    
    2172 00013990 fffc6000          .long   -getpVEL,       0       ;6 LEFT
    2173                    
    2174 000139d0 fffcf000          .long   -getpDVEL,      -getpDVEL       ;7 UP-LEFT
    2175                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2176                    
    2177                    
    2178 00013a10            SUBR bam_rotate_anims_table
    2179 00013a10 00000000!         .long   bam_stand2_anim         ;new = up right
    2180 00013a30 00000000!         .long   bam_2_to_4_turn_anim    ;    = down right
    2181 00013a50 00000000!         .long   bam_2_to_6_turn_anim    ;    = down left ***
    2182 00013a70 00000000!         .long   bam_2_to_8_turn_anim    ;    = up left
    2183                    
    2184 00013a90 00000000!         .long   bam_4_to_2_turn_anim    ;new = up right
    2185 00013ab0 00000000!         .long   bam_stand4_anim         ;    = down right
    2186 00013ad0 00000000!         .long   bam_4_to_6_turn_anim    ;    = down left
    2187 00013af0 00000000!         .long   bam_4_to_8_turn_anim    ;    = up left ***
    2188                    
    2189 00013b10 00000000!         .long   bam_6_to_2_turn_anim    ;new = up right ***
    2190 00013b30 00000000!         .long   bam_6_to_4_turn_anim    ;    = down right
    2191 00013b50 00000000!         .long   bam_stand6_anim         ;    = down left
    2192 00013b70 00000000!         .long   bam_6_to_8_turn_anim    ;    = up left
    2193                    
    2194 00013b90 00000000!         .long   bam_8_to_2_turn_anim    ;new = up right
    2195 00013bb0 00000000!         .long   bam_8_to_4_turn_anim    ;    = down right ***
    2196 00013bd0 00000000!         .long   bam_8_to_6_turn_anim    ;    = down left
    2197 00013bf0 00000000!         .long   bam_stand8_anim         ;    = up left
    2198                    
    2199                    
    2200 00013c10            SUBR bam_leg_anims_table
    2201 00013c10 00000000!         .long   bam_walk1_f2_anim       ;1 (UP)
    2202 00013c30 00000000!         .long   bam_walk1_f2_anim       ;2 (UP_RIGHT)
    2203 00013c50 00000000!         .long   bam_walk1_f4_anim       ;3 (RIGHT)
    2204 00013c70 00000000!         .long   bam_walk1_f4_anim       ;4 (DOWN_RIGHT)
    2205 00013c90 00000000!         .long   bam_walk1_f4_anim       ;5 (DOWN)
    2206 00013cb0 00000000!         .long   bam_walk1_f4_anim       ;6 (DOWN_LEFT)
    2207 00013cd0 00000000!         .long   bam_walk1_f2_anim       ;7 (LEFT)
    2208 00013cf0 00000000!         .long   bam_walk1_f2_anim       ;8 (UP-LEFT)
    2209                    
    2210 00013d10 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2211 00013d30 00000000!         .long   bam_walk2_f2_anim       ;2 (UP_RIGHT)
    2212 00013d50 00000000!         .long   bam_walk2_f2_anim       ;3 (RIGHT)
    2213 00013d70 00000000!         .long   bam_walk2_f4_anim       ;4 (DOWN_RIGHT)
    2214 00013d90 00000000!         .long   bam_walk8_f4_anim       ;5 (DOWN)
    2215 00013db0 00000000!         .long   bam_walk8_f4_anim       ;6 (DOWN_LEFT)
    2216 00013dd0 00000000!         .long   bam_walk4_f2_anim       ;7 (LEFT)
    2217 00013df0 00000000!         .long   bam_walk4_f2_anim       ;8 (UP-LEFT)
    2218                    
    2219 00013e10 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2220 00013e30 00000000!         .long   bam_walk2_f2_anim       ;2 (UP_RIGHT)
    2221 00013e50 00000000!         .long   bam_walk2_f2_anim       ;3 (RIGHT)
    2222 00013e70 00000000!         .long   bam_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2223 00013e90 00000000!         .long   bam_walk4_f4_anim       ;5 (DOWN)
    2224 00013eb0 00000000!         .long   bam_walk8_f4_anim       ;6 (DOWN_LEFT)
    2225 00013ed0 00000000!         .long   bam_walk6_f2_anim       ;7 (LEFT)
    2226 00013ef0 00000000!         .long   bam_walk6_f2_anim       ;8 (UP-LEFT)
    2227                    
    2228                    
    2229 00013f10 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2230 00013f30 00000000!         .long   bam_walk8_f2_anim       ;2 (UP_RIGHT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2231 00013f50 00000000!         .long   bam_walk4_f4_anim       ;3 (RIGHT)
    2232 00013f70 00000000!         .long   bam_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2233 00013f90 00000000!         .long   bam_walk2_f4_anim       ;5 (DOWN)
    2234 00013fb0 00000000!         .long   bam_walk6_f4_anim       ;6 (DOWN_LEFT)
    2235 00013fd0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2236 00013ff0 00000000!         .long   bam_walk6_f2_anim       ;8 (UP-LEFT)
    2237                    
    2238 00014010 00000000!         .long   bam_walk5_f2_anim       ;1 (UP)
    2239 00014030 00000000!         .long   bam_walk5_f2_anim       ;2 (UP_RIGHT)
    2240 00014050 00000000!         .long   bam_walk5_f4_anim       ;3 (RIGHT)
    2241 00014070 00000000!         .long   bam_walk5_f4_anim       ;4 (DOWN_RIGHT)
    2242 00014090 00000000!         .long   bam_walk5_f4_anim       ;5 (DOWN)
    2243 000140b0 00000000!         .long   bam_walk5_f4_anim       ;6 (DOWN_LEFT)
    2244 000140d0 00000000!         .long   bam_walk5_f2_anim       ;7 (LEFT)
    2245 000140f0 00000000!         .long   bam_walk5_f2_anim       ;8 (UP-LEFT)
    2246                    
    2247 00014110 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2248 00014130 00000000!         .long   bam_walk6_f2_anim       ;2 (UP_RIGHT)
    2249 00014150 00000000!         .long   bam_walk2_f2_anim       ;3 (RIGHT)
    2250 00014170 00000000!         .long   bam_walk6_f4_anim       ;4 (DOWN_RIGHT)
    2251 00014190 00000000!         .long   bam_walk2_f4_anim       ;5 (DOWN)
    2252 000141b0 00000000!         .long   bam_walk4_f4_anim       ;6 (DOWN_LEFT)
    2253 000141d0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2254 000141f0 00000000!         .long   bam_walk8_f2_anim       ;8 (UP-LEFT)
    2255                    
    2256 00014210 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2257 00014230 00000000!         .long   bam_walk6_f2_anim       ;2 (UP_RIGHT)
    2258 00014250 00000000!         .long   bam_walk6_f2_anim       ;3 (RIGHT)
    2259 00014270 00000000!         .long   bam_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2260 00014290 00000000!         .long   bam_walk4_f4_anim       ;5 (DOWN)
    2261 000142b0 00000000!         .long   bam_walk4_f4_anim       ;6 (DOWN_LEFT)
    2262 000142d0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2263 000142f0 00000000!         .long   bam_walk2_f2_anim       ;8 (UP-LEFT)
    2264                    
    2265 00014310 00000000!         .long   bam_walk2_f2_anim       ;1 (UP)
    2266 00014330 00000000!         .long   bam_walk4_f2_anim       ;2 (UP_RIGHT)
    2267 00014350 00000000!         .long   bam_walk6_f2_anim       ;3 (RIGHT)
    2268 00014370 00000000!         .long   bam_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2269 00014390 00000000!         .long   bam_walk6_f4_anim       ;5 (DOWN)
    2270 000143b0 00000000!         .long   bam_walk2_f4_anim       ;6 (DOWN_LEFT)
    2271 000143d0 00000000!         .long   bam_walk2_f2_anim       ;7 (LEFT)
    2272 000143f0 00000000!         .long   bam_walk2_f2_anim       ;8 (UP-LEFT)
    2273                    
    2274                    
    2275 00014410            SUBR bam_torso_anims_table
    2276 00014410 00000000!         .long   bam_torso2_anim         ;new = up right
    2277 00014430 00000000!         .long   bam_2_to_4_turn2_anim   ;    = down right
    2278 00014450 00000000!         .long   bam_2_to_6_turn2_anim   ;    = down left ***
    2279 00014470 00000000!         .long   bam_2_to_8_turn2_anim   ;    = up left
    2280                    
    2281 00014490 00000000!         .long   bam_4_to_2_turn2_anim   ;new = up right
    2282 000144b0 00000000!         .long   bam_torso4_anim         ;    = down right
    2283 000144d0 00000000!         .long   bam_4_to_6_turn2_anim   ;    = down left
    2284 000144f0 00000000!         .long   bam_4_to_8_turn2_anim   ;    = up left ***
    2285                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:12 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2286 00014510 00000000!         .long   bam_6_to_2_turn2_anim   ;new = up right ***
    2287 00014530 00000000!         .long   bam_6_to_4_turn2_anim   ;    = down right
    2288 00014550 00000000!         .long   bam_torso6_anim         ;    = down left
    2289 00014570 00000000!         .long   bam_6_to_8_turn2_anim   ;    = up left
    2290                    
    2291 00014590 00000000!         .long   bam_8_to_2_turn2_anim   ;new = up right
    2292 000145b0 00000000!         .long   bam_8_to_4_turn2_anim   ;    = down right ***
    2293 000145d0 00000000!         .long   bam_8_to_6_turn2_anim   ;    = down left
    2294 000145f0 00000000!         .long   bam_torso8_anim         ;    = up left
    2295                    
    2296                    
    2297                    
    2298                            .end

 No Errors,  No Warnings
