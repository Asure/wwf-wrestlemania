TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "doink.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "jjxm.h"
      11                            .include        "mproc.equ"             ;Mproc equates
      12                            .include        "display.equ"           ;Display proc equates
      13                            .include        "gsp.equ"               ;Gsp asm equates
      14                            .include        "sys.equ"
      15                            .include        "game.equ"
      16                            .include        "plyr.equ"
      17                            .include        "anim.equ"
      18                            .include        "audit.equ"
      19                            .include        "sound.h"
      20                            .include        "ring.equ"
      21                            .include        "lifebar.h"
      22                            .include        "damage.equ"
      23                    
      24                            ;temp! - 314
      25                            .include        "tmpdebug.h"
      26                    
      27                    
      28                    
      29                    
      30                            .ref    BLOCK_WOOSH,get_opp_process,calc_line_x,can_pin
      31                            .ref    PSTATUS2,is_final_match,FINAL_PTR
      32                            .ref    DO_REVERSAL,DO_REVERSAL_MESS,FIND_AND_KILL_ENDLESS
      33                            .ref    ADD_IF_SILENT,JUMP_ROPES,CLIMB_ROPES
      34                            .ref    get_powerk_dtime
      35                    
      36                            .ref    set_getup_time,set_raisearm_bit
      37                            .ref    get_punch_dtime
      38                            .ref    get_rope_x,ck_teammate_pin,raisearm_check
      39                            .ref    inc_getup_time
      40                    
      41                            .ref    change_anim1,change_anim1a
      42                            .ref    change_anim2,change_anim2a
      43                            .ref    process_ptrs
      44                            .ref    keep_attached
      45                            .ref    get_opp_plyrmode
      46                            .ref    wres_collis_off
      47                            .ref    convert_facing
      48                            .ref    check_secret_moves
      49                            .ref    change_walk_anim
      50                            .ref    set_rotate_anim
      51                            .ref    execute_walk
      52                            .ref    bounce_off_ropes
      53                            .ref    climb_turnbuckle
      54                            .ref    ADD_VOICE,round_award
      55                            .ref    HALT,clear_combo_meter
      56                            .ref    mode_choking
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .ref    master_keep_attached
      58                            .ref    PCNT,init_reduce_bog
      59                            .ref    RNDPER,is_8_on_1
      60                            .ref    current_round,change_wrestler
      61                            .ref    p1rounds,p2rounds,hitonground_tbl,arw_bwait
      62                    
      63                            ;from DCSSOUND.ASM
      64                            .ref    triple_sound
      65                    
      66                            ;from WRESTLE.ASM
      67                            .ref    drone_change_back
      68                            .ref    read_switches
      69                            .ref    BONUS_MESS
      70                            .ref    blocking_off
      71                            .ref    hyper_speed_on
      72                            .ref    in_finish_move,royal_rumble
      73                            .ref    p1rounds,p2rounds
      74                            .if NUM_DOINK_FINISHES
      75                            .ref    dnk_finish1_move
      76                            .if NUM_DOINK_FINISHES > 1
      77                            .ref    dnk_finish2_move
      78                            .endif
      79                            .endif
      80                            .ref    in_finish_move,finish_completed
      81                    
      82                    
      83                            .ref    dnk_3_pile_driver_anim
      84                            .ref    start_run_anim
      85                    
      86                            .ref    dnk_4_earslap_anim
      87                            .ref    dnk_2_earslap_anim
      88                            .ref    dnk_4_slap_anim
      89                            .ref    dnk_2_slap_anim
      90                            .ref    dnk_head_hit_dizzy_anim
      91                            .ref    dnk_knockdwn_anim
      92                            .ref    dnk_4_hammer_anim
      93                    
      94                            .ref    wres_slave_anim
      95                            .ref    dnk_zip_anim
      96                    
      97                            .ref    dnk_2_raise_arm_anim,dnk_4_raise_arm_anim
      98                            .ref    dnk_stand2_anim,dnk_stand8_anim
      99                            .ref    dnk_stand4_anim,dnk_stand6_anim
     100                            .ref    dnk_torso2_anim,dnk_torso8_anim
     101                            .ref    dnk_torso4_anim,dnk_torso6_anim
     102                    
     103                            .ref    dnk_2_to_4_turn_anim,dnk_8_to_6_turn_anim       ;stand
     104                            .ref    dnk_4_to_2_turn_anim,dnk_6_to_8_turn_anim
     105                            .ref    dnk_4_to_6_turn_anim,dnk_6_to_4_turn_anim
     106                            .ref    dnk_2_to_8_turn_anim,dnk_8_to_2_turn_anim
     107                            .ref    dnk_4_to_8_turn_anim,dnk_6_to_2_turn_anim
     108                            .ref    dnk_2_to_6_turn_anim,dnk_8_to_4_turn_anim
     109                    
     110                            .ref    dnk_2_to_4_turn2_anim,dnk_8_to_6_turn2_anim     ;torso
     111                            .ref    dnk_4_to_2_turn2_anim,dnk_6_to_8_turn2_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                            .ref    dnk_4_to_6_turn2_anim,dnk_6_to_4_turn2_anim
     113                            .ref    dnk_2_to_8_turn2_anim,dnk_8_to_2_turn2_anim
     114                            .ref    dnk_4_to_8_turn2_anim,dnk_6_to_2_turn2_anim
     115                            .ref    dnk_2_to_6_turn2_anim,dnk_8_to_4_turn2_anim
     116                    
     117                            .ref    dnk_walk1_f2_anim,dnk_walk2_f2_anim,dnk_walk4_f2_anim
     118                            .ref    dnk_walk5_f2_anim,dnk_walk6_f2_anim,dnk_walk8_f2_anim
     119                    
     120                            .ref    dnk_walk1_f4_anim,dnk_walk2_f4_anim,dnk_walk4_f4_anim
     121                            .ref    dnk_walk5_f4_anim,dnk_walk6_f4_anim,dnk_walk8_f4_anim
     122                    
     123                            .ref    dnk_2_punch_anim,dnk_4_punch_anim
     124                            .ref    dnk_2_buzz_anim,dnk_4_buzz_anim
     125                            .ref    dnk_2_buzz2_anim,dnk_4_buzz2_anim
     126                            .ref    dnk_2_butt_anim,dnk_4_butt_anim
     127                            .REF    dnk_combo_uppercut_to_head_anim
     128                            .ref    dnk_4_combo_kick_anim
     129                            .REF    CHECK_COMBO_GO
     130                    
     131                            .ref    dnk_2_kick_anim,dnk_4_kick_anim
     132                            .ref    dnk_2_spin_kick_anim,dnk_4_spin_kick_anim
     133                            .ref    dnk_2_knee_anim,dnk_4_knee_anim
     134                    
     135                            .ref    dnk_2_box_anim,dnk_4_box_anim
     136                    
     137                            .ref    dnk_run_anim,dnk_run2_anim
     138                    
     139                            .ref    dnk_4_blbowdrop_anim
     140                    
     141                            .ref    dnk_2_hair_pickup_anim,dnk_4_hair_pickup_anim
     142                    
     143                            .ref    dnk_2_lbowdrop_anim,dnk_4_lbowdrop_anim
     144                            .ref    dnk_2_grabfling_anim
     145                            .ref    dnk_4_grabfling_anim
     146                    
     147                            .ref    dnk_heldoh_anim
     148                    
     149                            .ref    dnk_diveofftb_anim
     150                    
     151                            .ref    dnk_fly_cline_anim
     152                            .ref    dnk_flying_kick_anim
     153                    
     154                            .ref    dnk_4_head_hit_anim,dnk_head_hit3_anim
     155                            .ref    dnk_2_head_hit_anim,dnk_head_hit2_anim
     156                            .ref    dnk_fall_back_anim
     157                            .ref    dnk_4_losebal_dizzy_anim
     158                    
     159                            .ref    dnk_hitonground_anim
     160                            .ref    dnk_4_stomp_anim,dnk_2_stomp_anim
     161                            .ref    dnk_4_bstomp_anim
     162                    
     163                            .ref    dnk_climb_up_anim,dnk_climb_down_anim
     164                            .ref    dnk_4_block_anim
     165                            .ref    dnk_2_hiptoss_anim,dnk_4_hiptoss_anim
     166                            .ref    dnk_2_hiptoss2_anim,dnk_4_hiptoss2_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167                            .ref    dnk_4_push_anim
     168                            .ref    dnk_4_bigboot_anim,dnk_2_bigboot_anim
     169                            .ref    dnk_4_losebal_anim
     170                            .ref    dnk_dizzy_anim
     171                            .ref    dnk_2_pin_anim
     172                            .ref    dnk_4_pin_anim
     173                    
     174                            .ref    dnk_belly_anim
     175                            .ref    ck_ignore               ;Ignore button press?
     176                    
     177                    
     178                            .ref    dnk_3_knee_to_head_anim
     179                            .ref    dnk_3_knees_to_head_anim
     180                            .ref    dnk_uppercut_to_head_anim
     181                            .ref    dnk_uppercuts_to_head_anim
     182                            .ref    dnk_get_buzz_anim
     183                    
     184                            .ref    dnk_3_head_hold2_anim
     185                            .ref    dnk_3_head_hold_anim
     186                    
     187                            .ref    dnk_2_butts_anim,dnk_4_butts_anim
     188                            .ref    dnk_3_head_held_stand_anim
     189                            .ref    dnk_3_head_slam_anim
     190                            .ref    dnk_4_knee_fall_anim
     191                    
     192                    
     193                    
     194                    
     195 00000000           doink_secret_moves
     196                    
     197                    
     198 00000000 00000280'         .long   mziccharge_buzz
     199 00000020 00001c60'         .long   mzicgrab_fling
     200 00000040 00002390'         .long   mzichip_toss
     201 00000060 00001a90'         .long   mzicgrab_fling2
     202 00000080 00001ae0'         .long   mzichip_toss2
     203 000000a0 000010d0'         .long   mzicearslap
     204 000000c0 00000e50'         .long   mzichammer
     205 000000e0 000014f0'         .long   mzicneck_grab
     206 00000100 00000940'         .long   mzicboxing_pnch
     207 00000120 00000000          .long   0
     208                    
     209                    
     210                    
     211 00000140            SUBR   dnk_smove_table
     212 00000140 000081f0'         .long   dnk_charge_flykick
     213 00000160 00002890'         .long   dnk_hdhold_slam
     214 00000180 00003f30'         .long   dnk_hdhold_combo1
     215 000001a0 000033e0'         .long   dnk_hdhold_pile
     216 000001c0 00004670'         .long   dnk_hdhold_combo2
     217 000001e0 00008880'         .long   dnk_hdhold_buzz
     218 00000200 00004db0'         .long   dnk_grab_toss_air
     219 00000220 00005ab0'         .long   std_walk_fast
     220 00000240 000070f0'         .long   std_taunt
     221                            .if NUM_DOINK_FINISHES
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

     222                            .long   dnk_finish_move1
     223                            .endif
     224                            .if NUM_DOINK_FINISHES > 1
     225                            .long   dnk_finish_move2
     226                            .endif
     227 00000260 00000000          .long   0
     228                    
     229                    
     230 00000280           mziccharge_buzz
     231 00000280     b5a0          move    *a13(BUT_VAL_UP),a0
         00000290     0bb0  
     232 000002a0     1fe0          btst    PLAYER_PUNCH_BIT,a0
     233 000002b0     ca0c          jrz     mzicno_punch
     234                    
     235                    
     236                    
     237 000002c0     b5a0          move    *a13(PLYRNUM),a0
         000002d0     0580  
     238 000002e0     0d5f          calla   get_punch_dtime
         000002f0 00000000! 
     239 00000310     0b40          cmpi    100,a0                  ;> min?
         00000320     ff9b  
     240 00000330     c404          jrlt    mzicno_punch
     241                    
     242 00000340     0d3f          callr   mzicscrt_buzz
         00000350     0004  
     243 00000360     0de0          setc
     244 00000370     0960          rets
     245                    
     246 00000380           mzicno_punch
     247 00000380     0320          clrc
     248 00000390     0960          rets
     249                    
     250                    
     251 000003a0           mzicscrt_buzz
     252                    
     253 000003a0     b5a0          move    *a13(PLYRMODE),a0
         000003b0     05c0  
     254 000003c0     0b40          cmpi    MODE_HEADHELD,a0
         000003d0     ffec  
     255 000003e0     ca00          jrz     mzicout
         000003f0     0244  
     256 00000400     0b40          cmpi    MODE_HEADHOLD,a0
         00000410     ffef  
     257 00000420     ca00          jrz     mzicout
         00000430     0240  
     258                    
     259 00000440     b5a0          move    *a13(ANIMODE),a0
         00000450     0660  
     260 00000460     1fa0          btst    MODE_UNINT_BIT,a0
     261 00000470     cb00          jrnz    mzicout
         00000480     023b  
     262                    
     263 00000490     0d5f          calla   get_opp_plyrmode
         000004a0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

     264 000004c0     0b40          cmpi    MODE_DEAD,a0
         000004d0     fff6  
     265 000004e0     ca00          jrz     mzicout
         000004f0     0234  
     266                    
     267 00000500     b5a0          move    *a13(PLYRMODE),a0
         00000510     05c0  
     268 00000520     0b40          cmpi    MODE_RUNNING,a0
         00000530     fffe  
     269 00000540     ca09          jrz     mzicleapbuzz
     270                    
     271 00000550     b5a0          move    *a13(STICK_VAL_CUR),a0
         00000560     0bc0  
     272 00000570     b5a1          move    *a13(NEW_FACING_DIR),a1
         00000580     04d0  
     273 00000590     0b81          andi    0ch,a1
         000005a0 fffffff3  
     274 000005c0     4801          cmp     a0,a1
     275 000005d0     cb1b          jrnz    mzicnorm
     276                    
     277 000005e0           mzicleapbuzz
     278 000005e0                   WRSND   W_DOINK,HDBUTT_T1
     279 000006b0                   FACE24  dnk,buzz2_anim
     280 00000750     0d5f          calla   change_anim1a
         00000760 00000000! 
     281 00000780     0960          rets
     282 00000790           mzicnorm
     283 00000790                   WRSND   W_DOINK,HDBUTT_T1
     284 00000860                   FACE24  dnk,buzz_anim
     285 00000900     0d5f          calla   change_anim1a
         00000910 00000000! 
     286 00000930     0960          rets
     287                    
     288 00000940           mzicboxing_pnch
     289 00000940     0010          .word   B_PUNCH,                J_ALL
     290 00000960     0010          .word   B_PUNCH,                J_ALL
     291 00000980     0010          .word   B_PUNCH,                J_ALL
     292 000009a0     0010          .word   B_PUNCH,                J_ALL
     293 000009c0     0010          .word   B_PUNCH,                J_ALL
     294 000009e0     0010          .word   B_PUNCH,                J_ALL
     295 00000a00     0010          .word   B_PUNCH,                J_ALL
     296 00000a20     803c          .word   8000h | 60              ;max
     297 00000a30 00000a50'         .long   scrt_glove
     298                    
     299 00000a50           scrt_glove
     300 00000a50     b5a0          move    *a13(ANIMODE),a0
         00000a60     0660  
     301 00000a70     1fa0          btst    MODE_UNINT_BIT,a0
     302 00000a80     cb00          jrnz    mzicout
         00000a90     01da  
     303                    
     304 00000aa0     0d5f          calla   get_opp_plyrmode
         00000ab0 00000000! 
     305 00000ad0     0b40          cmpi    MODE_ONGROUND,a0
         00000ae0     fffb  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     306 00000af0     ca00          jrz     mzicout
         00000b00     01d3  
     307 00000b10     0b40          cmpi    MODE_DEAD,a0
         00000b20     fff6  
     308 00000b30     ca00          jrz     mzicout
         00000b40     01cf  
     309 00000b50     0b40          cmpi    MODE_HEADHELD,a0
         00000b60     ffec  
     310 00000b70     ca00          jrz     mzicout
         00000b80     01cb  
     311                    
     312 00000b90     b5a0          MOVE    *A13(COMBO_COUNT),A0
         00000ba0     0af0  
     313 00000bb0     cb00          JRNZ    mzicout
         00000bc0     01c7  
     314                    
     315 00000bd0                   FACE24  dnk,box_anim
     316 00000c70     0d5f          calla   change_anim1a
         00000c80 00000000! 
     317 00000ca0                   WRSND   W_DOINK,SPUNCH_T1,SPUNCH_T2
     318                    
     319 00000e40     0960          rets
     320                    
     321 00000e50           mzichammer
     322 00000e50     0100          .word   B_SKICK,                        J_ALL
     323 00000e70     0008          .word   J_TOWARD,               J_REAL_LR
     324 00000e90     0008          .word   J_TOWARD,               J_REAL_LR
     325 00000eb0     8020          .word   8000h | 32              ;max
     326 00000ec0 00000ee0'         .long   scrt_hammer
     327                    
     328 00000ee0           scrt_hammer
     329 00000ee0     b5a0          move    *a13(ANIMODE),a0
         00000ef0     0660  
     330 00000f00     1fa0          btst    MODE_UNINT_BIT,a0
     331 00000f10     cb00          jrnz    mzicout
         00000f20     0191  
     332                    
     333 00000f30     b5a0          move    *a13(PLYRMODE),a0
         00000f40     05c0  
     334 00000f50     0b40          cmpi    MODE_ONTURNBKL,a0
         00000f60     fff9  
     335 00000f70     ca00          jrz     mzicout
         00000f80     018b  
     336                    
     337 00000f90     09e0          movi    dnk_4_hammer_anim,a0
         00000fa0 00000000! 
     338 00000fc0     0d5f          calla   change_anim1a
         00000fd0 00000000! 
     339                    
     340 00000ff0                   WRSND   W_DOINK,HDBUTT_T2
     341                    
     342 000010c0     0960          rets
     343                    
     344                    
     345 000010d0           mzicearslap
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     346 000010d0     0010          .word   B_PUNCH,                J_ALL
     347 000010f0     0008          .word   J_TOWARD,               J_REAL_LR
     348 00001110     000a          .word   J_DOWN_TOWARD,          J_REAL_LR
     349 00001130     0002          .word   J_DOWN,                 J_REAL_LR
     350 00001150     8032          .word   8000h | 50              ;max
     351 00001160 00001180'         .long   mzicscrt_earslap
     352                    
     353 00001180           mzicscrt_earslap
     354 00001180     b5a0          move    *a13(ANIMODE),a0
         00001190     0660  
     355 000011a0     1fa0          btst    MODE_UNINT_BIT,a0
     356 000011b0     cb00          jrnz    mzicout
         000011c0     0167  
     357                    
     358 000011d0     b5a0          move    *a13(PLYRMODE),a0
         000011e0     05c0  
     359 000011f0     0b40          cmpi    MODE_ONTURNBKL,a0
         00001200     fff9  
     360 00001210     ca00          jrz     mzicout
         00001220     0161  
     361                    
     362 00001230     0d5f          calla   get_opp_plyrmode
         00001240 00000000! 
     363 00001260     0b40          cmpi    MODE_DEAD,a0
         00001270     fff6  
     364 00001280     ca00          jrz     mzicout
         00001290     015a  
     365 000012a0     0b40          cmpi    MODE_HEADHELD,a0
         000012b0     ffec  
     366 000012c0     ca00          jrz     mzicout
         000012d0     0156  
     367                    
     368 000012e0     09e0          movi    dnk_4_earslap_anim,a0
         000012f0 00000000! 
     369 00001310     0d5f          calla   change_anim1a
         00001320 00000000! 
     370                    
     371 00001340                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
     372                    
     373 000014e0     0960          rets
     374                    
     375                    
     376 000014f0           mzicneck_grab
     377 000014f0     0040          .word   B_SPUNCH,               J_ALL
     378 00001510     0008          .word   J_TOWARD,               J_REAL_LR
     379 00001530     0008          .word   J_TOWARD,               J_REAL_LR
     380 00001550     8020          .word   8000h | 32              ;max
     381 00001560 00001580'         .long   mzicscrt_neck
     382                    
     383 00001580           mzicscrt_neck
     384 00001580     b5a0          move    *a13(ANIMODE),a0
         00001590     0660  
     385 000015a0     1fa0          btst    MODE_UNINT_BIT,a0
     386 000015b0     cb00          jrnz    mzicout
         000015c0     0127  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

     387                    
     388 000015d0     0d5f          calla   get_opp_plyrmode
         000015e0 00000000! 
     389 00001600     0b40          cmpi    MODE_ONGROUND,a0
         00001610     fffb  
     390 00001620     ca00          jrz     mzicout
         00001630     0120  
     391 00001640     0b40          cmpi    MODE_DEAD,a0
         00001650     fff6  
     392 00001660     ca00          jrz     mzicout
         00001670     011c  
     393 00001680     0b40          cmpi    MODE_HEADHELD,a0
         00001690     ffec  
     394 000016a0     ca00          jrz     mzicout
         000016b0     0118  
     395                    
     396 000016c0     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         000016d0     0cd0  
     397 000016e0     07a0          move    @PCNT,a0,L
         000016f0 00000000! 
     398 00001710     45c0          sub     a14,a0
     399 00001720     0b40          cmpi    2*60,a0
         00001730     ff87  
     400 00001740     c507          jrge    mzicok2
     401                    
     402                            .ref    dnk_3_fake_hold_anim
     403 00001750     09e0          movi    dnk_3_fake_hold_anim,a0
         00001760 00000000! 
     404 00001780     0d5f          calla   change_anim1a
         00001790 00000000! 
     405 000017b0     0960          rets
     406                    
     407 000017c0           mzicok2
     408 000017c0                   WRSND   W_DOINK,GRABFLING_T1,PUNCH_T2
     409                    
     410 00001960     b5a1          move    *a13(CLOSEST_XDIST),a1
         00001970     0370  
     411 00001980     0b41          cmpi    90,a1
         00001990     ffa5  
     412 000019a0     c707          jrgt    mzicstd_grab
     413                    
     414 000019b0     09e0          movi    dnk_3_head_hold2_anim,a0
         000019c0 00000000! 
     415 000019e0     0d5f          calla   change_anim1a
         000019f0 00000000! 
     416 00001a10     0960          rets
     417                    
     418 00001a20           mzicstd_grab
     419 00001a20     09e0          movi    dnk_3_head_hold_anim,a0
         00001a30 00000000! 
     420 00001a50     0d5f          calla   change_anim1a
         00001a60 00000000! 
     421 00001a80     0960          rets
     422                    
     423                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     424 00001a90           mzicgrab_fling2
     425 00001a90     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     426 00001ab0     800a          .word   8000h | 10              ;max
     427 00001ac0 00001b30'         .long   mzicscrt_grabfling2
     428                    
     429 00001ae0           mzichip_toss2
     430 00001ae0     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     431 00001b00     800a          .word   8000h | 10              ;max
     432 00001b10 00001b30'         .long   mzicscrt_grabfling2
     433                    
     434 00001b30           mzicscrt_grabfling2
     435 00001b30     b5a0          move    *a13(ANIMODE),a0
         00001b40     0660  
     436 00001b50     1fa0          btst    MODE_UNINT_BIT,a0
     437 00001b60     cb00          jrnz    mzicout
         00001b70     00cc  
     438                    
     439 00001b80     0d5f          calla   get_opp_plyrmode
         00001b90 00000000! 
     440 00001bb0     0b40          cmpi    MODE_BOUNCING,a0
         00001bc0     fffa  
     441 00001bd0     ca1f          jrz     mzicyes
     442 00001be0     0b40          cmpi    MODE_RUNNING,a0
         00001bf0     fffe  
     443 00001c00     ca1c          jrz     mzicyes
     444 00001c10     0b40          cmpi    MODE_HEADHELD,a0
         00001c20     ffec  
     445 00001c30     ca00          jrz     mzicck2
         00001c40     00c0  
     446 00001c50     0960          rets
     447                    
     448                    
     449 00001c60           mzicgrab_fling
     450                    
     451 00001c60     0040          .word   B_SPUNCH,               J_ALL
     452 00001c80     0004          .word   J_AWAY,         J_REAL_LR
     453 00001ca0     0004          .word   J_AWAY,         J_REAL_LR
     454 00001cc0     8020          .word   8000h | 32              ;max
     455 00001cd0 00001cf0'         .long   mzicscrt_grabfling
     456                    
     457 00001cf0           mzicscrt_grabfling
     458                    
     459                    
     460 00001cf0     b5a0          move    *a13(ANIMODE),a0
         00001d00     0660  
     461 00001d10     1fa0          btst    MODE_UNINT_BIT,a0
     462 00001d20     cb00          jrnz    mzicout
         00001d30     00b0  
     463                    
     464 00001d40     0d5f          calla   get_opp_plyrmode
         00001d50 00000000! 
     465 00001d70     0b40          cmpi    MODE_BOUNCING,a0
         00001d80     fffa  
     466 00001d90     ca03          jrz     mzicyes
     467 00001da0     0b40          cmpi    MODE_RUNNING,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

         00001db0     fffe  
     468 00001dc0     cb28          jrnz    mzicnope
     469 00001dd0           mzicyes
     470 00001dd0                   FACE24  dnk,hiptoss_anim
     471 00001e70     0d5f          calla   change_anim1a
         00001e80 00000000! 
     472                    
     473 00001ea0                   WRSND   W_DOINK,HIPTOSS_T1,PUNCH_T2
     474 00002040     0960          rets
     475                    
     476 00002050           mzicnope
     477 00002050     0d5f          calla   get_opp_plyrmode
         00002060 00000000! 
     478 00002080     0b40          cmpi    MODE_HEADHELD,a0
         00002090     ffec  
     479 000020a0     ca79          jrz     mzicout
     480 000020b0     0b40          cmpi    MODE_ONGROUND,a0
         000020c0     fffb  
     481 000020d0     ca76          jrz     mzicout
     482 000020e0     0b40          cmpi    MODE_DEAD,a0
         000020f0     fff6  
     483 00002100     ca73          jrz     mzicout
     484                    
     485                    
     486 00002110                   FACE24  dnk,grabfling_anim
     487 000021b0     0d5f          calla   change_anim1a
         000021c0 00000000! 
     488                    
     489 000021e0                   WRSND   W_DOINK,GRABFLING_T1,PUNCH_T2
     490 00002380     0960          rets
     491                    
     492                    
     493 00002390           mzichip_toss
     494                    
     495 00002390     0010          .word   B_PUNCH,                J_ALL
     496 000023b0     0004          .word   J_AWAY,         J_REAL_LR
     497 000023d0     0004          .word   J_AWAY,         J_REAL_LR
     498 000023f0     8020          .word   8000h | 32              ;max
     499 00002400 00002420'         .long   mzicscrt_hiptoss
     500                    
     501 00002420           mzicscrt_hiptoss
     502 00002420     b5a0          move    *a13(ANIMODE),a0
         00002430     0660  
     503 00002440     1fa0          btst    MODE_UNINT_BIT,a0
     504 00002450     cb3e          jrnz    mzicout
     505                    
     506 00002460     0d5f          calla   get_opp_plyrmode
         00002470 00000000! 
     507 00002490     0b40          cmpi    MODE_ONGROUND,a0
         000024a0     fffb  
     508 000024b0     ca38          jrz     mzicout
     509 000024c0     0b40          cmpi    MODE_DEAD,a0
         000024d0     fff6  
     510 000024e0     ca35          jrz     mzicout
     511 000024f0     0b40          cmpi    MODE_HEADHELD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

         00002500     ffec  
     512 00002510     ca33          jrz     mzicck2
     513 00002520     0b40          cmpi    MODE_INAIR,a0
         00002530     fffd  
     514 00002540     ca08          jrz     mzicdoit
     515 00002550     0b40          cmpi    MODE_INAIR2,a0
         00002560     ffea  
     516 00002570     ca05          jrz     mzicdoit
     517                    
     518 00002580     b5a0          move    *a13(CLOSEST_DIST),a0
         00002590     0360  
     519 000025a0     0b40          cmpi    70h,a0
         000025b0     ff8f  
     520 000025c0     c727          jrgt    mzicout
     521                    
     522 000025d0           mzicdoit
     523 000025d0                   FACE24  dnk,hiptoss_anim
     524 00002670     0d5f          calla   change_anim1a
         00002680 00000000! 
     525                    
     526 000026a0                   WRSND   W_DOINK,HIPTOSS_T1,PUNCH_T2
     527                    
     528 00002840     0960  mzicout rets
     529                    
     530 00002850           mzicck2
     531 00002850     b5a0          move    *a13(USR_VAR2),a0
         00002860     0860  
     532 00002870     cbd5          jrnz    mzicdoit
     533 00002880     0960          rets    
     534                    
     535                            .if NUM_DOINK_FINISHES
     536                     SUBRP  dnk_finish_move1
     537                    
     538                    wctbTIMEOUT     .equ    TSEC
     539                    
     540                    wctbend_wait
     541                            SLEEP           TSEC/4
     542                            move            @p1rounds,a0                    ; Get player 1 rounds
     543                            move            @p2rounds,a1                    ; Get player 2 rounds
     544                            or              a1,a0                           ; Put em together
     545                            cmpi            2,a0                            ; Anybody got 2?
     546                            jrlt            wctbend_wait                    ; br = no
     547                    
     548                    wctbreset
     549                            clr             a11
     550                            move            a11,@in_finish_move
     551                            SLEEPK          1
     552                            WAITSWITCH_DWN  J_UP,0,wctbreset
     553                            movi            wctbTIMEOUT,a11
     554                            move            a11,@in_finish_move
     555                            WAITSWITCH_DWN  J_DOWN,0,wctbreset
     556                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,wctbreset
     557                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,wctbreset
     558                            WAITSWITCH_DWN  B_PUNCH,J_ALL,wctbreset
     559                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     560                            movi            dnk_finish1_move,a0
     561                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     562                            DIE
     563                            .endif
     564                            
     565                    
     566                            .if NUM_DOINK_FINISHES > 1
     567                     SUBRP  dnk_finish_move2
     568                    
     569                    ytfbTIMEOUT     .equ    TSEC
     570                    
     571                    ytfbend_wait
     572                            SLEEP           TSEC/4
     573                            move            @p1rounds,a0                    ; Get player 1 rounds
     574                            move            @p2rounds,a1                    ; Get player 2 rounds
     575                            or              a1,a0                           ; Put em together
     576                            cmpi            2,a0                            ; Anybody got 2?
     577                            jrlt            ytfbend_wait                    ; br = no
     578                    
     579                    ytfbreset
     580                            clr             a11
     581                            move            a11,@in_finish_move
     582                            SLEEPK          1
     583                            WAITSWITCH_DWN  J_UP,0,ytfbreset
     584                            movi            ytfbTIMEOUT,a11
     585                            move            a11,@in_finish_move
     586                            WAITSWITCH_DWN  J_UP,0,ytfbreset
     587                            WAITSWITCH_DWN  J_RIGHT,J_UP,ytfbreset
     588                            WAITSWITCH_DWN  J_RIGHT,J_UP,ytfbreset
     589                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,ytfbreset
     590                    
     591                            movi            dnk_finish2_move,a0
     592                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     593                            DIE
     594                            .endif
     595                    
     596                    
     597 00002890           dnk_hdhold_slam
     598                    
     599              003c  wyjvTIMEOUT     .equ    60
     600                    
     601 00002890           wyjvlp0
     602 00002890                   SLEEPK  1
     603 000028d0           wyjvlp
     604 000028d0     b500          move    *a8(PLYRMODE),a0
         000028e0     05c0  
     605 000028f0     0b40          cmpi    MODE_HEADHOLD,a0
         00002900     ffef  
     606 00002910     ca03          jrz     wyjvcont
     607 00002920     0b40          cmpi    MODE_HEADHELD,a0
         00002930     ffec  
     608 00002940     cbf4          jrnz    wyjvlp0
     609                    
     610 00002950           wyjvcont
     611 00002950     576b          clr     a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     612                    
     613                    
     614 00002960                   WAITSWITCH_DWN  J_DOWN,0,wyjvlp
     615                    
     616 00002ac0     09cb          movi    wyjvTIMEOUT,a11
         00002ad0     003c  
     617                    
     618 00002ae0                   WAITSWITCH_DWN  J_DOWN,0,wyjvlp
     619 00002c40                   WAITSWITCH_DWN  B_SKICK,J_ALL,wyjvlp
     620 00002da0           wyjvcontz
     621 00002da0     b500          move    *a8(PLYRMODE),a0
         00002db0     05c0  
     622 00002dc0     0b40          cmpi    MODE_HEADHOLD,a0
         00002dd0     ffef  
     623 00002de0     ca1c          jrz     wyjvslam
     624 00002df0     0b40          cmpi    MODE_HEADHELD,a0
         00002e00     ffec  
     625 00002e10     cba7          jrnz    wyjvlp0
     626 00002e20     b50e          move    *a8(I_WILL_DIE),A14
         00002e30     0b30  
     627 00002e40     cba4          jrnz    wyjvlp0
     628                    
     629                    
     630 00002e50     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002e60     0ae0  
     631 00002e70     cba1          jrnz    wyjvlp0                         ;ignore
     632                    
     633 00002e80     0d5f          CALLA   DO_REVERSAL
         00002e90 00000000! 
     634 00002eb0     0d5f          CALLA   DO_REVERSAL_MESS
         00002ec0 00000000! 
     635                    
     636                            ;target WHOHITME -- don't hit anyone else
     637 00002ee0                   SMRTTGT a8,WHOHITME
     638                    
     639                            ;immobilize WHOHITME
     640 00002f80     b700          move    *a8(WHOHITME),a0,L
         00002f90     04e0  
     641 00002fa0     c018          jruc    wyjvis_reversal
     642                    
     643 00002fb0           wyjvslam
     644 00002fb0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002fc0     0ae0  
     645 00002fd0     cb8b          jrnz    wyjvlp0                         ;ignore
     646                    
     647 00002fe0     182a          movk    1,a10
     648 00002ff0                   CREATE  MESSAGE_PID,BONUS_MESS
     649                    
     650                            ;target WHOIHIT -- don't hit anyone else
     651 00003070                   SMRTTGT a8,WHOIHIT
     652                    
     653                            ;immobilize WHOIHIT
     654 00003110     b700          move    *a8(WHOIHIT),a0,L
         00003120     0500  
     655                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

     656 00003130           wyjvis_reversal
     657 00003130     19ee          movk    15,a14
     658 00003140     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00003150     0ae0  
     659                    
     660 00003160     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003170 00000000! 
     661 00003190                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
     662                    
     663 00003330     09ee          movi    dnk_3_head_slam_anim,a14
         00003340 00000000! 
     664 00003360     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003370     0930  
     665                    
     666 00003380                   SLEEPK  20
     667                    
     668 000033c0     c000          jruc    wyjvlp
         000033d0     ff4f  
     669                    
     670 000033e0           dnk_hdhold_pile
     671                    
     672              003c  wzvqTIMEOUT     .equ    60
     673                    
     674 000033e0           wzvqlp0
     675 000033e0                   SLEEPK  1
     676 00003420           wzvqlp
     677 00003420     b500          move    *a8(PLYRMODE),a0
         00003430     05c0  
     678 00003440     0b40          cmpi    MODE_HEADHOLD,a0
         00003450     ffef  
     679 00003460     ca03          jrz     wzvqcont
     680 00003470     0b40          cmpi    MODE_HEADHELD,a0
         00003480     ffec  
     681 00003490     cbf4          jrnz    wzvqlp0
     682                    
     683 000034a0           wzvqcont
     684 000034a0     576b          clr     a11
     685                    
     686 000034b0                   WAITSWITCH_DWN  J_TOWARD,0,wzvqlp
     687                    
     688 00003610     09cb          movi    wzvqTIMEOUT,a11
         00003620     003c  
     689                    
     690 00003630                   WAITSWITCH_DWN  J_TOWARD,0,wzvqlp
     691 00003790                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,wzvqlp
     692 000038f0           wzvqcontz       
     693 000038f0     b500          move    *a8(PLYRMODE),a0
         00003900     05c0  
     694 00003910     0b40          cmpi    MODE_HEADHOLD,a0
         00003920     ffef  
     695 00003930     ca1c          jrz     wzvqslam
     696 00003940     0b40          cmpi    MODE_HEADHELD,a0
         00003950     ffec  
     697 00003960     cba7          jrnz    wzvqlp0
     698 00003970     b50e          move    *a8(I_WILL_DIE),A14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

         00003980     0b30  
     699 00003990     cba4          jrnz    wzvqlp0
     700                    
     701 000039a0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000039b0     0ae0  
     702 000039c0     cba1          jrnz    wzvqlp0                         ;ignore
     703                    
     704 000039d0     0d5f          CALLA   DO_REVERSAL
         000039e0 00000000! 
     705 00003a00     0d5f          CALLA   DO_REVERSAL_MESS
         00003a10 00000000! 
     706                    
     707                            ;target WHOHITME -- don't hit anyone else
     708 00003a30                   SMRTTGT a8,WHOHITME
     709                    
     710                            ;immobilize WHOHITME
     711 00003ad0     b700          move    *a8(WHOHITME),a0,L
         00003ae0     04e0  
     712 00003af0     c018          jruc    wzvqis_reversal
     713                    
     714 00003b00           wzvqslam
     715 00003b00     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003b10     0ae0  
     716 00003b20     cb8b          jrnz    wzvqlp0                         ;ignore
     717                    
     718 00003b30     18ea          movk    7,A10                   ;Pile driver
     719 00003b40                   CREATE  MESSAGE_PID,BONUS_MESS
     720                    
     721                            ;target WHOIHIT -- don't hit anyone else
     722 00003bc0                   SMRTTGT a8,WHOIHIT
     723                    
     724                            ;immobilize WHOIHIT
     725 00003c60     b700          move    *a8(WHOIHIT),a0,L
         00003c70     0500  
     726                    
     727 00003c80           wzvqis_reversal
     728 00003c80     19ee          movk    15,a14
     729 00003c90     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00003ca0     0ae0  
     730                    
     731 00003cb0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003cc0 00000000! 
     732 00003ce0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
     733 00003e80     09ee          movi    dnk_3_pile_driver_anim,a14
         00003e90 00000000! 
     734 00003eb0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003ec0     0930  
     735                    
     736 00003ed0                   SLEEPK  20
     737                    
     738 00003f10     c000          jruc    wzvqlp
         00003f20     ff4f  
     739                    
     740                    
     741 00003f30           dnk_hdhold_combo1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

     742                    
     743              003c  jgjbTIMEOUT     .equ    60
     744                    
     745 00003f30           jgjblp0
     746 00003f30                   SLEEPK  1
     747 00003f70           jgjblp
     748 00003f70     b500          move    *a8(PLYRMODE),a0
         00003f80     05c0  
     749 00003f90     0b40          cmpi    MODE_HEADHOLD,a0
         00003fa0     ffef  
     750 00003fb0     cbf7          jrnz    jgjblp0
     751 00003fc0     0d5f          calla   CHECK_COMBO_GO
         00003fd0 00000000! 
     752 00003ff0     c4f3          jrlt    jgjblp0
     753                    
     754 00004000     576b          clr     a11
     755                    
     756 00004010                   WAITSWITCH_DWN  J_TOWARD,0,jgjblp
     757                    
     758 00004170     09cb          movi    jgjbTIMEOUT,a11
         00004180     003c  
     759                    
     760 00004190                   WAITSWITCH_DWN  J_TOWARD,0,jgjblp
     761 000042f0                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,jgjblp
     762                    
     763 00004450     b500          move    *a8(PLYRMODE),a0
         00004460     05c0  
     764 00004470     0b40          cmpi    MODE_HEADHOLD,a0
         00004480     ffef  
     765 00004490     ca03          jrz     jgjbslam
     766 000044a0     0b40          cmpi    MODE_HEADHELD,a0
         000044b0     ffec  
     767 000044c0     cba6          jrnz    jgjblp0
     768                    
     769                    
     770 000044d0           jgjbslam
     771 000044d0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000044e0     0ae0  
     772 000044f0     cba3          jrnz    jgjblp0                         ;ignore
     773                    
     774                    
     775                            ;target WHOIHIT
     776 00004500                   SMRTTGT a8,WHOIHIT
     777                    
     778 000045a0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000045b0 00000000! 
     779                    
     780 000045d0     09ee          movi    dnk_combo_uppercut_to_head_anim,a14
         000045e0 00000000! 
     781 00004600     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004610     0930  
     782                    
     783 00004620                   SLEEPK  20
     784                    
     785 00004660     c090          jruc    jgjblp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     786                    
     787                    
     788 00004670           dnk_hdhold_combo2
     789                    
     790              003c  rlucTIMEOUT     .equ    60
     791                    
     792 00004670           rluclp0
     793 00004670                   SLEEPK  1
     794 000046b0           rluclp
     795 000046b0     b500          move    *a8(PLYRMODE),a0
         000046c0     05c0  
     796 000046d0     0b40          cmpi    MODE_HEADHOLD,a0
         000046e0     ffef  
     797 000046f0     cbf7          jrnz    rluclp0
     798 00004700     0d5f          calla   CHECK_COMBO_GO
         00004710 00000000! 
     799 00004730     c4f3          jrlt    rluclp0
     800                    
     801                    
     802 00004740     576b          clr     a11
     803                    
     804 00004750                   WAITSWITCH_DWN  J_TOWARD,0,rluclp
     805                    
     806 000048b0     09cb          movi    rlucTIMEOUT,a11
         000048c0     003c  
     807                    
     808 000048d0                   WAITSWITCH_DWN  J_TOWARD,0,rluclp
     809 00004a30                   WAITSWITCH_DWN  B_SKICK,J_ALL,rluclp
     810                    
     811 00004b90     b500          move    *a8(PLYRMODE),a0
         00004ba0     05c0  
     812 00004bb0     0b40          cmpi    MODE_HEADHOLD,a0
         00004bc0     ffef  
     813 00004bd0     ca03          jrz     rlucslam
     814 00004be0     0b40          cmpi    MODE_HEADHELD,a0
         00004bf0     ffec  
     815 00004c00     cba6          jrnz    rluclp0
     816                    
     817                    
     818 00004c10           rlucslam
     819 00004c10     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004c20     0ae0  
     820 00004c30     cba3          jrnz    rluclp0                         ;ignore
     821                    
     822 00004c40     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004c50 00000000! 
     823                    
     824                            ;target WHOIHIT
     825 00004c70                   SMRTTGT a8,WHOIHIT
     826                    
     827 00004d10     09ee          movi    dnk_4_combo_kick_anim,a14
         00004d20 00000000! 
     828 00004d40     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004d50     0930  
     829                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     830 00004d60                   SLEEPK  20
     831                    
     832 00004da0     c090          jruc    rluclp
     833                    
     834                    
     835 00004db0           dnk_grab_toss_air
     836                    
     837              0028  yifpTIMEOUT     .equ    40
     838                    
     839 00004db0           yifplp0
     840 00004db0                   SLEEPK  1
     841 00004df0           yifplp
     842 00004df0     576b          clr     a11
     843                    
     844 00004e00                   WAITSWITCH_DWN  J_AWAY,0,yifplp
     845                    
     846 00004f60     09cb          movi    yifpTIMEOUT,a11
         00004f70     0028  
     847                    
     848 00004f80                   WAITSWITCH_DWN  J_AWAY,0,yifplp
     849 000050e0                   WAITSWITCH_DWN  B_PUNCH,J_ALL,yifplp
     850                    
     851 00005240     b500          move    *a8(ANIMODE),a0
         00005250     0660  
     852 00005260     1fa0          btst    MODE_UNINT_BIT,a0
     853 00005270     cbb7          jrnz    yifplp
     854                    
     855 00005280     b500          move    *a8(PLYRMODE),a0
         00005290     05c0  
     856 000052a0     0b40          cmpi    MODE_HEADHOLD,a0
         000052b0     ffef  
     857 000052c0     caae          jreq    yifplp0
     858                    
     859 000052d0                   SWAP    a8,a13
     860 00005300     0d5f          calla   get_opp_plyrmode
         00005310 00000000! 
     861 00005330                   SWAP    a8,a13
     862 00005360     0b40          cmpi    MODE_ONGROUND,a0
         00005370     fffb  
     863 00005380     caa6          jrz     yifplp
     864 00005390     0b40          cmpi    MODE_DEAD,a0
         000053a0     fff6  
     865 000053b0     caa3          jrz     yifplp
     866 000053c0     0b40          cmpi    MODE_INAIR,a0
         000053d0     fffd  
     867 000053e0     ca40          jrz     yifpdoit2
     868 000053f0     0b40          cmpi    MODE_INAIR2,a0
         00005400     ffea  
     869 00005410     ca3d          jrz     yifpdoit2
     870                    
     871 00005420     b500          move    *a8(CLOSEST_NUM),a0
         00005430     03a0  
     872 00005440                   X32     a0
     873 00005450     0b20          addi    process_ptrs,a0
         00005460 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

     874 00005480     8600          move    *a0,a0,L
     875 00005490     b400          move    *a0(ATTACK_TYPE),a0
         000054a0     05e0  
     876 000054b0     0b40          cmpi    AT_LEAPING,a0
         000054c0     ffc6  
     877 000054d0     ca31          jrz     yifpdoit2
     878                    
     879 000054e0     b500          move    *a8(CLOSEST_DIST),a0
         000054f0     0360  
     880 00005500     0b40          cmpi    6ch,a0
         00005510     ff93  
     881 00005520     c78c          jrgt    yifplp
     882                    
     883 00005530                   FACE24  dnk,hiptoss_anim
     884 000055d0     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         000055e0     0930  
     885                    
     886 000055f0                   WRSND   W_DOINK,GRABFLING_T1,PUNCH_T2
     887                    
     888 00005790                   SLEEPK  20
     889 000057d0     c000          jruc    yifplp
         000057e0     ff60  
     890                    
     891 000057f0           yifpdoit2       FACE24  dnk,hiptoss2_anim
     892 00005890     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         000058a0     0930  
     893                    
     894 000058b0                   WRSND   W_DOINK,GRABFLING_T1,PUNCH_T2
     895                    
     896 00005a50                   SLEEPK  20
     897                    
     898 00005a90     c000          jruc    yifplp
         00005aa0     ff34  
     899                    
     900                    
     901 00005ab0            SUBR   std_walk_fast
     902                    
     903              003d  ojvpTIMEOUT     .equ    61
     904                    
     905 00005ab0           ojvplp0
     906 00005ab0                   SLEEPK  1
     907 00005af0           ojvplp
     908 00005af0     b500          move    *a8(WALK_FAST),a0
         00005b00     0b40  
     909 00005b10     cbf9          jrnz    ojvplp0
     910 00005b20     b500          move    *a8(PLYRMODE),a0
         00005b30     05c0  
     911 00005b40     0b40          cmpi    MODE_NORMAL,a0
         00005b50     ffff  
     912 00005b60     cbf4          jrnz    ojvplp0
     913                    
     914 00005b70     576b          clr     a11
     915                    
     916 00005b80                   WAITSWITCH_DWN  J_AWAY,0,ojvplp
     917                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     918 00005ce0     09cb          movi    ojvpTIMEOUT,a11
         00005cf0     003d  
     919                    
     920 00005d00                   WAITSWITCH_DWN  J_DOWN_AWAY,0,ojvplp
     921 00005e60                   WAITSWITCH_DWN  J_DOWN,0,ojvplp
     922 00005fc0                   WAITSWITCH_DWN  J_DOWN_TOWARD,0,ojvplp
     923 00006120                   WAITSWITCH_DWN  J_TOWARD,0,ojvplp
     924 00006280                   WAITSWITCH_DWN  J_UP_TOWARD,0,ojvplp
     925 00006400                   WAITSWITCH_DWN  J_UP,0,ojvplp
     926 00006590                   WAITSWITCH_DWN  J_UP_AWAY,0,ojvplp
     927                    
     928                    
     929 00006720     b500          move    *a8(PLYRMODE),a0
         00006730     05c0  
     930 00006740     0b40          cmpi    MODE_NORMAL,a0
         00006750     ffff  
     931 00006760     cb00          jrnz    ojvplp0
         00006770     ff33  
     932                    
     933 00006780     09c0          movi    15*60,a0
         00006790     0384  
     934 000067a0     b008          move    a0,*a8(WALK_FAST)
         000067b0     0b40  
     935                    
     936 000067c0     b500          move    *a8(WRESTLERNUM),a0
         000067d0     0590  
     937 000067e0     14c0          subk    6,a0
     938 000067f0     cb08          jrnz    ojvpnot_dnk
     939 00006800     09e0          movi    30000h,a0
         00006810 00030000  
     940 00006830     b208          move    a0,*a8(OBJ_YVEL),L
         00006840     02f0  
     941                    
     942 00006850     09c0          movi    211h,a0
         00006860     0211  
     943 00006870     c002          jruc    ojvpgo
     944                    
     945 00006880           ojvpnot_dnk
     946 00006880     09c0          movi    17eh,a0
         00006890     017e  
     947 000068a0     0d5f  ojvpgo  calla   ADD_VOICE
         000068b0 00000000! 
     948                    
     949 000068d0     09ce          movi    0101h,a14
         000068e0     0101  
     950 000068f0     b1c8          move    a14,*a8(OBJ_CONST)
         00006900     0790  
     951 00006910     b50e          move    *a8(OBJ_CONTROL),a14
         00006920     0780  
     952 00006930     0b8e          andni   01111b,a14
         00006940 0000000f  
     953 00006960     0bae          ori     M_CONNON,a14
         00006970 00000008  
     954 00006990     b1c8          move    a14,*a8(OBJ_CONTROL)
         000069a0     0780  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     955                    
     956 000069b0                   SLEEPK  3
     957                     
     958 000069f0     b50e          move    *a8(OBJ_CONTROL),a14
         00006a00     0780  
     959 00006a10     0b8e          andni   01111b,a14
         00006a20 0000000f  
     960 00006a40     0bae          ori     DMAWNZ,a14
         00006a50 00008002  
     961 00006a70     b1c8          move    a14,*a8(OBJ_CONTROL)
         00006a80     0780  
     962                    
     963 00006a90                   SLEEPK  3
     964                    
     965 00006ad0     09ce          movi    0101h,a14
         00006ae0     0101  
     966 00006af0     b1c8          move    a14,*a8(OBJ_CONST)
         00006b00     0790  
     967 00006b10     b50e          move    *a8(OBJ_CONTROL),a14
         00006b20     0780  
     968 00006b30     0b8e          andni   01111b,a14
         00006b40 0000000f  
     969 00006b60     0bae          ori     M_CONNON,a14
         00006b70 00000008  
     970 00006b90     b1c8          move    a14,*a8(OBJ_CONTROL)
         00006ba0     0780  
     971                    
     972 00006bb0                   SLEEPK  3
     973                    
     974 00006bf0     b50e          move    *a8(OBJ_CONTROL),a14
         00006c00     0780  
     975 00006c10     0b8e          andni   01111b,a14
         00006c20 0000000f  
     976 00006c40     0bae          ori     DMAWNZ,a14
         00006c50 00008002  
     977 00006c70     b1c8          move    a14,*a8(OBJ_CONTROL)
         00006c80     0780  
     978                    
     979 00006c90                   SLEEP   30
     980                    
     981 00006ce0     b500          move    *a8(WRESTLERNUM),a0
         00006cf0     0590  
     982 00006d00     14c0          subk    6,a0
     983 00006d10     cb17          jrnz    ojvptag
     984                    
     985 00006d20     09c0          movi    0b2h,a0                 ;Honk
         00006d30     00b2  
     986 00006d40     0d5f          calla   triple_sound
         00006d50 00000000! 
     987                    
     988 00006d70                   SLEEPK  18
     989                    
     990 00006db0     09c0          movi    0b2h,a0                 ;Honk
         00006dc0     00b2  
     991 00006dd0     0d5f          calla   triple_sound
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

         00006de0 00000000! 
     992                    
     993 00006e00                   SLEEPK  18
     994                    
     995 00006e40     09c0          movi    0b2h,a0                 ;Honk
         00006e50     00b2  
     996 00006e60     0d5f          calla   triple_sound
         00006e70 00000000! 
     997                    
     998 00006e90           ojvptag SLEEPK  5
     999 00006ed0     b500          move    *a8(WALK_FAST),a0
         00006ee0     0b40  
    1000 00006ef0     cbf9          jrnz    ojvptag
    1001                    
    1002 00006f00     09ce          movi    0101h,a14
         00006f10     0101  
    1003 00006f20     b1c8          move    a14,*a8(OBJ_CONST)
         00006f30     0790  
    1004 00006f40     b50e          move    *a8(OBJ_CONTROL),a14
         00006f50     0780  
    1005 00006f60     0b8e          andni   01111b,a14
         00006f70 0000000f  
    1006 00006f90     0bae          ori     M_CONNON,a14
         00006fa0 00000008  
    1007 00006fc0     b1c8          move    a14,*a8(OBJ_CONTROL)
         00006fd0     0780  
    1008                    
    1009 00006fe0                   SLEEPK  3
    1010                    
    1011 00007020     b50e          move    *a8(OBJ_CONTROL),a14
         00007030     0780  
    1012 00007040     0b8e          andni   01111b,a14
         00007050 0000000f  
    1013 00007070     0bae          ori     DMAWNZ,a14
         00007080 00008002  
    1014 000070a0     b1c8          move    a14,*a8(OBJ_CONTROL)
         000070b0     0780  
    1015                    
    1016 000070c0                   DIE
    1017                    
    1018 000070f0            SUBR   std_taunt
    1019                    
    1020 000070f0     b50e          move    *a8(PLYR_TYPE),a14
         00007100     05a0  
    1021 00007110     cb80          janz    SUCIDE
         00007120 00000000! 
    1022                    
    1023              003d  zehjTIMEOUT     .equ    61
    1024                    
    1025 00007140           zehjlp0
    1026 00007140                   SLEEPK  1
    1027 00007180           zehjlp
    1028 00007180     b500          move    *a8(PLYRMODE),a0
         00007190     05c0  
    1029 000071a0     0b40          cmpi    MODE_BLOCK,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

         000071b0     fff8  
    1030 000071c0     cbf7          jrnz    zehjlp0
    1031                    
    1032 000071d0     576b          clr     a11
    1033                    
    1034 000071e0                   WAITSWITCH_DWN  J_UP,B_BLOCK,zehjlp
    1035                    
    1036 00007340     b50e          move    *a8(BUT_VAL_CUR),a14
         00007350     0b90  
    1037 00007360     1fce          btst    PLAYER_BLOCK_BIT,a14
    1038 00007370     cadc          jrz     zehjlp0
    1039                    
    1040 00007380     09cb          movi    zehjTIMEOUT,a11
         00007390     003d  
    1041                    
    1042 000073a0                   WAITSWITCH_DWN  J_UP_TOWARD,B_BLOCK,zehjlp
    1043 00007500                   WAITSWITCH_DWN  J_TOWARD,B_BLOCK,zehjlp
    1044 00007660                   WAITSWITCH_DWN  J_DOWN_TOWARD,B_BLOCK,zehjlp
    1045 000077c0                   WAITSWITCH_DWN  J_DOWN,B_BLOCK,zehjlp
    1046 00007920                   WAITSWITCH_DWN  J_DOWN_AWAY,B_BLOCK,zehjlp
    1047 00007ab0                   WAITSWITCH_DWN  J_AWAY,B_BLOCK,zehjlp
    1048 00007c40                   WAITSWITCH_DWN  J_UP_AWAY,B_BLOCK,zehjlp
    1049                    
    1050 00007dd0     b50e          move    *a8(BUT_VAL_CUR),a14
         00007de0     0b90  
    1051 00007df0     1fce          btst    PLAYER_BLOCK_BIT,a14
    1052 00007e00     ca00          jrz     zehjlp0
         00007e10     ff32  
    1053                    
    1054 00007e20     b500          move    *a8(PLYRMODE),a0
         00007e30     05c0  
    1055 00007e40     0b40          cmpi    MODE_BLOCK,a0
         00007e50     fff8  
    1056 00007e60     cb00          jrne    zehjlp0
         00007e70     ff2c  
    1057                    
    1058                            ;no taunts if all opponents are dead.
    1059 00007e80                   SWAP    a8,a13
    1060 00007eb0     0d5f          calla   get_opp_plyrmode
         00007ec0 00000000! 
    1061 00007ee0                   SWAP    a8,a13
    1062 00007f10     0b40          cmpi    MODE_DEAD,a0
         00007f20     fff6  
    1063 00007f30     ca00          jreq    zehjlp0
         00007f40     ff1f  
    1064                    
    1065 00007f50                   SWAP    a8,a13
    1066 00007f80                   FACETBL zehjtaunt_tbl
    1067 00007ff0     0d5f          calla   change_anim1a
         00008000 00000000! 
    1068 00008020                   SWAP    a8,a13
    1069                    
    1070 00008050     09e0          movi    8000h+12*60,a0
         00008060 000082d0  
    1071 00008080     b008          move    a0,*a8(RISK)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

         00008090     0950  
    1072                    
    1073 000080a0                   DIE
    1074                    
    1075                    
    1076 000080d0           zehjtaunt_tbl
    1077 000080d0                   REFLONG hrt_4_taunt_anim        ;0 Bret Hart
    1078 000080f0                   REFLONG rzr_4_taunt_anim        ;1 Razor Ramon
    1079 00008110                   REFLONG und_4_taunt_anim        ;2 Undertaker
    1080 00008130                   REFLONG yok_4_taunt_anim        ;3 Yokozuna
    1081 00008150                   REFLONG shn_4_taunt_anim        ;4 Shawn Michaels
    1082 00008170                   REFLONG bam_4_taunt_anim        ;5 Bam Bam
    1083 00008190                   REFLONG dnk_4_taunt_anim        ;6 Doink
    1084 000081b0 00000000          .long   0                       ;7 spare
    1085 000081d0                   REFLONG lex_4_taunt_anim        ;8 Lex Luger
    1086                    
    1087                    
    1088              0160  omixCHARGE_TIME .equ    SM_USRW1        ;
    1089                    
    1090 000081f0           dnk_charge_flykick
    1091                    
    1092 000081f0           omixstart_over
    1093 000081f0     57ce          clr     a14
    1094 00008200     b1cd          move    a14,*a13(omixCHARGE_TIME),W
         00008210     0160  
    1095 00008220           omixloop1
    1096 00008220                   SLEEPK  1
    1097                    
    1098 00008260     b5ae          move    *a13(omixCHARGE_TIME),a14,W
         00008270     0160  
    1099 00008280     102e          inc     a14
    1100 00008290     b1cd          move    a14,*a13(omixCHARGE_TIME),W
         000082a0     0160  
    1101                    
    1102 000082b0     b500          move    *a8(BUT_VAL_CUR),a0
         000082c0     0b90  
    1103 000082d0     1f60          btst    PLAYER_SKICK_BIT,a0
    1104 000082e0     ca01          jrz     omixp1
    1105                    
    1106 000082f0     c0f2          jruc    omixloop1
    1107                    
    1108 00008300           omixp1
    1109                    
    1110 00008300     b5ae          move    *a13(omixCHARGE_TIME),a14
         00008310     0160  
    1111 00008320     0b4e          cmpi    100,a14
         00008330     ff9b  
    1112 00008340     c4ea          jrlt    omixstart_over
    1113                    
    1114 00008350     b500          move    *a8(GETUP_TIME),a0
         00008360     0460  
    1115 00008370     cbe7          jrnz    omixstart_over
    1116 00008380     b500          move    *a8(PLYRMODE),a0
         00008390     05c0  
    1117 000083a0     0b40          cmpi    MODE_HEADHELD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

         000083b0     ffec  
    1118 000083c0     cae2          jrz     omixstart_over
    1119 000083d0     0b40          cmpi    MODE_HEADHOLD,a0
         000083e0     ffef  
    1120 000083f0     cadf          jrz     omixstart_over
    1121 00008400     0b40          cmpi    MODE_ONGROUND,a0
         00008410     fffb  
    1122 00008420     cadc          jrz     omixstart_over
    1123 00008430     0b40          cmpi    MODE_DEAD,a0
         00008440     fff6  
    1124 00008450     cad9          jrz     omixstart_over
    1125                    
    1126 00008460     b500          move    *a8(CLOSEST_NUM),a0
         00008470     03a0  
    1127 00008480                   X32     a0
    1128 00008490     0b20          addi    process_ptrs,a0
         000084a0 00000000! 
    1129 000084c0     8600          move    *a0,a0,L
    1130 000084d0     b400          move    *a0(PLYRMODE),a0
         000084e0     05c0  
    1131 000084f0     0b40          cmpi    MODE_ONGROUND,a0
         00008500     fffb  
    1132 00008510     cacd          jrz     omixstart_over
    1133 00008520     0b40          cmpi    MODE_DEAD,a0
         00008530     fff6  
    1134 00008540     caca          jrz     omixstart_over
    1135                    
    1136 00008550     b50e          move    *a8(ANIMODE),a14
         00008560     0660  
    1137 00008570     1fae          btst    MODE_UNINT_BIT,a14
    1138 00008580     cbc6          jrnz    omixstart_over
    1139                    
    1140                            .ref    ck_ignore_a8
    1141 00008590     0d5f          calla   ck_ignore_a8
         000085a0 00000000! 
    1142 000085c0     c8c2          jrc     omixstart_over
    1143                    
    1144 000085d0     09ee          movi    dnk_flying_kick_anim,a14
         000085e0 00000000! 
    1145 00008600     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00008610     0930  
    1146 00008620                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    1147                    
    1148 000087c0                   SETMODE INAIR
    1149                    
    1150 00008870     c097          jruc    omixstart_over
    1151                            
    1152                    
    1153                    
    1154 00008880           dnk_hdhold_buzz
    1155                    
    1156              003c  isgbTIMEOUT     .equ    60
    1157                    
    1158 00008880           isgblp0
    1159 00008880                   SLEEPK  1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1160 000088c0           isgblp
    1161 000088c0     b500          move    *a8(PLYRMODE),a0
         000088d0     05c0  
    1162 000088e0     0b40          cmpi    MODE_HEADHOLD,a0
         000088f0     ffef  
    1163 00008900     ca03          jrz     isgbcont
    1164 00008910     0b40          cmpi    MODE_HEADHELD,a0
         00008920     ffec  
    1165 00008930     cbf4          jrnz    isgblp0
    1166 00008940           isgbcont
    1167 00008940     576b          clr     a11
    1168                    
    1169 00008950                   WAITSWITCH_DWN  J_DOWN,0,isgblp
    1170                    
    1171 00008ab0     09cb          movi    isgbTIMEOUT,a11
         00008ac0     003c  
    1172                    
    1173 00008ad0                   WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,isgblp
    1174 00008c30                   WAITSWITCH_DWN  B_PUNCH,J_ALL,isgblp
    1175                            
    1176 00008d90     b500          move    *a8(PLYRMODE),a0
         00008da0     05c0  
    1177 00008db0     0b40          cmpi    MODE_HEADHOLD,a0
         00008dc0     ffef  
    1178 00008dd0     cbaa          jrnz    isgblp0
    1179                    
    1180 00008de0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00008df0 00000000! 
    1181 00008e10     09ee          movi    dnk_4_buzz_anim,a14
         00008e20 00000000! 
    1182 00008e40     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00008e50     0930  
    1183                    
    1184 00008e60                   WRSND   W_DOINK,HDBUTT_T1
    1185                    
    1186 00008f30                   SLEEP   120
    1187                    
    1188 00008f80     c093          jruc    isgblp
    1189                    
    1190                    
    1191 00008f90            SUBR   doink_ani_init
    1192                    
    1193 00008f90     b5a0          move    *a13(FACING_DIR),a0
         00008fa0     04c0  
    1194 00008fb0     1f80          btst    PLAYER_RIGHT_BIT,a0
    1195 00008fc0     cb18          jrnz    hlcqp1
    1196 00008fd0     09e0          movi    dnk_stand4_anim,a0
         00008fe0 00000000! 
    1197 00009000     0d5f          calla   change_anim1a
         00009010 00000000! 
    1198                    
    1199 00009030     09e0          movi    dnk_torso4_anim,a0
         00009040 00000000! 
    1200 00009060     0d5f          calla   change_anim2a
         00009070 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1201                    
    1202 00009090                   PUSH    a10
    1203 000090a0     4daa          move    a13,a10
    1204 000090b0                   CREATE  TAUNT_PID,do_taunt
    1205 00009130                   PULL    a10
    1206                    
    1207 00009140     0960          rets
    1208                    
    1209 00009150           hlcqp1
    1210 00009150     09e0          movi    dnk_stand2_anim,a0
         00009160 00000000! 
    1211 00009180     0d5f          calla   change_anim1a
         00009190 00000000! 
    1212                    
    1213 000091b0     09e0          movi    dnk_torso2_anim,a0
         000091c0 00000000! 
    1214 000091e0     0d5f          calla   change_anim2a
         000091f0 00000000! 
    1215                    
    1216 00009210     0960          rets
    1217                    
    1218 00009220            SUBR   do_taunt
    1219                    
    1220 00009220     05a0          move    @HALT,a0
         00009230 00000000! 
    1221 00009250     ca80          jaz     SUCIDE
         00009260 00000000! 
    1222                    
    1223 00009280                   PUSH    a10
    1224 00009290     0d5f          calla   read_switches
         000092a0 00000000! 
    1225 000092c0                   PULL    a10
    1226                    
    1227 000092d0     b5a0          move    *a13(PLYR_TYPE),a0
         000092e0     05a0  
    1228 000092f0     cb1c          jrnz    hlcqdrone
    1229 00009300     b540          move    *a10(STICK_VAL_CUR),a0
         00009310     0bc0  
    1230 00009320     1fe0          btst    MOVE_UP_BIT,a0
    1231 00009330     ca80          jaz     SUCIDE
         00009340 00000000! 
    1232 00009360     b540          move    *a10(BUT_VAL_CUR),a0
         00009370     0b90  
    1233 00009380     1fc0          btst    PLAYER_BLOCK_BIT,a0
    1234 00009390     ca80          jaz     SUCIDE
         000093a0 00000000! 
    1235                    
    1236 000093c0           hlcqdo_taunt
    1237 000093c0                   PUSH    a13
    1238 000093d0     4d4d          move    a10,a13
    1239 000093e0     b5a0          move    *a13(WRESTLERNUM),a0
         000093f0     0590  
    1240 00009400                   X32     a0
    1241 00009410     0b20          addi    hlcqtaunt_t,a0
         00009420 00009550' 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1242 00009440     8600          move    *a0,a0,L
    1243                    
    1244 00009450     0d5f          calla   change_anim1a
         00009460 00000000! 
    1245 00009480                   PULL    a13
    1246                    
    1247 00009490                   DIE
    1248                    
    1249 000094c0           hlcqdrone
    1250 000094c0     09c0          movi    250,a0
         000094d0     00fa  
    1251 000094e0     0d5f          calla   RNDPER
         000094f0 00000000! 
    1252 00009510     c3ea          jrhi    hlcqdo_taunt
    1253                    
    1254 00009520                   DIE
    1255                    
    1256 00009550           hlcqtaunt_t
    1257 00009550                   REFLONG hrt_4_taunt_anim                        ;0 Bret Hart
    1258 00009570                   REFLONG rzr_4_taunt_anim                        ;1 Razor Ramon
    1259 00009590                   REFLONG und_4_taunt_anim                        ;2 Undertaker
    1260 000095b0                   REFLONG yok_4_taunt_anim                        ;3 Yokozuna
    1261 000095d0                   REFLONG shn_4_taunt_anim                        ;4 Shawn Michaels
    1262 000095f0                   REFLONG bam_4_taunt_anim                        ;5 Bam Bam
    1263 00009610                   REFLONG dnk_4_taunt_anim                        ;6 Doink
    1264 00009630 00000000          .long   0                                       ;7 spare
    1265 00009650                   REFLONG lex_4_taunt_anim                        ;8 Lex Luger
    1266 00009670 00000000          .long   0                                       ;9 Referee
    1267                    
    1268                    
    1269 00009690            SUBR   move_doink
    1270                    
    1271                    
    1272 00009690     09eb          movi    doink_secret_moves,a11
         000096a0 00000000' 
    1273 000096c0     0d5f          calla   check_secret_moves
         000096d0 00000000! 
    1274                    
    1275 000096f0     b5a0          move    *a13(PLYRMODE),a0
         00009700     05c0  
    1276 00009710     24a0          sll     5,a0                    ;x 32
    1277 00009720     0b20          addi    iazlmode_table,a0
         00009730 00009780' 
    1278 00009750     8600          move    *a0,a0,L
    1279 00009760     0920          call    a0
    1280 00009770     0960          rets
    1281                    
    1282 00009780           iazlmode_table
    1283 00009780 00009ac0'         .long   mode_normal             ;0
    1284 000097a0 000116a0'         .long   mode_running            ;1
    1285 000097c0 00013e90'         .long   mode_inair              ;2
    1286 000097e0 00013ea0'         .long   mode_attached           ;3
    1287 00009800 00014010'         .long   mode_onground           ;4
    1288 00009820 00014020'         .long   mode_bouncing           ;5
    1289 00009840 000142c0'         .long   mode_onturnbkl          ;6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1290 00009860 000151e0'         .long   mode_block              ;7
    1291 00009880 00015c90'         .long   mode_dizzy              ;8
    1292 000098a0 00015ca0'         .long   mode_dead               ;9
    1293 000098c0 00017280'         .long   mode_oppoverhead        ;10
    1294 000098e0 00017290'         .long   mode_climbturnbkl       ;11
    1295 00009900 000172a0'         .long   mode_waitanim           ;12
    1296 00009920 00017320'         .long   mode_grapple            ;13
    1297 00009940 00017330'         .long   mode_master             ;14
    1298 00009960 00017370'         .long   mode_slave              ;15
    1299 00009980 000175c0'         .long   mode_headhold           ;16
    1300 000099a0 00018c80'         .long   mode_puppet2
    1301 000099c0 00009ac0'         .long   mode_normal     ;18
    1302 000099e0 00018c90'         .long   mode_headheld           ;19
    1303 00009a00 00019210'         .long   mode_puppet             ;20
    1304 00009a20 00019800'         .long   mode_inair2             ;21
    1305 00009a40 00009ac0'         .long   mode_normal     ;22
    1306 00009a60 00009ac0'         .long   mode_normal     ;23
    1307 00009a80 000197f0'         .long   mode_chokehold          ;24
    1308 00009aa0 00000000!         .long   mode_choking            ;25
    1309                    
    1310                    
    1311 00009ac0           mode_normal
    1312                    
    1313 00009ac0     b5a0          move    *a13(ANIMODE),a0
         00009ad0     0660  
    1314 00009ae0     1fa0          btst    MODE_UNINT_BIT,a0
    1315 00009af0     cb00          jrnz    tabvno_interrupt
         00009b00     00b0  
    1316                    
    1317 00009b10     b5a0          move    *a13(I_WILL_DIE),a0
         00009b20     0b30  
    1318 00009b30     ca1f          jrz     tabvnope
    1319 00009b40     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00009b50     0ae0  
    1320 00009b60     cb1c          jrnz    tabvnope
    1321 00009b70     09e0          movi    dnk_fall_back_anim,a0
         00009b80 00000000! 
    1322 00009ba0     0d5f          calla   change_anim1a
         00009bb0 00000000! 
    1323                    
    1324 00009bd0     09c0          movi    -10,a0
         00009be0     fff6  
    1325 00009bf0     b5a1          move    *a13(PLYRNUM),a1
         00009c00     0580  
    1326 00009c10     0d5f          calla   adjust_health
         00009c20 00000000! 
    1327                    
    1328 00009c40                   SETMODE DEAD
    1329                    
    1330 00009cf0     5600          clr     a0
    1331 00009d00     b00d          move    a0,*a13(I_WILL_DIE)
         00009d10     0b30  
    1332                    
    1333 00009d20     0960          rets
    1334                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1335 00009d30           tabvnope
    1336 00009d30     0d5f          calla   get_opp_plyrmode
         00009d40 00000000! 
    1337 00009d60     0b40          cmpi    MODE_DEAD,a0
         00009d70     fff6  
    1338 00009d80     cb49          jrne    tabvopp_not_dead
    1339                    
    1340                            ;if closest is a zombie, skip pin section.
    1341 00009d90     0d5f          calla   get_opp_process
         00009da0 00000000! 
    1342 00009dc0     b40e          move    *a0(STATUS_FLAGS),a14
         00009dd0     0b50  
    1343 00009de0     1f8e          btst    B_ZOMBIE,a14
    1344 00009df0     cb42          jrnz    tabvopp_not_dead
    1345                    
    1346                            ;all opponents are dead.  Check for pins/raisearms
    1347                    
    1348                            ;if we're attached to someone, don't interrupt it.
    1349 00009e00     b7a1          move    *a13(ATTACH_PROC),a1,L
         00009e10     03e0  
    1350 00009e20     ca04          jrz     tabvno_attch
    1351 00009e30     b622          move    *a1(ATTACH_PROC),a2,L
         00009e40     03e0  
    1352 00009e50     484d          cmp     a2,a13
    1353 00009e60     ca3b          jreq    tabvno_pin_yet
    1354 00009e70           tabvno_attch
    1355                    
    1356                            ;if a teammate has pinned, raise yer arm.
    1357 00009e70     0d5f          calla   ck_teammate_pin 
         00009e80 00000000! 
    1358 00009ea0     c823          jrc     tabvraisearm
    1359                    
    1360                            ;nobody has pinned.  if we're outside or all our opponents are
    1361                            ; outside, do a raisearm.
    1362 00009eb0     0d5f          calla   raisearm_check
         00009ec0 00000000! 
    1363 00009ee0     c81f          jrc     tabvraisearm
    1364                    
    1365                            ;we're inside with a pinnable opponent.  any button pins.
    1366 00009ef0     b5a0          move    *a13(BUT_VAL_CUR),a0
         00009f00     0b90  
    1367 00009f10     ca30          jrz     tabvno_pin_yet
    1368                    
    1369                            ;we have a press -- make sure opponent is on the ground
    1370                    
    1371 00009f20     0d5f          calla   can_pin
         00009f30 00000000! 
    1372 00009f50     c92c          jrnc    tabvopp_notgnd
    1373                    
    1374                            ;opponent is on the ground.  pin him.
    1375 00009f60                   FACE24  dnk,pin_anim
    1376 0000a000     0d5f          calla   change_anim1a
         0000a010 00000000! 
    1377                    
    1378                            ;set the 'I did a pin' flag.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1379 0000a030     b5ae          move    *a13(STATUS_FLAGS),a14
         0000a040     0b50  
    1380 0000a050     0bae          ori     M_DID_PIN,a14
         0000a060 00000002  
    1381 0000a080     b1cd          move    a14,*a13(STATUS_FLAGS)
         0000a090     0b50  
    1382                    
    1383                            ;if we're a temp drone for auto-pin purposes, turn back into
    1384                            ; a normal player here.
    1385 0000a0a0     0d5f          calla   drone_change_back
         0000a0b0 00000000! 
    1386                    
    1387 0000a0d0     0960          rets
    1388                    
    1389 0000a0e0           tabvraisearm
    1390 0000a0e0                   FACE24  dnk,raise_arm_anim
    1391 0000a180     0d5f          calla   change_anim1a
         0000a190 00000000! 
    1392 0000a1b0     0d5f          calla   set_raisearm_bit
         0000a1c0 00000000! 
    1393                    
    1394                            ;if we're a temp drone for auto-pin purposes, turn back into
    1395                            ; a normal player here.
    1396 0000a1e0     0d5f          calla   drone_change_back
         0000a1f0 00000000! 
    1397                    
    1398 0000a210     0960          rets
    1399                    
    1400 0000a220           tabvtoo_far_to_pin
    1401 0000a220           tabvopp_notgnd
    1402 0000a220           tabvopp_not_dead
    1403 0000a220           tabvno_pin_yet
    1404                    
    1405 0000a220     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         0000a230     0ae0  
    1406 0000a240     cb36          jrnz    tabvimmobilized
    1407                    
    1408 0000a250     b5a0          move    *a13(BUT_VAL_CUR),a0
         0000a260     0b90  
    1409 0000a270     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1410 0000a280     ca07          jrz     tabvnblk                        ;1 for down transitions
    1411 0000a290     0d3f          callr   tabvblock                       ;& 1 for current buttons
         0000a2a0     01ee  
    1412 0000a2b0     c804          jrc     tabvnblk
    1413 0000a2c0     5600          clr     a0
    1414 0000a2d0     b00d          move    a0,*a13(ATTACK_TYPE)
         0000a2e0     05e0  
    1415 0000a2f0     0960          rets
    1416 0000a300           tabvnblk
    1417 0000a300     b5a0          move    *a13(BUT_VAL_CUR),a0
         0000a310     0b90  
    1418 0000a320     0b80          andi    011111b,a0
         0000a330 ffffffe0  
    1419 0000a350     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         0000a360     fff6  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1420 0000a370     ca00          jrz     tabvpunchkick
         0000a380     0545  
    1421                    
    1422 0000a390     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000a3a0     0ba0  
    1423 0000a3b0     0b80          andi    011111b,a0
         0000a3c0 ffffffe0  
    1424 0000a3e0                   X32     a0
    1425 0000a3f0     0b20          addi    tabvaction_table,a0
         0000a400 0000a620' 
    1426 0000a420     8600          move    *a0,a0,L
    1427 0000a430     0920          call    a0
    1428                    
    1429 0000a440     b5a0          move    *a13(ANIMODE),a0
         0000a450     0660  
    1430 0000a460     1fa0          btst    MODE_UNINT_BIT,a0
    1431 0000a470     cb19          jrnz    tabvno_interrupt
    1432                    
    1433                    
    1434 0000a480     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000a490     0bc0  
    1435 0000a4a0     b00d          move    a0,*a13(MOVE_DIR)
         0000a4b0     04b0  
    1436 0000a4c0     0d5f          calla   climb_turnbuckle
         0000a4d0 00000000! 
    1437 0000a4f0     c90e          jrnc    tabvno_climb
    1438 0000a500     b5a5          move    *a13(WRESTLERNUM),A5
         0000a510     0590  
    1439 0000a520     09e2          MOVI    CLIMB_ROPES,A2
         0000a530 00000000! 
    1440 0000a550     09c0          MOVI    1000,A0
         0000a560     03e8  
    1441 0000a570     0d5f          CALLA   ADD_IF_SILENT
         0000a580 00000000! 
    1442 0000a5a0     0960          rets
    1443                    
    1444 0000a5b0           tabvimmobilized
    1445 0000a5b0     57ce          clr     a14
    1446 0000a5c0     b1cd          move    a14,*a13(MOVE_DIR)
         0000a5d0     04b0  
    1447 0000a5e0           tabvno_climb
    1448 0000a5e0     0d5f          calla   execute_walk
         0000a5f0 00000000! 
    1449                    
    1450 0000a610           tabvno_interrupt
    1451 0000a610     0960          rets
    1452                    
    1453 0000a620           tabvaction_table
    1454 0000a620 0000aa20'         .long   tabvz,tabvpunch,tabvblock,tabvblock                     ;0-3
    1455 0000a6a0 0000c370'         .long   tabvsuper_punch,tabvsuper_punch,tabvblock,tabvblock     ;4-7
    1456 0000a720 0000e180'         .long   tabvkick,tabvpunchkick,tabvblock,tabvblock              ;8-11
    1457 0000a7a0 0000c370'         .long   tabvsuper_punch,tabvpunchkick,tabvblock,tabvblock       ;12-15
    1458 0000a820 0000f850'         .long   tabvsuper_kick,tabvsuper_kick,tabvblock,tabvblock       ;16-19
    1459 0000a8a0 00010a00'         .long   tabvgraboh,tabvgraboh,tabvblock,tabvblock               ;20-23
    1460 0000a920 0000f850'         .long   tabvsuper_kick,tabvpunchkick,tabvblock,tabvblock        ;24-27
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1461 0000a9a0 00010a00'         .long   tabvgraboh,tabvgraboh,tabvblock,tabvblock               ;28-31
    1462                    
    1463 0000aa20           tabvz           ;0
    1464                    
    1465 0000aa20     0960          rets
    1466                    
    1467                    
    1468 0000aa30           tabvpunch               ;1
    1469 0000aa30                   JJXM_INIT
    1470 0000aaa0                   JJXM    NORMAL,          50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;0
    1471 0000ab70                   JJXM    RUNNING,         50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;1
    1472 0000ac40                   JJXM    INAIR,           50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;2
    1473 0000ad10                   JJXM    ATTACHED,        50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;3
    1474 0000ade0                   JJXM    ONGROUND,       160,140,tabvpunch_lbowdrop,tabvpunch_punch      ;4
    1475 0000aeb0                   JJXM    BOUNCING,        50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;1
    1476 0000af80                   JJXM    ONTURNBKL,       50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;6
    1477 0000b050                   JJXM    BLOCK,           50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;7
    1478 0000b120                   JJXM    DIZZY,           50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;8
    1479 0000b1f0                   JJXM    DEAD,           160,140,tabvpunch_lbowdrop,tabvpunch_punch      ;9
    1480 0000b2a0                   JJXM    OPPOVERHEAD,     50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;10
    1481 0000b350                   JJXM    CLIMBTURNBKL,           tabvpunch_punch                 ;11
    1482 0000b390                   JJXM    WAITANIM,        50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;12
    1483 0000b440                   JJXM    GRAPPLE,         50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;13
    1484 0000b4e0                   JJXM    MASTER,          50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;14
    1485 0000b580                   JJXM    SLAVE,           50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;15
    1486 0000b620                   JJXM    HEADHOLD,        50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;16
    1487 0000b6c0                   JJXM    HEADHELD,        50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;19
    1488 0000b760                   JJXM    CHOKEHOLD,       50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;16
    1489 0000b800                   JJXM    PUPPET,          50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;20
    1490 0000b8a0                   JJXM    PUPPET2,         50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;20
    1491 0000b940                   JJXM    INAIR2,          50, 45,tabvpunch_hdbutt,tabvpunch_punch        ;21
    1492 0000b9e0                   JJXM_END
    1493                    
    1494 0000ba00           tabvpunch_rets
    1495 0000ba00     0960          rets
    1496                    
    1497 0000ba10           tabvpunch_punch
    1498 0000ba10           std_punch
    1499                    
    1500 0000ba10                   FACE24  dnk,punch_anim
    1501 0000bab0     0d5f          calla   change_anim1a
         0000bac0 00000000! 
    1502                    
    1503 0000bae0                   WRSND   W_DOINK,PUNCH_T1,PUNCH_T2
    1504                    
    1505 0000bc80     0960          rets
    1506                    
    1507 0000bc90           tabvpunch_hdbutt
    1508                    
    1509 0000bc90                   FACE24  dnk,butt_anim
    1510 0000bd30     0d5f          calla   change_anim1a
         0000bd40 00000000! 
    1511                    
    1512 0000bd60                   WRSND   W_DOINK,HDBUTT_T1,HDBUTT_T2
    1513                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1514 0000bf00     0960          rets
    1515                    
    1516 0000bf10           tabvpunch_lbowdrop
    1517                    
    1518 0000bf10                   FACE24  dnk,lbowdrop_anim
    1519 0000bfb0     0d5f          calla   change_anim1a
         0000bfc0 00000000! 
    1520                    
    1521 0000bfe0                   WRSND   W_DOINK,LBOWDROP_T1,LBOWDROP_T2
    1522                    
    1523 0000c180     0960          rets
    1524                    
    1525 0000c190           tabvblock               ;2
    1526 0000c190           std_block
    1527 0000c190     05a0          move    @blocking_off,a0
         0000c1a0 00000000! 
    1528 0000c1c0     cb18          jrnz    tabvno_blocking
    1529                    
    1530 0000c1d0                   RND_AWARD       a13,BLOCKS_AWD
    1531                    
    1532 0000c270     09e0          movi    dnk_4_block_anim,a0
         0000c280 00000000! 
    1533 0000c2a0     0d5f          calla   change_anim1
         0000c2b0 00000000! 
    1534                    
    1535 0000c2d0     0d5f          calla   BLOCK_WOOSH
         0000c2e0 00000000! 
    1536                    
    1537 0000c300     5600          clr     a0
    1538 0000c310     b00d          move    a0,*a13(BLOCK_TIME)
         0000c320     0d30  
    1539 0000c330     0320          clrc
    1540 0000c340     0960          rets
    1541                    
    1542 0000c350           tabvno_blocking
    1543 0000c350     0de0          setc
    1544 0000c360     0960          rets
    1545                    
    1546                    
    1547 0000c370           tabvsuper_punch ;4
    1548 0000c370                   JJXM_INIT
    1549 0000c3e0                   JJXM    NORMAL,          85, 55,tabvspunch_special,tabvspunch_slap      ;0
    1550 0000c4b0                   JJXM    RUNNING,         85, 55,tabvspunch_special,tabvspunch_slap      ;1
    1551 0000c580                   JJXM    INAIR,           85, 55,tabvspunch_special,tabvspunch_slap      ;2
    1552 0000c650                   JJXM    ATTACHED,        85, 55,tabvspunch_special,tabvspunch_slap      ;3
    1553 0000c720                   JJXM    ONGROUND,       160,140,tabvspunch_lbowdrop,std_punch   ;4
    1554 0000c7f0                   JJXM    BOUNCING,        85, 55,tabvspunch_special,tabvspunch_slap      ;1
    1555 0000c8c0                   JJXM    ONTURNBKL,              tabvspunch_slap                 ;6
    1556 0000c910                   JJXM    BLOCK,           85, 55,tabvspunch_special,tabvspunch_slap      ;7
    1557 0000c9e0                   JJXM    DIZZY,           85, 55,tabvspunch_special,tabvspunch_slap      ;8
    1558 0000cab0                   JJXM    DEAD,           160,140,tabvspunch_lbowdrop,std_punch   ;9
    1559 0000cb80                   JJXM    OPPOVERHEAD,     85, 55,tabvspunch_special,tabvspunch_slap      ;10
    1560 0000cc30                   JJXM    CLIMBTURNBKL,           std_punch                       ;11
    1561 0000cc80                   JJXM    WAITANIM,        85, 55,tabvspunch_special,tabvspunch_slap      ;12
    1562 0000cd30                   JJXM    GRAPPLE,         85, 55,tabvspunch_special,tabvspunch_slap      ;13
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1563 0000cdd0                   JJXM    MASTER,          85, 55,tabvspunch_special,tabvspunch_slap      ;14
    1564 0000ce70                   JJXM    SLAVE,           85, 55,tabvspunch_special,tabvspunch_slap      ;15
    1565 0000cf10                   JJXM    HEADHOLD,        85, 55,tabvspunch_special,tabvspunch_slap      ;16
    1566 0000cfb0                   JJXM    HEADHELD,               do_pile                         ;19
    1567 0000d000                   JJXM    CHOKEHOLD,       85, 55,tabvspunch_special,tabvspunch_slap      ;16
    1568 0000d0a0                   JJXM    PUPPET,          85, 55,tabvspunch_special,tabvspunch_slap      ;20
    1569 0000d140                   JJXM    PUPPET2,         85, 55,tabvspunch_special,tabvspunch_slap      ;20
    1570 0000d1e0                   JJXM    INAIR2,          85, 55,tabvspunch_special,tabvspunch_slap      ;21
    1571 0000d280                   JJXM_END
    1572                    
    1573 0000d2a0           tabvspunch_rets
    1574 0000d2a0     0960          rets
    1575                    
    1576 0000d2b0           tabvspunch_slap
    1577 0000d2b0                   FACE24  dnk,slap_anim
    1578 0000d350     0d5f          calla   change_anim1a
         0000d360 00000000! 
    1579                    
    1580 0000d380                   WRSND   W_DOINK,SPUNCH_T1,SPUNCH_T2
    1581                    
    1582 0000d520     0960          rets
    1583                    
    1584 0000d530           tabvspunch_special
    1585                    
    1586 0000d530     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000d540     0bc0  
    1587 0000d550     1fc0          btst    MOVE_DOWN_BIT,a0
    1588 0000d560     cb2e          jrnz    tabvck_up
    1589                    
    1590                    
    1591                    
    1592 0000d570     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000d580     0370  
    1593 0000d590     0b41          cmpi    60,a1
         0000d5a0     ffc3  
    1594 0000d5b0     c700          jrgt    std_punch
         0000d5c0     fe44  
    1595                    
    1596                    
    1597 0000d5d0                   FACE24  dnk,butts_anim
    1598 0000d670     0d5f          calla   change_anim1
         0000d680 00000000! 
    1599                    
    1600 0000d6a0                   WRSND   W_DOINK,HDBUTT_T1,HDBUTT_T2
    1601                    
    1602 0000d840     0960          rets
    1603                    
    1604 0000d850           tabvck_up
    1605                            .ref    dnk_4_uppercut_anim
    1606 0000d850     09e0          movi    dnk_4_uppercut_anim,a0
         0000d860 00000000! 
    1607 0000d880     0d5f          calla   change_anim1
         0000d890 00000000! 
    1608                    
    1609 0000d8b0                   WRSND   W_DOINK,SPUNCH_T1,SPUNCH_T2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1610 0000da50     0960          rets
    1611                    
    1612 0000da60           tabvspunch_lbowdrop
    1613                    
    1614                    
    1615 0000da60     b5ae          move    *a13(CLOSEST_NUM),a14
         0000da70     03a0  
    1616 0000da80                   X32     a14
    1617 0000da90     0b2e          addi    process_ptrs,a14
         0000daa0 00000000! 
    1618 0000dac0     87ce          move    *a14,a14,L
    1619 0000dad0     b5c2          move    *a14(PLYRMODE),a2
         0000dae0     05c0  
    1620 0000daf0     0b42          cmpi    MODE_DEAD,a2
         0000db00     fff6  
    1621 0000db10     ca3e          jrz     tabvno
    1622 0000db20     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000db30     0100  
    1623 0000db40     b7c2          move    *a14(OBJ_XPOS),a2,L
         0000db50     0100  
    1624 0000db60     4441          sub     a2,a1
    1625 0000db70     0381          abs     a1
    1626 0000db80     2e01          srl     16,a1
    1627 0000db90     0b41          cmpi    20h,a1  ;28
         0000dba0     ffdf  
    1628 0000dbb0     c434          jrlt    tabvno
    1629                    
    1630                    
    1631 0000dbc0     b5ce          move    *a14(OBJ_CONTROL),a14
         0000dbd0     0780  
    1632 0000dbe0     0b8e          andi    M_FLIPH,a14
         0000dbf0 ffffffef  
    1633 0000dc10     b5a0          move    *a13(OBJ_CONTROL),a0
         0000dc20     0780  
    1634 0000dc30     0b80          andi    M_FLIPH,a0
         0000dc40 ffffffef  
    1635 0000dc60     480e          cmp     a0,a14
    1636 0000dc70     ca28          jrz     tabvno
    1637                    
    1638                    
    1639 0000dc80                   FACE24  dnk,hair_pickup_anim
    1640 0000dd20     0d5f          calla   change_anim1
         0000dd30 00000000! 
    1641 0000dd50                   WRSND   W_DOINK,LBOWDROP_T1,LBOWDROP_T2
    1642 0000def0     0960          rets
    1643                    
    1644 0000df00           tabvno  FACE24  dnk,lbowdrop_anim
    1645 0000dfa0     0d5f          calla   change_anim1
         0000dfb0 00000000! 
    1646 0000dfd0                   WRSND   W_DOINK,LBOWDROP_T1,LBOWDROP_T2
    1647 0000e170     0960          rets
    1648                    
    1649                    
    1650 0000e180           tabvkick                ;8
    1651 0000e180                   JJXM_INIT
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1652 0000e1f0                   JJXM    NORMAL,          50, 92,tabvkick_knee,tabvkick_kick             ;0
    1653 0000e2c0                   JJXM    RUNNING,                 50, 92,tabvkick_knee,tabvkick_kick             ;0
    1654 0000e390                   JJXM    INAIR,           50, 92,tabvkick_knee,tabvkick_kick             ;2
    1655 0000e460                   JJXM    ATTACHED,        50, 92,tabvkick_knee,tabvkick_kick             ;3
    1656 0000e530                   JJXM    ONGROUND,       160,140,tabvkick_stomp,tabvkick_kick            ;4
    1657 0000e600                   JJXM    BOUNCING,        50, 92,tabvkick_knee,tabvkick_kick             ;0
    1658 0000e6d0                   JJXM    ONTURNBKL,              tabvkick_kick                   ;6
    1659 0000e720                   JJXM    BLOCK,           50, 92,tabvkick_knee,tabvkick_kick             ;7
    1660 0000e7f0                   JJXM    DIZZY,           50, 92,tabvkick_knee,tabvkick_kick             ;8
    1661 0000e8b0                   JJXM    DEAD,           160,140,tabvkick_stomp,tabvkick_kick            ;9
    1662 0000e960                   JJXM    OPPOVERHEAD,     50, 92,tabvkick_knee,tabvkick_kick             ;10
    1663 0000ea10                   JJXM    CLIMBTURNBKL,           tabvkick_kick                   ;11
    1664 0000ea50                   JJXM    WAITANIM,        50, 92,tabvkick_knee,tabvkick_kick             ;12
    1665 0000eaf0                   JJXM    GRAPPLE,         50, 92,tabvkick_knee,tabvkick_kick             ;13
    1666 0000eb90                   JJXM    MASTER,          50, 92,tabvkick_knee,tabvkick_kick             ;14
    1667 0000ec30                   JJXM    SLAVE,           50, 92,tabvkick_knee,tabvkick_kick             ;15
    1668 0000ecd0                   JJXM    HEADHOLD,        50, 92,tabvkick_knee,tabvkick_kick             ;16
    1669 0000ed70                   JJXM    HEADHELD,        50, 92,tabvkick_knee,tabvkick_kick             ;19
    1670 0000ee10                   JJXM    CHOKEHOLD,       50, 92,tabvkick_knee,tabvkick_kick             ;16
    1671 0000eeb0                   JJXM    PUPPET,          50, 92,tabvkick_knee,tabvkick_kick             ;20
    1672 0000ef50                   JJXM    PUPPET2,         50, 92,tabvkick_knee,tabvkick_kick             ;20
    1673 0000eff0                   JJXM    INAIR2,                 tabvskick_TB                    ;21
    1674 0000f040                   JJXM_END
    1675                    
    1676                    
    1677 0000f060           tabvkick_kick
    1678 0000f060           std_kick
    1679                    
    1680 0000f060                   FACE24  dnk,kick_anim
    1681 0000f100     0d5f          calla   change_anim1a
         0000f110 00000000! 
    1682                    
    1683 0000f130                   WRSND   W_DOINK,KICK_T1,KICK_T2
    1684                    
    1685 0000f2d0     0960          rets
    1686                    
    1687 0000f2e0           tabvkick_knee
    1688 0000f2e0           std_knee
    1689 0000f2e0                   FACE24  dnk,knee_anim
    1690 0000f380     0d5f          calla   change_anim1a
         0000f390 00000000! 
    1691                    
    1692 0000f3b0                   WRSND   W_DOINK,KICK_T1,KICK_T2
    1693                    
    1694 0000f550     0960          rets
    1695                    
    1696 0000f560           tabvkick_stomp
    1697                    
    1698 0000f560                   FACE24  dnk,stomp_anim
    1699 0000f600     0d5f          calla   change_anim1a
         0000f610 00000000! 
    1700                    
    1701 0000f630                   WRSND   W_DOINK,KICK_T1,KICK_T2
    1702                    
    1703 0000f7d0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1704                    
    1705                    
    1706 0000f7e0           tabvpunchkick   ;9
    1707                    
    1708 0000f7e0     09e0          movi    start_run_anim,a0
         0000f7f0 00000000! 
    1709 0000f810     0d5f          calla   change_anim1a
         0000f820 00000000! 
    1710                    
    1711 0000f840     0960          rets
    1712                    
    1713 0000f850           tabvsuper_kick  ;16
    1714 0000f850                   JJXM_INIT
    1715 0000f8c0                   JJXM    NORMAL,          60, 60,tabvskick_special,tabvskick_kick        ;0
    1716 0000f990                   JJXM    RUNNING,                tabvskick_bigboot                       ;1
    1717 0000f9e0                   JJXM    INAIR,           60, 60,tabvskick_special,tabvskick_kick        ;2
    1718 0000fab0                   JJXM    ATTACHED,        60, 60,tabvskick_special,tabvskick_kick        ;3
    1719 0000fb80                   JJXM    ONGROUND,       160,140,tabvskick_stomp,std_kick                ;4
    1720 0000fc50                   JJXM    BOUNCING,               tabvskick_bigboot                       ;5
    1721 0000fca0                   JJXM    ONTURNBKL,       60, 96,tabvskick_kick,std_kick         ;6
    1722 0000fd70                   JJXM    BLOCK,           60, 60,tabvskick_special,tabvskick_kick        ;7
    1723 0000fe40                   JJXM    DIZZY,           60, 60,tabvskick_special,tabvskick_kick        ;8
    1724 0000ff10                   JJXM    DEAD,           160,140,tabvskick_stomp,std_kick                ;9
    1725 0000ffe0                   JJXM    OPPOVERHEAD,     60, 60,tabvskick_special,tabvskick_kick        ;10
    1726 000100b0                   JJXM    CLIMBTURNBKL,    60, 96,tabvskick_kick,std_kick         ;11
    1727 00010180                   JJXM    WAITANIM,        60, 62,tabvskick_special,tabvskick_kick        ;12
    1728 00010240                   JJXM    GRAPPLE,         60, 62,tabvskick_special,tabvskick_kick        ;13
    1729 000102f0                   JJXM    MASTER,          60, 62,tabvskick_special,tabvskick_kick        ;14
    1730 000103a0                   JJXM    SLAVE,           60, 62,tabvskick_special,tabvskick_kick        ;15
    1731 00010450                   JJXM    HEADHOLD,        60, 62,tabvskick_special,tabvskick_kick        ;16
    1732 000104f0                   JJXM    HEADHELD,               std_kick
    1733 00010540                   JJXM    CHOKEHOLD,       60, 62,tabvskick_special,tabvskick_kick        ;16
    1734 000105e0                   JJXM    PUPPET,          60, 62,tabvskick_special,tabvskick_kick        ;20
    1735 00010680                   JJXM    PUPPET2,         60, 62,tabvskick_special,tabvskick_kick        ;20
    1736 00010720                   JJXM    INAIR2,                 tabvskick_TB                    ;21
    1737 00010760                   JJXM_END
    1738                    
    1739 00010780           tabvskick_TB
    1740                            .ref    dnk_2_spin_kick_TB_anim
    1741                            .ref    dnk_4_spin_kick_TB_anim
    1742 00010780                   FACE24  dnk,spin_kick_TB_anim
    1743 00010820     0d5f          calla   change_anim1a
         00010830 00000000! 
    1744                    
    1745 00010850                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    1746 000109f0     0960          rets
    1747                    
    1748 00010a00           tabvskick_kick
    1749 00010a00           tabvgraboh
    1750                    
    1751 00010a00                   FACE24  dnk,spin_kick_anim
    1752 00010aa0     0d5f          calla   change_anim1a
         00010ab0 00000000! 
    1753                    
    1754 00010ad0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1755 00010c70     0960          rets
    1756                    
    1757 00010c80           tabvskick_special
    1758 00010c80     b5a0          move    *a13(STICK_VAL_CUR),a0
         00010c90     0bc0  
    1759 00010ca0     b5a1          move    *a13(NEW_FACING_DIR),a1
         00010cb0     04d0  
    1760 00010cc0     0b81          andi    0ch,a1
         00010cd0 fffffff3  
    1761 00010cf0     4801          cmp     a0,a1
    1762 00010d00     ca28          jrz     tabvcont2
    1763                    
    1764 00010d10                   FACE24  dnk,knee_anim
    1765 00010db0     0d5f          calla   change_anim1
         00010dc0 00000000! 
    1766                    
    1767 00010de0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    1768 00010f80     0960          rets
    1769                    
    1770 00010f90           tabvcont2
    1771 00010f90     09e0          movi    dnk_4_knee_fall_anim,a0
         00010fa0 00000000! 
    1772 00010fc0     0d5f          calla   change_anim1
         00010fd0 00000000! 
    1773                    
    1774 00010ff0                   WRSND   W_DOINK,GRABHOLD_T1,GRABHOLD_T2
    1775 00011190     0960          rets
    1776                    
    1777                    
    1778 000111a0           tabvskick_stomp
    1779                    
    1780 000111a0                   FACE24  dnk,stomp_anim
    1781 00011240     0d5f          calla   change_anim1a
         00011250 00000000! 
    1782                    
    1783 00011270                   WRSND   W_DOINK,KICK_T1,KICK_T2
    1784                    
    1785 00011410     0960          rets
    1786                    
    1787 00011420           tabvskick_bigboot       ;we can probably get away with just a tabv4 big boot
    1788                    
    1789 00011420                   FACE24  dnk,bigboot_anim
    1790 000114c0     0d5f          calla   change_anim1a
         000114d0 00000000! 
    1791                    
    1792 000114f0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    1793                    
    1794 00011690     0960          rets
    1795                    
    1796                    
    1797          00064000  hnbaXRUN_VAL    equ     DNK_XRUN
    1798          00088000  hnbaXRUN2_VAL   equ     DNK_XRUN2
    1799          00028000  hnbaZDRIFT_VAL  equ     DNK_ZDRIFT
    1800                    
    1801 000116a0           mode_running
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1802                    
    1803 000116a0     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         000116b0     07b0  
    1804 000116c0     1020          addk    1,a0
    1805 000116d0     b00d          move    a0,*a13(RUN_TIME)
         000116e0     07b0  
    1806                    
    1807 000116f0     b5a0          move    *a13(USR_VAR1),a0
         00011700     0850  
    1808 00011710     cb17          jrnz    hnbano_vel
    1809                    
    1810 00011720     0d5f          calla   bounce_off_ropes
         00011730 00000000! 
    1811                    
    1812 00011750     09e0          movi    hnbaXRUN_VAL,a0
         00011760 00064000  
    1813                    
    1814 00011780     b5ae          move    *a13(WALK_FAST),a14
         00011790     0b40  
    1815 000117a0     ca03          jrz     hnbano
    1816 000117b0     09e0          movi    hnbaXRUN2_VAL,a0
         000117c0 00088000  
    1817 000117e0           hnbano
    1818 000117e0     05ae          move    @hyper_speed_on,a14
         000117f0 00000000! 
    1819 00011810     63c0          sll     a14,a0
    1820                    
    1821 00011820     b5ae          move    *a13(MOVE_DIR),a14
         00011830     04b0  
    1822 00011840     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1823 00011850     cb01          jrnz    hnbapos
    1824 00011860     03a0          neg     a0
    1825 00011870           hnbapos
    1826 00011870     b20d          move    a0,*a13(OBJ_XVEL),L
         00011880     02d0  
    1827                    
    1828 00011890           hnbano_vel
    1829                    
    1830 00011890     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         000118a0     0460  
    1831 000118b0     cb38          jrnz    hnbaout_of_control
    1832                    
    1833 000118c0     b5a0          move    *a13(ANIMODE),a0
         000118d0     0660  
    1834 000118e0     1fa0          btst    MODE_UNINT_BIT,a0
    1835 000118f0     cb16          jrnz    hnbano_interrupt
    1836                    
    1837 00011900     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011910     0bc0  
    1838 00011920     b5a1          move    *a13(MOVE_DIR),a1
         00011930     04b0  
    1839 00011940     5401          or      a0,a1
    1840 00011950     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00011960 fffffff3  
    1841 00011980     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

         00011990     fff3  
    1842 000119a0     cb0b          jrne    hnbacontinue_run
    1843                    
    1844                            ;braking with stick.  abort run.
    1845                    
    1846 000119b0                   SETMODE NORMAL
    1847                    
    1848 00011a60           hnbacontinue_run
    1849 00011a60           hnbano_interrupt
    1850                    
    1851 00011a60     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011a70     0bc0  
    1852 00011a80     5621          clr     a1
    1853                    
    1854 00011a90     09e1          movi    -hnbaZDRIFT_VAL,a1
         00011aa0 fffd8000  
    1855 00011ac0     1fe0          btst    PLAYER_UP_BIT,a0
    1856 00011ad0     cb06          jrnz    hnbasetvel
    1857                    
    1858 00011ae0     09e1          movi    hnbaZDRIFT_VAL,a1
         00011af0 00028000  
    1859 00011b10     1fc0          btst    PLAYER_DOWN_BIT,a0
    1860 00011b20     cb01          jrnz    hnbasetvel
    1861                    
    1862 00011b30     5621          clr     a1
    1863 00011b40           hnbasetvel
    1864 00011b40     b22d          move    a1,*a13(OBJ_ZVEL),L
         00011b50     0310  
    1865                    
    1866                    
    1867 00011b60     b5a0          move    *a13(DELAY_BUTNS),a0
         00011b70     0ab0  
    1868 00011b80     cb0b          jrnz    hnbaout_of_control
    1869                    
    1870                    
    1871 00011b90     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011ba0     0ba0  
    1872 00011bb0     0b80          andi    011111b,a0
         00011bc0 ffffffe0  
    1873 00011be0                   X32     a0
    1874 00011bf0     0b20          addi    hnbaaction_table,a0
         00011c00 00011c50' 
    1875 00011c20     8600          move    *a0,a0,L
    1876 00011c30     0920          call    a0
    1877 00011c40           hnbaout_of_control
    1878 00011c40     0960          rets
    1879                    
    1880 00011c50           hnbaaction_table
    1881 00011c50 00012050'         .long   hnbaz,hnbapunch,hnbablock,hnbablock                     ;0-3
    1882 00011cd0 00012060'         .long   hnbasuper_punch,hnbasuper_punch,hnbablock,hnbablock     ;4-7
    1883 00011d50 000131b0'         .long   hnbakick,hnbapunchkick,hnbablock,hnbablock              ;8-11
    1884 00011dd0 00012060'         .long   hnbasuper_punch,hnbapunchkick,hnbablock,hnbablock       ;12-15
    1885 00011e50 000131b0'         .long   hnbasuper_kick,hnbasuper_kick,hnbablock,hnbablock       ;16-19
    1886 00011ed0 00012060'         .long   hnbagraboh,hnbagraboh,hnbablock,hnbablock               ;20-23
    1887 00011f50 000131b0'         .long   hnbasuper_kick,hnbapunchkick,hnbablock,hnbablock        ;24-27
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1888 00011fd0 00012060'         .long   hnbagraboh,hnbagraboh,hnbablock,hnbablock               ;28-31
    1889                    
    1890 00012050           hnbaz
    1891 00012050     0960          rets
    1892                    
    1893                    
    1894 00012060           hnbapunch               ;1
    1895 00012060           hnbasuper_punch ;4
    1896 00012060           hnbapunchkick
    1897 00012060           hnbagraboh
    1898 00012060                   JJXM_INIT
    1899 000120d0                   JJXM    NORMAL,                 hnbapunch_clothesline           ;0
    1900 00012110                   JJXM    RUNNING,                hnbapunch_clothesline           ;1
    1901 00012150                   JJXM    INAIR,                  hnbapunch_clothesline           ;2
    1902 00012190                   JJXM    ATTACHED,               hnbapunch_clothesline           ;3
    1903 000121d0                   JJXM    ONGROUND,       176,176,hnbapunch_bellyflop,hnbapunch_lbowdrop ;4
    1904 000122a0                   JJXM    BOUNCING,               hnbapunch_clothesline           ;5      
    1905 000122e0                   JJXM    ONTURNBKL,              hnbapunch_clothesline           ;6
    1906 00012320                   JJXM    BLOCK,                  hnbapunch_clothesline           ;7
    1907 00012360                   JJXM    DIZZY,                  hnbapunch_clothesline           ;8
    1908 000123a0                   JJXM    DEAD,           176,176,hnbapunch_bellyflop,hnbapunch_lbowdrop ;9
    1909 00012470                   JJXM    OPPOVERHEAD,            hnbapunch_clothesline           ;10
    1910 000124b0                   JJXM    CLIMBTURNBKL,           hnbapunch_clothesline           ;11
    1911 000124f0                   JJXM    WAITANIM,               hnbapunch_clothesline           ;12
    1912 00012530                   JJXM    GRAPPLE,                hnbapunch_clothesline           ;13
    1913 00012570                   JJXM    MASTER,                 hnbapunch_clothesline           ;14
    1914 000125b0                   JJXM    SLAVE,                  hnbapunch_clothesline           ;15
    1915 000125f0                   JJXM    HEADHOLD,               hnbapunch_clothesline           ;16
    1916 00012630                   JJXM    HEADHELD,               hnbapunch_clothesline           ;19
    1917 00012670                   JJXM    CHOKEHOLD,              hnbapunch_clothesline           ;16
    1918 000126b0                   JJXM    PUPPET,                 hnbapunch_clothesline           ;20
    1919 000126f0                   JJXM    PUPPET2,                hnbapunch_clothesline           ;20
    1920 00012730                   JJXM    INAIR2,                 hnbapunch_clothesline           ;21
    1921 00012770                   JJXM_END
    1922                    
    1923                    
    1924 00012790           hnbapunch_clothesline
    1925                    
    1926 00012790     b5a1          move    *a13(MOVE_DIR),a1
         000127a0     04b0  
    1927 000127b0     1fa1          btst    MOVE_LEFT_BIT,a1
    1928 000127c0     cb06          jrnz    hnbalft
    1929                            
    1930 000127d0     b5a0          move    *a13(OBJ_XPOSINT),a0
         000127e0     0110  
    1931 000127f0     0b40          cmpi    RING_X_MID+70h,a0
         00012800     fb8f  
    1932 00012810     c407          jrlt    hnbaok
    1933                    
    1934                    
    1935 00012820     0960          rets
    1936                    
    1937 00012830           hnbalft
    1938                    
    1939 00012830     b5a0          move    *a13(OBJ_XPOSINT),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

         00012840     0110  
    1940 00012850     0b40          cmpi    RING_X_MID-70h,a0
         00012860     fc6f  
    1941 00012870     c701          jrgt    hnbaok
    1942                    
    1943                    
    1944 00012880     0960          rets
    1945 00012890           hnbaok
    1946 00012890     b5a1          move    *a13(MOVE_DIR),a1
         000128a0     04b0  
    1947 000128b0     b5a0          move    *a13(NEW_FACING_DIR),a0 ;Current facing dir (9,10,6,5 only)
         000128c0     04d0  
    1948 000128d0     24a0          sll     5,a0
    1949 000128e0     0b20          addi    hnbamv_tbl,a0
         000128f0 00012c40' 
    1950 00012910     8600          move    *a0,a0,L
    1951 00012920     4a01          btst    a0,a1
    1952 00012930     ca01          jrz     hnbayes
    1953                    
    1954                    
    1955 00012940     0960          rets
    1956 00012950           hnbayes
    1957                    
    1958 00012950     09e0          movi    dnk_fly_cline_anim,a0
         00012960 00000000! 
    1959 00012980     0d5f          calla   change_anim1a
         00012990 00000000! 
    1960                    
    1961 000129b0                   SETMODE INAIR
    1962                    
    1963 00012a60     5600          clr     a0
    1964 00012a70     b00d          move    a0,*a13(RUN_TIME)
         00012a80     07b0  
    1965                    
    1966 00012a90                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    1967                    
    1968 00012c30     0960          rets
    1969                    
    1970 00012c40 00000000  hnbamv_tbl      .long   0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
    1971 00012d20 00000000          .long   0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT
    1972                    
    1973 00012da0           hnbapunch_lbowdrop
    1974 00012da0           hnbapunch_bellyflop
    1975                    
    1976 00012da0     09e0          movi    dnk_belly_anim,a0
         00012db0 00000000! 
    1977 00012dd0     0d5f          calla   change_anim1a
         00012de0 00000000! 
    1978                    
    1979 00012e00                   SETMODE INAIR
    1980                    
    1981 00012eb0     5600          clr     a0
    1982 00012ec0     b00d          move    a0,*a13(RUN_TIME)
         00012ed0     07b0  
    1983                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    1984 00012ee0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    1985                    
    1986 00013080     0960          rets
    1987                    
    1988                    
    1989 00013090           hnbablock               ;2
    1990 00013090     b7a0          move    *a13(OBJ_XVEL),a0,L
         000130a0     02d0  
    1991 000130b0     2be0          sra     1,a0
    1992 000130c0     b20d          move    a0,*a13(OBJ_XVEL),L
         000130d0     02d0  
    1993 000130e0                   SETMODE NORMAL
    1994 00013190     c000          jruc    std_block
         000131a0     f8fe  
    1995                    
    1996 000131b0           hnbakick                ;8
    1997 000131b0           hnbasuper_kick  ;16
    1998 000131b0                   JJXM_INIT
    1999 00013220                   JJXM    NORMAL,                 hnbakick_flyingkick             ;0
    2000 00013260                   JJXM    RUNNING,                hnbakick_flyingkick             ;1
    2001 000132a0                   JJXM    INAIR,                  hnbakick_flyingkick             ;2
    2002 000132e0                   JJXM    ATTACHED,               hnbakick_flyingkick             ;3
    2003 00013320                   JJXM    ONGROUND,       176,176,hnbakick_runstomp,hnbakick_runstomp     ;4
    2004 000133d0                   JJXM    BOUNCING,               hnbakick_flyingkick             ;5
    2005 00013410                   JJXM    ONTURNBKL,              hnbakick_flyingkick             ;6
    2006 00013450                   JJXM    BLOCK,                  hnbakick_flyingkick             ;7
    2007 00013490                   JJXM    DIZZY,                  hnbakick_flyingkick             ;8
    2008 000134d0                   JJXM    DEAD,           176,176,hnbakick_runstomp,hnbakick_runstomp     ;9
    2009 00013570                   JJXM    OPPOVERHEAD,            hnbakick_flyingkick             ;10
    2010 000135b0                   JJXM    CLIMBTURNBKL,           hnbakick_flyingkick             ;11
    2011 000135f0                   JJXM    WAITANIM,               hnbakick_flyingkick             ;12
    2012 00013630                   JJXM    GRAPPLE,                hnbakick_flyingkick             ;13
    2013 00013670                   JJXM    MASTER,                 hnbakick_flyingkick             ;14
    2014 000136b0                   JJXM    SLAVE,                  hnbakick_flyingkick             ;15
    2015 000136f0                   JJXM    HEADHOLD,               hnbakick_flyingkick             ;16
    2016 00013730                   JJXM    HEADHELD,               hnbakick_flyingkick             ;19
    2017 00013770                   JJXM    CHOKEHOLD,              hnbakick_flyingkick             ;16
    2018 000137b0                   JJXM    PUPPET,                 hnbakick_flyingkick             ;20
    2019 000137f0                   JJXM    PUPPET2,                hnbakick_flyingkick             ;20
    2020 00013830                   JJXM    INAIR2,                 hnbakick_flyingkick             ;21
    2021 00013870                   JJXM_END
    2022                    
    2023 00013890           hnbakick_flyingkick
    2024                    
    2025 00013890     0d5f          calla   ck_ignore
         000138a0 00000000! 
    2026 000138c0     c800          jrc     hnbaz
         000138d0     fe77  
    2027                    
    2028                    
    2029 000138e0     09e0          movi    dnk_flying_kick_anim,a0
         000138f0 00000000! 
    2030 00013910     0d5f          calla   change_anim1a
         00013920 00000000! 
    2031                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2032 00013940                   SETMODE INAIR
    2033                    
    2034 000139f0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    2035                    
    2036 00013b90     0960          rets
    2037                    
    2038 00013ba0           hnbakick_runstomp
    2039 00013ba0     09e0          movi    dnk_belly_anim,a0
         00013bb0 00000000! 
    2040 00013bd0     0d5f          calla   change_anim1a
         00013be0 00000000! 
    2041                    
    2042 00013c00                   SETMODE INAIR
    2043                    
    2044 00013cb0     5600          clr     a0
    2045 00013cc0     b00d          move    a0,*a13(RUN_TIME)
         00013cd0     07b0  
    2046                    
    2047 00013ce0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    2048                    
    2049 00013e80     0960          rets
    2050                    
    2051                    
    2052                    
    2053 00013e90           mode_inair      ;2
    2054                    
    2055 00013e90     0960          rets
    2056                    
    2057                    
    2058 00013ea0           mode_attached   ;3
    2059                    
    2060 00013ea0     0d5f          calla   keep_attached
         00013eb0 00000000! 
    2061 00013ed0     cb12          jrnz    tnlastill_attached
    2062                    
    2063 00013ee0     5600          clr     a0
    2064 00013ef0     b20d          move    a0,*a13(ATTACH_PROC),L
         00013f00     03e0  
    2065                    
    2066 00013f10                   SETMODE NORMAL
    2067                    
    2068 00013fc0     09c0          movi    MODE_NORMAL,a0
         00013fd0     0000  
    2069 00013fe0     b00d          move    a0,*a13(ANIMODE)
         00013ff0     0660  
    2070                    
    2071 00014000           tnlastill_attached
    2072                    
    2073 00014000     0960          rets
    2074                    
    2075                    
    2076 00014010           mode_onground   ;4
    2077                    
    2078 00014010     0960          rets
    2079                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2080                    
    2081                    
    2082 00014020           mode_bouncing   ;5
    2083                    
    2084 00014020     5600          clr     a0
    2085 00014030     b20d          move    a0,*a13(OBJ_XVEL),L
         00014040     02d0  
    2086 00014050     b20d          move    a0,*a13(OBJ_ZVEL),L
         00014060     0310  
    2087                    
    2088 00014070     b5a0          move    *a13(ANIMODE),a0
         00014080     0660  
    2089 00014090     1fe0          btst    MODE_END_BIT,a0
    2090 000140a0     ca20          jrz     wstjnot_ended
    2091                    
    2092 000140b0     b5a0          move    *a13(MOVE_DIR),a0
         000140c0     04b0  
    2093 000140d0     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         000140e0 0000000c  
    2094 00014100     b00d          move    a0,*a13(MOVE_DIR)
         00014110     04b0  
    2095                    
    2096 00014120     b5a1          move    *a13(NEW_FACING_DIR),a1
         00014130     04d0  
    2097 00014140     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         00014150 fffffffc  
    2098 00014170     5401          or      a0,a1                   ;LEFT or RIGHT
    2099 00014180     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         00014190     04c0  
    2100                    
    2101 000141a0     09e0          movi    dnk_run2_anim,a0
         000141b0 00000000! 
    2102 000141d0     0d5f          calla   change_anim1a
         000141e0 00000000! 
    2103                    
    2104 00014200                   SETMODE RUNNING
    2105                    
    2106                    
    2107 000142b0           wstjnot_ended
    2108 000142b0     0960          rets
    2109                    
    2110                    
    2111 000142c0           mode_onturnbkl  ;6
    2112                    
    2113                    
    2114 000142c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000142d0     0bc0  
    2115 000142e0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2116 000142f0     ca12          jrz     ooctno_climbdown
    2117                    
    2118 00014300     09e0          movi    dnk_climb_down_anim,a0
         00014310 00000000! 
    2119 00014330     0d5f          calla   change_anim1a
         00014340 00000000! 
    2120                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2121 00014360                   SETMODE CLIMBTURNBKL
    2122                    
    2123 00014410           ooctno_interrupt
    2124 00014410     0960          rets
    2125                    
    2126 00014420           ooctno_climbdown
    2127 00014420     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00014430     0ba0  
    2128 00014440     0b80          andi    011111b,a0
         00014450 ffffffe0  
    2129 00014470     ca51          jrz     ooctz
    2130                    
    2131 00014480                   X32     a0
    2132 00014490     0b20          addi    ooctaction_table,a0
         000144a0 00014590' 
    2133 000144c0     8600          move    *a0,a0,L
    2134 000144d0     0920          call    a0
    2135                    
    2136 000144e0     b5a5          move    *a13(PLYRNUM),a5
         000144f0     0580  
    2137 00014500     09e2          movi    JUMP_ROPES,a2
         00014510 00000000! 
    2138 00014530     09c0          movi    1000,a0
         00014540     03e8  
    2139 00014550     0d5f          calla   ADD_IF_SILENT
         00014560 00000000! 
    2140                    
    2141 00014580     0960          rets
    2142                    
    2143                    
    2144                    
    2145 00014590           ooctaction_table
    2146 00014590 00014990'         .long   ooctz,ooctpunch,ooctblock,ooctblock                     ;0-3
    2147 00014610 00014c60'         .long   ooctsuper_punch,ooctsuper_punch,ooctblock,ooctblock     ;4-7
    2148 00014690 00014f20'         .long   ooctkick,ooctpunchkick,ooctblock,ooctblock              ;8-11
    2149 00014710 00014c60'         .long   ooctsuper_punch,ooctpunchkick,ooctblock,ooctblock       ;12-15
    2150 00014790 00014f20'         .long   ooctsuper_kick,ooctsuper_kick,ooctblock,ooctblock       ;16-19
    2151 00014810 00014c60'         .long   ooctgraboh,ooctgraboh,ooctblock,ooctblock               ;20-23
    2152 00014890 00014f20'         .long   ooctsuper_kick,ooctpunchkick,ooctblock,ooctblock        ;24-27
    2153 00014910 00014c60'         .long   ooctgraboh,ooctgraboh,ooctblock,ooctblock               ;28-31
    2154                    
    2155 00014990           ooctz
    2156 00014990     0960          rets
    2157                    
    2158 000149a0           ooctpunch               ;1
    2159 000149a0           ooctpunchkick   ;1
    2160 000149a0           ooctblock               ;2
    2161                    
    2162 000149a0                   SETMODE INAIR
    2163 00014a50                   WRSND   W_DOINK,GRABFLING_T1,GRABFLING_T2
    2164                    
    2165 00014bf0     09e0          movi    dnk_4_blbowdrop_anim,a0         ;Buckle
         00014c00 00000000! 
    2166 00014c20     0d5f          calla   change_anim1a
         00014c30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2167 00014c50     0960          rets
    2168                    
    2169                    
    2170                    
    2171 00014c60           ooctsuper_punch ;4
    2172                    
    2173                    
    2174 00014c60           ooctgraboh              ;1
    2175                    
    2176 00014c60                   SETMODE INAIR
    2177 00014d10                   WRSND   W_DOINK,GRABFLING_T1,GRABFLING_T2
    2178                    
    2179 00014eb0     09e0          movi    dnk_diveofftb_anim,a0
         00014ec0 00000000! 
    2180 00014ee0     0d5f          calla   change_anim1a
         00014ef0 00000000! 
    2181 00014f10     0960          rets
    2182                    
    2183 00014f20           ooctkick                ;8
    2184 00014f20           ooctsuper_kick  ;16
    2185                    
    2186 00014f20                   SETMODE INAIR
    2187 00014fd0                   WRSND   W_DOINK,GRABFLING_T1,GRABFLING_T2
    2188                    
    2189 00015170     09e0          movi    dnk_4_bstomp_anim,a0            ;Buckle
         00015180 00000000! 
    2190 000151a0     0d5f          calla   change_anim1a
         000151b0 00000000! 
    2191 000151d0     0960          rets
    2192                    
    2193                    
    2194 000151e0           mode_block      ;7
    2195                    
    2196 000151e0     5600          clr     a0
    2197 000151f0     b00d          move    a0,*a13(CONSECUTIVE_HITS)
         00015200     0e50  
    2198                    
    2199 00015210     b5a0          move    *a13(BLOCK_TIME),a0
         00015220     0d30  
    2200 00015230     1020          inc     a0
    2201 00015240     b00d          move    a0,*a13(BLOCK_TIME)
         00015250     0d30  
    2202 00015260     0b40          cmpi    160,a0
         00015270     ff5f  
    2203 00015280     c413          jrlt    ypamno
    2204                    
    2205 00015290     0d5f          calla   get_opp_plyrmode
         000152a0 00000000! 
    2206 000152c0     0b40          cmpi    MODE_BLOCK,a0
         000152d0     fff8  
    2207 000152e0     cb0d          jrnz    ypamno
    2208 000152f0     b5a0          move    *a13(CLOSEST_XDIST),a0
         00015300     0370  
    2209 00015310     0b40          cmpi    61h,a0
         00015320     ff9e  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2210 00015330     c508          jrge    ypamno
    2211 00015340     0b40          cmpi    45,a0
         00015350     ffd2  
    2212 00015360     c405          jrlt    ypamno
    2213 00015370     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00015380     0390  
    2214 00015390     0b40          cmpi    30,a0
         000153a0     ffe1  
    2215 000153b0     c461          jrlt    ypampunchblock
    2216                    
    2217 000153c0           ypamno
    2218 000153c0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000153d0     0ba0  
    2219 000153e0     0b80          andi    011111b,a0
         000153f0 ffffffe0  
    2220 00015410     ca0c          jrz     ypamno_interrupt
    2221                    
    2222                            ;press.  if block isn't down, let mode_normal handle it
    2223 00015420     4c02          move    a0,a2                   ;save a0 from ...val_down
    2224 00015430     b5a0          move    *a13(BUT_VAL_CUR),a0
         00015440     0b90  
    2225 00015450     1fc0          btst    PLAYER_BLOCK_BIT,a0
    2226 00015460     ca08          jrz     ypamset_mode_normal
    2227 00015470     4c40          move    a2,a0                   ;restore a0 from ...val_down
    2228                    
    2229 00015480                   X32     a0
    2230 00015490     0b20          addi    ypamaction_table,a0
         000154a0 000155c0' 
    2231 000154c0     8600          move    *a0,a0,L
    2232 000154d0     0920          call    a0
    2233                    
    2234 000154e0           ypamno_interrupt
    2235 000154e0     0960          rets
    2236                    
    2237 000154f0           ypamset_mode_normal
    2238 000154f0                   SETMODE NORMAL
    2239 000155a0     c000          jruc    mode_normal
         000155b0     f450  
    2240                    
    2241 000155c0           ypamaction_table
    2242 000155c0 000159c0'         .long   ypamz,ypampunchblock,ypamz      ;0-2
    2243 00015620 000159d0'         .long   ypampunchblock          ;3
    2244 00015640 000159c0'         .long   ypamz,ypamz,ypamz,ypamz,ypamz,ypamz,ypamz       ;4-10
    2245 00015720 000159c0'         .long   ypamz,ypamz,ypamz,ypamz,ypamz,ypamz,ypamz       ;11-17
    2246 00015800 000159c0'         .long   ypamz,ypamz,ypamz,ypamz,ypamz,ypamz,ypamz       ;18-24
    2247 000158e0 000159c0'         .long   ypamz,ypamz,ypamz,ypamz,ypamz,ypamz,ypamz       ;25-31
    2248                    
    2249 000159c0           ypamz
    2250 000159c0     0960          rets
    2251                    
    2252 000159d0           ypampunchblock  ;3
    2253                    
    2254                    
    2255 000159d0                   SETMODE NORMAL
    2256                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2257 00015a80     09e0          movi    dnk_4_push_anim,a0
         00015a90 00000000! 
    2258 00015ab0     0d5f          calla   change_anim1a
         00015ac0 00000000! 
    2259                    
    2260 00015ae0                   WRSND   W_DOINK,PUSH_T1,PUSH_T2
    2261                    
    2262 00015c80     0960          rets
    2263                    
    2264                    
    2265 00015c90           mode_dizzy      ;8
    2266                    
    2267 00015c90     0960          rets
    2268                    
    2269                    
    2270 00015ca0            SUBR   mode_dead       ;9
    2271                    
    2272                            ;if our zombie bit is set, move
    2273 00015ca0     b5ae          move    *a13(STATUS_FLAGS),a14
         00015cb0     0b50  
    2274 00015cc0     1f8e          btst    B_ZOMBIE,a14            ;are we already a zombie?
    2275 00015cd0     cb45          jrnz    xkiqzmb
    2276                    
    2277 00015ce0     1e2e          btst    B_DID_BUCKOFF,a14
    2278 00015cf0     cb00          jrnz    xkiqdone                        ;have we already done one this match?
         00015d00     0086  
    2279                    
    2280 00015d10     1e4e          btst    B_NO_BUCKOFF,a14
    2281 00015d20     cb00          jrnz    xkiqdone                        ;have we already checked this round?
         00015d30     0083  
    2282                    
    2283 00015d40     1e6e          btst    B_DO_BUCKOFF,a14
    2284 00015d50     cb00          jrnz    xkiqcount_btns          ;are we already counting?
         00015d60     0081  
    2285                    
    2286 00015d70     05ae          move    @royal_rumble,a14
         00015d80 00000000! 
    2287 00015da0     cb7c          jrnz    xkiqdone                        ;are we in royal rumble mode?
    2288                    
    2289                            ;We may have to fire up a come back to life process:
    2290                            ; IF this is the second round we've lost,
    2291                            ; AND IF our combo meter is flashing,
    2292                            ; AND IF the hit that killed us was wimpy and our WEAK_HIT bit is set,
    2293                            ; AND IF we haven't already done a buckoff this match,
    2294                            ; AND IF we're inside the ring,
    2295                            ; THEN start counting button presses.
    2296                    
    2297                            ;Is this the second round we've lost?
    2298                            ;(skip this test if we're in the 8-on-1 match)
    2299 00015db0     0d5f          calla   is_8_on_1
         00015dc0 00000000! 
    2300 00015de0     c80c          jrc     xkiqck81
    2301 00015df0     05a0          move    @p1rounds,a0
         00015e00 00000000! 
    2302 00015e20     b5ae          move    *a13(PLYR_SIDE),a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   52

         00015e30     05b0  
    2303 00015e40     cb03          jrnz    xkiqrndok
    2304 00015e50     05a0          move    @p2rounds,a0
         00015e60 00000000! 
    2305 00015e80           xkiqrndok       TEST    a0
    2306 00015e90     ca21          jrz     xkiqnobuck
    2307 00015ea0     c005          jruc    xkiqtcombo
    2308                    
    2309 00015eb0           xkiqck81        ;it's 8-on-1.  only the player is allowed to buckoff.
    2310 00015eb0     b5ae          move    *a13(PLYRNUM),a14
         00015ec0     0580  
    2311 00015ed0     0b4e          cmpi    2,a14
         00015ee0     fffd  
    2312 00015ef0     c51b          jrge    xkiqnobuck
    2313                    
    2314 00015f00           xkiqtcombo      ;is our combo meter lit?
    2315 00015f00     4da8          move    a13,a8
    2316 00015f10     0d5f          calla   CHECK_COMBO_GO
         00015f20 00000000! 
    2317 00015f40     c416          jrlt    xkiqnobuck
    2318                    
    2319                            ;are we inside the ring?
    2320 00015f50     b5ae          move    *a13(INRING),a14
         00015f60     0560  
    2321 00015f70     cb13          jrnz    xkiqnobuck
    2322                    
    2323                            ;Buckoff is NOT allowed if undertaker started his finish move or
    2324                            ;has completed his finish move!!!!
    2325 00015f80     05ae          move    @in_finish_move,a14
         00015f90 00000000! 
    2326 00015fb0     cb0f          jrnz    xkiqnobuck
    2327 00015fc0     05ae          move    @finish_completed,a14
         00015fd0 00000000! 
    2328 00015ff0     cb0b          jrnz    xkiqnobuck
    2329                    
    2330                            ;temp! - 314
    2331                            .if DEBUG
    2332                            DBEVENT BDE_MAYBE_BUCK,a13,L,*a13(WRESTLERNUM),W,*a13(PLYRNUM),W
    2333                            .endif
    2334                    
    2335                            ;possible buckoff.  Zero BUCKOFF_COUNT and set DO_BUCKOFF bit
    2336 00016000     57ce          clr     a14
    2337 00016010     b1cd          move    a14,*a13(BUCKOFF_COUNT)
         00016020     0da0  
    2338 00016030     b5ae          move    *a13(STATUS_FLAGS),a14
         00016040     0b50  
    2339 00016050     0bae          ori     M_DO_BUCKOFF,a14
         00016060 00001000  
    2340 00016080     b1cd          move    a14,*a13(STATUS_FLAGS)
         00016090     0b50  
    2341 000160a0     c04d          jruc    xkiqcount_btns
    2342                    
    2343 000160b0           xkiqnobuck      ;no buckoff.  set NO_BUCKOFF bit
    2344 000160b0     b5ae          move    *a13(STATUS_FLAGS),a14
         000160c0     0b50  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   53

    2345 000160d0     0bae          ori     M_NO_BUCKOFF,a14
         000160e0 00002000  
    2346 00016100     b1cd          move    a14,*a13(STATUS_FLAGS)
         00016110     0b50  
    2347 00016120     c044          jruc    xkiqdone
    2348                    
    2349 00016130           xkiqzmb ;we're a zombie.  WAITROLL is going to automatically roll us up
    2350                            ; until we can't roll anymore, and then our anim should make us
    2351                            ; stand up.  (There should always be a getup after a waitroll.)
    2352                            ; So all we do is wait for the MODE_END bit to get set, which tells
    2353                            ; us that we're standing up, outside, with a clear lane to either
    2354                            ; side.  At that point we begin running toward whichever side of
    2355                            ; the arena is farther from the camera.  We don't want to be seen
    2356                            ; vanishing when we hit the edge.
    2357                    
    2358                            ;Update ZOMBIE_TIME.  If we've been a zombie for ten seconds,
    2359                            ; something has probably gone wrong with our trip to the side
    2360                            ; of the arena, so we'll just transform now.
    2361 00016130     b5ae          move    *a13(ZOMBIE_TIME),a14
         00016140     0db0  
    2362 00016150     102e          inc     a14
    2363 00016160     b1cd          move    a14,*a13(ZOMBIE_TIME)
         00016170     0db0  
    2364 00016180     0b4e          cmpi    TSEC*10,a14
         00016190     fded  
    2365 000161a0     c404          jrlt    xkiqzmb_ok
    2366                    
    2367 000161b0           xkiqchange      ;timeout!
    2368 000161b0     0d5f          calla   change_wrestler
         000161c0 00000000! 
    2369 000161e0     c038          jruc    xkiqdone
    2370 000161f0           xkiqzmb_ok
    2371                    
    2372 000161f0     b5ae          move    *a13(ANIMODE),a14
         00016200     0660  
    2373 00016210     1fee          btst    MODE_END_BIT,a14
    2374 00016220     ca34          jrz     xkiqdone
    2375                    
    2376 00016230           xkiqrun ;begin running left if WORLDTLX > RING_X_CENTER-200, right otherwise.
    2377                    
    2378                            ;set CAN_XFORM bit so we can transform
    2379 00016230     b5ae          move    *a13(STATUS_FLAGS),a14
         00016240     0b50  
    2380 00016250     0bae          ori     M_CAN_XFORM,a14
         00016260 00000040  
    2381 00016280     b1cd          move    a14,*a13(STATUS_FLAGS)
         00016290     0b50  
    2382                    
    2383 000162a0     07ae          move    @WORLDTLX,a14,L
         000162b0 00000000! 
    2384 000162d0     2a0e          sra     16,a14
    2385 000162e0     0b4e          cmpi    RING_X_CENTER-200,a14
         000162f0     fc95  
    2386 00016300     c513          jrge    xkiqrun_left
    2387                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   54

    2388 00016310           xkiqrun_right
    2389 00016310     190e          movk    MOVE_RIGHT,a14
    2390 00016320     b1cd          move    a14,*a13(STICK_VAL_CUR)
         00016330     0bc0  
    2391 00016340     09e0          movi    start_run_anim,a0
         00016350 00000000! 
    2392 00016370     0d5f          calla   change_anim1a
         00016380 00000000! 
    2393                    
    2394 000163a0     b5ae          move    *a13(WRESTLERNUM),a14
         000163b0     0590  
    2395 000163c0                   X32     a14
    2396 000163d0     0b2e          addi    xkiqrun_speeds,a14
         000163e0 00017110' 
    2397 00016400     87ce          move    *a14,a14,L
    2398 00016410     b3cd          move    a14,*a13(OBJ_XVEL),L
         00016420     02d0  
    2399 00016430     c013          jruc    xkiqdone
    2400                    
    2401 00016440           xkiqrun_left
    2402 00016440     188e          movk    MOVE_LEFT,a14
    2403 00016450     b1cd          move    a14,*a13(STICK_VAL_CUR)
         00016460     0bc0  
    2404 00016470     09e0          movi    start_run_anim,a0
         00016480 00000000! 
    2405 000164a0     0d5f          calla   change_anim1a
         000164b0 00000000! 
    2406                    
    2407 000164d0     b5ae          move    *a13(WRESTLERNUM),a14
         000164e0     0590  
    2408 000164f0                   X32     a14
    2409 00016500     0b2e          addi    xkiqrun_speeds,a14
         00016510 00017110' 
    2410 00016530     87ce          move    *a14,a14,L
    2411 00016540     03ae          neg     a14
    2412 00016550     b3cd          move    a14,*a13(OBJ_XVEL),L
         00016560     02d0  
    2413                    
    2414                    
    2415 00016570     0960  xkiqdone        rets
    2416                    
    2417 00016580           xkiqcount_btns
    2418                            ;count new presses this tick and add to BUCKOFF_COUNT
    2419 00016580     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00016590     0ba0  
    2420 000165a0     5621          clr     a1
    2421 000165b0     6a0e  xkiqlp0 lmo     a0,a14
    2422 000165c0     ca04          jrz     xkiqend0
    2423 000165d0     69c0          rl      a14,a0
    2424 000165e0     2020          sla     1,a0
    2425 000165f0     1021          inc     a1
    2426 00016600     c0fa          jruc    xkiqlp0
    2427 00016610     b5a0  xkiqend0        move    *a13(BUCKOFF_COUNT),a0
         00016620     0da0  
    2428                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   55

    2429 00016630     4020          add     a1,a0
    2430 00016640     b00d          move    a0,*a13(BUCKOFF_COUNT)
         00016650     0da0  
    2431                    
    2432 00016660     0b40          cmpi    50,a0
         00016670     ffcd  
    2433 00016680     c501          jrge    xkiqdobuck
    2434                    
    2435                            .ref    obj_del1c,dec_to_asc,concat_rom_string,mess_spacing
    2436                            .ref    ogmd10_ascii,message_ascii,mess_cursx,mess_cursy
    2437                            .ref    message_palette,print_string,BINBCD,SGMD8GLD,mess_objid
    2438                            .ref    copy_string
    2439                    
    2440 00016690     0960          rets
    2441                    
    2442 000166a0           xkiqdobuck      ;SUCCESS!  Do the buckoff.
    2443                    
    2444                            ;temp! - 314
    2445                            .if DEBUG
    2446                            DBEVENT BDE_DONE_BUCK,a13,L,*a13(WRESTLERNUM),W,*a13(PLYRNUM),W
    2447                            .endif
    2448                    
    2449                            ;clear my combo meter
    2450 000166a0     0d5f          calla   clear_combo_meter
         000166b0 00000000! 
    2451                    
    2452                    
    2453                            ;If any opponent has pinned, send him to his buckoff anim.
    2454 000166d0     09c0          movi    NUM_WRES,a0
         000166e0     0007  
    2455 000166f0     09e1          movi    process_ptrs,a1
         00016700 00000000! 
    2456 00016720     9622  xkiqlp2 move    *a1+,a2,L
    2457 00016730     ca06          jrz     xkiqnxt2
    2458 00016740     b64e          move    *a2(STATUS_FLAGS),a14,L
         00016750     0b50  
    2459 00016760     1fce          btst    B_DID_PIN,a14
    2460 00016770     ca02          jrz     xkiqnxt2
    2461 00016780     4c40          move    a2,a0
    2462 00016790     c001          jruc    xkiqdone2
    2463 000167a0     3d20  xkiqnxt2        dsj     a0,xkiqlp2
    2464 000167b0           xkiqdone2
    2465                    
    2466                            ;clear his pinned bit
    2467 000167b0     b40e          move    *a0(STATUS_FLAGS),a14
         000167c0     0b50  
    2468 000167d0     0b8e          andni   M_DID_PIN,a14
         000167e0 00000002  
    2469 00016800     b1c0          move    a14,*a0(STATUS_FLAGS)
         00016810     0b50  
    2470                    
    2471                            ;if his DID_RAISEARM bit is set, then it was probably taker and he's
    2472                            ; no longer on top of us, so skip the buckoff and just let him get
    2473                            ; his raisearm anim shut off along with the other drones.
    2474 00016820     b40e          move    *a0(STATUS_FLAGS),a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   56

         00016830     0b50  
    2475 00016840     1dee          btst    B_DID_RAISEARM,a14
    2476 00016850     cb0a          jrnz    xkiqme_not_pinned
    2477                    
    2478                            ;do his bucked off anim (stick it into special_move_addr?)
    2479 00016860     4c08          move    a0,a8
    2480 00016870                   FACETBL xkiqbuckoff_tbl,a8
    2481 000168e0     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         000168f0     0930  
    2482                    
    2483 00016900           xkiqme_not_pinned
    2484                            ;back to life...
    2485 00016900     09ce          movi    MODE_ONGROUND,a14
         00016910     0004  
    2486 00016920     b1cd          move    a14,*a13(PLYRMODE)
         00016930     05c0  
    2487                    
    2488                            ;get two pixels back
    2489 00016940     1840          movk    2,a0
    2490 00016950     b5a1          move    *a13(PLYRNUM),a1
         00016960     0580  
    2491 00016970     0d5f          calla   adjust_health
         00016980 00000000! 
    2492                    
    2493                            ;no getup meter
    2494 000169a0     57ce          clr     a14
    2495 000169b0     b1cd          move    a14,*a13(GETUP_TIME)
         000169c0     0460  
    2496 000169d0     b1cd          move    a14,*a13(DELAY_METER)
         000169e0     0ad0  
    2497                    
    2498 000169f0     5600          clr     a0
    2499 00016a00     b00d          move    a0,*a13(I_WILL_DIE)
         00016a10     0b30  
    2500                    
    2501                            ;reset my pal, just in case.
    2502 00016a20     b9ad          move    *a13(MY_PAL),*a13(OBJ_PAL)
         00016a30     08a0  
         00016a40     07a0  
    2503                    
    2504 00016a50     4da8          move    a13,a8
    2505 00016a60     09ca          movi    41,a10
         00016a70     0029  
    2506                            .ref    MOVE_NAME_ANNC
    2507 00016a80                   CREATE  MESSAGE_PID,MOVE_NAME_ANNC
    2508                    
    2509                            ;clear DO_BUCKOFF|PINABLE|PINNED, and set DID_BUCKOFF|NEW_BUCKOFF
    2510 00016b00     b7ae          move    *a13(STATUS_FLAGS),a14,L
         00016b10     0b50  
    2511 00016b20     0bae          ori     M_DID_BUCKOFF|M_NEW_BUCKOFF,a14
         00016b30 00024000  
    2512 00016b50     0b8e          andni   M_DO_BUCKOFF|M_PINNED|M_PINABLE,a14
         00016b60 00001220  
    2513 00016b80     b3cd          move    a14,*a13(STATUS_FLAGS),L
         00016b90     0b50  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   57

    2514                    
    2515                            ;convulse
    2516 00016ba0                   FACETBL hitonground_tbl
    2517 00016c10     0d5f          calla   change_anim1a
         00016c20 00000000! 
    2518                    
    2519                            ;set nocollis bit
    2520 00016c40     b5ae          move    *a13(ANIMODE),a14
         00016c50     0660  
    2521 00016c60     0bae          ori     MODE_NOCOLLIS,a14
         00016c70 00000100  
    2522 00016c90     b1cd          move    a14,*a13(ANIMODE)
         00016ca0     0660  
    2523                    
    2524                            ;if anyone has done a raisearm, put 'em back in a stand.
    2525 00016cb0     09e0          movi    process_ptrs,a0
         00016cc0 00000000! 
    2526 00016ce0     09c1          movi    NUM_WRES,a1
         00016cf0     0007  
    2527 00016d00     9602  xkiqlp1 move    *a0+,a2,L
    2528 00016d10     ca09          jrz     xkiqnxt1
    2529 00016d20     b64e          move    *a2(STATUS_FLAGS),a14,L
         00016d30     0b50  
    2530 00016d40     1dee          btst    B_DID_RAISEARM,a14
    2531 00016d50     ca05          jrz     xkiqnxt1
    2532                    
    2533                            ;just clear the DID_RAISEARM bit.  Anim scripts will do the rest.
    2534 00016d60     0b8e          andni   M_DID_RAISEARM,a14
         00016d70 00010000  
    2535 00016d90     b3c2          move    a14,*a2(STATUS_FLAGS),L
         00016da0     0b50  
    2536                    
    2537                    
    2538 00016db0     3d81  xkiqnxt1        dsj     a1,xkiqlp1
    2539                    
    2540                            ;If anyone has turned into a drone, turn 'em back.
    2541 00016dc0     57ce          clr     a14
    2542 00016dd0     07a0          move    @process_ptrs,a0,L
         00016de0 00000000! 
    2543 00016e00     ca02          jrz     xkiqadc1
    2544 00016e10     b1c0          move    a14,*a0(PLYR_TYPE)
         00016e20     05a0  
    2545 00016e30     07a0  xkiqadc1        move    @process_ptrs+20h,a0,L
         00016e40 00000020! 
    2546 00016e60     ca02          jrz     xkiqadc2
    2547 00016e70     b1c0          move    a14,*a0(PLYR_TYPE)
         00016e80     05a0  
    2548 00016e90           xkiqadc2
    2549                    
    2550                            ;call init_reduce_bog, because match_timer clears it when it
    2551                            ; sees one team dead.
    2552 00016e90     0d5f          calla   init_reduce_bog
         00016ea0 00000000! 
    2553                    
    2554                            ;if there's an ANNOUNCE_RND_WINNER process waiting,
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   58

    2555                            ; wake it up so it'll see us alive and die.
    2556 00016ec0     09c0          movi    ANNC_PID,a0
         00016ed0     012e  
    2557 00016ee0     5621          clr     a1
    2558 00016ef0     03e1          not     a1
    2559 00016f00     0d5f          calla   EXISTP
         00016f10 00000000! 
    2560 00016f30     ca0a          jrz     xkiqrets
    2561                    
    2562 00016f40     b60e          move    *a0(PWAKE),a14,L
         00016f50     00e0  
    2563 00016f60     0b6e          cmpi    arw_bwait,a14
         00016f70 ffffffff! 
    2564 00016f90     cb04          jrne    xkiquh_oh
    2565                    
    2566 00016fa0     182e          movk    1,a14
    2567 00016fb0     b1c0          move    a14,*a0(PTIME)
         00016fc0     0030  
    2568 00016fd0     0300          jruc    xkiqrets
    2569                    
    2570 00016fe0           xkiquh_oh
    2571                            .if DEBUG       
    2572                            LOCKUP  ;announce_rnd_winner ISN'T at arw_bwait!
    2573                            .endif
    2574 00016fe0     0960  xkiqrets        rets
    2575                    
    2576                    
    2577 00016ff0           xkiqbuckoff_tbl
    2578 00016ff0                   REFLONG hrt_buckoff_anim        ;Bret
    2579 00017010                   REFLONG rzr_buckoff_anim        ;Razor
    2580 00017030                   REFLONG und_buckoff_anim        ;Taker
    2581 00017050                   REFLONG yok_buckoff_anim        ;Yoko
    2582 00017070                   REFLONG shn_buckoff_anim        ;Shawn
    2583 00017090                   REFLONG bam_buckoff_anim        ;Bam Bam
    2584 000170b0                   REFLONG dnk_buckoff_anim        ;Doink
    2585 000170d0 00000000          .long   0
    2586 000170f0                   REFLONG lex_buckoff_anim        ;Lex
    2587                    
    2588                    
    2589 00017110           xkiqrun_speeds
    2590 00017110 00064000          .long   HRT_XRUN
    2591 00017130 00060000          .long   RZR_XRUN
    2592 00017150 00064000          .long   UND_XRUN
    2593 00017170 00058000          .long   YOK_XRUN
    2594 00017190 00064000          .long   SHN_XRUN
    2595 000171b0 00064000          .long   BAM_XRUN
    2596 000171d0 00064000          .long   DNK_XRUN
    2597 000171f0 00000000          .long   0
    2598 00017210 00060000          .long   LEX_XRUN
    2599                    
    2600                    
    2601 00017230            SUBRP  ani_end_anim
    2602 00017230     8004          .word   ANI_SETPLYRMODE,MODE_NORMAL
    2603 00017250     8002          .word   ANI_SETMODE,MODE_NORMAL
    2604 00017270     8049          .word   ANI_END 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   59

    2605                    
    2606                    
    2607 00017280           mode_oppoverhead ;10
    2608                    
    2609 00017280     0960          rets
    2610                    
    2611                    
    2612 00017290           mode_climbturnbkl       ;11
    2613                    
    2614 00017290     0960          rets
    2615                    
    2616                    
    2617                    
    2618 000172a0           mode_waitanim   ;12
    2619                    
    2620 000172a0     b5a0          move    *a13(ANIMODE),a0
         000172b0     0660  
    2621 000172c0     1fe0          btst    MODE_END_BIT,a0
    2622 000172d0     ca03          jrz     ovibnot_ended
    2623                    
    2624 000172e0     b7a0          move    *a13(CODE_ADDR),a0,L
         000172f0     0430  
    2625 00017300     0920          call    a0
    2626                    
    2627 00017310           ovibnot_ended
    2628 00017310     0960          rets
    2629                    
    2630                    
    2631                    
    2632 00017320           mode_grapple    ;13
    2633                    
    2634 00017320     0960          rets
    2635                    
    2636                    
    2637 00017330           mode_master     ;14
    2638                    
    2639 00017330     0d5f          calla   master_keep_attached    ;keep slave attached to me
         00017340 00000000! 
    2640                    
    2641 00017360     0960          rets
    2642                    
    2643                    
    2644 00017370           mode_slave      ;15
    2645 00017370     0960          rets
    2646                    
    2647                    
    2648                    
    2649 00017380            SUBR   bozo_check
    2650                    
    2651 00017380     b5a0          move    *a13(SPUNCHB_COUNT),a0
         00017390     0820  
    2652 000173a0     b5a1          move    *a13(SKICKB_COUNT),a1
         000173b0     0840  
    2653 000173c0     b5a2          move    *a13(BLOCKB_COUNT),a2
         000173d0     0810  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   60

    2654 000173e0     4001          add     a0,a1
    2655 000173f0     4022          add     a1,a2
    2656 00017400     0b42          cmpi    18,a2
         00017410     ffed  
    2657 00017420     c417          jrlt    hugyno_bozo
    2658                    
    2659 00017430     b5ae          move    *a13(IMMOBILIZE_TIME),a14
         00017440     0ae0  
    2660 00017450     cb14          jrnz    hugyno_bozo                             ;ignore
    2661                    
    2662                            ;target WHOHITME -- don't hit anyone else
    2663 00017460                   SMRTTGT a13,WHOHITME
    2664                    
    2665                            ;immobilize WHOHITME
    2666 00017500     b7a0          move    *a13(WHOHITME),a0,L
         00017510     04e0  
    2667 00017520     180e          movk    32,a14
    2668 00017530     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00017540     0ae0  
    2669                    
    2670 00017550     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017560 00000000! 
    2671                            
    2672 00017580     0de0          setc
    2673 00017590     0960          rets
    2674                    
    2675 000175a0           hugyno_bozo
    2676 000175a0     0320          clrc
    2677 000175b0     0960          rets
    2678                    
    2679                    
    2680 000175c0           mode_headhold   ;16
    2681                    
    2682 000175c0     0d3f          callr   bozo_check
         000175d0     ffda  
    2683 000175e0     c929          jrnc    hiyufail
    2684                    
    2685 000175f0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    2686                    
    2687 00017790     09e0          movi    dnk_3_head_slam_anim,a0
         000177a0 00000000! 
    2688 000177c0     05ae          move    @PCNT,a14
         000177d0 00000000! 
    2689 000177f0     1fee          btst    0,a14
    2690 00017800     ca03          jrz     hiyutag
    2691 00017810     09e0          movi    dnk_3_pile_driver_anim,a0
         00017820 00000000! 
    2692 00017840     0d5f  hiyutag calla   change_anim1a
         00017850 00000000! 
    2693                    
    2694 00017870     0960          rets
    2695                    
    2696 00017880           hiyufail
    2697 00017880     b7a0          move    *a13(WHOIHIT),a0,L
         00017890     0500  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   61

    2698 000178a0     b400          move    *a0(PLYRMODE),a0
         000178b0     05c0  
    2699 000178c0     0b40          cmpi    MODE_HEADHELD,a0
         000178d0     ffec  
    2700 000178e0     cb10          jrnz    hiyuexit
    2701                    
    2702                    
    2703 000178f0     b5a0          move    *a13(ANIMODE),a0
         00017900     0660  
    2704 00017910     1fa0          btst    MODE_UNINT_BIT,a0
    2705 00017920     cb0b          jrnz    hiyuno_interrupt
    2706                    
    2707 00017930     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00017940     0ba0  
    2708 00017950     0b80          andi    011111b,a0
         00017960 ffffffe0  
    2709 00017980                   X32     a0
    2710 00017990     0b20          addi    hiyuaction_table,a0
         000179a0 00017bc0' 
    2711 000179c0     8600          move    *a0,a0,L
    2712 000179d0     0920          call    a0
    2713                    
    2714 000179e0           hiyuno_interrupt
    2715 000179e0     0960          rets
    2716                    
    2717 000179f0           hiyuexit
    2718 000179f0     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00017a00     0140  
    2719 00017a10     0d0e          subi    [6,0],a14
         00017a20 fff9ffff  
    2720 00017a40     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00017a50     0140  
    2721                    
    2722 00017a60     1941          movk    MOVE_DOWN_RIGHT,a1
    2723 00017a70     b5a0          move    *a13(OBJ_CONTROL),a0
         00017a80     0780  
    2724 00017a90     1f60          btst    B_FLIPH,a0
    2725 00017aa0     ca01          jrz     hiyuright
    2726 00017ab0     18c1          movk    MOVE_DOWN_LEFT,a1
    2727 00017ac0     b02d  hiyuright       move    a1,*a13(FACING_DIR)
         00017ad0     04c0  
    2728 00017ae0     b02d          move    a1,*a13(NEW_FACING_DIR)
         00017af0     04d0  
    2729                    
    2730 00017b00                   SETMODE NORMAL
    2731                    
    2732 00017bb0     0960          rets
    2733                    
    2734 00017bc0           hiyuaction_table
    2735 00017bc0 00017fc0'         .long   hiyuz,hiyupunch,hiyublock,hiyublock                     ;0-3
    2736 00017c40 000184b0'         .long   hiyusuper_punch,hiyusuper_punch,hiyublock,hiyublock     ;4-7
    2737 00017cc0 00018760'         .long   hiyukick,hiyupunchkick,hiyublock,hiyublock              ;8-11
    2738 00017d40 000184b0'         .long   hiyusuper_punch,hiyupunchkick,hiyublock,hiyublock       ;12-15
    2739 00017dc0 000189a0'         .long   hiyusuper_kick,hiyusuper_kick,hiyublock,hiyublock       ;16-19
    2740 00017e40 00017fc0'         .long   hiyugraboh,hiyugraboh,hiyublock,hiyublock               ;20-23
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   62

    2741 00017ec0 000189a0'         .long   hiyusuper_kick,hiyupunchkick,hiyublock,hiyublock        ;24-27
    2742 00017f40 00017fc0'         .long   hiyugraboh,hiyugraboh,hiyublock,hiyublock               ;28-31
    2743                    
    2744                    
    2745 00017fc0           hiyublock
    2746 00017fc0           hiyugraboh
    2747 00017fc0           hiyuz           ;0
    2748 00017fc0     0960          rets
    2749                    
    2750                    
    2751 00017fd0           hiyupunch               ;1
    2752 00017fd0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00017fe0 00000000! 
    2753 00018000     b5a0          move    *a13(STICK_VAL_CUR),a0
         00018010     0bc0  
    2754 00018020     b5a1          move    *a13(NEW_FACING_DIR),a1
         00018030     04d0  
    2755 00018040     0b81          andi    0ch,a1
         00018050 fffffff3  
    2756 00018070     4801          cmp     a0,a1
    2757 00018080     cb21          jrnz    hiyutag2
    2758                    
    2759 00018090                   WRSND   W_DOINK,UPRCUT_T1,UPRCUT_T2
    2760 00018230     09e0          movi    dnk_uppercuts_to_head_anim,a0
         00018240 00000000! 
    2761 00018260     0d5f          calla   change_anim1a
         00018270 00000000! 
    2762 00018290     0960          rets
    2763                    
    2764 000182a0     09e0  hiyutag2        movi    dnk_uppercut_to_head_anim,a0
         000182b0 00000000! 
    2765 000182d0     0d5f          calla   change_anim1a
         000182e0 00000000! 
    2766 00018300                   WRSND   W_DOINK,UPRCUT_T1,UPRCUT_T2
    2767 000184a0     0960          rets
    2768                    
    2769 000184b0           hiyusuper_punch ;4
    2770                    
    2771 000184b0           do_pile
    2772 000184b0     b5a0          move    *a13(USR_VAR2),a0
         000184c0     0860  
    2773 000184d0     caae          jrz     hiyuz
    2774                    
    2775 000184e0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000184f0 00000000! 
    2776 00018510     b5a0          move    *a13(STICK_VAL_CUR),a0
         00018520     0bc0  
    2777 00018530     1fc0          btst    PLAYER_DOWN_BIT,a0
    2778 00018540     caa8          jrz     hiyupunch
    2779                    
    2780 00018550                   WRSND   W_DOINK,UPRCUT_T1,UPRCUT_T2
    2781 000186f0     09e0          movi    dnk_3_pile_driver_anim,a0
         00018700 00000000! 
    2782 00018720     0d5f          calla   change_anim1a
         00018730 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   63

    2783 00018750     0960          rets
    2784                    
    2785 00018760           hiyukick
    2786 00018760           hiyupunchkick
    2787 00018760     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00018770 00000000! 
    2788 00018790                   WRSND   W_DOINK,KICK_T1,KICK_T2
    2789                    
    2790 00018930     09e0          movi    dnk_3_knee_to_head_anim,a0
         00018940 00000000! 
    2791 00018960     0d5f          calla   change_anim1a
         00018970 00000000! 
    2792 00018990     0960          rets
    2793                    
    2794 000189a0           hiyusuper_kick  ;16
    2795 000189a0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000189b0     0bc0  
    2796 000189c0     b5a1          move    *a13(NEW_FACING_DIR),a1
         000189d0     04d0  
    2797 000189e0     0b81          andi    0ch,a1
         000189f0 fffffff3  
    2798 00018a10     4801          cmp     a0,a1
    2799 00018a20     cb00          jrnz    hiyuz
         00018a30     ff58  
    2800                    
    2801 00018a40     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00018a50 00000000! 
    2802 00018a70                   WRSND   W_DOINK,KICK_T1,KICK_T2
    2803 00018c10     09e0          movi    dnk_3_knees_to_head_anim,a0
         00018c20 00000000! 
    2804 00018c40     0d5f          calla   change_anim1a
         00018c50 00000000! 
    2805 00018c70     0960          rets
    2806                    
    2807                    
    2808 00018c80           mode_puppet2    ;17
    2809                    
    2810                            .if DEBUG
    2811                            LOCKUP          ;should never be in this mode anymore.
    2812                            .endif
    2813                    
    2814 00018c80     0960          rets
    2815                    
    2816                    
    2817 00018c90           mode_headheld   ;19
    2818 00018c90     b5a0          move    *a13(ANIMODE),a0
         00018ca0     0660  
    2819 00018cb0     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2820 00018cc0     cb80          janz    mode_choking
         00018cd0 00000000! 
    2821                    
    2822 00018cf0     0d3f          callr   bozo_check
         00018d00     fe67  
    2823 00018d10     c932          jrnc    scghfail
    2824                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   64

    2825 00018d20                   PUSH    a8
    2826 00018d30     4da8          move    a13,a8
    2827 00018d40     0d5f          CALLA   DO_REVERSAL
         00018d50 00000000! 
    2828 00018d70     0d5f          CALLA   DO_REVERSAL_MESS
         00018d80 00000000! 
    2829 00018da0                   PULL    a8
    2830                    
    2831 00018db0                   WRSND   W_DOINK,FLYKICK_T1,FLYKICK_T2
    2832                    
    2833 00018f50     09e0          movi    dnk_3_head_slam_anim,a0
         00018f60 00000000! 
    2834 00018f80     05ae          move    @PCNT,a14
         00018f90 00000000! 
    2835 00018fb0     1fee          btst    0,a14
    2836 00018fc0     ca03          jrz     scghtag
    2837 00018fd0     09e0          movi    dnk_3_pile_driver_anim,a0
         00018fe0 00000000! 
    2838 00019000     0d5f  scghtag calla   change_anim1a
         00019010 00000000! 
    2839                    
    2840 00019030     0960          rets
    2841                    
    2842 00019040           scghfail
    2843                    
    2844 00019040     b7a0          move    *a13(ATTACH_PROC),a0,L
         00019050     03e0  
    2845 00019060     cb19          jrnz    scghno_luck
    2846                    
    2847 00019070     b5a0          move    *a13(OBJ_YPOSINT),a0
         00019080     0130  
    2848 00019090     b5a1          move    *a13(GROUND_Y),a1
         000190a0     0570  
    2849 000190b0     4820          cmp     a1,a0                   ;a0-a1
    2850 000190c0     c713          jrgt    scghno_luck
    2851                    
    2852                    
    2853 000190d0                   WRSND   W_DOINK,PUSH_T2
    2854 000191a0     09e0          movi    dnk_3_head_held_stand_anim,a0
         000191b0 00000000! 
    2855 000191d0     0d5f          calla   change_anim1a
         000191e0 00000000! 
    2856                    
    2857 00019200           scghno_luck
    2858 00019200     0960          rets
    2859                    
    2860 00019210            SUBR   mode_puppet     ;20     (used by everyone)
    2861                    
    2862              006a  evkxtimeout_val .equ    TSEC*2
    2863                    
    2864                            ;if we're attached, don't check anything.
    2865 00019210     b7a0          move    *a13(ATTACH_PROC),a0,L
         00019220     03e0  
    2866 00019230     ca04          jrz     evkxcheck
    2867 00019240     b601          move    *a0(ATTACH_PROC),a1,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   65

         00019250     03e0  
    2868 00019260     482d          cmp     a1,a13
    2869 00019270     ca32          jreq    evkxdone
    2870                    
    2871 00019280           evkxcheck       ;figure out if we're newly in mode_puppet or if we've been
    2872                            ; here awhile.
    2873 00019280     b5ae          move    *a13(PUPPET_TIME),a14   ;last time we were in mode_puppet
         00019290     0c20  
    2874 000192a0     05a0          move    @PCNT,a0                ;this tick
         000192b0 00000000! 
    2875 000192d0     b00d          move    a0,*a13(PUPPET_TIME)    ;in either case, update PUPPET_TIME
         000192e0     0c20  
    2876                    
    2877 000192f0     45c0          sub     a14,a0
    2878 00019300     0b40          cmpi    1,a0
         00019310     fffe  
    2879 00019320     cb24          jrne    evkxnew_arrival
    2880                    
    2881                            ;been here awhile
    2882 00019330     b5a0          move    *a13(PUPPET_TICKS),a0
         00019340     0c30  
    2883 00019350     1020          inc     a0
    2884 00019360     b00d          move    a0,*a13(PUPPET_TICKS)
         00019370     0c30  
    2885                    
    2886 00019380     0b40          cmpi    evkxtimeout_val,a0
         00019390     ff95  
    2887 000193a0     c41f          jrlt    evkxdone
    2888                    
    2889                            ;bark!  Been here too long.  glitch to a stand or something.
    2890                            .if DEBUG
    2891                            LOCKUP
    2892                            .endif
    2893 000193b0                   SETMODE NORMAL
    2894 00019460                   FACE24TBL evkxstand_tbl
    2895 00019530     0d5f          calla   change_anim1a
         00019540 00000000! 
    2896 00019560     c003          jruc    evkxdone
    2897                    
    2898 00019570           evkxnew_arrival
    2899 00019570     182e          movk    1,a14
    2900 00019580     b1cd          move    a14,*a13(PUPPET_TICKS)
         00019590     0c30  
    2901                    
    2902 000195a0     0960  evkxdone        rets
    2903                    
    2904 000195b0           evkxstand_tbl
    2905 000195b0                   REFLONG hrt_stand2_anim,hrt_stand4_anim         ;0 Bret Hart
    2906 000195f0                   REFLONG rzr_stand2_anim,rzr_stand4_anim         ;1 Razor Ramon
    2907 00019630                   REFLONG und_stand2_anim,und_stand4_anim         ;2 Undertaker
    2908 00019670                   REFLONG yok_stand2_anim,yok_stand4_anim         ;3 Yokozuna
    2909 000196b0                   REFLONG shn_stand2_anim,shn_stand4_anim         ;4 Shawn Michaels
    2910 000196f0                   REFLONG bam_stand2_anim,bam_stand4_anim         ;5 Bam Bam
    2911 00019730                   REFLONG dnk_stand2_anim,dnk_stand4_anim         ;6 Doink
    2912 00019770 00000000          .long   0,0                                     ;7 spare
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   66

    2913 000197b0                   REFLONG lex_stand2_anim,lex_stand4_anim         ;8 Lex Luger
    2914                    
    2915 000197f0           mode_chokehold  ;24
    2916 000197f0     0960          rets
    2917                    
    2918 00019800            SUBR   mode_inair2     ;21
    2919                    
    2920                    
    2921                    
    2922          00058000  jqfnZDRIFT2_VAL equ     58000h
    2923          00030000  jqfnXDRIFT_VAL  equ     30000h
    2924                    
    2925 00019800     b5a0          move    *a13(STICK_VAL_CUR),a0
         00019810     0bc0  
    2926 00019820     5621          clr     a1
    2927                    
    2928 00019830     09e1          movi    -jqfnZDRIFT2_VAL,a1
         00019840 fffa8000  
    2929 00019860     1fe0          btst    PLAYER_UP_BIT,a0
    2930 00019870     cb06          jrnz    jqfnsetvel
    2931                    
    2932 00019880     09e1          movi    jqfnZDRIFT2_VAL,a1
         00019890 00058000  
    2933 000198b0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2934 000198c0     cb01          jrnz    jqfnsetvel
    2935                    
    2936 000198d0     5621          clr     a1
    2937 000198e0           jqfnsetvel
    2938                    
    2939 000198e0     b7ae          move    *a13(OBJ_ZPOS),a14,L
         000198f0     0140  
    2940 00019900     402e          add     a1,a14
    2941 00019910     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00019920     0140  
    2942                    
    2943                    
    2944 00019930     5621          clr     a1
    2945                    
    2946 00019940     09e1          movi    -jqfnXDRIFT_VAL,a1
         00019950 fffd0000  
    2947 00019970     1fa0          btst    PLAYER_LEFT_BIT,a0
    2948 00019980     cb06          jrnz    jqfnsetvel2
    2949                    
    2950 00019990     09e1          movi    jqfnXDRIFT_VAL,a1
         000199a0 00030000  
    2951 000199c0     1f80          btst    PLAYER_RIGHT_BIT,a0
    2952 000199d0     cb01          jrnz    jqfnsetvel2
    2953                    
    2954 000199e0     5621          clr     a1
    2955 000199f0           jqfnsetvel2
    2956                    
    2957 000199f0     b7ae          move    *a13(OBJ_XPOS),a14,L
         00019a00     0100  
    2958 00019a10     402e          add     a1,a14
    2959 00019a20     b3cd          move    a14,*a13(OBJ_XPOS),L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   67

         00019a30     0100  
    2960                    
    2961 00019a40     0960          rets
    2962                    
    2963                    
    2964                    
    2965          0003a000  mjziVEL equ     3a000h          ;38000h ;30000h
    2966          00031000  mjziDVEL        equ     31000h          ;27978h ;21f0eh
    2967                    
    2968                    
    2969 00019a50            SUBR dnk_velocity_table
    2970                    
    2971                    
    2972 00019a50 00000000          .long   0,      -mjziVEL        ;0 UP
    2973                    
    2974 00019a90 00031000          .long   mjziDVEL,       -mjziDVEL       ;1 UP-RIGHT
    2975                    
    2976 00019ad0 0003a000          .long   mjziVEL,        0       ;2 RIGHT
    2977                    
    2978 00019b10 00031000          .long   mjziDVEL,       mjziDVEL        ;3 DOWN-RIGHT
    2979                    
    2980 00019b50 00000000          .long   0,      mjziVEL ;4 DOWN
    2981                    
    2982 00019b90 fffcf000          .long   -mjziDVEL,      mjziDVEL        ;5 DOWN-LEFT
    2983                    
    2984 00019bd0 fffc6000          .long   -mjziVEL,       0       ;6 LEFT
    2985                    
    2986 00019c10 fffcf000          .long   -mjziDVEL,      -mjziDVEL       ;7 UP-LEFT
    2987                    
    2988                    
    2989                    
    2990 00019c50            SUBR dnk_rotate_anims_table
    2991 00019c50 00000000!         .long   dnk_stand2_anim         ;new = up right
    2992 00019c70 00000000!         .long   dnk_2_to_4_turn_anim    ;    = down right
    2993 00019c90 00000000!         .long   dnk_2_to_6_turn_anim    ;    = down left ***
    2994 00019cb0 00000000!         .long   dnk_2_to_8_turn_anim    ;    = up left
    2995                    
    2996 00019cd0 00000000!         .long   dnk_4_to_2_turn_anim    ;new = up right
    2997 00019cf0 00000000!         .long   dnk_stand4_anim         ;    = down right
    2998 00019d10 00000000!         .long   dnk_4_to_6_turn_anim    ;    = down left
    2999 00019d30 00000000!         .long   dnk_4_to_8_turn_anim    ;    = up left ***
    3000                    
    3001 00019d50 00000000!         .long   dnk_6_to_2_turn_anim    ;new = up right ***
    3002 00019d70 00000000!         .long   dnk_6_to_4_turn_anim    ;    = down right
    3003 00019d90 00000000!         .long   dnk_stand6_anim         ;    = down left
    3004 00019db0 00000000!         .long   dnk_6_to_8_turn_anim    ;    = up left
    3005                    
    3006 00019dd0 00000000!         .long   dnk_8_to_2_turn_anim    ;new = up right
    3007 00019df0 00000000!         .long   dnk_8_to_4_turn_anim    ;    = down right ***
    3008 00019e10 00000000!         .long   dnk_8_to_6_turn_anim    ;    = down left
    3009 00019e30 00000000!         .long   dnk_stand8_anim         ;    = up left
    3010                    
    3011                    
    3012 00019e50            SUBR dnk_leg_anims_table
    3013 00019e50 00000000!         .long   dnk_walk1_f2_anim       ;1 (UP)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   68

    3014 00019e70 00000000!         .long   dnk_walk1_f2_anim       ;2 (UP_RIGHT)
    3015 00019e90 00000000!         .long   dnk_walk1_f4_anim       ;3 (RIGHT)
    3016 00019eb0 00000000!         .long   dnk_walk1_f4_anim       ;4 (DOWN_RIGHT)
    3017 00019ed0 00000000!         .long   dnk_walk1_f4_anim       ;5 (DOWN)
    3018 00019ef0 00000000!         .long   dnk_walk1_f4_anim       ;6 (DOWN_LEFT)
    3019 00019f10 00000000!         .long   dnk_walk1_f2_anim       ;7 (LEFT)
    3020 00019f30 00000000!         .long   dnk_walk1_f2_anim       ;8 (UP-LEFT)
    3021                    
    3022 00019f50 00000000!         .long   dnk_walk2_f2_anim       ;1 (UP)
    3023 00019f70 00000000!         .long   dnk_walk2_f2_anim       ;2 (UP_RIGHT)
    3024 00019f90 00000000!         .long   dnk_walk2_f2_anim       ;3 (RIGHT)
    3025 00019fb0 00000000!         .long   dnk_walk2_f4_anim       ;4 (DOWN_RIGHT)
    3026 00019fd0 00000000!         .long   dnk_walk8_f4_anim       ;5 (DOWN)
    3027 00019ff0 00000000!         .long   dnk_walk8_f4_anim       ;6 (DOWN_LEFT)
    3028 0001a010 00000000!         .long   dnk_walk4_f2_anim       ;7 (LEFT)
    3029 0001a030 00000000!         .long   dnk_walk4_f2_anim       ;8 (UP-LEFT)
    3030                    
    3031 0001a050 00000000!         .long   dnk_walk2_f2_anim       ;1 (UP)
    3032 0001a070 00000000!         .long   dnk_walk2_f2_anim       ;2 (UP_RIGHT)
    3033 0001a090 00000000!         .long   dnk_walk2_f2_anim       ;3 (RIGHT)
    3034 0001a0b0 00000000!         .long   dnk_walk4_f4_anim       ;4 (DOWN_RIGHT)
    3035 0001a0d0 00000000!         .long   dnk_walk4_f4_anim       ;5 (DOWN)
    3036 0001a0f0 00000000!         .long   dnk_walk8_f4_anim       ;6 (DOWN_LEFT)
    3037 0001a110 00000000!         .long   dnk_walk6_f2_anim       ;7 (LEFT)
    3038 0001a130 00000000!         .long   dnk_walk6_f2_anim       ;8 (UP-LEFT)
    3039                    
    3040                    
    3041 0001a150 00000000!         .long   dnk_walk2_f2_anim       ;1 (UP)
    3042 0001a170 00000000!         .long   dnk_walk8_f2_anim       ;2 (UP_RIGHT)
    3043 0001a190 00000000!         .long   dnk_walk4_f4_anim       ;3 (RIGHT)
    3044 0001a1b0 00000000!         .long   dnk_walk4_f4_anim       ;4 (DOWN_RIGHT)
    3045 0001a1d0 00000000!         .long   dnk_walk2_f4_anim       ;5 (DOWN)
    3046 0001a1f0 00000000!         .long   dnk_walk6_f4_anim       ;6 (DOWN_LEFT)
    3047 0001a210 00000000!         .long   dnk_walk2_f2_anim       ;7 (LEFT)
    3048 0001a230 00000000!         .long   dnk_walk6_f2_anim       ;8 (UP-LEFT)
    3049                    
    3050 0001a250 00000000!         .long   dnk_walk5_f2_anim       ;1 (UP)
    3051 0001a270 00000000!         .long   dnk_walk5_f2_anim       ;2 (UP_RIGHT)
    3052 0001a290 00000000!         .long   dnk_walk5_f4_anim       ;3 (RIGHT)
    3053 0001a2b0 00000000!         .long   dnk_walk5_f4_anim       ;4 (DOWN_RIGHT)
    3054 0001a2d0 00000000!         .long   dnk_walk5_f4_anim       ;5 (DOWN)
    3055 0001a2f0 00000000!         .long   dnk_walk5_f4_anim       ;6 (DOWN_LEFT)
    3056 0001a310 00000000!         .long   dnk_walk5_f2_anim       ;7 (LEFT)
    3057 0001a330 00000000!         .long   dnk_walk5_f2_anim       ;8 (UP-LEFT)
    3058                    
    3059 0001a350 00000000!         .long   dnk_walk2_f2_anim       ;1 (UP)
    3060 0001a370 00000000!         .long   dnk_walk6_f2_anim       ;2 (UP_RIGHT)
    3061 0001a390 00000000!         .long   dnk_walk2_f2_anim       ;3 (RIGHT)
    3062 0001a3b0 00000000!         .long   dnk_walk6_f4_anim       ;4 (DOWN_RIGHT)
    3063 0001a3d0 00000000!         .long   dnk_walk2_f4_anim       ;5 (DOWN)
    3064 0001a3f0 00000000!         .long   dnk_walk4_f4_anim       ;6 (DOWN_LEFT)
    3065 0001a410 00000000!         .long   dnk_walk2_f2_anim       ;7 (LEFT)
    3066 0001a430 00000000!         .long   dnk_walk8_f2_anim       ;8 (UP-LEFT)
    3067                    
    3068 0001a450 00000000!         .long   dnk_walk2_f2_anim       ;1 (UP)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   69

    3069 0001a470 00000000!         .long   dnk_walk6_f2_anim       ;2 (UP_RIGHT)
    3070 0001a490 00000000!         .long   dnk_walk6_f2_anim       ;3 (RIGHT)
    3071 0001a4b0 00000000!         .long   dnk_walk8_f4_anim       ;4 (DOWN_RIGHT)
    3072 0001a4d0 00000000!         .long   dnk_walk4_f4_anim       ;5 (DOWN)
    3073 0001a4f0 00000000!         .long   dnk_walk4_f4_anim       ;6 (DOWN_LEFT)
    3074 0001a510 00000000!         .long   dnk_walk2_f2_anim       ;7 (LEFT)
    3075 0001a530 00000000!         .long   dnk_walk2_f2_anim       ;8 (UP-LEFT)
    3076                    
    3077 0001a550 00000000!         .long   dnk_walk2_f2_anim       ;1 (UP)
    3078 0001a570 00000000!         .long   dnk_walk4_f2_anim       ;2 (UP_RIGHT)
    3079 0001a590 00000000!         .long   dnk_walk6_f2_anim       ;3 (RIGHT)
    3080 0001a5b0 00000000!         .long   dnk_walk8_f4_anim       ;4 (DOWN_RIGHT)
    3081 0001a5d0 00000000!         .long   dnk_walk6_f4_anim       ;5 (DOWN)
    3082 0001a5f0 00000000!         .long   dnk_walk2_f4_anim       ;6 (DOWN_LEFT)
    3083 0001a610 00000000!         .long   dnk_walk2_f2_anim       ;7 (LEFT)
    3084 0001a630 00000000!         .long   dnk_walk2_f2_anim       ;8 (UP-LEFT)
    3085                    
    3086                    
    3087 0001a650            SUBR dnk_torso_anims_table
    3088 0001a650 00000000!         .long   dnk_torso2_anim         ;new = up right
    3089 0001a670 00000000!         .long   dnk_2_to_4_turn2_anim   ;    = down right
    3090 0001a690 00000000!         .long   dnk_2_to_6_turn2_anim   ;    = down left ***
    3091 0001a6b0 00000000!         .long   dnk_2_to_8_turn2_anim   ;    = up left
    3092                    
    3093 0001a6d0 00000000!         .long   dnk_4_to_2_turn2_anim   ;new = up right
    3094 0001a6f0 00000000!         .long   dnk_torso4_anim         ;    = down right
    3095 0001a710 00000000!         .long   dnk_4_to_6_turn2_anim   ;    = down left
    3096 0001a730 00000000!         .long   dnk_4_to_8_turn2_anim   ;    = up left ***
    3097                    
    3098 0001a750 00000000!         .long   dnk_6_to_2_turn2_anim   ;new = up right ***
    3099 0001a770 00000000!         .long   dnk_6_to_4_turn2_anim   ;    = down right
    3100 0001a790 00000000!         .long   dnk_torso6_anim         ;    = down left
    3101 0001a7b0 00000000!         .long   dnk_6_to_8_turn2_anim   ;    = up left
    3102                    
    3103 0001a7d0 00000000!         .long   dnk_8_to_2_turn2_anim   ;new = up right
    3104 0001a7f0 00000000!         .long   dnk_8_to_4_turn2_anim   ;    = down right ***
    3105 0001a810 00000000!         .long   dnk_8_to_6_turn2_anim   ;    = down left
    3106 0001a830 00000000!         .long   dnk_torso8_anim         ;    = up left
    3107                    
    3108                    
    3109                    
    3110                    
    3111                    
    3112                            .end

 No Errors,  No Warnings
