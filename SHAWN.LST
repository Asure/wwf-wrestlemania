TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Jamie Rivett
       4                    * Initiated:            5/18/94
       5                    *
       6                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    **************************************************************
       9                    
      10                            .file   "shawn.asm"
      12                            .width  132
      13                            .option b,d,l,t
      14                            .mnolist
      15                    
      16                    
      17                            .include        "macros.h"
      18                            .include        "mproc.equ"             ;Mproc equates
      19                            .include        "display.equ"           ;Display proc equates
      20                            .include        "gsp.equ"               ;Gsp asm equates
      21                            .include        "sys.equ"
      22                            .include        "game.equ"
      23                            .include        "plyr.equ"
      24                            .include        "anim.equ"
      25                            .include        "audit.equ"
      26                            .include        "sound.h"
      27                            .include        "ring.equ"
      28                            .include        "lifebar.h"
      29                            .include        "jjxm.h"
      30                            .include        "damage.equ"
      31                    
      32                    
      33                    ******************************************************************************
      34                    * EXTERNAL REFERENCES
      35                    
      36                            .ref    change_anim1a,change_anim2a,do_taunt
      37                            .ref    shn_2_hair_pickup_anim,bounce_off_ropes
      38                            .ref    check_secret_moves,ck_teammate_pin,raisearm_check
      39                            .ref    master_keep_attached,round_award,set_raisearm_bit
      40                            .ref    ck_ignore,climb_turnbuckle,execute_walk,get_opp_plyrmode
      41                            .ref    get_punch_dtime,get_opp_process,std_taunt,std_walk_fast
      42                            .ref    process_ptrs,form_button_value,keep_attached,change_anim1
      43                            .ref    change_anim2,halve_combo_meter,HALT
      44                            .ref    mode_inair2,mode_choking,mode_puppet
      45                            .ref    JUMP_ROPES,DO_REVERSAL,DO_REVERSAL_MESS
      46                            .ref    CHECK_COMBO_GO,FIND_AND_KILL_ENDLESS
      47                            .ref    CLIMB_ROPES,ADD_IF_SILENT,PCNT
      48                            .ref    get_powerk_dtime,drone_change_back
      49                    
      50                            .ref    BONUS_MESS,can_pin
      51                            .ref    blocking_off
      52                            .ref    hyper_speed_on
      53                            .ref    in_finish_move
      54                            .ref    p1rounds,p2rounds
      55                            .if NUM_SHAWN_FINISHES
      56                            .ref    shn_finish1_move
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .if NUM_SHAWN_FINISHES > 1
      58                            .ref    shn_finish2_move
      59                            .endif
      60                            .endif
      61                    
      62                    ******************************************************************************
      63                    * ANIMATION SEQUENCES
      64                    
      65                            .ref    shn_rpt_hdbutts_anim
      66                            .ref    shn_3_head_hold2_anim
      67                            .ref    shn_3_head_hold_anim
      68                            .ref    start_run_anim
      69                    
      70                            ;stands
      71                            .ref    shn_stand2_anim,shn_stand8_anim
      72                            .ref    shn_stand4_anim,shn_stand6_anim
      73                            .ref    shn_torso2_anim,shn_torso8_anim
      74                            .ref    shn_torso4_anim,shn_torso6_anim
      75                            .ref    shn_3_head_held_stand_anim
      76                    
      77                            ;turns
      78                            .ref    shn_2_to_4_turn_anim,shn_8_to_6_turn_anim       ;stand
      79                            .ref    shn_4_to_2_turn_anim,shn_6_to_8_turn_anim
      80                            .ref    shn_4_to_6_turn_anim,shn_6_to_4_turn_anim
      81                            .ref    shn_2_to_8_turn_anim,shn_8_to_2_turn_anim
      82                            .ref    shn_4_to_8_turn_anim,shn_6_to_2_turn_anim
      83                            .ref    shn_2_to_6_turn_anim,shn_8_to_4_turn_anim
      84                    
      85                            .ref    shn_2_to_4_turn2_anim,shn_8_to_6_turn2_anim     ;torso
      86                            .ref    shn_4_to_2_turn2_anim,shn_6_to_8_turn2_anim
      87                            .ref    shn_4_to_6_turn2_anim,shn_6_to_4_turn2_anim
      88                            .ref    shn_2_to_8_turn2_anim,shn_8_to_2_turn2_anim
      89                            .ref    shn_4_to_8_turn2_anim,shn_6_to_2_turn2_anim
      90                            .ref    shn_2_to_6_turn2_anim,shn_8_to_4_turn2_anim
      91                    
      92                            ;walks
      93                            .ref    shn_walk1_f2_anim,shn_walk2_f2_anim,shn_walk4_f2_anim
      94                            .ref    shn_walk5_f2_anim,shn_walk6_f2_anim,shn_walk8_f2_anim
      95                            .ref    shn_walk1_f4_anim,shn_walk2_f4_anim,shn_walk4_f4_anim
      96                            .ref    shn_walk5_f4_anim,shn_walk6_f4_anim,shn_walk8_f4_anim
      97                    
      98                            .ref    shn_run2_anim,shn_climb_down_anim,shn_climb_up_anim
      99                    
     100                            ;mundane attacks
     101                            .ref    shn_2_punch_anim,shn_4_punch_anim
     102                            .ref    shn_2_kick_anim,shn_4_kick_anim
     103                            .ref    shn_4_push_anim
     104                            .ref    shn_2_butt_anim,shn_4_butt_anim
     105                            .ref    shn_2_knee_anim,shn_4_knee_anim
     106                            .ref    shn_2_stomp_anim,shn_4_stomp_anim
     107                            .ref    shn_2_falling_punch_anim,shn_4_falling_punch_anim
     108                            .ref    shn_bstomp_anim,shn_belbow_anim
     109                            .ref    shn_flipslam_anim
     110                    
     111                            ;special attacks
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                            .ref    shn_4_hair_pickup_anim
     113                            .ref    shn_spinkick_anim,shn_flying_kick_anim
     114                            .ref    shn_gsuplex_anim,shn_run_stomp_anim
     115                            .ref    shn_2_raise_arm_anim,shn_4_raise_arm_anim
     116                            .ref    shn_super_speedkick_anim
     117                            .ref    shn_fstein_anim
     118                            .ref    shn_2_pin_anim,shn_4_pin_anim
     119                            .ref    shn_2_hiptoss_anim
     120                            .ref    shn_4_hiptoss_anim
     121                            .ref    shn_2_hiptoss2_anim
     122                            .ref    shn_4_hiptoss2_anim
     123                            .ref    shn_speed_spinkick_anim,shn_knee_fstein_anim
     124                            .ref    shn_sliding_kicktoss_anim,shn_break_arm_anim
     125                            .ref    shn_4_jump_kick_anim
     126                            .ref    shn_gsuplex_run_anim
     127                    
     128                    ;       .ref    shn_pkup_chair_anim
     129                            .ref    shn_2_slap_anim,shn_4_slap_anim
     130                            .ref    shn_4_pummel_anim,shn_2_pummel_anim
     131                    
     132                            ;reactions
     133                            .ref    shn_dizzy_anim,shn_fall_back_anim
     134                            .ref    shn_2_grabfling_anim,shn_4_grabfling_anim
     135                    
     136                            ;blocks
     137                            .ref    shn_4_block_anim
     138                    
     139                            ;combos
     140                            .ref    shn_combo_kick_anim,shn_combo_punch_anim
     141                            .ref    BLOCK_WOOSH
     142                    
     143                    ******************************************************************************
     144                    * SYMBOLS DEFINED IN THIS FILE
     145                    
     146                    ******************************************************************************
     147                    * EQUATES FOR THIS FILE
     148                    
     149                    *****************************************************************************
     150                    *
     151                    * special moves
     152                    *
     153                    
     154 00000000           shn_secret_moves
     155 00000000 00001890'         .long   wlsacharge_flying_kick  ;must have this one
     156 00000020 00000da0'         .long   wlsagrab_fling
     157 00000040 00000700'         .long   wlsahip_toss
     158 00000060 00000c10'         .long   wlsagrab_fling2
     159 00000080 00000c60'         .long   wlsahip_toss2
     160 000000a0 000014d0'         .long   wlsaneck_grab
     161 000000c0 00001e30'         .long   wlsafrankensteiner
     162 000000e0 000002e0'         .long   wlsajump_kick
     163 00000100 00000000          .long   0
     164                    
     165                    *****************************************************************************
     166                    *
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     167                    * SPECIAL MOVE PROCESSES
     168                    *
     169                    
     170 00000120            SUBR   shn_smove_table
     171 00000120 000094b0'         .long   shn_hdhold_combo2
     172 00000140 00008510'         .long   shn_hdhold_combo1
     173 00000160 000075e0'         .long   shn_charge_suplex
     174 00000180 00002260'         .long   shn_swirl_speedkick
     175 000001a0 00007b10'         .long   shn_sliding_kicktoss
     176 000001c0 00004970'         .long   shn_hdhold_suplex
     177 000001e0 00006080'         .long   shn_hdhold_frank
     178 00000200 000054f0'         .long   shn_hdhold_kicktoss
     179 00000220 00006c00'         .long   shn_hdhold_butts
     180 00000240 00003130'         .long   shn_flipslam            ;Can do from headhold also
     181 00000260 00003c70'         .long   shn_grab_toss_air
     182                    ;       .long   std_hdhold_anti_combo
     183 00000280 00000000!         .long   std_walk_fast
     184 000002a0 00000000!         .long   std_taunt
     185                    
     186                            .if NUM_SHAWN_FINISHES
     187                            .long   shn_finish_move1
     188                            .endif
     189                            .if NUM_SHAWN_FINISHES > 1
     190                            .long   shn_finish_move2
     191                            .endif
     192 000002c0 00000000          .long   0
     193                    
     194                    *******************************************************************************
     195                    
     196 000002e0           wlsajump_kick
     197 000002e0     0100          .word   B_SKICK,                J_ALL
     198 00000300     0004          .word   J_AWAY,                 J_REAL_LR | J_UP | J_DOWN
     199 00000320     0004          .word   J_AWAY,                 J_REAL_LR | J_UP | J_DOWN
     200 00000340     8020          .word   8000h | 32              ;max
     201 00000350 00000370'         .long   wlsascrt_flykick
     202                    
     203 00000370           wlsascrt_flykick
     204 00000370     b5a0          move    *a13(ANIMODE),a0
         00000380     0660  
     205 00000390     1fa0          btst    MODE_UNINT_BIT,a0
     206 000003a0     cb00          jrnz    wlsaout
         000003b0     0145  
     207                    
     208                    ;Don't do it when he is on ground
     209 000003c0     0d5f          calla   get_opp_plyrmode
         000003d0 00000000! 
     210 000003f0     0b40          cmpi    MODE_ONGROUND,a0
         00000400     fffb  
     211 00000410     ca00          jrz     wlsaout
         00000420     013e  
     212 00000430     0b40          cmpi    MODE_DEAD,a0
         00000440     fff6  
     213 00000450     ca00          jrz     wlsaout
         00000460     013a  
     214 00000470     0b40          cmpi    MODE_HEADHELD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

         00000480     ffec  
     215 00000490     ca00          jrz     wlsaout
         000004a0     0136  
     216 000004b0     0b40          cmpi    MODE_ATTACHED,a0
         000004c0     fffc  
     217 000004d0     ca00          jrz     wlsaout
         000004e0     0132  
     218                    
     219 000004f0     09e0          movi    shn_4_jump_kick_anim,a0
         00000500 00000000! 
     220 00000520     0d5f          calla   change_anim1a
         00000530 00000000! 
     221                    
     222 00000550                   WRSND   W_SHAWN,FLYKICK_T1,FLYKICK_T2
     223                    
     224 000006f0     0960          rets
     225                    
     226                    *******************************************************************************
     227                    
     228 00000700           wlsahip_toss
     229                    ;       .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     230                    ;       .word   8000h | 10              ;max
     231                    ;       .long   wlsascrt_hiptoss
     232                    
     233 00000700     0010          .word   B_PUNCH,                J_ALL
     234 00000720     0004          .word   J_AWAY,         J_REAL_LR
     235 00000740     0004          .word   J_AWAY,         J_REAL_LR
     236 00000760     8020          .word   8000h | 32              ;max
     237 00000770 00000790'         .long   wlsascrt_hiptoss
     238                    
     239                    
     240 00000790           wlsascrt_hiptoss
     241 00000790     b5a0          move    *a13(ANIMODE),a0
         000007a0     0660  
     242 000007b0     1fa0          btst    MODE_UNINT_BIT,a0
     243 000007c0     cb00          jrnz    wlsaout
         000007d0     0103  
     244                    
     245                    ;Don't do it when he is on ground
     246 000007e0     0d5f          calla   get_opp_plyrmode
         000007f0 00000000! 
     247 00000810     0b40          cmpi    MODE_ONGROUND,a0
         00000820     fffb  
     248 00000830     ca00          jrz     wlsaout
         00000840     00fc  
     249                    ;       cmpi    MODE_BLOCK,a0
     250                    ;       jrz     wlsaout
     251 00000850     0b40          cmpi    MODE_DEAD,a0
         00000860     fff6  
     252 00000870     ca00          jrz     wlsaout
         00000880     00f8  
     253 00000890     0b40          cmpi    MODE_HEADHELD,a0
         000008a0     ffec  
     254 000008b0     ca00          jrz     wlsaout
         000008c0     00f4  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

     255 000008d0     0b40          cmpi    MODE_INAIR,a0
         000008e0     fffd  
     256 000008f0     ca09          jrz     wlsadoit
     257 00000900     0b40          cmpi    MODE_INAIR2,a0
         00000910     ffea  
     258 00000920     ca06          jrz     wlsadoit
     259                    
     260 00000930     b5a0          move    *a13(CLOSEST_DIST),a0
         00000940     0360  
     261 00000950     0b40          cmpi    70h,a0
         00000960     ff8f  
     262 00000970     c700          jrgt    wlsaout
         00000980     00e8  
     263                    
     264 00000990           wlsadoit
     265 00000990                   FACE24  shn,hiptoss_anim
     266 00000a30     0d5f          calla   change_anim1a
         00000a40 00000000! 
     267                    
     268 00000a60                   WRSND   W_SHAWN,HIPTOSS_T1,PUNCH_T2
     269 00000c00     0960          rets
     270                    
     271                    *******************************************************************************
     272                    
     273 00000c10           wlsagrab_fling2
     274 00000c10     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     275 00000c30     800a          .word   8000h | 10              ;max
     276 00000c40 00000cb0'         .long   wlsascrt_grabfling2
     277                    
     278 00000c60           wlsahip_toss2
     279 00000c60     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     280 00000c80     800a          .word   8000h | 10              ;max
     281 00000c90 00000cb0'         .long   wlsascrt_grabfling2
     282                    
     283 00000cb0           wlsascrt_grabfling2
     284 00000cb0     b5a0          move    *a13(ANIMODE),a0
         00000cc0     0660  
     285 00000cd0     1fa0          btst    MODE_UNINT_BIT,a0
     286 00000ce0     cb00          jrnz    wlsaout
         00000cf0     00b1  
     287                    
     288                    ;If opponent is running, do a hip toss
     289 00000d00     0d5f          calla   get_opp_plyrmode
         00000d10 00000000! 
     290 00000d30     0b40          cmpi    MODE_BOUNCING,a0
         00000d40     fffa  
     291 00000d50     ca1b          jrz     wlsayes
     292 00000d60     0b40          cmpi    MODE_RUNNING,a0
         00000d70     fffe  
     293 00000d80     ca18          jrz     wlsayes
     294 00000d90     0960          rets
     295                    
     296                    *******************************************************************************
     297                    
     298 00000da0           wlsagrab_fling
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

     299                    ;       .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     300                    ;       .word   8000h | 10              ;max
     301                    ;       .long   wlsascrt_grabfling
     302                    
     303 00000da0     0040          .word   B_SPUNCH,               J_ALL
     304 00000dc0     0004          .word   J_AWAY,         J_REAL_LR
     305 00000de0     0004          .word   J_AWAY,         J_REAL_LR
     306 00000e00     8020          .word   8000h | 32              ;max
     307 00000e10 00000e30'         .long   wlsascrt_grabfling
     308                    
     309 00000e30           wlsascrt_grabfling
     310                    
     311                    ;Make this miss, rotate to missed opponent,
     312                    ;and stay rotated to flung opponent, also make
     313                    ;this work from both angles!
     314                    
     315 00000e30     b5a0          move    *a13(ANIMODE),a0
         00000e40     0660  
     316 00000e50     1fa0          btst    MODE_UNINT_BIT,a0
     317 00000e60     cb00          jrnz    wlsaout
         00000e70     0099  
     318                    
     319                    ;If opponent is running, do a hip toss
     320 00000e80     0d5f          calla   get_opp_plyrmode
         00000e90 00000000! 
     321 00000eb0     0b40          cmpi    MODE_BOUNCING,a0
         00000ec0     fffa  
     322 00000ed0     ca03          jrz     wlsayes
     323 00000ee0     0b40          cmpi    MODE_RUNNING,a0
         00000ef0     fffe  
     324 00000f00     cb28          jrnz    wlsanope
     325 00000f10           wlsayes
     326 00000f10                   FACE24  shn,hiptoss_anim
     327 00000fb0     0d5f          calla   change_anim1a
         00000fc0 00000000! 
     328                    
     329 00000fe0                   WRSND   W_SHAWN,GRABFLING_T1,PUNCH_T2
     330 00001180     0960          rets
     331                    
     332 00001190           wlsanope
     333                    ;Don't fling when he is on ground
     334 00001190     0d5f          calla   get_opp_plyrmode
         000011a0 00000000! 
     335 000011c0     0b40          cmpi    MODE_HEADHELD,a0
         000011d0     ffec  
     336 000011e0     ca62          jrz     wlsaout
     337 000011f0     0b40          cmpi    MODE_ONGROUND,a0
         00001200     fffb  
     338 00001210     ca5f          jrz     wlsaout
     339 00001220     0b40          cmpi    MODE_DEAD,a0
         00001230     fff6  
     340 00001240     ca5c          jrz     wlsaout
     341                    
     342                    ;       move    *a13(LAST_FLING_ATTEMPT),a14,L
     343                    ;       move    @PCNT,a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     344                    ;       sub     a14,a0
     345                    ;       cmpi    3*60,a0
     346                    ;       jrge    wlsaok2
     347                    ;
     348                    ;       FACE24  shn,slap_anim
     349                    ;       calla   change_anim1a
     350                    ;
     351                    ;       WRSND   W_SHAWN,SPUNCH_T1,SPUNCH_T2
     352                    ;       rets
     353                    ;
     354                    ;wlsaok2
     355                    ;       move    @PCNT,a14,L                     ;use 32-bit PCNT!
     356                    ;       move    a14,*a13(LAST_FLING_ATTEMPT),L
     357                    
     358 00001250                   FACE24  shn,grabfling_anim
     359 000012f0     0d5f          calla   change_anim1a
         00001300 00000000! 
     360                    
     361 00001320                   WRSND   W_SHAWN,GRABFLING_T1,PUNCH_T2
     362 000014c0     0960          rets
     363                    
     364                    *******************************************************************************
     365                    
     366 000014d0           wlsaneck_grab
     367 000014d0     0040          .word   B_SPUNCH,               J_ALL
     368 000014f0     0008          .word   J_TOWARD,               J_REAL_LR
     369 00001510     0008          .word   J_TOWARD,               J_REAL_LR
     370 00001530     8020          .word   8000h | 32              ;max
     371 00001540 00001560'         .long   wlsascrt_neck
     372                    
     373 00001560           wlsascrt_neck
     374 00001560     b5a0          move    *a13(ANIMODE),a0
         00001570     0660  
     375 00001580     1fa0          btst    MODE_UNINT_BIT,a0
     376 00001590     cb27          jrnz    wlsaout
     377                    
     378                    ;Don't do it when he is on ground
     379 000015a0     0d5f          calla   get_opp_plyrmode
         000015b0 00000000! 
     380 000015d0     0b40          cmpi    MODE_ONGROUND,a0
         000015e0     fffb  
     381 000015f0     ca21          jrz     wlsaout
     382 00001600     0b40          cmpi    MODE_DEAD,a0
         00001610     fff6  
     383 00001620     ca1e          jrz     wlsaout
     384 00001630     0b40          cmpi    MODE_HEADHELD,a0
         00001640     ffec  
     385 00001650     ca1b          jrz     wlsaout
     386                    
     387 00001660     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         00001670     0cd0  
     388 00001680     07a0          move    @PCNT,a0,L
         00001690 00000000! 
     389 000016b0     45c0          sub     a14,a0
     390 000016c0     0b40          cmpi    2*60,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

         000016d0     ff87  
     391 000016e0     c507          jrge    wlsaok2a
     392                    
     393                    ;This head grab is too close (in terms of time) to most recent grab
     394                            .ref    shn_3_fake_hold_anim
     395 000016f0     09e0          movi    shn_3_fake_hold_anim,a0
         00001700 00000000! 
     396 00001720     0d5f          calla   change_anim1a
         00001730 00000000! 
     397 00001750     0960          rets
     398                    
     399 00001760           wlsaok2a
     400 00001760     b5a1          move    *a13(CLOSEST_XDIST),a1
         00001770     0370  
     401 00001780     0b41          cmpi    90,a1
         00001790     ffa5  
     402 000017a0     c707          jrgt    wlsastd_grab
     403                    
     404 000017b0     09e0          movi    shn_3_head_hold2_anim,a0
         000017c0 00000000! 
     405 000017e0     0d5f          calla   change_anim1a
         000017f0 00000000! 
     406 00001810     0960  wlsaout rets
     407                    
     408 00001820           wlsastd_grab
     409 00001820     09e0          movi    shn_3_head_hold_anim,a0
         00001830 00000000! 
     410 00001850     0d5f          calla   change_anim1a
         00001860 00000000! 
     411 00001880     0960          rets
     412                    
     413                    *******************************************************************************
     414                    
     415 00001890           wlsacharge_flying_kick
     416 00001890     b5a0          move    *a13(BUT_VAL_UP),a0
         000018a0     0bb0  
     417 000018b0     1f60          btst    PLAYER_SKICK_BIT,a0
     418 000018c0     ca0c          jrz     wlsano_kick
     419                    
     420 000018d0     b5a0          move    *a13(PLYRNUM),a0
         000018e0     0580  
     421 000018f0     0d5f          calla   get_powerk_dtime
         00001900 00000000! 
     422 00001920     0b40          cmpi    85,a0                   ;> min?
         00001930     ffaa  
     423 00001940     c404          jrlt    wlsano_kick
     424                    
     425 00001950     0d3f          callr   wlsascrt_kick
         00001960     0004  
     426 00001970     0de0          setc
     427 00001980     0960          rets
     428                    
     429 00001990           wlsano_kick
     430 00001990     0320          clrc
     431 000019a0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     432                    
     433 000019b0           wlsascrt_kick
     434                    
     435 000019b0     b5a0          move    *a13(PLYRMODE),a0
         000019c0     05c0  
     436 000019d0     0b40          cmpi    MODE_HEADHELD,a0
         000019e0     ffec  
     437 000019f0     cae1          jrz     wlsaout
     438 00001a00     0b40          cmpi    MODE_HEADHOLD,a0
         00001a10     ffef  
     439 00001a20     cade          jrz     wlsaout
     440                    
     441 00001a30     b5a0          move    *a13(ANIMODE),a0
         00001a40     0660  
     442 00001a50     1fa0          btst    MODE_UNINT_BIT,a0
     443 00001a60     cbda          jrnz    wlsaout
     444                    
     445                            .ref    ck_ignore
     446 00001a70     0d5f          calla   ck_ignore
         00001a80 00000000! 
     447 00001aa0     c8d6          jrc     wlsaout
     448                    
     449                    ;Don't do it when he is on ground
     450 00001ab0     0d5f          calla   get_opp_plyrmode
         00001ac0 00000000! 
     451 00001ae0     0b40          cmpi    MODE_ONGROUND,a0
         00001af0     fffb  
     452 00001b00     cad0          jrz     wlsaout
     453 00001b10     0b40          cmpi    MODE_DEAD,a0
         00001b20     fff6  
     454 00001b30     cacd          jrz     wlsaout
     455                    
     456 00001b40           wlsaok
     457                    
     458 00001b40                   SETMODE INAIR
     459                    
     460 00001bf0     1820          movk    1,a0                    ;Ensure leap at
     461 00001c00     b208          move    a0,*a8(OBJ_XVEL),L
         00001c10     02d0  
     462                    
     463 00001c20     09e0          movi    shn_flying_kick_anim,a0
         00001c30 00000000! 
     464 00001c50     0d5f          calla   change_anim1a
         00001c60 00000000! 
     465                    
     466                    
     467 00001c80                   WRSND   W_SHAWN,FLYKICK_T1,FLYKICK_T2
     468                    
     469 00001e20     0960          rets
     470                    
     471                    *******************************************************************************
     472                    
     473 00001e30           wlsafrankensteiner
     474 00001e30     0100          .word   B_SKICK,                J_ALL
     475 00001e50     0008          .word   J_TOWARD,               J_REAL_LR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     476 00001e70     0008          .word   J_TOWARD,               J_REAL_LR
     477 00001e90     8020          .word   8000h | 32              ;max
     478 00001ea0 00001ec0'         .long   wlsascrt_fstein
     479                    
     480 00001ec0           wlsascrt_fstein
     481 00001ec0     b5a0          move    *a13(ANIMODE),a0
         00001ed0     0660  
     482 00001ee0     1fa0          btst    MODE_UNINT_BIT,a0
     483 00001ef0     cb35          jrnz    wlsarets
     484 00001f00     b5a0          move    *a13(PLYRMODE),a0
         00001f10     05c0  
     485 00001f20     0b40          CMPI    MODE_HEADHOLD,a0
         00001f30     ffef  
     486 00001f40     ca30          jrz     wlsarets
     487                    
     488                    ;no frankensteiner if opponent is on the ground
     489 00001f50     0d5f          calla   get_opp_plyrmode
         00001f60 00000000! 
     490 00001f80     0b40          cmpi    MODE_ONGROUND,a0
         00001f90     fffb  
     491 00001fa0     ca2a          jreq    wlsarets
     492 00001fb0     0b40          cmpi    MODE_DEAD,a0
         00001fc0     fff6  
     493 00001fd0     ca27          jreq    wlsarets
     494                    
     495                            ;don't do it if opponent is behind you
     496 00001fe0     0d5f          calla   ck_ignore
         00001ff0 00000000! 
     497 00002010     c823          jrc     wlsarets
     498                            
     499 00002020     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00002030 00000000! 
     500 00002050     09e0          movi    shn_fstein_anim,a0
         00002060 00000000! 
     501 00002080     0d5f          calla   change_anim1a
         00002090 00000000! 
     502 000020b0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
     503 00002250     0960  wlsarets        rets
     504                    
     505                            .if NUM_SHAWN_FINISHES
     506                    ******************************************************************************
     507                     SUBRP  shn_finish_move1
     508                    
     509                    baxnTIMEOUT     .equ    TSEC
     510                    
     511                    baxnend_wait
     512                            SLEEP           TSEC/4
     513                            move            @p1rounds,a0                    ; Get player 1 rounds
     514                            move            @p2rounds,a1                    ; Get player 2 rounds
     515                            or              a1,a0                           ; Put em together
     516                            cmpi            2,a0                            ; Anybody got 2?
     517                            jrlt            baxnend_wait                    ; br = no
     518                    
     519                    baxnreset
     520                            clr             a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

     521                            move            a11,@in_finish_move
     522                            SLEEPK          1
     523                            WAITSWITCH_DWN  J_UP,0,baxnreset
     524                            movi            baxnTIMEOUT,a11
     525                            move            a11,@in_finish_move
     526                            WAITSWITCH_DWN  J_DOWN,0,baxnreset
     527                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,baxnreset
     528                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,baxnreset
     529                            WAITSWITCH_DWN  B_PUNCH,J_ALL,baxnreset
     530                    
     531                            movi            shn_finish1_move,a0
     532                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     533                            DIE
     534                            .endif
     535                            
     536                    
     537                            .if NUM_SHAWN_FINISHES > 1
     538                    ******************************************************************************
     539                     SUBRP  shn_finish_move2
     540                    
     541                    fihwTIMEOUT     .equ    TSEC
     542                    
     543                    fihwend_wait
     544                            SLEEP           TSEC/4
     545                            move            @p1rounds,a0                    ; Get player 1 rounds
     546                            move            @p2rounds,a1                    ; Get player 2 rounds
     547                            or              a1,a0                           ; Put em together
     548                            cmpi            2,a0                            ; Anybody got 2?
     549                            jrlt            fihwend_wait                    ; br = no
     550                    
     551                    fihwreset
     552                            clr             a11
     553                            move            a11,@in_finish_move
     554                            SLEEPK          1
     555                            WAITSWITCH_DWN  J_UP,0,fihwreset
     556                            movi            fihwTIMEOUT,a11
     557                            move            a11,@in_finish_move
     558                            WAITSWITCH_DWN  J_UP,0,fihwreset
     559                            WAITSWITCH_DWN  J_RIGHT,J_UP,fihwreset
     560                            WAITSWITCH_DWN  J_RIGHT,J_UP,fihwreset
     561                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,fihwreset
     562                    
     563                            movi            shn_finish2_move,a0
     564                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     565                            DIE
     566                            .endif
     567                    
     568                    
     569                    *******************************************************************************
     570 00002260           shn_swirl_speedkick
     571                    
     572              003c  smqyTIMEOUT     .equ    60
     573                    
     574 00002260           smqylp0
     575 00002260                   SLEEPK  1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     576 000022a0           smqylp
     577 000022a0     b500          move    *a8(GETUP_TIME),a0
         000022b0     0460  
     578 000022c0     cbf9          jrnz    smqylp0
     579 000022d0     576b          clr     a11
     580                    
     581 000022e0                   WAITSWITCH_DWN  J_DOWN,0,smqylp
     582                    
     583 00002440     09cb          movi    smqyTIMEOUT,a11
         00002450     003c  
     584                    ;       WAITSWITCH_DWN  J_DOWN_TOWARD,0,smqylp
     585 00002460                   WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,smqylp
     586 000025c0                   WAITSWITCH_DWN  B_KICK,J_ALL,smqylp
     587                    
     588 00002720     b500          move    *a8(ANIMODE),a0
         00002730     0660  
     589 00002740     1fa0          btst    MODE_UNINT_BIT,a0
     590 00002750     cbb0          jrnz    smqylp0
     591                    
     592 00002760     b500          move    *a8(PLYRMODE),a0
         00002770     05c0  
     593 00002780     0b40          cmpi    MODE_DEAD,a0
         00002790     fff6  
     594 000027a0     caab          jrz     smqylp0
     595 000027b0     0b40          cmpi    MODE_HEADHOLD,a0
         000027c0     ffef  
     596 000027d0     ca44          jrz     smqyknee
     597 000027e0     0b40          cmpi    MODE_HEADHELD,a0
         000027f0     ffec  
     598 00002800     cb16          jrnz    smqyslam
     599 00002810     b50e          move    *a8(I_WILL_DIE),a14
         00002820     0b30  
     600 00002830     cba2          jrnz    smqylp0
     601                    
     602 00002840     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002850     0ae0  
     603 00002860     cb9f          jrnz    smqylp0                         ;ignore
     604                    
     605 00002870     0d5f          CALLA   DO_REVERSAL
         00002880 00000000! 
     606 000028a0     0d5f          CALLA   DO_REVERSAL_MESS
         000028b0 00000000! 
     607                    
     608                            ;target WHOHITME -- don't hit anyone else
     609 000028d0                   SMRTTGT a8,WHOHITME
     610                    
     611                    ;       ;immobilize WHOHITME
     612                    ;       move    *a8(WHOHITME),a0,L
     613                    ;       jruc    smqyis_reversal
     614                    
     615 00002970           smqyslam
     616 00002970     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002980     0ae0  
     617 00002990     cb8c          jrnz    smqylp0                         ;ignore
     618                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

     619                    ;       movk    6,a10
     620                    ;       CREATE  MESSAGE_PID,BONUS_MESS
     621                    
     622                    ;       ;target WHOIHIT -- don't hit anyone else
     623                    ;       SMRTTGT a8,WHOIHIT
     624                    
     625                    ;       ;immobilize WHOIHIT
     626                    ;       move    *a8(WHOIHIT),a0,L
     627                    
     628 000029a0           smqyis_reversal
     629                    ;       movk    15,a14
     630                    ;       move    a14,*a0(IMMOBILIZE_TIME)
     631                    
     632 000029a0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000029b0 00000000! 
     633                    
     634 000029d0     09ee          movi    shn_super_speedkick_anim,a14
         000029e0 00000000! 
     635 00002a00     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00002a10     0930  
     636 00002a20                   WRSND   W_SHAWN,KICK_T1,KICK_T2
     637 00002bc0                   SLEEPK  20
     638 00002c00     c000          jruc    smqylp
         00002c10     ff68  
     639                    
     640 00002c20           smqyknee
     641 00002c20     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00002c30 00000000! 
     642 00002c50     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00002c60     0ae0  
     643 00002c70     cb00          jrnz    smqylp0                         ;ignore
         00002c80     ff5d  
     644                    
     645                    ;       move    *a8(WHOHITME),a14,L
     646                    ;       movk    15,a0
     647                    ;       move    a0,*a14(IMMOBILIZE_TIME)
     648                    
     649                    
     650 00002c90     b700          move    *a8(WHOIHIT),a0,L
         00002ca0     0500  
     651 00002cb0     09ce          movi    6*60,a14
         00002cc0     0168  
     652 00002cd0     b1c0          move    a14,*a0(DELAY_METER)
         00002ce0     0ad0  
     653                    
     654 00002cf0                   SPCDMG  D_FLYKICK/2,20
     655                    
     656 00002da0     09ee          movi    shn_flying_kick_anim,a14
         00002db0 00000000! 
     657 00002dd0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00002de0     0930  
     658                    
     659 00002df0                   SETMODE INAIR
     660                    
     661                    ;       movi    1000h,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

     662                    ;       move    a0,*a13(OBJ_XVEL),L
     663                    ;       movi    1000h,a0
     664                    ;       move    a0,*a8(OBJ_XVEL),L
     665                    ;       movi    1000h,a0
     666                    ;       move    a0,*a13(OBJ_XVEL),L
     667                    
     668 00002ea0                   WRSND   W_SHAWN,FLYKICK_T1,FLYKICK_T2
     669 00003040                   SLEEPK  5
     670 00003080     09e0          movi    40000h,a0
         00003090 00040000  
     671 000030b0     b208          move    a0,*a8(OBJ_YVEL),L
         000030c0     02f0  
     672 000030d0                   SLEEPK  20
     673 00003110     c000          jruc    smqylp
         00003120     ff17  
     674                    
     675                    ; 
     676                    ;*******************************************************************************
     677                    ;
     678                    ;       STRUCTPD
     679                    ;       WORD            smqyCHARGE_TIME ;UDW
     680                    ;       WORD            smqyTIMEOUT     ;UDW
     681                    ;
     682                    ;shn_charge_speedkick
     683                    ;
     684                    ;smqystart_over
     685                    ;       ;charge on stick away
     686                    ;       clr     a14
     687                    ;       move    a14,*a13(smqyCHARGE_TIME),W
     688                    ;smqyloop1
     689                    ;       SLEEPK  1
     690                    ;
     691                    ;       move    *a13(smqyCHARGE_TIME),a14,W
     692                    ;       inc     a14
     693                    ;       move    a14,*a13(smqyCHARGE_TIME),W
     694                    ;       move    *a8(STICK_VAL_CUR),a0
     695                    ;
     696                    ;;Arbitrarily define TOWARD to be RIGHT.  So if the opponent is to
     697                    ;;our left, flip the L|R direction bits...
     698                    ;
     699                    ;;However, if the stick isn't pointed left or right, don't do
     700                    ;;anything.
     701                    ;       move    a0,a14
     702                    ;       andi    MOVE_LEFT|MOVE_RIGHT,a14
     703                    ;       jrz     smqyno_flip
     704                    ;
     705                    ;       move    *a8(NEW_FACING_DIR),a14
     706                    ;       btst    MOVE_LEFT_BIT,a14
     707                    ;       jrz     smqyno_flip
     708                    ;       xori    MOVE_LEFT|MOVE_RIGHT,a0
     709                    ;smqyno_flip
     710                    ;
     711                    ;;If we're still holding away, jump back to smqyloop1
     712                    ;       btst    MOVE_LEFT_BIT,a0
     713                    ;       jrnz    smqyloop1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     714                    ;
     715                    ;;No longer holding away...
     716                    ;       move    *a13(smqyCHARGE_TIME),a14
     717                    ;       cmpi    45,a14
     718                    ;       jrlt    smqystart_over
     719                    ;
     720                    ;;Okay, they released after holding away for 2 seconds.  Give them
     721                    ;;Half a second to push forward + super_kick
     722                    ;
     723                    ;       movk    25,a14
     724                    ;       move    a14,*a13(smqyTIMEOUT)
     725                    ;smqyloop2
     726                    ;       SLEEPK  1
     727                    ;
     728                    ;       move    *a8(BUT_VAL_DOWN),a0
     729                    ;       jrnz    smqypress
     730                    ;
     731                    ;       move    *a13(smqyTIMEOUT),a14
     732                    ;       dec     a14
     733                    ;       jrz     smqystart_over
     734                    ;       move    a14,*a13(smqyTIMEOUT)
     735                    ;       jruc    smqyloop2
     736                    ;
     737                    ;smqypress
     738                    ;;We have a button press.  Is it kick?
     739                    ;       btst    PLAYER_KICK_BIT,a0
     740                    ;       jrz     smqystart_over  ;wrong button.  No good.
     741                    ;
     742                    ;;Check for a towards on the stick.
     743                    ;       move    *a8(STICK_VAL_CUR),a0
     744                    ;       jrz     smqystart_over  ;no stick at all.  No good.
     745                    ;
     746                    ;       move    *a8(NEW_FACING_DIR),a14
     747                    ;       btst    MOVE_LEFT_BIT,a14
     748                    ;       jrz     smqyno_flip2
     749                    ;       xori    MOVE_LEFT|MOVE_RIGHT,a0
     750                    ;smqyno_flip2
     751                    ;       btst    MOVE_RIGHT_BIT,a0
     752                    ;       jrz     smqystart_over  ;pooched it
     753                    ;
     754                    ;;Don't do it when he is on ground
     755                    ;       SWAP    a8,a13
     756                    ;       calla   get_opp_plyrmode
     757                    ;       SWAP    a8,a13
     758                    ;;Don't do it when he is on ground
     759                    ;       cmpi    MODE_ONGROUND,a0
     760                    ;       jrz     smqystart_over
     761                    ;       cmpi    MODE_DEAD,a0
     762                    ;       jrz     smqystart_over
     763                    ;
     764                    ;;Success!  Check for the UNINT bit, then queue it up.
     765                    ;       move    *a8(ANIMODE),a14
     766                    ;       btst    MODE_UNINT_BIT,a14
     767                    ;       jrnz    smqystart_over
     768                    ;
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

     769                    ;       movi    shn_super_speedkick_anim,a14
     770                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
     771                    ;
     772                    ;       WRSND   W_SHAWN,KICK_T1,KICK_T2
     773                    ;
     774                    ;       jruc    smqystart_over
     775                    
     776                    *******************************************************************************
     777 00003130           shn_flipslam
     778                    ;Can do from head hold also!
     779                    
     780              001e  zcutTIMEOUT     .equ    30
     781                    
     782 00003130           zcutlp0
     783 00003130                   SLEEPK  1
     784 00003170           zcutlp
     785 00003170     b500          move    *a8(GETUP_TIME),a0
         00003180     0460  
     786 00003190     cbf9          jrnz    zcutlp0
     787                    
     788 000031a0     576b          clr     a11
     789                    
     790 000031b0                   WAITSWITCH_DWN  J_UP,0,zcutlp
     791                    
     792 00003310     1bcb          movk    zcutTIMEOUT,a11
     793                    
     794                    ;       WAITSWITCH_DWN  J_UP_TOWARD,0,zcutlp
     795 00003320                   WAITSWITCH_DWN  J_TOWARD,0,zcutlp
     796 00003480                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,zcutlp
     797                    
     798 000035e0     b500          move    *a8(ANIMODE),a0
         000035f0     0660  
     799 00003600     1fa0          btst    MODE_UNINT_BIT,a0
     800 00003610     cbb5          jrnz    zcutlp
     801                    
     802 00003620     b500          move    *a8(PLYRMODE),a0
         00003630     05c0  
     803 00003640     0b40          cmpi    MODE_HEADHELD,a0
         00003650     ffec  
     804 00003660     cb19          jrnz    zcutslam
     805 00003670     b50e          move    *a8(I_WILL_DIE),A14
         00003680     0b30  
     806 00003690     cba9          jrnz    zcutlp0
     807                    
     808 000036a0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000036b0     0ae0  
     809 000036c0     cba6          jrnz    zcutlp0                         ;ignore
     810                    
     811 000036d0     0d5f          CALLA   DO_REVERSAL
         000036e0 00000000! 
     812 00003700     0d5f          CALLA   DO_REVERSAL_MESS
         00003710 00000000! 
     813                    
     814                            ;target WHOHITME -- don't hit anyone else
     815 00003730                   SMRTTGT a8,WHOHITME
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     816                    
     817                            ;immobilize WHOHITME
     818 000037d0     b700          move    *a8(WHOHITME),a0,L
         000037e0     04e0  
     819 000037f0     c01c          jruc    zcutis_reversal
     820                    
     821 00003800           zcutslam
     822 00003800     0b40          cmpi    MODE_HEADHOLD,a0
         00003810     ffef  
     823 00003820     cb1f          jrnz    zcutslam2
     824 00003830     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003840     0ae0  
     825 00003850     cb8d          jrnz    zcutlp0                         ;ignore
     826                    
     827 00003860     09ca          movi    39,a10
         00003870     0027  
     828 00003880                   CREATE  MESSAGE_PID,BONUS_MESS
     829                    
     830                            ;target WHOIHIT -- don't hit anyone else
     831 00003900                   SMRTTGT a8,WHOIHIT
     832                    
     833                            ;immobilize WHOIHIT
     834 000039a0     b700          move    *a8(WHOIHIT),a0,L
         000039b0     0500  
     835                    
     836 000039c0           zcutis_reversal
     837 000039c0     19ee          movk    15,a14
     838 000039d0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000039e0     0ae0  
     839                    
     840 000039f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00003a00 00000000! 
     841 00003a20           zcutslam2
     842 00003a20     09ee          movi    shn_flipslam_anim,a14
         00003a30 00000000! 
     843 00003a50     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003a60     0930  
     844 00003a70                   WRSND   W_SHAWN,KICK_T1,KICK_T2
     845                    
     846 00003c10                   SLEEPK  20
     847                    
     848 00003c50     c000          jruc    zcutlp
         00003c60     ff50  
     849                    
     850                    *******************************************************************************
     851                    *
     852                    
     853 00003c70           shn_grab_toss_air
     854                    
     855              0028  mqjpTIMEOUT     .equ    40
     856                    
     857 00003c70           mqjplp0
     858 00003c70                   SLEEPK  1
     859 00003cb0           mqjplp
     860 00003cb0     576b          clr     a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     861                    
     862 00003cc0                   WAITSWITCH_DWN  J_AWAY,0,mqjplp
     863                    
     864 00003e20     09cb          movi    mqjpTIMEOUT,a11
         00003e30     0028  
     865                    
     866 00003e40                   WAITSWITCH_DWN  J_AWAY,0,mqjplp
     867                    ;       WAITSWITCH_DWN  B_PUNCH,J_DOWN_AWAY|J_UP_AWAY,mqjplp
     868 00003fa0                   WAITSWITCH_DWN  B_PUNCH,J_ALL,mqjplp
     869                    
     870 00004100     b500          move    *a8(ANIMODE),a0
         00004110     0660  
     871 00004120     1fa0          btst    MODE_UNINT_BIT,a0
     872 00004130     cbb7          jrnz    mqjplp
     873                    
     874 00004140     b500          move    *a8(PLYRMODE),a0
         00004150     05c0  
     875 00004160     0b40          cmpi    MODE_HEADHOLD,a0
         00004170     ffef  
     876 00004180     caae          jreq    mqjplp0
     877                    
     878                    ;Don't do it when he is on ground
     879 00004190                   SWAP    a8,a13
     880 000041c0     0d5f          calla   get_opp_plyrmode
         000041d0 00000000! 
     881 000041f0                   SWAP    a8,a13
     882                    ;Don't do it when he is on ground
     883 00004220     0b40          cmpi    MODE_ONGROUND,a0
         00004230     fffb  
     884 00004240     caa6          jrz     mqjplp
     885 00004250     0b40          cmpi    MODE_DEAD,a0
         00004260     fff6  
     886 00004270     caa3          jrz     mqjplp
     887 00004280     0b40          cmpi    MODE_INAIR,a0
         00004290     fffd  
     888 000042a0     ca40          jrz     mqjpdoit2
     889 000042b0     0b40          cmpi    MODE_INAIR2,a0
         000042c0     ffea  
     890 000042d0     ca3d          jrz     mqjpdoit2
     891                    
     892 000042e0     b500          move    *a8(CLOSEST_NUM),a0
         000042f0     03a0  
     893 00004300                   X32     a0
     894 00004310     0b20          addi    process_ptrs,a0
         00004320 00000000! 
     895 00004340     8600          move    *a0,a0,L
     896 00004350     b400          move    *a0(ATTACK_TYPE),a0
         00004360     05e0  
     897 00004370     0b40          cmpi    AT_LEAPING,a0
         00004380     ffc6  
     898 00004390     ca31          jrz     mqjpdoit2
     899                    
     900 000043a0     b500          move    *a8(CLOSEST_DIST),a0
         000043b0     0360  
     901 000043c0     0b40          cmpi    6ch,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

         000043d0     ff93  
     902 000043e0     c78c          jrgt    mqjplp
     903                    
     904 000043f0                   FACE24  shn,hiptoss_anim
     905 00004490     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         000044a0     0930  
     906                    
     907 000044b0                   WRSND   W_SHAWN,HIPTOSS_T1,PUNCH_T2
     908                    
     909 00004650                   SLEEPK  20
     910                    
     911 00004690     c000          jruc    mqjplp
         000046a0     ff60  
     912                    
     913 000046b0           mqjpdoit2       FACE24  shn,hiptoss2_anim
     914 00004750     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00004760     0930  
     915                    
     916 00004770                   WRSND   W_SHAWN,HIPTOSS_T1,PUNCH_T2
     917                    
     918 00004910                   SLEEPK  20
     919                    
     920 00004950     c000          jruc    mqjplp
         00004960     ff34  
     921                    
     922                    *******************************************************************************
     923 00004970           shn_hdhold_suplex
     924                    
     925              003c  toguTIMEOUT     .equ    60
     926                    
     927 00004970           togulp0
     928 00004970                   SLEEPK  1
     929 000049b0           togulp
     930 000049b0     b500          move    *a8(GETUP_TIME),a0
         000049c0     0460  
     931 000049d0     cbf9          jrnz    togulp0
     932                    
     933 000049e0     b500          move    *a8(PLYRMODE),a0
         000049f0     05c0  
     934 00004a00     0b40          cmpi    MODE_HEADHOLD,a0
         00004a10     ffef  
     935 00004a20     ca03          jrz     togucont
     936 00004a30     0b40          cmpi    MODE_HEADHELD,a0
         00004a40     ffec  
     937 00004a50     cbf1          jrnz    togulp0
     938                    
     939 00004a60           togucont
     940 00004a60     576b          clr     a11
     941                    
     942                    ;       WAITSWITCH_DWN  J_UP,0,togulp
     943 00004a70                   WAITSWITCH_DWN  J_DOWN,0,togulp
     944                    
     945 00004bd0     09cb          movi    toguTIMEOUT,a11
         00004be0     003c  
     946                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     947 00004bf0                   WAITSWITCH_DWN  J_DOWN,0,togulp
     948 00004d50                   WAITSWITCH_DWN  B_SKICK,J_ALL,togulp
     949 00004eb0           togucontz
     950 00004eb0     b500          move    *a8(PLYRMODE),a0
         00004ec0     05c0  
     951 00004ed0     0b40          cmpi    MODE_HEADHOLD,a0
         00004ee0     ffef  
     952 00004ef0     ca1c          jrz     toguslam
     953 00004f00     0b40          cmpi    MODE_HEADHELD,a0
         00004f10     ffec  
     954 00004f20     cba4          jrnz    togulp0
     955 00004f30     b50e          move    *a8(I_WILL_DIE),A14
         00004f40     0b30  
     956 00004f50     cba1          jrnz    togulp0
     957                    
     958 00004f60     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004f70     0ae0  
     959 00004f80     cb9e          jrnz    togulp0                         ;ignore
     960                    
     961 00004f90     0d5f          CALLA   DO_REVERSAL
         00004fa0 00000000! 
     962 00004fc0     0d5f          CALLA   DO_REVERSAL_MESS
         00004fd0 00000000! 
     963                    
     964                            ;target WHOHITME -- don't hit anyone else
     965 00004ff0                   SMRTTGT a8,WHOHITME
     966                    
     967                            ;immobilize WHOHITME
     968 00005090     b700          move    *a8(WHOHITME),a0,L
         000050a0     04e0  
     969 000050b0     c018          jruc    toguis_reversal
     970                    
     971 000050c0           toguslam
     972 000050c0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000050d0     0ae0  
     973 000050e0     cb88          jrnz    togulp0                         ;ignore
     974                    
     975                    ;fix ! wrong name - jake
     976 000050f0     182a          movk    1,a10
     977 00005100                   CREATE  MESSAGE_PID,BONUS_MESS
     978                    
     979                            ;target WHOIHIT -- don't hit anyone else
     980 00005180                   SMRTTGT a8,WHOIHIT
     981                    
     982                            ;immobilize WHOIHIT
     983 00005220     b700          move    *a8(WHOIHIT),a0,L
         00005230     0500  
     984                    
     985 00005240           toguis_reversal
     986 00005240     19ee          movk    15,a14
     987 00005250     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00005260     0ae0  
     988                    
     989 00005270     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005280 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     990                    
     991 000052a0     09ee          movi    shn_gsuplex_anim,a14
         000052b0 00000000! 
     992 000052d0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000052e0     0930  
     993 000052f0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
     994                    
     995 00005490                   SLEEPK  20
     996                    
     997 000054d0     c000          jruc    togulp
         000054e0     ff4c  
     998                    
     999                    *******************************************************************************
    1000 000054f0           shn_hdhold_kicktoss
    1001                    
    1002              003c  gfxjTIMEOUT     .equ    60
    1003                    
    1004 000054f0           gfxjlp0
    1005 000054f0                   SLEEPK  1
    1006 00005530           gfxjlp
    1007 00005530     b500          move    *a8(GETUP_TIME),a0
         00005540     0460  
    1008 00005550     cbf9          jrnz    gfxjlp0
    1009 00005560     b500          move    *a8(PLYRMODE),a0
         00005570     05c0  
    1010 00005580     0b40          cmpi    MODE_HEADHOLD,a0
         00005590     ffef  
    1011 000055a0     ca03          jrz     gfxjcont
    1012 000055b0     0b40          cmpi    MODE_HEADHELD,a0
         000055c0     ffec  
    1013 000055d0     cbf1          jrnz    gfxjlp0
    1014 000055e0           gfxjcont
    1015 000055e0     576b          clr     a11
    1016                    
    1017                    ;       WAITSWITCH_DWN  J_AWAY,0,gfxjlp
    1018 000055f0                   WAITSWITCH_DWN  J_TOWARD,0,gfxjlp
    1019                    
    1020 00005750     09cb          movi    gfxjTIMEOUT,a11
         00005760     003c  
    1021                    
    1022 00005770                   WAITSWITCH_DWN  J_TOWARD,0,gfxjlp
    1023 000058d0                   WAITSWITCH_DWN  B_KICK,J_ALL,gfxjlp
    1024                    
    1025 00005a30     b500          move    *a8(PLYRMODE),a0
         00005a40     05c0  
    1026 00005a50     0b40          cmpi    MODE_HEADHOLD,a0
         00005a60     ffef  
    1027 00005a70     ca1c          jrz     gfxjslam
    1028 00005a80     0b40          cmpi    MODE_HEADHELD,a0
         00005a90     ffec  
    1029 00005aa0     cba4          jrnz    gfxjlp0
    1030 00005ab0     b50e          move    *a8(I_WILL_DIE),A14
         00005ac0     0b30  
    1031 00005ad0     cba1          jrnz    gfxjlp0
    1032                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

    1033 00005ae0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00005af0     0ae0  
    1034 00005b00     cb9e          jrnz    gfxjlp0                         ;ignore
    1035                    
    1036 00005b10     0d5f          CALLA   DO_REVERSAL
         00005b20 00000000! 
    1037 00005b40     0d5f          CALLA   DO_REVERSAL_MESS
         00005b50 00000000! 
    1038                    
    1039                            ;target WHOHITME -- don't hit anyone else
    1040 00005b70                   SMRTTGT a8,WHOHITME
    1041                    
    1042                            ;immobilize WHOHITME
    1043 00005c10     b700          move    *a8(WHOHITME),a0,L
         00005c20     04e0  
    1044 00005c30     c019          jruc    gfxjis_reversal
    1045                    
    1046 00005c40           gfxjslam
    1047 00005c40     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00005c50     0ae0  
    1048 00005c60     cb88          jrnz    gfxjlp0                         ;ignore
    1049                    
    1050 00005c70     09ca          movi    36,a10
         00005c80     0024  
    1051 00005c90                   CREATE  MESSAGE_PID,BONUS_MESS
    1052                    
    1053                            ;target WHOIHIT -- don't hit anyone else
    1054 00005d10                   SMRTTGT a8,WHOIHIT
    1055                    
    1056                            ;immobilize WHOIHIT
    1057 00005db0     b700          move    *a8(WHOIHIT),a0,L
         00005dc0     0500  
    1058                    
    1059 00005dd0           gfxjis_reversal
    1060 00005dd0     1b2e          movk    25,a14
    1061 00005de0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00005df0     0ae0  
    1062                    
    1063 00005e00     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005e10 00000000! 
    1064                    
    1065 00005e30                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    1066 00005fd0     09ee          movi    shn_sliding_kicktoss_anim,a14
         00005fe0 00000000! 
    1067 00006000     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00006010     0930  
    1068                    
    1069 00006020                   SLEEPK  20
    1070                    
    1071 00006060     c000          jruc    gfxjlp
         00006070     ff4b  
    1072                    
    1073                    *******************************************************************************
    1074 00006080           shn_hdhold_frank
    1075                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1076              003c  tgvgTIMEOUT     .equ    60
    1077                    
    1078 00006080           tgvglp0
    1079 00006080                   SLEEPK  1
    1080 000060c0           tgvglp
    1081 000060c0     b500          move    *a8(GETUP_TIME),a0
         000060d0     0460  
    1082 000060e0     cbf9          jrnz    tgvglp0
    1083 000060f0     b500          move    *a8(PLYRMODE),a0
         00006100     05c0  
    1084 00006110     0b40          cmpi    MODE_HEADHOLD,a0
         00006120     ffef  
    1085 00006130     ca03          jrz     tgvgcont
    1086 00006140     0b40          cmpi    MODE_HEADHELD,a0
         00006150     ffec  
    1087 00006160     cbf1          jrnz    tgvglp0
    1088                    
    1089 00006170           tgvgcont
    1090 00006170     576b          clr     a11
    1091                    
    1092                    ;       WAITSWITCH_DWN  J_AWAY,0,tgvglp
    1093 00006180                   WAITSWITCH_DWN  J_TOWARD,0,tgvglp
    1094                    
    1095 000062e0     09cb          movi    tgvgTIMEOUT,a11
         000062f0     003c  
    1096                    
    1097 00006300                   WAITSWITCH_DWN  J_TOWARD,0,tgvglp
    1098 00006460                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,tgvglp
    1099                    
    1100 000065c0     b500          move    *a8(PLYRMODE),a0
         000065d0     05c0  
    1101 000065e0     0b40          cmpi    MODE_HEADHOLD,a0
         000065f0     ffef  
    1102 00006600     ca1c          jrz     tgvgslam
    1103 00006610     0b40          cmpi    MODE_HEADHELD,a0
         00006620     ffec  
    1104 00006630     cba4          jrnz    tgvglp0
    1105 00006640     b50e          move    *a8(I_WILL_DIE),A14
         00006650     0b30  
    1106 00006660     cba1          jrnz    tgvglp0
    1107                    
    1108 00006670     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00006680     0ae0  
    1109 00006690     cb9e          jrnz    tgvglp0                         ;ignore
    1110                    
    1111 000066a0     0d5f          CALLA   DO_REVERSAL
         000066b0 00000000! 
    1112 000066d0     0d5f          CALLA   DO_REVERSAL_MESS
         000066e0 00000000! 
    1113                    
    1114                            ;target WHOHITME -- don't hit anyone else
    1115 00006700                   SMRTTGT a8,WHOHITME
    1116                    
    1117                            ;immobilize WHOHITME
    1118 000067a0     b700          move    *a8(WHOHITME),a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

         000067b0     04e0  
    1119 000067c0     c018          jruc    tgvgis_reversal
    1120                    
    1121 000067d0           tgvgslam
    1122 000067d0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000067e0     0ae0  
    1123 000067f0     cb88          jrnz    tgvglp0                         ;ignore
    1124                    
    1125 00006800     186a          movk    3,a10
    1126 00006810                   CREATE  MESSAGE_PID,BONUS_MESS
    1127                    
    1128                            ;target WHOIHIT -- don't hit anyone else
    1129 00006890                   SMRTTGT a8,WHOIHIT
    1130                    
    1131                            ;immobilize WHOIHIT
    1132 00006930     b700          move    *a8(WHOIHIT),a0,L
         00006940     0500  
    1133                    
    1134 00006950           tgvgis_reversal
    1135 00006950     180e          movk    32,a14
    1136 00006960     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00006970     0ae0  
    1137                    
    1138 00006980     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00006990 00000000! 
    1139                    
    1140 000069b0     09ee          movi    shn_fstein_anim,a14
         000069c0 00000000! 
    1141 000069e0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000069f0     0930  
    1142 00006a00                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    1143                    
    1144 00006ba0                   SLEEPK  20
    1145                    
    1146 00006be0     c000          jruc    tgvglp
         00006bf0     ff4c  
    1147                    
    1148                    *******************************************************************************
    1149 00006c00           shn_hdhold_butts
    1150                    
    1151              003c  imbpTIMEOUT     .equ    60
    1152                    
    1153 00006c00           imbplp0
    1154 00006c00                   SLEEPK  1
    1155 00006c40           imbplp
    1156 00006c40     b500          move    *a8(GETUP_TIME),a0
         00006c50     0460  
    1157 00006c60     cbf9          jrnz    imbplp0
    1158 00006c70     b500          move    *a8(PLYRMODE),a0
         00006c80     05c0  
    1159 00006c90     0b40          cmpi    MODE_HEADHOLD,a0
         00006ca0     ffef  
    1160 00006cb0     ca03          jrz     imbpcont
    1161 00006cc0     0b40          cmpi    MODE_HEADHELD,a0
         00006cd0     ffec  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1162 00006ce0     cbf1          jrnz    imbplp0
    1163                    
    1164 00006cf0           imbpcont
    1165 00006cf0     576b          clr     a11
    1166                    
    1167                    ;       WAITSWITCH_DWN  J_AWAY,0,imbplp
    1168 00006d00                   WAITSWITCH_DWN  J_TOWARD,0,imbplp
    1169                    
    1170 00006e60     09cb          movi    imbpTIMEOUT,a11
         00006e70     003c  
    1171                    
    1172 00006e80                   WAITSWITCH_DWN  J_TOWARD,0,imbplp
    1173 00006fe0                   WAITSWITCH_DWN  B_SKICK,J_ALL,imbplp
    1174                    
    1175 00007140     b500          move    *a8(PLYRMODE),a0
         00007150     05c0  
    1176 00007160     0b40          cmpi    MODE_HEADHOLD,a0
         00007170     ffef  
    1177 00007180     ca1c          jrz     imbpslam
    1178 00007190     0b40          cmpi    MODE_HEADHELD,a0
         000071a0     ffec  
    1179 000071b0     cba4          jrnz    imbplp0
    1180 000071c0     b50e          move    *a8(I_WILL_DIE),A14
         000071d0     0b30  
    1181 000071e0     cba1          jrnz    imbplp0
    1182                    
    1183 000071f0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00007200     0ae0  
    1184 00007210     cb9e          jrnz    imbplp0                         ;ignore
    1185                    
    1186 00007220     0d5f          CALLA   DO_REVERSAL
         00007230 00000000! 
    1187 00007250     0d5f          CALLA   DO_REVERSAL_MESS
         00007260 00000000! 
    1188                    
    1189                            ;target WHOHITME -- don't hit anyone else
    1190 00007280                   SMRTTGT a8,WHOHITME
    1191                    
    1192                            ;immobilize WHOHITME
    1193 00007320     b700          move    *a8(WHOHITME),a0,L
         00007330     04e0  
    1194 00007340     c018          jruc    imbpis_reversal
    1195                    
    1196 00007350           imbpslam
    1197 00007350     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00007360     0ae0  
    1198 00007370     cb88          jrnz    imbplp0                         ;ignore
    1199                    
    1200 00007380     186a          movk    3,a10
    1201 00007390                   CREATE  MESSAGE_PID,BONUS_MESS
    1202                    
    1203                            ;target WHOIHIT -- don't hit anyone else
    1204 00007410                   SMRTTGT a8,WHOIHIT
    1205                    
    1206                            ;immobilize WHOIHIT
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1207 000074b0     b700          move    *a8(WHOIHIT),a0,L
         000074c0     0500  
    1208                    
    1209 000074d0           imbpis_reversal
    1210 000074d0     180e          movk    32,a14
    1211 000074e0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000074f0     0ae0  
    1212                    
    1213 00007500     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00007510 00000000! 
    1214                    
    1215 00007530     09ee          movi    shn_rpt_hdbutts_anim,a14
         00007540 00000000! 
    1216 00007560     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00007570     0930  
    1217                    ;       WRSND   W_SHAWN,KICK_T1,KICK_T2
    1218                    
    1219 00007580                   SLEEPK  20
    1220                    
    1221 000075c0     c000          jruc    imbplp
         000075d0     ff66  
    1222                    
    1223                    *******************************************************************************
    1224                    
    1225                    ;       STRUCTPD
    1226                    ;       WORD            ywbeCHARGE_TIME ;UDW
    1227              0160  ywbeCHARGE_TIME .equ    SM_USRW1
    1228                    
    1229 000075e0           shn_charge_suplex
    1230                    
    1231                    ;Try to spin around and suplex
    1232                    
    1233 000075e0           ywbestart_over
    1234 000075e0     57ce          clr     a14
    1235 000075f0     b1cd          move    a14,*a13(ywbeCHARGE_TIME),W
         00007600     0160  
    1236 00007610           ywbeloop1
    1237 00007610                   SLEEPK  1
    1238                    
    1239 00007650     b5ae          move    *a13(ywbeCHARGE_TIME),a14,W
         00007660     0160  
    1240 00007670     102e          inc     a14
    1241 00007680     b1cd          move    a14,*a13(ywbeCHARGE_TIME),W
         00007690     0160  
    1242                    
    1243 000076a0     b500          move    *a8(BUT_VAL_CUR),a0
         000076b0     0b90  
    1244 000076c0     1fe0          btst    PLAYER_PUNCH_BIT,a0
    1245 000076d0     ca01          jrz     ywbep1
    1246                    
    1247 000076e0     c0f2          jruc    ywbeloop1
    1248                    
    1249 000076f0           ywbep1
    1250                    
    1251                    ;no longer holding button
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1252 000076f0     b5ae          move    *a13(ywbeCHARGE_TIME),a14
         00007700     0160  
    1253 00007710     0b4e          cmpi    100,a14
         00007720     ff9b  
    1254 00007730     c4ea          jrlt    ywbestart_over
    1255                    
    1256 00007740     b500          move    *a8(GETUP_TIME),a0
         00007750     0460  
    1257 00007760     cbe7          jrnz    ywbestart_over
    1258 00007770     b500          move    *a8(PLYRMODE),a0
         00007780     05c0  
    1259 00007790     0b40          cmpi    MODE_HEADHELD,a0
         000077a0     ffec  
    1260 000077b0     cae2          jrz     ywbestart_over
    1261                    ;       jrz     ywberev
    1262 000077c0     0b40          cmpi    MODE_HEADHOLD,a0
         000077d0     ffef  
    1263 000077e0     cadf          jrz     ywbestart_over
    1264 000077f0     0b40          cmpi    MODE_ONGROUND,a0
         00007800     fffb  
    1265 00007810     cadc          jrz     ywbestart_over
    1266 00007820     0b40          cmpi    MODE_DEAD,a0
         00007830     fff6  
    1267 00007840     cad9          jrz     ywbestart_over
    1268                    
    1269                    ;Success!  Check for the UNINT bit, then queue it up.
    1270 00007850     b50e          move    *a8(ANIMODE),a14
         00007860     0660  
    1271 00007870     1fae          btst    MODE_UNINT_BIT,a14
    1272 00007880     cbd5          jrnz    ywbestart_over
    1273                    
    1274 00007890     09ee          movi    shn_gsuplex_anim,a14
         000078a0 00000000! 
    1275                    
    1276 000078c0     b500          move    *a8(PLYRMODE),a0
         000078d0     05c0  
    1277 000078e0     0b40          cmpi    MODE_RUNNING,a0
         000078f0     fffe  
    1278 00007900     cb03          jrnz    ywbecont
    1279                    
    1280 00007910     09ee          movi    shn_gsuplex_run_anim,a14
         00007920 00000000! 
    1281                    
    1282 00007940           ywbecont
    1283 00007940     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00007950     0930  
    1284 00007960                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    1285                    
    1286 00007b00     c0ad          jruc    ywbestart_over
    1287                            
    1288                    
    1289                    *******************************************************************************
    1290                    
    1291 00007b10           shn_sliding_kicktoss
    1292                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1293              003c  sloqTIMEOUT     .equ    60
    1294                    
    1295 00007b10           sloqlp0
    1296 00007b10                   SLEEPK  1
    1297 00007b50           sloqlp
    1298 00007b50     576b          clr     a11
    1299                    
    1300                    ;       WAITSWITCH_DWN  J_AWAY,0,sloqlp
    1301 00007b60                   WAITSWITCH_DWN  J_TOWARD,0,sloqlp
    1302                    
    1303 00007cc0     09cb          movi    sloqTIMEOUT,a11
         00007cd0     003c  
    1304                    
    1305 00007ce0                   WAITSWITCH_DWN  J_TOWARD,0,sloqlp
    1306 00007e40                   WAITSWITCH_DWN  B_KICK,J_ALL,sloqlp
    1307                    
    1308 00007fa0     b500          move    *a8(PLYRMODE),a0
         00007fb0     05c0  
    1309 00007fc0     0b40          cmpi    MODE_HEADHELD,a0
         00007fd0     ffec  
    1310 00007fe0     cab2          jrz     sloqlp0
    1311 00007ff0     0b40          cmpi    MODE_HEADHOLD,a0
         00008000     ffef  
    1312 00008010     caaf          jrz     sloqlp0
    1313 00008020     0b40          cmpi    MODE_ONGROUND,a0
         00008030     fffb  
    1314 00008040     caac          jrz     sloqlp0
    1315 00008050     0b40          cmpi    MODE_DEAD,a0
         00008060     fff6  
    1316 00008070     caa9          jrz     sloqlp0
    1317                    
    1318 00008080     b500          move    *a8(ANIMODE),a0
         00008090     0660  
    1319 000080a0     1fa0          btst    MODE_UNINT_BIT,a0
    1320 000080b0     cba5          jrnz    sloqlp0
    1321                    
    1322 000080c0     b500          move    *a8(GETUP_TIME),a0
         000080d0     0460  
    1323 000080e0     cba2          jrnz    sloqlp0
    1324                    
    1325                    
    1326                    ;Don't do it when he is on ground
    1327 000080f0                   SWAP    a8,a13
    1328 00008120     0d5f          calla   get_opp_plyrmode
         00008130 00000000! 
    1329 00008150                   SWAP    a8,a13
    1330 00008180     0b40          cmpi    MODE_ONGROUND,a0
         00008190     fffb  
    1331 000081a0     ca9a          jrz     sloqlp
    1332 000081b0     0b40          cmpi    MODE_DEAD,a0
         000081c0     fff6  
    1333 000081d0     ca97          jrz     sloqlp
    1334                    
    1335                    ;Don't do it if opponent is behind you
    1336 000081e0                   SWAP    a8,a13
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

    1337 00008210     0d5f          calla   ck_ignore
         00008220 00000000! 
    1338 00008240     c904          jrnc    sloqnorm
    1339 00008250                   SWAP    a8,a13
    1340 00008280     c08c          jruc    sloqlp
    1341 00008290           sloqnorm        
    1342 00008290                   SWAP    a8,a13
    1343                    
    1344 000082c0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    1345 00008460     09ee          movi    shn_sliding_kicktoss_anim,a14
         00008470 00000000! 
    1346 00008490     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000084a0     0930  
    1347                    
    1348 000084b0                   SLEEPK  20
    1349                    
    1350 000084f0     c000          jruc    sloqlp
         00008500     ff64  
    1351                    
    1352                    ;*****************************************************************************
    1353                    ;*
    1354                    ;
    1355                    ;sloqTIMEOUT    .equ    30
    1356                    ;
    1357                    ; SUBR  std_hdhold_anti_combo
    1358                    ;
    1359                    ;
    1360                    ;sloqlp0        SLEEPK  1
    1361                    ;sloqlp clr     a11
    1362                    ;
    1363                    ;       WAITSWITCH_DWN2 B_PUNCH,J_ALL,sloqlp
    1364                    ;
    1365                    ;       movk    sloqTIMEOUT,a11
    1366                    ;
    1367                    ;       WAITSWITCH_DWN2 B_SPUNCH,J_ALL,sloqlp
    1368                    ;       WAITSWITCH_DWN2 B_PUNCH,J_ALL,sloqlp
    1369                    ;       WAITSWITCH_DWN2 B_SPUNCH,J_ALL,sloqlp
    1370                    ;
    1371                    ;       ;is my opponent in combo mode?
    1372                    ;       move    *a8(CLOSEST_NUM),a0
    1373                    ;       X32     a0
    1374                    ;       addi    process_ptrs,a0
    1375                    ;       move    *a0,a0,L
    1376                    ;       move    *a0(COMBO_COUNT),a0
    1377                    ;       jrz     sloqlp0
    1378                    ;
    1379                    ;       ;am I already dead?
    1380                    ;       move    *a8(I_WILL_DIE),A14
    1381                    ;       jrnz    sloqlp0
    1382                    ;
    1383                    ;       ;is my combo meter lit?
    1384                    ;       calla   CHECK_COMBO_GO
    1385                    ;       jrlt    sloqlp0
    1386                    ;
    1387                    ;;Combo breaker message!
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1388                    ;       CALLA   DO_REVERSAL
    1389                    ;       CALLA   DO_REVERSAL_MESS
    1390                    ;
    1391                    ;       ;target WHOHITME -- don't hit anyone else
    1392                    ;       SMRTTGT a8,WHOHITME
    1393                    ;
    1394                    ;       clr     a0
    1395                    ;       move    a0,*a8(IMMOBILIZE_TIME)
    1396                    ;
    1397                    ;       move    *a8(WHOHITME),a14,L
    1398                    ;       movk    30,a0
    1399                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1400                    ;
    1401                    ;       FACETBL sloqbreaker_tbl,a8
    1402                    ;       move    a0,*a8(SPECIAL_MOVE_ADDR),L
    1403                    ;;      WRSND   W_SHAWN,KICK_T1,KICK_T2
    1404                    ;
    1405                    ;       ;halve both combo meters.
    1406                    ;       push    a8,a13
    1407                    ;
    1408                    ;       move    a8,a13
    1409                    ;       push    a8
    1410                    ;       calla   halve_combo_meter
    1411                    ;       pull    a8
    1412                    ;       move    *a8(WHOHITME),a13,L
    1413                    ;       calla   halve_combo_meter
    1414                    ;
    1415                    ;       pull    a8,a13
    1416                    ;
    1417                    ;       ;set opponent's COMBO_BROKEN bit.  That way he won't get a message
    1418                    ;       ; or clear his meter.
    1419                    ;       move    *a8(WHOHITME),a0,L
    1420                    ;       move    *a0(STATUS_FLAGS),a14,L
    1421                    ;       ori     M_COMBO_BROKEN,a14
    1422                    ;       move    a14,*a0(STATUS_FLAGS),L
    1423                    ;
    1424                    ;       ;sleep while waiting for the hit to land.  Time varies by wrestler
    1425                    ;       move    *a8(WRESTLERNUM),a0
    1426                    ;       X16     a0
    1427                    ;       addi    sloqwait_tbl,a0
    1428                    ;       move    *a0,a0,W
    1429                    ;       calla   PRCSLP
    1430                    ;
    1431                    ;       movk    1,a14
    1432                    ;       move    a14,@HALT
    1433                    ;       SLEEP   20
    1434                    ;       clr     a14
    1435                    ;       move    a14,@HALT
    1436                    ;
    1437                    ;       jruc    sloqlp
    1438                    ;
    1439                    ;sloqbreaker_tbl
    1440                    ;       .long   0                       ;0 Bret Hart
    1441                    ;       REFLONG rzr_3_uslash_anim       ;1 Razor Ramon
    1442                    ;       .long   0                       ;2 Undertaker
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1443                    ;       .long   0                       ;3 Yokozuna
    1444                    ;       REFLONG shn_spinkick_anim       ;4 Shawn Michaels
    1445                    ;       .long   0                       ;5 Bam Bam
    1446                    ;       .long   0                       ;6 Doink
    1447                    ;       .long   0                       ;7 spare
    1448                    ;       .long   0                       ;8 Lex Luger
    1449                    ;
    1450                    ;sloqwait_tbl
    1451                    ;       .word   0010,9,0010,0010        ;hrt,rzr,und,yok
    1452                    ;       .word   13,0010,0010,0,0010     ;shn,bam,dnk,0,lex
    1453                    
    1454                    ;*******************************************************************************
    1455                    ;*
    1456                    ;shn_hdhold_anti_combo
    1457                    ;sloqTIMEOUT    .equ    30
    1458                    ;
    1459                    ;sloqlp0
    1460                    ;       SLEEPK  1
    1461                    ;sloqlp
    1462                    ;;Is my opponent in combo mode?
    1463                    ;;      move    *a8(IMMOBILIZE_TIME),a14
    1464                    ;;      jrz     sloqlp0
    1465                    ;;      move    *a8(CLOSEST_NUM),a0
    1466                    ;;      X32     a0
    1467                    ;;      addi    process_ptrs,a0
    1468                    ;;      move    *a0,a0,L
    1469                    ;;      move    *a0(COMBO_COUNT),a0
    1470                    ;;      jrz     sloqlp0
    1471                    ;
    1472                    ;       clr     a11
    1473                    ;
    1474                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,sloqlp
    1475                    ;
    1476                    ;       movk    sloqTIMEOUT,a11
    1477                    ;
    1478                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,sloqlp
    1479                    ;       WAITSWITCH_DWN  B_SPUNCH,J_ALL,sloqlp
    1480                    ;
    1481                    ;;Is my opponent in combo mode?
    1482                    ;       move    *a8(CLOSEST_NUM),a0
    1483                    ;       X32     a0
    1484                    ;       addi    process_ptrs,a0
    1485                    ;       move    *a0,a0,L
    1486                    ;       move    *a0(COMBO_COUNT),a0
    1487                    ;       jrz     sloqlp0
    1488                    ;
    1489                    ;       move    *a8(ANTI_COMBO_TIME),a0         ;Time stamp
    1490                    ;       move    @PCNT,a14
    1491                    ;       sub     a0,a14
    1492                    ;       abs     a14
    1493                    ;       cmpi    80,a14
    1494                    ;       jrge    sloqlp0
    1495                    ;       move    *a8(I_WILL_DIE),A14
    1496                    ;       jrnz    sloqlp0
    1497                    ;
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1498                    ;;Combo breaker message!
    1499                    ;       CALLA   DO_REVERSAL
    1500                    ;       CALLA   DO_REVERSAL_MESS
    1501                    ;
    1502                    ;       ;target WHOHITME -- don't hit anyone else
    1503                    ;       SMRTTGT a8,WHOHITME
    1504                    ;
    1505                    ;       clr     a0
    1506                    ;       move    a0,*a8(IMMOBILIZE_TIME)
    1507                    ;
    1508                    ;       move    *a8(WHOHITME),a14,L
    1509                    ;       movk    15,a0
    1510                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1511                    ;
    1512                    ;       movi    shn_fstein_anim,a14
    1513                    ;       move    a14,*a8(SPECIAL_MOVE_ADDR),L
    1514                    ;       WRSND   W_SHAWN,KICK_T1,KICK_T2
    1515                    ;
    1516                    ;       SLEEPK  20
    1517                    ;
    1518                    ;       jruc    sloqlp
    1519                    ;
    1520                    ******************************************************************************
    1521                    
    1522 00008510           shn_hdhold_combo1
    1523                    ;And arm break
    1524                    
    1525              003c  atyqTIMEOUT     .equ    60
    1526                    
    1527 00008510           atyqlp0
    1528 00008510                   SLEEPK  1
    1529 00008550           atyqlp
    1530 00008550     b500          move    *a8(PLYRMODE),a0
         00008560     05c0  
    1531 00008570     0b40          cmpi    MODE_HEADHOLD,a0
         00008580     ffef  
    1532                    ;       jrnz    atyqlp0
    1533 00008590     ca03          jrz     atyqcont
    1534 000085a0     0b40          cmpi    MODE_HEADHELD,a0
         000085b0     ffec  
    1535 000085c0     cbf4          jrnz    atyqlp0
    1536 000085d0           atyqcont
    1537                    ;In combo mode?
    1538                    ;       calla   CHECK_COMBO_GO
    1539                    ;       jrlt    atyqlp0
    1540                    
    1541 000085d0     576b          clr     a11
    1542                    
    1543 000085e0                   WAITSWITCH_DWN  J_TOWARD,0,atyqlp
    1544                    
    1545 00008740     09cb          movi    atyqTIMEOUT,a11
         00008750     003c  
    1546                    
    1547 00008760                   WAITSWITCH_DWN  J_TOWARD,0,atyqlp
    1548 000088c0                   WAITSWITCH_DWN  B_PUNCH,J_ALL,atyqlp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

    1549                    
    1550 00008a20     0d5f          calla   CHECK_COMBO_GO
         00008a30 00000000! 
    1551 00008a50     c43d          jrlt    atyqtryarm
    1552                    
    1553 00008a60     b500          move    *a8(PLYRMODE),a0
         00008a70     05c0  
    1554 00008a80     0b40          cmpi    MODE_HEADHOLD,a0
         00008a90     ffef  
    1555 00008aa0     ca03          jrz     atyqslam
    1556 00008ab0     0b40          cmpi    MODE_HEADHELD,a0
         00008ac0     ffec  
    1557 00008ad0     cba3          jrnz    atyqlp0
    1558                    
    1559 00008ae0           atyqslam
    1560 00008ae0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00008af0     0ae0  
    1561 00008b00     cba0          jrnz    atyqlp0                         ;ignore
    1562                    
    1563                    ;Start combo rules here
    1564                    ;       move    *a8(ATTACH_PROC),a14,L
    1565                    ;       movk    15,a0
    1566                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1567                    
    1568                            ;target WHOIHIT
    1569 00008b10                   SMRTTGT a8,WHOIHIT
    1570                    
    1571 00008bb0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00008bc0 00000000! 
    1572 00008be0     09ee          movi    shn_combo_kick_anim,a14
         00008bf0 00000000! 
    1573 00008c10     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00008c20     0930  
    1574 00008c30                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    1575                    
    1576 00008dd0                   SLEEPK  20
    1577                    
    1578 00008e10     c000          jruc    atyqlp
         00008e20     ff72  
    1579 00008e30           atyqtryarm
    1580 00008e30     b500          move    *a8(PLYRMODE),a0
         00008e40     05c0  
    1581 00008e50     0b40          cmpi    MODE_HEADHOLD,a0
         00008e60     ffef  
    1582 00008e70     ca1f          jrz     atyqslam2
    1583 00008e80     0b40          cmpi    MODE_HEADHELD,a0
         00008e90     ffec  
    1584 00008ea0     cb00          jrnz    atyqlp0
         00008eb0     ff65  
    1585 00008ec0     b50e          move    *a8(I_WILL_DIE),A14
         00008ed0     0b30  
    1586 00008ee0     cb00          jrnz    atyqlp0
         00008ef0     ff61  
    1587                    
    1588 00008f00     b50e          move    *a8(IMMOBILIZE_TIME),a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

         00008f10     0ae0  
    1589 00008f20     cb00          jrnz    atyqlp0                         ;ignore
         00008f30     ff5d  
    1590                    
    1591 00008f40     0d5f          CALLA   DO_REVERSAL
         00008f50 00000000! 
    1592 00008f70     0d5f          CALLA   DO_REVERSAL_MESS
         00008f80 00000000! 
    1593                    
    1594                            ;target WHOHITME -- don't hit anyone else
    1595 00008fa0                   SMRTTGT a8,WHOHITME
    1596                    
    1597                            ;immobilize WHOHITME
    1598 00009040     b700          move    *a8(WHOHITME),a0,L
         00009050     04e0  
    1599 00009060     c019          jruc    atyqis_reversal
    1600                    
    1601 00009070           atyqslam2
    1602 00009070     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00009080     0ae0  
    1603 00009090     cb00          jrnz    atyqlp0                         ;ignore
         000090a0     ff46  
    1604                    
    1605 000090b0     192a          movk    9,a10
    1606 000090c0                   CREATE  MESSAGE_PID,BONUS_MESS
    1607                    
    1608                            ;target WHOIHIT -- don't hit anyone else
    1609 00009140                   SMRTTGT a8,WHOIHIT
    1610                    
    1611                            ;immobilize WHOIHIT
    1612 000091e0     b700          move    *a8(WHOIHIT),a0,L
         000091f0     0500  
    1613                    
    1614 00009200           atyqis_reversal
    1615 00009200     180e          movk    32,a14
    1616 00009210     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00009220     0ae0  
    1617                    
    1618 00009230     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00009240 00000000! 
    1619                    
    1620 00009260     09ee          movi    shn_break_arm_anim,a14
         00009270 00000000! 
    1621 00009290     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000092a0     0930  
    1622 000092b0                   WRSND   W_SHAWN,GRABHOLD_T1,GRABHOLD_T2
    1623                    
    1624 00009450                   SLEEPK  20
    1625                    
    1626 00009490     c000          jruc    atyqlp
         000094a0     ff0a  
    1627                    
    1628                    ******************************************************************************
    1629                    
    1630 000094b0           shn_hdhold_combo2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1631                    
    1632              003c  pkvxTIMEOUT     .equ    60
    1633                    
    1634 000094b0           pkvxlp0
    1635 000094b0                   SLEEPK  1
    1636 000094f0           pkvxlp
    1637 000094f0     b500          move    *a8(PLYRMODE),a0
         00009500     05c0  
    1638 00009510     0b40          cmpi    MODE_HEADHOLD,a0
         00009520     ffef  
    1639 00009530     cbf7          jrnz    pkvxlp0
    1640                    ;       jrz     pkvxcont
    1641                    ;       cmpi    MODE_HEADHELD,a0
    1642                    ;       jrnz    pkvxlp0
    1643                    ;pkvxcont
    1644                    ;In combo mode?
    1645 00009540     0d5f          calla   CHECK_COMBO_GO
         00009550 00000000! 
    1646 00009570     c4f3          jrlt    pkvxlp0
    1647                    
    1648 00009580     576b          clr     a11
    1649                    
    1650 00009590                   WAITSWITCH_DWN  J_TOWARD,0,pkvxlp
    1651                    
    1652 000096f0     09cb          movi    pkvxTIMEOUT,a11
         00009700     003c  
    1653                    
    1654 00009710                   WAITSWITCH_DWN  J_TOWARD,0,pkvxlp
    1655 00009870                   WAITSWITCH_DWN  B_KICK,J_ALL,pkvxlp
    1656                    
    1657 000099d0     b500          move    *a8(PLYRMODE),a0
         000099e0     05c0  
    1658 000099f0     0b40          cmpi    MODE_HEADHOLD,a0
         00009a00     ffef  
    1659 00009a10     ca03          jrz     pkvxslam
    1660 00009a20     0b40          cmpi    MODE_HEADHELD,a0
         00009a30     ffec  
    1661 00009a40     cba6          jrnz    pkvxlp0
    1662                    
    1663                    
    1664 00009a50           pkvxslam
    1665 00009a50     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00009a60     0ae0  
    1666 00009a70     cba3          jrnz    pkvxlp0                         ;ignore
    1667                    
    1668                    ;Start combo rules here
    1669                    ;       move    *a8(ATTACH_PROC),a14,L
    1670                    ;       movk    15,a0
    1671                    ;       move    a0,*a14(IMMOBILIZE_TIME)
    1672                    
    1673                            ;target WHOIHIT
    1674 00009a80                   SMRTTGT a8,WHOIHIT
    1675                    
    1676 00009b20     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00009b30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1677 00009b50     09ee          movi    shn_combo_punch_anim,A14
         00009b60 00000000! 
    1678 00009b80     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00009b90     0930  
    1679 00009ba0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    1680                    
    1681 00009d40                   SLEEPK  20
    1682                    
    1683 00009d80     c000          jruc    pkvxlp
         00009d90     ff75  
    1684                    
    1685                    *****************************************************************************
    1686                    
    1687 00009da0            SUBR   shawn_ani_init
    1688                    
    1689 00009da0     b5a0          move    *a13(FACING_DIR),a0
         00009db0     04c0  
    1690 00009dc0     1f80          btst    PLAYER_RIGHT_BIT,a0
    1691 00009dd0     cb18          jrnz    zcwvp1
    1692                    ;Plyr 2
    1693 00009de0     09e0          movi    shn_stand4_anim,a0
         00009df0 00000000! 
    1694 00009e10     0d5f          calla   change_anim1a
         00009e20 00000000! 
    1695                    
    1696 00009e40     09e0          movi    shn_torso4_anim,a0
         00009e50 00000000! 
    1697 00009e70     0d5f          calla   change_anim2a
         00009e80 00000000! 
    1698                    
    1699 00009ea0                   PUSH    a10
    1700 00009eb0     4daa          move    a13,a10
    1701 00009ec0                   CREATE  TAUNT_PID,do_taunt
    1702 00009f40                   PULL    a10
    1703                    
    1704 00009f50     0960          rets
    1705                    
    1706 00009f60           zcwvp1
    1707 00009f60     09e0          movi    shn_stand2_anim,a0
         00009f70 00000000! 
    1708 00009f90     0d5f          calla   change_anim1a
         00009fa0 00000000! 
    1709                    
    1710 00009fc0     09e0          movi    shn_torso2_anim,a0
         00009fd0 00000000! 
    1711 00009ff0     0d5f          calla   change_anim2a
         0000a000 00000000! 
    1712                    
    1713 0000a020     0960          rets
    1714                    
    1715                    
    1716                    *****************************************************************************
    1717                    *
    1718                    * SHAWNS CONTROL CODE
    1719                    *
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1720                    * a13 = * shawn process
    1721                    
    1722 0000a030            SUBR   move_shawn
    1723                    
    1724                    
    1725 0000a030     09eb          movi    shn_secret_moves,a11
         0000a040 00000000' 
    1726 0000a060     0d5f          calla   check_secret_moves
         0000a070 00000000! 
    1727                    
    1728 0000a090     b5a0          move    *a13(PLYRMODE),a0
         0000a0a0     05c0  
    1729 0000a0b0     24a0          sll     5,a0                    ;x 32
    1730 0000a0c0     0b20          addi    jrgdmode_table,a0
         0000a0d0 0000a120' 
    1731 0000a0f0     8600          move    *a0,a0,L
    1732 0000a100     0920          call    a0
    1733 0000a110     0960          rets
    1734                    
    1735 0000a120           jrgdmode_table
    1736 0000a120 0000a460'         .long   mode_normal             ;0
    1737 0000a140 000113d0'         .long   mode_running            ;1
    1738 0000a160 00013f90'         .long   mode_inair              ;2
    1739 0000a180 00013fa0'         .long   mode_attached           ;3
    1740 0000a1a0 00014110'         .long   mode_onground           ;4
    1741 0000a1c0 00014120'         .long   mode_bouncing           ;5
    1742 0000a1e0 000143c0'         .long   mode_onturnbkl          ;6
    1743 0000a200 00015020'         .long   mode_block              ;7
    1744 0000a220 00015aa0'         .long   mode_dizzy              ;8
    1745 0000a240                   REFLONG mode_dead               ;9
    1746 0000a260 00015ab0'         .long   mode_oppoverhead        ;10
    1747 0000a280 00015ac0'         .long   mode_climbturnbkl       ;11
    1748 0000a2a0 00015ad0'         .long   mode_waitanim           ;12
    1749 0000a2c0 00015b50'         .long   mode_grapple            ;13
    1750 0000a2e0 00015b60'         .long   mode_master             ;14
    1751 0000a300 00015ba0'         .long   mode_slave              ;15
    1752 0000a320 00015bb0'         .long   mode_headhold           ;16
    1753 0000a340 00016e50'         .long   mode_puppet2            ;17
    1754 0000a360 0000a460'         .long   mode_normal     ;18
    1755 0000a380 00016e60'         .long   mode_headheld           ;19
    1756 0000a3a0 00000000!         .long   mode_puppet             ;20
    1757 0000a3c0 00000000!         .long   mode_inair2             ;21
    1758 0000a3e0 0000a460'         .long   mode_normal     ;22
    1759 0000a400 0000a460'         .long   mode_normal     ;23
    1760 0000a420 00017320'         .long   mode_chokehold          ;24
    1761 0000a440 00000000!         .long   mode_choking            ;25
    1762                    
    1763                    *****************************************************************************
    1764                    
    1765 0000a460           mode_normal
    1766                    
    1767 0000a460     b5a0          move    *a13(ANIMODE),a0
         0000a470     0660  
    1768 0000a480     1fa0          btst    MODE_UNINT_BIT,a0
    1769 0000a490     cb00          jrnz    alzkno_interrupt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

         0000a4a0     00b0  
    1770                    
    1771 0000a4b0     b5a0          move    *a13(I_WILL_DIE),a0
         0000a4c0     0b30  
    1772 0000a4d0     ca1f          jrz     alzknope
    1773 0000a4e0     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         0000a4f0     0ae0  
    1774 0000a500     cb1c          jrnz    alzknope
    1775                    ;Player has died amidst a combo...
    1776                    ;Knock me down.
    1777 0000a510     09e0          movi    shn_fall_back_anim,a0
         0000a520 00000000! 
    1778 0000a540     0d5f          calla   change_anim1a
         0000a550 00000000! 
    1779                    
    1780                    ;Zero health bar
    1781 0000a570     09c0          movi    -10,a0
         0000a580     fff6  
    1782 0000a590     b5a1          move    *a13(PLYRNUM),a1
         0000a5a0     0580  
    1783 0000a5b0     0d5f          calla   adjust_health
         0000a5c0 00000000! 
    1784                    
    1785 0000a5e0                   SETMODE DEAD
    1786                    
    1787 0000a690     5600          clr     a0
    1788 0000a6a0     b00d          move    a0,*a13(I_WILL_DIE)
         0000a6b0     0b30  
    1789                    
    1790 0000a6c0     0960          rets
    1791                    
    1792 0000a6d0           alzknope
    1793                    ;Perhaps we need to interrupt any sequence when a wrestler has won?
    1794                    
    1795 0000a6d0     0d5f          calla   get_opp_plyrmode
         0000a6e0 00000000! 
    1796 0000a700     0b40          cmpi    MODE_DEAD,a0
         0000a710     fff6  
    1797 0000a720     cb49          jrne    alzkopp_not_dead
    1798                    
    1799                            ;if closest is a zombie, skip pin section.
    1800 0000a730     0d5f          calla   get_opp_process
         0000a740 00000000! 
    1801 0000a760     b40e          move    *a0(STATUS_FLAGS),a14
         0000a770     0b50  
    1802 0000a780     1f8e          btst    B_ZOMBIE,a14
    1803 0000a790     cb42          jrnz    alzkopp_not_dead
    1804                            
    1805                            ;all opponents are dead.  Check for pins/raisearms
    1806                    
    1807                            ;if we're attached to someone, don't interrupt it.
    1808 0000a7a0     b7a1          move    *a13(ATTACH_PROC),a1,L
         0000a7b0     03e0  
    1809 0000a7c0     ca04          jrz     alzkno_attch
    1810 0000a7d0     b622          move    *a1(ATTACH_PROC),a2,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

         0000a7e0     03e0  
    1811 0000a7f0     484d          cmp     a2,a13
    1812 0000a800     ca3b          jreq    alzkno_pin_yet
    1813 0000a810           alzkno_attch
    1814                    
    1815                            ;if a teammate has pinned, raise yer arm.
    1816 0000a810     0d5f          calla   ck_teammate_pin 
         0000a820 00000000! 
    1817 0000a840     c823          jrc     alzkraisearm
    1818                    
    1819                            ;nobody has pinned.  if we're outside or all our opponents are
    1820                            ; outside, do a raisearm.
    1821 0000a850     0d5f          calla   raisearm_check
         0000a860 00000000! 
    1822 0000a880     c81f          jrc     alzkraisearm
    1823                    
    1824                            ;we're inside with a pinnable opponent.  any button pins.
    1825 0000a890     b5a0          move    *a13(BUT_VAL_CUR),a0
         0000a8a0     0b90  
    1826 0000a8b0     ca30          jrz     alzkno_pin_yet
    1827                    
    1828                            ;we have a press -- make sure opponent is on the ground
    1829 0000a8c0     0d5f          calla   can_pin
         0000a8d0 00000000! 
    1830 0000a8f0     c92c          jrnc    alzkopp_notgnd
    1831                    
    1832                            ;opponent is on the ground.  pin him.
    1833 0000a900                   FACE24  shn,pin_anim
    1834 0000a9a0     0d5f          calla   change_anim1a
         0000a9b0 00000000! 
    1835                    
    1836                            ;set the 'I did a pin' flag.
    1837 0000a9d0     b5ae          move    *a13(STATUS_FLAGS),a14
         0000a9e0     0b50  
    1838 0000a9f0     0bae          ori     M_DID_PIN,a14
         0000aa00 00000002  
    1839 0000aa20     b1cd          move    a14,*a13(STATUS_FLAGS)
         0000aa30     0b50  
    1840                    
    1841                            ;if we're a temp drone for auto-pin purposes, turn back into
    1842                            ; a normal player here.
    1843 0000aa40     0d5f          calla   drone_change_back
         0000aa50 00000000! 
    1844                    
    1845 0000aa70     0960          rets
    1846                    
    1847 0000aa80           alzkraisearm
    1848 0000aa80                   FACE24  shn,raise_arm_anim
    1849 0000ab20     0d5f          calla   change_anim1a
         0000ab30 00000000! 
    1850 0000ab50     0d5f          calla   set_raisearm_bit
         0000ab60 00000000! 
    1851                    
    1852                            ;if we're a temp drone for auto-pin purposes, turn back into
    1853                            ; a normal player here.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1854 0000ab80     0d5f          calla   drone_change_back
         0000ab90 00000000! 
    1855                    
    1856 0000abb0     0960          rets
    1857                    
    1858 0000abc0           alzktoo_far_to_pin
    1859 0000abc0           alzkopp_notgnd
    1860 0000abc0           alzkopp_not_dead
    1861 0000abc0           alzkno_pin_yet
    1862                    
    1863 0000abc0     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         0000abd0     0ae0  
    1864 0000abe0     cb36          jrnz    alzkimmobilized
    1865                    
    1866 0000abf0     b5a0          move    *a13(BUT_VAL_CUR),a0
         0000ac00     0b90  
    1867 0000ac10     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1868 0000ac20     ca07          jrz     alzknblk                        ;1 for down transitions
    1869 0000ac30     0d3f          callr   alzkblock                       ;& 1 for current buttons
         0000ac40     01bf  
    1870 0000ac50     c804          jrc     alzknblk
    1871 0000ac60     5600          clr     a0
    1872 0000ac70     b00d          move    a0,*a13(ATTACK_TYPE)
         0000ac80     05e0  
    1873 0000ac90     0960          rets
    1874 0000aca0           alzknblk
    1875 0000aca0     b5a0          move    *a13(BUT_VAL_CUR),a0
         0000acb0     0b90  
    1876 0000acc0     0b80          andi    011111b,a0
         0000acd0 ffffffe0  
    1877 0000acf0     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         0000ad00     fff6  
    1878 0000ad10     ca00          jrz     alzkpunchkick
         0000ad20     0524  
    1879                    
    1880 0000ad30     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000ad40     0ba0  
    1881 0000ad50     0b80          andi    011111b,a0
         0000ad60 ffffffe0  
    1882 0000ad80                   X32     a0
    1883 0000ad90     0b20          addi    alzkaction_table,a0
         0000ada0 0000afc0' 
    1884 0000adc0     8600          move    *a0,a0,L
    1885 0000add0     0920          call    a0
    1886                    
    1887 0000ade0     b5a0          move    *a13(ANIMODE),a0
         0000adf0     0660  
    1888 0000ae00     1fa0          btst    MODE_UNINT_BIT,a0
    1889 0000ae10     cb19          jrnz    alzkno_interrupt
    1890                    
    1891                    
    1892 0000ae20     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000ae30     0bc0  
    1893 0000ae40     b00d          move    a0,*a13(MOVE_DIR)
         0000ae50     04b0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

    1894 0000ae60     0d5f          calla   climb_turnbuckle
         0000ae70 00000000! 
    1895 0000ae90     c90e          jrnc    alzkno_climb
    1896 0000aea0     b5a5          move    *a13(WRESTLERNUM),A5
         0000aeb0     0590  
    1897 0000aec0     09e2          MOVI    CLIMB_ROPES,A2
         0000aed0 00000000! 
    1898 0000aef0     09c0          MOVI    1000,A0
         0000af00     03e8  
    1899 0000af10     0d5f          CALLA   ADD_IF_SILENT
         0000af20 00000000! 
    1900 0000af40     0960          rets
    1901                    
    1902 0000af50           alzkimmobilized
    1903 0000af50     57ce          clr     a14
    1904 0000af60     b1cd          move    a14,*a13(MOVE_DIR)
         0000af70     04b0  
    1905 0000af80           alzkno_climb
    1906 0000af80     0d5f          calla   execute_walk
         0000af90 00000000! 
    1907                    
    1908 0000afb0           alzkno_interrupt
    1909 0000afb0     0960          rets
    1910                    
    1911 0000afc0           alzkaction_table
    1912 0000afc0 0000b3c0'         .long   alzkz,alzkpunch,alzkblock,alzkblock                     ;0-3
    1913 0000b040 0000ca20'         .long   alzksuper_punch,alzksuper_punch,alzkblock,alzkblock     ;4-7
    1914 0000b0c0 0000e8b0'         .long   alzkkick,alzkpunchkick,alzkblock,alzkblock              ;8-11
    1915 0000b140 0000ca20'         .long   alzksuper_punch,alzkpunchkick,alzkblock,alzkblock       ;12-15
    1916 0000b1c0 0000ffe0'         .long   alzksuper_kick,alzksuper_kick,alzkblock,alzkblock       ;16-19
    1917 0000b240 0000d9b0'         .long   alzkgraboh,alzkgraboh,alzkblock,alzkblock               ;20-23
    1918 0000b2c0 0000ffe0'         .long   alzksuper_kick,alzkpunchkick,alzkblock,alzkblock        ;24-27
    1919 0000b340 0000d9b0'         .long   alzkgraboh,alzkgraboh,alzkblock,alzkblock               ;28-31
    1920                    
    1921                    ************
    1922 0000b3c0           alzkz
    1923 0000b3c0     0960          rets
    1924                    
    1925                    ************
    1926 0000b3d0           alzkpunch               ;1
    1927                    *
    1928                    * MODE             DX  DZ       ACTION
    1929                    * ----------------------------------------------------
    1930                    * normal        <  62  95       headbutt
    1931                    * normal        >               normal punch
    1932                    *
    1933                    * onground      < 120 120       elbow drop
    1934                    * onground      >               normal punch
    1935                    *
    1936                    * running |
    1937                    * bouncing                      normal punch
    1938                    *
    1939                    * onturnbkl     <  60  60       punch
    1940                    * onturnbkl     >               normal punch
    1941                    *
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1942                    * puppet|inair                  normal punch
    1943                    
    1944                    
    1945 0000b3d0                   JJXM_INIT
    1946 0000b440                   JJXM    NORMAL,          50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1947 0000b510                   JJXM    BLOCK,           50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1948 0000b5e0                   JJXM    DIZZY,           50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1949 0000b6b0                   JJXM    ONGROUND,       160,140,alzkpunch_lbdrop,alzkpunch_punch
    1950 0000b780                   JJXM    RUNNING,         50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1951 0000b850                   JJXM    BOUNCING,        50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1952 0000b920                   JJXM    ONTURNBKL,              alzkpunch_punch
    1953 0000b970                   JJXM    CLIMBTURNBKL,           alzkpunch_punch
    1954 0000b9c0                   JJXM    PUPPET,          50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1955 0000ba90                   JJXM    PUPPET2,         50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1956 0000bb50                   JJXM    INAIR,           50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1957 0000bc00                   JJXM    ATTACHED,        50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1958 0000bcb0                   JJXM    DEAD,           160,140,alzkpunch_lbdrop,alzkpunch_punch
    1959 0000bd60                   JJXM    OPPOVERHEAD,     50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1960 0000be00                   JJXM    WAITANIM,        50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1961 0000bea0                   JJXM    GRAPPLE,         50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1962 0000bf40                   JJXM    MASTER,          50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1963 0000bfe0                   JJXM    SLAVE,           50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1964 0000c080                   JJXM    HEADHOLD,        50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1965 0000c120                   JJXM    HEADHELD,        50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1966 0000c1c0                   JJXM    CHOKEHOLD,       50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1967 0000c260                   JJXM    INAIR2,          50, 45,alzkpunch_hdbutt,alzkpunch_punch
    1968 0000c300                   JJXM_END
    1969                    
    1970                    *****   
    1971 0000c320           alzkpunch_punch
    1972 0000c320           std_punch
    1973                    
    1974 0000c320                   FACE24  shn,punch_anim
    1975 0000c3c0     0d5f          calla   change_anim1a
         0000c3d0 00000000! 
    1976                    
    1977 0000c3f0                   WRSND   W_SHAWN,PUNCH_T1,PUNCH_T2
    1978                    
    1979 0000c590     0960          rets
    1980                    
    1981                    *****
    1982 0000c5a0           alzkpunch_hdbutt
    1983 0000c5a0     c000          jruc    alzkhdbutt
         0000c5b0     0195  
    1984                    
    1985                    *****
    1986 0000c5c0           alzkpunch_lbdrop
    1987                    
    1988 0000c5c0                   FACE24  shn,falling_punch_anim
    1989 0000c660     0d5f          calla   change_anim1a
         0000c670 00000000! 
    1990                    
    1991 0000c690                   WRSND   W_SHAWN,LBOWDROP_T1,LBOWDROP_T2
    1992 0000c830     0960          rets
    1993                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

    1994                    ************
    1995 0000c840           alzkblock               ;2
    1996 0000c840           std_block
    1997 0000c840     05a0          move    @blocking_off,a0
         0000c850 00000000! 
    1998 0000c870     cb18          jrnz    alzkno_blocking
    1999                    
    2000 0000c880                   RND_AWARD       a13,BLOCKS_AWD
    2001                    
    2002 0000c920     09e0          movi    shn_4_block_anim,a0
         0000c930 00000000! 
    2003 0000c950     0d5f          calla   change_anim1a
         0000c960 00000000! 
    2004                    
    2005 0000c980     0d5f          calla   BLOCK_WOOSH
         0000c990 00000000! 
    2006                    
    2007 0000c9b0     5600          clr     a0
    2008 0000c9c0     b00d          move    a0,*a13(BLOCK_TIME)
         0000c9d0     0d30  
    2009 0000c9e0     0320          clrc
    2010 0000c9f0     0960          rets
    2011                    
    2012 0000ca00           alzkno_blocking
    2013 0000ca00     0de0          setc
    2014 0000ca10     0960          rets
    2015                    
    2016                    
    2017                    ************
    2018 0000ca20           alzksuper_punch ;4
    2019                    
    2020 0000ca20                   JJXM_INIT
    2021 0000ca90                   JJXM    NORMAL,          85, 45,alzkspunch_special,alzkspunch_slap      ;0
    2022 0000cb60                   JJXM    RUNNING,         85, 45,alzkspunch_special,alzkspunch_slap      ;1
    2023 0000cc30                   JJXM    INAIR,           85, 45,alzkspunch_special,alzkspunch_slap      ;2
    2024 0000cd00                   JJXM    ATTACHED,        85, 45,alzkspunch_special,alzkspunch_slap      ;3
    2025 0000cdd0                   JJXM    ONGROUND,       160,140,alzkspunch_lbowdrop,std_punch   ;4
    2026 0000cea0                   JJXM    BOUNCING,        85, 45,alzkspunch_special,alzkspunch_slap      ;1
    2027 0000cf70                   JJXM    ONTURNBKL,              alzkspunch_slap                 ;6
    2028 0000cfc0                   JJXM    BLOCK,           85, 45,alzkspunch_special,alzkspunch_slap      ;7
    2029 0000d090                   JJXM    DIZZY,           85, 45,alzkspunch_special,alzkspunch_slap      ;8
    2030 0000d160                   JJXM    DEAD,           160,140,alzkspunch_lbowdrop,std_punch   ;9
    2031 0000d230                   JJXM    OPPOVERHEAD,     85, 45,alzkspunch_special,alzkspunch_slap      ;10
    2032 0000d2e0                   JJXM    CLIMBTURNBKL,           std_punch                       ;11
    2033 0000d330                   JJXM    WAITANIM,        85, 45,alzkspunch_special,alzkspunch_slap      ;12
    2034 0000d3e0                   JJXM    GRAPPLE,         85, 45,alzkspunch_special,alzkspunch_slap      ;13
    2035 0000d480                   JJXM    MASTER,          85, 45,alzkspunch_special,alzkspunch_slap      ;14
    2036 0000d520                   JJXM    SLAVE,           85, 45,alzkspunch_special,alzkspunch_slap      ;15
    2037 0000d5c0                   JJXM    HEADHOLD,        85, 45,alzkspunch_special,alzkspunch_slap      ;16
    2038 0000d660                   JJXM    HEADHELD,        85, 45,alzkspunch_special,alzkspunch_slap      ;17
    2039 0000d700                   JJXM    CHOKEHOLD,       85, 45,alzkspunch_special,alzkspunch_slap      ;16
    2040 0000d7a0                   JJXM    PUPPET,          85, 45,alzkspunch_special,alzkspunch_slap      ;20
    2041 0000d840                   JJXM    PUPPET2,         85, 45,alzkspunch_special,alzkspunch_slap      ;20
    2042 0000d8e0                   JJXM    INAIR2,          85, 45,alzkspunch_special,alzkspunch_slap      ;21
    2043 0000d980                   JJXM_END
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    2044                    
    2045 0000d9a0           alzkspunch_rets
    2046 0000d9a0     0960          rets
    2047                    
    2048                    *****
    2049 0000d9b0           alzkgraboh
    2050 0000d9b0           alzkspunch_slap
    2051                    
    2052 0000d9b0                   FACE24  shn,slap_anim
    2053 0000da50     0d5f          calla   change_anim1a
         0000da60 00000000! 
    2054                    
    2055 0000da80                   WRSND   W_SHAWN,SPUNCH_T1,SPUNCH_T2
    2056                    
    2057 0000dc20     0960          rets
    2058                    
    2059                    *****
    2060 0000dc30           alzkspunch_special
    2061 0000dc30     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000dc40     0370  
    2062 0000dc50     0b41          cmpi    64,a1
         0000dc60     ffbf  
    2063 0000dc70     c700          jrgt    std_punch
         0000dc80     fe69  
    2064                    
    2065 0000dc90                   FACE24  shn,pummel_anim
    2066 0000dd30     0d5f          calla   change_anim1
         0000dd40 00000000! 
    2067 0000dd60                   WRSND   W_SHAWN,HDBUTT_T1,HDBUTT_T2
    2068                    
    2069 0000df00     0960          rets
    2070                    
    2071 0000df10           alzkhdbutt
    2072                    
    2073 0000df10                   FACE24  shn,butt_anim
    2074 0000dfb0     0d5f          calla   change_anim1
         0000dfc0 00000000! 
    2075                    
    2076 0000dfe0                   WRSND   W_SHAWN,HDBUTT_T1,HDBUTT_T2
    2077                    
    2078 0000e180     0960          rets
    2079                    
    2080                    *****
    2081 0000e190           alzkspunch_lbowdrop
    2082                    
    2083                    ;If near opponents head, and facing down, do the hair grab!
    2084                    ;Allow hair grab from below!
    2085                    
    2086 0000e190     b5ae          move    *a13(CLOSEST_NUM),a14
         0000e1a0     03a0  
    2087 0000e1b0                   X32     a14
    2088 0000e1c0     0b2e          addi    process_ptrs,a14
         0000e1d0 00000000! 
    2089 0000e1f0     87ce          move    *a14,a14,L
    2090 0000e200     b5c2          move    *a14(PLYRMODE),a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

         0000e210     05c0  
    2091 0000e220     0b42          cmpi    MODE_DEAD,a2
         0000e230     fff6  
    2092 0000e240     ca3e          jrz     alzkno
    2093 0000e250     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000e260     0100  
    2094 0000e270     b7c2          move    *a14(OBJ_XPOS),a2,L
         0000e280     0100  
    2095 0000e290     4441          sub     a2,a1
    2096 0000e2a0     0381          abs     a1
    2097 0000e2b0     2e01          srl     16,a1
    2098 0000e2c0     0b41          cmpi    20h,a1  ;28
         0000e2d0     ffdf  
    2099 0000e2e0     c434          jrlt    alzkno
    2100                    
    2101                    ;At head or feet!
    2102                    
    2103 0000e2f0     b5ce          move    *a14(OBJ_CONTROL),a14
         0000e300     0780  
    2104 0000e310     0b8e          andi    M_FLIPH,a14
         0000e320 ffffffef  
    2105 0000e340     b5a0          move    *a13(OBJ_CONTROL),a0
         0000e350     0780  
    2106 0000e360     0b80          andi    M_FLIPH,a0
         0000e370 ffffffef  
    2107 0000e390     480e          cmp     a0,a14
    2108 0000e3a0     ca28          jrz     alzkno
    2109                    
    2110                    ;At head!  Do hair pickup.
    2111                    
    2112 0000e3b0                   FACE24  shn,hair_pickup_anim
    2113 0000e450     0d5f          calla   change_anim1
         0000e460 00000000! 
    2114 0000e480                   WRSND   W_SHAWN,LBOWDROP_T1,LBOWDROP_T2
    2115 0000e620     0960          rets
    2116                    
    2117 0000e630           alzkno  FACE24  shn,falling_punch_anim
    2118 0000e6d0     0d5f          calla   change_anim1a
         0000e6e0 00000000! 
    2119 0000e700                   WRSND   W_SHAWN,LBOWDROP_T1,LBOWDROP_T2
    2120 0000e8a0     0960          rets
    2121                    
    2122                    
    2123                    ************
    2124 0000e8b0           alzkkick                ;8
    2125                    *
    2126                    * MODE             DX  DZ       ACTION
    2127                    * ----------------------------------------------------
    2128                    * normal        <  60   50      knee
    2129                    *               >               normal kick
    2130                    *
    2131                    * onground      < 120  120      stomp
    2132                    * onground      >               normal kick
    2133                    *
    2134                    * running |
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2135                    * bouncing                      big boot
    2136                    *
    2137                    * onturnbkl |                   normal kick
    2138                    * climbturnbkl                  normal kick
    2139                    *
    2140                    * puppet|inair                  normal kick
    2141                    *
    2142                    
    2143                    
    2144 0000e8b0                   JJXM_INIT
    2145 0000e920                   JJXM    NORMAL,          60, 50,alzkkick_knee,alzkkick_kick
    2146 0000e9f0                   JJXM    DIZZY,           60, 50,alzkkick_knee,alzkkick_kick
    2147 0000eac0                   JJXM    BLOCK,           60, 50,alzkkick_knee,alzkkick_kick
    2148 0000eb90                   JJXM    ONGROUND,       160,140,alzkkick_stomp,alzkkick_kick
    2149 0000ec60                   JJXM    RUNNING,                alzkkick_kick
    2150 0000ecb0                   JJXM    BOUNCING,               alzkkick_kick
    2151 0000ed00                   JJXM    ONTURNBKL,              alzkkick_kick
    2152 0000ed50                   JJXM    CLIMBTURNBKL,           alzkkick_kick
    2153 0000eda0                   JJXM    PUPPET,                 alzkkick_kick
    2154 0000edf0                   JJXM    PUPPET2,                alzkkick_kick
    2155 0000ee40                   JJXM    INAIR,                  alzkkick_kick
    2156 0000ee90                   JJXM    ATTACHED,        60, 50,alzkkick_knee,alzkkick_kick
    2157 0000ef60                   JJXM    DEAD,           160,140,alzkkick_stomp,alzkkick_kick
    2158 0000f010                   JJXM    OPPOVERHEAD,     60, 50,alzkkick_knee,alzkkick_kick
    2159 0000f0c0                   JJXM    WAITANIM,        60, 50,alzkkick_knee,alzkkick_kick
    2160 0000f170                   JJXM    GRAPPLE,         60, 50,alzkkick_knee,alzkkick_kick
    2161 0000f220                   JJXM    MASTER,          60, 50,alzkkick_knee,alzkkick_kick
    2162 0000f2c0                   JJXM    SLAVE,           60, 50,alzkkick_knee,alzkkick_kick
    2163 0000f360                   JJXM    HEADHOLD,        60, 50,alzkkick_knee,alzkkick_kick
    2164 0000f400                   JJXM    HEADHELD,        60, 50,alzkkick_knee,alzkkick_kick
    2165 0000f4a0                   JJXM    CHOKEHOLD,       60, 50,alzkkick_knee,alzkkick_kick
    2166 0000f540                   JJXM    INAIR2,                 alzkkick_TB
    2167 0000f580                   JJXM_END
    2168                    
    2169                    *****
    2170 0000f5a0           alzkkick_TB
    2171                            .ref    shn_spinkick_TB_anim
    2172 0000f5a0     09e0          movi    shn_spinkick_TB_anim,a0
         0000f5b0 00000000! 
    2173 0000f5d0     0d5f          calla   change_anim1a
         0000f5e0 00000000! 
    2174                    
    2175 0000f600                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2176 0000f7a0     0960          rets
    2177                    
    2178                    
    2179                    *****
    2180 0000f7b0           alzkkick_kick
    2181 0000f7b0           std_kick
    2182                    
    2183 0000f7b0                   FACE24  shn,kick_anim
    2184 0000f850     0d5f          calla   change_anim1a
         0000f860 00000000! 
    2185                    
    2186 0000f880                   WRSND   W_SHAWN,KICK_T1,KICK_T2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2187 0000fa20     0960          rets
    2188                    
    2189                    *****
    2190 0000fa30           alzkkick_knee
    2191 0000fa30           std_knee
    2192                    
    2193 0000fa30                   FACE24  shn,knee_anim
    2194 0000fad0     c003          jruc    alzkknee_set
    2195 0000fae0           std_knee_4
    2196 0000fae0     09e0          movi    shn_4_knee_anim,a0
         0000faf0 00000000! 
    2197 0000fb10           alzkknee_set
    2198 0000fb10     0d5f          calla   change_anim1a
         0000fb20 00000000! 
    2199                    
    2200 0000fb40                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2201 0000fce0     0960          rets
    2202                    
    2203                    *****
    2204 0000fcf0           alzkkick_stomp
    2205                    
    2206 0000fcf0                   FACE24  shn,stomp_anim
    2207 0000fd90     0d5f          calla   change_anim1a
         0000fda0 00000000! 
    2208                    
    2209 0000fdc0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2210 0000ff60     0960          rets
    2211                    
    2212                    ************
    2213 0000ff70           alzkpunchkick   ;9
    2214                    
    2215 0000ff70     09e0          movi    start_run_anim,a0
         0000ff80 00000000! 
    2216 0000ffa0     0d5f          calla   change_anim1a
         0000ffb0 00000000! 
    2217                    
    2218 0000ffd0     0960          rets
    2219                    
    2220                    ************
    2221 0000ffe0           alzksuper_kick  ;16
    2222                    *
    2223                    * MODE             DX  DZ       ACTION
    2224                    * ----------------------------------------------------
    2225                    * normal                        speed kick or spin kick (depends on stick)
    2226                    *
    2227                    * onground      < 120  120      stomp
    2228                    * onground      >               normal kick
    2229                    *
    2230                    * running |
    2231                    * bouncing                      flying kick
    2232                    *
    2233                    * most others                   as MODE_NORMAL
    2234                    *
    2235                    
    2236 0000ffe0                   JJXM_INIT
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2237 00010050                   JJXM    NORMAL,                 alzkskick_kick
    2238 000100a0                   JJXM    DIZZY,                  alzkskick_kick
    2239 000100f0                   JJXM    BLOCK,                  alzkskick_kick
    2240 00010140                   JJXM    ONGROUND,       160,140,alzkskick_stomp,std_kick
    2241 00010210                   JJXM    RUNNING,                alzkskick_frank
    2242 00010250                   JJXM    BOUNCING,               alzkskick_frank
    2243 00010290                   JJXM    ONTURNBKL,              alzkskick_kick
    2244 000102d0                   JJXM    CLIMBTURNBKL,           alzkskick_kick
    2245 00010310                   JJXM    PUPPET,                 alzkskick_kick
    2246 00010350                   JJXM    PUPPET2,                alzkskick_kick
    2247 00010390                   JJXM    INAIR,                  alzkskick_kick
    2248 000103d0                   JJXM    ATTACHED,               alzkskick_kick
    2249 00010410                   JJXM    DEAD,           160,140,alzkskick_stomp,std_kick
    2250 000104d0                   JJXM    OPPOVERHEAD,            alzkskick_kick
    2251 00010510                   JJXM    WAITANIM,               alzkskick_kick
    2252 00010550                   JJXM    GRAPPLE,                alzkskick_kick
    2253 00010590                   JJXM    MASTER,                 alzkskick_kick
    2254 000105d0                   JJXM    SLAVE,                  alzkskick_kick
    2255 00010610                   JJXM    HEADHOLD,               alzkskick_kick
    2256 00010650                   JJXM    HEADHELD,               alzkskick_kick
    2257 00010690                   JJXM    CHOKEHOLD,              alzkskick_kick
    2258 000106d0                   JJXM    INAIR2,                 alzkkick_TB
    2259 00010720                   JJXM_END
    2260                    
    2261                    *****
    2262 00010740           alzkskick_frank
    2263                    
    2264                    ;don't do it if opponent is behind you
    2265 00010740     0d5f          calla   ck_ignore
         00010750 00000000! 
    2266 00010770     c821          jrc     alzkskick_kick
    2267                    
    2268 00010780     09e0          movi    shn_fstein_anim,a0
         00010790 00000000! 
    2269 000107b0     0d5f          calla   change_anim1a
         000107c0 00000000! 
    2270 000107e0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2271 00010980     0960          rets
    2272                    
    2273                    *****
    2274 00010990           alzkskick_kick
    2275                    
    2276 00010990     09e0          movi    shn_spinkick_anim,a0
         000109a0 00000000! 
    2277 000109c0     0d5f          calla   change_anim1a
         000109d0 00000000! 
    2278                    
    2279 000109f0                   WRSND   W_SHAWN,FLYKICK_T1,FLYKICK_T2
    2280 00010b90     0960          rets
    2281                    
    2282                    *****
    2283 00010ba0           alzkskick_stomp
    2284                    
    2285 00010ba0                   FACE24  shn,stomp_anim
    2286 00010c40     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

         00010c50 00000000! 
    2287                    
    2288 00010c70                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2289 00010e10     0960          rets
    2290                    
    2291                    *****
    2292 00010e20           alzkskick_flykick
    2293 00010e20           attack_flykick
    2294                    
    2295 00010e20     0d5f          calla   ck_ignore
         00010e30 00000000! 
    2296 00010e50     c800          jrc     alzkz
         00010e60     fa55  
    2297                    
    2298                            ;don't do it if the bad guy is on the ground
    2299 00010e70     0d5f          calla   get_opp_plyrmode
         00010e80 00000000! 
    2300 00010ea0     0b40          cmpi    MODE_ONGROUND,a0
         00010eb0     fffb  
    2301 00010ec0     ca2e          jreq    alzkrets
    2302 00010ed0     0b40          cmpi    MODE_DEAD,a0
         00010ee0     fff6  
    2303 00010ef0     ca2b          jreq    alzkrets
    2304                    
    2305 00010f00                   SETMODE INAIR
    2306                    
    2307 00010fb0     09e0          movi    shn_flying_kick_anim,a0
         00010fc0 00000000! 
    2308 00010fe0     0d5f          calla   change_anim1a
         00010ff0 00000000! 
    2309                    
    2310 00011010                   WRSND   W_SHAWN,FLYKICK_T1,FLYKICK_T2
    2311 000111b0           alzkrets
    2312 000111b0     0960          rets
    2313                    
    2314                    *****
    2315 000111c0           alzkskick_super_speedkick
    2316                    
    2317 000111c0     09e0          movi    shn_super_speedkick_anim,a0
         000111d0 00000000! 
    2318 000111f0     0d5f          calla   change_anim1a
         00011200 00000000! 
    2319                    
    2320 00011220                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2321 000113c0     0960          rets
    2322                    
    2323                    
    2324                    *****************************************************************************
    2325                    *
    2326                    * RUNNING (if GETUP_TIME > 0 then player is out of control)
    2327                    *
    2328                    
    2329          00064000  jizjXRUN_VAL    equ     SHN_XRUN
    2330          00028000  jizjZDRIFT_VAL  equ     SHN_ZDRIFT
    2331                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   51

    2332 000113d0           mode_running
    2333                    
    2334 000113d0     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         000113e0     07b0  
    2335 000113f0     1020          addk    1,a0
    2336 00011400     b00d          move    a0,*a13(RUN_TIME)
         00011410     07b0  
    2337                    
    2338 00011420     b5a0          move    *a13(USR_VAR1),a0
         00011430     0850  
    2339 00011440     cb11          jrnz    jizjno_vel
    2340                    
    2341 00011450     0d5f          calla   bounce_off_ropes
         00011460 00000000! 
    2342                    
    2343 00011480     09e0          movi    jizjXRUN_VAL,a0
         00011490 00064000  
    2344 000114b0     b5ae          move    *a13(MOVE_DIR),a14
         000114c0     04b0  
    2345 000114d0     1f8e          btst    PLAYER_RIGHT_BIT,a14
    2346 000114e0     cb01          jrnz    jizjpos
    2347 000114f0     03a0          neg     a0
    2348 00011500           jizjpos
    2349 00011500     05ae          move    @hyper_speed_on,a14
         00011510 00000000! 
    2350 00011530     63c0          sll     a14,a0
    2351 00011540     b20d          move    a0,*a13(OBJ_XVEL),L
         00011550     02d0  
    2352                    
    2353 00011560           jizjno_vel
    2354                    
    2355 00011560     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         00011570     0460  
    2356 00011580     cb38          jrnz    jizjout_of_control
    2357                    
    2358 00011590     b5a0          move    *a13(ANIMODE),a0
         000115a0     0660  
    2359 000115b0     1fa0          btst    MODE_UNINT_BIT,a0
    2360 000115c0     cb16          jrnz    jizjno_interrupt
    2361                    
    2362 000115d0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000115e0     0bc0  
    2363 000115f0     b5a1          move    *a13(MOVE_DIR),a1
         00011600     04b0  
    2364 00011610     5401          or      a0,a1
    2365 00011620     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00011630 fffffff3  
    2366 00011650     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         00011660     fff3  
    2367 00011670     cb0b          jrne    jizjcontinue_run
    2368                    
    2369                            ;braking with stick.  abort run.
    2370                    
    2371 00011680                   SETMODE NORMAL
    2372                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   52

    2373 00011730           jizjcontinue_run
    2374 00011730           jizjno_interrupt
    2375                    
    2376 00011730     b5a0          move    *a13(STICK_VAL_CUR),a0
         00011740     0bc0  
    2377 00011750     5621          clr     a1
    2378                    
    2379 00011760     09e1          movi    -jizjZDRIFT_VAL,a1
         00011770 fffd8000  
    2380 00011790     1fe0          btst    PLAYER_UP_BIT,a0
    2381 000117a0     cb06          jrnz    jizjsetvel
    2382                    
    2383 000117b0     09e1          movi    jizjZDRIFT_VAL,a1
         000117c0 00028000  
    2384 000117e0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2385 000117f0     cb01          jrnz    jizjsetvel
    2386                    
    2387 00011800     5621          clr     a1
    2388 00011810           jizjsetvel
    2389 00011810     b22d          move    a1,*a13(OBJ_ZVEL),L
         00011820     0310  
    2390                    
    2391                    ;Delay reading buttons after just getting out of an out of control run
    2392                    ;so a mistaken move isn't fired off
    2393 00011830     b5a0          move    *a13(DELAY_BUTNS),a0
         00011840     0ab0  
    2394 00011850     cb0b          jrnz    jizjout_of_control
    2395                    
    2396 00011860     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011870     0ba0  
    2397 00011880     0b80          andi    011111b,a0
         00011890 ffffffe0  
    2398 000118b0                   X32     a0
    2399 000118c0     0b20          addi    jizjaction_table,a0
         000118d0 00011920' 
    2400 000118f0     8600          move    *a0,a0,L
    2401 00011900     0920          call    a0
    2402 00011910           jizjout_of_control
    2403 00011910     0960          rets
    2404                    
    2405 00011920           jizjaction_table
    2406 00011920 00011d20'         .long   jizjz,jizjpunch,jizjblock,jizjblock                     ;0-3
    2407 000119a0 00012490'         .long   jizjsuper_punch,jizjsuper_punch,jizjblock,jizjblock     ;4-7
    2408 00011a20 00012e40'         .long   jizjkick,jizjpunchkick,jizjblock,jizjblock              ;8-11
    2409 00011aa0 00012490'         .long   jizjsuper_punch,jizjpunchkick,jizjblock,jizjblock       ;12-15
    2410 00011b20 00013640'         .long   jizjsuper_kick,jizjsuper_kick,jizjblock,jizjblock       ;16-19
    2411 00011ba0 00012490'         .long   jizjgraboh,jizjgraboh,jizjblock,jizjblock               ;20-23
    2412 00011c20 00013640'         .long   jizjsuper_kick,jizjpunchkick,jizjblock,jizjblock        ;24-27
    2413 00011ca0 00012490'         .long   jizjgraboh,jizjgraboh,jizjblock,jizjblock               ;28-31
    2414                    
    2415                    ************
    2416 00011d20           jizjz           ;0
    2417                    
    2418 00011d20     0960          rets
    2419                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   53

    2420                    
    2421                    ************
    2422 00011d30           jizjpunch               ;1
    2423 00011d30           jizjpunchkick   ;9
    2424                    *
    2425                    * MODE             DX  DZ       ACTION
    2426                    * ----------------------------------------------------
    2427                    * normal|dizzy                  flying kick
    2428                    *
    2429                    * onground                      running stomp
    2430                    *
    2431                    * running |
    2432                    * bouncing                      flying kick
    2433                    *
    2434                    * onturnbkl                     flying kick
    2435                    *
    2436                    * puppet|inair                  flying kick
    2437                    *
    2438                    
    2439 00011d30                   JJXM_INIT
    2440 00011da0                   JJXM    NORMAL,                 jizjpunch_rets
    2441 00011de0                   JJXM    DIZZY,                  jizjpunch_rets
    2442 00011e20                   JJXM    BLOCK,                  jizjpunch_rets
    2443 00011e60                   JJXM    ONGROUND,               attack_runstomp
    2444 00011eb0                   JJXM    RUNNING,                jizjpunch_rets
    2445 00011ef0                   JJXM    BOUNCING,               jizjpunch_rets
    2446 00011f30                   JJXM    ONTURNBKL,              jizjpunch_rets
    2447 00011f70                   JJXM    CLIMBTURNBKL,           jizjpunch_rets
    2448 00011fb0                   JJXM    PUPPET,                 jizjpunch_rets
    2449 00011ff0                   JJXM    PUPPET2,                jizjpunch_rets
    2450 00012030                   JJXM    INAIR,                  jizjpunch_rets
    2451 00012070                   JJXM    ATTACHED,               jizjpunch_rets
    2452 000120b0                   JJXM    DEAD,                   attack_runstomp
    2453 00012100                   JJXM    OPPOVERHEAD,            jizjpunch_rets
    2454 00012140                   JJXM    WAITANIM,               jizjpunch_rets
    2455 00012180                   JJXM    GRAPPLE,                jizjpunch_rets
    2456 000121c0                   JJXM    MASTER,                 jizjpunch_rets
    2457 00012200                   JJXM    SLAVE,                  jizjpunch_rets
    2458 00012240                   JJXM    HEADHOLD,               jizjpunch_rets
    2459 00012280                   JJXM    HEADHELD,               jizjpunch_rets
    2460 000122c0                   JJXM    CHOKEHOLD,              jizjpunch_rets
    2461 00012300                   JJXM    INAIR2,                 jizjpunch_rets
    2462 00012340                   JJXM_END
    2463                    
    2464 00012360           jizjpunch_rets
    2465 00012360     0960          rets
    2466                    
    2467                    
    2468                    ************
    2469 00012370           jizjblock               ;2
    2470                    
    2471 00012370     b7a0          move    *a13(OBJ_XVEL),a0,L
         00012380     02d0  
    2472 00012390     2be0          sra     1,a0
    2473 000123a0     b20d          move    a0,*a13(OBJ_XVEL),L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   54

         000123b0     02d0  
    2474 000123c0                   SETMODE NORMAL
    2475 00012470     c000          jruc    std_block
         00012480     fa3b  
    2476                    
    2477                    
    2478                    ************
    2479 00012490           jizjsuper_punch ;4
    2480 00012490           jizjgraboh              ;20
    2481                    *
    2482                    * MODE             DX  DZ       ACTION
    2483                    * ----------------------------------------------------
    2484                    * normal|dizzy                  flying kick
    2485                    *
    2486                    * onground                      running stomp
    2487                    *
    2488                    * running |
    2489                    * bouncing                      flying kick
    2490                    *
    2491                    * onturnbkl                     flying kick
    2492                    *
    2493                    * puppet|inair                  flying kick
    2494                    *
    2495                    
    2496 00012490                   JJXM_INIT
    2497 00012500                   JJXM    NORMAL,                 jizjpunch_flipslam
    2498 00012540                   JJXM    DIZZY,                  jizjpunch_flipslam
    2499 00012580                   JJXM    BLOCK,                  jizjpunch_flipslam
    2500 000125c0                   JJXM    ONGROUND,       176,176,attack_runstomp,jizjspunch_rets
    2501 00012670                   JJXM    RUNNING,                jizjpunch_flipslam
    2502 000126b0                   JJXM    BOUNCING,               jizjpunch_flipslam
    2503 000126f0                   JJXM    ONTURNBKL,              jizjspunch_rets
    2504 00012730                   JJXM    CLIMBTURNBKL,           jizjspunch_rets
    2505 00012770                   JJXM    PUPPET,                 jizjspunch_rets
    2506 000127b0                   JJXM    PUPPET2,                jizjspunch_rets
    2507 000127f0                   JJXM    INAIR,                  jizjspunch_rets
    2508 00012830                   JJXM    ATTACHED,               jizjspunch_rets
    2509 00012870                   JJXM    DEAD,         176,176,attack_runstomp,jizjspunch_rets
    2510 00012920                   JJXM    OPPOVERHEAD,            jizjspunch_rets
    2511 00012960                   JJXM    WAITANIM,               jizjspunch_rets
    2512 000129a0                   JJXM    GRAPPLE,                jizjspunch_rets
    2513 000129e0                   JJXM    MASTER,                 jizjspunch_rets
    2514 00012a20                   JJXM    SLAVE,                  jizjspunch_rets
    2515 00012a60                   JJXM    HEADHOLD,               jizjspunch_rets
    2516 00012aa0                   JJXM    HEADHELD,               jizjspunch_rets
    2517 00012ae0                   JJXM    CHOKEHOLD,              jizjspunch_rets
    2518 00012b20                   JJXM    INAIR2,                 jizjspunch_rets
    2519 00012b60                   JJXM_END
    2520                    
    2521 00012b80           jizjspunch_rets
    2522 00012b80     0960          rets
    2523                    
    2524                    
    2525                    ************
    2526 00012b90           jizjpunch_flipslam
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   55

    2527                    
    2528                            ;don't do it if you're running away from your opponent.
    2529 00012b90     b5a0          move    *a13(FACING_DIR),a0
         00012ba0     04c0  
    2530 00012bb0     b5a1          move    *a13(NEW_FACING_DIR),a1
         00012bc0     04d0  
    2531 00012bd0     5001          and     a0,a1
    2532 00012be0     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         00012bf0 fffffff3  
    2533 00012c10     ca00          jrz     jizjz
         00012c20     ff0f  
    2534                    
    2535 00012c30     09e0          movi    shn_flipslam_anim,a0
         00012c40 00000000! 
    2536 00012c60     0d5f          calla   change_anim1a
         00012c70 00000000! 
    2537                    
    2538 00012c90                   WRSND   W_SHAWN,HIPTOSS_T1,PUNCH_T2
    2539 00012e30     0960          rets
    2540                    
    2541                    ************
    2542 00012e40           jizjkick                ;8
    2543                    *
    2544                    * MODE             DX  DZ       ACTION
    2545                    * ----------------------------------------------------
    2546                    * normal|dizzy                  flying kick
    2547                    *
    2548                    * onground                      running stomp
    2549                    *
    2550                    * running |
    2551                    * bouncing                      flying kick
    2552                    *
    2553                    * onturnbkl                     flying kick
    2554                    *
    2555                    * puppet|inair                  flying kick
    2556                    *
    2557                    
    2558 00012e40                   JJXM_INIT
    2559 00012eb0                   JJXM    NORMAL,                 attack_flykick
    2560 00012f00                   JJXM    DIZZY,                  attack_flykick
    2561 00012f50                   JJXM    BLOCK,                  attack_flykick
    2562 00012fa0                   JJXM    ONGROUND,               jizjkick_runstomp
    2563 00012fe0                   JJXM    RUNNING,                attack_flykick
    2564 00013030                   JJXM    BOUNCING,               attack_flykick
    2565 00013080                   JJXM    ONTURNBKL,              attack_flykick
    2566 000130d0                   JJXM    CLIMBTURNBKL,           attack_flykick
    2567 00013120                   JJXM    PUPPET,                 attack_flykick
    2568 00013170                   JJXM    PUPPET2,                attack_flykick
    2569 000131c0                   JJXM    INAIR,                  attack_flykick
    2570 00013210                   JJXM    ATTACHED,               attack_flykick
    2571 00013260                   JJXM    DEAD,                   jizjkick_runstomp
    2572 000132a0                   JJXM    OPPOVERHEAD,            attack_flykick
    2573 000132f0                   JJXM    WAITANIM,               attack_flykick
    2574 00013340                   JJXM    GRAPPLE,                attack_flykick
    2575 00013390                   JJXM    MASTER,                 attack_flykick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   56

    2576 000133e0                   JJXM    SLAVE,                  attack_flykick
    2577 00013430                   JJXM    HEADHOLD,               attack_flykick
    2578 00013480                   JJXM    HEADHELD,               attack_flykick
    2579 000134d0                   JJXM    CHOKEHOLD,              attack_flykick
    2580 00013520                   JJXM    INAIR2,                 attack_flykick
    2581 00013570                   JJXM_END
    2582                            
    2583                    
    2584                    *****
    2585 00013590           jizjkick_runstomp
    2586 00013590           attack_runstomp
    2587                    
    2588 00013590     0d5f          calla   ck_ignore
         000135a0 00000000! 
    2589 000135c0     c806          jrc     jizjkick_rets
    2590                    
    2591 000135d0     09e0          movi    shn_run_stomp_anim,a0
         000135e0 00000000! 
    2592 00013600     0d5f          calla   change_anim1a
         00013610 00000000! 
    2593 00013630           jizjkick_rets
    2594 00013630     0960          rets
    2595                    
    2596                    
    2597                    
    2598                    ************
    2599 00013640           jizjsuper_kick  ;16
    2600                    *
    2601                    * MODE             DX  DZ       ACTION
    2602                    * ----------------------------------------------------
    2603                    * normal|dizzy                  frankensteiner
    2604                    *
    2605                    * onground                      flying kick
    2606                    *
    2607                    * running                       frankensteiner
    2608                    *
    2609                    * bouncing                      flying kick
    2610                    *
    2611                    * onturnbkl                     flying kick
    2612                    *
    2613                    * inair|puppet                  flying kick
    2614                    *
    2615                    
    2616 00013640                   JJXM_INIT
    2617 000136b0                   JJXM    NORMAL,                 jizjattack_fstein
    2618 000136f0                   JJXM    DIZZY,                  jizjattack_fstein
    2619 00013730                   JJXM    BLOCK,                  jizjattack_fstein
    2620 00013770                   JJXM    ONGROUND,               attack_runstomp
    2621 000137b0                   JJXM    RUNNING,                jizjattack_fstein
    2622 000137f0                   JJXM    BOUNCING,               jizjattack_fstein
    2623 00013830                   JJXM    ONTURNBKL,              attack_flykick
    2624 00013880                   JJXM    CLIMBTURNBKL,           attack_flykick
    2625 000138d0                   JJXM    INAIR,                  attack_flykick
    2626 00013920                   JJXM    PUPPET,                 attack_flykick
    2627 00013970                   JJXM    PUPPET2,                attack_flykick
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   57

    2628 000139c0                   JJXM    ATTACHED,               jizjattack_fstein
    2629 00013a00                   JJXM    DEAD,                   attack_runstomp
    2630 00013a40                   JJXM    OPPOVERHEAD,            jizjattack_fstein
    2631 00013a80                   JJXM    WAITANIM,               jizjattack_fstein
    2632 00013ac0                   JJXM    GRAPPLE,                jizjattack_fstein
    2633 00013b00                   JJXM    MASTER,                 jizjattack_fstein
    2634 00013b40                   JJXM    SLAVE,                  jizjattack_fstein
    2635 00013b80                   JJXM    HEADHOLD,               jizjattack_fstein
    2636 00013bc0                   JJXM    HEADHELD,               jizjattack_fstein
    2637 00013c00                   JJXM    CHOKEHOLD,              jizjattack_fstein
    2638 00013c40                   JJXM    INAIR2,                 jizjattack_fstein
    2639 00013c80                   JJXM_END
    2640                            
    2641                    
    2642                    *****
    2643 00013ca0           jizjattack_fstein
    2644                    
    2645                    ;don't do it if opponent is behind you
    2646 00013ca0     0d5f          calla   ck_ignore
         00013cb0 00000000! 
    2647 00013cd0     c82b          jrc     jizjrets
    2648                    
    2649 00013ce0     09e0          movi    shn_fstein_anim,a0
         00013cf0 00000000! 
    2650 00013d10     0d5f          calla   change_anim1a
         00013d20 00000000! 
    2651                    
    2652 00013d40                   SETMODE INAIR
    2653                    
    2654 00013df0                   WRSND   W_SHAWN,GRABHOLD_T1,GRABHOLD_T2
    2655 00013f90           jizjrets
    2656                    
    2657                    *****************************************************************************
    2658                    *
    2659                    
    2660 00013f90           mode_inair      ;2
    2661                    
    2662 00013f90     0960          rets
    2663                    
    2664                    *****************************************************************************
    2665                    *
    2666                    
    2667 00013fa0           mode_attached   ;3
    2668                    
    2669 00013fa0     0d5f          calla   keep_attached
         00013fb0 00000000! 
    2670 00013fd0     cb12          jrnz    mqspstill_attached
    2671                    
    2672 00013fe0     5600          clr     a0
    2673 00013ff0     b20d          move    a0,*a13(ATTACH_PROC),L
         00014000     03e0  
    2674                    
    2675 00014010                   SETMODE NORMAL
    2676                    
    2677 000140c0     09c0          movi    MODE_NORMAL,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   58

         000140d0     0000  
    2678 000140e0     b00d          move    a0,*a13(ANIMODE)
         000140f0     0660  
    2679                    
    2680 00014100           mqspstill_attached
    2681 00014100     0960          rets
    2682                    
    2683                    *****************************************************************************
    2684                    
    2685 00014110           mode_onground   ;4
    2686                    
    2687 00014110     0960          rets
    2688                    
    2689                    
    2690                    *****************************************************************************
    2691                    *
    2692                    * bouncing off ropes while running
    2693                    
    2694 00014120           mode_bouncing   ;5
    2695                    
    2696 00014120     5600          clr     a0
    2697 00014130     b20d          move    a0,*a13(OBJ_XVEL),L
         00014140     02d0  
    2698 00014150     b20d          move    a0,*a13(OBJ_ZVEL),L
         00014160     0310  
    2699                    
    2700 00014170     b5a0          move    *a13(ANIMODE),a0
         00014180     0660  
    2701 00014190     1fe0          btst    MODE_END_BIT,a0
    2702 000141a0     ca20          jrz     eeynnot_ended
    2703                    
    2704 000141b0     b5a0          move    *a13(MOVE_DIR),a0
         000141c0     04b0  
    2705 000141d0     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         000141e0 0000000c  
    2706 00014200     b00d          move    a0,*a13(MOVE_DIR)
         00014210     04b0  
    2707                    
    2708 00014220     b5a1          move    *a13(NEW_FACING_DIR),a1
         00014230     04d0  
    2709 00014240     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         00014250 fffffffc  
    2710 00014270     5401          or      a0,a1                   ;LEFT or RIGHT
    2711 00014280     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         00014290     04c0  
    2712                    
    2713 000142a0     09e0          movi    shn_run2_anim,a0
         000142b0 00000000! 
    2714 000142d0     0d5f          calla   change_anim1a
         000142e0 00000000! 
    2715                    
    2716 00014300                   SETMODE RUNNING
    2717                    
    2718                    ;       clr     a0
    2719                    ;       move    a0,*a13(GETUP_TIME)     ;in control
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   59

    2720                    
    2721 000143b0           eeynnot_ended
    2722 000143b0     0960          rets
    2723                    
    2724                    *****************************************************************************
    2725                    *
    2726                    * STANDING ON TOP OF TURNBUCKLE
    2727                    
    2728 000143c0           mode_onturnbkl  ;6
    2729                    
    2730                    ;       ;check unint
    2731                    ;       move    *a13(ANIMODE),a14
    2732                    ;       btst    MODE_UNINT_BIT,a14
    2733                    ;       jrnz    yqpzno_interrupt
    2734                    
    2735 000143c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000143d0     0bc0  
    2736 000143e0     1fc0          btst    PLAYER_DOWN_BIT,a0
    2737 000143f0     ca12          jrz     yqpzno_climbdown
    2738                    
    2739 00014400     09e0          movi    shn_climb_down_anim,a0
         00014410 00000000! 
    2740 00014430     0d5f          calla   change_anim1a
         00014440 00000000! 
    2741                    
    2742 00014460                   SETMODE CLIMBTURNBKL
    2743                    
    2744 00014510           yqpzno_interrupt
    2745 00014510     0960          rets
    2746                    
    2747 00014520           yqpzno_climbdown
    2748 00014520     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00014530     0ba0  
    2749 00014540     0b80          andi    011111b,a0
         00014550 ffffffe0  
    2750 00014570     ca51          jrz     yqpzz
    2751                    
    2752 00014580                   X32     a0
    2753 00014590     0b20          addi    yqpzaction_table,a0
         000145a0 00014690' 
    2754 000145c0     8600          move    *a0,a0,L
    2755 000145d0     0920          call    a0
    2756                    
    2757 000145e0     b5a5          move    *a13(PLYRNUM),a5
         000145f0     0580  
    2758 00014600     09e2          movi    JUMP_ROPES,a2
         00014610 00000000! 
    2759 00014630     09c0          movi    1000,a0
         00014640     03e8  
    2760 00014650     0d5f          calla   ADD_IF_SILENT
         00014660 00000000! 
    2761                    
    2762 00014680     0960          rets
    2763                    
    2764                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   60

    2765                    ;For standing on top of turnbuckles
    2766                    
    2767 00014690           yqpzaction_table
    2768 00014690 00014a90'         .long   yqpzz,yqpzpunch,yqpzblock,yqpzblock                     ;0-3
    2769 00014710 00014aa0'         .long   yqpzsuper_punch,yqpzsuper_punch,yqpzblock,yqpzblock     ;4-7
    2770 00014790 00014d60'         .long   yqpzkick,yqpzpunchkick,yqpzblock,yqpzblock              ;8-11
    2771 00014810 00014aa0'         .long   yqpzsuper_punch,yqpzpunchkick,yqpzblock,yqpzblock       ;12-15
    2772 00014890 00014d60'         .long   yqpzsuper_kick,yqpzsuper_kick,yqpzblock,yqpzblock       ;16-19
    2773 00014910 00014aa0'         .long   yqpzgraboh,yqpzgraboh,yqpzblock,yqpzblock               ;20-23
    2774 00014990 00014d60'         .long   yqpzsuper_kick,yqpzpunchkick,yqpzblock,yqpzblock        ;24-27
    2775 00014a10 00014aa0'         .long   yqpzgraboh,yqpzgraboh,yqpzblock,yqpzblock               ;28-31
    2776                    
    2777                    ;       .long   yqpzz                   ;0
    2778                    ;       .long   yqpzpunch                       ;1
    2779                    ;       .long   yqpzblock                       ;2
    2780                    ;       .long   yqpzz                   ;3
    2781                    ;       .long   yqpzsuper_punch         ;4
    2782                    ;       .long   yqpzz,yqpzz,yqpzz               ;5-7
    2783                    ;       .long   yqpzkick                        ;8
    2784                    ;       .long   yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz       ;9-15
    2785                    ;       .long   yqpzsuper_kick          ;16
    2786                    ;       .long   yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz       ;17-23
    2787                    ;       .long   yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz,yqpzz ;24-31
    2788                    
    2789                    ************
    2790 00014a90           yqpzz
    2791 00014a90     0960          rets
    2792                    
    2793                    ************
    2794 00014aa0           yqpzpunch               ;1
    2795 00014aa0           yqpzblock               ;2
    2796 00014aa0           yqpzsuper_punch ;4
    2797 00014aa0           yqpzpunchkick   ;5
    2798 00014aa0           yqpzgraboh              ;20
    2799                    
    2800 00014aa0                   SETMODE INAIR
    2801                    
    2802 00014b50     09e0          movi    shn_belbow_anim,a0
         00014b60 00000000! 
    2803 00014b80     0d5f          calla   change_anim1a
         00014b90 00000000! 
    2804 00014bb0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2805 00014d50     0960          rets
    2806                    
    2807                    ************
    2808 00014d60           yqpzkick                ;8
    2809 00014d60           yqpzsuper_kick  ;16
    2810                    
    2811 00014d60                   SETMODE INAIR
    2812                    
    2813 00014e10     09e0          movi    shn_bstomp_anim,a0
         00014e20 00000000! 
    2814 00014e40     0d5f          calla   change_anim1a
         00014e50 00000000! 
    2815 00014e70                   WRSND   W_SHAWN,KICK_T1,KICK_T2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   61

    2816 00015010     0960          rets
    2817                    
    2818                    
    2819                    *****************************************************************************
    2820                    * blocking
    2821                    
    2822 00015020           mode_block      ;7
    2823                    
    2824 00015020     b5a0          move    *a13(BLOCK_TIME),a0
         00015030     0d30  
    2825 00015040     1020          inc     a0
    2826 00015050     b00d          move    a0,*a13(BLOCK_TIME)
         00015060     0d30  
    2827 00015070     0b40          cmpi    160,a0
         00015080     ff5f  
    2828 00015090     c413          jrlt    qhqgno
    2829                    
    2830 000150a0     0d5f          calla   get_opp_plyrmode
         000150b0 00000000! 
    2831 000150d0     0b40          cmpi    MODE_BLOCK,a0
         000150e0     fff8  
    2832 000150f0     cb0d          jrnz    qhqgno
    2833 00015100     b5a0          move    *a13(CLOSEST_XDIST),a0
         00015110     0370  
    2834 00015120     0b40          cmpi    61h,a0
         00015130     ff9e  
    2835 00015140     c508          jrge    qhqgno
    2836 00015150     0b40          cmpi    45,a0
         00015160     ffd2  
    2837 00015170     c405          jrlt    qhqgno
    2838 00015180     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00015190     0390  
    2839 000151a0     0b40          cmpi    30,a0
         000151b0     ffe1  
    2840 000151c0     c461          jrlt    qhqgpunchblock
    2841                    
    2842 000151d0           qhqgno
    2843 000151d0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000151e0     0ba0  
    2844 000151f0     0b80          andi    011111b,a0
         00015200 ffffffe0  
    2845 00015220     ca0c          jrz     qhqgno_interrupt
    2846                    
    2847                            ;press.  if block isn't down, let mode_normal handle it
    2848 00015230     4c02          move    a0,a2                   ;save a0 from ...val_down
    2849 00015240     b5a0          move    *a13(BUT_VAL_CUR),a0
         00015250     0b90  
    2850 00015260     1fc0          btst    PLAYER_BLOCK_BIT,a0
    2851 00015270     ca08          jrz     qhqgset_mode_normal
    2852 00015280     4c40          move    a2,a0                   ;restore a0 from ...val_down
    2853                    
    2854 00015290                   X32     a0
    2855 000152a0     0b20          addi    qhqgaction_table,a0
         000152b0 000153d0' 
    2856 000152d0     8600          move    *a0,a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   62

    2857 000152e0     0920          call    a0
    2858                    
    2859 000152f0           qhqgno_interrupt
    2860 000152f0     0960          rets
    2861                    
    2862 00015300           qhqgset_mode_normal
    2863 00015300                   SETMODE NORMAL
    2864 000153b0     c000          jruc    mode_normal
         000153c0     f509  
    2865                    
    2866 000153d0           qhqgaction_table
    2867 000153d0 000157d0'         .long   qhqgz,qhqgpunchblock,qhqgz      ;0-2
    2868 00015430 000157e0'         .long   qhqgpunchblock          ;3
    2869 00015450 000157d0'         .long   qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz       ;4-10
    2870 00015530 000157d0'         .long   qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz       ;11-17
    2871 00015610 000157d0'         .long   qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz       ;18-24
    2872 000156f0 000157d0'         .long   qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz,qhqgz       ;25-31
    2873                    
    2874                    ************
    2875 000157d0           qhqgz
    2876 000157d0     0960          rets
    2877                    
    2878                    ************
    2879 000157e0           qhqgpunchblock  ;3
    2880                    *
    2881                    * MODE             DX  DZ       ACTION
    2882                    * ----------------------------------------------------
    2883                    * all                           push
    2884                    *
    2885                    
    2886 000157e0                   SETMODE NORMAL
    2887                    
    2888 00015890     09e0          movi    shn_4_push_anim,a0
         000158a0 00000000! 
    2889 000158c0     0d5f          calla   change_anim1a
         000158d0 00000000! 
    2890                    
    2891 000158f0                   WRSND   W_SHAWN,PUSH_T1,PUSH_T2
    2892                    
    2893 00015a90     0960          rets
    2894                    
    2895                    
    2896                    *****************************************************************************
    2897                    * shawn with zero health
    2898                    
    2899 00015aa0           mode_dizzy      ;8
    2900                    
    2901                    ;       move    *a13(GETUP_TIME),a0
    2902                    ;       jrnz    nzyvstill_going
    2903                    ;
    2904                    ;       calla   clear_damage_log
    2905                    ;
    2906                    ;       clr     a0
    2907                    ;       move    a0,*a13(STARS_FLAG)
    2908                    ;
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   63

    2909                    ;       SETMODE NORMAL
    2910                    ;
    2911                    ;nzyvstill_going
    2912 00015aa0     0960          rets
    2913                    
    2914                    *****************************************************************************
    2915                    * opponent held overhead
    2916                    
    2917 00015ab0           mode_oppoverhead ;10
    2918                    
    2919 00015ab0     0960          rets
    2920                    
    2921                    *****************************************************************************
    2922                    *
    2923                    * CLIMBING UP OR DOWN THE TURNBUCKLE
    2924                    
    2925 00015ac0           mode_climbturnbkl       ;11
    2926                    
    2927 00015ac0     0960          rets
    2928                    
    2929                    
    2930                    *****************************************************************************
    2931                    
    2932 00015ad0           mode_waitanim   ;12
    2933                    
    2934 00015ad0     b5a0          move    *a13(ANIMODE),a0
         00015ae0     0660  
    2935 00015af0     1fe0          btst    MODE_END_BIT,a0
    2936 00015b00     ca03          jrz     uwionot_ended
    2937                    
    2938 00015b10     b7a0          move    *a13(CODE_ADDR),a0,L
         00015b20     0430  
    2939 00015b30     0920          call    a0
    2940                    
    2941 00015b40           uwionot_ended
    2942 00015b40     0960          rets
    2943                    
    2944                    
    2945                    *****************************************************************************
    2946                    
    2947 00015b50           mode_grapple    ;13
    2948                    
    2949 00015b50     0960          rets
    2950                    
    2951                    *****************************************************************************
    2952                    
    2953 00015b60           mode_master     ;14
    2954                    
    2955 00015b60     0d5f          calla   master_keep_attached    ;keep slave attached to me
         00015b70 00000000! 
    2956                    
    2957 00015b90     0960          rets
    2958                    
    2959                    *****************************************************************************
    2960                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   64

    2961 00015ba0           mode_slave      ;15
    2962 00015ba0     0960          rets
    2963                    
    2964                    *****************************************************************************
    2965                    
    2966 00015bb0           mode_headhold   ;16
    2967                    
    2968                    ;Bozo power move
    2969                            .ref    bozo_check
    2970 00015bb0     0d5f          calla   bozo_check
         00015bc0 00000000! 
    2971 00015be0     c929          jrnc    pvfqfail
    2972                    
    2973 00015bf0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    2974                    
    2975 00015d90     09e0          movi    shn_fstein_anim,a0
         00015da0 00000000! 
    2976 00015dc0     05ae          move    @PCNT,a14
         00015dd0 00000000! 
    2977 00015df0     1fee          btst    0,a14
    2978 00015e00     ca03          jrz     pvfqtag
    2979 00015e10     09e0          movi    shn_sliding_kicktoss_anim,a0
         00015e20 00000000! 
    2980 00015e40     0d5f  pvfqtag calla   change_anim1a
         00015e50 00000000! 
    2981                    
    2982 00015e70     0960          rets
    2983                    
    2984 00015e80           pvfqfail
    2985 00015e80     b7a0          move    *a13(WHOIHIT),a0,L
         00015e90     0500  
    2986 00015ea0     b400          move    *a0(PLYRMODE),a0
         00015eb0     05c0  
    2987 00015ec0     0b40          cmpi    MODE_HEADHELD,a0
         00015ed0     ffec  
    2988 00015ee0     cb10          jrnz    pvfqexit
    2989                    
    2990                    ;       move    *a13(ATTACH_PROC),a10,L
    2991                    ;       jrz     pvfqexit
    2992                    
    2993 00015ef0     b5a0          move    *a13(ANIMODE),a0
         00015f00     0660  
    2994 00015f10     1fa0          btst    MODE_UNINT_BIT,a0
    2995 00015f20     cb0b          jrnz    pvfqno_interrupt
    2996                    
    2997 00015f30     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00015f40     0ba0  
    2998 00015f50     0b80          andi    011111b,a0
         00015f60 ffffffe0  
    2999 00015f80                   X32     a0
    3000 00015f90     0b20          addi    pvfqaction_table,a0
         00015fa0 000161c0' 
    3001 00015fc0     8600          move    *a0,a0,L
    3002 00015fd0     0920          call    a0
    3003                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   65

    3004 00015fe0           pvfqno_interrupt
    3005 00015fe0     0960          rets
    3006                    
    3007 00015ff0           pvfqexit
    3008 00015ff0     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00016000     0140  
    3009 00016010     0d0e          subi    [6,0],a14
         00016020 fff9ffff  
    3010 00016040     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00016050     0140  
    3011                    
    3012 00016060     1941          movk    MOVE_DOWN_RIGHT,a1
    3013 00016070     b5a0          move    *a13(OBJ_CONTROL),a0
         00016080     0780  
    3014 00016090     1f60          btst    B_FLIPH,a0
    3015 000160a0     ca01          jrz     pvfqright
    3016 000160b0     18c1          movk    MOVE_DOWN_LEFT,a1
    3017 000160c0     b02d  pvfqright       move    a1,*a13(FACING_DIR)
         000160d0     04c0  
    3018 000160e0     b02d          move    a1,*a13(NEW_FACING_DIR)
         000160f0     04d0  
    3019                    
    3020 00016100                   SETMODE NORMAL
    3021                    
    3022 000161b0     0960          rets
    3023                    
    3024 000161c0           pvfqaction_table
    3025 000161c0 000165c0'         .long   pvfqz,pvfqpunch,pvfqblock,pvfqblock                     ;0-3
    3026 00016240 00016620'         .long   pvfqsuper_punch,pvfqsuper_punch,pvfqblock,pvfqblock     ;4-7
    3027 000162c0 000168f0'         .long   pvfqkick,pvfqpunchkick,pvfqblock,pvfqblock              ;8-11
    3028 00016340 00016620'         .long   pvfqsuper_punch,pvfqpunchkick,pvfqblock,pvfqblock       ;12-15
    3029 000163c0 00016b80'         .long   pvfqsuper_kick,pvfqsuper_kick,pvfqblock,pvfqblock       ;16-19
    3030 00016440 000165c0'         .long   pvfqgraboh,pvfqgraboh,pvfqblock,pvfqblock               ;20-23
    3031 000164c0 00016b80'         .long   pvfqsuper_kick,pvfqpunchkick,pvfqblock,pvfqblock        ;24-27
    3032 00016540 000165c0'         .long   pvfqgraboh,pvfqgraboh,pvfqblock,pvfqblock               ;28-31
    3033                    
    3034                    
    3035                    ************
    3036 000165c0           pvfqblock
    3037 000165c0           pvfqgraboh
    3038 000165c0           pvfqz           ;0
    3039 000165c0     0960          rets
    3040                    
    3041                    ************
    3042                    
    3043 000165d0           pvfqpunch               ;1
    3044 000165d0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000165e0 00000000! 
    3045                    ;If stick is toward opponent, then do quick punches
    3046                    ;       move    *a13(STICK_VAL_CUR),a0
    3047                    ;       move    *a13(NEW_FACING_DIR),a1
    3048                    ;       andi    0ch,a1
    3049                    ;       cmp     a0,a1
    3050                    ;       jrnz    std_knee_4
    3051                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   66

    3052 00016600     c000          jruc    std_knee_4
         00016610     f94c  
    3053                    
    3054                    ;       movi    shn_break_arm_anim,a0
    3055                    ;       calla   change_anim1a
    3056                    ;
    3057                    ;       WRSND   W_SHAWN,GRABHOLD_T1,GRABHOLD_T2
    3058                    ;
    3059                    ;       rets
    3060                    
    3061                    ************
    3062 00016620           pvfqsuper_punch ;4
    3063                    ;If stick is toward opponent, then do quick punches
    3064 00016620     b5a0          move    *a13(STICK_VAL_CUR),a0
         00016630     0bc0  
    3065 00016640     b5a1          move    *a13(NEW_FACING_DIR),a1
         00016650     04d0  
    3066 00016660     0b81          andi    0ch,a1
         00016670 fffffff3  
    3067 00016690     4801          cmp     a0,a1
    3068 000166a0     cbf1          jrnz    pvfqz
    3069                    
    3070 000166b0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000166c0 00000000! 
    3071                            .ref    shn_rpt_hdbutts2_anim
    3072 000166e0     09e0          movi    shn_rpt_hdbutts2_anim,a0
         000166f0 00000000! 
    3073 00016710     0d5f          calla   change_anim1a
         00016720 00000000! 
    3074                    
    3075 00016740                   WRSND   W_SHAWN,GRABHOLD_T1,GRABHOLD_T2
    3076                    
    3077 000168e0     0960          rets
    3078                    
    3079                    ************
    3080 000168f0           pvfqpunchkick
    3081 000168f0           pvfqkick
    3082 000168f0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00016900 00000000! 
    3083 00016920     b5a0          move    *a13(STICK_REL_CUR),a0
         00016930     0bf0  
    3084 00016940     1f80          btst    MOVE_TOWARD_BIT,a0
    3085 00016950     ca00          jrz     std_knee_4
         00016960     f917  
    3086                    
    3087                            ;speed kick - speed kick - speed kick - spin kick
    3088 00016970     09e0          movi    shn_speed_spinkick_anim,a0
         00016980 00000000! 
    3089 000169a0     0d5f          calla   change_anim1a
         000169b0 00000000! 
    3090 000169d0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    3091 00016b70     0960          rets
    3092                    
    3093                    ************
    3094 00016b80           pvfqsuper_kick  ;16
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   67

    3095                    ;If stick is toward opponent, then do quick knees
    3096 00016b80     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00016b90 00000000! 
    3097 00016bb0     b5a0          move    *a13(STICK_VAL_CUR),a0
         00016bc0     0bc0  
    3098 00016bd0     b5a1          move    *a13(NEW_FACING_DIR),a1
         00016be0     04d0  
    3099 00016bf0     0b81          andi    0ch,a1
         00016c00 fffffff3  
    3100 00016c20     4801          cmp     a0,a1
    3101 00016c30     cb98          jrnz    pvfqz
    3102                    
    3103                            ;knee - knee - knee - frankensteiner
    3104 00016c40     09e0          movi    shn_knee_fstein_anim,a0
         00016c50 00000000! 
    3105 00016c70     0d5f          calla   change_anim1a
         00016c80 00000000! 
    3106 00016ca0                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    3107 00016e40     0960          rets
    3108                    
    3109                    
    3110                    *****************************************************************************
    3111 00016e50           mode_puppet2    ;17
    3112                    
    3113                    ;       ;check for the head-grab breaker
    3114                    ;       move    *a13(BUT_VAL_DOWN),a0
    3115                    ;       btst    PLAYER_KICK_BIT,a0
    3116                    ;       jrz     gzskout
    3117                    ;
    3118                    ;       ;check the time - must do it within 20 ticks
    3119                    ;       move    *a13(HEAD_GRAB_TIME),a14
    3120                    ;       move    @PCNT,a0
    3121                    ;       sub     a14,a0
    3122                    ;       cmpi    KICK_OUT,a0
    3123                    ;       jrgt    gzskout
    3124                    ;
    3125                    ;       move    *a13(PLYR_TYPE),a14
    3126                    ;       cmpi    PTYPE_DRONE,a14
    3127                    ;       jrz     gzskout
    3128                    ;
    3129                    ;       ;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
    3130                    ;       move    *a13(ATTACH_PROC),a0,L
    3131                    ;       clr     a14
    3132                    ;       move    a14,*a13(ATTACH_PROC),L
    3133                    ;       move    a14,*a0(ATTACH_PROC),L
    3134                    ;       movi    15,a14
    3135                    ;       move    a14,*a0(IMMOBILIZE_TIME)
    3136                    ;       SETMODE NORMAL
    3137                    ;       jruc    std_knee_4
    3138                    ;
    3139                    ;gzskout
    3140 00016e50     0960          rets
    3141                    
    3142                    *****************************************************************************
    3143 00016e60           mode_headheld   ;19
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   68

    3144                    
    3145 00016e60     b5a0          move    *a13(ANIMODE),a0
         00016e70     0660  
    3146 00016e80     1f40          btst    MODE_NOGRAVITY_BIT,a0
    3147 00016e90     cb80          janz    mode_choking
         00016ea0 00000000! 
    3148                    
    3149                    ;Bozo reversal
    3150 00016ec0     0d5f          calla   bozo_check
         00016ed0 00000000! 
    3151 00016ef0     c932          jrnc    tygbfail
    3152                    
    3153 00016f00                   PUSH    a8
    3154 00016f10     4da8          move    a13,a8
    3155 00016f20     0d5f          CALLA   DO_REVERSAL
         00016f30 00000000! 
    3156 00016f50     0d5f          CALLA   DO_REVERSAL_MESS
         00016f60 00000000! 
    3157 00016f80                   PULL    a8
    3158                    
    3159 00016f90                   WRSND   W_SHAWN,KICK_T1,KICK_T2
    3160                    
    3161 00017130     09e0          movi    shn_fstein_anim,a0
         00017140 00000000! 
    3162 00017160     05ae          move    @PCNT,a14
         00017170 00000000! 
    3163 00017190     1fee          btst    0,a14
    3164 000171a0     ca03          jrz     tygbtag
    3165 000171b0     09e0          movi    shn_sliding_kicktoss_anim,a0
         000171c0 00000000! 
    3166 000171e0     0d5f  tygbtag calla   change_anim1a
         000171f0 00000000! 
    3167                    
    3168 00017210     0960          rets
    3169 00017220           tygbfail
    3170                    
    3171                    ;He may have let me go by hitting his block butn!
    3172 00017220     b7a0          move    *a13(ATTACH_PROC),a0,L
         00017230     03e0  
    3173 00017240     cb0c          jrnz    tygbno_luck
    3174                    
    3175                    ;Make sure this guy is on ground
    3176 00017250     b5a0          move    *a13(OBJ_YPOSINT),a0
         00017260     0130  
    3177 00017270     b5a1          move    *a13(GROUND_Y),a1
         00017280     0570  
    3178 00017290     4820          cmp     a1,a0                   ;a0-a1
    3179 000172a0     c706          jrgt    tygbno_luck
    3180                    
    3181                    ;hit_gnd
    3182                    
    3183 000172b0     09e0          movi    shn_3_head_held_stand_anim,a0
         000172c0 00000000! 
    3184 000172e0     0d5f          calla   change_anim1a
         000172f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   69

    3185                    
    3186 00017310           tygbno_luck
    3187 00017310     0960          rets
    3188                    
    3189                    *****************************************************************************
    3190 00017320           mode_chokehold  ;24
    3191 00017320     0960          rets
    3192                    
    3193                    *****************************************************************************
    3194                    
    3195                    ;gdupVEL        equ     30000h          ;38000h ;30000h
    3196                    ;gdupDVEL       equ     21f0eh          ;27978h ;21f0eh
    3197                    ;gdupVEL        equ     38000h          ;38000h ;30000h
    3198                    ;gdupDVEL       equ     30000h          ;27978h ;21f0eh
    3199          0003a000  gdupVEL equ     3a000h          ;38000h ;30000h
    3200          00031000  gdupDVEL        equ     31000h          ;27978h ;21f0eh
    3201                    
    3202                    
    3203 00017330            SUBR shn_velocity_table
    3204                    
    3205                    ;               X,      Z
    3206                    
    3207 00017330 00000000          .long   0,      -gdupVEL        ;0 UP
    3208                    
    3209 00017370 00031000          .long   gdupDVEL,       -gdupDVEL       ;1 UP-RIGHT
    3210                    
    3211 000173b0 0003a000          .long   gdupVEL,        0       ;2 RIGHT
    3212                    
    3213 000173f0 00031000          .long   gdupDVEL,       gdupDVEL        ;3 DOWN-RIGHT
    3214                    
    3215 00017430 00000000          .long   0,      gdupVEL ;4 DOWN
    3216                    
    3217 00017470 fffcf000          .long   -gdupDVEL,      gdupDVEL        ;5 DOWN-LEFT
    3218                    
    3219 000174b0 fffc6000          .long   -gdupVEL,       0       ;6 LEFT
    3220                    
    3221 000174f0 fffcf000          .long   -gdupDVEL,      -gdupDVEL       ;7 UP-LEFT
    3222                    
    3223                    
    3224                    *****************************************************************************
    3225                    
    3226 00017530            SUBR   shn_rotate_anims_table
    3227                    ; old = up right
    3228 00017530 00000000!         .long   shn_stand2_anim         ;new = up right
    3229 00017550 00000000!         .long   shn_2_to_4_turn_anim    ;    = down right
    3230 00017570 00000000!         .long   shn_2_to_6_turn_anim    ;    = down left
    3231 00017590 00000000!         .long   shn_2_to_8_turn_anim    ;    = up left
    3232                    
    3233                    ; old = down right
    3234 000175b0 00000000!         .long   shn_4_to_2_turn_anim    ;new = up right
    3235 000175d0 00000000!         .long   shn_stand4_anim         ;    = down right
    3236 000175f0 00000000!         .long   shn_4_to_6_turn_anim    ;    = down left
    3237 00017610 00000000!         .long   shn_4_to_8_turn_anim    ;    = up left
    3238                    
    3239                    ; old = down left
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   70

    3240 00017630 00000000!         .long   shn_6_to_2_turn_anim    ;new = up right
    3241 00017650 00000000!         .long   shn_6_to_4_turn_anim    ;    = down right
    3242 00017670 00000000!         .long   shn_stand6_anim         ;    = down left
    3243 00017690 00000000!         .long   shn_6_to_8_turn_anim    ;    = up left
    3244                    
    3245                    ; old = up left
    3246 000176b0 00000000!         .long   shn_8_to_2_turn_anim    ;new = up right
    3247 000176d0 00000000!         .long   shn_8_to_4_turn_anim    ;    = down right
    3248 000176f0 00000000!         .long   shn_8_to_6_turn_anim    ;    = down left
    3249 00017710 00000000!         .long   shn_stand8_anim         ;    = up left
    3250                    
    3251                    
    3252 00017730            SUBR   shn_leg_anims_table
    3253                    ;  MOVE
    3254                    ;(ybvn1 - UP)                           FACING
    3255 00017730 00000000!         .long   shn_walk1_f2_anim       ;1 (UP)
    3256 00017750 00000000!         .long   shn_walk1_f2_anim       ;2 (UP_RIGHT)
    3257 00017770 00000000!         .long   shn_walk1_f4_anim       ;3 (RIGHT)
    3258 00017790 00000000!         .long   shn_walk1_f4_anim       ;4 (DOWN_RIGHT)
    3259 000177b0 00000000!         .long   shn_walk1_f4_anim       ;5 (DOWN)
    3260 000177d0 00000000!         .long   shn_walk1_f4_anim       ;6 (DOWN_LEFT)
    3261 000177f0 00000000!         .long   shn_walk1_f2_anim       ;7 (LEFT)
    3262 00017810 00000000!         .long   shn_walk1_f2_anim       ;8 (UP-LEFT)
    3263                    
    3264                    ;(ybvn2 - UP-RIGHT)
    3265 00017830 00000000!         .long   shn_walk2_f2_anim       ;1 (UP)
    3266 00017850 00000000!         .long   shn_walk2_f2_anim       ;2 (UP_RIGHT)
    3267 00017870 00000000!         .long   shn_walk2_f2_anim       ;3 (RIGHT)
    3268 00017890 00000000!         .long   shn_walk2_f4_anim       ;4 (DOWN_RIGHT)
    3269 000178b0 00000000!         .long   shn_walk8_f4_anim       ;5 (DOWN)
    3270 000178d0 00000000!         .long   shn_walk8_f4_anim       ;6 (DOWN_LEFT)
    3271 000178f0 00000000!         .long   shn_walk4_f2_anim       ;7 (LEFT)
    3272 00017910 00000000!         .long   shn_walk4_f2_anim       ;8 (UP-LEFT)
    3273                    
    3274                    ;(ybvn3 - RIGHT)
    3275 00017930 00000000!         .long   shn_walk2_f2_anim       ;1 (UP)
    3276 00017950 00000000!         .long   shn_walk2_f2_anim       ;2 (UP_RIGHT)
    3277 00017970 00000000!         .long   shn_walk2_f2_anim       ;3 (RIGHT)
    3278 00017990 00000000!         .long   shn_walk4_f4_anim       ;4 (DOWN_RIGHT)
    3279 000179b0 00000000!         .long   shn_walk4_f4_anim       ;5 (DOWN)
    3280 000179d0 00000000!         .long   shn_walk8_f4_anim       ;6 (DOWN_LEFT)
    3281 000179f0 00000000!         .long   shn_walk6_f2_anim       ;7 (LEFT)
    3282 00017a10 00000000!         .long   shn_walk6_f2_anim       ;8 (UP-LEFT)
    3283                    
    3284                    
    3285                    ;(ybvn4 - DOWN-RIGHT)
    3286 00017a30 00000000!         .long   shn_walk2_f2_anim       ;1 (UP)
    3287 00017a50 00000000!         .long   shn_walk8_f2_anim       ;2 (UP_RIGHT)
    3288 00017a70 00000000!         .long   shn_walk4_f4_anim       ;3 (RIGHT)
    3289 00017a90 00000000!         .long   shn_walk4_f4_anim       ;4 (DOWN_RIGHT)
    3290 00017ab0 00000000!         .long   shn_walk2_f4_anim       ;5 (DOWN)
    3291 00017ad0 00000000!         .long   shn_walk6_f4_anim       ;6 (DOWN_LEFT)
    3292 00017af0 00000000!         .long   shn_walk2_f2_anim       ;7 (LEFT)
    3293 00017b10 00000000!         .long   shn_walk6_f2_anim       ;8 (UP-LEFT)
    3294                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   71

    3295                    ;(ybvn5 - DOWN)
    3296 00017b30 00000000!         .long   shn_walk5_f2_anim       ;1 (UP)
    3297 00017b50 00000000!         .long   shn_walk5_f2_anim       ;2 (UP_RIGHT)
    3298 00017b70 00000000!         .long   shn_walk5_f4_anim       ;3 (RIGHT)
    3299 00017b90 00000000!         .long   shn_walk5_f4_anim       ;4 (DOWN_RIGHT)
    3300 00017bb0 00000000!         .long   shn_walk5_f4_anim       ;5 (DOWN)
    3301 00017bd0 00000000!         .long   shn_walk5_f4_anim       ;6 (DOWN_LEFT)
    3302 00017bf0 00000000!         .long   shn_walk5_f2_anim       ;7 (LEFT)
    3303 00017c10 00000000!         .long   shn_walk5_f2_anim       ;8 (UP-LEFT)
    3304                    
    3305                    ;(ybvn6 - DOWN-LEFT)
    3306 00017c30 00000000!         .long   shn_walk2_f2_anim       ;1 (UP)
    3307 00017c50 00000000!         .long   shn_walk6_f2_anim       ;2 (UP_RIGHT)
    3308 00017c70 00000000!         .long   shn_walk2_f2_anim       ;3 (RIGHT)
    3309 00017c90 00000000!         .long   shn_walk6_f4_anim       ;4 (DOWN_RIGHT)
    3310 00017cb0 00000000!         .long   shn_walk2_f4_anim       ;5 (DOWN)
    3311 00017cd0 00000000!         .long   shn_walk4_f4_anim       ;6 (DOWN_LEFT)
    3312 00017cf0 00000000!         .long   shn_walk2_f2_anim       ;7 (LEFT)
    3313 00017d10 00000000!         .long   shn_walk8_f2_anim       ;8 (UP-LEFT)
    3314                    
    3315                    ;(ybvn7 - LEFT)
    3316 00017d30 00000000!         .long   shn_walk2_f2_anim       ;1 (UP)
    3317 00017d50 00000000!         .long   shn_walk6_f2_anim       ;2 (UP_RIGHT)
    3318 00017d70 00000000!         .long   shn_walk6_f2_anim       ;3 (RIGHT)
    3319 00017d90 00000000!         .long   shn_walk8_f4_anim       ;4 (DOWN_RIGHT)
    3320 00017db0 00000000!         .long   shn_walk4_f4_anim       ;5 (DOWN)
    3321 00017dd0 00000000!         .long   shn_walk4_f4_anim       ;6 (DOWN_LEFT)
    3322 00017df0 00000000!         .long   shn_walk2_f2_anim       ;7 (LEFT)
    3323 00017e10 00000000!         .long   shn_walk2_f2_anim       ;8 (UP-LEFT)
    3324                    
    3325                    ;(ybvn8 - UP-LEFT)
    3326 00017e30 00000000!         .long   shn_walk2_f2_anim       ;1 (UP)
    3327 00017e50 00000000!         .long   shn_walk4_f2_anim       ;2 (UP_RIGHT)
    3328 00017e70 00000000!         .long   shn_walk6_f2_anim       ;3 (RIGHT)
    3329 00017e90 00000000!         .long   shn_walk8_f4_anim       ;4 (DOWN_RIGHT)
    3330 00017eb0 00000000!         .long   shn_walk6_f4_anim       ;5 (DOWN)
    3331 00017ed0 00000000!         .long   shn_walk2_f4_anim       ;6 (DOWN_LEFT)
    3332 00017ef0 00000000!         .long   shn_walk2_f2_anim       ;7 (LEFT)
    3333 00017f10 00000000!         .long   shn_walk2_f2_anim       ;8 (UP-LEFT)
    3334                    
    3335                    
    3336 00017f30            SUBR   shn_torso_anims_table
    3337                    ; old = up right
    3338 00017f30 00000000!         .long   shn_torso2_anim         ;new = up right
    3339 00017f50 00000000!         .long   shn_2_to_4_turn2_anim   ;    = down right
    3340 00017f70 00000000!         .long   shn_2_to_6_turn2_anim   ;    = down left
    3341 00017f90 00000000!         .long   shn_2_to_8_turn2_anim   ;    = up left
    3342                    
    3343                    ; old = down right
    3344 00017fb0 00000000!         .long   shn_4_to_2_turn2_anim   ;new = up right
    3345 00017fd0 00000000!         .long   shn_torso4_anim         ;    = down right
    3346 00017ff0 00000000!         .long   shn_4_to_6_turn2_anim   ;    = down left
    3347 00018010 00000000!         .long   shn_4_to_8_turn2_anim   ;    = up left
    3348                    
    3349                    ; old = down left
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 20:14:50 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   72

    3350 00018030 00000000!         .long   shn_6_to_2_turn2_anim   ;new = up right
    3351 00018050 00000000!         .long   shn_6_to_4_turn2_anim   ;    = down right
    3352 00018070 00000000!         .long   shn_torso6_anim         ;    = down left
    3353 00018090 00000000!         .long   shn_6_to_8_turn2_anim   ;    = up left
    3354                    
    3355                    ; old = up left
    3356 000180b0 00000000!         .long   shn_8_to_2_turn2_anim   ;new = up right
    3357 000180d0 00000000!         .long   shn_8_to_4_turn2_anim   ;    = down right
    3358 000180f0 00000000!         .long   shn_8_to_6_turn2_anim   ;    = down left
    3359 00018110 00000000!         .long   shn_torso8_anim         ;    = up left
    3360                    
    3361                    
    3362                    ******************************************************************************
    3363                    
    3364                            .end

 No Errors,  No Warnings
