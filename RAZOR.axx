**************************************************************
*
* Software:		Jamie Rivett
* Initiated:		1/20/94
*
* COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
*
**************************************************************

	.file	"razor.asm"
	.title	"Razor Ramon specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"


******************************************************************************
* EXTERNAL REFERENCES

	.ref	change_anim1a,change_anim2a,do_taunt,bounce_off_ropes
	.ref	check_secret_moves,master_keep_attached,ck_ignore
	.ref	climb_turnbuckle,execute_walk,get_opp_plyrmode,mode_inair2
	.ref	process_ptrs,keep_attached,FIND_AND_KILL_ENDLESS
	.ref	change_anim1,JUMP_ROPES,PCNT
	.ref	DO_REVERSAL,DO_REVERSAL_MESS,CHECK_COMBO_GO
	.ref	ADD_IF_SILENT,CLIMB_ROPES,can_pin
	.ref	get_opp_process,round_award,set_raisearm_bit
	.ref	BONUS_MESS,ck_teammate_pin,raisearm_check
	.ref	BLOCK_WOOSH,drone_change_back
	.ref	blocking_off,std_taunt,std_walk_fast
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_RAZOR_FINISHES
	.ref	rzr_finish1_move
	.if NUM_RAZOR_FINISHES > 1
	.ref	rzr_finish2_move
	.endif
	.endif

;animation sequences

	.ref	rzr_run2_anim

	.ref	start_run_anim

	.ref	rzr_3_head_hold2_anim
	.ref	rzr_3_head_hold_anim

	.ref	rzr_stand2_anim,rzr_stand8_anim
	.ref	rzr_stand4_anim,rzr_stand6_anim
	.ref	rzr_torso2_anim,rzr_torso8_anim
	.ref	rzr_torso4_anim,rzr_torso6_anim

	.ref	rzr_2_to_4_turn_anim,rzr_8_to_6_turn_anim	;stand
	.ref	rzr_4_to_2_turn_anim,rzr_6_to_8_turn_anim
	.ref	rzr_4_to_6_turn_anim,rzr_6_to_4_turn_anim
	.ref	rzr_2_to_8_turn_anim,rzr_8_to_2_turn_anim
	.ref	rzr_4_to_8_turn_anim,rzr_6_to_2_turn_anim
	.ref	rzr_2_to_6_turn_anim,rzr_8_to_4_turn_anim

	.ref	rzr_2_to_4_turn2_anim,rzr_8_to_6_turn2_anim	;torso
	.ref	rzr_4_to_2_turn2_anim,rzr_6_to_8_turn2_anim
	.ref	rzr_4_to_6_turn2_anim,rzr_6_to_4_turn2_anim
	.ref	rzr_2_to_8_turn2_anim,rzr_8_to_2_turn2_anim
	.ref	rzr_4_to_8_turn2_anim,rzr_6_to_2_turn2_anim
	.ref	rzr_2_to_6_turn2_anim,rzr_8_to_4_turn2_anim

	.ref	rzr_walk1_f2_anim,rzr_walk2_f2_anim,rzr_walk4_f2_anim
	.ref	rzr_walk5_f2_anim,rzr_walk6_f2_anim,rzr_walk8_f2_anim

	.ref	rzr_walk1_f4_anim,rzr_walk2_f4_anim,rzr_walk4_f4_anim
	.ref	rzr_3_head_held_stand_anim
	.ref	rzr_walk5_f4_anim,rzr_walk6_f4_anim,rzr_walk8_f4_anim

	.ref	rzr_2_punch_anim,rzr_4_punch_anim
	.ref	rzr_2_pin_anim,rzr_4_pin_anim
	.ref	rzr_4_uprcut_anim
	.ref	rzr_2_butt_anim,rzr_4_butt_anim
	.ref	rzr_2_kick_anim,rzr_4_kick_anim
	.ref	rzr_2_super_kick_anim,rzr_4_super_kick_anim
	.ref	rzr_2_knee_anim,rzr_4_knee_anim
	.ref	rzr_flying_kick_anim
	.ref	rzr_2_ground_punch_anim,rzr_4_ground_punch_anim
	.ref	rzr_2_stomp_anim,rzr_4_stomp_anim
	.ref	rzr_2_grabfling_anim,rzr_4_grabfling_anim
	.ref	rzr_2_hair_pickup_anim,rzr_4_hair_pickup_anim

	.ref	rzr_4_push_anim
	.ref	rzr_4_bigboot_anim
	.ref	rzr_climb_down_anim,rzr_climb_up_anim

	.ref	rzr_2_block_anim,rzr_4_block_anim
	.ref	rzr_2_hiptoss_anim,rzr_4_hiptoss_anim
	.ref	rzr_2_hiptoss2_anim,rzr_4_hiptoss2_anim
	.ref	rzr_flying_elbow_anim
	.ref	rzr_3_uslash_anim,rzr_3_dslash_anim
	.ref	rzr_dslashes_to_head_anim,rzr_dslash_to_head_anim
	.ref	rzr_uslashes_to_head_anim,rzr_uslash_to_head_anim
	.ref	rzr_rugshake_anim
	.ref	rzr_tbukl_elbow_anim,rzr_3_pile_driver_anim
	.ref	rzr_repeat_slash_anim
	.ref	rzr_4_knee_fall_anim

	.ref	rzr_combo_punch_anim,rzr_combo_kick_anim

	.ref	rzr_2_raise_arm_anim,rzr_4_raise_arm_anim

;	.ref	rzr_pkup_chair_anim
	.ref	rzr_rugshake2_anim
	.ref	rzr_fall_back_anim,rzr_razors_edge_anim

******************************************************************************
* SYMBOLS DEFINED IN THIS FILE

******************************************************************************
* EQUATES FOR THIS FILE

*****************************************************************************

razor_secret_moves

	.long	tnkcharge_flying_kick	;must have this one
	.long	tnkneck_grab
	.long	tnkgrab_fling
	.long	tnkhip_toss
	.long	tnkgrab_fling2
	.long	tnkhip_toss2
	.long	tnkdown_slash
	.long	0

******************************************************************************
*
* SPECIAL MOVE PROCESSES - Secret moves
*
;a8=process of wrestler

 SUBR	rzr_smove_table
	.long	rzr_charge_slashes
	.long	rzr_hdhold_pile
	.long	rzr_hdhold_combo1
	.long	rzr_hdhold_edge
	.long	rzr_hdhold_rug
	.long	rzr_grab_toss_air
	.long	rzr_hdhold_combo2
;	REFLONG	std_hdhold_anti_combo
	.long	std_walk_fast
	.long	std_taunt
	.long	rzr_sliding_rug

	.if NUM_RAZOR_FINISHES
	.long	rzr_finish_move1
	.endif
	.if NUM_RAZOR_FINISHES > 1
	.long	rzr_finish_move2
	.endif
	.long	0


*******************************************************************************

tnkcharge_flying_kick
	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_SKICK_BIT,a0
	jrz	tnkno_kick

	move	*a13(PLYRNUM),a0
	.ref	get_powerk_dtime
	calla	get_powerk_dtime
	cmpi	85,a0			;> min?
	jrlt	tnkno_kick

	callr	tnkscrt_kick
	setc
	rets

tnkno_kick
	clrc
	rets

tnkscrt_kick

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	tnkout
	cmpi	MODE_HEADHOLD,a0
	jrz	tnkout
	move	*a13(GETUP_TIME),a0
	jrnz	tnkout
	cmpi	MODE_ONGROUND,a0
	jrz	tnkout
	cmpi	MODE_DEAD,a0
	jrz	tnkout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tnkout

	.ref	ck_ignore
	calla	ck_ignore
	jrc	tnkout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	tnkout
	cmpi	MODE_DEAD,a0
	jrz	tnkout

	SETMODE	INAIR

	movk	1,a0			;Ensure leap at
	move	a0,*a8(OBJ_XVEL),L

	movi	rzr_flying_kick_anim,a0
	calla	change_anim1a

	WRSND	W_RAZOR,FLYKICK_T1,FLYKICK_T2

	rets


******************************************************************************
tnkneck_grab
	.word	B_SPUNCH,		J_REAL_LR | J_TOWARD | J_AWAY | J_UP
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 30		;max
	.long	tnkscrt_neck

tnkscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tnkout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	tnkout
	cmpi	MODE_DEAD,a0
	jrz	tnkout
	cmpi	MODE_HEADHELD,a0
	jrz	tnkout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	tnkok2

;This head grab is too close (in terms of time) to most recent grab
	.ref	rzr_3_fake_hold_anim
	movi	rzr_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

tnkok2
	move	*a13(CLOSEST_XDIST),a1
	cmpi	85,a1
	jrgt	tnkstd_grab

	movi	rzr_3_head_hold2_anim,a0
	calla	change_anim1a
	rets

tnkstd_grab
	movi	rzr_3_head_hold_anim,a0
	calla	change_anim1a
	rets

******************************************************************************
tnkdown_slash
	.word	B_PUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_DOWN|J_TOWARD,	J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 50		;max
	.long	tnkdslash

tnkdslash
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tnkout

	;check opp mode
	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jreq	tnkout

	;don't do it unless you're in mode_normal, running, or headhold
	move	*a13(PLYRMODE),a0
	cmpi	MODE_NORMAL,a0
	jreq	tnkslash
	cmpi	MODE_RUNNING,a0
	jreq	tnkrunslash
	cmpi	MODE_HEADHOLD,a0
	jreq	tnkslash
	jruc	tnkz

tnkrunslash
	;don't interrupt an OCRUN
	move	*a13(GETUP_TIME),a14
	jrnz	tnkz
tnkslash
	WRSND	W_RAZOR,KICK_T2
	movi	rzr_3_dslash_anim,a0
	calla	change_anim1a
tnkz	rets

*******************************************************************************

tnkgrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	tnkscrt_grabfling2

tnkhip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	tnkscrt_grabfling2

tnkscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tnkout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	tnkyes
	cmpi	MODE_RUNNING,a0
	jrz	tnkyes
	rets

******************************************************************************
tnkgrab_fling
;	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	tnkscrt_grabfling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	tnkscrt_grabfling

tnkscrt_grabfling

;Make this miss, rotate to missed opponent,
;and stay rotated to flung opponent, also make
;this work from both angles!

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tnkout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	tnkyes
	cmpi	MODE_RUNNING,a0
	jrnz	tnknope
tnkyes
	FACE24	rzr,hiptoss_anim
	calla	change_anim1a

	WRSND	W_RAZOR,GRABFLING_T1,PUNCH_T2
	rets

tnknope
;Don't fling when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_HEADHELD,a0
	jrz	tnkout
	cmpi	MODE_ONGROUND,a0
	jrz	tnkout
	cmpi	MODE_DEAD,a0
	jrz	tnkout

;	move	*a13(LAST_FLING_ATTEMPT),a14,L
;	move	@PCNT,a0,L
;	sub	a14,a0
;	cmpi	3*60,a0
;	jrge	tnkok2a
;
;;This head grab is too close (in terms of time) to most recent grab
;	movi	rzr_3_uslash_anim,a0
;	calla	change_anim1a
;
;	WRSND	W_RAZOR,SPUNCH_T1,SPUNCH_T2
;	rets
;
;tnkok2a
;	move	@PCNT,a14,L			;use 32-bit PCNT!
;	move	a14,*a13(LAST_FLING_ATTEMPT),L

	FACE24	rzr,grabfling_anim
	calla	change_anim1a

	WRSND	W_RAZOR,GRABFLING_T1,PUNCH_T2
tnkout	rets

******************************************************************************

tnkhip_toss
;	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	tnkscrt_hiptoss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	tnkscrt_hiptoss


tnkscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tnkout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	tnkout
;	cmpi	MODE_BLOCK,a0
;	jrz	tnkout
	cmpi	MODE_DEAD,a0
	jrz	tnkout
	cmpi	MODE_HEADHELD,a0
	jrz	tnkout
	cmpi	MODE_INAIR,a0
	jrz	tnkdoit
	cmpi	MODE_INAIR2,a0
	jrz	tnkdoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	tnkout

tnkdoit
	FACE24	rzr,hiptoss_anim
	calla	change_anim1a

	WRSND	W_RAZOR,GRABFLING_T1,PUNCH_T2
	rets

	.if NUM_RAZOR_FINISHES
******************************************************************************
 SUBRP	rzr_finish_move1

aslTIMEOUT	.equ	TSEC

aslend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		aslend_wait			; br = no

aslreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,aslreset
	movi		aslTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,aslreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,aslreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,aslreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,aslreset

	movi		rzr_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_RAZOR_FINISHES > 1
******************************************************************************
 SUBRP	rzr_finish_move2

imeTIMEOUT	.equ	TSEC

imeend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		imeend_wait			; br = no

imereset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,imereset
	movi		imeTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,imereset
	WAITSWITCH_DWN	J_RIGHT,J_UP,imereset
	WAITSWITCH_DWN	J_RIGHT,J_UP,imereset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,imereset

	movi		rzr_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif


*****************************************************************************

;	STRUCTPD
;	WORD		hqbCHARGE_TIME	;UDW
hqbCHARGE_TIME	.equ	SM_USRW1

rzr_charge_slashes

hqbstart_over
	clr	a14
	move	a14,*a13(hqbCHARGE_TIME),W
hqbloop1
	SLEEPK	1

	move	*a13(hqbCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(hqbCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	hqbp1

	jruc	hqbloop1

hqbp1

;no longer holding button
	move	*a13(hqbCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	hqbstart_over

;Success!  Check for the UNINT bit, then queue it up.
	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	hqbstart_over

	move	*a8(GETUP_TIME),a0
	jrnz	hqbstart_over

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	hqbstart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	hqbstart_over
	cmpi	MODE_ONGROUND,a0
	jrz	hqbstart_over
	cmpi	MODE_DEAD,a0
	jrz	hqbstart_over

	movi	rzr_repeat_slash_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_RAZOR,KICK_T2

	jruc	hqbstart_over

*******************************************************************************

rzr_sliding_rug

fufTIMEOUT	.equ	60

fuflp0
	SLEEPK	1
fuflp
	clr	a11

;	WAITSWITCH_DWN	J_AWAY,0,fuflp
	WAITSWITCH_DWN	J_TOWARD,0,fuflp

	movi	fufTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,fuflp
	WAITSWITCH_DWN	B_KICK,J_ALL,fuflp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	fuflp0
	cmpi	MODE_HEADHOLD,a0
	jrz	fuflp0
	cmpi	MODE_ONGROUND,a0
	jrz	fuflp0
	cmpi	MODE_DEAD,a0
	jrz	fuflp0

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fuflp0

	move	*a8(GETUP_TIME),a0
	jrnz	fuflp0


;Don't do it when he is on ground
	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
;	cmpi	MODE_ONGROUND,a0
;	jrz	fuflp
	cmpi	MODE_DEAD,a0
	jrz	fuflp

;Don't do it if opponent is behind you
	SWAP	a8,a13
	calla	ck_ignore
	jrnc	fufnorm
	SWAP	a8,a13
	jruc 	fuflp
fufnorm	
	SWAP	a8,a13

	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
	.ref	rzr_sliding_rug_anim
	movi	rzr_sliding_rug_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	fuflp

*****************************************************************************
rzr_hdhold_edge

wsjTIMEOUT	.equ	60

wsjlp0
	SLEEPK	1
wsjlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wsjcont
	cmpi	MODE_HEADHELD,a0
	jrnz	wsjlp0

wsjcont
	clr	a11

;	WAITSWITCH_DWN	J_AWAY,0,wsjlp
	WAITSWITCH_DWN	J_TOWARD,0,wsjlp

	movi	wsjTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,wsjlp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,wsjlp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wsjslam
	cmpi	MODE_HEADHELD,a0
	jrnz	wsjlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	wsjlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wsjlp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	wsjis_reversal

wsjslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wsjlp0				;ignore

	movi	33,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

wsjis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	rzr_razors_edge_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	wsjlp

*****************************************************************************
rzr_hdhold_pile

kmsTIMEOUT	.equ	60

kmslp0
	SLEEPK	1
kmslp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	kmscont
	cmpi	MODE_HEADHELD,a0
	jrnz	kmslp0

kmscont
	clr	a11

;	WAITSWITCH_DWN	J_UP,0,kmslp
	WAITSWITCH_DWN	J_DOWN,0,kmslp

	movi	kmsTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,kmslp
	WAITSWITCH_DWN	B_SKICK,J_ALL,kmslp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	kmsslam
	cmpi	MODE_HEADHELD,a0
	jrnz	kmslp0
	move	*a8(I_WILL_DIE),A14
	jrnz	kmslp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	kmslp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	kmsis_reversal

kmsslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	kmslp0				;ignore

	movk	7,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

kmsis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
	movi	rzr_3_pile_driver_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	kmslp

*****************************************************************************
rzr_hdhold_rug

temTIMEOUT	.equ	60

temlp0
	SLEEPK	1
temlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	temcont
	cmpi	MODE_HEADHELD,a0
	jrnz	temlp0

temcont
	clr	a11

;	WAITSWITCH_DWN	J_UP,0,temlp
	WAITSWITCH_DWN	J_DOWN,0,temlp

	movi	temTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,temlp
	WAITSWITCH_DWN	B_KICK,J_ALL,temlp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	temslam
	cmpi	MODE_HEADHELD,a0
	jrnz	temlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	temlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	temlp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	temis_reversal

temslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	temlp0				;ignore

	movk	6,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

temis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	rzr_rugshake2_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	temlp

*****************************************************************************
rzr_hdhold_combo1

seyTIMEOUT	.equ	60

seylp0
	SLEEPK	1
seylp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	seylp0
;	jrz	seycont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	seylp0
;seycont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	seylp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,seylp

	movi	seyTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,seylp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,seylp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	seyslam
	cmpi	MODE_HEADHELD,a0
	jrnz	seylp0

seyslam
	CALLA	FIND_AND_KILL_ENDLESS
	movi	rzr_combo_punch_anim,a14
 	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	seylp

*******************************************************************************

*
rzr_hdhold_combo2

seyTIMEOUT	.equ	60

seylp0
	SLEEPK	1
seylp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	seylp0
;	jrz	seycont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	seylp0
;seycont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	seylp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,seylp

	movi	seyTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,seylp
	WAITSWITCH_DWN	B_KICK,J_ALL,seylp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	seyslam
	cmpi	MODE_HEADHELD,a0
	jrnz	seylp0

seyslam
	CALLA	FIND_AND_KILL_ENDLESS
	movi	rzr_combo_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	seylp

*******************************************************************************
*
rzr_grab_toss_air

seyTIMEOUT	.equ	40

seylp0
	SLEEPK	1
seylp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,seylp

	movi	seyTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,seylp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,seylp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	seylp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	seylp0

;Don't do it when he is on ground
	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
;Don't do it when he is on ground
	cmpi	MODE_ONGROUND,a0
	jrz	seylp
	cmpi	MODE_DEAD,a0
	jrz	seylp
	cmpi	MODE_INAIR,a0
	jrz	seydoit2
	cmpi	MODE_INAIR2,a0
	jrz	seydoit2

	CALLA	FIND_AND_KILL_ENDLESS
	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	seydoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	68h,a0
	jrgt	seylp

	FACE24	rzr,hiptoss_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_RAZOR,GRABFLING_T1,PUNCH_T2

	SLEEPK	20
	jruc	seylp

seydoit2
	FACE24	rzr,hiptoss2_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_RAZOR,GRABFLING_T1,PUNCH_T2

	SLEEPK	20

	jruc	seylp


;******************************************************************************
;rzr_hdhold_anti_combo
;
;seyTIMEOUT	.equ	80
;
;seylp0
;	SLEEPK	1
;seylp
;;Is my opponent in combo mode?
;;	move	*a8(IMMOBILIZE_TIME),a14
;;	jrz	seylp0
;;	move	*a8(CLOSEST_NUM),a0
;;	X32	a0
;;	addi	process_ptrs,a0
;;	move	*a0,a0,L
;;	move	*a0(COMBO_COUNT),a0
;;	jrz	seylp0
;
;	clr	a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,seylp
;
;	movi	seyTIMEOUT,a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,seylp
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,seylp
;
;;Is my opponent in combo mode?
;	move	*a8(CLOSEST_NUM),a0
;	X32	a0
;	addi	process_ptrs,a0
;	move	*a0,a0,L
;	move	*a0(COMBO_COUNT),a0
;	jrz	seylp0
;
;	move	*a8(ANTI_COMBO_TIME),a0		;Time stamp
;	move	@PCNT,a14
;	sub	a0,a14
;	abs	a14
;	cmpi	80,a14
;	jrge	seylp0
;	move	*a8(I_WILL_DIE),A14
;	jrnz	seylp0
;
;;Combo breaker message!
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	clr	a0
;	move	a0,*a8(IMMOBILIZE_TIME)
;
;	move	*a8(WHOHITME),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)
;
;	;target WHOHITME
;	SMRTTGT	a8,WHOHITME
;
;	CALLA	FIND_AND_KILL_ENDLESS
;	movi	rzr_3_pile_driver_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;
;	WRSND	W_RAZOR,GRABFLING_T1,PUNCH_T2
;
;	SLEEPK	20
;
;	jruc	seylp
;
*****************************************************************************

 SUBR	razor_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	fcvp1
;Plyr 2
	movi	rzr_stand4_anim,a0
	calla	change_anim1a

	movi	rzr_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

fcvp1
	movi	rzr_stand2_anim,a0
	calla	change_anim1a

	movi	rzr_torso2_anim,a0
	calla	change_anim2a

	rets


*****************************************************************************
*
* RAZORS CONTROL CODE
*
* a13 = * razor process

 SUBR	move_razor


	movi	razor_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	vudmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

vudmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	REFLONG	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	REFLONG	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	REFLONG	mode_choking		;25

*****************************************************************************

mode_normal	;0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	mjtno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	mjtnope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	mjtnope
;Player has died amidst a combo...
;Knock me down.
	movi	rzr_fall_back_anim,a0
	calla	change_anim1a

;Zero health bar
	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

mjtnope
;Perhaps we need to interrupt any sequence when a wrestler has won?

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	mjtopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	mjtopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	mjtno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	mjtno_pin_yet
mjtno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	mjtraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	mjtraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	mjtno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	mjtopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	rzr,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

mjtraisearm
	FACE24	rzr,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

mjttoo_far_to_pin
mjtopp_notgnd
mjtopp_not_dead
mjtno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	mjtimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	mjtnblk			;1 for down transitions
	callr	mjtblock			;& 1 for current buttons
	jrc	mjtnblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
mjtnblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	mjtpunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	mjtaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	mjtno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	mjtno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

mjtimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
mjtno_climb
	calla	execute_walk

mjtno_interrupt
	rets

mjtaction_table
	.long	mjtz,mjtpunch,mjtblock,mjtblock			;0-3
	.long	mjtsuper_punch,mjtsuper_punch,mjtblock,mjtblock	;4-7
	.long	mjtkick,mjtpunchkick,mjtblock,mjtblock		;8-11
	.long	mjtsuper_punch,mjtpunchkick,mjtblock,mjtblock	;12-15
	.long	mjtsuper_kick,mjtsuper_kick,mjtblock,mjtblock	;16-19
	.long	mjtgraboh,mjtgraboh,mjtblock,mjtblock		;20-23
	.long	mjtsuper_kick,mjtpunchkick,mjtblock,mjtblock	;24-27
	.long	mjtgraboh,mjtgraboh,mjtblock,mjtblock		;28-31


************
mjtz
	rets


************
mjtpunch		;1
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  44  45	headbutt
* normal	>		normal punch
*
* onground	< 120  120	elbow drop
* onground	>		normal punch
*
* running |
* bouncing			hip toss
*
* onturnbkl |
* climbturnbkl			normal punch
*

	JJXM_INIT
	JJXM	NORMAL,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	DIZZY,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	BLOCK,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	ONGROUND,	160,140,mjtpunch_lbdrop,mjtpunch_punch
	JJXM	RUNNING, 	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	BOUNCING,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	ONTURNBKL,		mjtpunch_punch
	JJXM	CLIMBTURNBKL,		mjtpunch_punch
	JJXM	INAIR,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	ATTACHED,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	DEAD,		160,140,mjtpunch_lbdrop,mjtpunch_punch
	JJXM	OPPOVERHEAD,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	WAITANIM,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	GRAPPLE,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	MASTER,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	SLAVE,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	HEADHOLD,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	HEADHELD,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	CHOKEHOLD,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	PUPPET,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	PUPPET2,	 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM	INAIR2,		 44, 45,mjtpunch_hdbutt,mjtpunch_punch
	JJXM_END

*****
mjtpunch_punch
std_punch

	FACE24	rzr,punch_anim
	calla	change_anim1a

	WRSND	W_RAZOR,PUNCH_T1,PUNCH_T2

	rets

*****
mjtpunch_hdbutt

	FACE24	rzr,butt_anim
	calla	change_anim1a

	WRSND	W_RAZOR,HDBUTT_T1,HDBUTT_T2
	rets

*****
mjtpunch_lbdrop

	FACE24	rzr,ground_punch_anim
	calla	change_anim1a

	WRSND	W_RAZOR,LBOWDROP_T1,LBOWDROP_T2
	rets


************
mjtblock		;2

std_block
	move	@blocking_off,a0
	jrnz	mjtno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	FACE24	rzr,block_anim
	calla	change_anim1a

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

mjtno_blocking
	setc
	rets


************
mjtsuper_punch	;4
mjtgraboh
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  85   45	headbutt or uppercut
*		>		blade slash	
*
* onground	< 120  120	elbow drop (or rug shake or hair pickup)
* onground	>		normal punch
*
* running |
* bouncing			hip toss
*
* onturnbkl |
* climbturnbkl			normal punch
*

	JJXM_INIT
	JJXM	NORMAL,		 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	DIZZY,		 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	BLOCK,		 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	ONGROUND,	160,140,mjtspunch_lbowdrop,std_punch
	JJXM	DEAD,		160,140,mjtspunch_lbowdrop,std_punch
	JJXM	RUNNING,	 	mjtspunch_downslash
	JJXM	BOUNCING,	 	mjtspunch_downslash
	JJXM	ONTURNBKL,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	CLIMBTURNBKL,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	INAIR,		 	mjtspunch_downslash
	JJXM	ATTACHED,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	OPPOVERHEAD,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	WAITANIM,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	GRAPPLE,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	MASTER,		 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	SLAVE,		 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	HEADHOLD,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	HEADHELD,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	CHOKEHOLD,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	PUPPET,		 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	PUPPET2,	 85, 45,mjtspunch_close,mjtspunch_far
	JJXM	INAIR2,		 	mjtspunch_downslash
	JJXM_END


mjtspunch_lbowdrop

;If near opponents head, and facing down, do the hair grab!
;If near feet, go for the rugshake

	move	*a13(CLOSEST_NUM),a3
	X32	a3

	addi	process_ptrs,a3
	move	*a3,a3,L
	move	*a3(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	mjtno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a3(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	30h,a1	;28
 	jrlt	mjtno

;At head or feet!

	move	*a3(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	mjtfeet

;At head!  Do hair pickup.

	FACE24	rzr,hair_pickup_anim
	calla	change_anim1
	WRSND	W_RAZOR,LBOWDROP_T1,LBOWDROP_T2
	rets

mjtfeet
	cmpi	40h,a1	;28
 	jrlt	mjtno

	;smart-target the intended victim
	move	*a13(STATUS_FLAGS),a14
	ori	M_SMART_ATTACK,a14
	move	a14,*a13(STATUS_FLAGS)
	move	a3,*a13(SMART_TARGET),L

	movi	rzr_rugshake_anim,a0
	calla	change_anim1a
	rets

mjtno
	FACE24	rzr,ground_punch_anim
	calla	change_anim1a

	WRSND	W_RAZOR,LBOWDROP_T1,LBOWDROP_T2
	rets

*****
mjtspunch_close
	move	*a13(STICK_VAL_CUR),a0
	btst	MOVE_DOWN_BIT,a0
	jrnz	mjtck_up
;	move	*a13(NEW_FACING_DIR),a1
;	andi	0Ch,a1
;	cmp	a0,a1
;	jrz	mjtgrab

	move	*a13(CLOSEST_XDIST),a1
	cmpi	65,a1
	jrgt	std_punch
;	jruc	mjthdbutt
;mjtgrab
;	movi	rzr_3_head_hold2_anim,a0
;	calla	change_anim1a
;	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
;	rets
;
;mjthdbutt
	.ref	rzr_2_pummel_anim
	.ref	rzr_4_pummel_anim

	FACE24	rzr,pummel_anim
	calla	change_anim1
	WRSND	W_RAZOR,HDBUTT_T1,HDBUTT_T2
	rets

mjtck_up
;Do uppercut
	movi	rzr_4_uprcut_anim,a0
	calla	change_anim1a
	WRSND	W_RAZOR,UPRCUT_T1,UPRCUT_T2
	rets

*****
mjtspunch_far
	WRSND	W_RAZOR,UPRCUT_T1,UPRCUT_T2
	movi	rzr_3_uslash_anim,a0
	calla	change_anim1a
	rets

*****
mjtspunch_downslash
	WRSND	W_RAZOR,UPRCUT_T1,UPRCUT_T2
	movi	rzr_3_dslash_anim,a0
	calla	change_anim1a
	rets

************
mjtkick		;8
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  70   50	knee
*		>		normal kick
*
* onground	< 120  120	stomp
* onground	>		normal kick
*
* running |
* bouncing			big boot
*
* onturnbkl |			normal kick
* climbturnbkl			normal kick
*

	JJXM_INIT
	JJXM	NORMAL,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	DIZZY,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	BLOCK,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	ONGROUND,	160,140,mjtkick_stomp,mjtkick_kick
	JJXM	RUNNING,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	BOUNCING, 	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	ONTURNBKL,	 	mjtkick_kick
	JJXM	CLIMBTURNBKL,	 	mjtkick_kick
	JJXM	INAIR,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	ATTACHED,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	DEAD,		160,140,mjtkick_stomp,mjtkick_kick
	JJXM	OPPOVERHEAD,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	WAITANIM,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	GRAPPLE,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	MASTER,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	SLAVE,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	HEADHOLD,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	HEADHELD,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	CHOKEHOLD,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	PUPPET,		 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	PUPPET2,	 70, 50,mjtkick_knee,mjtkick_kick
	JJXM	INAIR2,		 	mjtkick_TB
	JJXM_END

*****
mjtkick_TB
	.ref	rzr_kick_TB_anim
	movi	rzr_kick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_RAZOR,KICK_T1,KICK_T2
	rets

*****
mjtkick_kick
std_kick

	FACE24	rzr,kick_anim
	calla	change_anim1a

	WRSND	W_RAZOR,KICK_T1,KICK_T2
	rets

*****
mjtkick_knee
std_knee

	FACE24	rzr,knee_anim
	calla	change_anim1a

	WRSND	W_RAZOR,KICK_T1,KICK_T2
	rets

*****
mjtkick_stomp

	FACE24	rzr,stomp_anim
	calla	change_anim1a

	WRSND	W_RAZOR,KICK_T1,KICK_T2
	rets


************
mjtsuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  70   60	close in super move
* dizzy			"		"
* normal	>		jumping kick move
* dizzy			"		"
*
* onground	< 114  160	super stomp
* onground	>		normal kick
*
* running			big boot
* bouncing			big boot
*
* onturnbkl	<  70   96	jumping kick move
* climbturnbkl		"		"
* onturnbkl	>		normal kick
* climbturnbkl		"		"
*
	JJXM_INIT
	JJXM	NORMAL,		 70, 60,mjtskick_special,mjtskick_kick	;0
	JJXM	RUNNING,	 	mjtskick_bigboot			;1
	JJXM	INAIR,		 70, 60,mjtskick_special,mjtskick_kick	;2
	JJXM	ATTACHED,	 70, 60,mjtskick_special,mjtskick_kick	;3
	JJXM	ONGROUND,	160,140,mjtskick_stomp,std_kick		;4
	JJXM	BOUNCING,	 	mjtskick_bigboot			;5
	JJXM	ONTURNBKL,	 70, 96,mjtskick_kick,std_kick		;6
	JJXM	BLOCK,		 70, 60,mjtskick_special,mjtskick_kick	;7
	JJXM	DIZZY,		 70, 60,mjtskick_special,mjtskick_kick	;8
	JJXM	DEAD,		160,140,mjtskick_stomp,std_kick		;9
	JJXM	OPPOVERHEAD,	 70, 60,mjtskick_special,mjtskick_kick	;10
	JJXM	CLIMBTURNBKL,	 70, 96,mjtskick_kick,std_kick		;11
	JJXM	WAITANIM,	 70, 62,mjtskick_special,mjtskick_kick	;12
	JJXM	GRAPPLE,	 70, 62,mjtskick_special,mjtskick_kick	;13
	JJXM	MASTER,		 70, 62,mjtskick_special,mjtskick_kick	;14
	JJXM	SLAVE, 		 70, 62,mjtskick_special,mjtskick_kick	;15
	JJXM	HEADHOLD,	 70, 62,mjtskick_special,mjtskick_kick	;16
	JJXM	HEADHELD,	 	std_kick
	JJXM	CHOKEHOLD,	 70, 62,mjtskick_special,mjtskick_kick	;16
	JJXM	PUPPET,		 70, 62,mjtskick_special,mjtskick_kick	;20
	JJXM	PUPPET2,	 70, 62,mjtskick_special,mjtskick_kick	;20
	JJXM	INAIR2,		 	mjtkick_TB
	JJXM_END

*****
mjtskick_kick
	FACE24	rzr,super_kick_anim
	calla	change_anim1a

	WRSND	W_RAZOR,FLYKICK_T1,FLYKICK_T2
	rets


*****
mjtskick_special

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrz	mjtsuper_knee

	FACE24	rzr,knee_anim
	calla	change_anim1a

	WRSND	W_RAZOR,KICK_T1,KICK_T2

	rets

mjtsuper_knee
	movi	rzr_4_knee_fall_anim,a0
	calla	change_anim1

	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
	rets

*****
mjtskick_stomp

	FACE24	rzr,stomp_anim
	calla	change_anim1a

	WRSND	W_RAZOR,KICK_T1,KICK_T2

	rets

*****
mjtskick_bigboot

	movi	rzr_4_bigboot_anim,a0		;*****
	calla	change_anim1a

	WRSND	W_RAZOR,FLYKICK_T1,FLYKICK_T2

	rets


************
mjtpunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets



*****************************************************************************
*
* RUNNING (if GETUP_TIME > 0 then player is out of control)
*

tjyXRUN_VAL	equ	RZR_XRUN
tjyZDRIFT_VAL	equ	RZR_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	tjyno_vel

	calla	bounce_off_ropes

	movi	tjyXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	tjypos
	neg	a0
tjypos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

tjyno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	tjyout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tjyno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	tjycontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

tjycontinue_run
tjyno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-tjyZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	tjysetvel

	movi	tjyZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	tjysetvel

	clr	a1
tjysetvel
	move	a1,*a13(OBJ_ZVEL),L


;Delay reading buttons after just getting out of an out of control run
;so a mistaken move isn't fired off
	move	*a13(DELAY_BUTNS),a0
	jrnz	tjyout_of_control


	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	tjyaction_table,a0
	move	*a0,a0,L
	call	a0
tjyout_of_control
	rets

tjyaction_table
	.long	tjyz,tjypunch,tjyblock,tjyblock			;0-3
	.long	tjysuper_punch,tjysuper_punch,tjyblock,tjyblock	;4-7
	.long	tjykick,tjypunchkick,tjyblock,tjyblock		;8-11
	.long	tjysuper_punch,tjypunchkick,tjyblock,tjyblock	;12-15
	.long	tjysuper_kick,tjysuper_kick,tjyblock,tjyblock	;16-19
	.long	tjygraboh,tjygraboh,tjyblock,tjyblock		;20-23
	.long	tjysuper_kick,tjypunchkick,tjyblock,tjyblock	;24-27
	.long	tjygraboh,tjygraboh,tjyblock,tjyblock		;28-31

;	.long	tjyz					;0
;	.long	tjypunch					;1
;	.long	tjyblock					;2
;	.long	tjyz					;3
;	.long	tjysuper_punch				;4
;	.long	tjysuper_punch,tjyz,tjyz			;5-7
;	.long	tjykick					;8
;	.long	punchkick,tjyz,tjyz,tjykick,tjyz,tjyz,tjyz		;9-15
;	.long	tjysuper_kick				;16
;	.long	tjyz,tjyz,tjyz,tjygraboh,tjyz,tjyz,tjyz		;17-23
;	.long	tjykick,tjyz,tjyz,tjyz,tjyz,tjyz,tjyz,tjyz		;24-31



************
tjyz
	rets


************
tjyblock		;2
	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block


************
tjypunch		;1
tjysuper_punch	;4
tjypunchkick
tjygraboh
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
*
* onground|dead	< 176 176	running stomp
* onground|dead	>		nothing
*
* all else			flying kick
*

	JJXM_INIT
	JJXM	NORMAL,			tjypunch_clothesline
	JJXM	BLOCK,			tjypunch_clothesline
	JJXM	DIZZY,			tjypunch_clothesline
	JJXM	ONGROUND,	176,176,tjypunch_flyelbow,tjypunch_rets
	JJXM	RUNNING,		tjypunch_clothesline
	JJXM	BOUNCING,		tjypunch_clothesline
	JJXM	ONTURNBKL,		tjypunch_clothesline
	JJXM	CLIMBTURNBKL,		tjypunch_clothesline
	JJXM	INAIR,			tjypunch_clothesline
	JJXM	ATTACHED,		tjypunch_clothesline
	JJXM	DEAD,		176,176,tjypunch_flyelbow,tjypunch_rets
	JJXM	OPPOVERHEAD,		tjypunch_clothesline
	JJXM	WAITANIM,		tjypunch_clothesline
	JJXM	GRAPPLE,		tjypunch_clothesline
	JJXM	MASTER,			tjypunch_clothesline
	JJXM	SLAVE,			tjypunch_clothesline
	JJXM	HEADHOLD,		tjypunch_clothesline
	JJXM	HEADHELD,		tjypunch_clothesline
	JJXM	CHOKEHOLD,		tjypunch_clothesline
	JJXM	PUPPET,			tjypunch_clothesline
	JJXM	PUPPET2,		tjypunch_clothesline
	JJXM	INAIR2,			tjypunch_clothesline
	JJXM_END

*****
tjypunch_clothesline

	;don't do it if you're running away from your opponent.
	move	*a13(FACING_DIR),a0
	move	*a13(NEW_FACING_DIR),a1
	and	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	jrz	tjyz

	clr	a0
	move	a0,*a13(RUN_TIME)

	SETMODE	NORMAL

	move	*a13(CLOSEST_XDIST),a1
	cmpi	70,a1
	jrlt	tjyhdbutt

	movi	rzr_3_uslash_anim,a0
	calla	change_anim1a

	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2

	rets

tjyhdbutt

	FACE24	rzr,butt_anim
	calla	change_anim1

	WRSND	W_RAZOR,HDBUTT_T1,HDBUTT_T2

	rets

tjypunch_flyelbow
std_flyelbow
	movi	rzr_flying_elbow_anim,a0
	calla	change_anim1a

	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L

	WRSND	W_RAZOR,FLYKICK_T1,FLYKICK_T2

	rets

tjypunch_rets
	rets

************
tjykick		;8
tjysuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal			flying kick
* dizzy					"
*
* onground	< 176 176	running stomp
* onground	>		nothing
*
* running			flying kick
* bouncing			flying kick
*
* onturnbkl			flying kick
* climbturnbkl			flying kick
*
	JJXM_INIT
	JJXM	NORMAL,			tjykick_flykick
	JJXM	BLOCK,			tjykick_flykick
	JJXM	DIZZY,			tjykick_flykick
	JJXM	ONGROUND,		std_flyelbow
	JJXM	RUNNING,		tjykick_flykick
	JJXM	BOUNCING,		tjykick_flykick
	JJXM	ONTURNBKL,		tjykick_flykick
	JJXM	CLIMBTURNBKL,		tjykick_flykick
	JJXM	INAIR,			tjykick_flykick
	JJXM	ATTACHED,		tjykick_flykick
	JJXM	DEAD,			std_flyelbow
	JJXM	OPPOVERHEAD,		tjykick_flykick
	JJXM	WAITANIM,		tjykick_flykick
	JJXM	GRAPPLE,		tjykick_flykick
	JJXM	MASTER,			tjykick_flykick
	JJXM	SLAVE,			tjykick_flykick
	JJXM	HEADHOLD,		tjykick_flykick
	JJXM	HEADHELD,		tjykick_flykick
	JJXM	CHOKEHOLD,		tjykick_flykick
	JJXM	PUPPET,			tjykick_flykick
	JJXM	PUPPET2,		tjykick_flykick
	JJXM	INAIR2,			tjykick_flykick
	JJXM_END

tjykick_flykick
std_flykick

	calla	ck_ignore
	jrc	tjyz

	movi	rzr_flying_kick_anim,a0
	calla	change_anim1a

	WRSND	W_RAZOR,FLYKICK_T1,FLYKICK_T2

	SETMODE	INAIR

	rets

tjykick_rets
	rets

*****************************************************************************
mode_inair	;2

	rets

*****************************************************************************
mode_attached	;3

	calla	keep_attached
	jrnz	tvlstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

tvlstill_attached
	rets

*****************************************************************************
mode_onground	;4

	rets


*****************************************************************************
*
* bouncing off ropes while running

mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	frknot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	rzr_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING

;	clr	a0
;	move	a0,*a13(GETUP_TIME)	;in control

frknot_ended
	rets

*****************************************************************************
*
* STANDING ON TOP OF TURNBUCKLE

mode_onturnbkl	;6

;	;check unint
;	move	*a13(ANIMODE),a14
;	btst	MODE_UNINT_BIT,a14
;	jrnz	pybno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	pybno_climbdown

	movi	rzr_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

pybno_interrupt
	rets

pybno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	pybz

	X32	a0
	addi	pybaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets


;For standing on top of turnbuckles

pybaction_table
	.long	pybz,pybpunch,pybblock,pybblock			;0-3
	.long	pybsuper_punch,pybsuper_punch,pybblock,pybblock	;4-7
	.long	pybkick,pybpunchkick,pybblock,pybblock		;8-11
	.long	pybsuper_punch,pybpunchkick,pybblock,pybblock	;12-15
	.long	pybsuper_kick,pybsuper_kick,pybblock,pybblock	;16-19
	.long	pybgraboh,pybgraboh,pybblock,pybblock		;20-23
	.long	pybsuper_kick,pybpunchkick,pybblock,pybblock	;24-27
	.long	pybgraboh,pybgraboh,pybblock,pybblock		;28-31

;	.long	pybz					;0
;	.long	pybpunch					;1
;	.long	pybblock					;2
;	.long	pybz					;3
;	.long	pybsuper_punch				;4
;	.long	pybsuper_punch,pybz,pybz			;5-7
;	.long	pybkick					;8
;	.long	pybpunchkick,pybz,pybz,pybkick,pybz,pybz,pybz		;9-15
;	.long	pybsuper_kick				;16
;	.long	pybz,pybz,pybz,pybgraboh,pybz,pybz,pybz		;17-23
;	.long	pybkick,pybz,pybz,pybz,pybz,pybz,pybz,pybz		;24-31

************
pybz
	rets

************
pybpunch		;1
pybblock		;2
pybsuper_punch	;4
pybpunchkick	;5
pybkick		;8
pybsuper_kick	;16
pybgraboh		;20

	SETMODE	INAIR

	movi	rzr_tbukl_elbow_anim,a0
	calla	change_anim1a

	WRSND	W_RAZOR,TURNDIVE_T1,TURNDIVE_T2
	rets

*****************************************************************************
* blocking

mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	jhwno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	jhwno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	jhwno
	cmpi	45,a0
	jrlt	jhwno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	jhwpunchblock

jhwno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	jhwno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	jhwset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	jhwaction_table,a0
	move	*a0,a0,L
	call	a0

jhwno_interrupt
	rets

jhwset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

jhwaction_table
	.long	jhwz,jhwpunchblock,jhwz	;0-2
	.long	jhwpunchblock		;3
	.long	jhwz,jhwz,jhwz,jhwz,jhwz,jhwz,jhwz	;4-10
	.long	jhwz,jhwz,jhwz,jhwz,jhwz,jhwz,jhwz	;11-17
	.long	jhwz,jhwz,jhwz,jhwz,jhwz,jhwz,jhwz	;18-24
	.long	jhwz,jhwz,jhwz,jhwz,jhwz,jhwz,jhwz	;25-31

************
jhwz
	rets

************
jhwpunchblock	;3
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* all				push
*

	SETMODE	NORMAL

	movi	rzr_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_RAZOR,PUSH_T1,PUSH_T2

	rets


*****************************************************************************
* razor with zero health

mode_dizzy	;8

;	move	*a13(GETUP_TIME),a0
;	jrnz	slkstill_going
;
;	calla	clear_damage_log
;
;	clr	a0
;	move	a0,*a13(STARS_FLAG)
;
;	SETMODE	NORMAL
;
;slkstill_going
	rets

*****************************************************************************
* opponent held overhead

mode_oppoverhead ;10

	rets

*****************************************************************************
*
* CLIMBING UP OR DOWN THE TURNBUCKLE

mode_climbturnbkl	;11

	rets


*****************************************************************************

mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	bjlnot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

bjlnot_ended
	rets


*****************************************************************************

mode_grapple	;13

	rets

*****************************************************************************

mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets

*****************************************************************************

mode_slave	;15
	rets

*****************************************************************************

mode_headhold	;16

;Bozo power move
	.ref	bozo_check
	calla	bozo_check
	jrnc	wjgfail

	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2

	movi	rzr_razors_edge_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	wjgtag
	movi	rzr_3_pile_driver_anim,a0
wjgtag	calla	change_anim1a

	rets

wjgfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	wjgexit

;	move	*a13(ATTACH_PROC),a10,L
;	jrz	wjgexit

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	wjgno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	wjgaction_table,a0
	move	*a0,a0,L
	call	a0

wjgno_interrupt
	rets

wjgexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	wjgright
	movk	MOVE_DOWN_LEFT,a1
wjgright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

wjgaction_table
	.long	wjgz,wjgpunch,wjgblock,wjgblock			;0-3
	.long	wjgsuper_punch,wjgsuper_punch,wjgblock,wjgblock	;4-7
	.long	wjgkick,wjgpunchkick,wjgblock,wjgblock		;8-11
	.long	wjgsuper_punch,wjgpunchkick,wjgblock,wjgblock	;12-15
	.long	wjgsuper_kick,wjgsuper_kick,wjgblock,wjgblock	;16-19
	.long	wjggraboh,wjggraboh,wjgblock,wjgblock		;20-23
	.long	wjgsuper_kick,wjgpunchkick,wjgblock,wjgblock	;24-27
	.long	wjggraboh,wjggraboh,wjgblock,wjgblock		;28-31

;	.long	wjgz					;0
;	.long	wjgpunch					;1
;	.long	wjgblock					;2
;	.long	wjgz					;3
;	.long	wjgsuper_punch				;4
;	.long	wjgsuper_punch,wjgz,wjgz			;5-7
;	.long	wjgkick					;8
;	.long	wjgpunchkick,wjgz,wjgz,wjgkick,wjgz,wjgz,wjgz		;9-15
;	.long	wjgsuper_kick				;16
;	.long	wjgz,wjgz,wjgz,wjggraboh,wjgz,wjgz,wjgz		;17-23
;	.long	wjgkick,wjgz,wjgz,wjgz,wjgz,wjgz,wjgz,wjgz		;24-31


************
wjgblock
wjggraboh
wjgz		;0
	rets

************
wjgpunch		;1
wjgpunchkick

	CALLA	FIND_AND_KILL_ENDLESS
	;if stick is up, do quick upslashes.  If it's down, do quick
	; downslashes.  Otherwise, do a normal upslash.
	move	*a13(STICK_VAL_CUR),a0
	btst	MOVE_UP_BIT,a0
	jrnz	wjgquick_upslashes
	btst	MOVE_DOWN_BIT,a0
	jrnz	wjgquick_dnslashes

	.ref	rzr_4_kick2_anim
	movi	rzr_4_kick2_anim,a0
	calla	change_anim1a
	WRSND	W_RAZOR,KICK_T1,KICK_T2
	rets

wjgquick_upslashes
	movi	rzr_uslashes_to_head_anim,a0
	calla	change_anim1a
	WRSND	W_RAZOR,UPRCUT_T2
	rets

wjgquick_dnslashes
	movi	rzr_dslashes_to_head_anim,a0
	calla	change_anim1a
	WRSND	W_RAZOR,UPRCUT_T2
	rets

************
wjgsuper_punch	;4

	move	*a13(STICK_VAL_CUR),a0
	btst	MOVE_DOWN_BIT,a0
	jrz	wjgz

	CALLA	FIND_AND_KILL_ENDLESS

	SPCDMG	D_UPRCUT/2,15

	movi	rzr_4_uprcut_anim,a0
	calla	change_anim1a
	WRSND	W_RAZOR,UPRCUT_T1,UPRCUT_T2

	rets

************
wjgkick		;8

	CALLA	FIND_AND_KILL_ENDLESS
;	FACE24	rzr,kick_anim
	movi	rzr_4_kick2_anim,a0
	calla	change_anim1a
	WRSND	W_RAZOR,KICK_T1,KICK_T2
	rets

************
wjgsuper_kick	;16
	rets


*****************************************************************************
mode_puppet2	;17

;	;check for the head-grab breaker
;	move	*a13(BUT_VAL_DOWN),a0
;	btst	PLAYER_KICK_BIT,a0
;	jrz	hbcout
;
;	;check the time - must do it within 20 ticks
;	move	*a13(HEAD_GRAB_TIME),a14
;	move	@PCNT,a0
;	sub	a14,a0
;	cmpi	KICK_OUT,a0
;	jrgt	hbcout
;
;	move	*a13(PLYR_TYPE),a14
;	cmpi	PTYPE_DRONE,a14
;	jrz	hbcout
;
;	;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
;	move	*a13(ATTACH_PROC),a0,L
;	clr	a14
;	move	a14,*a13(ATTACH_PROC),L
;	move	a14,*a0(ATTACH_PROC),L
;	movi	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;	SETMODE	NORMAL
;	jruc	std_knee
;
;hbcout
	rets

*****************************************************************************
mode_headheld	;19

	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking

;Bozo reversal
	calla	bozo_check
	jrnc	tlcfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_RAZOR,GRABHOLD_T1,GRABHOLD_T2

	movi	rzr_razors_edge_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	tlctag
	movi	rzr_3_pile_driver_anim,a0
tlctag	calla	change_anim1a

	rets
tlcfail
;He may have let me go by hitting his block butn!
	move	*a13(ATTACH_PROC),a0,L
	jrnz	tlcno_luck

;Make sure this guy is on ground
	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	tlcno_luck

;hit_gnd

	movi	rzr_3_head_held_stand_anim,a0
	calla	change_anim1a

tlcno_luck
	rets

*****************************************************************************
mode_chokehold	;24
	rets

*****************************************************************************

;ivyVEL	equ	30000h		;38000h	;30000h
;ivyDVEL	equ	21f0eh		;27978h	;21f0eh
;ivyVEL	equ	38000h		;38000h	;30000h
;ivyDVEL	equ	30000h		;27978h	;21f0eh
ivyVEL	equ	3a000h		;38000h	;30000h
ivyDVEL	equ	31000h		;27978h	;21f0eh


 SUBR rzr_velocity_table

;		X,	Z

	.long	0,	-ivyVEL	;0 UP

	.long	ivyDVEL,	-ivyDVEL	;1 UP-RIGHT

	.long	ivyVEL,	0	;2 RIGHT

	.long	ivyDVEL,	ivyDVEL	;3 DOWN-RIGHT

	.long	0,	ivyVEL	;4 DOWN

	.long	-ivyDVEL,	ivyDVEL	;5 DOWN-LEFT

	.long	-ivyVEL,	0	;6 LEFT

	.long	-ivyDVEL,	-ivyDVEL	;7 UP-LEFT


*****************************************************************************

 SUBR rzr_rotate_anims_table
; old = up right
	.long	rzr_stand2_anim		;new = up right
	.long	rzr_2_to_4_turn_anim	;    = down right
	.long	rzr_2_to_6_turn_anim	;    = down left ***
	.long	rzr_2_to_8_turn_anim	;    = up left

; old = down right
	.long	rzr_4_to_2_turn_anim	;new = up right
	.long	rzr_stand4_anim		;    = down right
	.long	rzr_4_to_6_turn_anim	;    = down left
	.long	rzr_4_to_8_turn_anim	;    = up left ***

; old = down left
	.long	rzr_6_to_2_turn_anim	;new = up right ***
	.long	rzr_6_to_4_turn_anim	;    = down right
	.long	rzr_stand6_anim		;    = down left
	.long	rzr_6_to_8_turn_anim	;    = up left

; old = up left
	.long	rzr_8_to_2_turn_anim	;new = up right
	.long	rzr_8_to_4_turn_anim	;    = down right ***
	.long	rzr_8_to_6_turn_anim	;    = down left
	.long	rzr_stand8_anim		;    = up left


 SUBR rzr_leg_anims_table
;  MOVE
;(trx1 - UP)				FACING
	.long	rzr_walk1_f2_anim	;1 (UP)
	.long	rzr_walk1_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk1_f4_anim	;3 (RIGHT)
	.long	rzr_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk1_f4_anim	;5 (DOWN)
	.long	rzr_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk1_f2_anim	;7 (LEFT)
	.long	rzr_walk1_f2_anim	;8 (UP-LEFT)

;(trx2 - UP-RIGHT)
	.long	rzr_walk2_f2_anim	;1 (UP)
	.long	rzr_walk2_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk2_f2_anim	;3 (RIGHT)
	.long	rzr_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk8_f4_anim	;5 (DOWN)
	.long	rzr_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk4_f2_anim	;7 (LEFT)
	.long	rzr_walk4_f2_anim	;8 (UP-LEFT)

;(trx3 - RIGHT)
	.long	rzr_walk2_f2_anim	;1 (UP)
	.long	rzr_walk2_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk2_f2_anim	;3 (RIGHT)
	.long	rzr_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk4_f4_anim	;5 (DOWN)
	.long	rzr_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk6_f2_anim	;7 (LEFT)
	.long	rzr_walk6_f2_anim	;8 (UP-LEFT)


;(trx4 - DOWN-RIGHT)
	.long	rzr_walk2_f2_anim	;1 (UP)
	.long	rzr_walk8_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk4_f4_anim	;3 (RIGHT)
	.long	rzr_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk2_f4_anim	;5 (DOWN)
	.long	rzr_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk2_f2_anim	;7 (LEFT)
	.long	rzr_walk6_f2_anim	;8 (UP-LEFT)

;(trx5 - DOWN)
	.long	rzr_walk5_f2_anim	;1 (UP)
	.long	rzr_walk5_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk5_f4_anim	;3 (RIGHT)
	.long	rzr_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk5_f4_anim	;5 (DOWN)
	.long	rzr_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk5_f2_anim	;7 (LEFT)
	.long	rzr_walk5_f2_anim	;8 (UP-LEFT)

;(trx6 - DOWN-LEFT)
	.long	rzr_walk2_f2_anim	;1 (UP)
	.long	rzr_walk6_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk2_f2_anim	;3 (RIGHT)
	.long	rzr_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk2_f4_anim	;5 (DOWN)
	.long	rzr_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk2_f2_anim	;7 (LEFT)
	.long	rzr_walk8_f2_anim	;8 (UP-LEFT)

;(trx7 - LEFT)
	.long	rzr_walk2_f2_anim	;1 (UP)
	.long	rzr_walk6_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk6_f2_anim	;3 (RIGHT)
	.long	rzr_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk4_f4_anim	;5 (DOWN)
	.long	rzr_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk2_f2_anim	;7 (LEFT)
	.long	rzr_walk2_f2_anim	;8 (UP-LEFT)

;(trx8 - UP-LEFT)
	.long	rzr_walk2_f2_anim	;1 (UP)
	.long	rzr_walk4_f2_anim	;2 (UP_RIGHT)
	.long	rzr_walk6_f2_anim	;3 (RIGHT)
	.long	rzr_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	rzr_walk6_f4_anim	;5 (DOWN)
	.long	rzr_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	rzr_walk2_f2_anim	;7 (LEFT)
	.long	rzr_walk2_f2_anim	;8 (UP-LEFT)


 SUBR rzr_torso_anims_table
; old = up right
	.long	rzr_torso2_anim		;new = up right
	.long	rzr_2_to_4_turn2_anim	;    = down right
	.long	rzr_2_to_6_turn2_anim	;    = down left ***
	.long	rzr_2_to_8_turn2_anim	;    = up left

; old = down right
	.long	rzr_4_to_2_turn2_anim	;new = up right
	.long	rzr_torso4_anim		;    = down right
	.long	rzr_4_to_6_turn2_anim	;    = down left
	.long	rzr_4_to_8_turn2_anim	;    = up left ***

; old = down left
	.long	rzr_6_to_2_turn2_anim	;new = up right ***
	.long	rzr_6_to_4_turn2_anim	;    = down right
	.long	rzr_torso6_anim		;    = down left
	.long	rzr_6_to_8_turn2_anim	;    = up left

; old = up left
	.long	rzr_8_to_2_turn2_anim	;new = up right
	.long	rzr_8_to_4_turn2_anim	;    = down right ***
	.long	rzr_8_to_6_turn2_anim	;    = down left
	.long	rzr_torso8_anim		;    = up left


******************************************************************************

	.end

