TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:             Jamie Rivett
       4                    * Initiated:            9/10/93
       5                    *
       6                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    **************************************************************
       9                    
      10                            .file   "collis.asm"
      12                            .width  132
      13                            .option b,d,l,t
      14                            .mnolist
      15                    
      16                    
      17                            .include        "macros.h"
      18                            .include        "mproc.equ"             ;Mproc equates
      19                            .include        "display.equ"           ;Display proc equates
      20                            .include        "gsp.equ"               ;Gsp asm equates
      21                            .include        "sys.equ"
      22                            .include        "game.equ"
      23                            .include        "plyr.equ"
      24                            .include        "anim.equ"
      25                            .include        "audit.equ"
      26                            .include        "special.equ"
      27                    
      28                    
      29                    ******************************************************************************
      30                    * EXTERNAL REFERENCES
      31                    
      32                            .ref    process_ptrs
      33                            .ref    get_opp_plyrmode
      34                            .ref    round_tickcount
      35                            .ref    wrestler_hit,ck_live_teammates
      36                            .ref    special_hit
      37                            .ref    wrestler_hit_special
      38                    
      39                    
      40                            .ref    plyr1_objlist
      41                            .ref    plyr2_objlist
      42                            .ref    neutral_objlist
      43                    
      44                    
      45                    ******************************************************************************
      46                    * SYMBOLS DEFINED IN THIS FILE
      47                    
      48                            .if DEBUG
      49                            BSSX    safe_plyr,16
      50                            .endif
      51                    ******************************************************************************
      52                    * EQUATES FOR THIS FILE
      53                    
      54                    *****************************************************************************
      55                    
      56 00000000            SUBR   overlap_collision
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    2

      57                    
      58                            ;don't check this for zombies
      59 00000000     b5ae          move    *a13(STATUS_FLAGS),a14
         00000010     0b50  
      60 00000020     1f8e          btst    B_ZOMBIE,a14
      61 00000030     cb00          jrnz    ylecexit
         00000040     00c9  
      62                    
      63 00000050     09e9          movi    process_ptrs,a9
         00000060 00000000! 
      64 00000080     09ca          movi    NUM_WRES,a10
         00000090     0007  
      65 000000a0           yleccollis_loop
      66                            .align
      67 00000200     972b          move    *a9+,a11,L
      68 00000210     ca00          jrz     ylecinactive
         00000220     00a9  
      69 00000230     496d          cmp     a11,a13
      70 00000240     ca00          jreq    ylecskip                        ;skip self
         00000250     00a6  
      71                    
      72 00000260     b56e          move    *a11(PLYRMODE),a14      ;walk through dead
         00000270     05c0  
      73 00000280     0b4e          cmpi    MODE_DEAD,a14
         00000290     fff6  
      74 000002a0     ca00          jreq    ylecskip
         000002b0     00a0  
      75                    
      76 000002c0     b560          move    *a11(ANIMODE),a0
         000002d0     0660  
      77 000002e0     1ea0          btst    MODE_OVERLAP_BIT,a0     ;allow overlap?
      78 000002f0     cb00          jrnz    ylecskip
         00000300     009b  
      79                    
      80                            ;skip this.  if you wanna be able to go through someone, set your
      81                            ;MODE_OVERLAP bit.  NOCOLLIS should only apply to attack collisions.
      82                    ;       move    *a13(ANIMODE),a0
      83                    ;       move    *a11(ANIMODE),a1
      84                    ;       or      a1,a0
      85                    ;       btst    MODE_NOCOLLIS_BIT,a0
      86                    ;       jrnz    ylecskip
      87                    
      88 00000310     b760          move    *a11(ATTACH_PROC),a0,L          ;skip this if attached
         00000320     03e0  
      89 00000330     480d          cmp     a0,a13
      90 00000340     ca00          jreq    ylecskip
         00000350     0096  
      91                    
      92                    
      93 00000360     b5a0          move    *a13(PLYRMODE),a0       ;if player is on ground and
         00000370     05c0  
      94 00000380     0b40          cmpi    MODE_ONGROUND,a0        ;then he can't move
         00000390     fffb  
      95 000003a0     ca00          jreq    ylecskip
         000003b0     0090  
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    3

      96                    
      97 000003c0     0b40          cmpi    MODE_DEAD,a0            ;check dead too
         000003d0     fff6  
      98 000003e0     ca00          jreq    ylecskip
         000003f0     008c  
      99                    
     100 00000400     b5a0          move    *a13(PLYRMODE),a0       ;if player is running (or bouncing)
         00000410     05c0  
     101 00000420     0b40          cmpi    MODE_RUNNING,a0         ;and opponent is on ground
         00000430     fffe  
     102 00000440     ca03          jreq    ylecrunning             ;then run through him
     103 00000450     0b40          cmpi    MODE_BOUNCING,a0
         00000460     fffa  
     104 00000470     cb06          jrne    ylecnot_running
     105 00000480           ylecrunning
     106 00000480     0d5f          calla   get_opp_plyrmode
         00000490 00000000! 
     107 000004b0     0b40          cmpi    MODE_ONGROUND,a0
         000004c0     fffb  
     108 000004d0     ca7e          jreq    ylecskip
     109 000004e0           ylecnot_running
     110                    
     111                    
     112 000004e0     b5a0          move    *a13(ANIMODE),a0
         000004f0     0660  
     113 00000500     1ea0          btst    MODE_OVERLAP_BIT,a0     ;allow overlap?
     114 00000510     cb7a          jrnz    ylecskip
     115                    
     116 00000520     b5a5          move    *a13(OBJ_COLLX2),a5
         00000530     01f0  
     117 00000540     b561          move    *a11(OBJ_COLLX1),a1
         00000550     01e0  
     118 00000560     4425          sub     a1,a5                   ;Ax2 - Bx1
     119 00000570     c674          jrle    ylecno_overlap          ;a5 = ROX
     120                    
     121 00000580     b5a0          move    *a13(OBJ_COLLX1),a0
         00000590     01e0  
     122 000005a0     b566          move    *a11(OBJ_COLLX2),a6
         000005b0     01f0  
     123 000005c0     4406          sub     a0,a6                   ;Bx2 - Ax1
     124 000005d0     c66e          jrle    ylecno_overlap          ;a6 = LOX
     125                    
     126 000005e0     b5a7          move    *a13(OBJ_COLLZ2),a7
         000005f0     0230  
     127 00000600     b561          move    *a11(OBJ_COLLZ1),a1
         00000610     0220  
     128 00000620     4427          sub     a1,a7                   ;Az2 - Bz1
     129 00000630     c668          jrle    ylecno_overlap          ;a7 = BOZ
     130                    
     131 00000640     b5a0          move    *a13(OBJ_COLLZ1),a0
         00000650     0220  
     132 00000660     b568          move    *a11(OBJ_COLLZ2),a8
         00000670     0230  
     133 00000680     4408          sub     a0,a8                   ;Bz2 - Az1
     134 00000690     c662          jrle    ylecno_overlap          ;a8 = TOZ
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    4

     135                    
     136 000006a0     b5a1          move    *a13(OBJ_COLLY2),a1
         000006b0     0210  
     137 000006c0     b560          move    *a11(OBJ_COLLY1),a0
         000006d0     0200  
     138 000006e0     4401          sub     a0,a1                   ;Ay2 - By1
     139 000006f0     c65c          jrle    ylecno_overlap
     140                    
     141 00000700     b5a1          move    *a13(OBJ_COLLY1),a1
         00000710     0200  
     142 00000720     b560          move    *a11(OBJ_COLLY2),a0
         00000730     0210  
     143 00000740     4420          sub     a1,a0                   ;By2 - Ay1
     144 00000750     c656          jrle    ylecno_overlap
     145                    
     146 00000760     b5a0          move    *a13(PLYRMODE),a0
         00000770     05c0  
     147 00000780     0b40          cmpi    MODE_RUNNING,a0
         00000790     fffe  
     148 000007a0     ca32          jreq    ylecup_down
     149                    
     150 000007b0     4ca0          move    a5,a0
     151 000007c0     48c5          cmp     a6,a5                   ;a5-a6  (ROX-LOX)
     152 000007d0     c401          jrlt    ylecrox_min
     153 000007e0     4cc0          move    a6,a0
     154 000007f0           ylecrox_min
     155 000007f0     4ce1          move    a7,a1
     156 00000800     4907          cmp     a8,a7                   ;a7-a8  (BOZ-TOZ)
     157 00000810     c401          jrlt    ylecboz_min
     158 00000820     4d01          move    a8,a1
     159 00000830           ylecboz_min
     160                    
     161 00000830     b56e          move    *a11(PLYRMODE),a14      ;if opp is on ground then
         00000840     05c0  
     162 00000850     0b4e          cmpi    MODE_ONGROUND,a14       ;slide off in Z
         00000860     fffb  
     163 00000870     cb01          jrne    ylecskp
     164                    
     165 00000880     2fe0          srl     1,a0                    ;DZ / 2
     166 00000890           ylecskp
     167                    
     168 00000890     4820          cmp     a1,a0                   ;a0-a1  (MOX-MOZ)
     169                    
     170 000008a0     c722          jrgt    ylecup_down
     171                    
     172                    
     173                    ;X glitch too big?
     174 000008b0     0b41          cmpi    3dh,a1
         000008c0     ffc2  
     175 000008d0     c71f          jrgt    ylecup_down
     176                    
     177                    
     178                    ;ylecleft_right
     179                    
     180 000008e0     48c5          cmp     a6,a5                   ;a5-a6  (ROX-LOX)
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    5

     181 000008f0     c706          jrgt    ylecright
     182                    
     183                    ;ylecleft
     184 00000900     b5a0          move    *a13(OBJ_XPOSINT),a0
         00000910     0110  
     185 00000920     44a0          sub     a5,a0                   ;XPOS-ROX
     186 00000930     b00d          move    a0,*a13(OBJ_XPOSINT)
         00000940     0110  
     187                    
     188 00000950     c005          jruc    ylecud2
     189                    
     190 00000960           ylecright
     191 00000960     b5a0          move    *a13(OBJ_XPOSINT),a0
         00000970     0110  
     192 00000980     40c0          add     a6,a0                   ;XPOS+LOX
     193 00000990     b00d          move    a0,*a13(OBJ_XPOSINT)
         000009a0     0110  
     194                    
     195 000009b0           ylecud2
     196 000009b0     b5a0          move    *a13(MOVE_DIR),a0
         000009c0     04b0  
     197 000009d0     ca30          jrz     ylecexit
     198 000009e0     0b80          andi    MOVE_UP|MOVE_DOWN,a0
         000009f0 fffffffc  
     199 00000a10     cb2c          jrnz    ylecexit
     200                    
     201 00000a20     09c0          movi    3,a0
         00000a30     0003  
     202 00000a40     4907          cmp     a8,a7                   ;a7-a8  (BOZ-TOZ)
     203 00000a50     c701          jrgt    ylecd2
     204 00000a60     03a0          neg     a0
     205 00000a70           ylecd2
     206 00000a70     b5ae          move    *a13(OBJ_ZPOSINT),a14
         00000a80     0150  
     207 00000a90     400e          add     a0,a14
     208 00000aa0     b1cd          move    a14,*a13(OBJ_ZPOSINT)
         00000ab0     0150  
     209 00000ac0     0960          rets
     210                    
     211                    
     212                    
     213                    
     214                    
     215 00000ad0           ylecup_down
     216 00000ad0     4907          cmp     a8,a7                   ;a7-a8  (BOZ-TOZ)
     217 00000ae0     c706          jrgt    ylecdown
     218                    ;ylecup
     219 00000af0     b5a0          move    *a13(OBJ_ZPOSINT),a0
         00000b00     0150  
     220 00000b10     44e0          sub     a7,a0                   ;XPOS-BOZ
     221 00000b20     b00d          move    a0,*a13(OBJ_ZPOSINT)
         00000b30     0150  
     222 00000b40     c005          jruc    yleclr2
     223                    
     224 00000b50           ylecdown
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    6

     225 00000b50     b5a0          move    *a13(OBJ_ZPOSINT),a0
         00000b60     0150  
     226 00000b70     4100          add     a8,a0                   ;XPOS-TOZ
     227 00000b80     b00d          move    a0,*a13(OBJ_ZPOSINT)
         00000b90     0150  
     228                    
     229 00000ba0           yleclr2
     230 00000ba0     b5a0          move    *a13(MOVE_DIR),a0
         00000bb0     04b0  
     231 00000bc0     ca11          jrz     ylecexit
     232 00000bd0     0b80          andi    MOVE_LEFT|MOVE_RIGHT,a0
         00000be0 fffffff3  
     233 00000c00     cb0d          jrnz    ylecexit
     234                    
     235 00000c10     09c0          movi    3,a0
         00000c20     0003  
     236 00000c30     48c5          cmp     a6,a5                   ;a5-a6  (ROX-LOX)
     237 00000c40     c701          jrgt    ylecr2
     238 00000c50     03a0          neg     a0
     239 00000c60           ylecr2
     240 00000c60     b5ae          move    *a13(OBJ_XPOSINT),a14
         00000c70     0110  
     241 00000c80     400e          add     a0,a14
     242 00000c90     b1cd          move    a14,*a13(OBJ_XPOSINT)
         00000ca0     0110  
     243 00000cb0     0960          rets
     244                    
     245                    
     246                    
     247                    
     248                    
     249                    
     250 00000cc0           ylecno_overlap
     251                    
     252 00000cc0           ylecskip
     253 00000cc0           ylecinactive
     254 00000cc0     0d8a          dsj     a10,yleccollis_loop
         00000cd0     ff3c  
     255 00000ce0           ylecexit
     256 00000ce0     0960          rets
     257                    
     258                    *****************************************************************************
     259                    
     260 00000cf0            SUBR   set_collision_boxes
     261                    
     262                    
     263 00000cf0     b7a4          move    *a13(CUR_FRAME),a4,L
         00000d00     06c0  
     264                    
     265                    ;;      move    *a4(12*16),*a13(OBJ_BOXXOFF)    ;x off
     266                    ;;      move    *a4(13*16),*a13(OBJ_BOXYOFF)    ;y off
     267                    ;;      move    *a4(14*16),*a13(OBJ_BOXWIDTH)   ;width
     268                    ;;      move    *a4(15*16),*a13(OBJ_BOXHEIGHT)  ;height
     269                    
     270 00000d10     09c0          movi    -30,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    7

         00000d20     ffe2  
     271 00000d30     b00d          move    a0,*a13(OBJ_BOXZOFF)
         00000d40     01a0  
     272 00000d50     09c0          movi    60,a0
         00000d60     003c  
     273 00000d70     b00d          move    a0,*a13(OBJ_BOXDEPTH)
         00000d80     01d0  
     274                    
     275 00000d90     b5a0          move    *a13(PLYRMODE),a0
         00000da0     05c0  
     276 00000db0     0b40          cmpi    MODE_ONGROUND,a0
         00000dc0     fffb  
     277                    
     278                    ;If running, have a smaller Z depth
     279                    
     280 00000dd0     cb09          jrnz    hwusnext
     281                    
     282 00000de0     09c0          movi    -15,a0
         00000df0     fff1  
     283 00000e00     b00d          move    a0,*a13(OBJ_BOXZOFF)
         00000e10     01a0  
     284 00000e20     09c0          movi    30,a0
         00000e30     001e  
     285 00000e40     b00d          move    a0,*a13(OBJ_BOXDEPTH)
         00000e50     01d0  
     286 00000e60     c00b          jruc    hwusnorm
     287                    
     288 00000e70           hwusnext
     289 00000e70     0b40          cmpi    MODE_RUNNING,a0
         00000e80     fffe  
     290 00000e90     cb08          jrnz    hwusnorm
     291                    
     292 00000ea0     09c0          movi    -5,a0
         00000eb0     fffb  
     293 00000ec0     b00d          move    a0,*a13(OBJ_BOXZOFF)
         00000ed0     01a0  
     294 00000ee0     09c0          movi    10,a0
         00000ef0     000a  
     295 00000f00     b00d          move    a0,*a13(OBJ_BOXDEPTH)
         00000f10     01d0  
     296                    
     297 00000f20           hwusnorm
     298                    
     299                    
     300                    
     301                    ;***********************************************************
     302                    ;
     303                    ;XJR    - maybe add 100 or so to the initial Y-pos so
     304                    ;         that colly1 or y2 never become negative...
     305                    ;
     306                    ;***********************************************************
     307                    
     308                    
     309                    
     310 00000f20     b5a0          move    *a13(OBJ_YPOSINT),a0
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    8

         00000f30     0130  
     311                    ;       move    *a4(14*16),a1           ;BOX YOFF
     312 00000f40     b481          move    *a4(IANI3Y),a1          ;BOX YOFF
         00000f50     00c0  
     313 00000f60     4420          sub     a1,a0
     314 00000f70     b00d          move    a0,*a13(OBJ_COLLY2)
         00000f80     0210  
     315                    ;       move    *a4(16*16),a1           ;BOX HEIGHT
     316 00000f90     b481          move    *a4(IANI3ID),a1         ;BOX HEIGHT
         00000fa0     00e0  
     317 00000fb0     4420          sub     a1,a0
     318 00000fc0     b00d          move    a0,*a13(OBJ_COLLY1)
         00000fd0     0200  
     319                    
     320 00000fe0     b5a0          move    *a13(OBJ_ZPOSINT),a0
         00000ff0     0150  
     321 00001000     b5a1          move    *a13(OBJ_BOXZOFF),a1
         00001010     01a0  
     322 00001020     4020          add     a1,a0
     323 00001030     b00d          move    a0,*a13(OBJ_COLLZ1)
         00001040     0220  
     324 00001050     b5a1          move    *a13(OBJ_BOXDEPTH),a1
         00001060     01d0  
     325 00001070     4020          add     a1,a0
     326 00001080     b00d          move    a0,*a13(OBJ_COLLZ2)
         00001090     0230  
     327                    
     328 000010a0     b5a0          move    *a13(OBJ_CONTROL),a0
         000010b0     0780  
     329 000010c0     1f60          btst    B_FLIPH,a0
     330 000010d0     ca0d          jrz     hwusnot_flipped
     331                    
     332                    ;hwusflipped
     333 000010e0     b5a0          move    *a13(OBJ_XPOSINT),a0
         000010f0     0110  
     334                    ;       move    *a4(13*16),a1           ;BOX XOFF
     335 00001100     b481          move    *a4(IANI3X),a1          ;BOX XOFF
         00001110     00b0  
     336 00001120     4420          sub     a1,a0
     337 00001130     b00d          move    a0,*a13(OBJ_COLLX2)
         00001140     01f0  
     338                    ;       move    *a4(15*16),a1           ;BOX WIDTH
     339 00001150     b481          move    *a4(IANI3Z),a1          ;BOX WIDTH
         00001160     00d0  
     340 00001170     4420          sub     a1,a0
     341 00001180     b00d          move    a0,*a13(OBJ_COLLX1)
         00001190     01e0  
     342 000011a0     0960          rets
     343                    
     344 000011b0           hwusnot_flipped
     345 000011b0     b5a0          move    *a13(OBJ_XPOSINT),a0
         000011c0     0110  
     346                    ;       move    *a4(13*16),a1           ;BOX XOFF
     347 000011d0     b481          move    *a4(IANI3X),a1          ;BOX XOFF
         000011e0     00b0  
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    9

     348 000011f0     4020          add     a1,a0
     349 00001200     b00d          move    a0,*a13(OBJ_COLLX1)
         00001210     01e0  
     350                    ;       move    *a4(15*16),a1           ;BOX WIDTH
     351 00001220     b481          move    *a4(IANI3Z),a1          ;BOX WIDTH
         00001230     00d0  
     352 00001240     4020          add     a1,a0
     353 00001250     b00d          move    a0,*a13(OBJ_COLLX2)
         00001260     01f0  
     354 00001270     0960          rets
     355                    
     356                    *****************************************************************************
     357                    
     358 00000000                   .bss    x1,16
     359 00000010                   .bss    x2,16
     360 00000020                   .bss    y1,16
     361 00000030                   .bss    y2,16
     362 00000040                   .bss    z1,16
     363 00000050                   .bss    z2,16
     364                    
     365                    
     366 00001280            SUBR   check_collisions
     367                    
     368                    
     369 00001280     0d3f          callr   object_collisions
         00001290     016d  
     370                    
     371 000012a0                   PUSH    a13
     372                    
     373                    
     374 000012b0     05a0          move    @round_tickcount,a0
         000012c0 00000000! 
     375 000012e0     0b80          andi    1,a0
         000012f0 fffffffe  
     376 00001310     ca2d          jrz     dmcheven
     377                    
     378                    
     379                    
     380                    ;odd
     381 00001320     09e4          movi    process_ptrs+32*NUM_WRES,a4
         00001330 000000e0! 
     382 00001350     09c5          movi    NUM_WRES,a5
         00001360     0007  
     383 00001370           dmchcollis_loop1
     384 00001370     a68a          move    -*a4,a10,L
     385 00001380     ca1e          jrz     dmchinactive1
     386                    
     387 00001390     b540          move    *a10(ANIMODE),a0
         000013a0     0660  
     388 000013b0     1f60          btst    MODE_CHECKHIT_BIT,a0
     389 000013c0     ca1a          jrz     dmchinactive1
     390                    
     391 000013d0                   PUSH    a4,a5
     392                    
     393 000013f0     0d3f          callr   set_xyz
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   10

         00001400     0110  
     394                    
     395                    
     396 00001410     09e4          movi    process_ptrs,a4
         00001420 00000000! 
     397 00001440     09c5          movi    NUM_WRES,a5
         00001450     0007  
     398 00001460           dmchcollis_loop2
     399 00001460     968d          move    *a4+,a13,L
     400 00001470     ca0c          jrz     dmchinactive2
     401 00001480     494d          cmp     a10,a13
     402 00001490     ca0a          jreq    dmchskip_self
     403                    
     404 000014a0                   PUSH    a4,a5
     405 000014c0     0d3f          callr   check_collis
         000014d0     003e  
     406 000014e0                   PULL    a4,a5
     407                    
     408 00001500     b540          move    *a10(ANIMODE),a0
         00001510     0660  
     409 00001520     1ec0          btst    MODE_STATUS_BIT,a0      ;hit someone?
     410 00001530     cb07          jrnz    dmchdone
     411 00001540           dmchskip_self
     412 00001540           dmchinactive2
     413 00001540     3de5          dsj     a5,dmchcollis_loop2
     414                    
     415                    
     416                    
     417 00001550                   PULL    a4,a5
     418 00001570           dmchinactive1
     419 00001570     0d85          dsj     a5,dmchcollis_loop1
         00001580     ffde  
     420                    
     421 00001590                   PULL    a13
     422 000015a0     0960          rets
     423                    
     424 000015b0           dmchdone
     425 000015b0                   PULL    a4,a5
     426 000015d0                   PULL    a13
     427 000015e0     0960          rets
     428                    
     429                    
     430                    
     431 000015f0           dmcheven
     432                    *
     433 000015f0     09e4          movi    process_ptrs,a4
         00001600 00000000! 
     434 00001620     09c5          movi    NUM_WRES,a5
         00001630     0007  
     435 00001640           uyxjcollis_loop1
     436 00001640     968a          move    *a4+,a10,L
     437 00001650     ca1e          jrz     uyxjinactive1
     438                    
     439 00001660     b540          move    *a10(ANIMODE),a0
         00001670     0660  
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   11

     440 00001680     1f60          btst    MODE_CHECKHIT_BIT,a0
     441 00001690     ca1a          jrz     uyxjinactive1
     442                    
     443 000016a0                   PUSH    a4,a5
     444                    
     445 000016c0     0d3f          callr   set_xyz
         000016d0     00e3  
     446                    
     447                    
     448 000016e0     09e4          movi    process_ptrs,a4
         000016f0 00000000! 
     449 00001710     09c5          movi    NUM_WRES,a5
         00001720     0007  
     450 00001730           uyxjcollis_loop2
     451 00001730     968d          move    *a4+,a13,L
     452 00001740     ca0c          jrz     uyxjinactive2
     453 00001750     494d          cmp     a10,a13
     454 00001760     ca0a          jreq    uyxjskip_self
     455                    
     456 00001770                   PUSH    a4,a5
     457 00001790     0d3f          callr   check_collis
         000017a0     0011  
     458 000017b0                   PULL    a4,a5
     459                    
     460 000017d0     b540          move    *a10(ANIMODE),a0
         000017e0     0660  
     461 000017f0     1ec0          btst    MODE_STATUS_BIT,a0      ;hit someone?
     462 00001800     cb07          jrnz    uyxjdone
     463 00001810           uyxjskip_self
     464 00001810           uyxjinactive2
     465 00001810     3de5          dsj     a5,uyxjcollis_loop2
     466                    
     467                    
     468                    
     469 00001820                   PULL    a4,a5
     470 00001840           uyxjinactive1
     471 00001840     0d85          dsj     a5,uyxjcollis_loop1
         00001850     ffde  
     472                    
     473                    
     474 00001860                   PULL    a13
     475 00001870     0960          rets
     476 00001880           uyxjdone
     477 00001880                   PULL    a4,a5
     478 000018a0                   PULL    a13
     479 000018b0     0960          rets
     480                    
     481                    
     482                    *****************************************************************************
     483                    * a10 = * offensive process
     484                    * a13 = * defensive process
     485                    
     486 000018c0            SUBRP  check_collis
     487                    
     488 000018c0     b5a0          move    *a13(ANIMODE),a0
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   12

         000018d0     0660  
     489 000018e0     1ee0          btst    MODE_NOCOLLIS_BIT,a0
     490 000018f0     cb00          jrnz    acrtno_hit
         00001900     00bf  
     491                    
     492                            ;if you're immobilized, you can't hit anyone
     493 00001910     b540          move    *a10(IMMOBILIZE_TIME),a0
         00001920     0ae0  
     494 00001930     cb00          jrnz    acrtno_hit
         00001940     00bb  
     495                    
     496 00001950     05a0          move    @x1,a0
         00001960 00000000- 
     497 00001980     b5a1          move    *a13(OBJ_COLLX2),a1
         00001990     01f0  
     498 000019a0     4801          cmp     a0,a1           ;Dx2 - Ox1
     499 000019b0     c400          jrlt    acrtno_hit              ;if Dx2 < Ox1
         000019c0     00b3  
     500                    
     501 000019d0     05a0          move    @x2,a0
         000019e0 00000010- 
     502 00001a00     b5a1          move    *a13(OBJ_COLLX1),a1
         00001a10     01e0  
     503 00001a20     4801          cmp     a0,a1           ;Dx1 - Ox2
     504 00001a30     c700          jrgt    acrtno_hit              ;if Dx1 > Ox2
         00001a40     00ab  
     505                    
     506 00001a50     05a0          move    @y1,a0
         00001a60 00000020- 
     507 00001a80     b5a1          move    *a13(OBJ_COLLY2),a1
         00001a90     0210  
     508 00001aa0     4801          cmp     a0,a1           ;Dy2 - Oy1
     509 00001ab0     c400          jrlt    acrtno_hit              ;if Dy2 < Oy1
         00001ac0     00a3  
     510                    
     511 00001ad0     05a0          move    @y2,a0
         00001ae0 00000030- 
     512 00001b00     b5a1          move    *a13(OBJ_COLLY1),a1
         00001b10     0200  
     513 00001b20     4801          cmp     a0,a1           ;Dy1 - Oy2
     514 00001b30     c700          jrgt    acrtno_hit              ;if Dy1 > Oy2
         00001b40     009b  
     515                    
     516 00001b50     05a0          move    @z1,a0
         00001b60 00000040- 
     517 00001b80     b5a1          move    *a13(OBJ_COLLZ2),a1
         00001b90     0230  
     518 00001ba0     4801          cmp     a0,a1           ;Dz2 - Oz1
     519 00001bb0     c400          jrlt    acrtno_hit              ;Dz2 < Oz1
         00001bc0     0093  
     520                    
     521 00001bd0     05a0          move    @z2,a0
         00001be0 00000050- 
     522 00001c00     b5a1          move    *a13(OBJ_COLLZ1),a1
         00001c10     0220  
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   13

     523 00001c20     4801          cmp     a0,a1           ;Dz1 - Oz2
     524 00001c30     c700          jrgt    acrtno_hit              ;Dz1 > Oz2
         00001c40     008b  
     525                    
     526                            ;we've found a hit.  ignore if attacker is in SMART_ATTACK mode and
     527                            ; victim doesn't match his target.  We check this AFTER a hit is
     528                            ; registered because it's an unlikely case and checking it beforehand
     529                            ; wastes time.
     530 00001c50     b540          move    *a10(STATUS_FLAGS),a0
         00001c60     0b50  
     531 00001c70     1f60          btst    B_SMART_ATTACK,a0
     532 00001c80     ca05          jrz     acrtnot_smart
     533 00001c90     b740          move    *a10(SMART_TARGET),a0,L
         00001ca0     0ca0  
     534 00001cb0     480d          cmp     a0,a13
     535 00001cc0     cb00          jrne    acrtno_hit
         00001cd0     0082  
     536 00001ce0           acrtnot_smart
     537                    
     538                            ;if attacker is in combo mode, only allow hits on his WHOIHIT.
     539 00001ce0     b54e          move    *a10(COMBO_COUNT),a14
         00001cf0     0af0  
     540 00001d00     ca04          jrz     acrtnot_combo
     541 00001d10     b74e          move    *a10(WHOIHIT),a14,L
         00001d20     0500  
     542 00001d30     49ae          cmp     a13,a14
     543 00001d40     cb7b          jrne    acrtno_hit
     544 00001d50           acrtnot_combo
     545                    
     546                            ;check for a dead victim with live teammates.
     547 00001d50     b5a0          move    *a13(PLYRMODE),a0
         00001d60     05c0  
     548 00001d70     0b40          cmpi    MODE_DEAD,a0
         00001d80     fff6  
     549 00001d90     cb0d          jrne    acrtnot_dead
     550                    
     551 00001da0     4da0          move    a13,a0
     552 00001db0     0d5f          calla   ck_live_teammates
         00001dc0 00000000! 
     553 00001de0     c871          jrc     acrtno_hit
     554                    
     555                            ;check for a dead victim and an AMODE_PUPPET attack.
     556 00001df0     b54e          move    *a10(ATTACK_MODE),a14
         00001e00     05d0  
     557 00001e10     0b4e          cmpi    AMODE_PUPPET,a14
         00001e20     ffea  
     558 00001e30     ca6c          jreq    acrtno_hit
     559 00001e40     0b4e          cmpi    AMODE_PUPPET2,a14
         00001e50     ffe0  
     560 00001e60     ca69          jreq    acrtno_hit
     561 00001e70           acrtnot_dead
     562                    
     563                            ;zombies can never be hit
     564 00001e70     b5ae          move    *a13(STATUS_FLAGS),a14
         00001e80     0b50  
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   14

     565 00001e90     1f8e          btst    B_ZOMBIE,a14
     566 00001ea0     cb65          jrnz    acrtno_hit
     567                    
     568                            ;pinned wrestlers can only be hit by wrestlers who've done pins.
     569 00001eb0     b54e          move    *a10(STATUS_FLAGS),a14
         00001ec0     0b50  
     570 00001ed0     1fce          btst    B_DID_PIN,a14
     571 00001ee0     cb04          jrnz    acrtnot_pinned
     572 00001ef0     b5ae          move    *a13(STATUS_FLAGS),a14
         00001f00     0b50  
     573 00001f10     1f4e          btst    B_PINNED,a14
     574 00001f20     cb5d          jrnz    acrtno_hit
     575 00001f30           acrtnot_pinned
     576                    
     577                            ;make sure INRING values match
     578 00001f30     b540          move    *a10(INRING),a0
         00001f40     0560  
     579 00001f50     b5ae          move    *a13(INRING),a14
         00001f60     0560  
     580 00001f70     480e          cmp     a0,a14
     581 00001f80     cb57          jrne    acrtno_hit
     582                    
     583                            ;if victim is in MODE_INAIR or MODE_INAIR2, don't let pushes hit.
     584 00001f90     b54e          move    *a10(ATTACK_MODE),a14
         00001fa0     05d0  
     585 00001fb0     0b4e          cmpi    AMODE_PUSH,a14
         00001fc0     fff6  
     586 00001fd0     cb08          jrne    acrtno_pushfly
     587 00001fe0     b5ae          move    *a13(PLYRMODE),a14
         00001ff0     05c0  
     588 00002000     0b4e          cmpi    MODE_INAIR,a14
         00002010     fffd  
     589 00002020     ca4d          jreq    acrtno_hit
     590 00002030     0b4e          cmpi    MODE_INAIR2,a14
         00002040     ffea  
     591 00002050     ca4a          jreq    acrtno_hit
     592 00002060           acrtno_pushfly
     593                    
     594                            ;if the victim is doing a push, his PUSH bit will be set in status
     595                            ; flags.  If it is, only flying attacks can hit him.
     596 00002060     b7ae          move    *a13(STATUS_FLAGS),a14,L
         00002070     0b50  
     597 00002080     1d6e          btst    B_PUSH,a14
     598 00002090     ca0c          jrz     acrtnot_push
     599 000020a0     b54e          move    *a10(ATTACK_MODE),a14
         000020b0     05d0  
     600 000020c0     0b4e          cmpi    AMODE_FLYKICK,a14
         000020d0     fffc  
     601 000020e0     ca07          jreq    acrtnot_push
     602 000020f0     0b4e          cmpi    AMODE_BSTOMP,a14
         00002100     ffe5  
     603 00002110     ca04          jreq    acrtnot_push
     604 00002120     0b4e          cmpi    AMODE_BLBOWDROP,a14
         00002130     ffe6  
     605 00002140     ca01          jreq    acrtnot_push
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   15

     606 00002150     c03a          jruc    acrtno_hit
     607 00002160           acrtnot_push
     608                    
     609                            ;if attacker is in MODE_WAITHITOPP, clear said bit and zero ANICNTs.
     610 00002160     b54e          move    *a10(ANIMODE),a14
         00002170     0660  
     611 00002180     1e2e          btst    MODE_WAITHITOPP_BIT,a14
     612 00002190     ca0a          jrz     acrtskip_whopp
     613                    
     614 000021a0     0b8e          andni   MODE_WAITHITOPP,a14
         000021b0 00004000  
     615 000021d0     b1ca          move    a14,*a10(ANIMODE)
         000021e0     0660  
     616 000021f0     57ce          clr     a14
     617 00002200     b1ca          move    a14,*a10(ANICNT)
         00002210     06b0  
     618 00002220     b1ca          move    a14,*a10(ANICNT2)
         00002230     0730  
     619 00002240           acrtskip_whopp
     620                    
     621                            .if DEBUG
     622                            ;if safe_plyr is set, disregard attacks on players
     623                            move    @safe_plyr,a14
     624                            jrz     acrtskip_safeplyr
     625                            move    *a13(PLYR_TYPE),a14
     626                            cmpi    PTYPE_PLAYER,a14
     627                            jreq    acrtno_hit
     628                    acrtskip_safeplyr
     629                            .endif
     630                    
     631 00002240     57ce          clr     a14                     ;false
     632 00002250     b5a0          move    *a13(PLYRMODE),a0
         00002260     05c0  
     633 00002270     0b40          cmpi    MODE_BLOCK,a0
         00002280     fff8  
     634 00002290     cb01          jrne    acrtnoblock
     635 000022a0     102e          inc     a14                     ;true
     636 000022b0           acrtnoblock
     637 000022b0     b1ca          move    a14,*a10(HITBLOCKER)
         000022c0     0540  
     638                    
     639 000022d0     09c0          movi    MOVE_RIGHT,a0
         000022e0     0008  
     640 000022f0     b541          move    *a10(OBJ_XPOSINT),a1
         00002300     0110  
     641 00002310     b5a2          move    *a13(OBJ_XPOSINT),a2
         00002320     0110  
     642 00002330     4841          cmp     a2,a1
     643 00002340     c702          jrgt    acrthit_from_right
     644 00002350     09c0          movi    MOVE_LEFT,a0
         00002360     0004  
     645 00002370           acrthit_from_right
     646 00002370     09ce          movi    MOVE_DOWN,a14
         00002380     0002  
     647 00002390     b741          move    *a10(OBJ_ZPOS),a1,L
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   16

         000023a0     0140  
     648 000023b0     b7a2          move    *a13(OBJ_ZPOS),a2,L
         000023c0     0140  
     649 000023d0     4841          cmp     a2,a1
     650 000023e0     c702          jrgt    acrthit_from_below
     651 000023f0     09ce          movi    MOVE_UP,a14
         00002400     0001  
     652 00002410           acrthit_from_below
     653 00002410     55c0          or      a14,a0
     654 00002420     b00d          move    a0,*a13(PLYR_HIT_SIDE)
         00002430     0550  
     655 00002440     b00a          move    a0,*a10(PLYR_HIT_SIDE)
         00002450     0550  
     656                    
     657 00002460     b540          move    *a10(ANIMODE),a0
         00002470     0660  
     658 00002480     0ba0          ori     MODE_STATUS2,a0         ;this flag set whenever
         00002490 00000200  
     659 000024b0     b00a          move    a0,*a10(ANIMODE)        ;a successful hit
         000024c0     0660  
     660                    
     661 000024d0     0d5f          calla   wrestler_hit
         000024e0 00000000! 
     662 00002500           acrtno_hit
     663 00002500     0960          rets
     664                    
     665                    *****************************************************************************
     666                    * a10 = *process
     667                    * sets x1,x2,y1,y2,z1 and z2
     668                    
     669 00002510            SUBRP set_xyz
     670                    
     671 00002510     b540          move    *a10(OBJ_YPOSINT),a0
         00002520     0130  
     672 00002530     b541          move    *a10(OBJ_ATTYOFF),a1
         00002540     0250  
     673 00002550     4020          add     a1,a0
     674 00002560     0580          move    a0,@y1
         00002570 00000020- 
     675 00002590     b541          move    *a10(OBJ_ATTHEIGHT),a1
         000025a0     0280  
     676 000025b0     4020          add     a1,a0
     677 000025c0     0580          move    a0,@y2
         000025d0 00000030- 
     678                    
     679 000025f0     b540          move    *a10(OBJ_ZPOSINT),a0
         00002600     0150  
     680 00002610     b541          move    *a10(OBJ_ATTZOFF),a1
         00002620     0260  
     681 00002630     4020          add     a1,a0
     682 00002640     0580          move    a0,@z1
         00002650 00000040- 
     683 00002670     b541          move    *a10(OBJ_ATTDEPTH),a1
         00002680     0290  
     684 00002690     4020          add     a1,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   17

     685 000026a0     0580          move    a0,@z2
         000026b0 00000050- 
     686                    
     687                    
     688                    ;       move    *a10(FACING_DIR),a14
     689                    ;       btst    PLAYER_RIGHT_BIT,a14
     690                    ;       jrnz    jnsffacing_right
     691                    
     692 000026d0     b54e          move    *a10(OBJ_CONTROL),a14
         000026e0     0780  
     693 000026f0     1f6e          btst    B_FLIPH,a14
     694 00002700     ca0f          jrz     jnsffacing_right
     695                    
     696                    
     697                    ;facing_left
     698 00002710     b540          move    *a10(OBJ_XPOSINT),a0
         00002720     0110  
     699 00002730     b541          move    *a10(OBJ_ATTXOFF),a1
         00002740     0240  
     700 00002750     4420          sub     a1,a0
     701 00002760     0580          move    a0,@x2
         00002770 00000010- 
     702 00002790     b541          move    *a10(OBJ_ATTWIDTH),a1
         000027a0     0270  
     703 000027b0     4420          sub     a1,a0
     704 000027c0     0580          move    a0,@x1
         000027d0 00000000- 
     705 000027f0     0960          rets
     706                    
     707 00002800           jnsffacing_right
     708 00002800     b540          move    *a10(OBJ_XPOSINT),a0
         00002810     0110  
     709 00002820     b541          move    *a10(OBJ_ATTXOFF),a1
         00002830     0240  
     710 00002840     4020          add     a1,a0
     711 00002850     0580          move    a0,@x1
         00002860 00000000- 
     712 00002880     b541          move    *a10(OBJ_ATTWIDTH),a1
         00002890     0270  
     713 000028a0     4020          add     a1,a0
     714 000028b0     0580          move    a0,@x2
         000028c0 00000010- 
     715                    
     716 000028e0     0960          rets
     717                    
     718                    
     719                    *****************************************************************************
     720                    *
     721                    * a10 = * wrestler process to turn collisions off
     722                    
     723 000028f0            SUBR   wres_collis_off
     724                    
     725 000028f0     b540          move    *a10(ANIMODE),a0
         00002900     0660  
     726 00002910     0b80          andni   MODE_CHECKHIT,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   18

         00002920 00000010  
     727 00002940     b00a          move    a0,*a10(ANIMODE)
         00002950     0660  
     728 00002960     0960          rets
     729                    
     730                    
     731                    *****************************************************************************
     732                    
     733 00002970            SUBR   object_collisions
     734                    
     735                    ;FIX!!!  This can point to a non existent proc
     736                    
     737 00002970     09e0          movi    plyr1_objlist,a0
         00002980 00000000! 
     738 000029a0     0d3f          callr   set_spobj_boxes
         000029b0     0093  
     739                    
     740 000029c0     09e0          movi    plyr2_objlist,a0
         000029d0 00000000! 
     741 000029f0     0d3f          callr   set_spobj_boxes
         00002a00     008e  
     742                    
     743 00002a10     09e0          movi    neutral_objlist,a0
         00002a20 00000000! 
     744 00002a40     0d3f          callr   set_spobj_boxes
         00002a50     0089  
     745                    
     746                    
     747 00002a60     09e6          movi    plyr1_objlist,a6
         00002a70 00000000! 
     748 00002a90     09e7          movi    plyr2_objlist,a7
         00002aa0 00000000! 
     749 00002ac0     0d3f          callr   objlist2objlist_collis
         00002ad0     004d  
     750                    
     751                    
     752 00002ae0     09ea          movi    plyr1_objlist,a10
         00002af0 00000000! 
     753 00002b10     0d3f          callr   objlist2player_collis
         00002b20     000b  
     754                    
     755 00002b30     09ea          movi    plyr2_objlist,a10
         00002b40 00000000! 
     756 00002b60     0d3f          callr   objlist2player_collis
         00002b70     0006  
     757                    
     758 00002b80     09ea          movi    neutral_objlist,a10
         00002b90 00000000! 
     759 00002bb0     0d3f          callr   objlist2player_collis
         00002bc0     0001  
     760                    
     761                    
     762 00002bd0     0960          rets
     763                    
     764                    
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   19

     765                    *****************************************************************************
     766                    ;a10 = objlist1
     767                    
     768 00002be0           objlist2player_collis
     769                    
     770 00002be0                   PUSH    a13
     771                    
     772 00002bf0     874a          move    *a10,a10,L
     773 00002c00     ca38          jrz     dyuvdone
     774 00002c10           dyuvlp1
     775                    
     776 00002c10     b540          move    *a10(SP_COLLX1),a0
         00002c20     02f0  
     777 00002c30     b541          move    *a10(SP_COLLX2),a1
         00002c40     0300  
     778                    
     779 00002c50     b542          move    *a10(SP_COLLY1),a2
         00002c60     0310  
     780 00002c70     b543          move    *a10(SP_COLLY2),a3
         00002c80     0320  
     781                    
     782 00002c90     b544          move    *a10(SP_COLLZ1),a4
         00002ca0     0330  
     783 00002cb0     b545          move    *a10(SP_COLLZ2),a5
         00002cc0     0340  
     784                    
     785                    
     786 00002cd0     09e7          movi    process_ptrs,a7
         00002ce0 00000000! 
     787 00002d00     09c6          movi    NUM_WRES,a6
         00002d10     0007  
     788 00002d20           dyuvcollis_loop
     789 00002d20     96ed          move    *a7+,a13,L
     790 00002d30     ca20          jrz     dyuvinactive
     791                    
     792 00002d40     b5ae          move    *a13(ANIMODE),a14
         00002d50     0660  
     793 00002d60     1eee          btst    MODE_NOCOLLIS_BIT,a14
     794 00002d70     cb1c          jrnz    dyuvno_hit
     795                    
     796                    ;check if projectile should hit this guy...(same side)
     797                    
     798 00002d80     b5ae          move    *a13(OBJ_COLLX2),a14
         00002d90     01f0  
     799 00002da0     480e          cmp     a0,a14          ;Dx2 - Ox1
     800 00002db0     c418          jrlt    dyuvno_hit              ;if Dx2 < Ox1
     801                    
     802 00002dc0     b5ae          move    *a13(OBJ_COLLX1),a14
         00002dd0     01e0  
     803 00002de0     482e          cmp     a1,a14          ;Dx1 - Ox2
     804 00002df0     c714          jrgt    dyuvno_hit              ;if Dx1 > Ox2
     805                    
     806 00002e00     b5ae          move    *a13(OBJ_COLLY2),a14
         00002e10     0210  
     807 00002e20     484e          cmp     a2,a14          ;Dy2 - Oy1
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   20

     808 00002e30     c410          jrlt    dyuvno_hit              ;if Dy2 < Oy1
     809                    
     810 00002e40     b5ae          move    *a13(OBJ_COLLY1),a14
         00002e50     0200  
     811 00002e60     486e          cmp     a3,a14          ;Dy1 - Oy2
     812 00002e70     c70c          jrgt    dyuvno_hit              ;if Dy1 > Oy2
     813                    
     814 00002e80     b5ae          move    *a13(OBJ_COLLZ2),a14
         00002e90     0230  
     815 00002ea0     488e          cmp     a4,a14          ;Dz2 - Oz1
     816 00002eb0     c408          jrlt    dyuvno_hit              ;Dz2 < Oz1
     817                    
     818 00002ec0     b5ae          move    *a13(OBJ_COLLZ1),a14
         00002ed0     0220  
     819 00002ee0     48ae          cmp     a5,a14          ;Dz1 - Oz2
     820 00002ef0     c704          jrgt    dyuvno_hit              ;Dz1 > Oz2
     821                    
     822                    ;hit
     823 00002f00     0d5f          calla   wrestler_hit_special
         00002f10 00000000! 
     824                    
     825 00002f30     c005          jruc    dyuvdone
     826                    
     827 00002f40           dyuvno_hit
     828 00002f40           dyuvinactive
     829 00002f40     0d86          dsj     a6,dyuvcollis_loop
         00002f50     ffdc  
     830                    
     831                    
     832 00002f60     b74a          move    *a10(SP_NEXT),a10,L
         00002f70     0160  
     833 00002f80     cbc8          jrnz    dyuvlp1
     834                    
     835 00002f90           dyuvdone
     836                    
     837 00002f90                   PULL    a13
     838 00002fa0     0960          rets
     839                    
     840                    
     841                    *****************************************************************************
     842                    ;a6 = objlist1
     843                    ;a7 = objlist2
     844                    
     845 00002fb0           objlist2objlist_collis
     846                    
     847 00002fb0     86c6          move    *a6,a6,L
     848 00002fc0     ca31          jrz     oahkdone
     849 00002fd0           oahklp1
     850 00002fd0     4ce8          move    a7,a8
     851 00002fe0     8708          move    *a8,a8,L
     852 00002ff0     ca2e          jrz     oahkdone
     853                    
     854 00003000     b4c0          move    *a6(SP_COLLX1),a0
         00003010     02f0  
     855 00003020     b4c1          move    *a6(SP_COLLX2),a1
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   21

         00003030     0300  
     856                    
     857 00003040     b4c2          move    *a6(SP_COLLY1),a2
         00003050     0310  
     858 00003060     b4c3          move    *a6(SP_COLLY2),a3
         00003070     0320  
     859                    
     860 00003080     b4c4          move    *a6(SP_COLLZ1),a4
         00003090     0330  
     861 000030a0     b4c5          move    *a6(SP_COLLZ2),a5
         000030b0     0340  
     862                    
     863 000030c0           oahklp2
     864 000030c0     b50e          move    *a8(SP_COLLX2),a14
         000030d0     0300  
     865 000030e0     480e          cmp     a0,a14          ;Dx2 - Ox1
     866 000030f0     c418          jrlt    oahkno_hit              ;if Dx2 < Ox1
     867                    
     868 00003100     b50e          move    *a8(SP_COLLX1),a14
         00003110     02f0  
     869 00003120     482e          cmp     a1,a14          ;Dx1 - Ox2
     870 00003130     c714          jrgt    oahkno_hit              ;if Dx1 > Ox2
     871                    
     872 00003140     b50e          move    *a8(SP_COLLY2),a14
         00003150     0320  
     873 00003160     484e          cmp     a2,a14          ;Dy2 - Oy1
     874 00003170     c410          jrlt    oahkno_hit              ;if Dy2 < Oy1
     875                    
     876 00003180     b50e          move    *a8(SP_COLLY1),a14
         00003190     0310  
     877 000031a0     486e          cmp     a3,a14          ;Dy1 - Oy2
     878 000031b0     c70c          jrgt    oahkno_hit              ;if Dy1 > Oy2
     879                    
     880 000031c0     b50e          move    *a8(SP_COLLZ2),a14
         000031d0     0340  
     881 000031e0     488e          cmp     a4,a14          ;Dz2 - Oz1
     882 000031f0     c408          jrlt    oahkno_hit              ;Dz2 < Oz1
     883                    
     884 00003200     b50e          move    *a8(SP_COLLZ1),a14
         00003210     0330  
     885 00003220     48ae          cmp     a5,a14          ;Dz1 - Oz2
     886 00003230     c704          jrgt    oahkno_hit              ;Dz1 > Oz2
     887                    
     888                    ;hit
     889 00003240     0d5f          calla   special_hit
         00003250 00000000! 
     890                    
     891 00003270     c006          jruc    oahkdone
     892                    
     893 00003280           oahkno_hit
     894                    
     895 00003280     b708          move    *a8(SP_NEXT),a8,L
         00003290     0160  
     896 000032a0     cbe1          jrnz    oahklp2
     897                    
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   22

     898 000032b0     b6c6          move    *a6(SP_NEXT),a6,L
         000032c0     0160  
     899 000032d0     cbcf          jrnz    oahklp1
     900                    
     901 000032e0           oahkdone
     902 000032e0     0960          rets
     903                    
     904                    
     905                    *****************************************************************************
     906                    
     907 000032f0           set_spobj_boxes
     908                    
     909 000032f0     8600          move    *a0,a0,L
     910 00003300     ca38          jrz     aobydone
     911 00003310           aobylp
     912                    
     913 00003310     b401          move    *a0(SP_OBJ_YPOSINT),a1
         00003320     0130  
     914 00003330     b40e          move    *a0(SP_YOFF),a14
         00003340     02b0  
     915 00003350     41c1          add     a14,a1
     916 00003360     b020          move    a1,*a0(SP_COLLY1)
         00003370     0310  
     917 00003380     b40e          move    *a0(SP_HEIGHT),a14
         00003390     02c0  
     918 000033a0     41c1          add     a14,a1
     919 000033b0     b020          move    a1,*a0(SP_COLLY2)
         000033c0     0320  
     920                    
     921                    
     922 000033d0     b401          move    *a0(SP_OBJ_ZPOSINT),a1
         000033e0     0150  
     923 000033f0     b40e          move    *a0(SP_ZOFF),a14
         00003400     02d0  
     924 00003410     41c1          add     a14,a1
     925 00003420     b020          move    a1,*a0(SP_COLLZ1)
         00003430     0330  
     926 00003440     b40e          move    *a0(SP_DEPTH),a14
         00003450     02e0  
     927 00003460     41c1          add     a14,a1
     928 00003470     b020          move    a1,*a0(SP_COLLZ2)
         00003480     0340  
     929                    
     930                    
     931 00003490     b40e          move    *a0(SP_OBJCONTROL),a14
         000034a0     0180  
     932 000034b0     1f6e          btst    B_FLIPH,a14
     933 000034c0     ca0d          jrz     aobynot_flipped
     934                    
     935                    ;aobyflipped
     936 000034d0     b401          move    *a0(SP_OBJ_XPOSINT),a1
         000034e0     0110  
     937 000034f0     b40e          move    *a0(SP_XOFF),a14
         00003500     0290  
     938 00003510     45c1          sub     a14,a1
TMS340 COFF Macro Assembler Version 6.10     Wed Oct 25 01:47:58 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   23

     939 00003520     b020          move    a1,*a0(SP_COLLX2)
         00003530     0300  
     940 00003540     b40e          move    *a0(SP_WIDTH),a14
         00003550     02a0  
     941 00003560     45c1          sub     a14,a1
     942 00003570     b020          move    a1,*a0(SP_COLLX1)
         00003580     02f0  
     943 00003590     c00c          jruc    aobycnt
     944                    
     945 000035a0           aobynot_flipped
     946 000035a0     b401          move    *a0(SP_OBJ_XPOSINT),a1
         000035b0     0110  
     947 000035c0     b40e          move    *a0(SP_XOFF),a14
         000035d0     0290  
     948 000035e0     41c1          add     a14,a1
     949 000035f0     b020          move    a1,*a0(SP_COLLX1)
         00003600     02f0  
     950 00003610     b40e          move    *a0(SP_WIDTH),a14
         00003620     02a0  
     951 00003630     41c1          add     a14,a1
     952 00003640     b020          move    a1,*a0(SP_COLLX2)
         00003650     0300  
     953                    
     954 00003660           aobycnt
     955 00003660     b600          move    *a0(SP_NEXT),a0,L
         00003670     0160  
     956 00003680     cbc8          jrnz    aobylp
     957                    
     958 00003690           aobydone
     959 00003690     0960          rets
     960                    
     961                    
     962                    ******************************************************************************
     963                    
     964                            .end

 No Errors,  No Warnings
