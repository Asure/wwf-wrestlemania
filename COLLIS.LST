TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "collis.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "mproc.equ"             ;Mproc equates
      11                            .include        "display.equ"           ;Display proc equates
      12                            .include        "gsp.equ"               ;Gsp asm equates
      13                            .include        "sys.equ"
      14                            .include        "game.equ"
      15                            .include        "plyr.equ"
      16                            .include        "anim.equ"
      17                            .include        "audit.equ"
      18                            .include        "special.equ"
      19                    
      20                    
      21                    
      22                            .ref    process_ptrs
      23                            .ref    get_opp_plyrmode
      24                            .ref    round_tickcount
      25                            .ref    wrestler_hit,ck_live_teammates
      26                            .ref    special_hit
      27                            .ref    wrestler_hit_special
      28                    
      29                    
      30                            .ref    plyr1_objlist
      31                            .ref    plyr2_objlist
      32                            .ref    neutral_objlist
      33                    
      34                    
      35                    
      36                            .if DEBUG
      37                            BSSX    safe_plyr,16
      38                            .endif
      39                    
      40                    
      41 00000000            SUBR   overlap_collision
      42                    
      43                            ;don't check this for zombies
      44 00000000     b5ae          move    *a13(STATUS_FLAGS),a14
         00000010     0b50  
      45 00000020     1f8e          btst    B_ZOMBIE,a14
      46 00000030     cb00          jrnz    dksuexit
         00000040     00c9  
      47                    
      48 00000050     09e9          movi    process_ptrs,a9
         00000060 00000000! 
      49 00000080     09ca          movi    NUM_WRES,a10
         00000090     0007  
      50 000000a0           dksucollis_loop
      51                            .align
      52 00000200     972b          move    *a9+,a11,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    2

      53 00000210     ca00          jrz     dksuinactive
         00000220     00a9  
      54 00000230     496d          cmp     a11,a13
      55 00000240     ca00          jreq    dksuskip                        ;skip self
         00000250     00a6  
      56                    
      57 00000260     b56e          move    *a11(PLYRMODE),a14      ;walk through dead
         00000270     05c0  
      58 00000280     0b4e          cmpi    MODE_DEAD,a14
         00000290     fff6  
      59 000002a0     ca00          jreq    dksuskip
         000002b0     00a0  
      60                    
      61 000002c0     b560          move    *a11(ANIMODE),a0
         000002d0     0660  
      62 000002e0     1ea0          btst    MODE_OVERLAP_BIT,a0     ;allow overlap?
      63 000002f0     cb00          jrnz    dksuskip
         00000300     009b  
      64                    
      65                            ;skip this.  if you wanna be able to go through someone, set your
      66                            ;MODE_OVERLAP bit.  NOCOLLIS should only apply to attack collisions.
      67                    
      68 00000310     b760          move    *a11(ATTACH_PROC),a0,L          ;skip this if attached
         00000320     03e0  
      69 00000330     480d          cmp     a0,a13
      70 00000340     ca00          jreq    dksuskip
         00000350     0096  
      71                    
      72                    
      73 00000360     b5a0          move    *a13(PLYRMODE),a0       ;if player is on ground and
         00000370     05c0  
      74 00000380     0b40          cmpi    MODE_ONGROUND,a0        ;then he can't move
         00000390     fffb  
      75 000003a0     ca00          jreq    dksuskip
         000003b0     0090  
      76                    
      77 000003c0     0b40          cmpi    MODE_DEAD,a0            ;check dead too
         000003d0     fff6  
      78 000003e0     ca00          jreq    dksuskip
         000003f0     008c  
      79                    
      80 00000400     b5a0          move    *a13(PLYRMODE),a0       ;if player is running (or bouncing)
         00000410     05c0  
      81 00000420     0b40          cmpi    MODE_RUNNING,a0         ;and opponent is on ground
         00000430     fffe  
      82 00000440     ca03          jreq    dksurunning             ;then run through him
      83 00000450     0b40          cmpi    MODE_BOUNCING,a0
         00000460     fffa  
      84 00000470     cb06          jrne    dksunot_running
      85 00000480           dksurunning
      86 00000480     0d5f          calla   get_opp_plyrmode
         00000490 00000000! 
      87 000004b0     0b40          cmpi    MODE_ONGROUND,a0
         000004c0     fffb  
      88 000004d0     ca7e          jreq    dksuskip
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    3

      89 000004e0           dksunot_running
      90                    
      91                    
      92 000004e0     b5a0          move    *a13(ANIMODE),a0
         000004f0     0660  
      93 00000500     1ea0          btst    MODE_OVERLAP_BIT,a0     ;allow overlap?
      94 00000510     cb7a          jrnz    dksuskip
      95                    
      96 00000520     b5a5          move    *a13(OBJ_COLLX2),a5
         00000530     01f0  
      97 00000540     b561          move    *a11(OBJ_COLLX1),a1
         00000550     01e0  
      98 00000560     4425          sub     a1,a5                   ;Ax2 - Bx1
      99 00000570     c674          jrle    dksuno_overlap          ;a5 = ROX
     100                    
     101 00000580     b5a0          move    *a13(OBJ_COLLX1),a0
         00000590     01e0  
     102 000005a0     b566          move    *a11(OBJ_COLLX2),a6
         000005b0     01f0  
     103 000005c0     4406          sub     a0,a6                   ;Bx2 - Ax1
     104 000005d0     c66e          jrle    dksuno_overlap          ;a6 = LOX
     105                    
     106 000005e0     b5a7          move    *a13(OBJ_COLLZ2),a7
         000005f0     0230  
     107 00000600     b561          move    *a11(OBJ_COLLZ1),a1
         00000610     0220  
     108 00000620     4427          sub     a1,a7                   ;Az2 - Bz1
     109 00000630     c668          jrle    dksuno_overlap          ;a7 = BOZ
     110                    
     111 00000640     b5a0          move    *a13(OBJ_COLLZ1),a0
         00000650     0220  
     112 00000660     b568          move    *a11(OBJ_COLLZ2),a8
         00000670     0230  
     113 00000680     4408          sub     a0,a8                   ;Bz2 - Az1
     114 00000690     c662          jrle    dksuno_overlap          ;a8 = TOZ
     115                    
     116 000006a0     b5a1          move    *a13(OBJ_COLLY2),a1
         000006b0     0210  
     117 000006c0     b560          move    *a11(OBJ_COLLY1),a0
         000006d0     0200  
     118 000006e0     4401          sub     a0,a1                   ;Ay2 - By1
     119 000006f0     c65c          jrle    dksuno_overlap
     120                    
     121 00000700     b5a1          move    *a13(OBJ_COLLY1),a1
         00000710     0200  
     122 00000720     b560          move    *a11(OBJ_COLLY2),a0
         00000730     0210  
     123 00000740     4420          sub     a1,a0                   ;By2 - Ay1
     124 00000750     c656          jrle    dksuno_overlap
     125                    
     126 00000760     b5a0          move    *a13(PLYRMODE),a0
         00000770     05c0  
     127 00000780     0b40          cmpi    MODE_RUNNING,a0
         00000790     fffe  
     128 000007a0     ca32          jreq    dksuup_down
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    4

     129                    
     130 000007b0     4ca0          move    a5,a0
     131 000007c0     48c5          cmp     a6,a5                   ;a5-a6  (ROX-LOX)
     132 000007d0     c401          jrlt    dksurox_min
     133 000007e0     4cc0          move    a6,a0
     134 000007f0           dksurox_min
     135 000007f0     4ce1          move    a7,a1
     136 00000800     4907          cmp     a8,a7                   ;a7-a8  (BOZ-TOZ)
     137 00000810     c401          jrlt    dksuboz_min
     138 00000820     4d01          move    a8,a1
     139 00000830           dksuboz_min
     140                    
     141 00000830     b56e          move    *a11(PLYRMODE),a14      ;if opp is on ground then
         00000840     05c0  
     142 00000850     0b4e          cmpi    MODE_ONGROUND,a14       ;slide off in Z
         00000860     fffb  
     143 00000870     cb01          jrne    dksuskp
     144                    
     145 00000880     2fe0          srl     1,a0                    ;DZ / 2
     146 00000890           dksuskp
     147                    
     148 00000890     4820          cmp     a1,a0                   ;a0-a1  (MOX-MOZ)
     149                    
     150 000008a0     c722          jrgt    dksuup_down
     151                    
     152                    
     153 000008b0     0b41          cmpi    3dh,a1
         000008c0     ffc2  
     154 000008d0     c71f          jrgt    dksuup_down
     155                    
     156                    
     157                    
     158 000008e0     48c5          cmp     a6,a5                   ;a5-a6  (ROX-LOX)
     159 000008f0     c706          jrgt    dksuright
     160                    
     161 00000900     b5a0          move    *a13(OBJ_XPOSINT),a0
         00000910     0110  
     162 00000920     44a0          sub     a5,a0                   ;XPOS-ROX
     163 00000930     b00d          move    a0,*a13(OBJ_XPOSINT)
         00000940     0110  
     164                    
     165 00000950     c005          jruc    dksuud2
     166                    
     167 00000960           dksuright
     168 00000960     b5a0          move    *a13(OBJ_XPOSINT),a0
         00000970     0110  
     169 00000980     40c0          add     a6,a0                   ;XPOS+LOX
     170 00000990     b00d          move    a0,*a13(OBJ_XPOSINT)
         000009a0     0110  
     171                    
     172 000009b0           dksuud2
     173 000009b0     b5a0          move    *a13(MOVE_DIR),a0
         000009c0     04b0  
     174 000009d0     ca30          jrz     dksuexit
     175 000009e0     0b80          andi    MOVE_UP|MOVE_DOWN,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    5

         000009f0 fffffffc  
     176 00000a10     cb2c          jrnz    dksuexit
     177                    
     178 00000a20     09c0          movi    3,a0
         00000a30     0003  
     179 00000a40     4907          cmp     a8,a7                   ;a7-a8  (BOZ-TOZ)
     180 00000a50     c701          jrgt    dksud2
     181 00000a60     03a0          neg     a0
     182 00000a70           dksud2
     183 00000a70     b5ae          move    *a13(OBJ_ZPOSINT),a14
         00000a80     0150  
     184 00000a90     400e          add     a0,a14
     185 00000aa0     b1cd          move    a14,*a13(OBJ_ZPOSINT)
         00000ab0     0150  
     186 00000ac0     0960          rets
     187                    
     188                    
     189                    
     190                    
     191                    
     192 00000ad0           dksuup_down
     193 00000ad0     4907          cmp     a8,a7                   ;a7-a8  (BOZ-TOZ)
     194 00000ae0     c706          jrgt    dksudown
     195 00000af0     b5a0          move    *a13(OBJ_ZPOSINT),a0
         00000b00     0150  
     196 00000b10     44e0          sub     a7,a0                   ;XPOS-BOZ
     197 00000b20     b00d          move    a0,*a13(OBJ_ZPOSINT)
         00000b30     0150  
     198 00000b40     c005          jruc    dksulr2
     199                    
     200 00000b50           dksudown
     201 00000b50     b5a0          move    *a13(OBJ_ZPOSINT),a0
         00000b60     0150  
     202 00000b70     4100          add     a8,a0                   ;XPOS-TOZ
     203 00000b80     b00d          move    a0,*a13(OBJ_ZPOSINT)
         00000b90     0150  
     204                    
     205 00000ba0           dksulr2
     206 00000ba0     b5a0          move    *a13(MOVE_DIR),a0
         00000bb0     04b0  
     207 00000bc0     ca11          jrz     dksuexit
     208 00000bd0     0b80          andi    MOVE_LEFT|MOVE_RIGHT,a0
         00000be0 fffffff3  
     209 00000c00     cb0d          jrnz    dksuexit
     210                    
     211 00000c10     09c0          movi    3,a0
         00000c20     0003  
     212 00000c30     48c5          cmp     a6,a5                   ;a5-a6  (ROX-LOX)
     213 00000c40     c701          jrgt    dksur2
     214 00000c50     03a0          neg     a0
     215 00000c60           dksur2
     216 00000c60     b5ae          move    *a13(OBJ_XPOSINT),a14
         00000c70     0110  
     217 00000c80     400e          add     a0,a14
     218 00000c90     b1cd          move    a14,*a13(OBJ_XPOSINT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    6

         00000ca0     0110  
     219 00000cb0     0960          rets
     220                    
     221                    
     222                    
     223                    
     224                    
     225                    
     226 00000cc0           dksuno_overlap
     227                    
     228 00000cc0           dksuskip
     229 00000cc0           dksuinactive
     230 00000cc0     0d8a          dsj     a10,dksucollis_loop
         00000cd0     ff3c  
     231 00000ce0           dksuexit
     232 00000ce0     0960          rets
     233                    
     234                    
     235 00000cf0            SUBR   set_collision_boxes
     236                    
     237                    
     238 00000cf0     b7a4          move    *a13(CUR_FRAME),a4,L
         00000d00     06c0  
     239                    
     240                    
     241 00000d10     09c0          movi    -30,a0
         00000d20     ffe2  
     242 00000d30     b00d          move    a0,*a13(OBJ_BOXZOFF)
         00000d40     01a0  
     243 00000d50     09c0          movi    60,a0
         00000d60     003c  
     244 00000d70     b00d          move    a0,*a13(OBJ_BOXDEPTH)
         00000d80     01d0  
     245                    
     246 00000d90     b5a0          move    *a13(PLYRMODE),a0
         00000da0     05c0  
     247 00000db0     0b40          cmpi    MODE_ONGROUND,a0
         00000dc0     fffb  
     248                    
     249                    
     250 00000dd0     cb09          jrnz    exmunext
     251                    
     252 00000de0     09c0          movi    -15,a0
         00000df0     fff1  
     253 00000e00     b00d          move    a0,*a13(OBJ_BOXZOFF)
         00000e10     01a0  
     254 00000e20     09c0          movi    30,a0
         00000e30     001e  
     255 00000e40     b00d          move    a0,*a13(OBJ_BOXDEPTH)
         00000e50     01d0  
     256 00000e60     c00b          jruc    exmunorm
     257                    
     258 00000e70           exmunext
     259 00000e70     0b40          cmpi    MODE_RUNNING,a0
         00000e80     fffe  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    7

     260 00000e90     cb08          jrnz    exmunorm
     261                    
     262 00000ea0     09c0          movi    -5,a0
         00000eb0     fffb  
     263 00000ec0     b00d          move    a0,*a13(OBJ_BOXZOFF)
         00000ed0     01a0  
     264 00000ee0     09c0          movi    10,a0
         00000ef0     000a  
     265 00000f00     b00d          move    a0,*a13(OBJ_BOXDEPTH)
         00000f10     01d0  
     266                    
     267 00000f20           exmunorm
     268                    
     269                    
     270                    
     271                    
     272                    
     273                    
     274 00000f20     b5a0          move    *a13(OBJ_YPOSINT),a0
         00000f30     0130  
     275 00000f40     b481          move    *a4(IANI3Y),a1          ;BOX YOFF
         00000f50     00c0  
     276 00000f60     4420          sub     a1,a0
     277 00000f70     b00d          move    a0,*a13(OBJ_COLLY2)
         00000f80     0210  
     278 00000f90     b481          move    *a4(IANI3ID),a1         ;BOX HEIGHT
         00000fa0     00e0  
     279 00000fb0     4420          sub     a1,a0
     280 00000fc0     b00d          move    a0,*a13(OBJ_COLLY1)
         00000fd0     0200  
     281                    
     282 00000fe0     b5a0          move    *a13(OBJ_ZPOSINT),a0
         00000ff0     0150  
     283 00001000     b5a1          move    *a13(OBJ_BOXZOFF),a1
         00001010     01a0  
     284 00001020     4020          add     a1,a0
     285 00001030     b00d          move    a0,*a13(OBJ_COLLZ1)
         00001040     0220  
     286 00001050     b5a1          move    *a13(OBJ_BOXDEPTH),a1
         00001060     01d0  
     287 00001070     4020          add     a1,a0
     288 00001080     b00d          move    a0,*a13(OBJ_COLLZ2)
         00001090     0230  
     289                    
     290 000010a0     b5a0          move    *a13(OBJ_CONTROL),a0
         000010b0     0780  
     291 000010c0     1f60          btst    B_FLIPH,a0
     292 000010d0     ca0d          jrz     exmunot_flipped
     293                    
     294 000010e0     b5a0          move    *a13(OBJ_XPOSINT),a0
         000010f0     0110  
     295 00001100     b481          move    *a4(IANI3X),a1          ;BOX XOFF
         00001110     00b0  
     296 00001120     4420          sub     a1,a0
     297 00001130     b00d          move    a0,*a13(OBJ_COLLX2)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    8

         00001140     01f0  
     298 00001150     b481          move    *a4(IANI3Z),a1          ;BOX WIDTH
         00001160     00d0  
     299 00001170     4420          sub     a1,a0
     300 00001180     b00d          move    a0,*a13(OBJ_COLLX1)
         00001190     01e0  
     301 000011a0     0960          rets
     302                    
     303 000011b0           exmunot_flipped
     304 000011b0     b5a0          move    *a13(OBJ_XPOSINT),a0
         000011c0     0110  
     305 000011d0     b481          move    *a4(IANI3X),a1          ;BOX XOFF
         000011e0     00b0  
     306 000011f0     4020          add     a1,a0
     307 00001200     b00d          move    a0,*a13(OBJ_COLLX1)
         00001210     01e0  
     308 00001220     b481          move    *a4(IANI3Z),a1          ;BOX WIDTH
         00001230     00d0  
     309 00001240     4020          add     a1,a0
     310 00001250     b00d          move    a0,*a13(OBJ_COLLX2)
         00001260     01f0  
     311 00001270     0960          rets
     312                    
     313                    
     314 00000000                   .bss    x1,16
     315 00000010                   .bss    x2,16
     316 00000020                   .bss    y1,16
     317 00000030                   .bss    y2,16
     318 00000040                   .bss    z1,16
     319 00000050                   .bss    z2,16
     320                    
     321                    
     322 00001280            SUBR   check_collisions
     323                    
     324                    
     325 00001280     0d3f          callr   object_collisions
         00001290     016d  
     326                    
     327 000012a0                   PUSH    a13
     328                    
     329                    
     330 000012b0     05a0          move    @round_tickcount,a0
         000012c0 00000000! 
     331 000012e0     0b80          andi    1,a0
         000012f0 fffffffe  
     332 00001310     ca2d          jrz     wujzeven
     333                    
     334                    
     335                    
     336 00001320     09e4          movi    process_ptrs+32*NUM_WRES,a4
         00001330 000000e0! 
     337 00001350     09c5          movi    NUM_WRES,a5
         00001360     0007  
     338 00001370           wujzcollis_loop1
     339 00001370     a68a          move    -*a4,a10,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE    9

     340 00001380     ca1e          jrz     wujzinactive1
     341                    
     342 00001390     b540          move    *a10(ANIMODE),a0
         000013a0     0660  
     343 000013b0     1f60          btst    MODE_CHECKHIT_BIT,a0
     344 000013c0     ca1a          jrz     wujzinactive1
     345                    
     346 000013d0                   PUSH    a4,a5
     347                    
     348 000013f0     0d3f          callr   set_xyz
         00001400     0110  
     349                    
     350                    
     351 00001410     09e4          movi    process_ptrs,a4
         00001420 00000000! 
     352 00001440     09c5          movi    NUM_WRES,a5
         00001450     0007  
     353 00001460           wujzcollis_loop2
     354 00001460     968d          move    *a4+,a13,L
     355 00001470     ca0c          jrz     wujzinactive2
     356 00001480     494d          cmp     a10,a13
     357 00001490     ca0a          jreq    wujzskip_self
     358                    
     359 000014a0                   PUSH    a4,a5
     360 000014c0     0d3f          callr   check_collis
         000014d0     003e  
     361 000014e0                   PULL    a4,a5
     362                    
     363 00001500     b540          move    *a10(ANIMODE),a0
         00001510     0660  
     364 00001520     1ec0          btst    MODE_STATUS_BIT,a0      ;hit someone?
     365 00001530     cb07          jrnz    wujzdone
     366 00001540           wujzskip_self
     367 00001540           wujzinactive2
     368 00001540     3de5          dsj     a5,wujzcollis_loop2
     369                    
     370                    
     371                    
     372 00001550                   PULL    a4,a5
     373 00001570           wujzinactive1
     374 00001570     0d85          dsj     a5,wujzcollis_loop1
         00001580     ffde  
     375                    
     376 00001590                   PULL    a13
     377 000015a0     0960          rets
     378                    
     379 000015b0           wujzdone
     380 000015b0                   PULL    a4,a5
     381 000015d0                   PULL    a13
     382 000015e0     0960          rets
     383                    
     384                    
     385                    
     386 000015f0           wujzeven
     387 000015f0     09e4          movi    process_ptrs,a4
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   10

         00001600 00000000! 
     388 00001620     09c5          movi    NUM_WRES,a5
         00001630     0007  
     389 00001640           lsmgcollis_loop1
     390 00001640     968a          move    *a4+,a10,L
     391 00001650     ca1e          jrz     lsmginactive1
     392                    
     393 00001660     b540          move    *a10(ANIMODE),a0
         00001670     0660  
     394 00001680     1f60          btst    MODE_CHECKHIT_BIT,a0
     395 00001690     ca1a          jrz     lsmginactive1
     396                    
     397 000016a0                   PUSH    a4,a5
     398                    
     399 000016c0     0d3f          callr   set_xyz
         000016d0     00e3  
     400                    
     401                    
     402 000016e0     09e4          movi    process_ptrs,a4
         000016f0 00000000! 
     403 00001710     09c5          movi    NUM_WRES,a5
         00001720     0007  
     404 00001730           lsmgcollis_loop2
     405 00001730     968d          move    *a4+,a13,L
     406 00001740     ca0c          jrz     lsmginactive2
     407 00001750     494d          cmp     a10,a13
     408 00001760     ca0a          jreq    lsmgskip_self
     409                    
     410 00001770                   PUSH    a4,a5
     411 00001790     0d3f          callr   check_collis
         000017a0     0011  
     412 000017b0                   PULL    a4,a5
     413                    
     414 000017d0     b540          move    *a10(ANIMODE),a0
         000017e0     0660  
     415 000017f0     1ec0          btst    MODE_STATUS_BIT,a0      ;hit someone?
     416 00001800     cb07          jrnz    lsmgdone
     417 00001810           lsmgskip_self
     418 00001810           lsmginactive2
     419 00001810     3de5          dsj     a5,lsmgcollis_loop2
     420                    
     421                    
     422                    
     423 00001820                   PULL    a4,a5
     424 00001840           lsmginactive1
     425 00001840     0d85          dsj     a5,lsmgcollis_loop1
         00001850     ffde  
     426                    
     427                    
     428 00001860                   PULL    a13
     429 00001870     0960          rets
     430 00001880           lsmgdone
     431 00001880                   PULL    a4,a5
     432 000018a0                   PULL    a13
     433 000018b0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   11

     434                    
     435                    
     436                    
     437 000018c0            SUBRP  check_collis
     438                    
     439 000018c0     b5a0          move    *a13(ANIMODE),a0
         000018d0     0660  
     440 000018e0     1ee0          btst    MODE_NOCOLLIS_BIT,a0
     441 000018f0     cb00          jrnz    jbqxno_hit
         00001900     00bf  
     442                    
     443                            ;if you're immobilized, you can't hit anyone
     444 00001910     b540          move    *a10(IMMOBILIZE_TIME),a0
         00001920     0ae0  
     445 00001930     cb00          jrnz    jbqxno_hit
         00001940     00bb  
     446                    
     447 00001950     05a0          move    @x1,a0
         00001960 00000000- 
     448 00001980     b5a1          move    *a13(OBJ_COLLX2),a1
         00001990     01f0  
     449 000019a0     4801          cmp     a0,a1           ;Dx2 - Ox1
     450 000019b0     c400          jrlt    jbqxno_hit              ;if Dx2 < Ox1
         000019c0     00b3  
     451                    
     452 000019d0     05a0          move    @x2,a0
         000019e0 00000010- 
     453 00001a00     b5a1          move    *a13(OBJ_COLLX1),a1
         00001a10     01e0  
     454 00001a20     4801          cmp     a0,a1           ;Dx1 - Ox2
     455 00001a30     c700          jrgt    jbqxno_hit              ;if Dx1 > Ox2
         00001a40     00ab  
     456                    
     457 00001a50     05a0          move    @y1,a0
         00001a60 00000020- 
     458 00001a80     b5a1          move    *a13(OBJ_COLLY2),a1
         00001a90     0210  
     459 00001aa0     4801          cmp     a0,a1           ;Dy2 - Oy1
     460 00001ab0     c400          jrlt    jbqxno_hit              ;if Dy2 < Oy1
         00001ac0     00a3  
     461                    
     462 00001ad0     05a0          move    @y2,a0
         00001ae0 00000030- 
     463 00001b00     b5a1          move    *a13(OBJ_COLLY1),a1
         00001b10     0200  
     464 00001b20     4801          cmp     a0,a1           ;Dy1 - Oy2
     465 00001b30     c700          jrgt    jbqxno_hit              ;if Dy1 > Oy2
         00001b40     009b  
     466                    
     467 00001b50     05a0          move    @z1,a0
         00001b60 00000040- 
     468 00001b80     b5a1          move    *a13(OBJ_COLLZ2),a1
         00001b90     0230  
     469 00001ba0     4801          cmp     a0,a1           ;Dz2 - Oz1
     470 00001bb0     c400          jrlt    jbqxno_hit              ;Dz2 < Oz1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   12

         00001bc0     0093  
     471                    
     472 00001bd0     05a0          move    @z2,a0
         00001be0 00000050- 
     473 00001c00     b5a1          move    *a13(OBJ_COLLZ1),a1
         00001c10     0220  
     474 00001c20     4801          cmp     a0,a1           ;Dz1 - Oz2
     475 00001c30     c700          jrgt    jbqxno_hit              ;Dz1 > Oz2
         00001c40     008b  
     476                    
     477                            ;we've found a hit.  ignore if attacker is in SMART_ATTACK mode and
     478                            ; victim doesn't match his target.  We check this AFTER a hit is
     479                            ; registered because it's an unlikely case and checking it beforehand
     480                            ; wastes time.
     481 00001c50     b540          move    *a10(STATUS_FLAGS),a0
         00001c60     0b50  
     482 00001c70     1f60          btst    B_SMART_ATTACK,a0
     483 00001c80     ca05          jrz     jbqxnot_smart
     484 00001c90     b740          move    *a10(SMART_TARGET),a0,L
         00001ca0     0ca0  
     485 00001cb0     480d          cmp     a0,a13
     486 00001cc0     cb00          jrne    jbqxno_hit
         00001cd0     0082  
     487 00001ce0           jbqxnot_smart
     488                    
     489                            ;if attacker is in combo mode, only allow hits on his WHOIHIT.
     490 00001ce0     b54e          move    *a10(COMBO_COUNT),a14
         00001cf0     0af0  
     491 00001d00     ca04          jrz     jbqxnot_combo
     492 00001d10     b74e          move    *a10(WHOIHIT),a14,L
         00001d20     0500  
     493 00001d30     49ae          cmp     a13,a14
     494 00001d40     cb7b          jrne    jbqxno_hit
     495 00001d50           jbqxnot_combo
     496                    
     497                            ;check for a dead victim with live teammates.
     498 00001d50     b5a0          move    *a13(PLYRMODE),a0
         00001d60     05c0  
     499 00001d70     0b40          cmpi    MODE_DEAD,a0
         00001d80     fff6  
     500 00001d90     cb0d          jrne    jbqxnot_dead
     501                    
     502 00001da0     4da0          move    a13,a0
     503 00001db0     0d5f          calla   ck_live_teammates
         00001dc0 00000000! 
     504 00001de0     c871          jrc     jbqxno_hit
     505                    
     506                            ;check for a dead victim and an AMODE_PUPPET attack.
     507 00001df0     b54e          move    *a10(ATTACK_MODE),a14
         00001e00     05d0  
     508 00001e10     0b4e          cmpi    AMODE_PUPPET,a14
         00001e20     ffea  
     509 00001e30     ca6c          jreq    jbqxno_hit
     510 00001e40     0b4e          cmpi    AMODE_PUPPET2,a14
         00001e50     ffe0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   13

     511 00001e60     ca69          jreq    jbqxno_hit
     512 00001e70           jbqxnot_dead
     513                    
     514                            ;zombies can never be hit
     515 00001e70     b5ae          move    *a13(STATUS_FLAGS),a14
         00001e80     0b50  
     516 00001e90     1f8e          btst    B_ZOMBIE,a14
     517 00001ea0     cb65          jrnz    jbqxno_hit
     518                    
     519                            ;pinned wrestlers can only be hit by wrestlers who've done pins.
     520 00001eb0     b54e          move    *a10(STATUS_FLAGS),a14
         00001ec0     0b50  
     521 00001ed0     1fce          btst    B_DID_PIN,a14
     522 00001ee0     cb04          jrnz    jbqxnot_pinned
     523 00001ef0     b5ae          move    *a13(STATUS_FLAGS),a14
         00001f00     0b50  
     524 00001f10     1f4e          btst    B_PINNED,a14
     525 00001f20     cb5d          jrnz    jbqxno_hit
     526 00001f30           jbqxnot_pinned
     527                    
     528                            ;make sure INRING values match
     529 00001f30     b540          move    *a10(INRING),a0
         00001f40     0560  
     530 00001f50     b5ae          move    *a13(INRING),a14
         00001f60     0560  
     531 00001f70     480e          cmp     a0,a14
     532 00001f80     cb57          jrne    jbqxno_hit
     533                    
     534                            ;if victim is in MODE_INAIR or MODE_INAIR2, don't let pushes hit.
     535 00001f90     b54e          move    *a10(ATTACK_MODE),a14
         00001fa0     05d0  
     536 00001fb0     0b4e          cmpi    AMODE_PUSH,a14
         00001fc0     fff6  
     537 00001fd0     cb08          jrne    jbqxno_pushfly
     538 00001fe0     b5ae          move    *a13(PLYRMODE),a14
         00001ff0     05c0  
     539 00002000     0b4e          cmpi    MODE_INAIR,a14
         00002010     fffd  
     540 00002020     ca4d          jreq    jbqxno_hit
     541 00002030     0b4e          cmpi    MODE_INAIR2,a14
         00002040     ffea  
     542 00002050     ca4a          jreq    jbqxno_hit
     543 00002060           jbqxno_pushfly
     544                    
     545                            ;if the victim is doing a push, his PUSH bit will be set in status
     546                            ; flags.  If it is, only flying attacks can hit him.
     547 00002060     b7ae          move    *a13(STATUS_FLAGS),a14,L
         00002070     0b50  
     548 00002080     1d6e          btst    B_PUSH,a14
     549 00002090     ca0c          jrz     jbqxnot_push
     550 000020a0     b54e          move    *a10(ATTACK_MODE),a14
         000020b0     05d0  
     551 000020c0     0b4e          cmpi    AMODE_FLYKICK,a14
         000020d0     fffc  
     552 000020e0     ca07          jreq    jbqxnot_push
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   14

     553 000020f0     0b4e          cmpi    AMODE_BSTOMP,a14
         00002100     ffe5  
     554 00002110     ca04          jreq    jbqxnot_push
     555 00002120     0b4e          cmpi    AMODE_BLBOWDROP,a14
         00002130     ffe6  
     556 00002140     ca01          jreq    jbqxnot_push
     557 00002150     c03a          jruc    jbqxno_hit
     558 00002160           jbqxnot_push
     559                    
     560                            ;if attacker is in MODE_WAITHITOPP, clear said bit and zero ANICNTs.
     561 00002160     b54e          move    *a10(ANIMODE),a14
         00002170     0660  
     562 00002180     1e2e          btst    MODE_WAITHITOPP_BIT,a14
     563 00002190     ca0a          jrz     jbqxskip_whopp
     564                    
     565 000021a0     0b8e          andni   MODE_WAITHITOPP,a14
         000021b0 00004000  
     566 000021d0     b1ca          move    a14,*a10(ANIMODE)
         000021e0     0660  
     567 000021f0     57ce          clr     a14
     568 00002200     b1ca          move    a14,*a10(ANICNT)
         00002210     06b0  
     569 00002220     b1ca          move    a14,*a10(ANICNT2)
         00002230     0730  
     570 00002240           jbqxskip_whopp
     571                    
     572                            .if DEBUG
     573                            ;if safe_plyr is set, disregard attacks on players
     574                            move    @safe_plyr,a14
     575                            jrz     jbqxskip_safeplyr
     576                            move    *a13(PLYR_TYPE),a14
     577                            cmpi    PTYPE_PLAYER,a14
     578                            jreq    jbqxno_hit
     579                    jbqxskip_safeplyr
     580                            .endif
     581                    
     582 00002240     57ce          clr     a14                     ;false
     583 00002250     b5a0          move    *a13(PLYRMODE),a0
         00002260     05c0  
     584 00002270     0b40          cmpi    MODE_BLOCK,a0
         00002280     fff8  
     585 00002290     cb01          jrne    jbqxnoblock
     586 000022a0     102e          inc     a14                     ;true
     587 000022b0           jbqxnoblock
     588 000022b0     b1ca          move    a14,*a10(HITBLOCKER)
         000022c0     0540  
     589                    
     590 000022d0     09c0          movi    MOVE_RIGHT,a0
         000022e0     0008  
     591 000022f0     b541          move    *a10(OBJ_XPOSINT),a1
         00002300     0110  
     592 00002310     b5a2          move    *a13(OBJ_XPOSINT),a2
         00002320     0110  
     593 00002330     4841          cmp     a2,a1
     594 00002340     c702          jrgt    jbqxhit_from_right
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   15

     595 00002350     09c0          movi    MOVE_LEFT,a0
         00002360     0004  
     596 00002370           jbqxhit_from_right
     597 00002370     09ce          movi    MOVE_DOWN,a14
         00002380     0002  
     598 00002390     b741          move    *a10(OBJ_ZPOS),a1,L
         000023a0     0140  
     599 000023b0     b7a2          move    *a13(OBJ_ZPOS),a2,L
         000023c0     0140  
     600 000023d0     4841          cmp     a2,a1
     601 000023e0     c702          jrgt    jbqxhit_from_below
     602 000023f0     09ce          movi    MOVE_UP,a14
         00002400     0001  
     603 00002410           jbqxhit_from_below
     604 00002410     55c0          or      a14,a0
     605 00002420     b00d          move    a0,*a13(PLYR_HIT_SIDE)
         00002430     0550  
     606 00002440     b00a          move    a0,*a10(PLYR_HIT_SIDE)
         00002450     0550  
     607                    
     608 00002460     b540          move    *a10(ANIMODE),a0
         00002470     0660  
     609 00002480     0ba0          ori     MODE_STATUS2,a0         ;this flag set whenever
         00002490 00000200  
     610 000024b0     b00a          move    a0,*a10(ANIMODE)        ;a successful hit
         000024c0     0660  
     611                    
     612 000024d0     0d5f          calla   wrestler_hit
         000024e0 00000000! 
     613 00002500           jbqxno_hit
     614 00002500     0960          rets
     615                    
     616                    
     617 00002510            SUBRP set_xyz
     618                    
     619 00002510     b540          move    *a10(OBJ_YPOSINT),a0
         00002520     0130  
     620 00002530     b541          move    *a10(OBJ_ATTYOFF),a1
         00002540     0250  
     621 00002550     4020          add     a1,a0
     622 00002560     0580          move    a0,@y1
         00002570 00000020- 
     623 00002590     b541          move    *a10(OBJ_ATTHEIGHT),a1
         000025a0     0280  
     624 000025b0     4020          add     a1,a0
     625 000025c0     0580          move    a0,@y2
         000025d0 00000030- 
     626                    
     627 000025f0     b540          move    *a10(OBJ_ZPOSINT),a0
         00002600     0150  
     628 00002610     b541          move    *a10(OBJ_ATTZOFF),a1
         00002620     0260  
     629 00002630     4020          add     a1,a0
     630 00002640     0580          move    a0,@z1
         00002650 00000040- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   16

     631 00002670     b541          move    *a10(OBJ_ATTDEPTH),a1
         00002680     0290  
     632 00002690     4020          add     a1,a0
     633 000026a0     0580          move    a0,@z2
         000026b0 00000050- 
     634                    
     635                    
     636                    
     637 000026d0     b54e          move    *a10(OBJ_CONTROL),a14
         000026e0     0780  
     638 000026f0     1f6e          btst    B_FLIPH,a14
     639 00002700     ca0f          jrz     bkplfacing_right
     640                    
     641                    
     642 00002710     b540          move    *a10(OBJ_XPOSINT),a0
         00002720     0110  
     643 00002730     b541          move    *a10(OBJ_ATTXOFF),a1
         00002740     0240  
     644 00002750     4420          sub     a1,a0
     645 00002760     0580          move    a0,@x2
         00002770 00000010- 
     646 00002790     b541          move    *a10(OBJ_ATTWIDTH),a1
         000027a0     0270  
     647 000027b0     4420          sub     a1,a0
     648 000027c0     0580          move    a0,@x1
         000027d0 00000000- 
     649 000027f0     0960          rets
     650                    
     651 00002800           bkplfacing_right
     652 00002800     b540          move    *a10(OBJ_XPOSINT),a0
         00002810     0110  
     653 00002820     b541          move    *a10(OBJ_ATTXOFF),a1
         00002830     0240  
     654 00002840     4020          add     a1,a0
     655 00002850     0580          move    a0,@x1
         00002860 00000000- 
     656 00002880     b541          move    *a10(OBJ_ATTWIDTH),a1
         00002890     0270  
     657 000028a0     4020          add     a1,a0
     658 000028b0     0580          move    a0,@x2
         000028c0 00000010- 
     659                    
     660 000028e0     0960          rets
     661                    
     662                    
     663                    
     664 000028f0            SUBR   wres_collis_off
     665                    
     666 000028f0     b540          move    *a10(ANIMODE),a0
         00002900     0660  
     667 00002910     0b80          andni   MODE_CHECKHIT,a0
         00002920 00000010  
     668 00002940     b00a          move    a0,*a10(ANIMODE)
         00002950     0660  
     669 00002960     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   17

     670                    
     671                    
     672                    
     673 00002970            SUBR   object_collisions
     674                    
     675                    
     676 00002970     09e0          movi    plyr1_objlist,a0
         00002980 00000000! 
     677 000029a0     0d3f          callr   set_spobj_boxes
         000029b0     0093  
     678                    
     679 000029c0     09e0          movi    plyr2_objlist,a0
         000029d0 00000000! 
     680 000029f0     0d3f          callr   set_spobj_boxes
         00002a00     008e  
     681                    
     682 00002a10     09e0          movi    neutral_objlist,a0
         00002a20 00000000! 
     683 00002a40     0d3f          callr   set_spobj_boxes
         00002a50     0089  
     684                    
     685                    
     686 00002a60     09e6          movi    plyr1_objlist,a6
         00002a70 00000000! 
     687 00002a90     09e7          movi    plyr2_objlist,a7
         00002aa0 00000000! 
     688 00002ac0     0d3f          callr   objlist2objlist_collis
         00002ad0     004d  
     689                    
     690                    
     691 00002ae0     09ea          movi    plyr1_objlist,a10
         00002af0 00000000! 
     692 00002b10     0d3f          callr   objlist2player_collis
         00002b20     000b  
     693                    
     694 00002b30     09ea          movi    plyr2_objlist,a10
         00002b40 00000000! 
     695 00002b60     0d3f          callr   objlist2player_collis
         00002b70     0006  
     696                    
     697 00002b80     09ea          movi    neutral_objlist,a10
         00002b90 00000000! 
     698 00002bb0     0d3f          callr   objlist2player_collis
         00002bc0     0001  
     699                    
     700                    
     701 00002bd0     0960          rets
     702                    
     703                    
     704                    
     705 00002be0           objlist2player_collis
     706                    
     707 00002be0                   PUSH    a13
     708                    
     709 00002bf0     874a          move    *a10,a10,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   18

     710 00002c00     ca38          jrz     xlhjdone
     711 00002c10           xlhjlp1
     712                    
     713 00002c10     b540          move    *a10(SP_COLLX1),a0
         00002c20     02f0  
     714 00002c30     b541          move    *a10(SP_COLLX2),a1
         00002c40     0300  
     715                    
     716 00002c50     b542          move    *a10(SP_COLLY1),a2
         00002c60     0310  
     717 00002c70     b543          move    *a10(SP_COLLY2),a3
         00002c80     0320  
     718                    
     719 00002c90     b544          move    *a10(SP_COLLZ1),a4
         00002ca0     0330  
     720 00002cb0     b545          move    *a10(SP_COLLZ2),a5
         00002cc0     0340  
     721                    
     722                    
     723 00002cd0     09e7          movi    process_ptrs,a7
         00002ce0 00000000! 
     724 00002d00     09c6          movi    NUM_WRES,a6
         00002d10     0007  
     725 00002d20           xlhjcollis_loop
     726 00002d20     96ed          move    *a7+,a13,L
     727 00002d30     ca20          jrz     xlhjinactive
     728                    
     729 00002d40     b5ae          move    *a13(ANIMODE),a14
         00002d50     0660  
     730 00002d60     1eee          btst    MODE_NOCOLLIS_BIT,a14
     731 00002d70     cb1c          jrnz    xlhjno_hit
     732                    
     733                    
     734 00002d80     b5ae          move    *a13(OBJ_COLLX2),a14
         00002d90     01f0  
     735 00002da0     480e          cmp     a0,a14          ;Dx2 - Ox1
     736 00002db0     c418          jrlt    xlhjno_hit              ;if Dx2 < Ox1
     737                    
     738 00002dc0     b5ae          move    *a13(OBJ_COLLX1),a14
         00002dd0     01e0  
     739 00002de0     482e          cmp     a1,a14          ;Dx1 - Ox2
     740 00002df0     c714          jrgt    xlhjno_hit              ;if Dx1 > Ox2
     741                    
     742 00002e00     b5ae          move    *a13(OBJ_COLLY2),a14
         00002e10     0210  
     743 00002e20     484e          cmp     a2,a14          ;Dy2 - Oy1
     744 00002e30     c410          jrlt    xlhjno_hit              ;if Dy2 < Oy1
     745                    
     746 00002e40     b5ae          move    *a13(OBJ_COLLY1),a14
         00002e50     0200  
     747 00002e60     486e          cmp     a3,a14          ;Dy1 - Oy2
     748 00002e70     c70c          jrgt    xlhjno_hit              ;if Dy1 > Oy2
     749                    
     750 00002e80     b5ae          move    *a13(OBJ_COLLZ2),a14
         00002e90     0230  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   19

     751 00002ea0     488e          cmp     a4,a14          ;Dz2 - Oz1
     752 00002eb0     c408          jrlt    xlhjno_hit              ;Dz2 < Oz1
     753                    
     754 00002ec0     b5ae          move    *a13(OBJ_COLLZ1),a14
         00002ed0     0220  
     755 00002ee0     48ae          cmp     a5,a14          ;Dz1 - Oz2
     756 00002ef0     c704          jrgt    xlhjno_hit              ;Dz1 > Oz2
     757                    
     758 00002f00     0d5f          calla   wrestler_hit_special
         00002f10 00000000! 
     759                    
     760 00002f30     c005          jruc    xlhjdone
     761                    
     762 00002f40           xlhjno_hit
     763 00002f40           xlhjinactive
     764 00002f40     0d86          dsj     a6,xlhjcollis_loop
         00002f50     ffdc  
     765                    
     766                    
     767 00002f60     b74a          move    *a10(SP_NEXT),a10,L
         00002f70     0160  
     768 00002f80     cbc8          jrnz    xlhjlp1
     769                    
     770 00002f90           xlhjdone
     771                    
     772 00002f90                   PULL    a13
     773 00002fa0     0960          rets
     774                    
     775                    
     776                    
     777 00002fb0           objlist2objlist_collis
     778                    
     779 00002fb0     86c6          move    *a6,a6,L
     780 00002fc0     ca31          jrz     giusdone
     781 00002fd0           giuslp1
     782 00002fd0     4ce8          move    a7,a8
     783 00002fe0     8708          move    *a8,a8,L
     784 00002ff0     ca2e          jrz     giusdone
     785                    
     786 00003000     b4c0          move    *a6(SP_COLLX1),a0
         00003010     02f0  
     787 00003020     b4c1          move    *a6(SP_COLLX2),a1
         00003030     0300  
     788                    
     789 00003040     b4c2          move    *a6(SP_COLLY1),a2
         00003050     0310  
     790 00003060     b4c3          move    *a6(SP_COLLY2),a3
         00003070     0320  
     791                    
     792 00003080     b4c4          move    *a6(SP_COLLZ1),a4
         00003090     0330  
     793 000030a0     b4c5          move    *a6(SP_COLLZ2),a5
         000030b0     0340  
     794                    
     795 000030c0           giuslp2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   20

     796 000030c0     b50e          move    *a8(SP_COLLX2),a14
         000030d0     0300  
     797 000030e0     480e          cmp     a0,a14          ;Dx2 - Ox1
     798 000030f0     c418          jrlt    giusno_hit              ;if Dx2 < Ox1
     799                    
     800 00003100     b50e          move    *a8(SP_COLLX1),a14
         00003110     02f0  
     801 00003120     482e          cmp     a1,a14          ;Dx1 - Ox2
     802 00003130     c714          jrgt    giusno_hit              ;if Dx1 > Ox2
     803                    
     804 00003140     b50e          move    *a8(SP_COLLY2),a14
         00003150     0320  
     805 00003160     484e          cmp     a2,a14          ;Dy2 - Oy1
     806 00003170     c410          jrlt    giusno_hit              ;if Dy2 < Oy1
     807                    
     808 00003180     b50e          move    *a8(SP_COLLY1),a14
         00003190     0310  
     809 000031a0     486e          cmp     a3,a14          ;Dy1 - Oy2
     810 000031b0     c70c          jrgt    giusno_hit              ;if Dy1 > Oy2
     811                    
     812 000031c0     b50e          move    *a8(SP_COLLZ2),a14
         000031d0     0340  
     813 000031e0     488e          cmp     a4,a14          ;Dz2 - Oz1
     814 000031f0     c408          jrlt    giusno_hit              ;Dz2 < Oz1
     815                    
     816 00003200     b50e          move    *a8(SP_COLLZ1),a14
         00003210     0330  
     817 00003220     48ae          cmp     a5,a14          ;Dz1 - Oz2
     818 00003230     c704          jrgt    giusno_hit              ;Dz1 > Oz2
     819                    
     820 00003240     0d5f          calla   special_hit
         00003250 00000000! 
     821                    
     822 00003270     c006          jruc    giusdone
     823                    
     824 00003280           giusno_hit
     825                    
     826 00003280     b708          move    *a8(SP_NEXT),a8,L
         00003290     0160  
     827 000032a0     cbe1          jrnz    giuslp2
     828                    
     829 000032b0     b6c6          move    *a6(SP_NEXT),a6,L
         000032c0     0160  
     830 000032d0     cbcf          jrnz    giuslp1
     831                    
     832 000032e0           giusdone
     833 000032e0     0960          rets
     834                    
     835                    
     836                    
     837 000032f0           set_spobj_boxes
     838                    
     839 000032f0     8600          move    *a0,a0,L
     840 00003300     ca38          jrz     gctydone
     841 00003310           gctylp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   21

     842                    
     843 00003310     b401          move    *a0(SP_OBJ_YPOSINT),a1
         00003320     0130  
     844 00003330     b40e          move    *a0(SP_YOFF),a14
         00003340     02b0  
     845 00003350     41c1          add     a14,a1
     846 00003360     b020          move    a1,*a0(SP_COLLY1)
         00003370     0310  
     847 00003380     b40e          move    *a0(SP_HEIGHT),a14
         00003390     02c0  
     848 000033a0     41c1          add     a14,a1
     849 000033b0     b020          move    a1,*a0(SP_COLLY2)
         000033c0     0320  
     850                    
     851                    
     852 000033d0     b401          move    *a0(SP_OBJ_ZPOSINT),a1
         000033e0     0150  
     853 000033f0     b40e          move    *a0(SP_ZOFF),a14
         00003400     02d0  
     854 00003410     41c1          add     a14,a1
     855 00003420     b020          move    a1,*a0(SP_COLLZ1)
         00003430     0330  
     856 00003440     b40e          move    *a0(SP_DEPTH),a14
         00003450     02e0  
     857 00003460     41c1          add     a14,a1
     858 00003470     b020          move    a1,*a0(SP_COLLZ2)
         00003480     0340  
     859                    
     860                    
     861 00003490     b40e          move    *a0(SP_OBJCONTROL),a14
         000034a0     0180  
     862 000034b0     1f6e          btst    B_FLIPH,a14
     863 000034c0     ca0d          jrz     gctynot_flipped
     864                    
     865 000034d0     b401          move    *a0(SP_OBJ_XPOSINT),a1
         000034e0     0110  
     866 000034f0     b40e          move    *a0(SP_XOFF),a14
         00003500     0290  
     867 00003510     45c1          sub     a14,a1
     868 00003520     b020          move    a1,*a0(SP_COLLX2)
         00003530     0300  
     869 00003540     b40e          move    *a0(SP_WIDTH),a14
         00003550     02a0  
     870 00003560     45c1          sub     a14,a1
     871 00003570     b020          move    a1,*a0(SP_COLLX1)
         00003580     02f0  
     872 00003590     c00c          jruc    gctycnt
     873                    
     874 000035a0           gctynot_flipped
     875 000035a0     b401          move    *a0(SP_OBJ_XPOSINT),a1
         000035b0     0110  
     876 000035c0     b40e          move    *a0(SP_XOFF),a14
         000035d0     0290  
     877 000035e0     41c1          add     a14,a1
     878 000035f0     b020          move    a1,*a0(SP_COLLX1)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:30 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

game collision code                                                  PAGE   22

         00003600     02f0  
     879 00003610     b40e          move    *a0(SP_WIDTH),a14
         00003620     02a0  
     880 00003630     41c1          add     a14,a1
     881 00003640     b020          move    a1,*a0(SP_COLLX2)
         00003650     0300  
     882                    
     883 00003660           gctycnt
     884 00003660     b600          move    *a0(SP_NEXT),a0,L
         00003670     0160  
     885 00003680     cbc8          jrnz    gctylp
     886                    
     887 00003690           gctydone
     888 00003690     0960          rets
     889                    
     890                    
     891                    
     892                            .end

 No Errors,  No Warnings
