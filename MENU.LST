TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    * START
       3                    * Software:             LARRY DEMAR and DR. J
       4                    * Initiated:            ?
       5                    *
       6                    * Modified:             Shawn Liptak, 11/1/91   -Total carnage
       7                    *                       Shawn Liptak, 1/20/92   -Coinage from T2, Dipswitch
       8                    *                       Shawn Liptak, 1/24/92   -Coinage corrections
       9                    *                       Shawn Liptak, 3/4/92    -Basketball mods
      10                    *                       Shawn Liptak, 10/2/92   -TUNIT sound mods
      11                    *                       Jason Skiles, 11/24/93  -DCS sound mods
      12                    *                       Jason Skiles, 12/3/93   -Strip audits for WWF
      13                    *
      14                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
      15                    *
      16                    *.Last mod - 12/7/93 11:25
      17                    **************************************************************
      18                            .file   "menu.asm"
      20                            .width  132
      21                            .option b,d,l,t
      22                            .mnolist
      23                    
      24                            .include        "mproc.equ"
      25                            .include        "display.equ"
      26                            .include        "sys.equ"
      27                            .include        "gsp.equ"
      28                            .include        "game.equ"
      29                            .include        "link.equ"
      30                            .include        "menu.equ"
      31                            .include        "macros.h"
      32                            .include        "sound.h"
      33                    
      34                            .include        "fontsimg.glo"
      35                    
      36 00000000                   .text
      37                    
      38                    ;        IN THIS MODULE
      39                    
      40                            .DEF    MEN_MAIN,GET_CSPT
      41                            .DEF    MESS_FAC
      42                            .DEF    ANY_BUT,MEN_YN
      43                            .DEF    STR_OBJ
      44                            .DEF    STR_FREE
      45                            .DEF    CKPROMPT
      46                            .DEF    GO_DIAG         ;ROUTINE FOR DIAGNOSTIC MENU
      47                            .DEF    RTR_LEV,ROM_LEV
      48                            .DEF    MESS_MM
      49                            .DEF    CS_ENTS         ;NUMBER OF HIGHEST IN COIN TABLE
      50                            .DEF    TWO_TS,TWO_TP
      51                            .DEF    FAC_STUF
      52                            .DEF    BUILD_ST
      53                            .DEF    SCODE           ;SYNTH CODE CURRENTLY BEING MADE
      54                            .DEF    DCODE           ;DIG CODE CURRENTLY BEING MADE
      55                            .DEF    HID_P
      56                            .DEF    SNDTST
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    2

      57                            .DEF    USA_1, USA_2, USA_3, USA_4, USA_ELECTITLE
      58                            .DEF    GERMAN_1, GERMAN_2, GERMAN_3, GERMAN_4, GERMAN_ELECTITLE
      59                            .DEF    FRENCH_1, FRENCH_2, FRENCH_3, FRENCH_4, FRENCH_ELECTITLE
      60                            .DEF    DIPCOINTAB
      61                            .def    RES_ALL
      62                    
      63                    ******************************************************************************
      64                    * EXTERNAL REFERENCES
      65                            .ref    _coin_addr
      66                            .ref    _switch_addr
      67                            .ref    _switch2_addr
      68                            .ref    _sound_addr
      69                            .ref    _soundirq_addr
      70                            .ref    _coin_counter_addr
      71                            .ref    _set_time
      72                            .ref    dec_to_asc
      73                            .ref    copy_rom_string
      74                            .ref    concat_string,concat_rom_string
      75                            .ref    message_buffer
      76                            .ref    MENU_TOP
      77                            .ref    COL_INST
      78                            .ref    GETSTICK
      79                            .ref    ST_STICK
      80                            .ref    CLR_MAIN
      81                            .ref    ADJ_INST
      82                            .ref    CADJ_BOX
      83                            .ref    CLR_CUR
      84                            .ref    _switch_map_mode
      85                            .ref    _clk_rd
      86                            .ref    _get_time
      87                            .ref    _aquire_time
      88                    
      89                            .REF    RNDRNG0
      90                            .REF    CREATE_TEXT_LINE
      91                    
      92                            .globl  _rtc_seconds, _rtc_day, _rtc_date, _rtc_month
      93                            .globl  _rtc_minutes, _rtc_hours, _rtc_year
      94                            .globl  _tseconds,_tminutes,_thours,_tday,_tdate,_tmonth,_tyear
      95                            .globl  _serial_number,_month,_day,_year,_man_date
      96                            .globl  _GetTime,_auto_update_save
      97                    
      98 00000000                   .bss    _setup_mess,10*16       ;Used for built messages
      99 000000a0                   .bss    _setup_mess_msg,8*40    ;Used for built message strings
     100                    
     101 000001e0                   .bss    _rtc_seconds,16         ;These are used when SETTING the RTC
     102 000001f0                   .bss    _rtc_minutes,16
     103 00000200                   .bss    _rtc_hours,16
     104 00000210                   .bss    _rtc_day,16
     105 00000220                   .bss    _rtc_date,16
     106 00000230                   .bss    _rtc_month,16
     107 00000240                   .bss    _rtc_year,16
     108                    
     109 00000250                   .bss    _last_seconds,16        ;This is used when displaying the time
     110                    
     111 00000260                   .bss    _tseconds,16            ;This is where the current time is
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    3

     112 00000270                   .bss    _tminutes,16            ;stored when the time data is read
     113 00000280                   .bss    _thours,16              ;from the PIC.
     114 00000290                   .bss    _tday,16
     115 000002a0                   .bss    _tdate,16
     116 000002b0                   .bss    _tmonth,16
     117 000002c0                   .bss    _tyear,16
     118 000002d0                   .bss    _mytemp,32
     119                    
     120 000002f0                   .bss    _serial_number,32       ;Game Serial Number  (Hexidecimal)
     121 00000310                   .bss    _man_date,32            ;Date of manufacture (composite)
     122 00000330                   .bss    _month,32               ;Date of manufacture (month)
     123 00000350                   .bss    _day,32                 ;Date of manufacture (date)
     124 00000370                   .bss    _year,32                ;Date of manufacture (year)
     125                    
     126 00000390                   .bss    _auto_update_save,32    ;Save area for clock auto update
     127                    
     128                    
     129                            .ref    display_init
     130                            .ref    opmsg_main
     131                            .ref    SWITCHTEST
     132                            .ref    CLR_AUD
     133                            .ref    fswitches_cur,fswitches_down,fudge_switches2
     134                            .ref    AREUSURE
     135                            .ref    RD15FONT
     136                            .ref    L_MESS
     137                            .ref    SCRCLR
     138                            .ref    SUR_MESS
     139                            .ref    DIAG_EX
     140                            .ref    GET_ADJ
     141                            .ref    NO_CREDS
     142                            .ref    COL_BARS
     143                            .ref    DIGSRT
     144                            .ref    STRCNRM
     145                            .ref    GET_AUD
     146                            .ref    STRCAT
     147                            .ref    QSNDRST
     148                            .ref    FAC_SET
     149                            .ref    GEN_MENU
     150                            .ref    STRNGRAM
     151                            .ref    GET_HSC
     152                            .ref    STD_BORD
     153                            .ref    CLR_AUDR
     154                            .ref    STRNEW1
     155                            .ref    CMOS_VAL
     156                            .ref    FORM_ADC
     157                            .ref    LM_FINIS
     158                            .ref    INIT_HSR
     159                            .ref    TOP_BOX
     160                            .ref    LM_SETUP
     161                            .ref    B_MENU
     162                            .ref    GO_ADJ
     163                            .ref    BLNKAREA
     164                            .ref    MAIN_RET
     165                            .ref    STRLNRM
     166                            .ref    RD7FONT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    4

     167                            .ref    WC_WORD
     168                            .ref    HEXTOASC
     169                            .ref    DIAGCPUTEST
     170                            .ref    CROSS_H
     171                            .ref    WDOGDIS
     172                            .ref    SURE_BOX
     173                            .ref    ROM_NAME
     174                            .ref    STRRNRM
     175                            .ref    FILLAREA
     176                            .ref    CLR_SCRN
     177                            .ref    CAT_A0
     178                            .ref    CK_MAX
     179                            .ref    BURN_IN
     180                            .ref    WAIT_BUT
     181                            .ref    BAD_AUD
     182                    
     183                            ;from AUDIT.ASM
     184                            .ref    AUD1
     185                    
     186                            ;from DIAG.ASM
     187                            .ref    RECTANGLE
     188                    
     189                            ;from HSTD.ASM
     190                            .ref    INIT_TB,STREAK_TAB,PIN_SPEED_TAB,INIT_HSTRING
     191                            .REF    BEATEN_TAB
     192                            .ref    INTER_TAB
     193                            .REF    TAG_TAB
     194                    
     195                            ;from MPROC.ASM
     196                            .ref    KIL1C
     197                    
     198                            ;from NSOUND.ASM
     199                            .ref    SNDSND,nosounds,set_volume
     200                    
     201                            ;from UTIL.ASM
     202                            .ref    get_but_val_down,get_stick_val_cur,dpageflip_off
     203                    
     204                    ******************************************************************************
     205                    
     206 000003b0                   .BSS    FAC_FLAG,16             ;FLAG SAYS CLEAR AUDITS AND HSTABLE
     207                                                            ;IF FACTORY SETTINGS SUCCEED.
     208 000003c0                   .BSS    SCODE,16                ;SYNTH CODE LAST MADE!
     209 000003d0                   .BSS    DCODE,16                ;DIG CODE LAST MADE!
     210 000003e0                   .BSS    TMPOBJ,32               ;TEMPORARY OBJECT FROM STR_OBJ
     211                    
     212 00000000                   BSSX    octopus2,16
     213                    
     214                    
     215                    
     216                    **************************************************************************
     217                    *                                                                        *
     218                    *          COIN TABLE                                                    *
     219                    *                                                                        *
     220                    **************************************************************************
     221                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    5

     222                    *       The coin table is made up of the normal entries from
     223                    *       the pinball system, as well as some new ones that
     224                    *       determine start and buy-in cost, and others that
     225                    *       aid in the determination of a "total collection".
     226                    *
     227                    *       Left Slot Multiplier            word
     228                    *       Center Slot Multiplier          word
     229                    *       Right Slot Multiplier           word
     230                    *       fourth slot Muliplier           word
     231                    *       bill validator Muliplier        word
     232                    *       Units for Credit                word
     233                    *       Units for Bonus                 word
     234                    *       Minimum Units                   word
     235                    *       Credits to start                word
     236                    *       Credits to Continue             word
     237                    *       Divisor in money calculation    word   0 means "OFF"
     238                    *
     239                    * --------------------------------------------------------------
     240                    * The above value get copied as adjustments (and are adjustable).
     241                    * In addition, the coin table contains help on how to arrive at
     242                    * the "Total Collection" for the coin audits.
     243                    * --------------------------------------------------------------
     244                    *
     245                    *       Count for each Left coin                word
     246                    *       Count for each Center coin              word
     247                    *       Count for each Right coin               word
     248                    *       Count for fourth coin                   word
     249                    *       Count for DBV                           word
     250                    *       Pointer to Leading text string          long
     251                    *       Pointer to Following text string        long
     252                    *
     253                    **************************************************************************
     254                    *
     255                    *       GET_CSPT
     256                    *
     257                    *       THIS IS CALLED TO RETURN IN A6 THE CURRENT
     258                    *       CSELCT LINE AS STORED IN THE ADJUSTMENT TABLE.
     259                    *
     260                    **************************************************************************
     261 00000000           GET_CSPT
     262 00000000                   PUSH    a0
     263 00000010     1820          movk    ADJPRICE,a0
     264 00000020     0d5f          CALLA   GET_ADJ         ;GET THE COIN SELECT NUMBER BEING USED.
         00000030 00000000! 
     265 00000050     0d3f          CALLR   CS_POINT
         00000060     0002  
     266 00000070                   PULL    a0
     267 00000080     0960          RETS
     268                            
     269                    **************************************************************************
     270                    * CS_POINT - Point at selected entry in the coinage select table
     271                    * A0=Offset #
     272                    * Rets: A6=*Coinage table
     273                    **************************************************************************
     274 00000090           CS_POINT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    6

     275 00000090     098f          MMTM    SP,A0,A1
         000000a0     c000  
     276 000000b0     4c00          MOVE    A0,A0           ;ZERO?
     277 000000c0     ca06          JRZ     CS1             ;YEP...RETURN FIRST LINE
     278                    
     279 000000d0     0b60          CMPI    CS_ENTS,A0      ;IN RANGE?
         000000e0 ffffffc2  
     280 00000100     c201          JRLS    CS2             ;YEP...CONTINUE
     281 00000110     1820          MOVK    1,A0            ;TOO LARGE.......USE 1ST LINE.
     282                    
     283 00000120     1420  CS2     DEC     A0              ;INDEX INTO TABLE
     284 00000130     09c1  CS1     MOVI    CS_SIZE,A1      ;SIZE PER ENTRY
         00000140     01e0  
     285 00000150     5e01          MPYU    A0,A1           ;OFFSET INTO TABLE
     286 00000160     0b21          ADDI    CSELCT,A1
         00000170 0000c1c0" 
     287 00000190     4c26          MOVE    A1,A6           ;RETURN THE POINTER
     288 000001a0     09af          MMFM    SP,A0,A1
         000001b0     0003  
     289 000001c0     0960          RETS
     290                    
     291                    **************************************************************************
     292                    *
     293                    *       CKPROMPT
     294                    *
     295                    *       IS THERE A PROMPT STRING FOR THE CREDITS PAGE.
     296                    *
     297                    *       A0 RETURNS:
     298                    *
     299                    *       YES.....RETURN POINTER TO SOMETHING
     300                    *       NO......RETURN ZERO
     301                    *
     302                    *       IF A0 HAS A POINTER THEN....
     303                    *
     304                    *       IF A1 = 0 THEN A0 IS AN L_MESS STRING THAT SHOULD
     305                    *               JUST BE SENT OUT.
     306                    *
     307                    *       IF A1 != 0 THEN A0 IS A POINTER LIST OF UP TO 2 MESSAGES.
     308                    *               THAT GIVE PRICING INFO
     309                    *
     310                    *       A1 = 0 PLOT THE A0 STRING OUTRIGHT USING L_MESS
     311                    *               (IT CONTAINS ALL DATA)
     312                    *
     313                    *       A1 = 1  PLOT ONLY THE STRING LIST (1 OR 2 POINTERS
     314                    *               CENTERED APPROPRIATELY
     315                    *
     316                    *       A1 = 2  PLOT THE 1ST LINE OF THE STRING LIST ALONG
     317                    *               WITH THE 2 CREDITS TO START...1 TO CONTINUE
     318                    *
     319                    *       A1 = 3  PLOT THE 2ND LINE OF THE STRING LIST ALONG
     320                    *               WITH THE 2 CREDITS TO START...1 TO CONTINUE
     321                    *
     322                    *       A1 = 4  PLOT THE 3RD LINE OF THE STRING LIST ALONG
     323                    *               WITH THE 2 CREDITS TO START...1 TO CONTINUE
     324                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    7

     325                    *       A1 = 5  PLOT THE 1ST LINE OF THE STRING LIST ALONG
     326                    *               ALONG WITH 2 COINS PER PLAYER
     327                    *
     328                    *       A1 = 6  PLOT THE 2ND LINE OF THE STRING LIST ALONG
     329                    *               ALONG WITH 2 COINS PER PLAYER
     330                    *
     331                    *       A1 = 7  PLOT THE 3RD LINE OF THE STRING LIST ALONG
     332                    *               ALONG WITH 2 COINS PER PLAYER
     333                    *
     334                    *       A1 = 8  CUSTOM MESSAGE
     335                    *
     336                    **************************************************************************
     337                                                                                    
     338 000001d0           CKPROMPT
     339 000001d0                   PUSH    a6
     340 000001e0     1a60          movk    ADJFREPL,a0
     341 000001f0     0d5f          CALLA   GET_ADJ
         00000200 00000000! 
     342 00000220     cb27          jrnz    RET_NO                  ;Free play?
     343                    
     344 00000230     0d5f          CALLA   CK_MAX                  ;ARE WE AT MAX CREDITS?
         00000240 00000000! 
     345 00000260     c935          JRHS    RET_MAX
     346                    
     347 00000270     1ae0          movk    ADJNOCPAG,a0
     348 00000280     0d5f          CALLA   GET_ADJ                 ;CHECK THE ADJUSTMENT
         00000290 00000000! 
     349 000002b0     cb23          JRNZ    CKSPCASE                ;WE'RE SET TO SHUT UP.JUST START/CONT
     350                    
     351 000002c0     1ac0          movk    ADJ1ST6,a0              ;has operator messed around?
     352 000002d0     0d5f          CALLA   GET_ADJ
         000002e0 00000000! 
     353 00000300     ca1e          JRZ     CKSPCASE                ;YEP...GO FOR GENERIC "2 TO START"
     354                    
     355                    *       OPERATOR IS USING CANNED COINAGE....WE NEED TO USE THE
     356                    *       CHECK IF ITS 2/1 OR 2/2
     357                    
     358 00000310     0d3f          CALLR   CK_2_CRED               ;IS IT A 2 CREDIT MODE?
         00000320     002d  
     359 00000330     ca0a          JRZ     NOT_2_MODE              ;NOPE...PRINT STOCK STUFF
     360                    
     361 00000340     4c01          MOVE    A0,A1                   ;COPY 2/1        2/2 CODE
     362 00000350     0d3f          CALLR   GET_CSPT                ;POINT A6 AT CSEL FOR US NOW.
         00000360     ffc9  
     363 00000370     b4c0          MOVE    *A6(CS_PICK),A0         ;GET INDICATION OF WHICH LINE
         00000380     01b0  
     364 00000390     ca15          JRZ     CKSPCASE                ;IT SAYS JUST ENUMERATE THE MODE!
     365                    
     366                    *       NOW....IF ITS 2/1, A0 HAS THE CORRECT RETURN CODE
     367                    *       IF ITS 2/2 WE NEED TO ADD 2
     368                    
     369 000003a0     1421          subk    1,a1
     370 000003b0     ca0a          JRZ     RET_A0_VAL              ;2/1?
     371                    
     372 000003c0     1060          addk    3,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    8

     373 000003d0     c008          JRUC    RET_A0_VAL              ;RETURN THIS!
     374                    
     375 000003e0           NOT_2_MODE
     376 000003e0     0d3f          CALLR   GET_CSPT                ;POINT A6 AT CSEL FOR US NOW.
         000003f0     ffc0  
     377 00000400     b6c0          MOVE    *A6(CS_PROMPT),A0,L     ;FETCH POINTER TO MESSAGE (IF ANY)
         00000410     0150  
     378 00000420     ca0c          JRZ     CKSPCASE
     379                                                            ;WE HAVE SOMETHING STORED AT THE PROMPT
     380 00000430     0b40          CMPI    CSM_LAST,A0             ;IS IT LITTLE?
         00000440     fffb  
     381 00000450     c305          JRHI    CKEXIT                  ;NOPE..ITS A POINTER..RETURN L_MESS STATUE
     382                    
     383 00000460           RET_A0_VAL
     384 00000460     4c01          MOVE    A0,A1                   ;ITS LITTLE...RETURN IT AS A CODE
     385 00000470     b6c0          MOVE    *A6(CS_LIST),A0,L       ;PASS BACK MESSAGE LIST FOR THIS MODE
         00000480     0190  
     386 00000490     c002          JRUC    CK_BYE
     387                    
     388 000004a0     5600  RET_NO  CLR     A0                      ;IT IS FREE PLAY.
     389 000004b0     5621  CKEXIT  CLR     A1                      ;NO FANCIES YET
     390 000004c0           CK_BYE  PULL    a6
     391 000004d0     4c00          move    a0,a0                   ;Pass Z
     392 000004e0     0960          rets
     393                    
     394                    *       CONTROL COMES HERE IF IT LOOKS LIKE NO MESSAGE IS
     395                    *       APPROPRIATE....CHECK FOR 2 TO START 1 TO CONTINUE GENERIC NEEDED.
     396                    
     397 000004f0           CKSPCASE
     398 000004f0     0d3f          CALLR   CK_2_CRED               ;CHECK IF THERE ARE 2 CREDIT MODES.
         00000500     000f  
     399 00000510     caf8          JRZ     RET_NO                  ;NOT A 2 CREDIT MODE.
     400                    
     401 00000520     1420          subk    1,a0
     402 00000530     ca04          JRZ     TWO_ONE                 ;YEP...RETURN 2/1
     403                    
     404 00000540     09e0          MOVI    TWO_CRED_PER_PLAYER,A0
         00000550 0001c450" 
     405 00000570     c0f3          JRUC    CKEXIT                  ;RETURN IT!
     406                    
     407                    
     408 00000580     09e0  TWO_ONE MOVI    TWO_TO_START_2C,A0
         00000590 0001bdd0" 
     409                    
     410                    
     411 000005b0     c0ef          JRUC    CKEXIT
     412                    
     413 000005c0     09e0  RET_MAX MOVI    MAX_C_M,A0
         000005d0 0001c5a0" 
     414 000005f0     c0eb          JRUC    CKEXIT
     415                    
     416                    
     417                    **************************************************************************
     418                    * CK_2_CRED - Checks if in a 2-credit to start mode
     419                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    9

     420                    * A0=0  NOT 2/1 OR 2/2 CREDIT MODE
     421                    * A0=1  2 TO START 1 TO CONTINUE
     422                    * A0=2  2 TO START 2 TO CONTINUE
     423                    *
     424                    * Z     NOT 2/1 OR 2/2 CREDIT MODE
     425                    * NZ    IS 2/1 OR 2/2 CREDIT MODE
     426                    **************************************************************************
     427 00000600           CK_2_CRED
     428 00000600     09c0          MOVI    ADJCSTRT,A0
         00000610     000c  
     429 00000620     0d5f          CALLA   GET_ADJ         ;HOW MANY TO START
         00000630 00000000! 
     430 00000650     1440          subk    2,a0
     431 00000660     cb0a          jrnz    c2c20           ;!2 to start?
     432                    
     433 00000670     09c0          MOVI    ADJCCONT,A0
         00000680     000d  
     434 00000690     0d5f          CALLA   GET_ADJ         ;GET CONTINUE NUMBER
         000006a0 00000000! 
     435 000006c0     0b40          cmpi    2,a0            ;1 or 2 is what we return
         000006d0     fffd  
     436 000006e0     c302          jrhi    c2c20           ;02H?
     437 000006f0     4c00          move    a0,a0           ;Return NZ (unless its 2/0)
     438 00000700     0960          rets
     439                    
     440 00000710     5600  c2c20   clr     a0              ;Pass Z
     441 00000720     0960          rets
     442                    
     443                    **************************************************************************
     444                    *                                                                        *
     445                    *          MENU HANDLING SOFTWARE                                        *
     446                    *                                                                        *
     447                    **************************************************************************
     448                    
     449                    **************************************************************************
     450                    *                                                                        *
     451                    *          FORCE_MAIN                                                    *
     452                    *                                                                        *
     453                    *          THIS IS CALLED TO GET TO MAIN MENU FROM LEVEL FURTHER         *
     454                    *          THAN 1 DOWN.  IT SETS THE GLOBAL FLAG "MAIN_RET"              *
     455                    *          NON ZERO.  GEN_MENU WILL KEEP RETURNING UNTIL                 *
     456                    *          IT GETS BACK TO THE MAIN MENU.                                *
     457                    *                                                                        *
     458                    **************************************************************************
     459 00000730           FORCE_MAIN
     460 00000730     1820          MOVK    1,A0            ;POSITIVE NUMBER FORCES MAIN MENU.
     461 00000740     0580          MOVE    A0,@MAIN_RET
         00000750 00000000! 
     462 00000770                   RETP                    ;NOW "RETURN TO THE MENU"
     463                    
     464                    **************************************************************************
     465                    *                                                                        *
     466                    *         DIAGNOSTIC TESTS SELECTED......SHOW DIAGNOSTIC TEST MENU       *
     467                    *                                                                        *
     468                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   10

     469 000007a0           GO_DIAG
     470 000007a0     09e8          MOVI    MEN_DIAG,A8     ;PUT UP THE MENU AND GO!
         000007b0 00006a10" 
     471 000007d0     c080          JAUC    GEN_MENU        ;THIS WILL RETURN TO LEVEL ABOVE US!
         000007e0 00000000! 
     472                    
     473                    **************************************************************************
     474                    *                                                                        *
     475                    *         COIN BOOKKEEPING SELECTED                                      *
     476                    *                                                                        *
     477                    **************************************************************************
     478 00000800           gb20    JSRP    DO_CLCOIN
     479 00000870           GO_BOOK
     480 00000870     0d5f          CALLA   CLR_SCRN
         00000880 00000000! 
     481 000008a0     09e2          MOVI    MES_BOOK,A2
         000008b0 00005420" 
     482 000008d0     09c3          MOVI    ROBO_WHITE,A3
         000008e0     0202  
     483 000008f0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
     484                    
     485 00000960     09e0          MOVI    COIN_AUDS,A0            ;PUT TABLE UP.
         00000970 0000fde0' 
     486 00000990                   JSRP    PRNT_AUD
     487 00000a00     09e0          MOVI    COIN1_AUDS,A0           ;PUT TABLE UP.
         00000a10 00010080' 
     488 00000a30                   JSRP    PRNT_AUD
     489                    
     490 00000aa0     09c8          MOVI    AUDLCOIN,A8             ;NOW PRINT MONEY FOR 1ST 3
         00000ab0     0001  
     491 00000ac0                   JSRP    PRINT_COL
     492                    
     493 00000b30     09e0          MOVI    COIN2_AUDS,A0           ;PUT TABLE UP.
         00000b40 00010140' 
     494 00000b60                   JSRP    PRNT_AUD
     495                    
     496                    
     497                    
     498                    ;       MOVI    COIN_A2,A0              ;PUT PART 2 OF THE TABLE THERE.
     499                    ;       JSRP    PRNT_AUD
     500                    
     501 00000bd0     09e8          MOVI    MEN_DETAIL,A8
         00000be0 00007310" 
     502 00000c00     1849          MOVK    2,A9                    ;CURSOR ON 2nd ENTRY
     503 00000c10                   JSRP    B_MENU                  ;SEE IF THEY WANT PAGE 2.
     504 00000c80     0b48          CMPI    1,A8                    ;DID WE GET 1'ST ENTRY?
         00000c90     fffe  
     505 00000ca0     cab5          jreq    gb20
     506                    
     507 00000cb0                   RETP
     508                    
     509                    
     510                    ;DETAIL_SCREEN
     511                    ;        CALLA   CLR_SCRN               ;CLEAR OUT FOR ACTION!
     512                    ;
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   11

     513                    ;        MOVI    DT_Y1,A0               ;HEIGHT OF TOP TITLE
     514                    ;        MOVI    ROBO_YELLOW,A9         ;COLOR
     515                    ;        CALLA   F_TITLE                ;FRAME IT
     516                    ;
     517                    ;        MOVI    DT_Y2,A0               ;HEIGHT OF 2ND TITLE
     518                    ;        CALLA   F_TITLE                ;FRAME IT
     519                    ;
     520                    ;        MOVI    DETAIL_TITLES,A8     ;NO ROOM FOR PRETTY TOP BOX...DO TITLES
     521                    ;        JSRP    L_MESS               ;ESTABLISH THE TITLES.
     522                    ;
     523                    ;        MOVI    COIN_D1,A0           ;DETAILED AUDIT 1
     524                    ;        JSRP    PRNT_AUD             ;PRINT IT
     525                    ;
     526                    ;        MOVI    AUDLCOIN,A8          ;NOW PRINT MONEY FOR 1ST 3
     527                    ;        JSRP    PRINT_COL      
     528                    ;
     529                    ;        MOVI    AUDLCSUB,A8          ;SUB-TOTAL OF TOTAL MONEY
     530                    ;        JSRP    PRINT_SUBTOTAL       ;PRINT IT.
     531                    ;
     532                    ;        MOVI    COIN_D2,A0           ;DETAILED AUDIT 2
     533                    ;        JSRP    PRNT_AUD
     534                    ;
     535                    ;        MOVI    AUDLCDC,A8           ;NOW PRINT MONEY FOR DOOR CLOSED SET
     536                    ;        JSRP    PRINT_COL
     537                    ;
     538                    ;        MOVI    AUDLCDCS,A8          ;NOW PRINT SUB-TOTAL FOR DOOR CLOSED
     539                    ;        JSRP    PRINT_SUBTOTAL       ;THATS IT!
     540                    ;
     541                    ;        MOVI    MEN_CLR_SUB,A8       ;CLEAR SUBTOTAL OR RETURN TO MAIN MENU
     542                    ;        MOVI    2,A9                 ;CURSOR ON 2ND ENTRY
     543                    ;        JSRP    B_MENU         
     544                    ;
     545                    ;        CMPI    1,A8                 ;CHOICE 1 IS CLEAR.....
     546                    ;        JRNZ    NO_CLEAR_SUB         ;NOPE...RETURN TO CALLER!
     547                    ;
     548                    ;        MOVI    MESS_CLEAR_SUBS,A8   ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
     549                    ;        MOVI    CLR_SUBS,A9          ;ROUTINE TO DO IT
     550                    ;        MOVI    MESS_SUBS_CLEAR,A10  ;CONFIRMATION.
     551                    ;        JSRP    AREUSURE             ;ASK EM.
     552                    ;        JRUC    DETAIL_SCREEN        ;NOW PUT THIS SCREEN BACK UP.
     553                    ;
     554                    ;NO_CLEAR_SUB
     555                    ;NO_DETAIL
     556                    ;        RETP                         ;AND RETURN TO OUR CALLER.
     557                    ;
     558                    ;PRINT_SUBTOTAL
     559                    ;         CALLR   ADD_AUDIT_DY         ;PUSH THE Y 1 LEVEL
     560                    ;         MOVI    T_SUB,A9             ;USE "SUB-TOTAL" MESSAGE
     561                    ;         JAUC    PRINT_MONEY          ;AND NOW PRINT THE REQUESTED SUM.
     562                    
     563                    **************************************************************************
     564                    *                                                                        *
     565                    *          GAME AUDITS SELECTED                                          *
     566                    *                                                                        *
     567                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   12

     568                    
     569                    **************************************************************************
     570                    *                                                                        *
     571                    *          AUDITS TO BE SHOWN ON GAME AUDITS PAGE:                       *
     572                    *                                                                        *
     573                    *          EXTRA MEN                                                     *
     574                    *          GAMES COMPLETED                                               *
     575                    *          1 PLAYER MINUTES                                              *
     576                    *          2 PLAYER MINUTES                                              *
     577                    *          TOTAL HOURS PLAYED                                            *
     578                    *          AVG "PLAYER" GAME TIME                                        *
     579                    *          AVG. ELAPSED TIME / PLAY                                      *
     580                    *                                                                        *
     581                    **************************************************************************
     582                    
     583 00000ce0           GO_AUD
     584 00000ce0     0d5f          CALLA   CLR_SCRN
         00000cf0 00000000! 
     585 00000d10     09e2          MOVI    MES_AUD,A2
         00000d20 000053c0" 
     586 00000d40     09c3          MOVI    ROBO_CYAN,A3
         00000d50     0e0e  
     587 00000d60                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     588                    
     589 00000dd0     09e0          MOVI    GAME_AUDS1,A0   ;PUT TABLE UP.
         00000de0 00010860' 
     590 00000e00                   JSRP    PRNT_AUD
     591 00000e70                   SLEEPK  1
     592                    
     593 00000eb0     09e8          MOVI    MEN_AP1,A8      ;AUDIT PAGE 1 MENU
         00000ec0 000076d0" 
     594 00000ee0     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     595 00000ef0                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     596 00000f60     0b48          CMPI    1,A8            ;DID WE GET 1'ST ENTRY?
         00000f70     fffe  
     597 00000f80     cb00          JRNZ    NO_AP2          ;NOPE...RETURN TO OUR CALLER
         00000f90     00d0  
     598                    
     599                    
     600 00000fa0           cjrppage2
     601 00000fa0     0d5f          CALLA   CLR_SCRN
         00000fb0 00000000! 
     602                    
     603 00000fd0     09e2          MOVI    MES_AUD,A2
         00000fe0 000053c0" 
     604 00001000     09c3          MOVI    ROBO_CYAN,A3
         00001010     0e0e  
     605 00001020                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     606                    
     607 00001090     09e0          MOVI    GAME_AUDS2,A0   ;PUT TABLE UP.
         000010a0 00010e00' 
     608 000010c0                   JSRP    PRNT_AUD
     609                    
     610 00001130     09e8          MOVI    MEN_AP2,A8
         00001140 000078b0" 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   13

     611 00001160     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     612 00001170                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     613 000011e0     0b48          cmpi    2,A8            ;DID WE GET 2nd ENTRY (RETURN TO PAGE 1)
         000011f0     fffd  
     614 00001200     caad          jreq    GO_AUD          ;YEP...PUT IT UP!
     615                    
     616 00001210           cjrppage2a
     617 00001210     0d5f          CALLA   CLR_SCRN
         00001220 00000000! 
     618                    
     619 00001240     09e2          MOVI    MES_AUD,A2
         00001250 000053c0" 
     620 00001270     09c3          MOVI    ROBO_CYAN,A3
         00001280     0e0e  
     621 00001290                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     622                    
     623 00001300     09e0          MOVI    GAME_AUDS2a,A0  ;PUT TABLE UP.
         00001310 000113a0' 
     624 00001330                   JSRP    PRNT_AUD
     625                    
     626 000013a0     09e8          MOVI    MEN_AP2,A8
         000013b0 000078b0" 
     627 000013d0     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     628 000013e0                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     629 00001450     0b48          cmpi    2,A8            ;DID WE GET 2nd ENTRY (RETURN TO PAGE 1)
         00001460     fffd  
     630 00001470     cab2          jreq    cjrppage2               ;YEP...PUT IT UP!
     631                    
     632 00001480           cjrppage3
     633 00001480     0d5f          CALLA   CLR_SCRN
         00001490 00000000! 
     634                    
     635 000014b0     09e2          MOVI    MES_AUD,A2
         000014c0 000053c0" 
     636 000014e0     09c3          MOVI    ROBO_CYAN,A3
         000014f0     0e0e  
     637 00001500                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     638                    
     639 00001570     09e0          MOVI    GAME_AUDS3a,A0  ;PUT TABLE UP.
         00001580 000115e0' 
     640 000015a0                   JSRP    PRNT_AUD
     641                    
     642 00001610     09e0          MOVI    GAME_AUDS3b,A0  ;PUT TABLE UP.
         00001620 00011940' 
     643 00001640                   JSRP    PRNT_AUD
     644                    
     645 000016b0     09e0          MOVI    GAME_AUDS3c,A0  ;PUT TABLE UP.
         000016c0 00011ca0' 
     646 000016e0                   JSRP    PRNT_AUD
     647                    
     648 00001750     09e0          MOVI    GAME_AUDS3d,A0  ;PUT TABLE UP.
         00001760 00012000' 
     649 00001780                   JSRP    PRNT_AUD
     650                    
     651 000017f0     09e8          movi    GAUD_P3HEAD1,a8 ;and the page header
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   14

         00001800 00012360' 
     652 00001820                   JSRP    L_MESS
     653                    
     654 00001890     09e8          movi    GAUD_P3HEAD2,a8 ;and the page header
         000018a0 00012440' 
     655 000018c0                   JSRP    L_MESS
     656                    
     657 00001930     09e8          movi    GAUD_P3HEAD3,a8 ;and the page header
         00001940 00012510' 
     658 00001960                   JSRP    L_MESS
     659                    
     660 000019d0     09e8          movi    GAUD_P3HEAD4,a8 ;and the page header
         000019e0 000125e0' 
     661 00001a00                   JSRP    L_MESS
     662                    
     663 00001a70     09e8          movi    GAUD_P3HEAD5,a8 ;and the page header
         00001a80 000126b0' 
     664 00001aa0                   JSRP    L_MESS
     665                    
     666 00001b10     09e8          movi    GAUD_P3HEAD6,a8 ;and the page header
         00001b20 00012780' 
     667 00001b40                   JSRP    L_MESS
     668                    
     669 00001bb0     09e8          MOVI    MEN_AP3,A8
         00001bc0 00007a90" 
     670 00001be0     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     671 00001bf0                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     672 00001c60     0b48          cmpi    2,A8            ;DID WE GET 2nd ENTRY (RETURN TO PAGE 2)
         00001c70     fffd  
     673                    ;       jreq    cjrppage2               ;YEP...PUT IT UP!
     674 00001c80     ca00          jreq    cjrppage2a              ;YEP...PUT IT UP!
         00001c90     ff57  
     675                    
     676 00001ca0           NO_AP2
     677 00001ca0                   RETP
     678                    
     679 00001cd0           GO_UTIL
     680 00001cd0     09e8          MOVI    MEN_UTIL,A8
         00001ce0 00006590" 
     681 00001d00     c080          JAUC    GEN_MENU        ;PROCESS THE UTILITY MENU!
         00001d10 00000000! 
     682                    *
     683                    *       INDIVIDUAL UTILITY PROGRAMS
     684                    *
     685                    
     686 00001d30           DO_CLCRED
     687 00001d30     09e8          MOVI    MESS_CLCRED,A8  ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00001d40 00009d90" 
     688 00001d60     09e9          MOVI    CLR_CREDITS,A9  ;ROUTINE TO DO IT
         00001d70 00003900' 
     689 00001d90     09ea          MOVI    MESS_CCCONF,A10 ;CONFIRMATION.
         00001da0 00009e00" 
     690 00001dc0     c080          JAUC    AREUSURE        ;ASK EM......THEN RETURN!
         00001dd0 00000000! 
     691                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   15

     692                    **************************************************************************
     693                    *                                                                        *
     694                    *         VOLUME ADJUSTMENT SELECTED                                     *
     695                    *                                                                        *
     696                    **************************************************************************
     697                    
     698 00000410                   .bss    bar_height,16
     699                    
     700 00001df0           GO_VOL
     701                    
     702 00001df0     0d5f          calla   display_blank
         00001e00 00000000! 
     703 00001e20     0d5f          calla   dpageflip_off           ;page flipping off
         00001e30 00000000! 
     704                            
     705 00001e50     0d5f          calla   CLR_SCRN
         00001e60 00000000! 
     706 00001e80     09e2          movi    M_VOLUME,a2
         00001e90 00000120" 
     707 00001eb0     09c3          movi    ROBO_GREEN,a3
         00001ec0     0606  
     708 00001ed0                   JSRP    TOP_BOX
     709                    
     710 00001f40                   create  FX_PID,background_sound ;noise
     711                    
     712                    ;       movi    pf_volume_1,a8          ;title/instructions
     713                    ;       JSRP    L_MESS
     714 00001fc0     09e8          movi    pf_volume_2,a8
         00001fd0 000032b0' 
     715 00001ff0                   JSRP    L_MESS
     716 00002060     09e8          movi    pf_volume_3,a8
         00002070 000034d0' 
     717 00002090                   JSRP    L_MESS
     718                    
     719 00002100     09e0          movi    bxy,a0                  ;frame
         00002110 002e00b0  
     720 00002130     09e1          movi    bw|bh,a1
         00002140 00b00030  
     721                    ;       movi    ROBO_GREEN,a2
     722 00002160     09c2          movi    ROBO_BLUE,a2
         00002170     0707  
     723 00002180                   fcall   RECTANGLE,b6
     724                    
     725 000021c0     09e0          movi    bxy+000030003H,a0       ;frame
         000021d0 003100b3  
     726 000021f0     09e1          movi    bw|bh-000060006H,a1
         00002200 00aa002a  
     727 00002220     09c2          movi    ROBO_BLACK,a2
         00002230     1414  
     728 00002240                   fcall   RECTANGLE,b6
     729                    
     730 00002280     09e8          movi    pf_volume_4,a8          ;MIN/MAX
         00002290 00003640' 
     731 000022b0                   JSRP    L_MESS
     732 00002320     09e8          movi    pf_volume_5,a8
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   16

         00002330 00003710' 
     733 00002350                   JSRP    L_MESS
     734                    
     735 000023c0     5600          clr     a0
     736 000023d0     0580          move    a0,@bar_height
         000023e0 00000410- 
     737 00002400     09c0          movi    ADJVOLUME,a0
         00002410     001c  
     738 00002420     0d5f          calla   GET_ADJ
         00002430 00000000! 
     739 00002450                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
     740 000024e0     0d5f          calla   set_volume
         000024f0 00000000! 
     741 00002510     0d3f          callr   vol_to_ht
         00002520     00a3  
     742 00002530     0d3f          callr   adjust_bar_height
         00002540     0075  
     743 00002550                   SLEEPK  2
     744 00002590     0d5f          calla   display_unblank
         000025a0 00000000! 
     745                    
     746 000025c0           vol_loop_top
     747 000025c0                   SLEEPK  1
     748                    
     749                            ;check for done
     750 00002600     5621          clr     a1
     751 00002610     5600          clr     a0
     752 00002620     0d5f          calla   get_but_val_down
         00002630 00000000! 
     753 00002650     5401          or      a0,a1
     754 00002660     1820          movk    1,a0
     755 00002670     0d5f          calla   get_but_val_down
         00002680 00000000! 
     756 000026a0     5401          or      a0,a1
     757 000026b0     07a0          move    @_coin_addr,a0,L
         000026c0 00000000! 
     758 000026e0     8400          move    *a0,a0
     759 000026f0     03e0          not     a0
     760                    ;       andi    0e7ffh,a0
     761 00002700     0b80          andi    0e7efh,a0
         00002710 ffff1810  
     762 00002730     5401          or      a0,a1
     763 00002740     cb4a          jrnz    vol_loop_done
     764                    
     765                            ;check for a vol change
     766 00002750     5600          clr     a0
     767 00002760     0d5f          calla   get_stick_val_cur
         00002770 00000000! 
     768 00002790     4c01          move    a0,a1
     769 000027a0     1820          movk    1,a0
     770 000027b0     0d5f          calla   get_stick_val_cur
         000027c0 00000000! 
     771 000027e0     5401          or      a0,a1
     772 000027f0     0b81          andi    0011b,a1                ;filter out left/right
         00002800 fffffffc  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   17

     773                    
     774                            ;listen to the coin door switches too.  OR them in.
     775                    ;       move    @COINS,a0               ;the down switch
     776 00002820     07a0          move    @_coin_addr,a0,L
         00002830 00000000! 
     777 00002850     8400          move    *a0,a0
     778 00002860     03e0          not     a0
     779 00002870     0b80          andi    0800h,a0
         00002880 fffff7ff  
     780 000028a0     2ec0          srl     10,a0
     781 000028b0     5401          or      a0,a1
     782                    ;       move    @COINS,a0               ;the up switch
     783 000028c0     07a0          move    @_coin_addr,a0,L
         000028d0 00000000! 
     784 000028f0     8400          move    *a0,a0
     785 00002900     03e0          not     a0
     786 00002910     0b80          andi    1000h,a0
         00002920 ffffefff  
     787 00002940     2e80          srl     12,a0
     788 00002950     5401          or      a0,a1
     789 00002960     cac5          jrz     vol_loop_top
     790                    
     791                            ;get the volume
     792 00002970     09c0          movi    ADJVOLUME,a0
         00002980     001c  
     793 00002990     0d5f          calla   GET_ADJ
         000029a0 00000000! 
     794                    
     795                            ;make sure the volume is in range
     796 000029c0                   BADCHK  a0,1,255,28             ;reg, lo, hi, val if bad
     797                    ;       cmpi    4,a0
     798                    ;       jrge    vol_notlow
     799                    ;       movi    4,a0
     800                    ;       jruc    vol_nothigh
     801                    ;vol_notlow
     802                    ;       cmpi    255,a0
     803                    ;       jrle    vol_nothigh
     804                    ;       movi    255,a0
     805                    ;vol_nothigh
     806                    
     807 00002a50     1fc1          btst    JOYDN,a1
     808 00002a60     cb0c          jrnz    vol_dec
     809                    
     810                            ;increment volume
     811 00002a70     0b40          cmpi    255,a0
         00002a80     ff00  
     812 00002a90     cab2          jreq    vol_loop_top
     813 00002aa0     1020          inc     a0
     814 00002ab0     0d5f          calla   set_volume
         00002ac0 00000000! 
     815 00002ae0     0d3f          callr   vol_to_ht
         00002af0     0046  
     816 00002b00     0d3f          callr   adjust_bar_height
         00002b10     0018  
     817 00002b20     c0a9          jruc    vol_loop_top
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   18

     818                    
     819 00002b30           vol_dec ;decrement volume
     820 00002b30     0b40          cmpi    4,a0
         00002b40     fffb  
     821 00002b50     caa6          jreq    vol_loop_top
     822 00002b60     1420          dec     a0
     823 00002b70     0d5f          calla   set_volume
         00002b80 00000000! 
     824 00002ba0     0d3f          callr   vol_to_ht
         00002bb0     003a  
     825 00002bc0     0d3f          callr   adjust_bar_height
         00002bd0     000c  
     826 00002be0     c09d          jruc    vol_loop_top
     827                    
     828 00002bf0           vol_loop_done
     829 00002bf0     09c0          movi    FX_PID,a0       ;kill the background noise
         00002c00     0120  
     830 00002c10     0d5f          calla   KIL1C
         00002c20 00000000! 
     831 00002c40     0d5f          calla   nosounds
         00002c50 00000000! 
     832                    
     833 00002c70                   RETP
     834                    
     835                    
     836                    ***************************************
     837                    * Adjusts the bar height
     838                    * 0a0H=new height (1-170)
     839                    
     840 00002ca0            SUBRP  adjust_bar_height
     841                    
     842 00002ca0     4c01          move    a0,a1
     843 00002cb0     05a0          move    @bar_height,a0
         00002cc0 00000410- 
     844 00002ce0           ihtdadjust_loop
     845 00002ce0     4820          cmp     a1,a0
     846 00002cf0     ca0d          jreq    ihtddone
     847 00002d00     c406          jrlt    ihtdgrow_bar
     848                    
     849 00002d10     09c2          movi    ROBO_BLACK,a2
         00002d20     1414  
     850 00002d30     0d3f          callr   vol_bar_line
         00002d40     000c  
     851 00002d50     1420          dec     a0
     852 00002d60     c0f7          jruc    ihtdadjust_loop
     853                    
     854 00002d70           ihtdgrow_bar    
     855 00002d70     1020          inc     a0
     856 00002d80     09c2          movi    ROBO_RED,a2
         00002d90     0303  
     857 00002da0     0d3f          callr   vol_bar_line
         00002db0     0005  
     858 00002dc0     c0f1          jruc    ihtdadjust_loop
     859                    
     860 00002dd0           ihtddone
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   19

     861 00002dd0     0580          move    a0,@bar_height
         00002de0 00000410- 
     862 00002e00     0960          rets
     863                    
     864                    
     865                    ****************************************
     866                    * Draws a line on the volume bar, but won't overwrite green pixels (text)
     867                    * 0a0H=line index (not Ypos) 0a2H=color
     868                    
     869 00002e10            SUBRP  vol_bar_line
     870                    
     871 00002e10                   PUSH    a0,a1,a2
     872                            ;convert the line index to a linear address
     873 00002e30     2200          sla     16,a0
     874 00002e40     03a0          neg     a0
     875 00002e50     0b20          addi    bxy+bh-000030000H+59,a0 ;various fudges here
         00002e60 00db00eb  
     876 00002e80     e800          cvxyl   a0,a0
     877                    
     878                            ;now write the color value to all non-green pixels
     879 00002e90     09ee          movi    bw-6,a14
         00002ea0 0000002a  
     880 00002ec0           vbl_pixel_loop
     881 00002ec0     8e01          movb    *a0,a1
     882                    ;       cmpi    ROBO_GREEN&0Fh,a1
     883 00002ed0     0b41          cmpi    ROBO_BLUE&0Fh,a1
         00002ee0     fff8  
     884 00002ef0     ca01          jreq    vbl_skip_pixel
     885 00002f00     8c40          movb    a2,*a0
     886 00002f10           vbl_skip_pixel
     887 00002f10     1100          addk    8,a0
     888 00002f20     3cee          dsj     a14,vbl_pixel_loop
     889                    
     890 00002f30                   PULL    a0,a1,a2
     891 00002f50     0960          rets
     892                            
     893                    ****************************************
     894                    * Converts a 0-255 volume value to a 1-170 bar height value
     895                    * 0a0H=volume
     896                    * <a0=height
     897                    
     898 00002f60            SUBRP  vol_to_ht
     899                    
     900 00002f60                   PUSH    a1
     901 00002f70     4c01          move    a0,a1
     902 00002f80     09ce          movi    169,a14
         00002f90     00a9  
     903 00002fa0     5fc1          mpyu    a14,a1
     904 00002fb0     09ce          movi    255,a14
         00002fc0     00ff  
     905 00002fd0     5bc1          divu    a14,a1
     906 00002fe0     1021          inc     a1
     907 00002ff0     4c20          move    a1,a0
     908 00003000                   PULL    a1
     909                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   20

     910 00003010     0960          rets
     911                    
     912                    ****************************************
     913                    * Makes noises during sound test.
     914                    *
     915                    
     916 00003020            SUBRP  background_sound
     917 00003020     5663          clr     a3
     918 00003030     0d5f          calla   SNDSND
         00003040 00000000! 
     919 00003060     09c3          movi    1000,a3
         00003070     03e8  
     920 00003080     0d5f          calla   SNDSND
         00003090 00000000! 
     921 000030b0                   SLEEP   040H
     922                    
     923 00003100     09ea  bgsnd3  movi    sound_fx_table,a10
         00003110 000031e0' 
     924 00003130     9543  bgsnd6  move    *a10+,a3,W
     925 00003140     cafb          jrz     bgsnd3
     926 00003150     0d5f          calla   SNDSND
         00003160 00000000! 
     927 00003180                   SLEEP   020H
     928 000031d0     c0f5          jruc    bgsnd6
     929                    
     930 000031e0           sound_fx_table
     931 000031e0     1980          .word   6528
     932 000031f0     00b0          .word   00B0H
     933 00003200     0080          .word   0080H
     934 00003210     0203          .word   0203H
     935 00003220     00c5          .word   00C5H
     936 00003230     00b9          .word   00B9H
     937 00003240     00cb          .word   00CBH
     938 00003250     0206          .word   0206H
     939 00003260     00b6          .word   00B6H
     940 00003270     00d1          .word   00D1H
     941 00003280     0315          .word   0315H
     942 00003290     0202          .word   0202H
     943 000032a0     0000          .word   0
     944                    
     945 000032b0           pf_volume_2
     946 000032b0                   MESS_MAC RD7FONT,SPACING20,200,174+53,COLOR_YELLOW,STRCNRM,0
     947 00003350       41          .string "ADJUST VOLUME WITH JOYSTICKS OR VOLUME BUTTONS",0,0
     948 000034d0                   .even
     949                    
     950 000034d0           pf_volume_3
     951 000034d0                   MESS_MAC RD7FONT,SPACING20,200,184+53,ROBO_LASER,STRCNRM,0
     952 00003570       41          .string "ANY OTHER BUTTON TO QUIT",0,0
     953 00003640                   .even
     954                    
     955 00003640           pf_volume_4
     956 00003640                   MESS_MAC RD7FONT,SPACING20,201,vb_y+005H,ROBO_BLUE,STRCNRM,0
     957 000036e0       4d          .string "MAX",0,0
     958 00003710                   .even
     959                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   21

     960 00003710           pf_volume_5
     961 00003710                   MESS_MAC RD7FONT,SPACING20,201,vb_y+0a0H,ROBO_BLUE,STRCNRM,0
     962 000037b0       4d          .string "MIN",0,0
     963 000037e0                   .even
     964                    
     965              002f  vb_y            .set    02fH
     966              00ab  vb_height       .set    171
     967          002e00b0  bxy     .set    0002e0000H+200-018H
     968                    
     969          00b00000  bh      .set    0b0H*010000H
     970              0030  bw      .set    030H
     971                    
     972              0003  bthickx .set    3
     973          00030000  bthicky .set    3*010000H
     974                    
     975 000037e0           volume_table
     976 000037e0 00b00003          .long   bh+3,bxy                ; height:width  /  y:x coordinates
     977 00003820 00b00003          .long   bh+3,bxy+bw             ; height:width  /  y:x coordinates
     978                    
     979 00003860 00030030          .long   bthicky+bw,bxy                  ; height:width  /  y:x coordinates
     980 000038a0 00030033          .long   bthicky+bw+bthickx,bxy+bh       ; height:width  /  y:x coordinates
     981 000038e0 00000000          .long   0
     982                    
     983                    **************************************************************************
     984                    *                                                                        *
     985                    *          CLR_CREDITS                                                   *
     986                    *                                                                        *
     987                    *          ROUTINE TO CLEAR OUT THE CREDITS POSTED ON THE GAME.          *
     988                    *                                                                        *
     989                    **************************************************************************
     990 00003900           CLR_CREDITS
     991 00003900     0d5f          CALLA   NO_CREDS                ;CALL THE ROUTINE THAT DOES IT
         00003910 00000000! 
     992 00003930                   RETP
     993                    
     994 00003960           DO_CLCOIN
     995 00003960     09e8          MOVI    MESS_CLCOIN,A8          ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00003970 00009e80" 
     996 00003990     09e9          MOVI    CLR_COINS,A9            ;ROUTINE TO DO IT
         000039a0 00003a20' 
     997 000039c0     09ea          MOVI    MESS_CCNCONF,A10        ;CONFIRMATION.
         000039d0 0000b070" 
     998 000039f0     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         00003a00 00000000! 
     999                    
    1000 00003a20           CLR_COINS
    1001 00003a20     09c0          MOVI    FRST_C,A0
         00003a30     0001  
    1002 00003a40     09c1          MOVI    LAST_C,A1
         00003a50     000d  
    1003 00003a60     0d5f          CALLA   CLR_AUDR
         00003a70 00000000! 
    1004 00003a90                   RETP
    1005                    
    1006 00003ac0           DO_CLAUD
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   22

    1007 00003ac0     09e8          MOVI    MESS_CLAUD,A8           ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00003ad0 00009f20" 
    1008 00003af0     09e9          MOVI    CLR_AUDITS,A9           ;ROUTINE TO DO IT
         00003b00 00003ce0' 
    1009 00003b20     09ea          MOVI    MESS_CAUDCONF,A10       ;CONFIRMATION.
         00003b30 0000b1d0" 
    1010 00003b50     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         00003b60 00000000! 
    1011                    
    1012 00003b80           DO_CLPLRECS
    1013 00003b80     09e8          movi    MESS_CLPLRECS,A8        ;CLEAR PLAYER RECORDS
         00003b90 00009fb0" 
    1014 00003bb0     09e9          movi    clr_plr_records,a9      ;ROUTINE TO DO IT
         00003bc0 00003c40' 
    1015 00003be0     09ea          movi    MESS_CLPLRECSCONF,a10   ;CONFIRMATION.
         00003bf0 0000b490" 
    1016 00003c10     c080          jauc    AREUSURE                ;ASK EM......THEN RETURN!
         00003c20 00000000! 
    1017                    
    1018                    ;       .global clear_player_records
    1019 00003c40           clr_plr_records
    1020                    ;       calla   clear_player_records
    1021 00003c40     09c0          MOVI    AUD_BHART,A0
         00003c50     0033  
    1022 00003c60     09c1          MOVI    LASTGAUD,A1
         00003c70     0067  
    1023 00003c80     0d5f          CALLA   CLR_AUDR
         00003c90 00000000! 
    1024 00003cb0                   RETP
    1025                    
    1026 00003ce0           CLR_AUDITS
    1027 00003ce0     09c0          MOVI    FRSTGAUD,A0
         00003cf0     000e  
    1028 00003d00     09c1          MOVI    LASTGAUD,A1
         00003d10     0067  
    1029 00003d20     0d5f          CALLA   CLR_AUDR
         00003d30 00000000! 
    1030                    ;       CALLA   DUMP_FS                 ;AND START THE "DUMP" RECORDS OVER
    1031 00003d50                   RETP
    1032                    
    1033 00003d80           DO_HSRES
    1034 00003d80     09e8          MOVI    MESS_HSRESET,A8
         00003d90 0000a070" 
    1035 00003db0     09e9          MOVI    HSSOFT,A9
         00003dc0 00003e40' 
    1036 00003de0     09ea          MOVI    MESS_HSRCONF,A10
         00003df0 0000b320" 
    1037 00003e10     c080          JAUC    AREUSURE
         00003e20 00000000! 
    1038                    
    1039 00003e40           HSSOFT
    1040 00003e40     0d3f          CALLR   RES_ALL
         00003e50     0003  
    1041 00003e60                   RETP                            ;PROGRAM TO DO THE JOB!
    1042                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   23

    1043                    **************************************************************************
    1044                    *
    1045                    *       RES_ALL
    1046                    *
    1047                    *       RESET ALL TIME HIGH SCORE TABLE AND THE
    1048                    *       HIGH SCORE RESET COUNTER.
    1049                    *
    1050                    **************************************************************************
    1051 00003e90           RES_ALL
    1052 00003e90     09e8          MOVI    STREAK_TAB,A8
         00003ea0 00000000! 
    1053 00003ec0     0d5f          CALLA   INIT_TB
         00003ed0 00000000! 
    1054 00003ef0     09e8          movi    PIN_SPEED_TAB,a8
         00003f00 00000000! 
    1055 00003f20     0d5f          calla   INIT_TB
         00003f30 00000000! 
    1056 00003f50     09e8          movi    BEATEN_TAB,a8
         00003f60 00000000! 
    1057 00003f80     0d5f          calla   INIT_TB
         00003f90 00000000! 
    1058 00003fb0     09e8          movi    INTER_TAB,a8
         00003fc0 00000000! 
    1059 00003fe0     0d5f          calla   INIT_TB
         00003ff0 00000000! 
    1060 00004010     09e8          MOVI    TAG_TAB,A8
         00004020 00000000! 
    1061 00004040     0d5f          calla   INIT_TB
         00004050 00000000! 
    1062                    
    1063 00004070     0d5f          calla   INIT_HSTRING
         00004080 00000000! 
    1064 000040a0     c080          jauc    INIT_HSR                ;RE-SET THE HIGH SCORE RESET COUNTER
         000040b0 00000000! 
    1065                    
    1066 000040d0           DO_FACSET
    1067 000040d0     09e8           MOVI    MESS_FACSET,A8
         000040e0 0000a4b0" 
    1068 00004100     1820           MOVK    1,A0
    1069 00004110     c004           JRUC    DEF_ADJ_PART
    1070                    
    1071                    **************************************************************************
    1072                    *                                                                        *
    1073                    *          DO_DEF_ADJ      THIS IS CALLED FROM UTILITY MENU TO           *
    1074                    *                          DO THE DEFAULT ADJUSTMENTS.                   *
    1075                    *                                                                        *
    1076                    *          DEF_ADJ_PART    THIS IS CALLED OUT OF THE FULL                *
    1077                    *                          FACTORY SETTING TO HANDLE THE                 *
    1078                    *                          ADJUSTMENT PART.                              *
    1079                    *                                                                        *
    1080                    *                          A8 MUST HAVE THE MESSAGE FOR "ARE YOU SURE"   *
    1081                    *                          A0 .NE. 0 FOR FULL FACTORY SETTINGS (ON       *
    1082                    *                                    SUCCESS OF ADJUSTMENT PART          *
    1083                    *                                                                        *
    1084                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   24

    1085 00004120           DO_DEF_ADJ
    1086 00004120     09e8          MOVI    MESS_DEF_ADJ,A8
         00004130 0000a380" 
    1087 00004150     5600          CLR     A0
    1088                    
    1089 00004160           DEF_ADJ_PART
    1090 00004160     0580          MOVE    A0,@FAC_FLAG,W          ;INDICATE THIS IS ADJUSTMENTS ONLY
         00004170 000003b0- 
    1091 00004190     09e9          MOVI    DEFADJSOFT,A9
         000041a0 00004290' 
    1092 000041c0     09ea          MOVI    NULL_ST,A10             ;DON'T PRINT ANYTHING....ROUTINE WILL.
         000041d0 000136a0" 
    1093 000041f0                   JSRP    AREUSURE
    1094 00004260                   RETP
    1095                    
    1096 00004290           DEFADJSOFT
    1097                    *
    1098                    *       NOW SMASH THE CHECKSUM
    1099                    *
    1100 00004290     0d5f          CALLA   FORM_ADC               ;FORM THE CKSUM
         000042a0 00000000! 
    1101 000042c0     4c20          MOVE    A1,A0                  ;PUT IN CMOS WRITING REGGIE
    1102 000042d0     09e7          MOVI    ADJ_CKSUM,A7
         000042e0 01404dc0  
    1103 00004300     1020          INC     A0                     ;THIS SMASHES ADJUSTMENTS
    1104 00004310     0d5f          CALLA   WC_WORD                ;AND STORE IT
         00004320 00000000! 
    1105                            .ref    form_crc32
    1106                            .ref    WC_LONG
    1107                    
    1108 00004340     0d5f          calla   form_crc32
         00004350 00000000! 
    1109 00004370     4c20          move    a1,a0
    1110 00004380     09e7          movi    ADJ_CRC32,a7
         00004390 01404fc0  
    1111 000043b0     0d5f          calla   WC_LONG
         000043c0 00000000! 
    1112                    *
    1113                    *       NOW MAKE SURE ITS SMASHED
    1114                    *
    1115 000043e0     0d5f          CALLA   CMOS_VAL
         000043f0 00000000! 
    1116 00004410     ca27          JRZ     AD_FAIL                ;WE CAN'T DO IT.....PRINT FAILURE.
    1117                    *
    1118                    *       NOW SET THE ADJUSTMENTS TO THE FACTORY VALUE.
    1119                    *
    1120 00004420     5600          clr     a0              ;Full
    1121 00004430     0d5f          CALLA   FAC_SET
         00004440 00000000! 
    1122 00004460     0d5f          CALLA   CMOS_VAL        ;IS IT OK NOW?
         00004470 00000000! 
    1123 00004490     cb1f          JRNZ    AD_FAIL         ;NOPE...PRINT FAILURE
    1124                    
    1125 000044a0     09e8          MOVI    MESS_DEFCONF,A8 ;THIS IS SINGLE MESSAGE
         000044b0 0000af10" 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   25

    1126                    
    1127 000044d0     05a0          MOVE    @FAC_FLAG,A0,W  ;DO WE NEED TO CLEAR THE TABLES?
         000044e0 000003b0- 
    1128 00004500     ca1f          JRZ     DAX             ;NOPE...POST SINGLE MESSAGE
    1129                    
    1130 00004510     0d5f          CALLA   CLR_SCRN        ;CLEAR THE SCREEN FOR OUR MESSAGES.
         00004520 00000000! 
    1131 00004540     0d3f          CALLR   FAC_STUF        ;DO AUDITS AND HIGH SCORE TABLE
         00004550     000d  
    1132                    
    1133 00004560     09e8          MOVI    MESS_FFSCONF,A8 ;PRINT THE REST OF THE MESSAGES
         00004570 0000ae70" 
    1134 00004590                   JSRP    L_MESS          ;THAT DOES IT!
    1135                    
    1136 00004600           NOTABS
    1137 00004600                   RETP
    1138                    
    1139                    *
    1140                    *       ON A FULL FACTORY SETTING (EITHER REQUESTED OR
    1141                    *       ADJUSTMENT FAILURE) THIS CLEARS THE AUDITS AND
    1142                    *       HIGH SCORE TABLE.
    1143                    *
    1144 00004630           FAC_STUF
    1145 00004630     0d5f          CALLA   CLR_AUD         ;CLEAR AUDITS TOO
         00004640 00000000! 
    1146 00004660     0d3f          CALLR   RES_ALL         ;ALL TIME TABLE
         00004670     ff81  
    1147 00004680     0960          RETS
    1148                    
    1149 00004690           AD_FAIL
    1150 00004690     09e8          MOVI    MESS_FACFAIL,A8
         000046a0 0000adc0" 
    1151 000046c0     c003          JRUC    DAX
    1152                    
    1153 000046d0           DEF_CAN
    1154 000046d0     09e8          MOVI    MESS_CANCELLED,A8
         000046e0 0000b570" 
    1155 00004700           DAX
    1156 00004700     0d5f          CALLA   CLR_SCRN
         00004710 00000000! 
    1157 00004730                   JSRP    SUR_MESS
    1158 000047a0                   RETP
    1159                    **************************************************************************
    1160                    *                                                                        *
    1161                    *          EXIST_LET                                                     *
    1162                    *                                                                        *
    1163                    *          IS THE E_INITS PROCESS RUNNING?                               *
    1164                    *                                                                        *
    1165                    **************************************************************************
    1166 000047d0           EXIST_LET
    1167 000047d0     09c0          MOVI    OPMES_PID,A0                   ;SETUP FOR THE EXISTP
         000047e0     0ac3  
    1168 000047f0     09e1          MOVI    0FFFFH,A1
         00004800 0000ffff  
    1169 00004820     c080          JAUC   EXISTP
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   26

         00004830 00000000! 
    1170                    **************************************************************************
    1171                    *                                                                        *
    1172                    *          BUILD_ST                                                      *
    1173                    *                                                                        *
    1174                    *          THIS IS CALLED TO TAKE THE STRING POINTED TO                  *
    1175                    *          BY -A10- AND REMOVE LEADING AND TRAILING BLANKS               *
    1176                    *          AND MOVE THE STRING TO "STRNGRAM".                            *
    1177                    *                                                                        *
    1178                    *          RETURN THE NUMBER OF TRAILING BLANKS IN A2.                   *
    1179                    *          RETURN .EQ. IF ALL BLANK!                                     *
    1180                    *                                                                        *
    1181                    **************************************************************************
    1182 00004850           BUILD_ST
    1183 00004850     098f          MMTM    SP,A0,A1,A3,A4,A5,A10
         00004860     dc20  
    1184 00004870     5684          CLR     A4                     ;A4 = ZERO UNTIL 1ST NON-BLANK
    1185 00004880     09e5          MOVI    STRNGRAM-BYTE_SIZE,A5  ;LAST NON-SPACE CHAR
         00004890 fffffff8! 
    1186 000048b0     09e1          MOVI    STRNGRAM,A1          ;DESTINATION POINTER
         000048c0 00000000! 
    1187 000048e0     09c2          MOVI    CMESS_CHARS,A2       ;CHAR COUNT
         000048f0     001a  
    1188                    
    1189 00004900           BSLOOP
    1190 00004900     8f43          MOVB    *A10,A3              ;FETCH A BYTE
    1191 00004910     0b83          ANDI    BYTE_MASK,A3         ;KILL SIGN EXTEND.
         00004920 ffffff00  
    1192 00004940     cb02          JRNZ    BS1                  ;NOT ZERO
    1193 00004950     09c3          MOVI    SPACE,A3             ;REPLACE ZERO WITH SPACE.
         00004960     0020  
    1194                    
    1195 00004970           BS1
    1196 00004970     0b43          CMPI    SPACE,A3             ;IS IT A SPACE?
         00004980     ffdf  
    1197 00004990     ca03          JRZ     BS2                  ;IT IS...
    1198                    *
    1199                    *       NON-SPACE CHARACTER
    1200                    *
    1201 000049a0     5464          OR      A3,A4                ;INDICATE 1ST NON-BLANK SEEN
    1202 000049b0     4c25          MOVE    A1,A5                ;INDICATE THIS IS CURRENT TERMINATOR.
    1203 000049c0     c002          JRUC    BS3
    1204                    
    1205 000049d0           BS2
    1206 000049d0     4c84          MOVE    A4,A4                ;HAS 1ST SPACE BEEN SEEN?
    1207 000049e0     ca02          JRZ     BS4                  ;NOT YET...DON'T STORE
    1208 000049f0           BS3
    1209 000049f0     8c61          MOVB    A3,*A1               ;STORE IT IN MEMORY
    1210 00004a00     1101          ADDK    BYTE_SIZE,A1         ;PUSH DESTINATION POINTER
    1211 00004a10           BS4
    1212 00004a10     110a          ADDK    BYTE_SIZE,A10        ;PUSH SOURCE POINTER
    1213 00004a20     3e62          DSJS    A2,BSLOOP            ;AND FINISH PARSE
    1214                    *
    1215                    *        A5 NOW POINTS AT LAST NON-BLANK CHARACTER
    1216                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   27

    1217 00004a30     1105          ADDK    BYTE_SIZE,A5         ;THIS IS 1 BEYOND
    1218 00004a40     5642          CLR     A2
    1219 00004a50     8c45          MOVB    A2,*A5               ;TERMINATE WITH A ZERO.
    1220                    *
    1221                    *       FOR OUR RETURN, WE NEED TO COMPUTE THE NUMBER OF
    1222                    *       TRAILING SPACES IGNORED.
    1223                    *
    1224 00004a60     4c84          MOVE    A4,A4                ;ALL BLANK?
    1225 00004a70     cb03          JRNZ    NOT_BLNK
    1226 00004a80     09c2          MOVI    CMESS_CHARS,A2       ;ALL CHARS ARE TRAILING BLANKS
         00004a90     001a  
    1227 00004aa0     c003          JRUC    BL_EX                ;RETURN THIS
    1228                    
    1229 00004ab0           NOT_BLNK
    1230 00004ab0     4c22          MOVE    A1,A2                ;THIS IS LAST CHAR WE WROTE
    1231 00004ac0     44a2          SUB     A5,A2                ;THIS IS NUMBER OF TRAILING SPACES (TIMES 8)
    1232 00004ad0     2fa2          SRL     3,A2                 ;DIVIDE BY 8 TO GET SPACES
    1233 00004ae0           BL_EX
    1234 00004ae0     4c84          MOVE    A4,A4                ;FLAG ZERO FOR ALL BLANK!
    1235 00004af0     09af          MMFM    SP,A0,A1,A3,A4,A5,A10
         00004b00     043b  
    1236 00004b10     0960          RETS
    1237                    
    1238                    * A1 = <COLOR><PALETTE>
    1239                    * A3 = DAG OF AREA [YPOS,XPOS]                                          
    1240                    * A4 = [Y,X] SIZE OF AREA                                               
    1241                    
    1242 00004b20           GO_RED
    1243 00004b20     09c1          MOVI    ROBO_RED,A1
         00004b30     0303  
    1244 00004b40     c080          JAUC    SC_COL
         00004b50 00004be0' 
    1245                    
    1246 00004b70           GO_GREEN
    1247 00004b70     09c1          MOVI    ROBO_GREEN,A1
         00004b80     0606  
    1248 00004b90     c080          JAUC    SC_COL
         00004ba0 00004be0' 
    1249                    
    1250 00004bc0           GO_BLUE
    1251 00004bc0     09c1          MOVI    ROBO_BLUE,A1
         00004bd0     0707  
    1252 00004be0           SC_COL
    1253 00004be0     2601          SLL     16,A1           ;[color,palette]
    1254 00004bf0     5663          clr     a3              ;[y,x] start
    1255 00004c00     09e4          movi    [256,399],a4    ;[Y,X] SIZE OF AREA
         00004c10 0100018f  
    1256 00004c30     0d5f          CALLA   FILLAREA        ;THIS DOES THE SCREEN
         00004c40 00000000! 
    1257 00004c60     1861          movk    3,a1                    ; Any button map mode
    1258 00004c70     0781          move    a1,@_switch_map_mode,L
         00004c80 00000000! 
    1259                    ;       JAUC    WAIT_BUT        ;NOW WAIT FOR ANY BUTTON!
    1260 00004ca0                   JSRP    WAIT_BUT
    1261 00004d10     1821          movk    1,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   28

    1262 00004d20     0781          move    a1,@_switch_map_mode,L  ; Back to menu map mode
         00004d30 00000000! 
    1263 00004d50                   RETP
    1264                    
    1265 00004d80           GO_CPUTEST
    1266 00004d80     c080          JAUC    DIAGCPUTEST
         00004d90 00000000! 
    1267                    
    1268                            
    1269 00004db0           GO_CROSS
    1270 00004db0     0d5f          CALLA   SCRCLR
         00004dc0 00000000! 
    1271 00004de0     0d5f          CALLA   CROSS_H
         00004df0 00000000! 
    1272 00004e10     1861          movk    3,a1                    ; Any button map mode
    1273 00004e20     0781          move    a1,@_switch_map_mode,L
         00004e30 00000000! 
    1274                    ;       JAUC    WAIT_BUT             ;NOW WAIT FOR ANY BUTTON!
    1275 00004e50                   JSRP    WAIT_BUT
    1276 00004ec0     1821          movk    1,a1
    1277 00004ed0     0781          move    a1,@_switch_map_mode,L  ; Back to menu map mode
         00004ee0 00000000! 
    1278 00004f00                   RETP
    1279                    ;       JSRP    WAIT_BUT
    1280                    ;       CALLA   SCRCLR
    1281                    ;       CALLA   display_init
    1282                    ;       RETP
    1283                    
    1284 00004f30           GO_SWTEST
    1285 00004f30     0d5f          CALLA   SCRCLR
         00004f40 00000000! 
    1286 00004f60     09e2          movi    M_SWTEST,a2
         00004f70 00000080" 
    1287 00004f90     09c3          movi    ROBO_GREEN,a3
         00004fa0     0606  
    1288 00004fb0                   JSRP    TOP_BOX
    1289 00005020     5600          clr     a0
    1290 00005030                   JSRP    SWITCHTEST
    1291                    ;       CALLA   SCRCLR
    1292                    ;       CALLA   display_init
    1293 000050a0                   RETP
    1294                    
    1295 000050d0           dipsw_test
    1296 000050d0     0d5f          CALLA   SCRCLR
         000050e0 00000000! 
    1297 00005100     09e2          movi    M_DIPTEST,a2
         00005110 00000000" 
    1298 00005130     09c3          movi    ROBO_GREEN,a3
         00005140     0606  
    1299 00005150                   JSRP    TOP_BOX
    1300 000051c0     1820          movk    1,a0                    ;DIP mode
    1301 000051d0                   JSRP    SWITCHTEST
    1302 00005240                   RETP
    1303                            
    1304                    ;GO_ROMTEST
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   29

    1305                    ;       JAUC    ROM_CHK
    1306                    
    1307 00005270           GO_BARS
    1308                    ;       MOVI    8000H,A1
    1309                    ;       CLR     A0
    1310                    ;       CALLA   KILALL
    1311 00005270     0d5f          CALLA   SCRCLR
         00005280 00000000! 
    1312 000052a0     098f          MMTM    SP,A12,A13
         000052b0     000c  
    1313 000052c0     0d5f          CALLA   COL_BARS
         000052d0 00000000! 
    1314 000052f0     09af          MMFM    SP,A12,A13
         00005300     3000  
    1315 00005310     1861          movk    3,a1                    ; Any button map mode
    1316 00005320     0781          move    a1,@_switch_map_mode,L
         00005330 00000000! 
    1317                    ;       JAUC    WAIT_BUT             ;NOW WAIT FOR ANY BUTTON!
    1318 00005350                   JSRP    WAIT_BUT
    1319 000053c0     1821          movk    1,a1
    1320 000053d0     0781          move    a1,@_switch_map_mode,L  ; Back to menu map mode
         000053e0 00000000! 
    1321 00005400                   RETP
    1322                    ;       JSRP    WAIT_BUT
    1323                    ;       CALLA   SCRCLR
    1324                    ;       CALLA   display_init
    1325                    ;       CALLA   COLRSTRT
    1326                    ;       RETP
    1327                    
    1328 00005430           DO_BURN
    1329 00005430     09e8          MOVI    MESS_BURN,A8         ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00005440 0000a2f0" 
    1330 00005460     09e9          MOVI    BURN_IN,A9           ;ENTRY POINT
         00005470 00000000! 
    1331 00005490     09ea          MOVI    MESS_BURN,A10        ;THIS WILL NEVER BE SEEN!
         000054a0 0000a2f0" 
    1332 000054c0     c080          JAUC    AREUSURE             ;ASK EM.
         000054d0 00000000! 
    1333                    
    1334 000054f0           ANY_BUT
    1335 000054f0     09e8          MOVI    ANY_MENU,A8          ;ANY BUTTON TO CONTINUE
         00005500 00006dd0" 
    1336 00005520     1829          MOVK    1,A9                 ;CURSOR ON ENTRY 1
    1337 00005530     c080          JAUC    B_MENU               ;DO IT....RETURN WHEN PRESSED.
         00005540 00000000! 
    1338                    
    1339                    
    1340                    **************************************************************************
    1341                    *                                                                        *
    1342                    *         HARDWARE INFORMATION SELECTED                                  *
    1343                    *                                                                        *
    1344                    **************************************************************************
    1345 00000000                   .data
    1346                    
    1347 00000000           M_DIPTEST
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   30

    1348 00000000       44          .string "DIPSWITCH TEST",0
    1349 00000080                   .even
    1350 00000080           M_SWTEST
    1351 00000080       47          .string "GENERAL SWITCH TEST",0
    1352 00000120                   .even
    1353 00000120           M_VOLUME
    1354 00000120       56          .string "VOLUME ADJUST",0
    1355 00000190                   .even
    1356 00000190           HARDWARE_HELP
    1357 00000190     0000          .word   0
    1358 000001a0     0707          .word   COLOR_BLUE
    1359 000001b0     0002          .word   2
    1360 000001c0 00000200"         .long   HDWH_SN
    1361 000001e0 00000270"         .long   HDWH_MAN
    1362 00000200           HDWH_SN
    1363 00000200       53          .string "SERIAL NUMBER",0
    1364 00000270                   .even
    1365 00000270           HDWH_MAN
    1366 00000270       4d          .string "MANUFACTURE DATE",0
    1367 00000300                   .even
    1368                    
    1369 00000300           CLOCK_HELP
    1370 00000300     0000          .word   0
    1371 00000310     0707          .word   COLOR_BLUE
    1372 00000320     0002          .word   2
    1373 00000330 00000370"         .long   CLKH_MESS1
    1374 00000350 000003f0"         .long   CLKH_MESS2
    1375 00000370           CLKH_MESS1
    1376 00000370       44          .string "DISPLAY OR SET",0
    1377 000003f0                   .even
    1378 000003f0           CLKH_MESS2
    1379 000003f0       54          .string "THE REAL TIME CLOCK",0
    1380 00000490                   .even
    1381 00000490           CLK_DISPLAY_HELP
    1382 00000490     0000          .word   0
    1383 000004a0     0707          .word   COLOR_BLUE
    1384 000004b0     0003          .word   3
    1385 000004c0 00000520"         .long   CDISP_H1
    1386 000004e0 000005d0"         .long   CDISP_H2
    1387 00000500 00000670"         .long   CDISP_H3
    1388 00000520           CDISP_H1
    1389 00000520       44          .string "DISPLAYS THE CURRENT",0
    1390 000005d0                   .even
    1391 000005d0           CDISP_H2
    1392 000005d0       44          .string "DATE AND TIME FROM",0
    1393 00000670                   .even
    1394 00000670           CDISP_H3
    1395 00000670       54          .string "THE REAL TIME CLOCK",0
    1396 00000710                   .even
    1397 00000710           CLK_SET_HELP
    1398 00000710     0000          .word   0
    1399 00000720     0707          .word   COLOR_BLUE
    1400 00000730     0003          .word   3
    1401 00000740 000007a0"         .long   CSET_H1
    1402 00000760 00000850"         .long   CSET_H2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   31

    1403 00000780 000008e0"         .long   CSET_H3
    1404 000007a0           CSET_H1
    1405 000007a0       41          .string "ALLOWS SETTING OF THE",0
    1406 00000850                   .even
    1407 00000850           CSET_H2
    1408 00000850       44          .string "DATE AND TIME FOR",0
    1409 000008e0                   .even
    1410 000008e0           CSET_H3
    1411 000008e0       54          .string "THE REAL TIME CLOCK",0
    1412 00000980                   .even
    1413 00000980           CLK_CALIBRATE_HELP
    1414 00000980     0000          .word   0
    1415 00000990     0707          .word   COLOR_BLUE
    1416 000009a0     0003          .word   3
    1417 000009b0 00000a10"         .long   CCAL_H1
    1418 000009d0 00000ab0"         .long   CCAL_H2
    1419 000009f0 00000b50"         .long   CCAL_H3
    1420 00000a10           CCAL_H1
    1421 00000a10       50          .string "PREFORMS AUTOMATIC",0
    1422 00000ab0                   .even
    1423 00000ab0           CCAL_H2
    1424 00000ab0       43          .string "CALIBRATION OF THE",0
    1425 00000b50                   .even
    1426 00000b50           CCAL_H3
    1427 00000b50       52          .string "REAL TIME CLOCK",0
    1428 00000bd0                   .even
    1429                    
    1430 00000bd0           MESS_HARDWARE
    1431 00000bd0       48          .string "HARDWARE INFO",0
    1432 00000c40                   .even
    1433 00000c40           MESS_CLOCK
    1434 00000c40       52          .string "REAL TIME CLOCK",0
    1435 00000cc0                   .even
    1436                    
    1437              0072  CAL_MESS_Y      EQU     114
    1438                    
    1439 00000cc0           CLK_CALIBRATE_MESS
    1440 00000cc0                   MESS_MAC RD15FONT,SPACING07,200,CAL_MESS_Y+20,ROBO_YELLOW,STRCNRM,0
    1441 00000d60       43          .string "Calibrating Real Time Clock"
    1442 00000e38       00          .byte   0,1
    1443 00000e50                   .even
    1444 00000e50                   MESS_MAC RD15FONT,SPACING07,200,CAL_MESS_Y,ROBO_DECAY,STRCNRM,0
    1445 00000ef0       50          .string "Please Wait"
    1446 00000f48       00          .byte   0,0
    1447 00000f60                   .even
    1448 00000f60           CLK_CALIBRATE_OK_MESS
    1449 00000f60                   MESS_MAC RD15FONT,SPACING07,200,CAL_MESS_Y+7,ROBO_WHITE,STRCNRM,0
    1450 00001000       43          .string "Calibration Successful"
    1451 000010b0       00          .byte   0,0
    1452 000010c0                   .even
    1453 000010c0           M_CLK_DISPLAY
    1454 000010c0       44          .string "DATE AND TIME DISPLAY",0,0
    1455 00001180                   .even
    1456 00001180           M_CLK_CALIBRATE
    1457 00001180       52          .string "REAL TIME CLOCK CALIBRATION",0,0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   32

    1458 00001270                   .even
    1459 00001270           M_CLK_SET
    1460 00001270       53          .string "SETTING REAL TIME CLOCK",0,0
    1461 00001340                   .even
    1462                    
    1463              0032  CDAY_PROMPT_Y   EQU     50
    1464              0082  CTIME_PROMPT_Y  EQU     130
    1465              0050  CDAY_Y          EQU     CDAY_PROMPT_Y+30
    1466              0064  CDATE_Y         EQU     CDAY_Y+20
    1467              00a0  CTIME_Y         EQU     CTIME_PROMPT_Y+30
    1468                    
    1469 00001340           MESS_CLKD_PROMPTS
    1470 00001340                   MESS_MAC RD15FONT,SPACING07,200,CDAY_PROMPT_Y,ROBO_WHITE,STRCNRM,0
    1471 000013e0       43          .string "Current Date"
    1472 00001440       00          .byte   0,1
    1473 00001450                   .even
    1474 00001450                   MESS_MAC RD15FONT,SPACING07,200,CTIME_PROMPT_Y,ROBO_WHITE,STRCNRM,0
    1475 000014f0       43          .string "Current Time"
    1476 00001550       00          .byte   0,1
    1477 00001560                   .even
    1478 00001560           MESS_QUIT
    1479 00001560                   MESS_MAC RD7FONT,SPACING07,200,230,ROBO_DECAY,STRCNRM,0
    1480 00001600       50          .string "PRESS ANY BUTTON TO QUIT"
    1481 000016c0       00          .byte   0,0
    1482 000016d0                   .even
    1483 000016d0           MESS_RTC_SET
    1484 000016d0                   MESS_MAC RD7FONT,SPACING07,200,215,ROBO_LASER,STRCNRM,0
    1485 00001770       54          .string "THE REAL TIME CLOCK HAS BEEN SET"
    1486 00001870       00          .byte   0,0
    1487 00001880                   .even
    1488 00001880           MESS_SUNDAY
    1489 00001880       53          .string "Sunday",0
    1490 000018c0                   .even
    1491 000018c0           MESS_MONDAY
    1492 000018c0       4d          .string "Monday",0
    1493 00001900                   .even
    1494 00001900           MESS_TUESDAY
    1495 00001900       54          .string "Tuesday",0
    1496 00001940                   .even
    1497 00001940           MESS_WEDNESDAY
    1498 00001940       57          .string "Wednesday",0
    1499 00001990                   .even
    1500 00001990           MESS_THURSDAY
    1501 00001990       54          .string "Thursday",0
    1502 000019e0                   .even
    1503 000019e0           MESS_FRIDAY
    1504 000019e0       46          .string "Friday",0
    1505 00001a20                   .even
    1506 00001a20           MESS_SATURDAY
    1507 00001a20       53          .string "Saturday",0
    1508 00001a70                   .even
    1509                    
    1510 00001a70 00001880" DAY_TABLE       .long   MESS_SUNDAY,MESS_MONDAY,MESS_TUESDAY,MESS_WEDNESDAY
    1511 00001af0 00001990"                 .long   MESS_THURSDAY,MESS_FRIDAY,MESS_SATURDAY
    1512 00001b50                           .even
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   33

    1513                    
    1514 00001b50           MESS_JANUARY
    1515 00001b50       4a          .string "January  ",0
    1516 00001ba0                   .even
    1517 00001ba0           MESS_FEBRUARY
    1518 00001ba0       46          .string "February  ",0
    1519 00001c00                   .even
    1520 00001c00           MESS_MARCH
    1521 00001c00       4d          .string "March  ",0
    1522 00001c40                   .even
    1523 00001c40           MESS_APRIL
    1524 00001c40       41          .string "April  ",0
    1525 00001c80                   .even
    1526 00001c80           MESS_MAY
    1527 00001c80       4d          .string "May  ",0
    1528 00001cb0                   .even
    1529 00001cb0           MESS_JUNE
    1530 00001cb0       4a          .string "June  ",0
    1531 00001cf0                   .even
    1532 00001cf0           MESS_JULY
    1533 00001cf0       4a          .string "July  ",0
    1534 00001d30                   .even
    1535 00001d30           MESS_AUGUST
    1536 00001d30       41          .string "August  ",0
    1537 00001d80                   .even
    1538 00001d80           MESS_SEPTEMBER
    1539 00001d80       53          .string "September  ",0
    1540 00001de0                   .even
    1541 00001de0           MESS_OCTOBER
    1542 00001de0       4f          .string "October  ",0
    1543 00001e30                   .even
    1544 00001e30           MESS_NOVEMBER
    1545 00001e30       4e          .string "November  ",0
    1546 00001e90                   .even
    1547 00001e90           MESS_DECEMBER
    1548 00001e90       44          .string "December  ",0
    1549 00001ef0                   .even
    1550 00001ef0           MONTH_TABLE
    1551 00001ef0 00001b50"         .long   MESS_JANUARY, MESS_FEBRUARY, MESS_MARCH, MESS_APRIL
    1552 00001f70 00001c80"         .long   MESS_MAY, MESS_JUNE, MESS_JULY, MESS_AUGUST, MESS_SEPTEMBER
    1553 00002010 00001de0"         .long   MESS_OCTOBER, MESS_NOVEMBER, MESS_DECEMBER
    1554 00002070                   .even
    1555 00002070           MESS_HYEARS
    1556 00002070       2c          .string ", 19",0
    1557 000020a0                   .even
    1558 000020a0           TSEPERATOR
    1559 000020a0       3a          .string ":",0
    1560 000020b0                   .even
    1561 000020b0           ZPAD
    1562 000020b0       30          .string "0",0
    1563 000020c0                   .even
    1564 000020c0           TIME_PM
    1565 000020c0       20          .string " PM",0
    1566 000020e0                   .even
    1567 000020e0           TIME_AM
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   34

    1568 000020e0       20          .string " AM",0
    1569 00002100                   .even
    1570 00002100           DAY_SETUP
    1571 00002100                   MESS_MAC RD15FONT,SPACING07,200,CDAY_Y,ROBO_GREEN,STRCNRM,0
    1572                            .string ""
    1573 000021a0       00          .byte   0,0
    1574 000021b0                   .even
    1575 000021b0           DATE_SETUP
    1576 000021b0                   MESS_MAC RD15FONT,SPACING07,200,CDATE_Y,ROBO_GREEN,STRCNRM,0
    1577                            .string ""
    1578 00002250       00          .byte   0,0
    1579 00002260                   .even
    1580 00002260           TIME_SETUP
    1581 00002260                   MESS_MAC RD15FONT,SPACING07,200,CTIME_Y,ROBO_GREEN,STRCNRM,0
    1582                            .string ""
    1583 00002300       00          .byte   0,0
    1584 00002310                   .even
    1585 00002310           DAYADJ_SETUP
    1586 00002310                   MESS_MAC RD15FONT,SPACING07,284,185,ROBO_GREEN,STRCNRM,0
    1587                            .string ""
    1588 000023b0       00          .byte   0,0
    1589 000023c0                   .even
    1590 000023c0           DATEADJ_SETUP
    1591 000023c0                   MESS_MAC RD15FONT,SPACING07,286,205,ROBO_GREEN,STRCNRM,0
    1592                            .string ""
    1593 00002460       00          .byte   0,0
    1594 00002470                   .even
    1595 00002470           TADJ_SETUP
    1596 00002470                   MESS_MAC RD15FONT,SPACING07,284,225,ROBO_GREEN,STRCNRM,0
    1597                            .string ""
    1598 00002510       00          .byte   0,0
    1599 00002520                   .even
    1600                    
    1601                    ;SNDRELEASE_NUM_PROMPT:
    1602                    ;       MESS_MAC RD15FONT,SPACING07,200,130,ROBO_PURPLE,STRCNRM,0
    1603                    ;       .string "Sound Software Version:\n"
    1604                    ;       .string "RELEASE %2ld"
    1605                    ;       .byte   0,0
    1606                    ;       .long   _serial_number
    1607                    ;       .even
    1608                    ;SNDPROTO_NUM_PROMPT:
    1609                    ;       MESS_MAC RD15FONT,SPACING07,200,130,ROBO_PURPLE,STRCNRM,0
    1610                    ;       .string "Sound Software Version:\n"
    1611                    ;       .string "PROTO %2ld"
    1612                    ;       .byte   0,0
    1613                    ;       .long   _serial_number
    1614                    ;       .even
    1615                    
    1616              0032  WILLY_Y         EQU     50
    1617              0064  UNIT_Y          EQU     WILLY_Y+50
    1618              008c  SERIAL_Y        EQU     UNIT_Y+40
    1619              00b4  MAN_Y           EQU     SERIAL_Y+40
    1620                    
    1621 00002520           M_DOM
    1622 00002520       44          .string "DATE OF MANUFACTURE:  ",0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   35

    1623 000025e0                   .even
    1624 000025e0           M_SERIAL
    1625 000025e0       53          .string "SERIAL NUMBER:  ",0
    1626 00002670                   .even
    1627 00002670           MAN_DATE_SETUP:
    1628 00002670                   MESS_MAC RD7FONT, SPACING07,200, MAN_Y, ROBO_PURPLE,STRCNRM,0
    1629                            .string ""
    1630 00002710       00          .byte   0,0
    1631 00002720                   .even
    1632 00002720           WILLY_PROMPT:
    1633 00002720                   MESS_MAC RD15FONT, SPACING07, 200, WILLY_Y, ROBO_GREEN, STRCNRM,0
    1634 000027c0       4d          .string "Midway Manufacturing Inc."
    1635 00002888       00          .byte   0,1
    1636 000028a0                   .even
    1637 000028a0                   MESS_MAC RD15FONT, SPACING20, 200, UNIT_Y, ROBO_YELLOW, STRCNRM, 0
    1638 00002940       57          .string "WWF UNIT"
    1639 00002980       00          .byte   0,0
    1640 00002990                   .even
    1641 00002990           SERIAL_NUM_SETUP:
    1642 00002990                   MESS_MAC RD7FONT,SPACING07,200,SERIAL_Y,ROBO_PURPLE,STRCNRM,0
    1643                            .string ""
    1644 00002a30       00          .byte   0,0
    1645 00002a40                   .even
    1646                    
    1647 00002a40           M_HARDWARE_INFO
    1648 00002a40       48          .string "HARDWARE INFORMATION",0
    1649 00002af0                   .even
    1650                    
    1651 00002af0           MESS_CLK_TITLE
    1652 00002af0       52          .string "REAL TIME CLOCK",0
    1653 00002b70                   .even
    1654 00002b70           MESS_DISPLAY
    1655 00002b70       44          .string "DISPLAY",0
    1656 00002bb0                   .even
    1657 00002bb0           MESS_SET
    1658 00002bb0       53          .string "SET",0
    1659 00002bd0                   .even
    1660 00002bd0           MESS_CALIBRATE
    1661 00002bd0       43          .string "CALIBRATE",0
    1662 00002c20                   .even
    1663                    
    1664 00002c20           MEN_CLOCK
    1665 00002c20 00000000!         .long   RD7FONT         ;FONT
    1666 00002c40 00000000!         .long   STRCNRM         ;CENTER PLEASE
    1667 00002c60 00002af0"         .long   MESS_CLK_TITLE  ;TITLE
    1668 00002c80     0606          .word   COLOR_GREEN     ;COLOR OF TITLE
    1669 00002c90     0068          .word   104             ;UL X
    1670 00002ca0     0057          .word   MENU_Y-3        ;UL Y
    1671 00002cb0     0013          .word   MENU_DY-4       ;VERTICAL SPACING
    1672 00002cc0     0202          .word   ROBO_WHITE      ;COLOR WHEN NOT SELECTED
    1673 00002cd0     0010          .word   16              ;HEIGHT OF SELECTION BAR
    1674 00002ce0     fffc          .word   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1675 00002cf0     0006          .word   BAR_DX          ;EXTRA X ON EACH SIDE.
    1676 00002d00     00b7          .word   BAR_WID         ;WIDTH OF BAR!  (A LITTLE FATTER)
    1677 00002d10     3d3d          .word   ROBO_DECAY      ;TEXT COLOR OF SELECTED ITEM (SHOULD BE DECAY)
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   36

    1678 00002d20 00002b70"         .long   MESS_DISPLAY,GO_DISPLAY,CLK_DISPLAY_HELP
    1679 00002d80 00002bb0"         .long   MESS_SET,GO_TIME_SET,CLK_SET_HELP
    1680                    ;       .long   MESS_CALIBRATE,GO_CALIBRATE,CLK_CALIBRATE_HELP
    1681                    ;       .long   MESS_MM,RET_CLOCK,NO_HELP
    1682 00002de0 00009600"         .long   MESS_MM,RET_CLOCK,BLNK_HELP
    1683 00002e40 00000000          .long   0
    1684                    
    1685                    
    1686                    
    1687                    *
    1688                    *       CLOCK SET MENU IS SKINNY..LEAVING ROOM FOR EXPLANATION.
    1689                    *
    1690              fffe  CS_BDY  EQU     -2
    1691              00a7  CS_WID  EQU     0A7H
    1692              005e  CS_X    EQU     TIT_ULX+GAP+MB_XWID+(CS_WID/2)+C_KLUDGE
    1693              0054  CS_Y    EQU     INST_LRY+BOX_YGAP+MB_YWID+GAP-CS_BDY
    1694                    *
    1695                    *       RIGHT MARGIN OF ADJUST MENU BOX
    1696                    *
    1697              00b6  CS_RX   EQU     TIT_ULX+(2*GAP)+CS_WID+(2*MB_XWID)
    1698                    *
    1699                    *       LEFT MARGIN OF HELP BOX
    1700                    *
    1701              00b8  CS_HX   EQU     CS_RX+BOX_XGAP
    1702                    
    1703 00002e60           M_TIME_SET
    1704 00002e60       53          .string "SET REAL TIME CLOCK",0
    1705 00002f00                   .even
    1706 00002f00           MESS_YEAR_SET
    1707 00002f00       59          .string "YEAR",0
    1708 00002f30                   .even
    1709 00002f30           MESS_DATE_SET
    1710 00002f30       44          .string "DATE",0
    1711 00002f60                   .even
    1712 00002f60           MESS_MONTH_SET
    1713 00002f60       4d          .string "MONTH",0
    1714 00002f90                   .even
    1715 00002f90           MESS_DAY_SET
    1716 00002f90       44          .string "DAY",0
    1717 00002fb0                   .even
    1718 00002fb0           MESS_HOUR_SET
    1719 00002fb0       48          .string "HOURS",0
    1720 00002fe0                   .even
    1721 00002fe0           MESS_MINUTE_SET
    1722 00002fe0       4d          .string "MINUTES",0
    1723 00003020                   .even
    1724 00003020           MESS_SECOND_SET
    1725 00003020       53          .string "SECONDS",0
    1726 00003060                   .even
    1727 00003060           MESS_SET_CLOCK
    1728 00003060       53          .string "SET TIME/DATE",0
    1729 000030d0                   .even
    1730 000030d0           MESS_CLK_RET
    1731 000030d0       52          .string "RETURN TO PREV MENU",0
    1732 00003170                   .even
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   37

    1733                    
    1734 00003170           MEN_TIME_SET
    1735 00003170 00000000!         .LONG   RD7FONT         ;FONT
    1736 00003190 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    1737 000031b0 00002e60"         .LONG   M_TIME_SET      ;TITLE
    1738 000031d0     0202          .WORD   COLOR_WHITE    ;COLOR OF TITLE
    1739 000031e0     005e          .WORD   CS_X            ;UL X
    1740 000031f0     0054          .WORD   CS_Y            ;UL Y
    1741 00003200     000c          .WORD   12
    1742 00003210     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
    1743 00003220     000c          .WORD   12              ;HEIGHT OF SELECTION BAR
    1744 00003230     fffe          .WORD   CS_BDY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1745 00003240     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    1746 00003250     00a7          .WORD   CS_WID          ;WIDTH OF BAR!
    1747 00003260     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    1748 00003270 000030d0"         .LONG   MESS_CLK_RET,0,BLNK_HELP           ;RETURN TO MAIN MENU
    1749 000032d0 00002f00"         .LONG   MESS_YEAR_SET,DO_YEAR,ADJ_HELP
    1750 00003330 00002f30"         .LONG   MESS_DATE_SET,DO_DATE,ADJ_HELP
    1751 00003390 00002f60"         .LONG   MESS_MONTH_SET,DO_MONTH,ADJ_HELP        ;FREE PLAY
    1752 000033f0 00002f90"         .LONG   MESS_DAY_SET,DO_DAY,ADJ_HELP
    1753 00003450 00002fb0"         .LONG   MESS_HOUR_SET,DO_HOUR,ADJ_HELP
    1754 000034b0 00002fe0"         .LONG   MESS_MINUTE_SET,DO_MINUTE,ADJ_HELP
    1755 00003510 00003020"         .LONG   MESS_SECOND_SET,DO_SECOND,ADJ_HELP
    1756 00003570 00003060"         .LONG   MESS_SET_CLOCK,GO_CLOCK_SET,SET_CLOCK_HELP
    1757 000035d0 000030d0"         .LONG   MESS_CLK_RET,0,BLNK_HELP           ;RETURN TO MAIN MENU
    1758 00003630 00000000          .LONG   0               ;END
    1759                    
    1760              0032  INSTR_Y  EQU     INST_ULY+5
    1761              003c  INSTR_2Y EQU     INSTR_Y+10
    1762                    
    1763 00003650           CS_ADV
    1764 00003650                     MESS_MAC  RD7FONT,SPACING07,CS_X,INSTR_Y,COLOR_BPR,STRCNRM,0
    1765 000036f0       53           .STRING   "SELECT WITH ANY STICK"
    1766 00003798       00           .BYTE   0,1
    1767 000037b0                    .EVEN
    1768 000037b0                    MESS_MAC  RD7FONT,SPACING07,CS_X,INSTR_2Y,COLOR_BPR,STRCNRM,0
    1769 00003850       50           .STRING   "PRESS A BUTTON TO MODIFY"
    1770 00003910       00           .BYTE   0,0
    1771 00003920                    .EVEN
    1772                    
    1773 00003920           SCH_1
    1774 00003920       53          .string "SETS THE REAL TIME CLOCK",0
    1775 000039f0                   .even
    1776 000039f0           SCH_2
    1777 000039f0       54          .string "TO THE VALUES SPECIFIED BY",0
    1778 00003ad0                   .even
    1779 00003ad0           SCH_3
    1780 00003ad0       54          .string "THE OTHER MENU ITEMS.",0
    1781 00003b80                   .even
    1782 00003b80           SET_CLOCK_HELP
    1783 00003b80     0001          .word   1
    1784 00003b90     0707          .word   COLOR_BLUE
    1785 00003ba0     0003          .word   3
    1786 00003bb0 00003920"         .long   SCH_1
    1787 00003bd0 000039f0"         .long   SCH_2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   38

    1788 00003bf0 00003ad0"         .long   SCH_3
    1789 00003c10                   .even
    1790 00003c10           YSH_1
    1791 00003c10       20          .string " SET THE REAL TIME CLOCK's",0
    1792 00003cf0                   .even
    1793 00003cf0           YSH_2
    1794 00003cf0       20          .string "        YEAR VALUE.",0
    1795 00003d90                   .even
    1796 00003d90           YSH_3
    1797 00003d90       20          .string " Takes effect when SET is",0
    1798 00003e60                   .even
    1799 00003e60           YSH_4
    1800 00003e60       20          .string " selected on the RTC MENU",0
    1801 00003f30                   .even
    1802 00003f30           HELP_YEAR
    1803 00003f30     0001          .word   1
    1804 00003f40     0707          .word   COLOR_BLUE
    1805 00003f50     0004          .word   4
    1806 00003f60 00003c10"         .long   YSH_1
    1807 00003f80 00003cf0"         .long   YSH_2
    1808 00003fa0 00003d90"         .long   YSH_3
    1809 00003fc0 00003e60"         .long   YSH_4
    1810 00003fe0                   .even
    1811 00003fe0           DO_YEAR
    1812 00003fe0 0000aae0'         .long   GEN_TS                  ; Routine to run
    1813 00004000 00002f00"         .long   MESS_YEAR_SET           ; Header Message
    1814 00004020 00003f30"         .long   HELP_YEAR               ; Help Messages
    1815 00004040     0006          .word   6                       ; Index number of val to change
    1816 00004050 00000000          .long   0                       ; Minimum value
    1817 00004070 00000063          .long   99                      ; Maximum value
    1818 00004090 00000001          .long   1                       ; Move up and down by 1's
    1819 000040b0 00000000          .long   0                       ; Dont sub zero for any
    1820 000040d0 00009c70'         .long   YEAR_SET                ; Message list for values
    1821 000040f0     0001          .word   WRAP_VAL                ; Wrap around
    1822 00004100 00000000          .long   0                       ; Just Show Number
    1823 00004120 00002f00"         .long   MESS_YEAR_SET           ; Header Message
    1824                    
    1825 00004140           DTSH_2
    1826 00004140       20          .string "        DATE VALUE.",0
    1827 000041e0                   .even
    1828 000041e0           HELP_DATE
    1829 000041e0     0001          .word   1
    1830 000041f0     0707          .word   COLOR_BLUE
    1831 00004200     0004          .word   4
    1832 00004210 00003c10"         .long   YSH_1
    1833 00004230 00004140"         .long   DTSH_2
    1834 00004250 00003d90"         .long   YSH_3
    1835 00004270 00003e60"         .long   YSH_4
    1836 00004290                   .even
    1837 00004290           DO_DATE
    1838 00004290 0000aae0'         .long   GEN_TS                  ; Routine to run
    1839 000042b0 00002f30"         .long   MESS_DATE_SET           ; Header Message
    1840 000042d0 000041e0"         .long   HELP_DATE               ; Help Messages
    1841 000042f0     0004          .word   4                       ; Index Number of val to change
    1842 00004300 00000001          .long   1                       ; Minimum value
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   39

    1843 00004320 0000001f          .long   31                      ; Maximum value
    1844 00004340 00000001          .long   1                       ; Move up and down by 1's
    1845 00004360 00000000          .long   0                       ; Dont sub zero for any
    1846 00004380 00009fd0'         .long   DATE_SET                ; Message list for values
    1847 000043a0     0001          .word   WRAP_VAL                ; Wrap around
    1848 000043b0 00000000          .long   0                       ; Just Show Number
    1849 000043d0 00002f30"         .long   MESS_DATE_SET           ; Header Message
    1850                    
    1851                    
    1852 000043f0           MSH_2
    1853 000043f0       20          .string "       MONTH OF YEAR.",0
    1854 000044a0                   .even
    1855 000044a0           HELP_MONTH
    1856 000044a0     0001          .word   1
    1857 000044b0     0707          .word   COLOR_BLUE
    1858 000044c0     0004          .word   4
    1859 000044d0 00003c10"         .long   YSH_1
    1860 000044f0 000043f0"         .long   MSH_2
    1861 00004510 00003d90"         .long   YSH_3
    1862 00004530 00003e60"         .long   YSH_4
    1863 00004550                   .even
    1864 00004550           DO_MONTH
    1865 00004550 0000aae0'         .long   GEN_TS                  ; Routine to run
    1866 00004570 00002f60"         .long   MESS_MONTH_SET          ; Header Message
    1867 00004590 000044a0"         .long   HELP_MONTH              ; Help Messages
    1868 000045b0     0005          .word   5                       ; Index Number of val to change
    1869 000045c0 00000001          .long   1                       ; Minimum value
    1870 000045e0 0000000c          .long   12                      ; Maximum value
    1871 00004600 00000001          .long   1                       ; Move up and down by 1's
    1872 00004620 00000000          .long   0                       ; Dont sub zero for any
    1873 00004640 00009e20'         .long   MONTH_SET               ; Message list for values
    1874 00004660     0001          .word   WRAP_VAL                ; Wrap around
    1875 00004670 00001ef0"         .long   MONTH_TABLE             ; Just Show Number
    1876 00004690 00002f60"         .long   MESS_MONTH_SET          ; Header Message
    1877                    
    1878                    
    1879 000046b0           DSH_2
    1880 000046b0       20          .string "        DAY OF WEEK.",0
    1881 00004760                   .even
    1882 00004760           HELP_DAY
    1883 00004760     0001          .word   1
    1884 00004770     0707          .word   COLOR_BLUE
    1885 00004780     0004          .word   4
    1886 00004790 00003c10"         .long   YSH_1
    1887 000047b0 000046b0"         .long   DSH_2
    1888 000047d0 00003d90"         .long   YSH_3
    1889 000047f0 00003e60"         .long   YSH_4
    1890 00004810                   .even
    1891 00004810           DO_DAY
    1892 00004810 0000aae0'         .long   GEN_TS                  ; Routine to run
    1893 00004830 00002f90"         .long   MESS_DAY_SET            ; Header Message
    1894 00004850 00004760"         .long   HELP_DAY                ; Help Messages
    1895 00004870     0003          .word   3                       ; Index Number of val to change
    1896 00004880 00000001          .long   1                       ; Minimum value
    1897 000048a0 00000007          .long   7                       ; Maximum value
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   40

    1898 000048c0 00000001          .long   1                       ; Move up and down by 1's
    1899 000048e0 00000000          .long   0                       ; Dont sub zero for any
    1900 00004900 0000a180'         .long   DAY_SET                 ; Message list for values
    1901 00004920     0001          .word   WRAP_VAL                ; Wrap around
    1902 00004930 00001a70"         .long   DAY_TABLE               ; Just Show Number
    1903 00004950 00002f90"         .long   MESS_DAY_SET            ; Header Message
    1904                    
    1905 00004970           HSH_2
    1906 00004970       20          .string "         HOUR VALUE.",0
    1907 00004a20                   .even
    1908 00004a20           HELP_HOUR
    1909 00004a20     0001          .word   1
    1910 00004a30     0707          .word   COLOR_BLUE
    1911 00004a40     0004          .word   4
    1912 00004a50 00003c10"         .long   YSH_1
    1913 00004a70 00004970"         .long   HSH_2
    1914 00004a90 00003d90"         .long   YSH_3
    1915 00004ab0 00003e60"         .long   YSH_4
    1916 00004ad0                   .even
    1917 00004ad0           DO_HOUR
    1918 00004ad0 0000aae0'         .long   GEN_TS                  ; Routine to run
    1919 00004af0 00002fb0"         .long   MESS_HOUR_SET           ; Header Message
    1920 00004b10 00004a20"         .long   HELP_HOUR               ; Help Messages
    1921 00004b30     0002          .word   2                       ; Index Number of val to change
    1922 00004b40 00000001          .long   1                       ; Minimum value
    1923 00004b60 00000018          .long   24                      ; Maximum value
    1924 00004b80 00000001          .long   1                       ; Move up and down by 1's
    1925 00004ba0 00000000          .long   0                       ; Dont sub zero for any
    1926 00004bc0 0000a330'         .long   HOUR_SET                ; Message list for values
    1927 00004be0     0001          .word   WRAP_VAL                ; Wrap around
    1928 00004bf0 00000000          .long   0                       ; Just Show Number
    1929 00004c10 00002fb0"         .long   MESS_HOUR_SET           ; Header Message
    1930                    
    1931                    
    1932 00004c30           MINSH_2
    1933 00004c30       20          .string "        MINUTE VALUE.",0
    1934 00004ce0                   .even
    1935 00004ce0           HELP_MINUTE
    1936 00004ce0     0001          .word   1
    1937 00004cf0     0707          .word   COLOR_BLUE
    1938 00004d00     0004          .word   4
    1939 00004d10 00003c10"         .long   YSH_1
    1940 00004d30 00004c30"         .long   MINSH_2
    1941 00004d50 00003d90"         .long   YSH_3
    1942 00004d70 00003e60"         .long   YSH_4
    1943 00004d90                   .even
    1944 00004d90           DO_MINUTE
    1945 00004d90 0000aae0'         .long   GEN_TS                  ; Routine to run
    1946 00004db0 00002fe0"         .long   MESS_MINUTE_SET         ; Header Message
    1947 00004dd0 00004ce0"         .long   HELP_MINUTE             ; Help Messages
    1948 00004df0     0001          .word   1                       ; Index Number of val to change
    1949 00004e00 00000000          .long   0                       ; Minimum value
    1950 00004e20 0000003b          .long   59                      ; Maximum value
    1951 00004e40 00000001          .long   1                       ; Move up and down by 1's
    1952 00004e60 00000000          .long   0                       ; Dont sub zero for any
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   41

    1953 00004e80 0000a4e0'         .long   MINUTE_SET              ; Message list for values
    1954 00004ea0     0001          .word   WRAP_VAL                ; Wrap around
    1955 00004eb0 00000000          .long   0                       ; Just Show Number
    1956 00004ed0 00002fe0"         .long   MESS_MINUTE_SET         ; Header Message
    1957                    
    1958 00004ef0           SSH_2
    1959 00004ef0       20          .string "        SECOND VALUE.",0
    1960 00004fa0                   .even
    1961 00004fa0           HELP_SECOND
    1962 00004fa0     0001          .word   1
    1963 00004fb0     0707          .word   COLOR_BLUE
    1964 00004fc0     0004          .word   4
    1965 00004fd0 00003c10"         .long   YSH_1
    1966 00004ff0 00004ef0"         .long   SSH_2
    1967 00005010 00003d90"         .long   YSH_3
    1968 00005030 00003e60"         .long   YSH_4
    1969 00005050                   .even
    1970 00005050           DO_SECOND
    1971 00005050 0000aae0'         .long   GEN_TS                  ; Routine to run
    1972 00005070 00003020"         .long   MESS_SECOND_SET         ; Header Message
    1973 00005090 00004fa0"         .long   HELP_SECOND             ; Help Messages
    1974 000050b0     0000          .word   0                       ; Not used
    1975 000050c0 00000000          .long   0                       ; Minimum value
    1976 000050e0 0000003b          .long   59                      ; Maximum value
    1977 00005100 00000001          .long   1                       ; Move up and down by 1's
    1978 00005120 00000000          .long   0                       ; Dont sub zero for any
    1979 00005140 0000a690'         .long   SECOND_SET              ; Message list for values
    1980 00005160     0001          .word   WRAP_VAL                ; Wrap around
    1981 00005170 00000000          .long   0                       ; Just Show Number
    1982 00005190 00003020"         .long   MESS_SECOND_SET         ; Header Message
    1983                    
    1984 00005560                   .text
    1985                    
    1986 00005560           GO_HARDWARE:
    1987 00005560     07a2          move    @_man_date,a2,L
         00005570 00000310- 
    1988 00005590     4c41          move    a2,a1
    1989 000055a0     1421          subk    1,a1
    1990 000055b0     09c0          movi    372,a0
         000055c0     0174  
    1991 000055d0     5a01          divu    a0,a1
    1992 000055e0     09c3          movi    372,a3
         000055f0     0174  
    1993 00005600     5e23          mpyu    a1,a3
    1994 00005610     4462          sub     a3,a2
    1995 00005620     0b01          addi    80,a1
         00005630     0050  
    1996 00005640     0781          move    a1,@_year,1
         00005650 00000370- 
    1997 00005670     4c40          move    a2,a0
    1998 00005680     09c1          movi    31,a1
         00005690     001f  
    1999 000056a0     6e20          modu    a1,a0
    2000 000056b0     0780          move    a0,@_day,1
         000056c0 00000350- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   42

    2001 000056e0     4c41          move    a2,a1
    2002 000056f0     1421          subk    1,a1
    2003 00005700     09c0          movi    31,a0
         00005710     001f  
    2004 00005720     5a01          divu    a0,a1
    2005 00005730     1021          addk    1,a1
    2006 00005740     0781          move    a1,@_month,1
         00005750 00000330- 
    2007 00005770     0d5f          calla   CLR_SCRN                ; Clear the screen
         00005780 00000000! 
    2008 000057a0     09e2          movi    M_HARDWARE_INFO,a2      ; Put up Title Box
         000057b0 00002a40" 
    2009 000057d0     09c3          movi    ROBO_GREEN,a3
         000057e0     0606  
    2010 000057f0                   JSRP    TOP_BOX
    2011 00005860     09e8          movi    WILLY_PROMPT,a8
         00005870 00002720" 
    2012 00005890                   JSRP    L_MESS
    2013 00005900     09e4          movi    M_DOM,a4
         00005910 00002520" 
    2014 00005930     0d5f          calla   copy_rom_string         ; Copy the Date of manufacture prompt
         00005940 00000000! 
    2015 00005960     05a0          move    @_month,a0
         00005970 00000330- 
    2016 00005990     1420          dec     a0
    2017 000059a0     24a0          sll     5,a0
    2018 000059b0     09e8          movi    MONTH_TABLE,a8
         000059c0 00001ef0" 
    2019 000059e0     4008          add     a0,a8
    2020 000059f0     8704          move    *a8,a4,L
    2021 00005a00     0d5f          calla   concat_rom_string       ; Copy the month name
         00005a10 00000000! 
    2022 00005a30     05a0          move    @_day,a0                ; Convert date to ascii
         00005a40 00000350- 
    2023 00005a60     09c1          movi    31,a1
         00005a70     001f  
    2024 00005a80     0d5f          calla   dec_to_asc
         00005a90 00000000! 
    2025 00005ab0     0d5f          calla   concat_string           ; Add date to string
         00005ac0 00000000! 
    2026 00005ae0     09e4          movi    MESS_HYEARS,a4          ; Add , 19 to string
         00005af0 00002070" 
    2027 00005b10     0d5f          calla   concat_rom_string
         00005b20 00000000! 
    2028 00005b40     05a0          move    @_year,a0               ; Convert year to ascii
         00005b50 00000370- 
    2029 00005b70     09c1          movi    99,a1
         00005b80     0063  
    2030 00005b90     0d5f          calla   dec_to_asc
         00005ba0 00000000! 
    2031 00005bc0     0d5f          calla   concat_string           ; Add year to string
         00005bd0 00000000! 
    2032 00005bf0     09e0          movi    MAN_DATE_SETUP,a0       ; Setup message
         00005c00 00002670" 
    2033 00005c20     0d3f          callr   _setup_message
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   43

         00005c30     00d0  
    2034 00005c40     09e8          movi    _setup_mess,a8
         00005c50 00000000- 
    2035 00005c70                   JSRP    L_MESS                  ; Print Date of Manufacture
    2036                    
    2037 00005ce0     09e4          movi    M_SERIAL,a4
         00005cf0 000025e0" 
    2038 00005d10     0d5f          calla   copy_rom_string         ; Copy serial number prompt
         00005d20 00000000! 
    2039 00005d40     07a0          move    @_serial_number,a0,L    ; Convert serial number to ascii
         00005d50 000002f0- 
    2040 00005d70     09e1          movi    1000000,a1
         00005d80 000f4240  
    2041 00005da0     0d5f          calla   dec_to_asc
         00005db0 00000000! 
    2042 00005dd0     0d5f          calla   concat_string           ; Add serial number to prompt
         00005de0 00000000! 
    2043 00005e00     09e0          movi    SERIAL_NUM_SETUP,a0     ; Setup the message
         00005e10 00002990" 
    2044 00005e30     0d3f          callr   _setup_message
         00005e40     00af  
    2045 00005e50     09e8          movi    _setup_mess,a8
         00005e60 00000000- 
    2046 00005e80                   JSRP    L_MESS                  ; Print the Serial Number
    2047 00005ef0     09e8          movi    MESS_QUIT,a8
         00005f00 00001560" 
    2048 00005f20                   JSRP    L_MESS
    2049 00005f90           _hardware_check_sw:                     ; Wait for a button to be pressed
    2050 00005f90                   SLEEP   10
    2051 00005fe0     07a0          move    @_switch2_addr,a0,L
         00005ff0 00000000! 
    2052 00006010     8400          move    *a0,a0,W
    2053 00006020     07a1          move    @_switch_addr,a1,L
         00006030 00000000! 
    2054 00006050     8421          move    *a1,a1,W
    2055 00006060     2600          sll     16,a0
    2056 00006070     2e00          srl     16,a0
    2057 00006080     2601          sll     16,a1
    2058 00006090     2e01          srl     16,a1
    2059 000060a0     5001          and     a0,a1
    2060 000060b0     07a0          move    @_coin_addr,a0,L
         000060c0 00000000! 
    2061 000060e0     8400          move    *a0,a0
    2062 000060f0     0ba0          ori     10h,a0
         00006100 00000010  
    2063 00006120     2600          sll     16,a0
    2064 00006130     5420          or      a1,a0
    2065 00006140     03e0          not     a0
    2066 00006150     cae3          jrz     _hardware_check_sw
    2067 00006160           RET_HARDWARE:
    2068 00006160                   JSRP    FORCE_MAIN
    2069 000061d0                   RETP
    2070                    
    2071                    
    2072 00006200           GO_CLOCK:
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   44

    2073 00006200     07a8          move    @_clk_rd,a8,L           ;Save current auto update state
         00006210 00000000! 
    2074 00006230     0788          move    a8,@_auto_update_save,L
         00006240 00000390- 
    2075 00006260     5708          clr     a8                      ;Enable auto update
    2076 00006270     0788          move    a8,@_clk_rd,L
         00006280 00000000! 
    2077 000062a0                   JSRP    _GetTime
    2078 00006310     09e8          movi    MEN_CLOCK,a8
         00006320 00002c20" 
    2079 00006340     c080          jauc    GEN_MENU
         00006350 00000000! 
    2080 00006370           RET_CLOCK:
    2081 00006370     07a8          move    @_auto_update_save,a8,L ;Restore Auto Update state
         00006380 00000390- 
    2082 000063a0     0788          move    a8,@_clk_rd,L
         000063b0 00000000! 
    2083 000063d0                   JSRP    FORCE_MAIN
    2084 00006440                   RETP
    2085                    
    2086 00006470           GO_CALIBRATE:
    2087 00006470     0d5f          calla   CLR_SCRN                ; Clear the screen
         00006480 00000000! 
    2088 000064a0     09e2          movi    M_CLK_CALIBRATE,a2      ; Put up Title Box
         000064b0 00001180" 
    2089 000064d0     09c3          movi    ROBO_GREEN,a3
         000064e0     0606  
    2090 000064f0                   JSRP    TOP_BOX
    2091 00006560     09e8          movi    CLK_CALIBRATE_MESS,a8   ; Put up calibrating message
         00006570 00000cc0" 
    2092 00006590                   JSRP    L_MESS
    2093 00006600                   SLEEP   5*60                    ; Do calibration here
    2094 00006650     05a0          move    @0c00000b0h,a0          ; Make sure transparency is OFF
         00006660 c00000b0  
    2095 00006680     a00f          move    a0,-*sp
    2096 00006690     0b80          andni   020h,a0
         000066a0 00000020  
    2097 000066c0     0580          move    a0,@0c00000b0h
         000066d0 c00000b0  
    2098 000066f0     09e0          movi    [CAL_MESS_Y,0],a0       ; Get rid of calibrating message
         00006700 00720000  
    2099 00006720     09e1          movi    [40,400],a1
         00006730 00280190  
    2100 00006750     09c2          movi    ROBO_BLACK,a2
         00006760     1414  
    2101 00006770                   fcall   RECTANGLE,b6
    2102 000067b0     95e0          move    *sp+,a0
    2103 000067c0     0580          move    a0,@0c00000b0h          ; Restore CONTROL register
         000067d0 c00000b0  
    2104 000067f0     09e8          movi    CLK_CALIBRATE_OK_MESS,a8        ; Put up success message
         00006800 00000f60" 
    2105 00006820                   JSRP    L_MESS
    2106 00006890                   SLEEP   60                      ; Let user see it
    2107 000068e0     0d5f          calla   CLR_SCRN
         000068f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   45

    2108 00006910                   RETP                            ; All done
    2109                    
    2110                    ; a0 = pointer to MESS_MAC TO COPY message is copied from message_buffer
    2111 00006940           _setup_message:
    2112 00006940     09e1          movi    _setup_mess,a1
         00006950 00000000- 
    2113 00006970     1942          movk    10,a2
    2114 00006980           _sm_lp1:
    2115 00006980     9801          move    *a0+,*a1+
    2116 00006990     3c42          dsjs    a2,_sm_lp1
    2117 000069a0     09e1          movi    _setup_mess_msg,a1
         000069b0 000000a0- 
    2118 000069d0     09e0          movi    message_buffer,a0
         000069e0 00000000! 
    2119 00006a00     01e0          pushst
    2120 00006a10     0548          setf    8,0
    2121 00006a20           _sm_lp2:
    2122 00006a20     9402          move    *a0+,a2
    2123 00006a30     9041          move    a2,*a1+
    2124 00006a40     4c42          move    a2,a2
    2125 00006a50     cbfc          jrnz    _sm_lp2
    2126 00006a60           _sm_done
    2127 00006a60     01c0          popst
    2128 00006a70     5642          clr     a2
    2129 00006a80     8041          move    a2,*a1
    2130 00006a90     0960          rets
    2131                    
    2132                    *******************************************************************
    2133                    * _GetTime - Process subroutine to get the current time.  Time is
    2134                    *            returned in the _tXXXXXX globals.
    2135                    *
    2136 00006aa0             SUBRP _GetTime
    2137 00006aa0     07a0          move    @_clk_rd,a0,L   ;Save status of auto update
         00006ab0 00000000! 
    2138 00006ad0     0780          move    a0,@_auto_update_save,L
         00006ae0 00000390- 
    2139 00006b00     09c0          movi    -1,a0           ;Shut down auto update
         00006b10     ffff  
    2140 00006b20     0780          move    a0,@_clk_rd,L
         00006b30 00000000! 
    2141 00006b50     0d5f          calla   _aquire_time    ;Arm time aquistion
         00006b60 00000000! 
    2142 00006b80                   SLEEPK  5               ;Wait for it to aquire time
    2143 00006bc0     0d5f          calla   _get_time       ;Get the current time
         00006bd0 00000000! 
    2144 00006bf0     07a0          move    @_auto_update_save,a0,L
         00006c00 00000390- 
    2145 00006c20     0780          move    a0,@_clk_rd,L   ;Restore auto update status
         00006c30 00000000! 
    2146 00006c50                   RETP                    ;All done
    2147                    
    2148                    ; Process Subroutine to print time
    2149 00006c80           _display_time:
    2150 00006c80     5600          clr     a0
    2151 00006c90     0580          move    a0,@message_buffer
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   46

         00006ca0 00000000! 
    2152 00006cc0     05a0          move    @_thours,a0             ; Hours
         00006cd0 00000280- 
    2153 00006cf0     cb02          jrnz    _hour_gz1
    2154 00006d00     1180          addk    12,a0
    2155 00006d10     c008          jruc    _time_is_am
    2156 00006d20           _hour_gz1
    2157 00006d20     0b40          cmpi    12,a0
         00006d30     fff3  
    2158 00006d40     c605          jrle    _time_is_am
    2159 00006d50     05a0          move    @_thours,a0             ; Hours
         00006d60 00000280- 
    2160 00006d80     0be0          subi    12,a0
         00006d90     fff3  
    2161 00006da0           _time_is_am
    2162 00006da0     09c1          movi    12,a1                   ; Max hours
         00006db0     000c  
    2163 00006dc0     0d5f          calla   dec_to_asc
         00006dd0 00000000! 
    2164 00006df0     0d5f          calla   concat_string
         00006e00 00000000! 
    2165 00006e20     09e4          movi    TSEPERATOR,a4
         00006e30 000020a0" 
    2166 00006e50     0d5f          calla   concat_rom_string
         00006e60 00000000! 
    2167 00006e80     05a0          move    @_tminutes,a0
         00006e90 00000270- 
    2168 00006eb0     0b40          cmpi    9,a0
         00006ec0     fff6  
    2169 00006ed0     c706          jrgt    _no_min_pad
    2170 00006ee0     09e4          movi    ZPAD,a4
         00006ef0 000020b0" 
    2171 00006f10     0d5f          calla   concat_rom_string
         00006f20 00000000! 
    2172 00006f40           _no_min_pad
    2173 00006f40     05a0          move    @_tminutes,a0
         00006f50 00000270- 
    2174 00006f70     09c1          movi    59,a1                   ; Max Minutes
         00006f80     003b  
    2175 00006f90     0d5f          calla   dec_to_asc
         00006fa0 00000000! 
    2176 00006fc0     0d5f          calla   concat_string
         00006fd0 00000000! 
    2177 00006ff0     09e4          movi    TSEPERATOR,a4
         00007000 000020a0" 
    2178 00007020     0d5f          calla   concat_rom_string
         00007030 00000000! 
    2179 00007050     05a0          move    @_tseconds,a0
         00007060 00000260- 
    2180 00007080     0580          move    a0,@_last_seconds
         00007090 00000250- 
    2181 000070b0     0b40          cmpi    9,a0
         000070c0     fff6  
    2182 000070d0     c706          jrgt    _no_sec_pad
    2183 000070e0     09e4          movi    ZPAD,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   47

         000070f0 000020b0" 
    2184 00007110     0d5f          calla   concat_rom_string
         00007120 00000000! 
    2185 00007140           _no_sec_pad
    2186 00007140     05a0          move    @_tseconds,a0
         00007150 00000260- 
    2187 00007170     09c1          movi    59,a1                   ; Max Seconds
         00007180     003b  
    2188 00007190     0d5f          calla   dec_to_asc
         000071a0 00000000! 
    2189 000071c0     0d5f          calla   concat_string
         000071d0 00000000! 
    2190 000071f0     05a0          move    @_thours,a0             ; Hours
         00007200 00000280- 
    2191 00007220     0b40          cmpi    11,a0
         00007230     fff4  
    2192 00007240     c704          jrgt    _time_is_pm
    2193 00007250     09e4          movi    TIME_AM,a4
         00007260 000020e0" 
    2194 00007280     c003          jruc    _tdone
    2195 00007290           _time_is_pm
    2196 00007290     09e4          movi    TIME_PM,a4
         000072a0 000020c0" 
    2197 000072c0           _tdone
    2198 000072c0     0d5f          calla   concat_rom_string
         000072d0 00000000! 
    2199 000072f0     09e0          movi    TIME_SETUP,a0
         00007300 00002260" 
    2200 00007320     0d3f          callr   _setup_message
         00007330     ff60  
    2201 00007340     09e8          movi    _setup_mess,a8
         00007350 00000000- 
    2202 00007370                   JSRP    L_MESS
    2203 000073e0           _time_check_sw:
    2204 000073e0                   SLEEP   1
    2205 00007430     07a0          move    @_switch2_addr,a0,L
         00007440 00000000! 
    2206 00007460     8400          move    *a0,a0,W
    2207 00007470     07a1          move    @_switch_addr,a1,L
         00007480 00000000! 
    2208 000074a0     8421          move    *a1,a1,W
    2209 000074b0     2600          sll     16,a0
    2210 000074c0     2e00          srl     16,a0
    2211 000074d0     2601          sll     16,a1
    2212 000074e0     2e01          srl     16,a1
    2213 000074f0     5001          and     a0,a1
    2214 00007500     07a0          move    @_coin_addr,a0,L
         00007510 00000000! 
    2215 00007530     8400          move    *a0,a0,W
    2216 00007540     0ba0          ori     10h,a0
         00007550 00000010  
    2217 00007570     2600          sll     16,a0
    2218 00007580     5420          or      a1,a0
    2219 00007590     03e0          not     a0
    2220 000075a0     cb29          jrnz    _dtime_done
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   48

    2221 000075b0     05a0          move    @_tseconds,a0
         000075c0 00000260- 
    2222 000075e0     05a1          move    @_last_seconds,a1
         000075f0 00000250- 
    2223 00007610     4801          cmp     a0,a1
    2224 00007620     cadb          jrz     _time_check_sw
    2225 00007630     09c3          movi    1cch,a3
         00007640     01cc  
    2226 00007650     0d5f          calla   SNDSND
         00007660 00000000! 
    2227 00007680     05a0          move    @CONTROL,a0             ; Make sure transparency is OFF
         00007690 c00000b0  
    2228 000076b0     a00f          move    a0,-*sp
    2229 000076c0     0b80          andni   020h,a0
         000076d0 00000020  
    2230 000076f0     0580          move    a0,@CONTROL
         00007700 c00000b0  
    2231 00007720     09e0          movi    [CTIME_Y,0],a0          ; Get rid of calibrating message
         00007730 00a00000  
    2232 00007750     09e1          movi    [20,400],a1
         00007760 00140190  
    2233 00007780     09c2          movi    ROBO_BLACK,a2
         00007790     1414  
    2234 000077a0                   fcall   RECTANGLE,b6
    2235 000077e0     95e0          move    *sp+,a0
    2236 000077f0     0580          move    a0,@CONTROL             ; Restore CONTROL register
         00007800 c00000b0  
    2237 00007820     c000          jruc    _display_time
         00007830     ff44  
    2238 00007840           _dtime_done
    2239 00007840                   RETP
    2240                            
    2241                    
    2242 00007870           GO_DISPLAY:
    2243 00007870     0d5f          calla   CLR_SCRN                ; Clear the screen
         00007880 00000000! 
    2244 000078a0     09e2          movi    M_CLK_DISPLAY,a2        ; Put up Title Box
         000078b0 000010c0" 
    2245 000078d0     09c3          movi    ROBO_GREEN,a3
         000078e0     0606  
    2246 000078f0                   JSRP    TOP_BOX
    2247 00007960           GO_CLKS:
    2248                    ;       move    @_clk_rd,a0,L           ;Save current auto update state
    2249                    ;       move    a0,@_auto_update_save,L
    2250                    ;       clr     a0                      ;Enable auto update
    2251                    ;       move    a0,@_clk_rd,L
    2252                    ;       JSRP    _GetTime
    2253 00007960     09e8          movi    MESS_CLKD_PROMPTS,a8    ; Put up assorted prompts
         00007970 00001340" 
    2254 00007990                   JSRP    L_MESS
    2255 00007a00                   SLEEP   5
    2256 00007a50     09e8          movi    DAY_TABLE,a8            ; Put Day of week up
         00007a60 00001a70" 
    2257 00007a80     05a0          move    @_tday,a0               ; Day of week (1-7)
         00007a90 00000290- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   49

    2258 00007ab0     1420          dec     a0
    2259 00007ac0     0b40          cmpi    6,a0
         00007ad0     fff9  
    2260 00007ae0     c715          jrgt    _bad_day
    2261 00007af0     24a0          sll     5,a0
    2262 00007b00     4008          add     a0,a8
    2263 00007b10     8704          move    *a8,a4,L
    2264 00007b20     0d5f          calla   copy_rom_string
         00007b30 00000000! 
    2265 00007b50     09e0          movi    DAY_SETUP,a0
         00007b60 00002100" 
    2266 00007b80     0d3f          callr   _setup_message
         00007b90     feda  
    2267 00007ba0     09e8          movi    _setup_mess,a8
         00007bb0 00000000- 
    2268 00007bd0                   JSRP    L_MESS
    2269 00007c40           _bad_day
    2270 00007c40     09e8          movi    MONTH_TABLE,a8          ; Put month of year up
         00007c50 00001ef0" 
    2271 00007c70     05a0          move    @_tmonth,a0             ; Month of year number (0-11)
         00007c80 000002b0- 
    2272 00007ca0     1420          dec     a0
    2273 00007cb0     0b40          cmpi    11,a0
         00007cc0     fff4  
    2274 00007cd0     c706          jrgt    _bad_month
    2275 00007ce0     24a0          sll     5,a0
    2276 00007cf0     4008          add     a0,a8
    2277 00007d00     8704          move    *a8,a4,L
    2278 00007d10     0d5f          calla   copy_rom_string         ; Copy month name to buffer
         00007d20 00000000! 
    2279 00007d40           _bad_month
    2280 00007d40     05a0          move    @_tdate,a0              ; Date (1-31)
         00007d50 000002a0- 
    2281 00007d70     0b40          cmpi    9,a0
         00007d80     fff6  
    2282 00007d90     c706          jrgt    _no_date_pad
    2283 00007da0     09e4          movi    ZPAD,a4
         00007db0 000020b0" 
    2284 00007dd0     0d5f          calla   concat_rom_string
         00007de0 00000000! 
    2285 00007e00           _no_date_pad
    2286 00007e00     05a0          move    @_tdate,a0              ; Date (1-31)
         00007e10 000002a0- 
    2287 00007e30     09c1          movi    31,a1                   ; Maximum Date
         00007e40     001f  
    2288 00007e50     0d5f          calla   dec_to_asc              ; Convert Date to ascii
         00007e60 00000000! 
    2289 00007e80     0d5f          calla   concat_string           ; Add to buffer
         00007e90 00000000! 
    2290 00007eb0     09e4          movi    MESS_HYEARS,a4          ; , 19
         00007ec0 00002070" 
    2291 00007ee0     0d5f          calla   concat_rom_string       ; Add to buffer
         00007ef0 00000000! 
    2292 00007f10     05a0          move    @_tyear,a0              ; Year (0 - 99)
         00007f20 000002c0- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   50

    2293 00007f40     0b40          cmpi    9,a0
         00007f50     fff6  
    2294 00007f60     c706          jrgt    _no_year_pad
    2295 00007f70     09e4          movi    ZPAD,a4
         00007f80 000020b0" 
    2296 00007fa0     0d5f          calla   concat_rom_string
         00007fb0 00000000! 
    2297 00007fd0           _no_year_pad
    2298 00007fd0     05a0          move    @_tyear,a0
         00007fe0 000002c0- 
    2299 00008000     09c1          movi    99,a1                   ; Max year
         00008010     0063  
    2300 00008020     0d5f          calla   dec_to_asc              ; Convert Years to ascii
         00008030 00000000! 
    2301 00008050     0d5f          calla   concat_string           ; Add to buffer
         00008060 00000000! 
    2302 00008080     09e0          movi    DATE_SETUP,a0
         00008090 000021b0" 
    2303 000080b0     0d3f          callr   _setup_message
         000080c0     fe87  
    2304 000080d0     09e8          movi    _setup_mess,a8
         000080e0 00000000- 
    2305 00008100                   JSRP    L_MESS
    2306 00008170                   JSRP    _display_time
    2307                    ;       move    @_auto_update_save,a0,L ;Restore Auto Update state
    2308                    ;       move    a0,@_clk_rd,L
    2309 000081e0     09c3          movi    0c7h,a3
         000081f0     00c7  
    2310 00008200     0d5f          calla   SNDSND
         00008210 00000000! 
    2311 00008230                   RETP                            ; All done
    2312                    
    2313 00008260           _transfer_time
    2314 00008260     098f          mmtm    sp,a1,a2,a3
         00008270     7000  
    2315 00008280     09e1          movi    _rtc_seconds,a1
         00008290 000001e0- 
    2316 000082b0     09e2          movi    _tseconds,a2
         000082c0 00000260- 
    2317 000082e0     09c3          movi    7,a3
         000082f0     0007  
    2318 00008300           _tt_loop1
    2319 00008300     9841          move    *a2+,*a1+
    2320 00008310     3c43          dsjs    a3,_tt_loop1
    2321 00008320     09af          mmfm    sp,a1,a2,a3
         00008330     000e  
    2322 00008340     0960          rets
    2323                    
    2324 00008350           GO_CLOCK_SET:
    2325 00008350     0d5f          calla   CLR_SCRN                ; Clear the screen
         00008360 00000000! 
    2326 00008380     09e2          movi    M_CLK_SET,a2            ; Put up Title Box
         00008390 00001270" 
    2327 000083b0     09c3          movi    ROBO_GREEN,a3
         000083c0     0606  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   51

    2328 000083d0                   JSRP    TOP_BOX
    2329 00008440     0d5f          calla   _set_time
         00008450 00000000! 
    2330 00008470     09e8          movi    MESS_RTC_SET,a8         ; Put up "CLOCK SET" message
         00008480 000016d0" 
    2331 000084a0                   JSRP    L_MESS
    2332                    ;       SLEEP   16
    2333 00008510                   SLEEP   30
    2334 00008560     0d3f          callr   _transfer_time
         00008570     ffce  
    2335 00008580     c080          jauc    GO_CLKS
         00008590 00007960' 
    2336                    
    2337 000085b0           GO_TIME_SET
    2338                    ;       JSRP    _GetTime
    2339 000085b0     0d3f          callr   _transfer_time
         000085c0     ffc9  
    2340 000085d0     09e8          movi    MEN_TIME_SET,a8
         000085e0 00003170" 
    2341 00008600           GEN_TIME_SET
    2342 00008600     a30c          move    a8,-*a12,L
    2343 00008610     1820          movk    1,a0
    2344 00008620     a00c          move    a0,-*a12,W
    2345 00008630           TIME_SET_LOOP
    2346 00008630     0d5f          calla   CLR_SCRN
         00008640 00000000! 
    2347 00008660     09e8          movi    CS_ADV,a8
         00008670 00003650" 
    2348 00008690                   JSRP    L_MESS
    2349 00008700     b788          move    *a12(WORD_SIZE),a8,L
         00008710     0010  
    2350 00008720                   JSRP    MENU_TOP
    2351 00008790     09c9          movi    COLOR_RED,a9
         000087a0     0303  
    2352 000087b0     0d5f          calla   COL_INST
         000087c0 00000000! 
    2353 000087e0     8589          move    *a12,a9,W
    2354 000087f0                   JSRP    B_MENU
    2355 00008860     4d29          move    a9,a9
    2356 00008870     ca0e          jrz     GO_TS_QUIT
    2357 00008880           _not_set_time
    2358 00008880     810c          move    a8,*a12,W
    2359 00008890     b720          move    *a9(AD_ROUT),a0,L
         000088a0     0000  
    2360 000088b0     09e7          movi    TIME_SET_LOOP,a7
         000088c0 00008630' 
    2361 000088e0     a2ec          move    a7,-*a12,L
    2362 000088f0     0b48          cmpi    9,a8
         00008900     fff6  
    2363 00008910     ca01          jrz     _time_set
    2364 00008920     0160          jump    a0
    2365 00008930           _time_set
    2366 00008930     c080          jauc    GO_CLOCK_SET
         00008940 00008350' 
    2367 00008960           GO_TS_QUIT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   52

    2368 00008960     120c          addk    WORD_SIZE,a12
    2369 00008970     100c          addk    LONG_SIZE,a12
    2370 00008980                   RETP
    2371                    
    2372 000089b0           _do_title
    2373 000089b0     098c          mmtm    a12,a10,a11,a8       ;SAVE STUFF FOR CALLER
         000089c0     00b0  
    2374                    ;       move    @_clk_rd,a0,L           ;Save current auto update state
    2375                    ;       move    a0,@_auto_update_save,L
    2376                    ;       clr     a0                      ;Enable auto update
    2377                    ;       move    a0,@_clk_rd,L
    2378                    ;       JSRP    _GetTime
    2379 000089d0     148a          subk    4,a10
    2380 000089e0     4d66          move    a11,a6
    2381 000089f0     09c9          movi    CS_HX,a9
         00008a00     00b8  
    2382 00008a10     0b09          addi    TIT_LRX,a9
         00008a20     0185  
    2383 00008a30     2fe9          srl     1,a9
    2384 00008a40     1489          subk    4,a9
    2385 00008a50     260a          sll     16,a10               ;SHIFT Y DOWN
    2386 00008a60     ef49          movy    a10,a9               ;X,Y SET
    2387 00008a70     4c48          move    a2,a8                ;TEXT POINTER
    2388 00008a80     5600          clr     a0                   ;NO SLEEP
    2389 00008a90     09ca          movi    SPACING20,a10
         00008aa0     0002  
    2390 00008ab0     09eb          movi    RD15FONT,a11
         00008ac0 00000000! 
    2391 00008ae0                   JSRP    STRCNRM              ;DO IT!
    2392 00008b50     09ac          mmfm    a12,a10,a11,a8       ;POP THE STUFF.
         00008b60     0d00  
    2393 00008b70                   RETP
    2394                    
    2395 00008ba0           _adj_time_and_date
    2396 00008ba0     09e8          movi    DAY_TABLE,a8            ; Put Day of week up
         00008bb0 00001a70" 
    2397 00008bd0     05a0          move    @_rtc_day,a0            ; Day of week number (1-7)
         00008be0 00000210- 
    2398 00008c00     1420          dec     a0
    2399                    ;       cmpi    6,a0
    2400                    ;       jrgt    _abad_day
    2401 00008c10     24a0          sll     5,a0
    2402 00008c20     4008          add     a0,a8
    2403 00008c30     8704          move    *a8,a4,L
    2404 00008c40     0d5f          calla   copy_rom_string
         00008c50 00000000! 
    2405 00008c70     09e0          movi    DAYADJ_SETUP,a0
         00008c80 00002310" 
    2406 00008ca0     0d3f          callr   _setup_message
         00008cb0     fdc8  
    2407 00008cc0     09e8          movi    _setup_mess,a8
         00008cd0 00000000- 
    2408 00008cf0                   JSRP    L_MESS
    2409 00008d60           _abad_day
    2410 00008d60     09e8          movi    MONTH_TABLE,a8          ; Put month of year up
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   53

         00008d70 00001ef0" 
    2411 00008d90     05a0          move    @_rtc_month,a0          ; Month of year number (1 - 12)
         00008da0 00000230- 
    2412 00008dc0     1420          dec     a0
    2413                    ;       cmpi    11,a0
    2414                    ;       jrgt    _abad_month
    2415 00008dd0     24a0          sll     5,a0
    2416 00008de0     4008          add     a0,a8
    2417 00008df0     8704          move    *a8,a4,L
    2418 00008e00     0d5f          calla   copy_rom_string         ; Copy month name to buffer
         00008e10 00000000! 
    2419 00008e30           _abad_month
    2420 00008e30     05a0          move    @_rtc_date,a0           ; Date
         00008e40 00000220- 
    2421 00008e60     0b40          cmpi    9,a0
         00008e70     fff6  
    2422 00008e80     c706          jrgt    _no_date_pad1
    2423 00008e90     09e4          movi    ZPAD,a4
         00008ea0 000020b0" 
    2424 00008ec0     0d5f          calla   concat_rom_string
         00008ed0 00000000! 
    2425 00008ef0           _no_date_pad1
    2426 00008ef0     05a0          move    @_rtc_date,a0           ; Date
         00008f00 00000220- 
    2427 00008f20     09c1          movi    31,a1                   ; Maximum Date
         00008f30     001f  
    2428 00008f40     0d5f          calla   dec_to_asc              ; Convert Date to ascii
         00008f50 00000000! 
    2429 00008f70     0d5f          calla   concat_string           ; Add to buffer
         00008f80 00000000! 
    2430 00008fa0     09e4          movi    MESS_HYEARS,a4          ; , 19
         00008fb0 00002070" 
    2431 00008fd0     0d5f          calla   concat_rom_string       ; Add to buffer
         00008fe0 00000000! 
    2432 00009000     05a0          move    @_rtc_year,a0           ; Year
         00009010 00000240- 
    2433 00009030     0b40          cmpi    9,a0
         00009040     fff6  
    2434 00009050     c706          jrgt    _no_year_pad1
    2435 00009060     09e4          movi    ZPAD,a4
         00009070 000020b0" 
    2436 00009090     0d5f          calla   concat_rom_string
         000090a0 00000000! 
    2437 000090c0           _no_year_pad1
    2438 000090c0     05a0          move    @_rtc_year,a0
         000090d0 00000240- 
    2439 000090f0     09c1          movi    99,a1                   ; Max year
         00009100     0063  
    2440 00009110     0d5f          calla   dec_to_asc              ; Convert Years to ascii
         00009120 00000000! 
    2441 00009140     0d5f          calla   concat_string           ; Add to buffer
         00009150 00000000! 
    2442 00009170     09e0          movi    DATEADJ_SETUP,a0
         00009180 000023c0" 
    2443 000091a0     0d3f          callr   _setup_message
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   54

         000091b0     fd78  
    2444 000091c0     09e8          movi    _setup_mess,a8
         000091d0 00000000- 
    2445 000091f0                   JSRP    L_MESS
    2446                    
    2447 00009260     5600          clr     a0
    2448 00009270     0580          move    a0,@message_buffer
         00009280 00000000! 
    2449 000092a0     05a0          move    @_rtc_hours,a0          ; Hours
         000092b0 00000200- 
    2450 000092d0     cb02          jrnz    _hour_gz
    2451 000092e0     1180          addk    12,a0
    2452 000092f0     c008          jruc    _time_is_am1
    2453 00009300           _hour_gz
    2454 00009300     0b40          cmpi    12,a0
         00009310     fff3  
    2455 00009320     c605          jrle    _time_is_am1
    2456 00009330     05a0          move    @_rtc_hours,a0          ; Hours
         00009340 00000200- 
    2457 00009360     0be0          subi    12,a0
         00009370     fff3  
    2458 00009380           _time_is_am1
    2459 00009380     09c1          movi    12,a1                   ; Max hours
         00009390     000c  
    2460 000093a0     0d5f          calla   dec_to_asc
         000093b0 00000000! 
    2461 000093d0     0d5f          calla   concat_string
         000093e0 00000000! 
    2462 00009400     09e4          movi    TSEPERATOR,a4
         00009410 000020a0" 
    2463 00009430     0d5f          calla   concat_rom_string
         00009440 00000000! 
    2464 00009460     05a0          move    @_rtc_minutes,a0
         00009470 000001f0- 
    2465 00009490     0b40          cmpi    9,a0
         000094a0     fff6  
    2466 000094b0     c706          jrgt    _no_min_pad1
    2467 000094c0     09e4          movi    ZPAD,a4
         000094d0 000020b0" 
    2468 000094f0     0d5f          calla   concat_rom_string
         00009500 00000000! 
    2469 00009520           _no_min_pad1
    2470 00009520     05a0          move    @_rtc_minutes,a0
         00009530 000001f0- 
    2471 00009550     09c1          movi    59,a1                   ; Max Minutes
         00009560     003b  
    2472 00009570     0d5f          calla   dec_to_asc
         00009580 00000000! 
    2473 000095a0     0d5f          calla   concat_string
         000095b0 00000000! 
    2474 000095d0     09e4          movi    TSEPERATOR,a4
         000095e0 000020a0" 
    2475 00009600     0d5f          calla   concat_rom_string
         00009610 00000000! 
    2476 00009630     05a0          move    @_rtc_seconds,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   55

         00009640 000001e0- 
    2477 00009660     0b40          cmpi    9,a0
         00009670     fff6  
    2478 00009680     c706          jrgt    _no_sec_pad1
    2479 00009690     09e4          movi    ZPAD,a4
         000096a0 000020b0" 
    2480 000096c0     0d5f          calla   concat_rom_string
         000096d0 00000000! 
    2481 000096f0           _no_sec_pad1
    2482 000096f0     05a0          move    @_rtc_seconds,a0
         00009700 000001e0- 
    2483 00009720     09c1          movi    59,a1                   ; Max Seconds
         00009730     003b  
    2484 00009740     0d5f          calla   dec_to_asc
         00009750 00000000! 
    2485 00009770     0d5f          calla   concat_string
         00009780 00000000! 
    2486 000097a0     05a0          move    @_rtc_hours,a0          ; Hours
         000097b0 00000200- 
    2487 000097d0     0b40          cmpi    11,a0
         000097e0     fff4  
    2488 000097f0     c704          jrgt    _time_is_pm1
    2489 00009800           _time_is_afm
    2490 00009800     09e4          movi    TIME_AM,a4
         00009810 000020e0" 
    2491 00009830     c006          jruc    _tdone1
    2492 00009840           _time_is_pm1
    2493 00009840     0b40          cmpi    24,a0
         00009850     ffe7  
    2494 00009860     caf9          jrz     _time_is_afm
    2495 00009870     09e4          movi    TIME_PM,a4
         00009880 000020c0" 
    2496 000098a0           _tdone1
    2497 000098a0     0d5f          calla   concat_rom_string
         000098b0 00000000! 
    2498 000098d0     09e0          movi    TADJ_SETUP,a0
         000098e0 00002470" 
    2499 00009900     0d3f          callr   _setup_message
         00009910     fd02  
    2500 00009920     09e8          movi    _setup_mess,a8
         00009930 00000000- 
    2501 00009950                   JSRP    L_MESS
    2502 000099c0                   RETP
    2503                    
    2504 000099f0           _set_it_up
    2505 000099f0     0d5f          calla   CLR_CUR
         00009a00 00000000! 
    2506 00009a20     09c1          movi    6,a1
         00009a30     0006  
    2507 00009a40     18a4          movk    5,a4
    2508 00009a50     0d5f          calla   CADJ_BOX
         00009a60 00000000! 
    2509 00009a80     09c1          movi    1,a1
         00009a90     0001  
    2510 00009aa0     5684          clr     a4
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   56

    2511 00009ab0     0d5f          calla   CADJ_BOX
         00009ac0 00000000! 
    2512 00009ae0     09e3          movi    [ADJ_CULY+5,CS_HX+5],A3
         00009af0 009d00bd  
    2513 00009b10     09e4          movi    [21,185],A4
         00009b20 001500b9  
    2514 00009b40     0d5f          calla   BLNKAREA
         00009b50 00000000! 
    2515 00009b70     09e3          movi    [ADJ_CULY+31,CS_HX+5],A3
         00009b80 00b700bd  
    2516 00009ba0     09e4          movi    [58,185],A4
         00009bb0 003a00b9  
    2517 00009bd0     0d5f          calla   BLNKAREA
         00009be0 00000000! 
    2518 00009c00                   SLEEPK  2                       ; I dare you to take this out
    2519 00009c40                   RETP
    2520                    
    2521                    
    2522 00009c70           YEAR_SET
    2523 00009c70                   JSRP    _set_it_up
    2524 00009ce0     09e2          movi    MESS_YEAR_SET,a2
         00009cf0 00002f00" 
    2525 00009d10                   JSRP    _do_title
    2526 00009d80                   JSRP    _adj_time_and_date
    2527 00009df0                   RETP
    2528                    
    2529 00009e20           MONTH_SET
    2530 00009e20                   JSRP    _set_it_up
    2531 00009e90     09e2          movi    MESS_MONTH_SET,a2
         00009ea0 00002f60" 
    2532 00009ec0                   JSRP    _do_title
    2533 00009f30                   JSRP    _adj_time_and_date
    2534 00009fa0                   RETP
    2535                    
    2536 00009fd0           DATE_SET
    2537 00009fd0                   JSRP    _set_it_up
    2538 0000a040     09e2          movi    MESS_DATE_SET,a2
         0000a050 00002f30" 
    2539 0000a070                   JSRP    _do_title
    2540 0000a0e0                   JSRP    _adj_time_and_date
    2541 0000a150                   RETP
    2542                    
    2543 0000a180           DAY_SET
    2544 0000a180                   JSRP    _set_it_up
    2545 0000a1f0     09e2          movi    MESS_DAY_SET,a2
         0000a200 00002f90" 
    2546 0000a220                   JSRP    _do_title
    2547 0000a290                   JSRP    _adj_time_and_date
    2548 0000a300                   RETP
    2549                    
    2550 0000a330           HOUR_SET
    2551 0000a330                   JSRP    _set_it_up
    2552 0000a3a0     09e2          movi    MESS_HOUR_SET,a2
         0000a3b0 00002fb0" 
    2553 0000a3d0                   JSRP    _do_title
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   57

    2554 0000a440                   JSRP    _adj_time_and_date
    2555 0000a4b0                   RETP
    2556                    
    2557 0000a4e0           MINUTE_SET
    2558 0000a4e0                   JSRP    _set_it_up
    2559 0000a550     09e2          movi    MESS_MINUTE_SET,a2
         0000a560 00002fe0" 
    2560 0000a580                   JSRP    _do_title
    2561 0000a5f0                   JSRP    _adj_time_and_date
    2562 0000a660                   RETP
    2563                    
    2564 0000a690           SECOND_SET
    2565 0000a690                   JSRP    _set_it_up
    2566 0000a700     09e2          movi    MESS_SECOND_SET,a2
         0000a710 00003020" 
    2567 0000a730                   JSRP    _do_title
    2568 0000a7a0                   JSRP    _adj_time_and_date
    2569 0000a810                   RETP
    2570                    
    2571                    ; a0 = value code
    2572                    ; a8 = PTR to data struct
    2573                    ; TRASHES a0, a3, a2
    2574 0000a840           _ts_val_up:
    2575 0000a840     098f          mmtm    sp,a0,a2,a3
         0000a850     b000  
    2576 0000a860     2480          sll     4,a0
    2577 0000a870     0b20          addi    _rtc_seconds,a0
         0000a880 000001e0- 
    2578 0000a8a0     8403          move    *a0,a3
    2579 0000a8b0     1023          addk    1,a3
    2580 0000a8c0     b702          move    *a8(AD_MAX),a2,L
         0000a8d0     0090  
    2581 0000a8e0     4862          cmp     a3,a2
    2582 0000a8f0     c502          jrge    _ts_vu_done
    2583 0000a900     b703          move    *a8(AD_MIN),a3,L
         0000a910     0070  
    2584 0000a920           _ts_vu_done
    2585 0000a920     0b81          andi    0ffh,a1
         0000a930 ffffff00  
    2586 0000a950     8060          move    a3,*a0
    2587 0000a960     09af          mmfm    sp,a0,a2,a3
         0000a970     000d  
    2588 0000a980     0960          rets
    2589                    
    2590                    ; a0 = value code
    2591                    ; a8 = PTR to data struct
    2592                    ; TRASHES a0, a3
    2593 0000a990           _ts_val_down:
    2594 0000a990     098f          mmtm    sp,a0,a3,a1
         0000a9a0     d000  
    2595 0000a9b0     2480          sll     4,a0
    2596 0000a9c0     0b20          addi    _rtc_seconds,a0
         0000a9d0 000001e0- 
    2597 0000a9f0     8403          move    *a0,a3
    2598 0000aa00     1423          subk    1,a3
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   58

    2599 0000aa10     b701          move    *a8(AD_MIN),a1,L
         0000aa20     0070  
    2600 0000aa30     4823          cmp     a1,a3
    2601 0000aa40     c502          jrge    _ts_vd_done
    2602 0000aa50     b703          move    *a8(AD_MAX),a3,L
         0000aa60     0090  
    2603 0000aa70           _ts_vd_done
    2604 0000aa70     0b83          andi    0ffh,a3
         0000aa80 ffffff00  
    2605 0000aaa0     8060          move    a3,*a0
    2606 0000aab0     09af          mmfm    sp,a0,a3,a1
         0000aac0     000b  
    2607 0000aad0     0960          rets
    2608                    
    2609 0000aae0           GEN_TS:
    2610 0000aae0     1840          movk    2,a0
    2611 0000aaf0     0780          move    a0,@_switch_map_mode,L
         0000ab00 00000000! 
    2612 0000ab20     b32d          move    a9,*a13(PDATA),L
         0000ab30     0100  
    2613 0000ab40     4d28          move    a9,a8
    2614 0000ab50     0d5f          calla   CLR_MAIN
         0000ab60 00000000! 
    2615 0000ab80     0d5f          calla   ADJ_INST
         0000ab90 00000000! 
    2616 0000abb0                   JSRP    ST_STICK
    2617 0000ac20                   SLEEPK  2
    2618 0000ac60           TS_CHNG
    2619 0000ac60                   SLEEPK  1
    2620 0000aca0     09e5          movi    31000h,a5
         0000acb0 00031000  
    2621 0000acd0                   JSRP    GETSTICK
    2622 0000ad40     b7a8          move    *a13(PDATA),a8,L
         0000ad50     0100  
    2623 0000ad60     4c01          move    a0,a1
    2624 0000ad70     caee          jrz     TS_CHNG
    2625 0000ad80     b500          move    *a8(AD_CMOS),a0,W       ; Get What we are adjusting
         0000ad90     0060  
    2626 0000ada0     0b41          cmpi    3,a1
         0000adb0     fffc  
    2627 0000adc0     ca1a          jrz     TS_BUTT
    2628 0000add0     0b41          cmpi    2,a1
         0000ade0     fffd  
    2629 0000adf0     ca03          jrz     TS_DOWN
    2630 0000ae00     0d3f          callr   _ts_val_up              ; Incrment the value
         0000ae10     ffa2  
    2631 0000ae20     c002          jruc    TS_JOIN
    2632 0000ae30           TS_DOWN:
    2633 0000ae30     0d3f          callr   _ts_val_down            ; Decrement the value
         0000ae40     ffb4  
    2634 0000ae50           TS_JOIN:
    2635 0000ae50     09c3          movi    beep1_snd,a3
         0000ae60     03d9  
    2636 0000ae70     0d5f          calla   SNDSND
         0000ae80 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   59

    2637 0000aea0                   JSRP    TS_UPDATE
    2638 0000af10     c0d4          jruc    TS_CHNG
    2639 0000af20           TS_UPDATE:
    2640 0000af20     b700          move    *a8(AD_NAMEIT),a0,L
         0000af30     00f0  
    2641 0000af40     09cb          movi    ROBO_LASER,a11
         0000af50     3e3e  
    2642 0000af60     0160          jump    a0
    2643 0000af70           TS_BUTT:
    2644 0000af70     09c3          movi    beep2_snd,a3
         0000af80     03da  
    2645 0000af90     0d5f          calla   SNDSND
         0000afa0 00000000! 
    2646 0000afc0                   JSRP    TS_UPDATE
    2647 0000b030                   SLEEPK  5
    2648 0000b070           TS_CAN:
    2649 0000b070     1820          movk    1,a0
    2650 0000b080     0780          move    a0,@_switch_map_mode,L
         0000b090 00000000! 
    2651 0000b0b0                   RETP
    2652                    
    2653                    
    2654                    ********************************
    2655                    * DIAGNOSTIC TESTS
    2656                    *
    2657                    * SOUND TEST STUFF
    2658                    
    2659              0006  NCHAN           EQU     6       ;DECLARE NUMBER OF ALLOWED CHANNELS
    2660              0003  MUSICHAN        EQU     3       ;THIS CHANNEL IS FOR THE TUNES
    2661                    
    2662                    
    2663                    ;RESETBIT       EQU     0FE00H  ;Sound board reset bit
    2664                    
    2665                    
    2666 0000b0e0           GO_STEST
    2667                    
    2668 0000b0e0     0d5f          CALLA   CLR_SCRN
         0000b0f0 00000000! 
    2669                    
    2670 0000b110     09e8          movi    MEN_SOUNDTEST,a8
         0000b120 00007c70" 
    2671 0000b140     1829          movk    1,a9                    ;CURSOR ON 1st ENTRY
    2672                    
    2673 0000b150     c080          JAUC    GEN_MENU                ;THIS WILL RETURN TO LEVEL ABOVE US!
         0000b160 00000000! 
    2674                    
    2675                    ;       jsrp    B_MENU                  ;SEE IF THEY WANT PAGE 2.
    2676                    ;       cmpi    1,A8                    ;DID WE GET 1'ST ENTRY?
    2677                    ;       RETP
    2678                    
    2679 0000b180           SNDTST
    2680 0000b180     09e8          MOVI    SNDMES,A8       ;MESSAGE POINTER
         0000b190 0000b520' 
    2681 0000b1b0           SNDTLP
    2682 0000b1b0     0d5f          CALLA   SCRCLR
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   60

         0000b1c0 00000000! 
    2683 0000b1e0     09e0          MOVI    M_STEST,A0      ;SOUND TEST MESSAGE
         0000b1f0 0000a900" 
    2684 0000b210     09c1          MOVI    06080H,A1
         0000b220     6080  
    2685 0000b230     5642          CLR     A2
    2686 0000b240     09c3          MOVI    ROBO_WHITE,A3
         0000b250     0202  
    2687 0000b260     0d5f          CALLA   STRNEW1
         0000b270 00000000! 
    2688 0000b290     09e1          MOVI    0B080H,A1       ;SCREEN ADDRESS
         0000b2a0 0000b080  
    2689 0000b2c0     4d00          MOVE    A8,A0
    2690 0000b2d0     0d5f          CALLA   STRNEW1
         0000b2e0 00000000! 
    2691 0000b300     1100          ADDK    8,A0
    2692 0000b310     8e05          MOVB    *A0,A5          ;Channel
    2693 0000b320     1100          ADDK    8,A0
    2694 0000b330     8e03          MOVB    *A0,A3          ;Sound #
    2695 0000b340     2703          sll     32-8,a3         ;Kill sign extend
    2696 0000b350     2d03          srl     32-8,a3
    2697 0000b360     1100          ADDK    8,A0
    2698 0000b370     0d5f          CALLA   SNDSND
         0000b380 00000000! 
    2699 0000b3a0     4c08          MOVE    A0,A8
    2700 0000b3b0     4dad          MOVE    A13,A13         ;AUTO-CYCLE?
    2701 0000b3c0     cb08          JRNE    SNDSLP          ;NO
    2702 0000b3d0     0d5f          CALLA   WDOGDIS
         0000b3e0 00000000! 
    2703 0000b400     09ed          MOVI    3000000,A13
         0000b410 002dc6c0  
    2704 0000b430     3c2d  SNDAUTO DSJS    A13,SNDAUTO
    2705 0000b440     c005          JRUC    SNDSLP1
    2706 0000b450           SNDSLP
    2707 0000b450                   SLEEP   120
    2708 0000b4a0           SNDSLP1 
    2709 0000b4a0     8f05          MOVB    *A8,A5
    2710 0000b4b0     cbcf          JRNE    SNDTLP
    2711 0000b4c0     4dad          MOVE    A13,A13         ;AUTO CYCLE EXIT
    2712 0000b4d0     ca03          JREQ    SNDX1
    2713 0000b4e0                   RETP
    2714                    
    2715 0000b510     0960  SNDX1   RETS
    2716                    
    2717                    *SOUND TABLE
    2718                    *MESSAGE,CHANNEL,SOUNDCODE
    2719                    *
    2720 0000b520           SNDMES  
    2721 0000b520       54          .byte   "TUNE 1 (1)",0
    2722 0000b578       03          .byte   MUSICHAN,1
    2723 0000b588       4e          .byte   "NO WAY (E6)",0
    2724 0000b5e8       01          .byte   1,0e6H
    2725 0000b5f8       45          .byte   "EXPL1 (30)",0
    2726 0000b650       04          .byte   4,030H
    2727 0000b660       54          .byte   "TUNE 2 (9)",0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   61

    2728 0000b6b8       03          .byte   MUSICHAN,9
    2729 0000b6c8       53          .byte   "SPIDER BOUNCE (83)",0
    2730 0000b760       04          .byte   4,083H
    2731 0000b770       4d          .byte   "MUSIC OFF (0)",0
    2732 0000b7e0       03          .byte   MUSICHAN,0
    2733 0000b7f0       00          .byte   0               ;THE END OF TABLE
    2734 0000b800                   .even
    2735                    
    2736                            .ref    SNDPROTOPROMPT
    2737                            .ref    SNDRELEASEPROMPT
    2738                            .ref    SNDTIMEOUT
    2739                            .ref    SOUNDSUP
    2740                            .ref    _snd_chip_count
    2741                    
    2742 0000b800           snd_vprompt
    2743 0000b800       53          .string "SOUND SYSTEM VERSION:  ",0
    2744 0000b8c0                   .even
    2745                    
    2746 0000b8c0           snd_rev_mes
    2747 0000b8c0                    MESS_MAC  RD7FONT,SPACING07,200,227,ROBO_GREEN,STRCNRM,0
    2748 0000b960       00          .byte   0,0,0
    2749 0000b980                   .even
    2750                    
    2751 0000b980           snd_tout_mes
    2752 0000b980                    MESS_MAC  RD7FONT,SPACING07,200,227,ROBO_RED,STRCNRM,0
    2753 0000ba20       00          .byte   0,0,0
    2754 0000ba40                   .even
    2755                    
    2756                    *************************************************************
    2757                    *
    2758 0000ba40            SUBRP  GetSoundRev
    2759 0000ba40     07a0          move    @_coin_counter_addr,a0,L
         0000ba50 00000000! 
    2760 0000ba70     09c1          movi    030h,a1                         ; Yank down the reset
         0000ba80     0030  
    2761 0000ba90     8020          move    a1,*a0,W
    2762 0000baa0     09c1          movi    10000,a1                        ; Hold it fer a while
         0000bab0     2710  
    2763 0000bac0     3c21          dsjs    a1,$
    2764 0000bad0     09c1          movi    020h,a1                         ; Let it go
         0000bae0     0020  
    2765 0000baf0     8020          move    a1,*a0,W
    2766 0000bb00     09c1          movi    10000,a1
         0000bb10     2710  
    2767 0000bb20     3c21          dsjs    a1,$
    2768 0000bb30     07a0          move    @_sound_addr,a0,L               ; Bypass the diags
         0000bb40 00000000! 
    2769 0000bb60     8c00          movb    a0,*a0
    2770 0000bb70     09e1          movi    500000,a1                       ; Wait fer a while
         0000bb80 0007a120  
    2771 0000bba0           xbvfswait_lp
    2772 0000bba0     3c21          dsjs    a1,xbvfswait_lp
    2773 0000bbb0     5663          clr     a3                      ; Turn on the sounds
    2774 0000bbc0     0583          move    a3,@SOUNDSUP,W
         0000bbd0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   62

    2775 0000bbf0     09c3          movi    999,a3                  ; Send revision request sound call
         0000bc00     03e7  
    2776 0000bc10     0d5f          calla   SNDSND
         0000bc20 00000000! 
    2777 0000bc40     09e2          movi    1000000,a2
         0000bc50 000f4240  
    2778 0000bc70           xbvfsndrev_loop
    2779 0000bc70     07a0          move    @_soundirq_addr,a0,L    ; Wait fer a response
         0000bc80 00000000! 
    2780 0000bca0     8401          move    *a0,a1,W
    2781 0000bcb0     1ea1          btst    B_SDAV,a1               ; Got a response ?
    2782 0000bcc0     ca17          jrz     xbvfsnd_response                ; BR = yes
    2783 0000bcd0     3ce2          dsjs    a2,xbvfsndrev_loop
    2784 0000bce0           xbvfsnd_timeout
    2785 0000bce0     09e4          movi    SNDTIMEOUT,a4           ; If we get here we never got a response
         0000bcf0 00000000! 
    2786 0000bd10     0d5f          calla   copy_rom_string
         0000bd20 00000000! 
    2787 0000bd40     09e0          movi    snd_tout_mes,a0
         0000bd50 0000b980' 
    2788 0000bd70     0d3f          callr   _setup_message
         0000bd80     fabb  
    2789 0000bd90     09e8          movi    _setup_mess,a8
         0000bda0 00000000- 
    2790 0000bdc0                   JSRP    L_MESS
    2791                    
    2792 0000be30     c040          jruc    xbvfsndrev_done         ; Then we be done
    2793 0000be40           xbvfsnd_response
    2794 0000be40     09e4          movi    snd_vprompt,a4
         0000be50 0000b800' 
    2795 0000be70     0d5f          calla   copy_rom_string
         0000be80 00000000! 
    2796                    
    2797 0000bea0     07a0          move    @_sound_addr,a0,L       ; Get sound revision data
         0000beb0 00000000! 
    2798 0000bed0     8400          move    *a0,a0,W
    2799 0000bee0     0580          move    a0,@_snd_chip_count,W   ; Put up sound revision
         0000bef0 00000000! 
    2800 0000bf10     4c01          move    a0,a1
    2801 0000bf20     0b81          andi    0ffh,a1
         0000bf30 ffffff00  
    2802 0000bf50     0b41          cmpi    0ffh,a1
         0000bf60     ff00  
    2803 0000bf70     cad6          jrz     xbvfsnd_timeout
    2804 0000bf80     0b81          andi    0f0h,a1
         0000bf90 ffffff0f  
    2805 0000bfb0     0b41          cmpi    0d0h,a1
         0000bfc0     ff2f  
    2806 0000bfd0     ca04          jrz     xbvfproto_version
    2807 0000bfe0     09e4          movi    SNDRELEASEPROMPT,a4
         0000bff0 00000000! 
    2808 0000c010     c003          jruc    xbvfdo_snd_version
    2809 0000c020           xbvfproto_version
    2810 0000c020     09e4          movi    SNDPROTOPROMPT,a4
         0000c030 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   63

    2811 0000c050           xbvfdo_snd_version
    2812 0000c050     0d5f          calla   concat_rom_string
         0000c060 00000000! 
    2813 0000c080     05a0          move    @_snd_chip_count,a0,W
         0000c090 00000000! 
    2814 0000c0b0     0b80          andi    0fh,a0
         0000c0c0 fffffff0  
    2815 0000c0e0     19e1          movk    15,a1
    2816 0000c0f0     0d5f          calla   dec_to_asc
         0000c100 00000000! 
    2817 0000c120     0d5f          calla   concat_string
         0000c130 00000000! 
    2818 0000c150     09e0          movi    snd_rev_mes,a0
         0000c160 0000b8c0' 
    2819 0000c180     0d3f          callr   _setup_message
         0000c190     fa7a  
    2820 0000c1a0     09e8          movi    _setup_mess,a8
         0000c1b0 00000000- 
    2821 0000c1d0                   JSRP    L_MESS
    2822 0000c240           xbvfsndrev_done
    2823 0000c240                   RETP
    2824                    
    2825                    *******************************************************************************
    2826 0000c270           DO_GENTEST
    2827                            
    2828 0000c270     0d5f          CALLA   CLR_SCRN
         0000c280 00000000! 
    2829 0000c2a0     09e2          MOVI    M_DIGT,A2
         0000c2b0 0000cc50' 
    2830 0000c2d0     09c3          MOVI    ROBO_GREEN,A3
         0000c2e0     0606  
    2831 0000c2f0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
    2832                    
    2833 0000c360     0d5f          CALLA   SURE_BOX                ;PUT A NICE BOX UP!
         0000c370 00000000! 
    2834                    
    2835 0000c390     09e8          movi    xbvfsnd_testing_mess,a8
         0000c3a0 0000e1f0' 
    2836 0000c3c0                   JSRP    L_MESS
    2837                    
    2838 0000c430                   JSRP    GetSoundRev
    2839                    
    2840                            ;reset the board
    2841 0000c4a0     09c0          movi    SNDRSTBIT|32,a0         ;pull bit low
         0000c4b0     0030  
    2842                    ;       move    a0,@COIN_COUNTERS,W
    2843 0000c4c0     07a8          move    @_coin_counter_addr,a8,L
         0000c4d0 00000000! 
    2844 0000c4f0     8008          move    a0,*a8,W
    2845 0000c500     09ce          movi    8,a14                   ;wait a bit
         0000c510     0008  
    2846 0000c520     3c2e          dsjs    a14,$
    2847                    
    2848 0000c530     09c0          movi    32,a0                   ;send it high again
         0000c540     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   64

    2849                    ;       move    a0,@COIN_COUNTERS,W
    2850 0000c550     07a8          move    @_coin_counter_addr,a8,L
         0000c560 00000000! 
    2851 0000c580     8008          move    a0,*a8,W
    2852                    
    2853 0000c590                   SLEEP   TSEC/4                  ;250ms wait
    2854                    
    2855 0000c5e0     09c0          movi    TSEC*7,a0               ;wait for data available
         0000c5f0     0173  
    2856 0000c600                   JSRP    poll_sdav
    2857                    
    2858                    ;       movb    @SOUNDR,a0              ;read from the board (better be 0x79)
    2859 0000c670     07a0          move    @_sound_addr,a0,L
         0000c680 00000000! 
    2860 0000c6a0     8e00          movb    *a0,a0
    2861 0000c6b0     0b40          cmpi    79h,a0
         0000c6c0     ff86  
    2862 0000c6d0     cb1c          jrne    sdav_not79
    2863                    
    2864 0000c6e0     09c0          movi    TSEC/5,a0
         0000c6f0     000a  
    2865 0000c700                   JSRP    poll_sdav               ;great.  now wait for the bong count
    2866                    
    2867                    ;       movb    @SOUNDR,a0
    2868 0000c770     07a0          move    @_sound_addr,a0,L
         0000c780 00000000! 
    2869 0000c7a0     8e00          movb    *a0,a0
    2870 0000c7b0                   X32     a0
    2871 0000c7c0     0b20          addi    diag_message_table,a0
         0000c7d0 0000c920' 
    2872 0000c7f0     8608          move    *a0,a8,L
    2873 0000c800                   JSRP    L_MESS
    2874                    
    2875 0000c870     c080          jauc    ANY_BUT
         0000c880 000054f0' 
    2876                    
    2877 0000c8a0           sdav_not79
    2878 0000c8a0     09c0          movi    AUD_SNDERR4,a0
         0000c8b0     0032  
    2879 0000c8c0     0d5f          calla   AUD1
         0000c8d0 00000000! 
    2880                            .if     DEBUG                   ;sound board misbehaving.  should
    2881                            LOCKUP                          ; write a 0x79 after the checksum
    2882                            .endif                          ; tests.  it wrote something else.
    2883 0000c8f0     c080          jauc    ANY_BUT
         0000c900 000054f0' 
    2884                    
    2885 0000c920           diag_message_table
    2886 0000c920 0000e2e0'         .long   xbvfcheck_hardware
    2887 0000c940 0000e5a0'         .long   xbvfboard_ok
    2888 0000c960 0000e710'         .long   xbvfbad_u2_checksum
    2889 0000c980 0000e840'         .long   xbvfbad_u3_checksum
    2890 0000c9a0 0000e970'         .long   xbvfbad_u4_checksum
    2891 0000c9c0 0000eaa0'         .long   xbvfbad_u5_checksum
    2892 0000c9e0 0000ebd0'         .long   xbvfbad_u6_checksum
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   65

    2893 0000ca00 0000ed00'         .long   xbvfbad_u7_checksum
    2894 0000ca20 0000ee30'         .long   xbvfbad_u8_checksum
    2895 0000ca40 0000ef60'         .long   xbvfbad_u9_checksum
    2896 0000ca60 0000f090'         .long   xbvfbad_ram
    2897                    
    2898                    
    2899                    ****************************************
    2900                    * Wait for sound board Data AVailable to go active, with timeout.
    2901                    * 0a0H=timeout
    2902                    * <a0=time remaining
    2903                    
    2904 0000ca80            SUBR   poll_sdav
    2905 0000ca80                   PUSHP   a8
    2906 0000ca90     4c08          move    a0,a8
    2907                    
    2908                    
    2909                    ;psdav_0        move    @SOUNDIRQ,a1,W
    2910                    
    2911 0000caa0           psdav_0
    2912 0000caa0     07a1          move    @_soundirq_addr,a1,L
         0000cab0 00000000! 
    2913 0000cad0     8421          move    *a1,a1,W
    2914                    
    2915 0000cae0     1ea1          btst    B_SDAV,a1
    2916 0000caf0     ca06          jrz     psdav_found
    2917 0000cb00                   SLEEPK  1
    2918 0000cb40     3d68          dsj     a8,psdav_0
    2919 0000cb50     c001          jruc    psdav_timeout
    2920                    
    2921 0000cb60           psdav_found
    2922 0000cb60     0300          nop
    2923                    
    2924 0000cb70           psdav_timeout
    2925 0000cb70     4d00          move    a8,a0
    2926 0000cb80                   PULLP   a8
    2927 0000cb90                   RETP
    2928                    
    2929                    
    2930                    ****************************************
    2931                    *blank the inside of the "are you sure" box
    2932                    *
    2933 0000cbc0           blnk_sure_box
    2934 0000cbc0     09e3          MOVI    [41H,29H],A3
         0000cbd0 00410029  
    2935 0000cbf0     09e4          MOVI    [0F2H,166H]-[41H,29H],A4
         0000cc00 00b1013d  
    2936 0000cc20     c080          JAUC    BLNKAREA                ;ITS BLANK!
         0000cc30 00000000! 
    2937                    
    2938 0000cc50           M_DIGT
    2939 0000cc50       47          .STRING "GENERAL SOUND TEST",0,0
    2940 0000ccf0                   .EVEN
    2941                    
    2942 0000ccf0           SIRQ_DETECT
    2943 0000ccf0                    MESS_MAC  RD7FONT,SPACING07,200,170,ROBO_GREEN,STRCNRM,0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   66

    2944 0000cd90       53          .STRING "SOUND IRQ DETECT FUNCTIONAL.",0,0
    2945 0000ce80                   .EVEN
    2946                    
    2947                    *
    2948                    *MESSAGE FOR SOUND BOARD IRQ NOT WORKING
    2949                    *
    2950 0000ce80           SIRQ_ERR
    2951 0000ce80                   MESS_MAC RD15FONT,SPACING07,200,95,COLOR_LF,STRCNRM,0
    2952 0000cf20       2a          .STRING "** WARNING! **",0,1
    2953 0000cfa0                   .EVEN
    2954 0000cfa0                   MESS_MAC RD7FONT,SPACING07,200,120,COLOR_YELLOW,STRCNRM,0
    2955 0000d040       55          .STRING "UNABLE TO DETECT SOUND BOARD IRQ.",0,1
    2956 0000d160                   .EVEN
    2957 0000d160                   MESS_MAC RD7FONT,SPACING07,200,135,COLOR_YELLOW,STRCNRM,0
    2958 0000d200       54          .STRING "THIS MAY RESULT IN ERRANT SOUNDS.",0,0
    2959 0000d320                   .EVEN
    2960                    
    2961 0000d320           SIRQ_ERR2
    2962 0000d320                    MESS_MAC  RD7FONT,SPACING07,200,170,ROBO_RED,STRCNRM,0
    2963 0000d3c0       45          .STRING "ERROR - SOUND IRQ NOT DETECTED.",0,0
    2964 0000d4d0                   .EVEN
    2965                    
    2966              007d  DAC_LX  EQU     125
    2967              00b1  DAC_LX2 EQU     DAC_LX+52
    2968 0000d4d0           DAC_ERR
    2969 0000d4d0                   MESS_MAC RD7FONT,SPACING07,200,68,COLOR_LF,STRCNRM,0
    2970 0000d570       4c          .STRING "LISTEN FOR TONES:",0,1
    2971 0000d610                   .EVEN
    2972 0000d610                   MESS_MAC RD7FONT,SPACING07,200,81,COLOR_YELLOW,STRCNRM,0
    2973 0000d6b0       30          .STRING "0 TONES - CHECK HARDWARE",0,1
    2974 0000d780                   .EVEN
    2975 0000d780                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2976 0000d820       31          .STRING "1 TONE - SOUND BOARD OK",0,1
    2977 0000d8f0                   .EVEN
    2978 0000d8f0                   MESS_MAC RD7FONT,SPACING07,200,101,COLOR_YELLOW,STRCNRM,0
    2979 0000d990       32          .STRING "2 TONES - BAD U2 CHECKSUM",0,1
    2980 0000da70                   .EVEN
    2981 0000da70                   MESS_MAC RD7FONT,SPACING07,200,111,COLOR_YELLOW,STRCNRM,0
    2982 0000db10       33          .STRING "3 TONES - BAD U3 CHECKSUM",0,1
    2983 0000dbf0                   .EVEN
    2984 0000dbf0                   MESS_MAC RD7FONT,SPACING07,200,121,COLOR_YELLOW,STRCNRM,0
    2985 0000dc90       34          .STRING "4 TONES - BAD U4 CHECKSUM",0,1
    2986 0000dd70                   .EVEN
    2987 0000dd70                   MESS_MAC RD7FONT,SPACING07,200,131,COLOR_YELLOW,STRCNRM,0
    2988 0000de10       35          .STRING "5 TONES - BAD U5 CHECKSUM",0,1
    2989 0000def0                   .EVEN
    2990 0000def0                   MESS_MAC RD7FONT,SPACING07,200,141,COLOR_YELLOW,STRCNRM,0
    2991 0000df90       36          .STRING "6 TONES - BAD U6 CHECKSUM",0,1
    2992 0000e070                   .EVEN
    2993 0000e070                   MESS_MAC RD7FONT,SPACING07,200,151,COLOR_YELLOW,STRCNRM,0
    2994 0000e110       31          .STRING "10 TONES - RAM TEST FAILED",0,0
    2995 0000e1f0                   .EVEN
    2996                    
    2997 0000e1f0           xbvfsnd_testing_mess
    2998 0000e1f0                   MESS_MAC RD7FONT,SPACING07,200,81,COLOR_YELLOW,STRCNRM,0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   67

    2999 0000e290       54          .STRING "TESTING",0,0
    3000 0000e2e0                   .EVEN
    3001                    
    3002 0000e2e0           xbvfcheck_hardware
    3003 0000e2e0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3004 0000e380       4e          .STRING "NO RESPONSE FROM SOUND SYSTEM",0,1
    3005 0000e480                   .EVEN
    3006 0000e480                   MESS_MAC RD7FONT,SPACING07,200,101,COLOR_YELLOW,STRCNRM,0
    3007 0000e520       43          .STRING "CHECK HARDWARE",0,0
    3008 0000e5a0                   .EVEN
    3009                    
    3010 0000e5a0           xbvfboard_ok
    3011 0000e5a0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3012 0000e640       31          .STRING "1 TONE - SOUND BOARD OK",0,0
    3013 0000e710                   .EVEN
    3014                    
    3015 0000e710           xbvfbad_u2_checksum
    3016 0000e710                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3017 0000e7b0       42          .STRING "BAD U2 CHECKSUM",0,0
    3018 0000e840                   .EVEN
    3019                    
    3020 0000e840           xbvfbad_u3_checksum
    3021 0000e840                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3022 0000e8e0       42          .STRING "BAD U3 CHECKSUM",0,0
    3023 0000e970                   .EVEN
    3024                    
    3025 0000e970           xbvfbad_u4_checksum
    3026 0000e970                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3027 0000ea10       42          .STRING "BAD U4 CHECKSUM",0,0
    3028 0000eaa0                   .EVEN
    3029                    
    3030 0000eaa0           xbvfbad_u5_checksum
    3031 0000eaa0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3032 0000eb40       42          .STRING "BAD U5 CHECKSUM",0,0
    3033 0000ebd0                   .EVEN
    3034                    
    3035 0000ebd0           xbvfbad_u6_checksum
    3036 0000ebd0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3037 0000ec70       42          .STRING "BAD U6 CHECKSUM",0,0
    3038 0000ed00                   .EVEN
    3039                    
    3040 0000ed00           xbvfbad_u7_checksum
    3041 0000ed00                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3042 0000eda0       42          .STRING "BAD U7 CHECKSUM",0,0
    3043 0000ee30                   .EVEN
    3044                    
    3045 0000ee30           xbvfbad_u8_checksum
    3046 0000ee30                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3047 0000eed0       42          .STRING "BAD U8 CHECKSUM",0,0
    3048 0000ef60                   .EVEN
    3049                    
    3050 0000ef60           xbvfbad_u9_checksum
    3051 0000ef60                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3052 0000f000       42          .STRING "BAD U9 CHECKSUM",0,1
    3053 0000f090                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   68

    3054                    
    3055 0000f090           xbvfbad_ram
    3056 0000f090                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    3057 0000f130       52          .STRING "RAM TEST FAILED",0,1
    3058 0000f1c0                   .EVEN
    3059                    
    3060                    **************************************************************************
    3061 0000f1c0           DO_PLAYSOUNDS
    3062                    
    3063 0000f1c0     09e8          MOVI    SND_INST,A8
         0000f1d0 000087e0" 
    3064 0000f1f0                   JSRP    L_MESS                          ;PUT INSTRUCTION OUT.
    3065                    
    3066 0000f260                   JSRP    QSNDRST
    3067                    
    3068 0000f2d0     09e4          movi    [177,200-105],a4        ;upper left
         0000f2e0 00b1005f  
    3069 0000f300     09e5          movi    [238+16,200+104-1],a5   ;bottom right
         0000f310 00fe012f  
    3070 0000f330     09c9          MOVI    COLOR_WHITE,a9
         0000f340     0202  
    3071 0000f350     0d5f          CALLA   STD_BORD
         0000f360 00000000! 
    3072                    
    3073 0000f380     574a          CLR     A10
    3074 0000f390     09c0          movi    COLOR_LF,a0
         0000f3a0     3e3e  
    3075 0000f3b0     4d41          move    a10,a1
    3076 0000f3c0     0d3f          callr   plot_sound
         0000f3d0     0061  
    3077 0000f3e0     4d43          move    a10,a3
    3078 0000f3f0     0d3f          CALLR   MAKE_SOUND
         0000f400     0077  
    3079 0000f410           xbvfloop
    3080 0000f410                   SLEEPK  1
    3081                    
    3082 0000f450     0d5f          calla   fudge_switches2
         0000f460 00000000! 
    3083 0000f480     07a0          move    @fswitches_down,a0,L
         0000f490 00000000! 
    3084 0000f4b0     0b80          andi    START_BITS,a0
         0000f4c0 f9dbffff  
    3085 0000f4e0     cb46          jrnz    xbvfexit
    3086                    
    3087 0000f4f0     07a0          move    @fswitches_down,a0,L
         0000f500 00000000! 
    3088 0000f520     0b80          andi    ACTION_BITS,a0
         0000f530 ffff8f8f  
    3089 0000f550     ca04          jrz     xbvfno_play_sound
    3090 0000f560     4d43          move    a10,a3
    3091 0000f570     0d3f          CALLR   MAKE_SOUND
         0000f580     005f  
    3092 0000f590     c0e7          jruc    xbvfloop
    3093 0000f5a0           xbvfno_play_sound
    3094                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   69

    3095 0000f5a0     4d42          move    a10,a2
    3096 0000f5b0     07a0          move    @fswitches_cur,a0,L
         0000f5c0 00000000! 
    3097 0000f5e0     0b80          andi    UP_BITS,a0
         0000f5f0 fffffefe  
    3098 0000f610     ca01          jrz     xbvfno_down
    3099 0000f620     1022          inc     a2
    3100 0000f630           xbvfno_down
    3101 0000f630     07a0          move    @fswitches_cur,a0,L
         0000f640 00000000! 
    3102 0000f660     0b80          andi    DOWN_BITS,a0
         0000f670 fffffdfd  
    3103 0000f690     ca01          jrz     xbvfno_up
    3104 0000f6a0     1422          dec     a2
    3105 0000f6b0           xbvfno_up
    3106 0000f6b0     484a          cmp     a2,a10
    3107 0000f6c0     cad4          jreq    xbvfloop                ;no change
    3108                    
    3109 0000f6d0                   push    a2
    3110 0000f6e0     09c0          movi    ROBO_BLACK,a0
         0000f6f0     1414  
    3111 0000f700     4d41          move    a10,a1
    3112 0000f710     0d3f          callr   plot_sound
         0000f720     002c  
    3113 0000f730                   pull    a10
    3114 0000f740     0b8a          andi    7,a10
         0000f750 fffffff8  
    3115 0000f770                   SLEEPK  6
    3116 0000f7b0     09c0          movi    COLOR_LF,a0
         0000f7c0     3e3e  
    3117 0000f7d0     4d41          move    a10,a1
    3118 0000f7e0     0d3f          callr   plot_sound
         0000f7f0     001f  
    3119 0000f800     4d43          move    a10,a3
    3120 0000f810     0d3f          CALLR   MAKE_SOUND
         0000f820     0035  
    3121                    
    3122 0000f830     09cb          movi    30,a11
         0000f840     001e  
    3123 0000f850           xbvfwait_release
    3124                    
    3125 0000f850     0d5f          calla   fudge_switches2
         0000f860 00000000! 
    3126 0000f880     07a0          move    @fswitches_cur,a0,L
         0000f890 00000000! 
    3127 0000f8b0     0b80          andi    UP_BITS|DOWN_BITS,a0
         0000f8c0 fffffcfc  
    3128 0000f8e0     cab2          jrz     xbvfloop
    3129 0000f8f0                   SLEEPK  1
    3130 0000f930     3deb          dsj     a11,xbvfwait_release
    3131 0000f940     c0ac          jruc    xbvfloop
    3132                    
    3133 0000f950           xbvfexit
    3134 0000f950                   JSRP    QSNDRST
    3135 0000f9c0                   RETP
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   70

    3136                    
    3137                    **************************************************************************
    3138                    * colour in a0
    3139                    * sound number 0-3 passed in a1
    3140 0000f9f0           plot_sound
    3141 0000f9f0                   PUSH    a10
    3142 0000fa00     24a1          sll     5,a1                    ;x 32 bits
    3143 0000fa10     0b21          addi    sounds_tab,a1           ;base addr
         0000fa20 00008d20" 
    3144 0000fa40     8621          move    *a1,a1,L
    3145 0000fa50                   PUSH    a0,a1
    3146 0000fa70     09e8          movi    SND_SETUP,a8
         0000fa80 00008c80" 
    3147 0000faa0     0d5f          calla   LM_SETUP                ;GET CONFIRMATION DATA READY.
         0000fab0 00000000! 
    3148 0000fad0                   PULL    a6,a8                   ;colour,string
    3149 0000faf0                   JSRP    LM_FINIS                ;plot strings
    3150 0000fb60                   PULL    a10
    3151 0000fb70     0960          rets
    3152                    *
    3153                    *MAKE_SOUND - MAKE A SOUND TEST SOUND
    3154                    *A3 = INDEX INTO TEST SOUND LIST
    3155                    *NOTE: TRASHES A3
    3156 0000fb80           MAKE_SOUND
    3157 0000fb80     2483          SLL     4,A3
    3158 0000fb90     0b23          ADDI    TEST_SOUND_TAB,A3
         0000fba0 000090a0" 
    3159 0000fbc0     8463          MOVE    *A3,A3,W
    3160 0000fbd0     c080          JAUC    SNDSND
         0000fbe0 00000000! 
    3161                    
    3162                    **************************************************************************
    3163                    *                                                                        *
    3164                    *          MONITOR PATTERNS                                              *
    3165                    *                                                                        *
    3166                    **************************************************************************
    3167 0000fc00           GO_PATTERNS
    3168 0000fc00     09e8          MOVI    MEN_PATTERNS,A8      ;PUT UP THE MENU AND GO!
         0000fc10 00006f50" 
    3169 0000fc30     c080          JAUC    GEN_MENU             ;THIS WILL RETURN TO LEVEL ABOVE US!
         0000fc40 00000000! 
    3170                    
    3171                    *******************************************************************************
    3172                    *******************************************************************************
    3173                    *******************************************************************************
    3174                    *
    3175                    *              A   U   D   I   T        D   I   S   P   L   A   Y   S
    3176                    *
    3177                    *******************************************************************************
    3178                    *******************************************************************************
    3179                    *******************************************************************************
    3180                    **************************************************************************
    3181                    *                                                                        *
    3182                    *          AUDIT TABLE STRUCTURE                                         *
    3183                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   71

    3184                    **************************************************************************
    3185                    
    3186 0000fc60                   STRUCT  0
    3187 0000fc60                   APTR    AUD_MESS        ;*Text
    3188 0000fc60                   APTR    AUD_ROUTINE     ;*Code to call or 0
    3189 0000fc60                   WORD    AUD_NUMBER      ;Audit number to show or 0
    3190 0000fc60                   WORD    AUD_COLOR       ;Color for this line
    3191 0000fc60                   LABEL   AUD_T_SIZE      ;Size of structure
    3192                    
    3193                    AMAC    .macro  mess,rout,audit,color
    3194                            .long   :mess:,:rout:
    3195                            .word   :audit:,:color:
    3196                            .endm
    3197                    
    3198                    TXTLINE .macro  s
    3199                            .byte   ":s:",0
    3200                            .even
    3201                            .endm
    3202                    
    3203                    
    3204              0005  AUD_LM          EQU     TIT_ULX         ;SQUARE OFF AUDITS W/ HEADER.
    3205              0185  AUD_RM          EQU     TIT_LRX
    3206              0036  AUD_Y_STRT      EQU     54
    3207              000e  AUD_DY          EQU     14
    3208                    
    3209              009c  CP2_Y           EQU     156             ;PART 2 OF COIN AUDIT PAGE.
    3210                    
    3211                    ********************************
    3212                    * (doesn't display dollar values)
    3213                    
    3214 0000fc60           COIN_OCTO_AUDS
    3215 0000fc60     0068          .word   AUD_Y_STRT+50,12+8              ;Y start, Y spacing
    3216 0000fc80     0023          .word   AUD_LM+30,AUD_RM-30             ;LFT/RGT margin X
    3217 0000fca0                   AMAC    M_LCOIN2,0,AUDLCOIN,ROBO_YELLOW
    3218 0000fd00                   AMAC    M_RCOIN2,0,AUDRCOIN,ROBO_YELLOW
    3219 0000fd60                   AMAC    M_CCOIN2,0,AUDCCOIN,ROBO_YELLOW
    3220                    
    3221 0000fdc0 00000000          .long   0
    3222                    
    3223                    
    3224                    
    3225                    ********************************
    3226                    * TOP HALF OF COIN AUDIT PAGE 1 TABLE
    3227                    
    3228 0000fde0           COIN_AUDS
    3229 0000fde0     0036          .word   AUD_Y_STRT,12+5                 ;Y start, Y spacing
    3230 0000fe00     0005          .word   AUD_LM,AUD_RM                   ;LFT/RGT margin X
    3231 0000fe20                   AMAC    M_LCOIN,0,AUDLCOIN,ROBO_YELLOW
    3232 0000fe80                   AMAC    M_RCOIN,0,AUDRCOIN,ROBO_YELLOW
    3233 0000fee0                   AMAC    M_CCOIN,0,AUDCCOIN,ROBO_YELLOW
    3234 0000ff40                   AMAC    M_XCOIN,0,AUDXCOIN,ROBO_YELLOW
    3235 0000ffa0                   AMAC    M_DBV,0,AUD_DBV,ROBO_YELLOW
    3236 00010000                   AMAC    M_START,STARTS,0,ROBO_GREEN
    3237                    ;       AMAC    M_CONTO,0,AUD_CONTOFFERED,ROBO_GREEN
    3238                    ;       AMAC    M_CONT,0,AUD_CONTTAKEN,ROBO_GREEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   72

    3239 00010060 00000000          .long   0
    3240                    
    3241 00010080           COIN1_AUDS
    3242 00010080     0099          .word   AUD_Y_STRT+14*6+2+13,AUD_DY
    3243 000100a0     0005          .word   AUD_LM,AUD_RM
    3244 000100c0                   AMAC    M_PAIDC,0,AUDPAIDC,ROBO_WHITE
    3245 00010120 00000000          .long   0
    3246                    
    3247 00010140           COIN2_AUDS
    3248 00010140     00bc          .word   CP2_Y+AUD_DY+5+13,AUD_DY                ;Y start, Y spacing
    3249 00010160     0005          .word   AUD_LM,AUD_RM                   ;LFT/RGT margin X
    3250 00010180                   AMAC    M_SERV,0,AUDSERV,01212H
    3251 000101e0                   AMAC    M_PLAYS,DOPLAYS,0,ROBO_YELLOW
    3252                    ;       AMAC    M_HSLEFT,DOHSLEFT,0,ROBO_YELLOW
    3253 00010240 00000000          .long   0
    3254                    
    3255 00010260           amst_s  TXTLINE "ATTRACT MODE STARTS"
    3256 00010300           M_START TXTLINE "MID GAME STARTS"
    3257 00010380           M_CONTO TXTLINE "CONTINUES OFFERED"
    3258 00010410           M_CONT  TXTLINE "CONTINUES TAKEN"
    3259 00010490           M_EXTRA TXTLINE "EXTRA MEN COLLECTED/EARNED"
    3260 00010570           M_P1MIN TXTLINE "HOURS OF SINGLE PLAY"
    3261 00010620           M_P2MIN TXTLINE "HOURS OF DUAL PLAY"
    3262 000106c0           M_HOURS TXTLINE "TOTAL HOURS OF PLAY"
    3263 00010760       41  M_AVGT  .byte   "AVG. ",ASCII_DQ,"PLAYER",ASCII_DQ," GAME TIME (MIN.)",0
    3264 00010860                   .even
    3265                    
    3266                    
    3267                    ;*        BOTTOM HALF OF COIN AUDIT PAGE 1 TABLE
    3268                    ;COIN_A2        .WORD CP2_Y             ;Y START
    3269                    ;       .WORD AUD_DY            ;Y BETWEEN ENTRIES
    3270                    ;       .WORD AUD_LM            ;LEFT MARGIN X
    3271                    ;       .WORD AUD_RM            ;RIGHT MARGIN X
    3272                    ;       AMAC    M_START,STARTS,0,ROBO_YELLOW
    3273                    ;       AMAC    M_CONT,CONTINS,0,ROBO_YELLOW
    3274                    ;       AMAC    M_PLAYS,DOPLAYS,0,ROBO_YELLOW
    3275                    ;       AMAC    M_HSLEFT,DOHSLEFT,0,ROBO_YELLOW
    3276                    ;       .LONG 0
    3277                    
    3278                    **************************************************************************
    3279                    *                                                                        *
    3280                    *          COIN_D1                                                       *
    3281                    *                                                                        *
    3282                    *          THIS IS TOP HALF OF DETAILED COIN AUDIT PAGE                  *
    3283                    *          ITS THE SAME AS THE OTHER COIN PAGE WITH THE Y POSITIONING    *
    3284                    *          A LITTLE DIFFERENT                                            *
    3285                    *                                                                        *
    3286                    **************************************************************************
    3287                    ;COIN_D1
    3288                    ;         .WORD   39H                   ;Y START
    3289                    ;         .WORD   11H                   ;Y BETWEEN ENTRIES
    3290                    ;         .WORD   AUD_LM                ;LEFT MARGIN X
    3291                    ;         .WORD   AUD_RM                ;RIGHT MARGIN X
    3292                    ;         AMAC    M_LCOIN,0,AUDLCOIN,ROBO_YELLOW
    3293                    ;         AMAC    M_CCOIN,0,AUDCCOIN,ROBO_YELLOW
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   73

    3294                    ;         AMAC    M_RCOIN,0,AUDRCOIN,ROBO_YELLOW
    3295                    ;         .LONG   0
    3296                    *
    3297                    *        DOOR CLOSED AUDITS.
    3298                    *
    3299                    ;COIN_D2
    3300                    ;         .WORD   090H                  ;Y START
    3301                    ;         .WORD   11H                   ;Y BETWEEN ENTRIES
    3302                    ;         .WORD   AUD_LM                ;LEFT MARGIN X
    3303                    ;         .WORD   AUD_RM                ;RIGHT MARGIN X
    3304                    ;         AMAC    M_LCOIN,0,AUDLCDC,ROBO_YELLOW
    3305                    ;         AMAC    M_CCOIN,0,AUDCCDC,ROBO_YELLOW
    3306                    ;         AMAC    M_RCOIN,0,AUDRCDC,ROBO_YELLOW
    3307                    ;         .LONG   0
    3308                    
    3309                    **************************************************************************
    3310                    *                                                                        *
    3311                    *          GAME PLAY AUDIT SCREEN                                        *
    3312                    *                                                                        *
    3313                    **************************************************************************
    3314                    
    3315                            .asg    50,LM
    3316                            .asg    400-50,RM
    3317                    
    3318 00010860           GAME_AUDS1
    3319 00010860     002d          .word   55-10,11,LM,RM ;Y start, Y spacing, L margin, R margin
    3320 000108a0                   AMAC    str_totuptime,  prn_uptime,0,   ROBO_WHITE
    3321 00010900                   AMAC    str_totpltime,  prn_pltime,0,   ROBO_WHITE
    3322 00010960                   AMAC    str_1pplay,     prn_1plpct,0,   ROBO_BLUE
    3323 000109c0                   AMAC    str_2pplay,     prn_2plpct,0,   ROBO_BLUE
    3324 00010a20                   AMAC    str_totstarts,  0,AUD_TOTSTARTS,ROBO_YELLOW
    3325 00010a80                   AMAC    str_amodstarts, 0,AUD_PRESTARTS,ROBO_YELLOW
    3326 00010ae0                   AMAC    str_contoff,    0,AUD_CONTOFF,  ROBO_CYAN
    3327 00010b40                   AMAC    str_conttaken,  0,AUD_CONTTAKN, ROBO_CYAN
    3328 00010ba0                   AMAC    str_vscpus,     0,AUD_VSCPUS,   ROBO_PURPLE
    3329 00010c00                   AMAC    str_vscpuf,     0,AUD_VSCPUF,   ROBO_PURPLE
    3330 00010c60                   AMAC    str_cpuwin,     prn_cpuwins,0,  ROBO_GREEN
    3331 00010cc0                   AMAC    str_credlen,    prn_credlen,0,ROBO_GREEN
    3332 00010d20                   AMAC    str_inter,      0,AUD_INTERCON, ROBO_YELLOW
    3333 00010d80                   AMAC    str_wwf,        0,AUD_WWF,      ROBO_YELLOW
    3334 00010de0 00000000          .long   0
    3335                    
    3336 00010e00           GAME_AUDS2
    3337 00010e00     002d          .word   55-10,11,LM,RM ;Y start, Y spacing, L margin, R margin
    3338 00010e40                   AMAC    str_gametime,   prn_avgtime,0,  ROBO_BLUE
    3339 00010ea0                   AMAC    str_vshumtime,  prn_hvhtime,0,  ROBO_WHITE
    3340 00010f00                   AMAC    str_cpuwintime, prn_cwintime,0, ROBO_WHITE
    3341 00010f60                   AMAC    str_cpulosstime,prn_closstime,0,ROBO_WHITE
    3342 00010fc0                   AMAC    str_fasthvh,    prn_fasthvh,0,  ROBO_GREEN
    3343 00011020                   AMAC    str_fastcpuwin, prn_fastcwin,0, ROBO_GREEN
    3344 00011080                   AMAC    str_combo_per,  prn_combogames,0,       ROBO_GREEN
    3345 000110e0                   AMAC    str_fasthumwin, prn_fasthwin,0, ROBO_GREEN
    3346                    ;       AMAC    str_kanomorph,  prn_kanomorph,0,        ROBO_GREEN
    3347                    
    3348 00011140                   AMAC    str_lockups,    0,AUD_LOCKUP,   ROBO_CYAN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   74

    3349 000111a0                   AMAC    str_lockups2,   0,AUD_LOCKUP2,  ROBO_CYAN
    3350 00011200                   AMAC    str_snderr1,    0,AUD_SNDERR1,  ROBO_PINK
    3351 00011260                   AMAC    str_snderr2,    0,AUD_SNDERR2,  ROBO_PINK
    3352 000112c0                   AMAC    str_snderr3,    0,AUD_SNDERR3,  ROBO_PINK
    3353 00011320                   AMAC    str_snderr4,    0,AUD_SNDERR4,  ROBO_PINK
    3354 00011380 00000000          .long   0
    3355                    
    3356 000113a0           GAME_AUDS2a
    3357 000113a0     002d          .word   55-10,11,LM,RM ;Y start, Y spacing, L margin, R margin
    3358 000113e0                   AMAC    str_hdtohd,     0,AUD_HEADTOHEAD,ROBO_WHITE
    3359 00011440                   AMAC    str_rumble,     0,AUD_ROYALRUM, ROBO_WHITE
    3360 000114a0                   AMAC    str_rumwins,    0,AUD_RRWINS,   ROBO_GREEN
    3361 00011500                   AMAC    str_p1icons,    0,AUD_P1ICONMAX,ROBO_CYAN
    3362 00011560                   AMAC    str_p2icons,    0,AUD_P2ICONMAX,ROBO_CYAN
    3363 000115c0 00000000          .long   0
    3364                    
    3365 000115e0           GAME_AUDS3a
    3366 000115e0     0043          .word   55-10+22,11,LM,RM-140 ;Y start, Y spacing, L margin, R margin
    3367 00011620                   AMAC    str_bhart,      0,AUD_BHART,    ROBO_GREEN
    3368 00011680                   AMAC    str_rramo,      0,AUD_RRAMO,    ROBO_WHITE
    3369 000116e0                   AMAC    str_under,      0,AUD_UNDER,    ROBO_BLUE
    3370 00011740                   AMAC    str_yoko,       0,AUD_YOKO,     ROBO_YELLOW
    3371 000117a0                   AMAC    str_smich,      0,AUD_SMICH,    ROBO_CYAN
    3372 00011800                   AMAC    str_bbbig,      0,AUD_BBBIG,    ROBO_PURPLE
    3373 00011860                   AMAC    str_dclow,      0,AUD_DCLOW,    ROBO_GREEN
    3374 000118c0                   AMAC    str_lluge,      0,AUD_LLUGE,    ROBO_YELLOW
    3375                    ;       AMAC    str_adam,       dummy,0,        ROBO_BLUE
    3376 00011920 00000000          .long   0
    3377                    
    3378 00011940           GAME_AUDS3b
    3379 00011940     0043          .word   55-10+22,11,LM,RM-105-12 ;Y start, Y spacing, L margin, R margin
    3380 00011980                   AMAC    str_space,      bhart_hwinpct,0,ROBO_GREEN
    3381 000119e0                   AMAC    str_space,      rramo_hwinpct,0,ROBO_WHITE
    3382 00011a40                   AMAC    str_space,      under_hwinpct,0,ROBO_BLUE
    3383 00011aa0                   AMAC    str_space,      yoko_hwinpct,0,ROBO_YELLOW
    3384 00011b00                   AMAC    str_space,      smich_hwinpct,0,ROBO_CYAN
    3385 00011b60                   AMAC    str_space,      bbbig_hwinpct,0,ROBO_PURPLE
    3386 00011bc0                   AMAC    str_space,      dclow_hwinpct,0,ROBO_GREEN
    3387 00011c20                   AMAC    str_space,      lluge_hwinpct,0,ROBO_YELLOW
    3388 00011c80 00000000          .long   0
    3389                    
    3390 00011ca0           GAME_AUDS3c
    3391 00011ca0     0043          .word   55-10+22,11,LM,RM-35 ;Y start, Y spacing, L margin, R margin
    3392 00011ce0                   AMAC    str_space,      0,AUD_BHARTC,   ROBO_GREEN
    3393 00011d40                   AMAC    str_space,      0,AUD_RRAMOC,   ROBO_WHITE
    3394 00011da0                   AMAC    str_space,      0,AUD_UNDERC,   ROBO_BLUE
    3395 00011e00                   AMAC    str_space,      0,AUD_YOKOC,    ROBO_YELLOW
    3396 00011e60                   AMAC    str_space,      0,AUD_SMICHC,   ROBO_CYAN
    3397 00011ec0                   AMAC    str_space,      0,AUD_BBBIGC,   ROBO_PURPLE
    3398 00011f20                   AMAC    str_space,      0,AUD_DCLOWC,   ROBO_GREEN
    3399 00011f80                   AMAC    str_space,      0,AUD_LLUGEC,   ROBO_YELLOW
    3400 00011fe0 00000000          .long   0
    3401                    
    3402 00012000           GAME_AUDS3d
    3403 00012000     0043          .word   55-10+22,11,LM,RM-12 ;Y start, Y spacing, L margin, R margin
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   75

    3404 00012040                   AMAC    str_space,      bhart_cwinpct,0,ROBO_GREEN
    3405 000120a0                   AMAC    str_space,      rramo_cwinpct,0,ROBO_WHITE
    3406 00012100                   AMAC    str_space,      under_cwinpct,0,ROBO_BLUE
    3407 00012160                   AMAC    str_space,      yoko_cwinpct,0,ROBO_YELLOW
    3408 000121c0                   AMAC    str_space,      smich_cwinpct,0,ROBO_CYAN
    3409 00012220                   AMAC    str_space,      bbbig_cwinpct,0,ROBO_PURPLE
    3410 00012280                   AMAC    str_space,      dclow_cwinpct,0,ROBO_GREEN
    3411 000122e0                   AMAC    str_space,      lluge_cwinpct,0,ROBO_YELLOW
    3412                    ;       AMAC    str_space,      prn_adam,0,     ROBO_WHITE
    3413 00012340 00000000          .long   0
    3414                    
    3415 00012360           GAUD_P3HEAD1
    3416 00012360                    MESS_MAC  RD7FONT,SPACING07,RM-135,45,ROBO_BLUE,STRCNRM,0
    3417 00012400       50          .STRING "PLAYER",0,0
    3418 00012440                   .EVEN
    3419                    
    3420 00012440           GAUD_P3HEAD2
    3421 00012440                    MESS_MAC  RD7FONT,SPACING07,RM-30,45,ROBO_BLUE,STRCNRM,0
    3422 000124e0       43          .STRING "CPU",0,0
    3423 00012510                   .EVEN
    3424                    
    3425 00012510           GAUD_P3HEAD3
    3426 00012510                    MESS_MAC  RD7FONT,SPACING07,RM-140,56,ROBO_RED,STRRNRM,0
    3427 000125b0       55          .STRING "USES",0,0
    3428 000125e0                   .EVEN
    3429                    
    3430 000125e0           GAUD_P3HEAD4
    3431 000125e0                    MESS_MAC  RD7FONT,SPACING07,RM-105,56,ROBO_RED,STRRNRM,0
    3432 00012680       57          .STRING "WINS",0,0
    3433 000126b0                   .EVEN
    3434                    
    3435 000126b0           GAUD_P3HEAD5
    3436 000126b0                    MESS_MAC  RD7FONT,SPACING07,RM-35,56,ROBO_RED,STRRNRM,0
    3437 00012750       55          .STRING "USES",0,0
    3438 00012780                   .EVEN
    3439                    
    3440 00012780           GAUD_P3HEAD6
    3441 00012780                    MESS_MAC  RD7FONT,SPACING07,RM,56,ROBO_RED,STRRNRM,0
    3442 00012820       57          .STRING "WINS",0,0
    3443 00012850                   .EVEN
    3444                    
    3445                    ;page 1
    3446 00012850           str_totuptime   TXTLINE "TOTAL GAME UPTIME (HRS:MINS)"
    3447 00012940           str_totpltime   TXTLINE "TOTAL GAME PLAY TIME (HRS:MINS)"
    3448 00012a40           str_1pplay      TXTLINE "ONE-PLAYER PLAY"
    3449 00012ac0           str_2pplay      TXTLINE "TWO-PLAYER PLAY"
    3450 00012b40           str_totstarts   TXTLINE "TOTAL STARTS"
    3451 00012bb0           str_amodstarts  TXTLINE "ATTRACT MODE STARTS"
    3452 00012c50           str_contoff     TXTLINE "CONTINUES OFFERED"
    3453 00012ce0           str_conttaken   TXTLINE "CONTINUES TAKEN"
    3454 00012d60           str_vscpus      TXTLINE "1P GAMES BEGUN"
    3455 00012de0           str_vscpuf      TXTLINE "1P GAMES FINISHED"
    3456 00012e70           str_cpuwin      TXTLINE "CPU VICTORIES"
    3457 00012ee0           str_inter       TXTLINE "INTER BELT CHOSEN"
    3458 00012f70           str_wwf         TXTLINE "WWF BELT CHOSEN"
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   76

    3459 00012ff0           str_hdtohd      TXTLINE "HEAD TO HEAD GAMES"
    3460 00013090           str_rumble      TXTLINE "ROYAL RUMBLE GAMES"
    3461 00013130           str_rumwins     TXTLINE "ROYAL RUMBLE WINS"
    3462 000131c0           str_p1icons     TXTLINE "PLAYER 1 MAX ICONS"
    3463 00013260           str_p2icons     TXTLINE "PLAYER 2 MAX ICONS"
    3464                    
    3465                    ;page 2
    3466 00013300           str_gametime    TXTLINE "AVG MATCH TIME (MIN:SEC)"
    3467 000133d0           str_vshumtime   TXTLINE "AVG HUMAN VS HUMAN TIME"
    3468 00013490           str_cpuwintime  TXTLINE "AVG CPU WIN TIME"
    3469 00013520           str_cpulosstime TXTLINE "AVG CPU LOSS TIME"
    3470 000135b0           str_fasthvh     TXTLINE "FASTEST 2-PLAYER WIN"
    3471                    ;str_kanomorph  TXTLINE "KANO TRANSFORMATIONS"
    3472 00013660           str_credlen     TXTLINE "AVG 1 PLAYER TIME PER CREDIT"
    3473 00013750           str_fastcpuwin  TXTLINE "FASTEST CPU WIN"
    3474 000137d0           str_fasthumwin  TXTLINE "FASTEST CPU LOSS"
    3475 00013860           str_combo_per   TXTLINE "HUMAN COMBO GAMES"
    3476 000138f0           str_lockups     TXTLINE "DOGS"
    3477 00013920           str_lockups2    TXTLINE "PROCESS KO"
    3478 00013980           str_snderr1     TXTLINE "SND ERR xbvf1 (IRQ)"
    3479 00013a20           str_snderr2     TXTLINE "SND ERR xbvf2 (ROM CHECKSUM)"
    3480 00013b10           str_snderr3     TXTLINE "SND ERR xbvf3 (RAM TEST)"
    3481 00013be0           str_snderr4     TXTLINE "SND ERR xbvf4 (SDAV)"
    3482                    
    3483                    ;page 3
    3484 00013c90           str_bhart       TXTLINE "BRET HART"
    3485 00013ce0           str_rramo       TXTLINE "RAZOR RAMON"
    3486 00013d40           str_under       TXTLINE "UNDERTAKER"
    3487 00013da0           str_yoko        TXTLINE "YOKOZUNA"
    3488 00013df0           str_smich       TXTLINE "SHAWN MICHAELS"
    3489 00013e70           str_bbbig       TXTLINE "BAM BAM BIGELOW"
    3490 00013ef0           str_dclow       TXTLINE "DOINK THE CLOWN"
    3491 00013f70           str_lluge       TXTLINE "LEX LUGER"
    3492                    ;str_adam       TXTLINE "ADAM BOMB APPEARANCES"
    3493                    
    3494 00013fc0           str_pct         TXTLINE "%"
    3495                    
    3496 00013fd0           str_space       TXTLINE " "
    3497 00013fe0                   .even
    3498                    
    3499                     .if 0
    3500                    ROBO_GREY       EQU     0101H   ;[0E0H-223,0E0H-223]
    3501                    ROBO_WHITE      EQU     0202H   ;[0E1H-223,0E1H-223]
    3502                    ROBO_RED        EQU     0303H   ;[0E2H-223,0E2H-223]
    3503                    ROBO_ORANGE     EQU     0404H   ;[0E3H-223,0E3H-223]
    3504                    ROBO_YELLOW     EQU     0505H   ;[0E4H-223,0E4H-223]
    3505                    ROBO_GREEN      EQU     0606H   ;[0E5H-223,0E5H-223]
    3506                    ROBO_BLUE       EQU     0707H   ;[0E6H-223,0E6H-223]
    3507                    ROBO_LF         EQU     03E3EH 
    3508                    ROBO_CYAN       EQU     0E0EH   ;[0EDH-223,0EDH-223]
    3509                    ROBO_DECAY      EQU     03F3FH
    3510                    ROBO_RGOLD      EQU     0A0AH   ;[0E9H-223,0E9H-223]
    3511                    ROBO_LASER      EQU     03E3EH
    3512                    ROBO_LASER2     EQU     03F3FH
    3513                    ROBO_BLUWH      EQU     0C0CH   ;[0EBH-223,0EBH-223]
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   77

    3514                    ROBO_PINK       EQU     0303H   ;[0E2H-223,0E2H-223]
    3515                    ROBO_SKY        EQU     0D0DH   ;[0ECH-223,0ECH-223]  ;LAST COLOR IN ROBO IS "SKY" COLOR
    3516                    ROBO_PURPLE     EQU     ROBO_SKY     ;PURPLE FOR TEST MODE
    3517                    ROBO_BLACK      EQU     1414H   ;BLACK AS COAL
    3518                     .endif
    3519                    
    3520                    
    3521                    *****************************************************************************
    3522                    * total uptime
    3523 00013fe0           prn_uptime
    3524 00013fe0     09c0          movi    AUD_UPTIME,a0
         00013ff0     001d  
    3525 00014000     0d5f          calla   GET_AUD
         00014010 00000000! 
    3526                                                            ;* 5 sec incs / 60 (sec p/min) = /12
    3527 00014030     1980          movk    12,a0
    3528 00014040     5a01          divu    a0,a1                   ;mins
    3529 00014050     c000          jruc    P_TIME
         00014060     04fb  
    3530                    
    3531                    
    3532                    *****************************************************************************
    3533                    * actual play time
    3534 00014070           prn_pltime
    3535 00014070     09c0          movi    AUD_PLTIME,a0
         00014080     001e  
    3536 00014090     0d5f          calla   GET_AUD
         000140a0 00000000! 
    3537                                                            ;* 5 sec incs / 60 (sec p/min) = /12
    3538 000140c0     1980          movk    12,a0
    3539 000140d0     5a01          divu    a0,a1                   ;mins
    3540 000140e0     c000          jruc    P_TIME
         000140f0     04f2  
    3541                    
    3542                    
    3543                    *****************************************************************************
    3544                    * percentage of 1 player play
    3545 00014100           prn_1plpct
    3546 00014100     09c0          movi    AUD_PLTIME,a0
         00014110     001e  
    3547 00014120     0d5f          calla   GET_AUD
         00014130 00000000! 
    3548 00014150     4c24          move    a1,a4
    3549                    
    3550 00014160     09c0          movi    AUD_1PLAYTIME,a0
         00014170     001f  
    3551 00014180     0d5f          calla   GET_AUD
         00014190 00000000! 
    3552 000141b0     09c0          movi    100,a0
         000141c0     0064  
    3553 000141d0     5e01          mpyu    a0,a1
    3554 000141e0     4c22          move    a1,a2
    3555 000141f0     4c80          move    a4,a0
    3556 00014200     0d3f          callr   ROUNDED_A0_INTO_A2      ;DIVIDES A0 INTO A2. RESULT IN A2
         00014210     043e  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   78

    3557 00014220     4c43          move    a2,a3
    3558 00014230     c000          jruc    PERCENT_WORK
         00014240     010c  
    3559                    
    3560                    
    3561                    *****************************************************************************
    3562                    * percentage of 2 player play
    3563 00014250           prn_2plpct
    3564 00014250     09c0          movi    AUD_PLTIME,a0
         00014260     001e  
    3565 00014270     0d5f          calla   GET_AUD
         00014280 00000000! 
    3566 000142a0     4c24          move    a1,a4
    3567                    
    3568 000142b0     09c0          movi    AUD_2PLAYTIME,a0
         000142c0     0020  
    3569 000142d0     0d5f          calla   GET_AUD
         000142e0 00000000! 
    3570 00014300     09c0          movi    100,a0
         00014310     0064  
    3571 00014320     5e01          mpyu    a0,a1
    3572 00014330     4c22          move    a1,a2
    3573 00014340     4c80          move    a4,a0
    3574 00014350     0d3f          callr   ROUNDED_A0_INTO_A2      ;DIVIDES A0 INTO A2. RESULT IN A2
         00014360     0429  
    3575 00014370     4c43          move    a2,a3
    3576 00014380     c000          jruc    PERCENT_WORK
         00014390     00f7  
    3577                    
    3578                    
    3579                    *****************************************************************************
    3580                    *
    3581 000143a0           prn_cpuwins
    3582 000143a0     09c0          movi    AUD_VSCPUF,a0
         000143b0     0025  
    3583 000143c0     0d5f          calla   GET_AUD
         000143d0 00000000! 
    3584 000143f0     4c24          move    a1,a4
    3585                    
    3586 00014400     09c0          movi    AUD_CPUWIN,a0
         00014410     002b  
    3587 00014420     0d5f          calla   GET_AUD
         00014430 00000000! 
    3588 00014450     09c0          movi    100,a0
         00014460     0064  
    3589 00014470     5e01          mpyu    a0,a1
    3590 00014480     4c22          move    a1,a2
    3591 00014490     4c80          move    a4,a0
    3592 000144a0     0d3f          callr   ROUNDED_A0_INTO_A2      ;DIVIDES A0 INTO A2. RESULT IN A2
         000144b0     0414  
    3593 000144c0     4c43          move    a2,a3
    3594 000144d0     c000          jruc    PERCENT_WORK
         000144e0     00e2  
    3595                    
    3596                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   79

    3597                    *****************************************************************************
    3598                    * avg battle time (all categories)
    3599                    
    3600 000144f0           prn_avgtime
    3601 000144f0     09c0          movi    AUD_2PBTIME,a0
         00014500     0021  
    3602 00014510     0d5f          calla   GET_AUD
         00014520 00000000! 
    3603 00014540     4c23          move    a1,a3
    3604 00014550     09c0          movi    AUD_CPUWINTIME,a0
         00014560     0022  
    3605 00014570     0d5f          calla   GET_AUD
         00014580 00000000! 
    3606 000145a0     4023          add     a1,a3
    3607 000145b0     09c0          movi    AUD_CPULOSETIME,a0
         000145c0     0023  
    3608 000145d0     0d5f          calla   GET_AUD
         000145e0 00000000! 
    3609 00014600     4023          add     a1,a3
    3610                    
    3611 00014610     09c0          movi    AUD_VSHUMF,a0
         00014620     0027  
    3612 00014630     0d5f          calla   GET_AUD
         00014640 00000000! 
    3613 00014660     4c22          move    a1,a2
    3614 00014670     09c0          movi    AUD_VSCPUF,a0
         00014680     0025  
    3615 00014690     0d5f          calla   GET_AUD
         000146a0 00000000! 
    3616 000146c0     4022          add     a1,a2
    3617                    
    3618 000146d0     5a43          divu    a2,a3
    3619 000146e0     4c61          move    a3,a1
    3620 000146f0     c000          jruc    P_TIME
         00014700     0491  
    3621                    
    3622                    
    3623                    *****************************************************************************
    3624                    * avg 2-player battle time
    3625                    
    3626 00014710           prn_hvhtime
    3627 00014710     09c0          movi    AUD_2PBTIME,a0
         00014720     0021  
    3628 00014730     0d5f          calla   GET_AUD
         00014740 00000000! 
    3629                    
    3630 00014760     4c23          move    a1,a3
    3631 00014770     09c0          movi    AUD_VSHUMF,a0
         00014780     0027  
    3632 00014790     0d5f          calla   GET_AUD
         000147a0 00000000! 
    3633                    
    3634 000147c0     5a23          divu    a1,a3
    3635 000147d0     4c61          move    a3,a1
    3636 000147e0     c000          jruc    P_TIME
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   80

         000147f0     0482  
    3637                    
    3638                    
    3639                    *****************************************************************************
    3640                    * avg CPU win time
    3641                    
    3642 00014800           prn_cwintime
    3643 00014800     09c0          movi    AUD_CPUWINTIME,a0
         00014810     0022  
    3644 00014820     0d5f          calla   GET_AUD
         00014830 00000000! 
    3645                    
    3646 00014850     4c23          move    a1,a3
    3647 00014860     09c0          movi    AUD_CPUWIN,a0
         00014870     002b  
    3648 00014880     0d5f          calla   GET_AUD
         00014890 00000000! 
    3649                    
    3650 000148b0     5a23          divu    a1,a3
    3651 000148c0     4c61          move    a3,a1
    3652 000148d0     c000          jruc    P_TIME
         000148e0     0473  
    3653                    
    3654                    
    3655                    *****************************************************************************
    3656                    * avg CPU loss time
    3657                    
    3658 000148f0           prn_closstime
    3659 000148f0     09c0          movi    AUD_CPULOSETIME,a0
         00014900     0023  
    3660 00014910     0d5f          calla   GET_AUD
         00014920 00000000! 
    3661                    
    3662 00014940     4c23          move    a1,a3
    3663 00014950     09c0          movi    AUD_VSCPUF,a0
         00014960     0025  
    3664 00014970     0d5f          calla   GET_AUD
         00014980 00000000! 
    3665 000149a0     4c22          move    a1,a2
    3666 000149b0     09c0          movi    AUD_CPUWIN,a0
         000149c0     002b  
    3667 000149d0     0d5f          calla   GET_AUD
         000149e0 00000000! 
    3668 00014a00     4422          sub     a1,a2
    3669                    
    3670 00014a10     5a43          divu    a2,a3
    3671 00014a20     4c61          move    a3,a1
    3672 00014a30     c000          jruc    P_TIME
         00014a40     045d  
    3673                    
    3674                    
    3675                    *****************************************************************************
    3676                    * fastest human v human win
    3677                    
    3678 00014a50           prn_fasthvh
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   81

    3679 00014a50     09c0          movi    AUD_FASTHDH,a0
         00014a60     002a  
    3680 00014a70     0d5f          calla   GET_AUD
         00014a80 00000000! 
    3681 00014aa0     c000          jruc    P_TIME
         00014ab0     0456  
    3682                    
    3683                    *****************************************************************************
    3684                    ;* KANO MORPHS
    3685                    ;
    3686                    ;prn_adam
    3687                    ;prn_kanomorph
    3688                    ;       movi    AUD_VSCPUF,a0
    3689                    ;       calla   GET_AUD
    3690                    ;       CMPI    3000,A1
    3691                    ;       JRLE    ZERO_MORPHS
    3692                    ;       MOVI    10,A0
    3693                    ;       CALLA   RNDRNG0
    3694                    ;       MOVE    A0,A8
    3695                    ;       PUSH    A8
    3696                    ;       MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
    3697                    ;       CALLA   LM_SETUP
    3698                    ;       PULL    A8
    3699                    ;       CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
    3700                    ;       move    *a13(AT_PTR),a6,L       ;Get *audit
    3701                    ;       move    *a6(AUD_COLOR),a6
    3702                    ;       JSRP    RIGHT_FINISH    ;PRINT THE LINE
    3703                    ;dummy
    3704                    ;       RETP
    3705                    ;
    3706                    ;ZERO_MORPHS
    3707                    ;       MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
    3708                    ;       CALLA   LM_SETUP
    3709                    ;       CLR     A8
    3710                    ;       CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
    3711                    ;       move    *a13(AT_PTR),a6,L       ;Get *audit
    3712                    ;       move    *a6(AUD_COLOR),a6
    3713                    ;       JSRP    RIGHT_FINISH    ;PRINT THE LINE
    3714                    ;       RETP
    3715                    
    3716                    
    3717 00014ac0           prn_credlen
    3718 00014ac0     09c0          MOVI    AUD_CREDLEN,A0
         00014ad0     005d  
    3719 00014ae0     0d5f          CALLA   GET_AUD
         00014af0 00000000! 
    3720 00014b10     4c23          MOVE    A1,A3
    3721 00014b20     09c0          MOVI    AUD_CREDLENNUM,A0
         00014b30     005e  
    3722 00014b40     0d5f          CALLA   GET_AUD
         00014b50 00000000! 
    3723 00014b70     5a23          DIVU    A1,A3
    3724 00014b80     18a1          MOVK    5,A1            ;TURN INTO SECONDS
    3725 00014b90     5e23          MPYU    A1,A3           ;A3 HAS SECONDS OF INTEREST
    3726 00014ba0     4c61          MOVE    A3,A1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   82

    3727 00014bb0     c000          jruc    P_TIME
         00014bc0     0445  
    3728                    
    3729                    
    3730                    *****************************************************************************
    3731                    * fastest computer win
    3732                    
    3733 00014bd0           prn_fastcwin
    3734 00014bd0     09c0          movi    AUD_FASTCDH,a0
         00014be0     0028  
    3735 00014bf0     0d5f          calla   GET_AUD
         00014c00 00000000! 
    3736 00014c20     c000          jruc    P_TIME
         00014c30     043e  
    3737                    
    3738                    
    3739                    *****************************************************************************
    3740                    * fastest computer loss
    3741                    
    3742 00014c40           prn_fasthwin
    3743 00014c40     09c0          movi    AUD_FASTHDC,a0
         00014c50     0029  
    3744 00014c60     0d5f          calla   GET_AUD
         00014c70 00000000! 
    3745 00014c90     c000          jruc    P_TIME
         00014ca0     0437  
    3746                    
    3747                    
    3748                    *****************************************************************************
    3749                    * percentage of human combo games
    3750                    
    3751 00014cb0           prn_combogames
    3752 00014cb0     09c2          movi    AUD_COMBO,a2
         00014cc0     005b  
    3753 00014cd0     09c0          movi    AUD_TOTALGAMES,a0
         00014ce0     005c  
    3754 00014cf0     c050          jruc    qnusset
    3755                    
    3756                    ******************************************************************************
    3757                    * wrestler win percentages
    3758                    *
    3759                    
    3760 00014d00           bhart_hwinpct
    3761 00014d00     09c0          movi    AUD_BHART,a0
         00014d10     0033  
    3762 00014d20     09c2          movi    AUD_BHARTHW,a2
         00014d30     0045  
    3763 00014d40     c04b          jruc    qnusset
    3764 00014d50           bhart_cwinpct
    3765 00014d50     09c0          movi    AUD_BHARTC,a0
         00014d60     003c  
    3766 00014d70     09c2          movi    AUD_BHARTCW,a2
         00014d80     004e  
    3767 00014d90     c046          jruc    qnusset
    3768 00014da0           rramo_hwinpct
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   83

    3769 00014da0     09c0          movi    AUD_RRAMO,a0
         00014db0     0034  
    3770 00014dc0     09c2          movi    AUD_RRAMOHW,a2
         00014dd0     0046  
    3771 00014de0     c041          jruc    qnusset
    3772 00014df0           rramo_cwinpct
    3773 00014df0     09c0          movi    AUD_RRAMOC,a0
         00014e00     003d  
    3774 00014e10     09c2          movi    AUD_RRAMOCW,a2
         00014e20     004f  
    3775 00014e30     c03c          jruc    qnusset
    3776 00014e40           under_hwinpct
    3777 00014e40     09c0          movi    AUD_UNDER,a0
         00014e50     0035  
    3778 00014e60     09c2          movi    AUD_UNDERHW,a2
         00014e70     0047  
    3779 00014e80     c037          jruc    qnusset
    3780 00014e90           under_cwinpct
    3781 00014e90     09c0          movi    AUD_UNDERC,a0
         00014ea0     003e  
    3782 00014eb0     09c2          movi    AUD_UNDERCW,a2
         00014ec0     0050  
    3783 00014ed0     c032          jruc    qnusset
    3784 00014ee0           yoko_hwinpct
    3785 00014ee0     09c0          movi    AUD_YOKO,a0
         00014ef0     0036  
    3786 00014f00     09c2          movi    AUD_YOKOHW,a2
         00014f10     0048  
    3787 00014f20     c02d          jruc    qnusset
    3788 00014f30           yoko_cwinpct
    3789 00014f30     09c0          movi    AUD_YOKOC,a0
         00014f40     003f  
    3790 00014f50     09c2          movi    AUD_YOKOCW,a2
         00014f60     0051  
    3791 00014f70     c028          jruc    qnusset
    3792 00014f80           smich_hwinpct
    3793 00014f80     09c0          movi    AUD_SMICH,a0
         00014f90     0037  
    3794 00014fa0     09c2          movi    AUD_SMICHHW,a2
         00014fb0     0049  
    3795 00014fc0     c023          jruc    qnusset
    3796 00014fd0           smich_cwinpct
    3797 00014fd0     09c0          movi    AUD_SMICHC,a0
         00014fe0     0040  
    3798 00014ff0     09c2          movi    AUD_SMICHCW,a2
         00015000     0052  
    3799 00015010     c01e          jruc    qnusset
    3800 00015020           bbbig_hwinpct
    3801 00015020     09c0          movi    AUD_BBBIG,a0
         00015030     0038  
    3802 00015040     09c2          movi    AUD_BBBIGHW,a2
         00015050     004a  
    3803 00015060     c019          jruc    qnusset
    3804 00015070           bbbig_cwinpct
    3805 00015070     09c0          movi    AUD_BBBIGC,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   84

         00015080     0041  
    3806 00015090     09c2          movi    AUD_BBBIGCW,a2
         000150a0     0053  
    3807 000150b0     c014          jruc    qnusset
    3808 000150c0           dclow_hwinpct
    3809 000150c0     09c0          movi    AUD_DCLOW,a0
         000150d0     0039  
    3810 000150e0     09c2          movi    AUD_DCLOWHW,a2
         000150f0     004b  
    3811 00015100     c00f          jruc    qnusset
    3812 00015110           dclow_cwinpct
    3813 00015110     09c0          movi    AUD_DCLOWC,a0
         00015120     0042  
    3814 00015130     09c2          movi    AUD_DCLOWCW,a2
         00015140     0054  
    3815 00015150     c00a          jruc    qnusset
    3816 00015160           lluge_hwinpct
    3817 00015160     09c0          movi    AUD_LLUGE,a0
         00015170     003b  
    3818 00015180     09c2          movi    AUD_LLUGEHW,a2
         00015190     004d  
    3819 000151a0     c005          jruc    qnusset
    3820 000151b0           lluge_cwinpct
    3821 000151b0     09c0          movi    AUD_LLUGEC,a0
         000151c0     0044  
    3822 000151d0     09c2          movi    AUD_LLUGECW,a2
         000151e0     0056  
    3823 000151f0     0300          jruc    qnusset
    3824 00015200           qnusset
    3825 00015200     0d5f          calla   GET_AUD
         00015210 00000000! 
    3826 00015230     4c24          move    a1,a4
    3827 00015240     4c40          move    a2,a0
    3828 00015250     0d5f          calla   GET_AUD
         00015260 00000000! 
    3829 00015280     09c0          movi    100,a0
         00015290     0064  
    3830 000152a0     5e01          mpyu    a0,a1
    3831 000152b0     4c22          move    a1,a2
    3832 000152c0     4c80          move    a4,a0
    3833 000152d0     0d3f          callr   ROUNDED_A0_INTO_A2
         000152e0     0331  
    3834 000152f0     4c43          move    a2,a3
    3835 00015300     0300          jruc    PERCENT_WORK
    3836                    
    3837                    **************************************************************************
    3838                    * NUMBER_WORK - Print audit number
    3839                    * A3=#
    3840                    
    3841 00015310           PERCENT_WORK
    3842 00015310     09e8          MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
         00015320 00005280" 
    3843 00015340     0d5f          CALLA   LM_SETUP
         00015350 00000000! 
    3844                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   85

    3845 00015370     4c68          MOVE    A3,A8                   ;NOW WE HAVE BINARY NUMBER
    3846 00015380     0d5f          CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
         00015390 00000000! 
    3847                    
    3848 000153b0                   PUSH    a8
    3849 000153c0     4d07          move    a8,a7
    3850 000153d0     09e8          movi    str_pct,a8
         000153e0 00013fc0' 
    3851 00015400     0d5f          CALLA   STRCAT
         00015410 00000000! 
    3852 00015430                   PULL    a8
    3853                    
    3854 00015440                   PUSH    a0
    3855 00015450     b5a0          move    *a13(AT_RX),a0
         00015460     0150  
    3856 00015470                   PUSHP   a0
    3857 00015480     0b00          addi    13,a0
         00015490     000d  
    3858 000154a0     b00d          move    a0,*a13(AT_RX)
         000154b0     0150  
    3859 000154c0                   PULL    a0
    3860                    
    3861 000154d0     b7a6          move    *a13(AT_PTR),a6,L       ;Get *audit
         000154e0     0100  
    3862 000154f0     b4c6          move    *a6(AUD_COLOR),a6
         00015500     0050  
    3863                    
    3864 00015510                   JSRP    RIGHT_FINISH
    3865                    
    3866 00015580                   PULLP   a0
    3867 00015590     b00d          move    a0,*a13(AT_RX)          ;restore right margin
         000155a0     0150  
    3868 000155b0                   RETP
    3869                    
    3870                    *****************************************************************************
    3871                    
    3872 000155e0           MISC_AUD
    3873 000155e0     0032          .word   50,18,AUD_LM,AUD_RM             ;Y start, Y spacing, LMar, RMar
    3874 00015620                   AMAC    M_SECBON,0,AUDSURV,ROBO_YELLOW  ;WARPS TAKEN
    3875 00015680                   AMAC    M_HIDB,0,AUDBONE,ROBO_YELLOW    ;GAMES NOT FINISHED
    3876 000156e0                   AMAC    M_PLAYS,DOPLAYS,0,ROBO_YELLOW   ;PLAYS ON TOP
    3877 00015740                   AMAC    M_P1MIN,DO_P1MIN,0,ROBO_YELLOW
    3878 000157a0                   AMAC    M_P2MIN,DO_P2MIN,0,ROBO_YELLOW
    3879 00015800                   AMAC    M_AVGT,DO_AVGT,0,ROBO_YELLOW
    3880 00015860                   AMAC    M_ELAPSE,DO_ELAPSE,0,ROBO_YELLOW
    3881 000158c0                   AMAC    adiff_s,diff_prt,0,01212H
    3882 00015920 00000000          .LONG   0
    3883                    
    3884 00015940           adiff_s TXTLINE "GAME DIFFICULTY LEVEL"
    3885                    
    3886                    
    3887                            .IF     0
    3888                    ********************************
    3889                    * Display revision message
    3890                    * Do coin DIP if enabled
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   86

    3891                    * Check cmos, if bad reset to factory
    3892                    
    3893                    FACCHECK
    3894                            calla   dpageflip_off
    3895                    
    3896                            CALLA   CLR_SCRN
    3897                            MOVI    DIAGP,A0
    3898                            CALLA   pal_getf
    3899                    
    3900                            MOVI    AUDSTAT,A0              ;CLEAR GAME STATE AUDIT
    3901                            CLR     A1
    3902                            CALLA   STORE_AUDIT
    3903                    
    3904                            MOVI    ROM_NAME,A2
    3905                            MOVI    ROBO_LF,A3
    3906                            JSRP    TOP_BOX                 ;PRINT TITLE BOX.
    3907                    
    3908                            .if     YUNIT
    3909                            move    @SWITCH+30h,a0
    3910                            btst    6,a0
    3911                            jrnz    fc40                    ;No DIP coinage?
    3912                    
    3913                            movk    1,a0                    ;Just coinage
    3914                            calla   FAC_SET
    3915                            movi    dipcoinage_mess,a8
    3916                            JSRP    L_MESS
    3917                    fc40
    3918                            .endif
    3919                    
    3920                            .if     DEBUG
    3921                            SLEEPK  1                       ;Show it DEBUG
    3922                            .else
    3923                            SLEEP   120                     ;Show it
    3924                            .endif
    3925                    
    3926                            CALLA   CMOS_VAL                ;CMOS BOGUS?
    3927                            JRZ     FACC0                   ;NO
    3928                    
    3929                            MOVI    MESS_RESET,A8           ;ERROR MESSAGE
    3930                            JSRP    L_MESS
    3931                            SLEEP   60
    3932                    
    3933                            CALLR   RES_ALL                 ;ALL TIME TABLE
    3934                            clr     a0                      ;Full
    3935                            CALLA   FAC_SET
    3936                    
    3937                            MOVI    MESS_FAC,A8
    3938                            CALLA   LM_SETUP                ;GET CONFIRMATION DATA READY.
    3939                            JSRP    LM_FINIS
    3940                            SLEEP   60
    3941                            CALLA   CMOS_VAL                ;CMOS BOGUS?
    3942                            JRZ     FACC00                  ;NO
    3943                    
    3944                            CALLA   SCRCLR
    3945                            MOVI    MESS_RESET,A8           ;ERROR MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   87

    3946                            JSRP    L_MESS
    3947                    FACC00
    3948                            SLEEP   240
    3949                    
    3950                    FACC0   CALLA   SCRCLR
    3951                    
    3952                            CREATE  AMODE_PID,attract_mode
    3953                            DIE
    3954                    
    3955                    
    3956                    dipcoinage_mess
    3957                            MESS_MAC RD7FONT,SPACING20,200,65,ROBO_WHITE,STRCNRM,0
    3958                            .byte   "USING DIPSWITCH COINAGE",0,0
    3959                            .even
    3960                    
    3961                            .ENDIF
    3962                    
    3963                    
    3964                    ********************************
    3965                    * Octopus sucessful, show stats
    3966                    
    3967 000159f0           HID_P
    3968 000159f0     0d5f          CALLA   display_init            ;MAKE SURE A13 IS OK BEFORE ANY ACTIONS!
         00015a00 00000000! 
    3969 00015a20     0d5f          CALLA   DIGSRT                  ;RE-INIT THE WORLD!
         00015a30 00000000! 
    3970                    
    3971 00015a50     09e2          MOVI    ROM_NAME,A2
         00015a60 00000000! 
    3972 00015a80     09c3          MOVI    ROBO_LF,A3
         00015a90     3e3e  
    3973 00015aa0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
    3974                    
    3975                    *       A4 = UPPER LEFT Y,X                                           *
    3976                    *       A5 = LOWER RIGHT Y,X                                          *
    3977                    *       A6 = NUMBER OF SLICES GOING IN.                               *
    3978                    
    3979 00015b10     0d5f          calla   CLR_SCRN                ;Clr screen
         00015b20 00000000! 
    3980                    
    3981 00015b40     09e0          movi    COIN_OCTO_AUDS,a0
         00015b50 0000fc60' 
    3982 00015b70                   JSRP    PRNT_AUD
    3983                    
    3984 00015be0     09c0          movi    AUD_Y_STRT,a0           ;aud Y start
         00015bf0     0036  
    3985 00015c00     b00d          MOVE    a0,*A13(AT_Y),W         ;set Y COORDINATE
         00015c10     0120  
    3986 00015c20     09c8          MOVI    AUDLCOIN,A8             ;NOW PRINT MONEY FOR 1ST 3
         00015c30     0001  
    3987 00015c40                   JSRP    PRINT_COL2
    3988 00015cb0                   JSRP    WAIT_BUT
    3989                    
    3990 00015d20     0d5f          calla   CLR_SCRN                ;Clr screen
         00015d30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   88

    3991 00015d50     09e0          movi    GAME_AUDS1,A0           ;Show 1st screen
         00015d60 00010860' 
    3992 00015d80                   JSRP    PRNT_AUD
    3993 00015df0                   JSRP    WAIT_BUT
    3994                    
    3995 00015e60     0d5f          calla   CLR_SCRN                ;Clr screen
         00015e70 00000000! 
    3996 00015e90     09e0          movi    GAME_AUDS2,A0           ;Show 2nd screen
         00015ea0 00010e00' 
    3997 00015ec0                   JSRP    PRNT_AUD
    3998 00015f30                   JSRP    WAIT_BUT
    3999                    
    4000 00015fa0     0d5f          calla   CLR_SCRN                ;Clr screen
         00015fb0 00000000! 
    4001 00015fd0     09e0          movi    GAME_AUDS2a,A0          ;Show 3rd screen
         00015fe0 000113a0' 
    4002 00016000                   JSRP    PRNT_AUD
    4003 00016070                   JSRP    WAIT_BUT
    4004                    
    4005 000160e0     0d5f          calla   CLR_SCRN                ;Clr screen
         000160f0 00000000! 
    4006 00016110     09e0          movi    GAME_AUDS3a,A0          ;Show 4th screen data
         00016120 000115e0' 
    4007 00016140                   JSRP    PRNT_AUD
    4008 000161b0     09e0          movi    GAME_AUDS3b,A0
         000161c0 00011940' 
    4009 000161e0                   JSRP    PRNT_AUD
    4010 00016250     09e0          movi    GAME_AUDS3c,A0
         00016260 00011ca0' 
    4011 00016280                   JSRP    PRNT_AUD
    4012 000162f0     09e0          movi    GAME_AUDS3d,A0
         00016300 00012000' 
    4013 00016320                   JSRP    PRNT_AUD
    4014 00016390     09e8          movi    GAUD_P3HEAD1,a8         ;and the page headers
         000163a0 00012360' 
    4015 000163c0                   JSRP    L_MESS
    4016 00016430     09e8          movi    GAUD_P3HEAD2,a8
         00016440 00012440' 
    4017 00016460                   JSRP    L_MESS
    4018 000164d0     09e8          movi    GAUD_P3HEAD3,a8
         000164e0 00012510' 
    4019 00016500                   JSRP    L_MESS
    4020 00016570     09e8          movi    GAUD_P3HEAD4,a8
         00016580 000125e0' 
    4021 000165a0                   JSRP    L_MESS
    4022 00016610     09e8          movi    GAUD_P3HEAD5,a8
         00016620 000126b0' 
    4023 00016640                   JSRP    L_MESS
    4024 000166b0     09e8          movi    GAUD_P3HEAD6,a8
         000166c0 00012780' 
    4025 000166e0                   JSRP    L_MESS
    4026 00016750                   JSRP    WAIT_BUT
    4027                    
    4028                            ;volume adjust
    4029 000167c0                   JSRP    GO_VOL
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   89

    4030                    
    4031 00016830     c080          JAUC    DIAG_EX                 ;NOW GET OUT!
         00016840 00000000! 
    4032                    
    4033                    
    4034                    **************************************************************************
    4035                    * PRNT_AUD - THIS IS CALLED TO PRINT OUT AN AUDIT TABLE
    4036                    
    4037              0100  AT_PTR   EQU    PDATA                   ;LONG
    4038              0120  AT_Y     EQU    PDATA+LONG_SIZE         ;WORD
    4039              0130  AT_DY    EQU    AT_Y+WORD_SIZE          ;WORD
    4040              0140  AT_LX    EQU    AT_DY+WORD_SIZE         ;WORD LEFT MARGIN X
    4041              0150  AT_RX    EQU    AT_LX+WORD_SIZE         ;WORD RIGHT MARGIN X
    4042              0160  AT_OBJ   EQU    AT_RX+WORD_SIZE         ;LONG OBJECT POINTER FOR COLLECTION ROUT
    4043              0180  AT_MESS  EQU    AT_OBJ+LONG_SIZE        ;LONG PRINT_MONEY MESSAGE STASH
    4044                            
    4045 00016860           PRNT_AUD
    4046 00016860     9401          MOVE    *A0+,A1                 ;GET STARTING HEIGHT
    4047 00016870     b02d          MOVE    A1,*A13(AT_Y)           ;STORE
         00016880     0120  
    4048                    
    4049 00016890     9401          MOVE    *A0+,A1                 ;GET DY TO USE
    4050 000168a0     b02d          MOVE    A1,*A13(AT_DY)          ;STASH IT AWAY
         000168b0     0130  
    4051                    
    4052 000168c0     9401          MOVE    *A0+,A1                 ;GET LEFT MARGIN
    4053 000168d0     b02d          MOVE    A1,*A13(AT_LX)          ;STORE
         000168e0     0140  
    4054                    
    4055 000168f0     9401          MOVE    *A0+,A1                 ;GET RIGHT MARGIN
    4056 00016900     b02d          MOVE    A1,*A13(AT_RX)          ;STASH IT AWAY
         00016910     0150  
    4057                    
    4058 00016920     b20d          MOVE    A0,*A13(AT_PTR),L       ;SAVE POINTER INTO AREA
         00016930     0100  
    4059                    
    4060 00016940           PA1     JSRP    aud_prtone
    4061                    
    4062 000169b0     b7a0          MOVE    *A13(AT_PTR),A0,L       ;GET POINTER
         000169c0     0100  
    4063 000169d0     0b00          ADDI    AUD_T_SIZE,A0
         000169e0     0060  
    4064 000169f0     b20d          MOVE    A0,*A13(AT_PTR),L       ;PUT BACK
         00016a00     0100  
    4065                    
    4066 00016a10     0d3f          CALLR   ADD_AUDIT_DY
         00016a20     0009  
    4067                    
    4068 00016a30     8601          MOVE    *A0,A1,L                ;ARE WE DONE?
    4069 00016a40     cbef          JRNZ    PA1
    4070 00016a50                   SLEEPK  2
    4071                    
    4072 00016a90                   RETP
    4073                    
    4074                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   90

    4075                    *                                                                        *
    4076                    *          ADD_AUDIT_DY                                                  *
    4077                    *                                                                        *
    4078                    *          THIS IS CALLED TO MOVE THE AUDIT Y (STORE IN                  *
    4079                    *          PROCESS AREA) TO THE NEXT AUDIT BY ADDING THE                 *
    4080                    *          CURRENT DY (ALSO STORED IN PROCESS AREA).                     *
    4081                    *                                                                        *
    4082                    **************************************************************************
    4083 00016ac0           ADD_AUDIT_DY
    4084 00016ac0     098f          MMTM    SP,A1,A2
         00016ad0     6000  
    4085 00016ae0     b5a1          MOVE    *A13(AT_Y),A1,W
         00016af0     0120  
    4086 00016b00     b5a2          MOVE    *A13(AT_DY),A2,W        ;GET DELTA Y
         00016b10     0130  
    4087 00016b20     4041          ADD     A2,A1                   ;MOVE THE Y DOWN
    4088 00016b30     b02d          MOVE    A1,*A13(AT_Y),W
         00016b40     0120  
    4089 00016b50     09af          MMFM    SP,A1,A2
         00016b60     0006  
    4090 00016b70     0960          RETS
    4091                    
    4092 00016b80           BEGIN_AUDIT
    4093 00016b80     098f          MMTM    SP,A0
         00016b90     8000  
    4094 00016ba0     5600          CLR     A0
    4095 00016bb0     0580          MOVE    A0,@BAD_AUD,W           ;MONITOR CORRUPTION.
         00016bc0 00000000! 
    4096 00016be0     09af          MMFM    SP,A0
         00016bf0     0001  
    4097 00016c00     0960          RETS
    4098                    
    4099                    ********************************
    4100                    * Print an audit line
    4101                    
    4102 00016c10            SUBRP  aud_prtone
    4103                    
    4104 00016c10     0d3f          CALLR   BEGIN_AUDIT
         00016c20     fff5  
    4105 00016c30     b7a3          MOVE    *A13(AT_PTR),A3,L       ;GET POINTER
         00016c40     0100  
    4106 00016c50     b664          MOVE    *A3(AUD_ROUTINE),A4,L
         00016c60     0020  
    4107 00016c70     ca05          jrz     apo20                   ;No code?
    4108                    
    4109 00016c80     09e7          movi    apo50,a7
         00016c90 00016da0' 
    4110 00016cb0     a2ec          MOVE    A7,-*A12,L              ;PUSH RET ADDR
    4111 00016cc0     0164          JUMP    A4                      ;"CALL" THE ROUTINE
    4112                    
    4113 00016cd0     b460  apo20   MOVE    *A3(AUD_NUMBER),A0      ;FETCH THE AUDIT NUMBER
         00016ce0     0040  
    4114 00016cf0     0d5f          CALLA   GET_AUD                 ;TURN INTO AUDIT COUNT!
         00016d00 00000000! 
    4115 00016d20     4c23          MOVE    A1,A3                   ;PROTECT FOR A SECOND.
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   91

    4116 00016d30                   JSRP    NUMBER_WORK             ;GET THE NUMBER IN A3 UP THERE!
    4117                    
    4118 00016da0           apo50
    4119 00016da0     09e8          movi    MESS_AUD_LINE,a8
         00016db0 00005320" 
    4120 00016dd0     0d5f          calla   LM_SETUP                ;Setup for audit printing
         00016de0 00000000! 
    4121                    
    4122 00016e00     b7a3          move    *a13(AT_PTR),a3,L       ;Get *audit
         00016e10     0100  
    4123 00016e20     b466          move    *a3(AUD_COLOR),a6
         00016e30     0050  
    4124 00016e40     b668          move    *a3(AUD_MESS),a8,L      ;Get *text
         00016e50     0000  
    4125                    
    4126 00016e60     0300          jruc    LEFT_FINISH
    4127                    
    4128                    
    4129                    ********************************
    4130                    * LEFT_FINISH AND RIGHT_FINISH
    4131                    *
    4132                    * THESE ARE CALLED TO PUT AUDIT INFO
    4133                    * ON THE LEFT OR RIGHT SIDE ONCE A8 POINTS AT
    4134                    * THE CORRECT DATA TO PRINT
    4135                    
    4136 00016e70           LEFT_FINISH
    4137 00016e70     0d3f          CALLR   TURN_RED_IF_NEC
         00016e80     0036  
    4138 00016e90     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00016ea0     003f  
    4139 00016eb0     0d3f          CALLR   SET_LEFT_X              ;SET FOR LEFT X
         00016ec0     0046  
    4140 00016ed0                   JSRP    LM_FINIS                ;AND TYPE UP THE MESSAGE!
    4141 00016f40                   RETP
    4142                    
    4143 00016f70           RIGHT_FINISH
    4144 00016f70     0d3f          CALLR   TURN_RED_IF_NEC         ;CHANGE COLOR IF CORRUPTED.
         00016f80     0026  
    4145 00016f90     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00016fa0     002f  
    4146 00016fb0     0d3f          CALLR   SET_RIGHT_X
         00016fc0     003e  
    4147 00016fd0                   JSRP    LM_FINIS                ;FINISH THE JOB!
    4148                    
    4149 00017040     05a0          MOVE    @BAD_AUD,A0,W          ;IS IT CORRUPTED?
         00017050 00000000! 
    4150 00017070     ca14          JRZ     RFX                    ;NOPE....RETURN
    4151                    
    4152 00017080     09e8          MOVI    MESS_ERROR,A8
         00017090 000051b0" 
    4153 000170b0     0d5f          CALLA   LM_SETUP               ;SETUP "ERROR"
         000170c0 00000000! 
    4154                    
    4155 000170e0     0d3f          CALLR   SET_FOR_Y              ;SET FOR AUDIT'S Y
         000170f0     001a  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   92

    4156 00017100     0b29          ADDI    40000H,A9              ;PUSH 4 Y UNITS TO CENTER
         00017110 00040000  
    4157 00017130     0d3f          CALLR   SET_RIGHT_X
         00017140     0026  
    4158 00017150                   JSRP    LM_FINIS               ;FINISH THE JOB!
    4159                    
    4160 000171c0           RFX     RETP
    4161                    
    4162 000171f0           TURN_RED_IF_NEC
    4163 000171f0     098f          MMTM    SP,A3
         00017200     1000  
    4164 00017210     05a3          MOVE    @BAD_AUD,A3     ;CHANGE TO RED?
         00017220 00000000! 
    4165 00017240     ca02          JRZ     DAA_1           ;NOPE...ITS OK!
    4166 00017250     09c6          MOVI    ROBO_RED,A6    ;CHANGE COLOR TO RED
         00017260     0303  
    4167 00017270     09af  DAA_1   MMFM    SP,A3
         00017280     0008  
    4168 00017290     0960          RETS
    4169                                            
    4170 000172a0           SET_FOR_Y
    4171 000172a0     098f          MMTM    SP,A3
         000172b0     1000  
    4172 000172c0     b5a3          MOVE    *A13(AT_Y),A3,W   ;GET Y COORDINATE
         000172d0     0120  
    4173 000172e0     2603          SLL     16,A3             ;PUT IT IN POSITION
    4174 000172f0     ee69          MOVY    A3,A9             ;PUT IT IN PLACE
    4175 00017300     09af          MMFM    SP,A3
         00017310     0008  
    4176 00017320     0960          RETS
    4177                    
    4178 00017330           SET_LEFT_X
    4179 00017330     098f          MMTM    SP,A3
         00017340     1000  
    4180 00017350     b5a3          MOVE    *A13(AT_LX),A3,W
         00017360     0140  
    4181 00017370     ec69          MOVX    A3,A9             ;PUT THE X IN PLACE
    4182 00017380     09af          MMFM    SP,A3
         00017390     0008  
    4183 000173a0     0960          RETS
    4184                    
    4185 000173b0           SET_RIGHT_X
    4186 000173b0     098f          MMTM    SP,A3
         000173c0     1000  
    4187 000173d0     b5a3          MOVE    *A13(AT_RX),A3,W
         000173e0     0150  
    4188 000173f0     ec69          MOVX    A3,A9             ;PUT THE X IN PLACE
    4189 00017400     09af          MMFM    SP,A3
         00017410     0008  
    4190 00017420     0960          RETS
    4191                    
    4192                    **************************************************************************
    4193                    * NUMBER_WORK - Print audit number
    4194                    * A3=#
    4195                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   93

    4196 00017430           NUMBER_WORK
    4197 00017430     09e8          MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
         00017440 00005280" 
    4198 00017460     0d5f          CALLA   LM_SETUP
         00017470 00000000! 
    4199                    
    4200 00017490     4c68          MOVE    A3,A8                   ;NOW WE HAVE BINARY NUMBER
    4201 000174a0     0d5f          CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
         000174b0 00000000! 
    4202 000174d0     b7a6          move    *a13(AT_PTR),a6,L       ;Get *audit
         000174e0     0100  
    4203 000174f0     b4c6          move    *a6(AUD_COLOR),a6
         00017500     0050  
    4204 00017510     c0a5          jruc    RIGHT_FINISH
    4205                    
    4206                    **************************************************************************
    4207                    *                                                                        *
    4208                    *          GET_STARTS                                                    *
    4209                    *                                                                        *
    4210                    *          TOTAL GAME STARTS IN A2.                                      *
    4211                    *                                                                        *
    4212                    **************************************************************************
    4213 00017520           GET_STARTS
    4214 00017520     098f          MMTM    SP,A0,A1
         00017530     c000  
    4215 00017540     1a00          MOVK    AUD1STRT,A0
    4216 00017550     0d5f          CALLA   GET_AUD
         00017560 00000000! 
    4217 00017580     4c22          MOVE    A1,A2
    4218                    
    4219 00017590     1a20          MOVK    AUD2STRT,A0
    4220 000175a0     0d5f          CALLA   GET_AUD
         000175b0 00000000! 
    4221 000175d0     4022          ADD     A1,A2
    4222 000175e0     09af          MMFM    SP,A0,A1
         000175f0     0003  
    4223 00017600     0960          RETS
    4224                    
    4225                    **************************************************************************
    4226                    *                                                                        *
    4227                    *          GET_CONTS                                                     *
    4228                    *                                                                        *
    4229                    *          TOTAL GAME CONTINUES IN A2.                                   *
    4230                    *                                                                        *
    4231                    **************************************************************************
    4232 00017610           GET_CONTS
    4233 00017610     098f          MMTM    SP,A0,A1
         00017620     c000  
    4234 00017630     1a40          MOVK    AUD1CONT,A0
    4235 00017640     0d5f          CALLA   GET_AUD
         00017650 00000000! 
    4236 00017670     4c22          MOVE    A1,A2
    4237                    
    4238 00017680     1a60          MOVK    AUD2CONT,A0
    4239 00017690     0d5f          CALLA   GET_AUD
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   94

         000176a0 00000000! 
    4240 000176c0     4022          ADD     A1,A2
    4241 000176d0     09af          MMFM    SP,A0,A1
         000176e0     0003  
    4242 000176f0     0960          RETS
    4243                    
    4244                    
    4245                    **************************************************************************
    4246                    * Get total plays (Beginning+starts+continues)
    4247                    * Rets: A2=#
    4248                    
    4249 00017700           GET_PLAYS
    4250 00017700                   PUSH    a0
    4251                    ;       movk    AUDBEGIN,a0
    4252                    ;       calla   GET_AUD
    4253                    ;       move    a1,a0
    4254 00017710     5600          clr     a0
    4255 00017720     0d3f          callr   GET_STARTS      ;Actually middle starts
         00017730     ffde  
    4256 00017740     4040          add     a2,a0
    4257 00017750     0d3f          callr   GET_CONTS
         00017760     ffea  
    4258 00017770     4002          add     a0,a2
    4259 00017780                   PULL    a0
    4260 00017790     0960          rets
    4261                    
    4262                    **************************************************************************
    4263                    *                                                                        *
    4264                    *          PRINT_MONEY                                                   *
    4265                    *                                                                        *
    4266                    *          THIS IS CALLED TO PRINT OUT THE "MONEY" ON THE MONEY          *
    4267                    *          LINE OF THE AUDIT TABLE.                                      *
    4268                    *                                                                        *
    4269                    *          AUDIT X AND Y IS SET FOR THE LINE TO DISPLAY IT ON.           *
    4270                    *                                                                        *
    4271                    *          A8 HAS THE 1ST OF 3 AUDITS TO USE FOR THE CALCULATION         *
    4272                    *          A9 HAS THE MESSAGE TO LEFT JUSTIFY ON THE CURRENT LINE        *
    4273                    *                                                                        *
    4274                    **************************************************************************
    4275 000177a0           PRINT_COL
    4276 000177a0     09e9          MOVI    T_MONEY,A9           ;THIS ENTRYPOINT IS FOR COLLECTION MESSAGE
         000177b0 00005da0" 
    4277                            
    4278 000177d0           PRINT_MONEY
    4279 000177d0     b32d          MOVE    A9,*A13(AT_MESS),L   ;HOLD MESSAGE FOR WHEN WE NEED IT!
         000177e0     0180  
    4280 000177f0     09c0          MOVI    ADJCDIV,A0           ;IF DIVISOR IS ZERO..THEN ITS OFF!
         00017800     000a  
    4281 00017810     0d5f          CALLA   GET_ADJ
         00017820 00000000! 
    4282 00017840     ca5e          JRZ     NO_MONEY             ;THAT'S ALL FOLKS!
    4283                    
    4284 00017850     0d3f          CALLR   BEGIN_AUDIT          ;KEEP TRACK OF SANITY OF CALC.
         00017860     ff31  
    4285                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   95

    4286                    *       ROUTINE IN A2 FORMS STRING BASED ON 3 AUDITS STARTING
    4287                    *       WITH THE NUMBER IN A8.
    4288                    *
    4289 00017870     0d3f          CALLR   STR_OBJ              ;GET AN OBJECT FOR STRINGING
         00017880     00c5  
    4290 00017890     c859          JRC     NO_MONEY             ;COULDN'T GET AN OBJECT!
    4291                    
    4292 000178a0     0d3f          CALLR   SUM_COINS            ;ADD UP THE COIN PARTS IN A2
         000178b0     00f9  
    4293                    
    4294                    *
    4295                    *       WE'RE DOING A PREFIX STRING...NO PREFIX IF ITS BEEN TAMPERED
    4296                    *
    4297 000178c0     0d3f          CALLR   SIXP                 ;HAVE THE 6 BEEN TAMPERED
         000178d0     0116  
    4298 000178e0     ca07          JRZ     NO_PREFIX
    4299 000178f0     0d3f          CALLR   GET_CSPT             ;A6 POINTS AT CSECECT DATA.
         00017900     e86f  
    4300 00017910     b6c8          MOVE    *A6(CS_LMES),A8,L    ;LEFT STRING FOR MONEY TOTAL
         00017920     0110  
    4301 00017930     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         00017940 00000000! 
    4302                    
    4303 00017960           NO_PREFIX
    4304 00017960     1820          MOVK    1,A0                 ;DIVIDE COINS BY 1 IF ITS BEEN TAMPERED WITH
    4305 00017970     0d3f          CALLR   SIXP
         00017980     010b  
    4306 00017990     ca05          JRZ     DIV_BY_1             ;TAMPERED WITH...DIVIDE BY 1 FOR "COINS"
    4307                    
    4308 000179a0     09c0          MOVI    ADJCDIV,A0           ;GET THE COIN PARTS PLEASE
         000179b0     000a  
    4309 000179c0     0d5f          CALLA   GET_ADJ
         000179d0 00000000! 
    4310                    *
    4311                    *       GET QUOTIENT IN A2
    4312                    *       REMAINDER IN A3
    4313                    *
    4314 000179f0           DIV_BY_1
    4315 000179f0     4c43          MOVE    A2,A3                ;SETUP <A2><A3> AS DIVIDEND
    4316 00017a00     5642          CLR     A2
    4317 00017a10     5a02          DIVU    A0,A2                ;DIVIDE UNITS/DIVISOR
    4318                    
    4319 00017a20     4c48          MOVE    A2,A8                ;WE NEED TO PUT QUOTIENT IN STRING
    4320 00017a30     0d5f          CALLA   HEXTOASC             ;THIS FORMS STRING FOR QUOTIENT
         00017a40 00000000! 
    4321                    
    4322 00017a60     0d5f          CALLA   STRCAT               ;ADD QUOTIENT TO PRINTOUT
         00017a70 00000000! 
    4323                    
    4324 00017a90     0b40          CMPI    1,A0                 ;IS DIVISOR ONE??????
         00017aa0     fffe  
    4325 00017ab0     ca0e          JRZ     NOFRAC               ;YEP.......NO DECIMAL!
    4326                    *
    4327                    *       WE HAVE A DIVISOR.....WE NEED TO DISPLAY CENTS.
    4328                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   96

    4329 00017ac0     09e8          MOVI    ME_DECIMAL,A8        ;ADD DECIMAL POINT
         00017ad0 00013610" 
    4330 00017af0     0d5f          CALLA   STRCAT               ;ITS THERE!
         00017b00 00000000! 
    4331                    *
    4332                    *       REMAINDER IS IN A3....TURN IT TO 100THS.
    4333                    *
    4334 00017b20     09c2          MOVI    100,A2
         00017b30     0064  
    4335 00017b40     5e43          MPYU    A2,A3                ;REMAINDER TIMES 100
    4336 00017b50     4c62          MOVE    A3,A2                ;DIVIDEND IN A2
    4337                    
    4338 00017b60     0d3f          CALLR   ROUNDED_A0_INTO_A2
         00017b70     00a8  
    4339 00017b80     0d3f          CALLR   A2_100TH             ;CAT THE 100THS IN A2 TO THE A7 STRING.
         00017b90     00b6  
    4340                    
    4341 00017ba0           NOFRAC
    4342 00017ba0     09e8          MOVI    COINS_TRAIL,A8           ;ASSUME IT WILL BE "COINS"
         00017bb0 00013890" 
    4343 00017bd0     0d3f          CALLR   SIXP                 ;TAMPERED?
         00017be0     00e5  
    4344 00017bf0     ca02          JRZ     COIN_SUF             ;YEP....USE " COINS"
    4345 00017c00     b6c8          MOVE    *A6(CS_RMES),A8,L    ;FINISH IT OFF WITH RIGHT STRING
         00017c10     0130  
    4346                    
    4347 00017c20           COIN_SUF
    4348 00017c20     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         00017c30 00000000! 
    4349 00017c50     09e8          MOVI    M_MONEY,A8                ;MESSAGE FOR THIS LINE PASSED IN A9
         00017c60 00005d00" 
    4350 00017c80     0d5f          CALLA   LM_SETUP
         00017c90 00000000! 
    4351                    
    4352 00017cb0     07a8          MOVE    @TMPOBJ,A8,L         ;POINTER TO MONEY STRING
         00017cc0 000003e0- 
    4353 00017ce0                   JSRP    RIGHT_FINISH            ;PUT ON RIGHT MARGIN
    4354                    
    4355 00017d50     0d3f          CALLR   STR_FREE
         00017d60     0155  
    4356                    
    4357 00017d70     b7a8          MOVE    *A13(AT_MESS),A8,L      ;SETUP PASSED MESSAGE
         00017d80     0180  
    4358 00017d90     0d5f          CALLA   LM_SETUP
         00017da0 00000000! 
    4359 00017dc0                   JSRP    LEFT_FINISH             ;PUT UP PASSED MESSAGE.
    4360 00017e30           NO_MONEY
    4361 00017e30                   RETP
    4362                    
    4363                    **************************************************************************
    4364                    * prints up collection minus $$$
    4365                    *
    4366                    
    4367 00017e60           PRINT_COL2
    4368 00017e60     09e9          MOVI    T_MONEY2,A9          ;THIS ENTRYPOINT IS FOR COLLECTION MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   97

         00017e70 00005ed0" 
    4369                            
    4370 00017e90     b32d          MOVE    A9,*A13(AT_MESS),L   ;HOLD MESSAGE FOR WHEN WE NEED IT!
         00017ea0     0180  
    4371 00017eb0     09c0          MOVI    ADJCDIV,A0           ;IF DIVISOR IS ZERO..THEN ITS OFF!
         00017ec0     000a  
    4372 00017ed0     0d5f          CALLA   GET_ADJ
         00017ee0 00000000! 
    4373 00017f00     ca5a          JRZ     NO_MONEY2            ;THAT'S ALL FOLKS!
    4374                    
    4375 00017f10     0d3f          CALLR   BEGIN_AUDIT          ;KEEP TRACK OF SANITY OF CALC.
         00017f20     fec5  
    4376                    *
    4377                    *       ROUTINE IN A2 FORMS STRING BASED ON 3 AUDITS STARTING
    4378                    *       WITH THE NUMBER IN A8.
    4379                    *
    4380 00017f30     0d3f          CALLR   STR_OBJ              ;GET AN OBJECT FOR STRINGING
         00017f40     0059  
    4381 00017f50     c855          JRC     NO_MONEY2            ;COULDN'T GET AN OBJECT!
    4382                    
    4383 00017f60     0d3f          CALLR   SUM_COINS            ;ADD UP THE COIN PARTS IN A2
         00017f70     008d  
    4384                    
    4385                    *
    4386                    *       WE'RE DOING A PREFIX STRING...NO PREFIX IF ITS BEEN TAMPERED
    4387                    *
    4388                    ;;      CALLR   SIXP                 ;HAVE THE 6 BEEN TAMPERED
    4389                    ;;      JRZ     NO_PREFIX2
    4390                    ;;      CALLR   GET_CSPT             ;A6 POINTS AT CSECECT DATA.
    4391                    ;;      MOVE    *A6(CS_LMES),A8,L    ;LEFT STRING FOR MONEY TOTAL
    4392 00017f80     09e8          movi    M_VERINF,a8
         00017f90 00005fd0" 
    4393 00017fb0     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         00017fc0 00000000! 
    4394                    
    4395 00017fe0           NO_PREFIX2
    4396 00017fe0     1820          MOVK    1,A0                 ;DIVIDE COINS BY 1 IF ITS BEEN TAMPERED WITH
    4397 00017ff0     0d3f          CALLR   SIXP
         00018000     00a3  
    4398 00018010     ca05          JRZ     DIV_BY_12            ;TAMPERED WITH...DIVIDE BY 1 FOR "COINS"
    4399                    
    4400 00018020     09c0          MOVI    ADJCDIV,A0           ;GET THE COIN PARTS PLEASE
         00018030     000a  
    4401 00018040     0d5f          CALLA   GET_ADJ
         00018050 00000000! 
    4402                    *
    4403                    *       GET QUOTIENT IN A2
    4404                    *       REMAINDER IN A3
    4405                    *
    4406 00018070           DIV_BY_12
    4407 00018070     4c43          MOVE    A2,A3                ;SETUP <A2><A3> AS DIVIDEND
    4408 00018080     5642          CLR     A2
    4409 00018090     5a02          DIVU    A0,A2                ;DIVIDE UNITS/DIVISOR
    4410                    
    4411 000180a0     4c48          MOVE    A2,A8                ;WE NEED TO PUT QUOTIENT IN STRING
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   98

    4412 000180b0     0d5f          CALLA   HEXTOASC             ;THIS FORMS STRING FOR QUOTIENT
         000180c0 00000000! 
    4413                    
    4414 000180e0     0d5f          CALLA   STRCAT               ;ADD QUOTIENT TO PRINTOUT
         000180f0 00000000! 
    4415                    
    4416 00018110     0b40          CMPI    1,A0                 ;IS DIVISOR ONE??????
         00018120     fffe  
    4417 00018130     ca0e          JRZ     NOFRAC2              ;YEP.......NO DECIMAL!
    4418                    *
    4419                    *       WE HAVE A DIVISOR.....WE NEED TO DISPLAY CENTS.
    4420                    *
    4421                    ;;      MOVI    ME_DECIMAL,A8        ;ADD DECIMAL POINT
    4422 00018140     09e8          MOVI    ME_DASH,A8           ;ADD DASH
         00018150 00013600" 
    4423 00018170     0d5f          CALLA   STRCAT               ;ITS THERE!
         00018180 00000000! 
    4424                    *
    4425                    *       REMAINDER IS IN A3....TURN IT TO 100THS.
    4426                    *
    4427 000181a0     09c2          MOVI    100,A2
         000181b0     0064  
    4428 000181c0     5e43          MPYU    A2,A3                ;REMAINDER TIMES 100
    4429 000181d0     4c62          MOVE    A3,A2                ;DIVIDEND IN A2
    4430                    
    4431 000181e0     0d3f          CALLR   ROUNDED_A0_INTO_A2
         000181f0     0040  
    4432 00018200     0d3f          CALLR   A2_100TH             ;CAT THE 100THS IN A2 TO THE A7 STRING.
         00018210     004e  
    4433                    
    4434 00018220           NOFRAC2
    4435 00018220     09e8          MOVI    COINS_TRAIL,A8           ;ASSUME IT WILL BE "COINS"
         00018230 00013890" 
    4436 00018250     0d3f          CALLR   SIXP                 ;TAMPERED?
         00018260     007d  
    4437 00018270     ca02          JRZ     COIN_SUF2            ;YEP....USE " COINS"
    4438 00018280     b6c8          MOVE    *A6(CS_RMES),A8,L    ;FINISH IT OFF WITH RIGHT STRING
         00018290     0130  
    4439                    
    4440 000182a0           COIN_SUF2
    4441 000182a0     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         000182b0 00000000! 
    4442 000182d0     09e8          MOVI    M_MONEY,A8                ;MESSAGE FOR THIS LINE PASSED IN A9
         000182e0 00005d00" 
    4443 00018300     0d5f          CALLA   LM_SETUP
         00018310 00000000! 
    4444                    
    4445 00018330     07a8          MOVE    @TMPOBJ,A8,L         ;POINTER TO MONEY STRING
         00018340 000003e0- 
    4446 00018360                   JSRP    RIGHT_FINISH            ;PUT ON RIGHT MARGIN
    4447                    
    4448 000183d0     0d3f          CALLR   STR_FREE
         000183e0     00ed  
    4449                    
    4450 000183f0     b7a8          MOVE    *A13(AT_MESS),A8,L      ;SETUP PASSED MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   99

         00018400     0180  
    4451 00018410     0d5f          CALLA   LM_SETUP
         00018420 00000000! 
    4452 00018440                   JSRP    LEFT_FINISH             ;PUT UP PASSED MESSAGE.
    4453 000184b0           NO_MONEY2
    4454 000184b0                   RETP
    4455                    
    4456                    **************************************************************************
    4457                    *                                                                        *
    4458                    *          STR_OBJ                                                       *
    4459                    *                                                                        *
    4460                    *          THIS IS CALLED TO GET AN OBJECT FOR                           *
    4461                    *          CONCATONATING STRINGS TOGETHER.                               *
    4462                    *                                                                        *
    4463                    *          A7 POINTS AT NULL STRING                                      *
    4464                    *                                                                        *
    4465                    *          NOTE THAT THIS IS NO LONGER RE-ENTRANT!                       *
    4466                    *                                                                        *
    4467                    *          YOU MUST CALL STR_FREE BEFORE SLEEPING!                       *
    4468                    *                                                                        *
    4469                    **************************************************************************
    4470 000184e0           STR_OBJ
    4471 000184e0                   PUSH    a0,a1,a14
    4472 00018500     0d5f          CALLA   GETOBJ               ;USE AN OBJECT BLOCK FOR STRING MANIPULATION
         00018510 00000000! 
    4473 00018530     cb02          JRNZ    STR_O1
    4474                    *
    4475                    *       NO OBJECTS DURING TEST MODE
    4476                    *
    4477 00018540     0de0          SETC    
    4478 00018550     c007          JRUC    STR_OFAIL
    4479                    
    4480 00018560           STR_O1
    4481 00018560     0780          MOVE    A0,@TMPOBJ,L         ;SAVE TO FREE LATER
         00018570 000003e0- 
    4482 00018590     4c07          MOVE    A0,A7                ;THIS IS WHERE IT BELONGS.
    4483 000185a0     5600          CLR     A0
    4484 000185b0     8c07          MOVB    A0,*A7               ;MAKE STRING NULL
    4485 000185c0     0320          CLRC                         ;RETURN SUCCESS
    4486 000185d0           STR_OFAIL
    4487 000185d0                   PULL    a0,a1,a14
    4488 000185f0     0960          RETS
    4489                    
    4490                    **************************************************************************
    4491                    *                                                                        *
    4492                    *          ROUNDED_A0_INTO_A2                                            *
    4493                    *                                                                        *
    4494                    *          THIS DIVIDES A0 INTO A2.  IT LEAVES THE RESULT IN A2          *
    4495                    *          AND ROUNDS UP IF NECESSARY.                                   *
    4496                    *                                                                        *
    4497                    **************************************************************************
    4498 00018600           ROUNDED_A0_INTO_A2
    4499 00018600     098f          MMTM    SP,A3
         00018610     1000  
    4500 00018620     4c00          MOVE    A0,A0                ;DIVIDE BY ZERO?
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  100

    4501 00018630     cb02          JRNZ    NDZ
    4502 00018640     4c02          MOVE    A0,A2                ;RETURN ZERO
    4503 00018650     c007          JRUC    NOROUND
    4504 00018660           NDZ
    4505 00018660     4c43          MOVE    A2,A3
    4506 00018670     5642          CLR     A2                   ;<A2> <A3> AS DIVIDEND
    4507 00018680     5a02          DIVU    A0,A2                ;DIVIDE AND A2 = PENNIES....A3 = REMAINDER
    4508 00018690     2423          SLL     1,A3                 ;SHIFT REMAINDER
    4509 000186a0     4803          CMP     A0,A3                ;COMPARE TO DIVISOR
    4510 000186b0     c801          JRLO    NOROUND              ;TOO LOW TO ROUND UP
    4511 000186c0     1022          INC     A2                   ;A2 HAS CORRECT PENNIES
    4512 000186d0           NOROUND
    4513 000186d0     09af          MMFM    SP,A3
         000186e0     0008  
    4514 000186f0     0960          RETS
    4515                    
    4516                    **************************************************************************
    4517                    *                                                                        *
    4518                    *          A2_100TH                                                      *
    4519                    *                                                                        *
    4520                    *          A7 HAS A STRING TO BE PRINTED.  WE HAVE THE                   *
    4521                    *          LAST TWO NUMBERS (NOT TO BE LEAD ZERO BLANKED) IN             *
    4522                    *          A2.  CONCATONATE THEM ONTO THE A7 STRING.                     *
    4523                    *                                                                        *
    4524                    *          THIS IS USED FOR PENNIES, HOURS AND MINUTES.                  *
    4525                    *                                                                        *
    4526                    **************************************************************************
    4527 00018700           A2_100TH
    4528 00018700     098f          MMTM    SP,A8
         00018710     0080  
    4529 00018720     0b42          CMPI    9,A2                 ;9 OR LESS REQUIES LEAD ZERO.
         00018730     fff6  
    4530 00018740     c306          JRHI    NOLEAD
    4531                    
    4532 00018750     09e8          MOVI    ME_ZERO,A8           ;THROW IN THE LEAD ZERO
         00018760 000135f0" 
    4533 00018780     0d5f          CALLA   STRCAT               ;THIS DOES IT!
         00018790 00000000! 
    4534                    
    4535 000187b0           NOLEAD
    4536 000187b0     4c48          MOVE    A2,A8
    4537 000187c0     0d5f          CALLA   HEXTOASC             ;MAKE STRING
         000187d0 00000000! 
    4538 000187f0     0d5f          CALLA   STRCAT               ;PUT IT IN!
         00018800 00000000! 
    4539 00018820     09af          MMFM    SP,A8
         00018830     0100  
    4540 00018840     0960          RETS
    4541                    
    4542                    **************************************************************************
    4543                    *                                                                        *
    4544                    *          SUM_COINS                                                     *
    4545                    *                                                                        *
    4546                    *          A8 HAS FIRST OF THE 4 AUDIT NUMBERS OF INTEREST               *
    4547                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  101

    4548                    *          RETURN COINS TIMES THEIR FACTORS IN A2.                       *
    4549                    *                                                                        *
    4550                    **************************************************************************
    4551 00018850           SUM_COINS
    4552 00018850     098f          MMTM    SP,A0,A1,A3,A6,A4
         00018860     da00  
    4553                    
    4554 00018870     4d00          MOVE    A8,A0                     ;POINT AT AUDIT NUMBER
    4555 00018880     5642          CLR     A2                        ;SUM = ZERO
    4556                    
    4557 00018890     0d3f          CALLR   GET_CSPT                  ;A6 POINTS AT CSELECT TABLE
         000188a0     e775  
    4558 000188b0     0b06          ADDI    CS_LVAL,A6                ;POINT AT 1ST MULTIPLIER
         000188c0     00c0  
    4559                    
    4560 000188d0     09c4          MOVI    CHUTES,A4                 ;NOW...ITERATE OVER THE CHUTES
         000188e0     0005  
    4561                    
    4562 000188f0           NEXT_CHUTE
    4563 000188f0     94c3          MOVE    *A6+,A3,W                 ;GET MULTPLIER FOR THIS CHUTE
    4564 00018900     0d3f          CALLR   FIX_A3                    ;REPLACE A3 WITH 1 (MULTIPLIER) IF
         00018910     000d  
    4565                                                              ;ITS SOME CUSTOM MODE.
    4566 00018920     0d3f          CALLR   ADD_AUD_A0_TIMES_A3_TO_A2
         00018930     0005  
    4567 00018940     1020          INC     A0                        ;NEXT AUDIT
    4568 00018950     3ce4          DSJS    A4,NEXT_CHUTE
    4569                    
    4570 00018960     09af          MMFM    SP,A0,A1,A3,A6,A4
         00018970     005b  
    4571 00018980     0960          RETS
    4572                    
    4573 00018990           ADD_AUD_A0_TIMES_A3_TO_A2
    4574 00018990     0d5f          CALLA   GET_AUD                   ;FETCH THE AUDIT
         000189a0 00000000! 
    4575 000189c0     5e23          MPYU    A1,A3                     ;TIME THE FACTOR
    4576 000189d0     4062          ADD     A3,A2
    4577 000189e0     0960          RETS
    4578                    
    4579                    **************************************************************************
    4580                    * FIX_A3
    4581                    *
    4582                    * THIS IS CALLED BY THE LOW LEVEL MONEY TOTALIZER.
    4583                    * THE MULTIPLIER FOR THE COIN SLOT THAT ITS WORKING
    4584                    * ON IS IN A3.  WE REPLACE IT WITH "1" TO SUM "TOTAL COINS"
    4585                    * IF ITS IN A NON-STANDARD COIN MODE.
    4586                    *
    4587                    **************************************************************************
    4588 000189f0           FIX_A3
    4589 000189f0     0d3f          CALLR   SIXP                 ;HAS IT BEEN TAMPERED WITH?
         00018a00     0003  
    4590 00018a10     cb01          JRNZ    FIX_A3X              ;NOPE...LEAVE A3
    4591                    
    4592 00018a20     1823          MOVK    1,A3
    4593 00018a30           FIX_A3X
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  102

    4594 00018a30     0960          RETS
    4595                    
    4596                    **************************************************************************
    4597                    * SIXP
    4598                    *
    4599                    * THIS IS CALLED TO SEE IF THE 1ST 6 COIN PARAMETERS HAVE
    4600                    * BEEN TAMPERED WITH.
    4601                    *
    4602                    * Z=YES
    4603                    *
    4604                    **************************************************************************
    4605 00018a40           SIXP
    4606 00018a40     098f          MMTM    SP,A0
         00018a50     8000  
    4607 00018a60     09c0          MOVI    ADJ1ST6,A0
         00018a70     0016  
    4608 00018a80     0d5f          CALLA   GET_ADJ         ;HAS IT BEEN TAMPERED WITH?
         00018a90 00000000! 
    4609 00018ab0     09af          MMFM    SP,A0
         00018ac0     0001  
    4610 00018ad0     0960          RETS
    4611                    
    4612 00018ae0           STARTS
    4613 00018ae0     0d3f          CALLR   GET_STARTS
         00018af0     fea2  
    4614 00018b00     4c43          MOVE    A2,A3           ;GET IN PRINTOUT REG.
    4615 00018b10     c000          jruc    NUMBER_WORK     ;AND PRINT IT
         00018b20     fe90  
    4616                    
    4617 00018b30           CONTINS
    4618 00018b30     0d3f          CALLR   GET_CONTS
         00018b40     feac  
    4619 00018b50     4c43          MOVE    A2,A3           ;GET IN PRINTOUT REG.
    4620 00018b60     c000          jruc    NUMBER_WORK     ;AND PRINT IT
         00018b70     fe8b  
    4621                    
    4622 00018b80           DOPLAYS
    4623 00018b80     0d3f          CALLR   GET_PLAYS
         00018b90     feb6  
    4624 00018ba0     4c43          MOVE    A2,A3           ;PUT IN PLACE
    4625 00018bb0     c000          jruc    NUMBER_WORK
         00018bc0     fe86  
    4626                    
    4627 00018bd0           DOHSLEFT
    4628 00018bd0     09c0          MOVI    ADJHSRES,A0
         00018be0     000f  
    4629 00018bf0     0d5f          CALLA   GET_ADJ         ;IS IF OFF?
         00018c00 00000000! 
    4630 00018c20     ca06          JRZ     DOHSOFF         ;YEP...PRINT IT
    4631                    
    4632 00018c30     0d5f          CALLA   GET_HSC         ;GET THE COUNTER VALUE
         00018c40 00000000! 
    4633 00018c60     4c03          MOVE    A0,A3
    4634 00018c70     c000          jruc    NUMBER_WORK     ;AND SHOW IT!
         00018c80     fe7a  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  103

    4635                    
    4636 00018c90           DOHSOFF
    4637 00018c90     09e8          MOVI    MESS_AUD_NUM,A8
         00018ca0 00005280" 
    4638 00018cc0     0d5f          CALLA   LM_SETUP        ;SETUP FOR AUDIT PRINTING.
         00018cd0 00000000! 
    4639                    
    4640 00018cf0     09e8          MOVI    M_HSOFF,A8      ;THIS EFFECTIVELY ERASES LINE!
         00018d00 00005c20" 
    4641 00018d20     c080          JAUC    RIGHT_FINISH
         00018d30 00016f70' 
    4642                    
    4643 00018d50           DO_P1MIN
    4644 00018d50     09c0          MOVI    AUD1TIME,A0
         00018d60     0014  
    4645 00018d70           P1MJ
    4646 00018d70     0d5f          CALLA   GET_AUD         ;TURN INTO NUMBER
         00018d80 00000000! 
    4647 00018da0     4c24          MOVE    A1,A4           ;MOVE NUMBER TO "HOUR" COMPUTATION REGGIE
    4648 00018db0     c005          JRUC    DH11            ;AND DO LIKE THE HOURS!
    4649                    
    4650                    
    4651 00018dc0           DO_P2MIN
    4652 00018dc0     09c0          MOVI    AUD2TIME,A0
         00018dd0     0015  
    4653 00018de0     c0f8          JRUC    P1MJ
    4654                    
    4655 00018df0           DO_HOURS
    4656 00018df0     0d3f          CALLR   TOT_TIME        ;READ OUT THE TOTAL TIME.
         00018e00     0053  
    4657 00018e10     4c85  DH11    MOVE    A4,A5           ;A5 HAS RUNNING PLAY TIME
    4658 00018e20     5684          CLR     A4              ;<A4><A5> READY FOR DIVISION
    4659 00018e30     1980          MOVK    12,A0
    4660 00018e40     5a04          DIVU    A0,A4           ;A4 HAS MINUTES
    4661 00018e50     0b45          CMPI    6,A5            ;ROUND PROPERLY
         00018e60     fff9  
    4662 00018e70     c801          JRLO    DH1             ;NOT ENOUGH
    4663 00018e80     1024          INC     A4
    4664 00018e90           DH1
    4665 00018e90     4c81          MOVE    A4,A1           ;NOW THIS DIVIDED BY 60 IS WHAT WE NEED
    4666 00018ea0     c017          jruc    P_TIME          ;DO IT!
    4667                    
    4668 00018eb0           DO_AVGT
    4669 00018eb0     0d3f          CALLR   TOT_TIME        ;A3 HAS WEIGHTED TIME
         00018ec0     0047  
    4670                    
    4671 00018ed0     0d3f  DOAVC   CALLR   GET_PLAYS       ;GET TOTAL PLAYS IN A2
         00018ee0     fe81  
    4672 00018ef0     4c40          MOVE    A2,A0           ;STASH IN A0.
    4673 00018f00     18a1          MOVK    5,A1            ;TURN INTO SECONDS
    4674 00018f10     5e23          MPYU    A1,A3           ;A3 HAS SECONDS OF INTEREST
    4675 00018f20     4c62          MOVE    A3,A2
    4676 00018f30     0d3f          CALLR   ROUNDED_A0_INTO_A2   ;DIVIDE A2 BY PLAYS (AND ROUND)
         00018f40     ff6b  
    4677 00018f50     4c41          MOVE    A2,A1           ;NOW GET IN PLACE FOR P_TIME
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  104

    4678 00018f60     c00b          jruc    P_TIME          ;DO IT!
    4679                    
    4680 00018f70           DO_ELAPSE
    4681 00018f70     0d3f          CALLR   TOT_TIME
         00018f80     003b  
    4682 00018f90     4c83          MOVE    A4,A3           ;USE ELAPSED TIME
    4683 00018fa0     c0f2          JRUC    DOAVC           ;AND THE REST IS IDENTICAL.
    4684                    
    4685                    
    4686 00018fb0           keyavg_prt
    4687                    ;       movi    AUDKEYTOT,a0
    4688                    ;       calla   GET_AUD
    4689                    ;       move    a1,a3
    4690                    ;       movi    AUDFULLGAMES,a0
    4691                    ;       calla   GET_AUD
    4692                    ;       divs    a1,a3
    4693                    ;       jruc    NUMBER_WORK     ;Print it
    4694                    
    4695                    
    4696 00018fb0           diff_prt
    4697 00018fb0     19c0          movk    ADJDIFF,a0
    4698 00018fc0     0d5f          calla   GET_ADJ
         00018fd0 00000000! 
    4699 00018ff0     4c03          move    a0,a3
    4700 00019000     c000          jruc    NUMBER_WORK     ;Print it
         00019010     fe41  
    4701                    
    4702                    
    4703                    **************************************************************************
    4704                    *                                                                        *
    4705                    *          P_TIME                                                        *
    4706                    *                                                                        *
    4707                    *          THIS IS CALLED TO DISPLAY AN AUDIT IN TIME (0:00)             *
    4708                    *          FORMAT.  THE NUMBER TO BE USED IS PASSED IN A1.               *
    4709                    *                                                                        *
    4710                    **************************************************************************
    4711 00019020           P_TIME
    4712 00019020     0d3f          CALLR   STR_OBJ         ;USE AN OBJECT BLOCK FOR STRING MANIPULATION
         00019030     ff4a  
    4713 00019040     c824          JRC     NO_OBJS         ;NO OBJECTS....PRINT NOTHING
    4714                    
    4715 00019050     5600          CLR     A0              ;DIVIDEND IN <A0><A1>
    4716 00019060     09c2          MOVI    60,A2
         00019070     003c  
    4717 00019080     5a40          DIVU    A2,A0           ;A0 = "MINUTES"....A1 = "SECONDS
    4718                    
    4719 00019090     0d5f          CALLA   CAT_A0          ;ADD A0 STRING TO A7 BUILD
         000190a0 00000000! 
    4720 000190c0     09e8          MOVI    ME_COLON,A8
         000190d0 00013620" 
    4721 000190f0     0d5f          CALLA   STRCAT          ;PUT THE COLON IN.
         00019100 00000000! 
    4722                    
    4723 00019120     4c22          MOVE    A1,A2           ;GET "SECONDS" IN A2
    4724 00019130     0d3f          CALLR   A2_100TH        ;AND GET THE 100THS IN.
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  105

         00019140     ff5b  
    4725                    
    4726 00019150     09e8          MOVI    MESS_AUD_NUM,A8 ;SETUP FOR AUDIT NUMBER
         00019160 00005280" 
    4727 00019180     0d5f          CALLA   LM_SETUP
         00019190 00000000! 
    4728 000191b0     b7a6          move    *a13(AT_PTR),a6,L       ;Get *audit
         000191c0     0100  
    4729 000191d0     b4c6          move    *a6(AUD_COLOR),a6
         000191e0     0050  
    4730                    
    4731 000191f0     4ce8          MOVE    A7,A8           ;PUT STRING CORRECT REGGIE
    4732 00019200                   JSRP    RIGHT_FINISH    ;PRINT THE LINE
    4733                    
    4734 00019270     0d3f          CALLR   STR_FREE        ;FREE UP THE OBJECT!
         00019280     0003  
    4735                    
    4736 00019290           NO_OBJS
    4737 00019290                   RETP                    ;NOW RETURN TO CALLER
    4738                    
    4739 000192c0           STR_FREE
    4740 000192c0     07a0          MOVE    @TMPOBJ,A0,L    ;GET OBJECT BACK
         000192d0 000003e0- 
    4741 000192f0     cb01          JRNZ    FREE_IT_NOW
    4742                    
    4743                            .IF     DEBUG
    4744                            LOCKUP
    4745                            .ENDIF
    4746 00019300     0960          RETS                    ;NO OBJECT...RETURN!
    4747                    
    4748 00019310           FREE_IT_NOW
    4749 00019310     c080          jauc    FREEOBJ         ;AND LET IT GO.
         00019320 00000000! 
    4750                            
    4751                    **************************************************************************
    4752                    *                                                                        *
    4753                    *       TOT_TIME                                                         *
    4754                    *                                                                        *
    4755                    *       (1 * P1TIME) + (2 * P2TIME) IN A3                                *
    4756                    *       ELAPSED TIME IN A4                                               *
    4757                    *                                                                        *
    4758                    **************************************************************************
    4759 00019340           TOT_TIME
    4760 00019340     098f          MMTM    SP,A0,A1
         00019350     c000  
    4761 00019360     09c0          MOVI    AUD1TIME,A0
         00019370     0014  
    4762 00019380     0d5f          CALLA   GET_AUD
         00019390 00000000! 
    4763 000193b0     4c23          MOVE    A1,A3
    4764 000193c0     4c24          MOVE    A1,A4
    4765 000193d0     09c0          MOVI    AUD2TIME,A0
         000193e0     0015  
    4766 000193f0     0d5f          CALLA   GET_AUD
         00019400 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  106

    4767 00019420     4024          ADD     A1,A4                ;A4 HAS SIMPLE SUM NOW
    4768 00019430     2421          SLL     1,A1                 ;DOUBLE THE PLAYER 2 TIME
    4769 00019440     4023          ADD     A1,A3
    4770 00019450     09af          MMFM    SP,A0,A1
         00019460     0003  
    4771 00019470     0960          RETS
    4772                    
    4773                    
    4774                    ********************************
    4775                    **** DATA SECTION BEGINS ****
    4776                    
    4777 000051b0                   .DATA
    4778                    
    4779                    
    4780                    
    4781                    ********************************
    4782                    * AUDIT TEXT
    4783                    
    4784 000051b0           MESS_ERROR
    4785 000051b0                   MESS_MAC RD7FONT,SPACING07,0,0,ROBO_RED,STRLNRM,0
    4786 00005250                   TXTLINE "  ERROR"
    4787                    
    4788 00005280           MESS_AUD_NUM
    4789 00005280                   MESS_MAC RD7FONT,SPACING20,367,227,ROBO_YELLOW,STRRNRM,0
    4790                    
    4791 00005320           MESS_AUD_LINE
    4792 00005320                   MESS_MAC RD7FONT,SPACING20,23,227,ROBO_YELLOW,STRLNRM,0
    4793                    
    4794                    
    4795 000053c0           MES_AUD TXTLINE "GAME AUDITS"
    4796                    
    4797 00005420           MES_BOOK
    4798 00005420                   TXTLINE "COIN BOOKKEEPING"
    4799                    
    4800 000054b0           M_LCOIN TXTLINE "LEFT SLOT COINS"
    4801 00005530           M_CCOIN TXTLINE "CENTER SLOT (3) COINS"
    4802 000055e0           M_RCOIN TXTLINE "RIGHT SLOT COINS"
    4803                    
    4804 00005670           M_LCOIN2 TXTLINE "WATCHDOG FEEDINGS"
    4805 00005700           M_CCOIN2 TXTLINE "SELF-CORRECTED CMOS ERRORS"
    4806 000057e0           M_RCOIN2 TXTLINE "PROCESS LIST RE-INITIALIZATIONS"
    4807                    
    4808 000058e0           M_XCOIN TXTLINE "EXTRA SLOT (4) COINS"
    4809 00005990           M_DBV   TXTLINE "BILL VALIDATOR"
    4810                    
    4811 00005a10           M_PAIDC TXTLINE "PAID CREDITS"
    4812                    
    4813 00005a80           M_SERV  TXTLINE "SERVICE CREDITS"
    4814                    
    4815                    
    4816 00005b00           M_PLAYS TXTLINE "TOTAL PLAYS"
    4817                    
    4818 00005b60           M_HSLEFT
    4819 00005b60                   TXTLINE "PLAYS UNTIL H.S. RESET"
    4820                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  107

    4821 00005c20           M_HSOFF TXTLINE "OFF"
    4822                    
    4823 00005c40                   .even
    4824 00005c40           M_ELAPSE
    4825 00005c40                   TXTLINE "AVG. ELAPSED TIME/PLAY"
    4826                    
    4827 00005d00           M_MONEY MESS_MAC  RD15FONT,SPACING20,367,227,ROBO_WHITE,STRRNRM,0
    4828                    
    4829 00005da0           T_MONEY MESS_MAC  RD15FONT,SPACING20,23,227,ROBO_WHITE,STRLNRM,0
    4830 00005e40                   TXTLINE "TOTAL COLLECTION"
    4831                    
    4832 00005ed0           T_MONEY2 MESS_MAC  RD15FONT,SPACING20,23,227,ROBO_WHITE,STRLNRM,0
    4833 00005f70                   TXTLINE "XRAM COUNT"
    4834                    
    4835 00005fd0           M_VERINF
    4836 00005fd0                   TXTLINE "031-0"
    4837                    
    4838 00006000           M_LOCKUP
    4839 00006000                   TXTLINE "LOCKUPS"
    4840 00006040           M_HIDB  TXTLINE "GAMES NOT FINISHED"
    4841                    
    4842 000060e0           M_SECBON
    4843 000060e0                   TXTLINE "WARPS"
    4844                    
    4845                    
    4846                    **************************************************************************
    4847                    *                                                                        *
    4848                    *          MENU DESCRIPTORS                                              *
    4849                    *                                                                        *
    4850                    **************************************************************************
    4851                    *
    4852                    *        MAIN TEST MENU
    4853                    *
    4854 00006110           MEN_MAIN
    4855 00006110 00000000!          .LONG   RD7FONT        ;FONT   
    4856 00006130 00000000!          .LONG   STRCNRM        ;CENTER PLEASE
    4857 00006150 0000c090"          .LONG   MESSMAIN       ;TITLE
    4858 00006170     0202           .WORD   ROBO_WHITE     ;COLOR OF TITLE
    4859 00006180     0066           .WORD   MENU_X         ;UL X
    4860 00006190     0057           .WORD   MENU_Y-3       ;UL Y
    4861 000061a0     0011           .WORD   MENU_DY-6      ;VERTICAL SPACING
    4862 000061b0     0202           .WORD   ROBO_WHITE     ;COLOR WHEN NOT SELECTED
    4863 000061c0     0010           .WORD   16             ;HEIGHT OF SELECTION BAR
    4864 000061d0     fffc           .WORD   -4             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4865 000061e0     0006           .WORD   BAR_DX         ;EXTRA X ON EACH SIDE.
    4866 000061f0     00b7           .WORD   BAR_WID        ;WIDTH OF BAR!
    4867 00006200     3d3d           .WORD   ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4868 00006210 000096a0"          .LONG   MESS_DIAG,GO_DIAG,DIAG_HELP
    4869 00006270 00009730"          .LONG   MESS_COIN_AUD,GO_BOOK,COIN_HELP
    4870 000062d0 000097c0"          .LONG   MESS_GAME_AUD,GO_AUD,AUDIT_HELP
    4871 00006330 00009820"          .LONG   MESS_GAME_ADJ,GO_ADJ,ADJUST_HELP
    4872 00006390 000098a0"          .LONG   MESS_UTIL,GO_UTIL,UTIL_HELP
    4873 000063f0 00000bd0"          .LONG   MESS_HARDWARE,GO_HARDWARE,HARDWARE_HELP
    4874 00006450 00000c40"          .LONG   MESS_CLOCK,GO_CLOCK,CLOCK_HELP
    4875 000064b0 000098f0"          .LONG   MESS_VOL,GO_VOL,VOL_HELP
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  108

    4876 00006510 00009960"          .LONG   MESS_EXIT,0,EXIT_HELP  ;SPECIAL CASE!
    4877 00006570 00000000           .LONG   0              ;END
    4878                    
    4879                    * UTILITES MENU GOES LEFT OF CENTER
    4880                    
    4881              00ce  UM_WID   EQU     206
    4882              0072  UM_X     EQU     TIT_ULX+GAP+MB_XWID+(UM_WID/2)+C_KLUDGE
    4883                    
    4884 00006590           MEN_UTIL
    4885 00006590 00000000!         .LONG   RD7FONT         ;FONT
    4886 000065b0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4887 000065d0 0000c150"         .LONG   MESSUTIL        ;TITLE
    4888 000065f0     0202          .WORD   COLOR_WHITE     ;COLOR OF TITLE
    4889 00006600     0072          .WORD   UM_X            ;UL X
    4890 00006610     0057          .WORD   MENU_Y-3        ;UL Y
    4891 00006620     0012          .WORD   18              ;VERTICAL SPACING
    4892 00006630     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
    4893 00006640     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4894 00006650     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEG)
    4895 00006660     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4896 00006670     00ce          .WORD   UM_WID          ;WIDTH OF BAR!
    4897 00006680     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4898 00006690 00009d90"         .LONG   MESS_CLCRED,DO_CLCRED,CLCRED_HELP
    4899 000066f0 00009e80"         .LONG   MESS_CLCOIN,DO_CLCOIN,CLCOIN_HELP
    4900 00006750 00009f20"         .LONG   MESS_CLAUD,DO_CLAUD,CLAUD_HELP
    4901 000067b0 0000a100"         .LONG   MESS_HSRES,DO_HSRES,HSRES_HELP
    4902 00006810 00009fb0"         .LONG   MESS_CLPLRECS,DO_CLPLRECS,CLPLRECS_HELP
    4903 00006870 0000a380"         .LONG   MESS_DEF_ADJ,DO_DEF_ADJ,DEF_ADJ_HELP
    4904 000068d0 0000a4b0"         .LONG   MESS_FACSET,DO_FACSET,FACSET_HELP
    4905 00006930 0000a560"         .LONG   opmsg_s,opmsg_main,OPMSG_HELP
    4906 00006990 00009600"         .LONG   MESS_MM,0,BLNK_HELP     ;RETURN TO MAIN MENU
    4907 000069f0 00000000          .LONG   0                       ;END
    4908                    
    4909                    * DIAGNOSTIC TESTS MENU
    4910                    
    4911 00006a10           MEN_DIAG
    4912 00006a10 00000000!         .LONG   RD7FONT         ;FONT
    4913 00006a30 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4914 00006a50 000096a0"         .LONG   MESSDIAG        ;TITLE
    4915 00006a70     0303          .WORD   COLOR_RED       ;COLOR OF TITLE
    4916 00006a80     00c8          .WORD   200             ;UL X
    4917 00006a90     0057          .WORD   MENU_Y-3        ;UL Y
    4918 00006aa0     0014          .WORD   20              ;VERTICAL SPACING
    4919 00006ab0     0303          .WORD   COLOR_RED       ;COLOR WHEN NOT SELECTED
    4920 00006ac0     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4921 00006ad0     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4922 00006ae0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4923 00006af0     00c3          .WORD   195             ;WIDTH OF BAR!  (A LITTLE FATTER)
    4924 00006b00     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4925 00006b10 0000a7a0"         .LONG   MESS_SWTEST,GO_SWTEST,BLNK_HELP
    4926 00006b70 0000a800"         .LONG   diptst_mess,dipsw_test,BLNK_HELP
    4927              0003  ROM_LEV EQU     3               ;TEST NUMBER FOLLOWING ROM TEST
    4928 00006bd0 0000a880"         .LONG   MESS_CPUTEST,GO_CPUTEST,BLNK_HELP
    4929              0004  RTR_LEV EQU     4               ;TEST NUMBER FOLLOWING CPU TEST (FOR RETURN)
    4930 00006c30 0000a900"         .LONG   M_STEST,GO_STEST,BLNK_HELP
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  109

    4931 00006c90 0000a990"         .LONG   MESS_PATTERNS,GO_PATTERNS,BLNK_HELP
    4932 00006cf0 0000a2f0"         .LONG   MESS_BURN,DO_BURN,BLNK_HELP
    4933 00006d50 00009600"         .LONG   MESS_MM,0,BLNK_HELP     ;RETURN TO MAIN MENU
    4934 00006db0 00000000          .LONG   0
    4935                    
    4936              00fa  STM_WID EQU       250
    4937                    
    4938                    
    4939                    * PRESS ANY BUTTON TO CONTINUE
    4940                    
    4941 00006dd0           ANY_MENU
    4942 00006dd0 00000000!         .LONG   RD7FONT         ;FONT
    4943 00006df0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4944 00006e10 00000000          .LONG   0               ;TITLE
    4945 00006e30     0000          .WORD   0               ;COLOR OF TITLE
    4946 00006e40     00c8          .WORD   200             ;UL X
    4947 00006e50     00c8          .WORD   200             ;UL Y
    4948 00006e60     0017          .WORD   MENU_DY         ;VERTICAL SPACING
    4949 00006e70     0707          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
    4950 00006e80     001a          .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    4951 00006e90     fff7          .WORD   -9              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4952 00006ea0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4953 00006eb0     00ea          .WORD   234             ;WIDTH OF BAR!
    4954 00006ec0     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4955 00006ed0 00009540"         .LONG   MESS_ANY,0,NO_HELP
    4956 00006f30 00000000          .LONG   0
    4957                    
    4958                    * MONITOR PATTERNS
    4959                    
    4960 00006f50           MEN_PATTERNS
    4961 00006f50 00000000!         .LONG   RD7FONT         ;FONT
    4962 00006f70 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4963 00006f90 0000a990"         .LONG   MESSPAT         ;TITLE
    4964 00006fb0     0303          .WORD   COLOR_RED       ;COLOR OF TITLE
    4965 00006fc0     00c8          .WORD   200             ;UL X       (CENTER IT!)
    4966 00006fd0     0057          .WORD   MENU_Y-3        ;UL Y
    4967 00006fe0     0017          .WORD   23              ;VERTICAL SPACING
    4968 00006ff0     0505          .WORD   COLOR_YELLOW    ;COLOR WHEN NOT SELECTED
    4969 00007000     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4970 00007010     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4971 00007020     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4972 00007030     00ea          .WORD   234             ;WIDTH OF BAR!
    4973 00007040     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4974 00007050 0000aa20"         .LONG   MESS_RED,GO_RED,BLNK_HELP
    4975 000070b0 0000aa80"         .LONG   MESS_GREEN,GO_GREEN,BLNK_HELP
    4976 00007110 0000aaf0"         .LONG   MESS_BLUE,GO_BLUE,BLNK_HELP
    4977 00007170 0000ab50"         .LONG   MESS_BARS,GO_BARS,BLNK_HELP
    4978 000071d0 0000abb0"         .LONG   MESS_CROSS,GO_CROSS,BLNK_HELP
    4979 00007230 0000ac50"         .LONG   MESS_DIAGM,0,BLNK_HELP
    4980 00007290 00009600"         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;RETURN TO MAIN MENU
    4981 000072f0 00000000          .LONG   0
    4982                    
    4983                    * DETAILED COINAGE AVAILABLE (ON 1ST COINAGE PAGE)
    4984                    
    4985 00007310           MEN_DETAIL
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  110

    4986 00007310 00000000!         .LONG   RD7FONT ;FONT
    4987 00007330 00000000!         .LONG   STRCNRM ;CENTER PLEASE
    4988 00007350 0000a990"         .LONG   MESSPAT ;TITLE
    4989 00007370     0505          .WORD   COLOR_YELLOW    ;COLOR OF TITLE
    4990 00007380     00c8          .WORD   200             ;UL X       (CENTER IT!)
    4991 00007390     00e0          .WORD   224             ;UL Y
    4992 000073a0     000c          .WORD   12              ;VERTICAL SPACING
    4993 000073b0     0707          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
    4994 000073c0     000a          .WORD   10              ;HEIGHT OF SELECTION BAR
    4995 000073d0     ffff          .WORD   -1              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4996 000073e0     0006          .WORD   BAR_DX  ;EXTRA X ON EACH SIDE.
    4997 000073f0     009d          .WORD   157             ;WIDTH OF BAR!
    4998 00007400     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4999 00007410 00009e80"         .LONG   MESS_CLCOIN,0,NO_HELP           ;Clr coins
    5000 00007470 00009600"         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;RETURN TO MAIN MENU
    5001 000074d0 00000000          .LONG   0
    5002                    
    5003                    * YES/NO   (FOR ARE YOU SURE?)
    5004                    
    5005 000074f0 00000000! MEN_YN  .LONG    RD7FONT        ;FONT
    5006 00007510 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    5007 00007530 000096a0"         .LONG    MESSDIAG       ;TITLE
    5008 00007550     0303          .WORD    COLOR_RED      ;COLOR OF TITLE
    5009 00007560     00c8          .WORD    200            ;UL X
    5010 00007570     00a6          .WORD    166            ;UL Y
    5011 00007580     0013          .WORD    19             ;VERTICAL SPACING
    5012 00007590     0505          .WORD    COLOR_YELLOW   ;COLOR WHEN NOT SELECTED
    5013 000075a0     0010          .WORD    16             ;HEIGHT OF SELECTION BAR
    5014 000075b0     fffc          .WORD    -4             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5015 000075c0     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    5016 000075d0     004e          .WORD    78             ;WIDTH OF BAR!  (A LITTLE FATTER)
    5017 000075e0     3d3d          .WORD    COLOR_DECAY    ;TEXT COLOR OF SELECTED ITEM
    5018 000075f0 000093d8"         .LONG    MESS_YES,0,NO_HELP
    5019 00007650 00009400"         .LONG    MESS_NO,0,NO_HELP
    5020 000076b0 00000000          .LONG    0
    5021                    
    5022                    * NEXT AUDIT PAGE
    5023                    
    5024 000076d0 00000000! MEN_AP1 .LONG    RD7FONT        ;FONT
    5025 000076f0 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    5026 00007710 0000a990"         .LONG    MESSPAT        ;TITLE
    5027 00007730     0505          .WORD    ROBO_YELLOW    ;COLOR OF TITLE
    5028 00007740     00c8          .WORD    200            ;UL X       (CENTER IT!)
    5029 00007750     00e2          .WORD    226            ;UL Y
    5030 00007760     000c          .WORD    12             ;VERTICAL SPACING
    5031 00007770     0707          .WORD    COLOR_BLUE     ;COLOR WHEN NOT SELECTED
    5032 00007780     000a          .WORD    10             ;HEIGHT OF SELECTION BAR
    5033 00007790     ffff          .WORD    -1             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5034 000077a0     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    5035 000077b0     009d          .WORD    157            ;WIDTH OF BAR!
    5036 000077c0     3d3d          .WORD    ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    5037 000077d0 00009420"         .LONG    MESS_TOPAGE2,0,NO_HELP         ;DETAILED SECTION
    5038 00007830 00009600"         .LONG    MESS_MM,FORCE_MAIN,NO_HELP;RETURN TO MAIN MENU
    5039 00007890 00000000          .LONG    0
    5040                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  111

    5041 000078b0 00000000! MEN_AP2 .LONG    RD7FONT        ;FONT
    5042 000078d0 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    5043 000078f0 0000a990"         .LONG    MESSPAT        ;TITLE
    5044 00007910     0505          .WORD    ROBO_YELLOW    ;COLOR OF TITLE
    5045 00007920     00c8          .WORD    200            ;UL X       (CENTER IT!)
    5046 00007930     00e2          .WORD    226            ;UL Y
    5047 00007940     000c          .WORD    12             ;VERTICAL SPACING
    5048 00007950     0707          .WORD    COLOR_BLUE     ;COLOR WHEN NOT SELECTED
    5049 00007960     000a          .WORD    10             ;HEIGHT OF SELECTION BAR
    5050 00007970     ffff          .WORD    -1             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5051 00007980     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    5052 00007990     009d          .WORD    157            ;WIDTH OF BAR!
    5053 000079a0     3d3d          .WORD    ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    5054 000079b0 00009420"         .LONG    MESS_TOPAGE2,0,NO_HELP         ;DETAILED SECTION
    5055 00007a10 000094a0"         .LONG    MESS_BACKP1,0,NO_HELP          ;DETAILED SECTION
    5056 00007a70 00000000          .LONG    0
    5057                    
    5058 00007a90 00000000! MEN_AP3 .LONG    RD7FONT        ;FONT
    5059 00007ab0 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    5060 00007ad0 0000a990"         .LONG    MESSPAT        ;TITLE
    5061 00007af0     0505          .WORD    ROBO_YELLOW    ;COLOR OF TITLE
    5062 00007b00     00c8          .WORD    200            ;UL X       (CENTER IT!)
    5063 00007b10     00e2          .WORD    226            ;UL Y
    5064 00007b20     000c          .WORD    12             ;VERTICAL SPACING
    5065 00007b30     0707          .WORD    COLOR_BLUE     ;COLOR WHEN NOT SELECTED
    5066 00007b40     000a          .WORD    10             ;HEIGHT OF SELECTION BAR
    5067 00007b50     ffff          .WORD    -1             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5068 00007b60     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    5069 00007b70     009d          .WORD    157            ;WIDTH OF BAR!
    5070 00007b80     3d3d          .WORD    ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    5071 00007b90 00009600"         .LONG    MESS_MM,FORCE_MAIN,NO_HELP;RETURN TO MAIN MENU
    5072 00007bf0 000094a0"         .LONG    MESS_BACKP1,0,NO_HELP          ;DETAILED SECTION
    5073 00007c50 00000000          .LONG    0
    5074                    
    5075                    
    5076 00007c70           MEN_SOUNDTEST
    5077 00007c70 00000000!         .LONG   RD7FONT ;FONT
    5078 00007c90 00000000!         .LONG   STRCNRM ;CENTER PLEASE
    5079 00007cb0 00009120"         .LONG   MESS_SNDTST0    ;TITLE
    5080 00007cd0     0505          .WORD   ROBO_YELLOW     ;COLOR OF TITLE
    5081 00007ce0     00c8          .WORD   200             ;UL X       (CENTER IT!)
    5082 00007cf0     0057          .WORD   MENU_Y-3        ;UL Y
    5083 00007d00     0014          .WORD   20              ;VERTICAL SPACING
    5084 00007d10     0303          .word   ROBO_RED        ;colour when not selected
    5085 00007d20     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    5086 00007d30     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5087 00007d40     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    5088 00007d50     00c6          .WORD   192+6           ;WIDTH OF BAR!
    5089 00007d60     3d3d          .WORD   ROBO_DECAY      ;TEXT COLOR OF SELECTED ITEM
    5090 00007d70 000091a8"         .long   MESS_SNDTST1,DO_GENTEST,NO_HELP
    5091 00007dd0 00009210"         .long   MESS_SNDTST2,DO_PLAYSOUNDS,NO_HELP
    5092 00007e30 00009270"         .long   MESS_SNDTST3,0,NO_HELP
    5093 00007e90 00009338"         .long   MESS_SNDTST4,FORCE_MAIN,NO_HELP
    5094 00007ef0 00000000          .LONG   0
    5095                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  112

    5096                    **************************************************************************
    5097                    *                                                                        *
    5098                    *         HELP MENUS FOR MAIN MENU                                       *
    5099                    *                                                                        *
    5100                    **************************************************************************
    5101                    *        HM_JUST         0 = CENTER   1 = LEFT
    5102                    *        HM_COLOR
    5103                    *        HM_ENTS
    5104                    
    5105 00007f10           DIAG_HELP
    5106 00007f10     0000          .WORD   0               ;CENTER JUSTIFY
    5107 00007f20     0707          .WORD   COLOR_BLUE      ;COLOR
    5108 00007f30     0006          .WORD   6               ;# ENTRIES
    5109 00007f40 0000a7a0"         .LONG   MESS_SWTEST
    5110 00007f60 0000a800"         .long   diptst_mess
    5111 00007f80 0000a880"         .LONG   MESS_CPUTEST
    5112 00007fa0 0000a900"         .LONG   M_STEST
    5113 00007fc0 0000a990"         .LONG   MESS_PATTERNS
    5114 00007fe0 0000a280"         .LONG   U_BURNIN
    5115                    
    5116 00008000           COIN_HELP
    5117 00008000     0000          .WORD   0               ;CENTER JUSTIFY
    5118 00008010     0707          .WORD   COLOR_BLUE      ;COLOR
    5119 00008020     0003          .WORD   3               ;2 ENTRIES
    5120 00008030 000099f0"         .LONG   CH_0
    5121 00008050 00009a60"         .LONG   CH_1
    5122 00008070 00009ac0"         .LONG   CH_2
    5123                    
    5124 00008090           AUDIT_HELP
    5125 00008090     0000          .WORD   0               ;CENTER JUSTIFY
    5126 000080a0     0707          .WORD   COLOR_BLUE      ;COLOR
    5127 000080b0     0002          .WORD   2               ;2 ENTRIES
    5128 000080c0 00009b50"         .LONG   AH_1
    5129 000080e0 00009ba0"         .LONG   AH_2
    5130                    
    5131 00008100           ADJUST_HELP
    5132 00008100     0000          .WORD   0               ;CENTER JUSTIFY
    5133 00008110     0707          .WORD   COLOR_BLUE      ;COLOR
    5134 00008120     0003          .WORD   3               ;3 ENTRIES
    5135 00008130 00009c20"         .LONG   AD_1
    5136 00008150 00009c90"         .LONG   AD_2
    5137 00008170 00009d10"         .LONG   AD_3
    5138                    
    5139 00008190           UTIL_HELP
    5140 00008190     0000          .WORD   0               ;CENTER JUSTIFY
    5141 000081a0     0707          .WORD   COLOR_BLUE      ;COLOR
    5142 000081b0     0006          .WORD   6               ;6 ENTRIES
    5143 000081c0 00009d90"         .LONG   U_CLR_CRED
    5144 000081e0 00009e80"         .LONG   U_CLR_COIN
    5145 00008200 00009f20"         .LONG   U_CLR_AUD
    5146 00008220 0000a070"         .LONG   U_HSRESET
    5147 00008240 00009fb0"         .LONG   U_CLRRECS
    5148 00008260 0000a420"         .LONG   U_FACTORY
    5149                    
    5150 00008280           VOL_HELP
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  113

    5151 00008280     0000          .WORD   0               ;CENTER JUSTIFY
    5152 00008290     0707          .WORD   COLOR_BLUE      ;COLOR
    5153 000082a0     0002          .WORD   2               ;2 ENTRIES
    5154 000082b0 0000a190"         .LONG   MESS_ATV
    5155 000082d0 0000a220"         .LONG   MESS_OTG
    5156                    
    5157 000082f0           EXIT_HELP
    5158 000082f0     0000          .WORD   0               ;CENTER JUSTIFY
    5159 00008300     0707          .WORD   COLOR_BLUE      ;COLOR
    5160 00008310     0001          .WORD   1               ;1 ENTRY
    5161 00008320 0000a740"         .LONG   U_END
    5162                    
    5163                    
    5164                    ********************************
    5165                    * HELP FOR UTILITY MENU
    5166                    
    5167 00008340           CLCRED_HELP
    5168 00008340     0000          .WORD   0               ;CENTER JUSTIFY
    5169 00008350     0707          .WORD   COLOR_BLUE      ;COLOR
    5170 00008360     0003          .WORD   3               ;# entries
    5171 00008370 0000b5c0"         .LONG   MEH_CLCRED1
    5172 00008390 0000b620"         .LONG   MEH_CLCRED2
    5173 000083b0 0000b6a0"         .LONG   MEH_CLCRED3
    5174                    
    5175 000083d0           CLCOIN_HELP
    5176 000083d0     0000          .WORD   0               ;CENTER JUSTIFY
    5177 000083e0     0707          .WORD   COLOR_BLUE      ;COLOR
    5178 000083f0     0004          .WORD   4               ;# entries
    5179 00008400 0000b710"         .LONG   MEH_CLCOIN1
    5180 00008420 0000b790"         .LONG   MEH_CLCOIN2
    5181 00008440 0000b800"         .LONG   MEH_CLCOIN3
    5182 00008460 0000b870"         .LONG   MEH_CLCOIN4
    5183                    
    5184 00008480           CLAUD_HELP
    5185 00008480     0000          .WORD   0               ;CENTER JUSTIFY
    5186 00008490     0707          .WORD   COLOR_BLUE      ;COLOR
    5187 000084a0     0002          .WORD   2               ;# entries
    5188 000084b0 0000b8e0"         .LONG   MEH_CLAUD1
    5189 000084d0 0000b960"         .LONG   MEH_CLAUD2
    5190                    
    5191 000084f0           CLPLRECS_HELP
    5192 000084f0     0000          .WORD   0               ;CENTER JUSTIFY
    5193 00008500     0707          .WORD   COLOR_BLUE      ;COLOR
    5194 00008510     0002          .WORD   2               ;# entries
    5195 00008520 0000b9c0"         .long   MEH_CLPLRECS1
    5196 00008540 0000ba30"         .long   MEH_CLPLRECS2
    5197                    
    5198 00008560           HSRES_HELP
    5199 00008560     0000          .WORD   0               ;CENTER JUSTIFY
    5200 00008570     0707          .WORD   COLOR_BLUE      ;COLOR
    5201 00008580     0003          .WORD   3               ;# entries
    5202 00008590 0000ba90"         .LONG   MEH_RESHS1
    5203 000085b0 0000bb20"         .LONG   MEH_RESHS2
    5204 000085d0 0000bbb0"         .LONG   MEH_RESHS3
    5205                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  114

    5206 000085f0           DEF_ADJ_HELP
    5207 000085f0     0000          .WORD   0               ;CENTER JUSTIFY
    5208 00008600     0707          .WORD   COLOR_BLUE      ;COLOR
    5209 00008610     0004          .WORD   4               ;# entries
    5210 00008620 0000bc30"         .LONG   MEH_DEFA1
    5211 00008640 0000bca0"         .LONG   MEH_DEFA2
    5212 00008660 0000bd20"         .LONG   MEH_DEFA3
    5213 00008680 0000bd90"         .LONG   MEH_DEFA4
    5214                    
    5215 000086a0           FACSET_HELP
    5216 000086a0     0000          .WORD   0               ;CENTER JUSTIFY
    5217 000086b0     0707          .WORD   COLOR_BLUE      ;COLOR
    5218 000086c0     0004          .WORD   4               ;# entries
    5219 000086d0 0000be00"         .LONG   MEH_FAC1
    5220 000086f0 0000be90"         .LONG   MEH_FAC2
    5221 00008710 0000bf50"         .LONG   MEH_FAC3
    5222 00008730 0000bfd0"         .LONG   MEH_FAC4
    5223                    
    5224 00008750           OPMSG_HELP
    5225 00008750     0000          .word   0               ;CENTER JUSTIFY
    5226 00008760     0707          .word   COLOR_BLUE      ;COLOR
    5227 00008770     0003          .word   3               ;# entries
    5228 00008780 0000a5f0"         .long   opmsgh1_s
    5229 000087a0 0000a680"         .long   opmsgh2_s
    5230 000087c0 0000a6e0"         .long   opmsgh3_s
    5231                    
    5232                    
    5233                    **************************************************************************
    5234                    *                                                                        *
    5235                    *          TEXT STRINGS                                                  *
    5236                    *                                                                        *
    5237                    **************************************************************************
    5238                    
    5239              00be  SIY0    equ     190
    5240              00d4  SIY1    equ     212
    5241              00e0  SIY2    equ     224
    5242              00ec  SIY3    equ     236
    5243                    
    5244 000087e0           SND_INST
    5245 000087e0                    MESS_MAC  RD7FONT,SPACING07,200,SIY1,ROBO_WHITE,STRCNRM,0
    5246 00008880       55          .STRING   "UP AND DOWN TO SELECT SOUND",0,1
    5247 00008970                   .EVEN
    5248 00008970                    MESS_MAC  RD7FONT,SPACING07,200,SIY2,ROBO_WHITE,STRCNRM,0
    5249 00008a10       50          .STRING   "PRESS ACTION BUTTON TO PLAY",0,1
    5250 00008b00                   .EVEN
    5251 00008b00                    MESS_MAC  RD7FONT,SPACING07,200,SIY3,ROBO_WHITE,STRCNRM,0
    5252 00008ba0       50          .STRING   "PRESS START BUTTON TO EXIT",0,0
    5253                    
    5254 00008c80           SND_SETUP MESS_MAC  RD15FONT,SPACING20,200,SIY0,ROBO_WHITE,STRCNRM,0
    5255                    
    5256 00008d20 00008e20" sounds_tab      .long   SND_ST0,SND_ST1,SND_ST2,SND_ST3
    5257 00008da0 00008f40"                 .long   SND_ST4,SND_ST5,SND_ST6,SND_ST7
    5258                    
    5259 00008e20       46  SND_ST0 .string "FACE HIT",0
    5260 00008e68       57  SND_ST1 .string "WHOOSH",0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  115

    5261 00008ea0       48  SND_ST2 .string "HARD HIT",0
    5262 00008ee8       4c  SND_ST3 .string "LONG GRUNT",0
    5263 00008f40       53  SND_ST4 .string "SHORT GRUNT",0
    5264 00008fa0       44  SND_ST5 .string "DOINK LAUGH",0
    5265 00009000       44  SND_ST6 .string "DOINK YELL",0
    5266 00009058       4d  SND_ST7 .string "MR FUJI",0
    5267                    
    5268 000090a0                   .even
    5269                    
    5270 000090a0           TEST_SOUND_TAB
    5271 000090a0     0080          .word   080h,0B4h,0C7h,0DDh,114h,226h,230h,6528
    5272                    
    5273 00009120       53  MESS_SNDTST0    .string "SOUND BOARD TEST",0
    5274 000091a8       47  MESS_SNDTST1    .string "GENERAL TEST",0
    5275 00009210       50  MESS_SNDTST2    .string "PLAY SOUNDS",0
    5276 00009270       42  MESS_SNDTST3    .string "BACK TO DIAGNOSTICS MENU",0
    5277 00009338       52  MESS_SNDTST4    .string "RETURN TO MAIN MENU",0
    5278                    
    5279 000093d8           MESS_YES
    5280 000093d8       59          .byte    "YES",0
    5281 00009400                   .EVEN
    5282                    
    5283 00009400       4e  MESS_NO .byte    "NO",0
    5284 00009420                   .EVEN
    5285                    
    5286                    ;MESS_CLEAR_SUBS
    5287                    ;         .byte   "CLEAR SUBTOTALS"
    5288                    ;         .BYTE           0
    5289                    ;         .EVEN
    5290                    ;
    5291                    ;MESS_SUBS_CLEAR
    5292                    ;         .byte   "SUBTOTALS CLEARED"
    5293                    ;         .BYTE           0
    5294                    ;         .EVEN
    5295                    
    5296 00009420           MESS_TOPAGE2
    5297 00009420       4e           .byte   "NEXT AUDIT PAGE"
    5298 00009498       00           .BYTE           0
    5299 000094a0                    .EVEN
    5300                    
    5301 000094a0           MESS_BACKP1
    5302 000094a0       50           .byte   "PREVIOUS AUDIT PAGE"
    5303 00009538       00           .BYTE           0
    5304 00009540                    .EVEN
    5305                    
    5306 00009540           MESS_ANY
    5307 00009540       41           .byte   "ANY BUTTON TO CONTINUE"
    5308 000095f0       00           .BYTE           0
    5309 00009600                    .EVEN
    5310                    
    5311 00009600           MESS_MM
    5312 00009600       52           .byte   "RETURN TO MAIN MENU"
    5313 00009698       00           .BYTE           0
    5314 000096a0                    .EVEN
    5315                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  116

    5316 000096a0           MESSDIAG                                ;THIS IS TITLE OF PAGE
    5317 000096a0           MESS_DIAG
    5318 000096a0       44           .byte   "DIAGNOSTIC TESTS"
    5319 00009720       00           .BYTE     0
    5320 00009730                    .EVEN
    5321 00009730           MESS_COIN_AUD
    5322 00009730       43           .byte   "COIN BOOKKEEPING"
    5323 000097b0       00           .BYTE     0
    5324 000097c0                    .EVEN
    5325 000097c0           MESS_GAME_AUD
    5326 000097c0       47           .byte   "GAME AUDITS"
    5327 00009818       00           .BYTE     0
    5328 00009820                    .EVEN
    5329                    
    5330 00009820           MESS_GAME_ADJ
    5331 00009820       47           .byte   "GAME ADJUSTMENT"
    5332 00009898       00           .BYTE     0
    5333 000098a0                    .EVEN
    5334 000098a0           MESS_UTIL
    5335 000098a0       55           .byte   "UTILITIES"
    5336 000098e8       00           .BYTE     0
    5337 000098f0                    .EVEN
    5338                    
    5339 000098f0           MESS_VOL
    5340 000098f0       56          .byte   "VOLUME ADJUST"
    5341 00009958       00          .BYTE      0
    5342 00009960                   .EVEN
    5343                    
    5344 00009960           MESS_EXIT
    5345 00009960       45           .byte   "EXIT TO GAME OVER"
    5346 000099e8       00           .BYTE     0
    5347 000099f0                    .EVEN
    5348                    
    5349 000099f0       56  CH_0     .byte   "VIEW COINBOX"
    5350 00009a50       00           .BYTE   0
    5351 00009a60                    .EVEN
    5352 00009a60       54  CH_1     .byte   "TOTALS AND"
    5353 00009ab0       00           .BYTE   0
    5354 00009ac0                    .EVEN
    5355 00009ac0       47  CH_2     .byte   "GAMEPLAY COUNTERS"
    5356 00009b48       00           .BYTE   0
    5357 00009b50                    .EVEN
    5358                    
    5359 00009b50       56  AH_1     .byte   "VIEW GAME"
    5360 00009b98       00           .BYTE   0
    5361 00009ba0                    .EVEN
    5362 00009ba0       50  AH_2     .byte   "PLAY STATISTICS"
    5363 00009c18       00           .BYTE   0
    5364 00009c20                    .EVEN
    5365                    
    5366 00009c20       4d  AD_1     .byte   "MAKE CHANGES"
    5367 00009c80       00           .BYTE   0
    5368 00009c90                    .EVEN
    5369 00009c90       54  AD_2     .byte   "TO PRICING AND"
    5370 00009d00       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  117

    5371 00009d10                    .EVEN
    5372 00009d10       47  AD_3     .byte   "GAME DIFFICULTY"
    5373 00009d88       00           .BYTE   0
    5374 00009d90                    .EVEN
    5375                    
    5376 00009d90           MESS_CLCRED
    5377 00009d90       43  U_CLR_CRED       .byte "CLEAR CREDITS"
    5378 00009df8       00           .BYTE   0
    5379 00009e00                    .EVEN
    5380                    
    5381 00009e00       43  MESS_CCCONF      .byte "CREDITS CLEARED"
    5382 00009e78       00           .BYTE   0
    5383 00009e80                    .EVEN
    5384                    
    5385 00009e80           MESS_CLCOIN
    5386 00009e80       43  U_CLR_COIN       .byte "CLEAR COIN COUNTERS"
    5387 00009f18       00           .BYTE   0
    5388 00009f20                    .EVEN
    5389                    
    5390 00009f20           MESS_CLAUD
    5391 00009f20       43  U_CLR_AUD        .byte "CLEAR GAME AUDITS"
    5392 00009fa8       00           .BYTE   0
    5393 00009fb0                    .EVEN
    5394                    
    5395 00009fb0           MESS_CLPLRECS
    5396 00009fb0           U_CLRRECS
    5397 00009fb0       43          .string "CLEAR PLAYER STATISTICS",0
    5398                    
    5399 0000a070           MESS_HSRESET
    5400 0000a070       52  U_HSRESET        .byte "RESET HIGH SCORES"
    5401 0000a0f8       00           .BYTE   0
    5402 0000a100                    .EVEN
    5403                    
    5404 0000a100           MESS_HSRES
    5405 0000a100       52           .byte "RESET HIGH SCORES"
    5406 0000a188       00           .BYTE   0
    5407 0000a190                    .EVEN
    5408                    
    5409 0000a190           MESS_ATV
    5410 0000a190       41          .byte   "ADJUST THE VOLUME",0
    5411 0000a220                   .even
    5412 0000a220           MESS_OTG
    5413 0000a220       4f          .byte   "OF THE GAME",0
    5414 0000a280                   .even
    5415                    
    5416                    ;M_OPMESS_TIT
    5417                    ;U_OPMESS         .byte "OPERATOR MESSAGE"
    5418                    ;         .BYTE   0
    5419                    ;         .EVEN
    5420                    
    5421                    ;M_SET_OMESS
    5422                    ;;MESS_OPMESS      .byte "SET OPERATOR MESSAGE"
    5423                    ;         .BYTE   0
    5424                    ;         .EVEN
    5425                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  118

    5426 0000a280       42  U_BURNIN        .byte "BURN-IN TEST",0
    5427 0000a2f0                   .even
    5428                    
    5429 0000a2f0       52  MESS_BURN       .byte "RUN BURN-IN TEST",0
    5430 0000a380                   .even
    5431                    
    5432 0000a380           MESS_DEF_ADJ    TXTLINE "DEFAULT ADJUSTMENTS"
    5433 0000a420           U_FACTORY       TXTLINE "FACTORY SETTINGS"
    5434 0000a4b0           MESS_FACSET     TXTLINE "FULL FACTORY RESTORE"
    5435                    
    5436 0000a560           opmsg_s         TXTLINE "OPERATOR MESSAGE"
    5437 0000a5f0           opmsgh1_s       TXTLINE "ENTER AN OPERATOR"
    5438 0000a680           opmsgh2_s       TXTLINE "MESSAGE TO"
    5439 0000a6e0           opmsgh3_s       TXTLINE "THE PLAYERS"
    5440                    
    5441                    
    5442 0000a740       45  U_END   .byte "END TESTING",0
    5443 0000a7a0                   .even
    5444                    
    5445 0000a7a0       53  MESS_SWTEST     .byte "SWITCH TEST",0
    5446 0000a800                   .even
    5447 0000a800       44  diptst_mess     .byte "DIP SWITCH TEST",0
    5448 0000a880                   .even
    5449 0000a880       43  MESS_CPUTEST    .byte "CPU BOARD TEST",0
    5450 0000a900                   .even
    5451 0000a900       53  M_STEST .byte   "SOUND BOARD TEST",0
    5452 0000a990                   .even
    5453                    
    5454 0000a990           MESSPAT                 ;HEADER TITLE
    5455 0000a990       4d  MESS_PATTERNS   .byte "MONITOR PATTERNS",0
    5456 0000aa20                   .EVEN
    5457                    
    5458 0000aa20       52  MESS_RED        .byte "RED SCREEN",0
    5459 0000aa80                   .EVEN
    5460 0000aa80       47  MESS_GREEN       .byte "GREEN SCREEN",0
    5461 0000aaf0                   .EVEN
    5462 0000aaf0       42  MESS_BLUE        .byte "BLUE SCREEN",0
    5463 0000ab50                   .EVEN
    5464 0000ab50       43  MESS_BARS        .byte "COLOR BARS",0
    5465 0000abb0                   .EVEN
    5466 0000abb0       43  MESS_CROSS       .byte "CROSSHATCH  PATTERN",0
    5467 0000ac50                   .EVEN
    5468 0000ac50       42  MESS_DIAGM       .byte "BACK TO DIAGNOSTICS MENU",0
    5469 0000ad20                   .EVEN
    5470                    
    5471                    *       ON FULL RESTORE....THE FOLLOWING IS PRINTED.
    5472                            ;0 = END OF STRING...1 = MORE MESSAGES!
    5473                    
    5474 0000ad20           MESS_RESET
    5475 0000ad20                   MESS_MAC  RD7FONT,SPACING20,200,80,ROBO_RED,STRCNRM,0
    5476 0000adc0           MESS_FACFAIL
    5477 0000adc0       46          .byte  "FAILURE IN CMOS RAM",0,0
    5478 0000ae70                   .EVEN
    5479                    
    5480 0000ae70           MESS_FFSCONF
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  119

    5481 0000ae70           MESS_FAC MESS_MAC RD7FONT,SPACING20,200,96,COLOR_WHITE,STRCNRM,0
    5482 0000af10           MESS_DEFCONF
    5483 0000af10       41          .byte   "ADJUSTMENTS RESTORED.",0,1
    5484 0000afd0                   .EVEN
    5485                    
    5486 0000afd0                   MESS_MAC RD7FONT,SPACING20,200,112,COLOR_YELLOW,STRCNRM,0
    5487 0000b070           MESS_CCNCONF
    5488 0000b070       43          .byte  "COIN COUNTERS CLEARED.",0,1
    5489 0000b130                   .EVEN
    5490                    
    5491 0000b130                   MESS_MAC RD7FONT,SPACING20,200,128,COLOR_BLUE,STRCNRM,0
    5492 0000b1d0           MESS_CAUDCONF
    5493 0000b1d0       47          .byte  "GAME AUDITS CLEARED.",0,1
    5494 0000b280                   .EVEN
    5495                    
    5496 0000b280                   MESS_MAC RD7FONT,SPACING20,200,144,COLOR_RED,STRCNRM,0
    5497 0000b320           MESS_HSRCONF
    5498 0000b320       48          .byte  "HIGH SCORE TABLE RESET.",0,1
    5499 0000b3f0                   .EVEN
    5500                    
    5501 0000b3f0                   MESS_MAC RD7FONT,SPACING20,200,160,COLOR_CYAN,STRCNRM,0
    5502 0000b490           MESS_CLPLRECSCONF
    5503 0000b490       50          .string "PLAYER STATISTICS CLEARED.",0,0
    5504 0000b570                   .EVEN
    5505                    
    5506 0000b570           MESS_CANCELLED
    5507 0000b570       43          .byte "CANCELLED",0
    5508 0000b5c0                   .EVEN
    5509                    
    5510              00c5  CIN_X   EQU     (TIT_ULX+TIT_LRX)/2
    5511              00a3  CR_X    EQU     CIN_X-34
    5512              0056  CIN_Y   EQU     86
    5513                    
    5514              0064  CIY1    EQU     CIN_Y+14
    5515              0073  CIY2    EQU     CIY1+15
    5516              008c  CIY3    EQU     CIY2+25
    5517              00a5  CIY4    EQU     CIY3+25
    5518                    
    5519                    **************************************************************************
    5520                    *                                                                        *
    5521                    *          STRINGS FOR UTILITY HELP MENUS                                *
    5522                    *                                                                        *
    5523                    **************************************************************************
    5524 0000b5c0       52  MEH_CLCRED1      .byte "REMOVE ANY",0
    5525 0000b620                            .EVEN
    5526 0000b620       50  MEH_CLCRED2      .byte "POSTED CREDITS",0
    5527 0000b6a0                            .EVEN
    5528 0000b6a0       46  MEH_CLCRED3      .byte "FROM THE GAME",0
    5529 0000b710                            .EVEN
    5530                    
    5531 0000b710       43  MEH_CLCOIN1      .byte "CLEAR OUT PAID",0
    5532 0000b790                            .EVEN
    5533 0000b790       43  MEH_CLCOIN2      .byte "CREDITS TOTAL",0
    5534 0000b800                            .EVEN
    5535 0000b800       41  MEH_CLCOIN3      .byte "AND THE COIN",0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  120

    5536 0000b870                            .EVEN
    5537 0000b870       53  MEH_CLCOIN4      .byte "SLOT COUNTERS",0
    5538 0000b8e0                            .EVEN
    5539                    
    5540 0000b8e0       43  MEH_CLAUD1       .byte "CLEAR GAMEPLAY",0
    5541 0000b960                            .EVEN
    5542 0000b960       53  MEH_CLAUD2       .byte "STATISTICS",0
    5543 0000b9c0                            .EVEN
    5544                    
    5545 0000b9c0       43  MEH_CLPLRECS1   .string "CLEAR PLAYER",0
    5546 0000ba30                           .even
    5547 0000ba30       53  MEH_CLPLRECS2   .string "STATISTICS",0
    5548 0000ba90                           .even
    5549                    
    5550 0000ba90       52  MEH_RESHS1       .byte "RESET HIGH SCORE",0
    5551 0000bb20                            .EVEN
    5552 0000bb20       54  MEH_RESHS2       .byte "TABLE TO FACTORY",0
    5553 0000bbb0                            .EVEN
    5554 0000bbb0       44  MEH_RESHS3       .byte "DEFAULT VALUES",0
    5555 0000bc30                            .EVEN
    5556                    
    5557 0000bc30       53  MEH_DEFA1        .byte "SET ALL GAME",0
    5558 0000bca0                            .EVEN
    5559 0000bca0       41  MEH_DEFA2        .byte "ADJUSTMENTS TO",0
    5560 0000bd20                            .EVEN
    5561 0000bd20       54  MEH_DEFA3        .byte "THEIR FACTORY",0
    5562 0000bd90                            .EVEN
    5563 0000bd90       44  MEH_DEFA4        .byte "DEFAULT VALUE",0
    5564 0000be00                            .EVEN
    5565                    
    5566                    
    5567 0000be00           MEH_FAC1
    5568 0000be00       52          .STRING "RESET ALL AUDITS,",0
    5569 0000be90                   .EVEN
    5570 0000be90           MEH_FAC2
    5571 0000be90       43          .STRING "COUNTERS, ADJUSTMENTS,",0
    5572 0000bf50                   .EVEN
    5573 0000bf50           MEH_FAC3
    5574 0000bf50       48          .STRING "HIGH SCORES AND",0
    5575 0000bfd0                   .EVEN
    5576 0000bfd0           MEH_FAC4
    5577 0000bfd0       54          .STRING "THE PLAYER STATISTICS.",0
    5578 0000c090                   .EVEN
    5579                    
    5580                    
    5581                    **************************************************************************
    5582                    *                                                                        *
    5583                    *         MAIN MENU NAMES                                                *
    5584                    *                                                                        *
    5585                    **************************************************************************
    5586 0000c090           MESSMAIN
    5587 0000c090       57          .byte   "WRESTLEMANIA TEST MENU",0
    5588 0000c150                   .even
    5589                    
    5590 0000c150           MESSUTIL
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  121

    5591 0000c150       55          .byte   "UTILITY MENU",0
    5592 0000c1c0                   .even
    5593                    
    5594                    
    5595                    
    5596 0000c1c0           CSELCT
    5597                    **************************************************************************
    5598                    *                                                                                            *
    5599                    *   USA 1: 1 COIN = 1 CREDIT                                                                 *
    5600                    *                                                                                            *
    5601                    *          2 TO START / 2 TO CONTINUE                                                        *
    5602                    *                                                                                            *
    5603                    **************************************************************************
    5604 0000c1c0     0001          .WORD   1,0,1,0,4,1,0,0,2,2     ;WILLY PRICING
    5605 0000c260     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    5606 0000c270     0001          .WORD   1                       ;DISPLAY COIN FRACTIONS
    5607 0000c280     0001          .WORD   1,0,1,0,4                       ;COIN VALUE
    5608 0000c2d0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ;CHARACTER STRINGS.
    5609 0000c310 0001aa70"         .LONG   OCOP                    ;ONE COIN ONE PLAY
    5610 0000c330 00013a18"         .LONG   USA_1                   ;TITLE OF COIN MODE
    5611 0000c350 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5612 0000c370     0000          .WORD   SHOW_NONE               ;NO PRICING LINE ON 2/1
    5613 0000c380 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5614                    
    5615                    **************************************************************************
    5616                    *                                                                                            *
    5617                    *   USA 2: 1 COIN = 1 CREDIT                                                                 *
    5618                    *                                                                                            *
    5619                    *          2 TO START / 1 TO CONTINUE                                                        *
    5620                    *                                                                                            *
    5621                    **************************************************************************
    5622 0000c3a0     0001          .WORD   1,0,1,0,4,1,0,0,2,1     ;WILLY PRICING
    5623 0000c440     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    5624 0000c450     0001          .WORD   1                       ;DISPLAY COIN FRACTIONS
    5625 0000c460     0001          .WORD   1,0,1,0,4                       ;COIN VALUE
    5626 0000c4b0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ;CHARACTER STRINGS.
    5627 0000c4f0 0001aa70"         .LONG   OCOP                    ;ONE COIN ONE PLAY
    5628 0000c510 00013a50"         .LONG   USA_2                   ;TITLE OF COIN MODE
    5629 0000c530 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5630 0000c550     0000          .WORD   SHOW_NONE               ;NO PRICING LINE ON 2/1
    5631 0000c560 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5632                    
    5633                    
    5634                    **************************************************************************
    5635                    *                                                                                            *
    5636                    *       USA 3    COINAGE IS 25 CENT                                                          *
    5637                    *                1 TO START / 1 TO CONTINUE                                             *
    5638                    *                                                                                            *
    5639                    **************************************************************************
    5640                    
    5641 0000c580     0001          .WORD   1,0,1,0,4,1,0,0,1,1        ;WILLY PRICING
    5642 0000c620     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    5643 0000c630     0001          .WORD   1                               ;DISPLAY COIN FRACTIONS
    5644 0000c640     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5645 0000c690 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  122

    5646 0000c6d0 00000001          .LONG   CSM_LIST                         ;ONE COIN ONE PLAY
    5647 0000c6f0 00013a80"         .LONG   USA_3                    ;TITLE OF COIN MODE
    5648 0000c710 00014c70"         .LONG   Q_Q                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5649 0000c730     0000          .WORD   SHOW_NONE               ;NO PRICING LINE ON 2/1
    5650 0000c740 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5651                    
    5652                    **************************************************************************
    5653                    *                                                                                            *
    5654                    *       USA 4    COINAGE IS 50 CENT      3/$1.00                                             *
    5655                    *                1 TO START / 1 TO CONTINUE                                             *
    5656                    *                                                                                            *
    5657                    **************************************************************************
    5658                    
    5659 0000c760     0001          .WORD   1,0,1,0,4,2,4,0,1,1     ; WILLY PRICING
    5660 0000c800     0004          .WORD   4                       ; 4 COINS PER DOLLAR (FOR CALC)
    5661 0000c810     0001          .WORD   1                       ; DISPLAY COIN FRACTIONS
    5662 0000c820     0001          .WORD   1,0,1,0,4                       ; COIN VALUE
    5663 0000c870 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ; CHARACTER STRINGS.
    5664 0000c8b0 00000001          .LONG   CSM_LIST                ; PRINT THE 2 THE OP SEES
    5665 0000c8d0 00013ab0"         .LONG   USA_4                   ; TITLE OF COIN MODE
    5666 0000c8f0 00014cf0"         .LONG   DOLLAR_3                ; 1 COIN PER CREDIT (SERIES OF STRINGS)
    5667 0000c910     0003          .WORD   SHOW_2                  ; SHOW LINE 2
    5668 0000c920 000192d0"         .LONG   USA_QDQ                 ; QUARTER
    5669                                                                    
    5670                    
    5671                    **************************************************************************
    5672                    *                                                                                            *
    5673                    *  ADDITION "FULL PRICE" COINAGES                                                            *
    5674                    *                                                                                            *
    5675                    **************************************************************************
    5676                    
    5677                            .IF     FULLPRICE
    5678                    
    5679                    **************************************************************************
    5680                    *                                                                                            *
    5681                    *       USA 5    COINAGE IS 50 CENT      4/$1.00                                             *
    5682                    *                2 TO START / 1 TO CONTINUE                                             *
    5683                    *                                                                                            *
    5684                    **************************************************************************
    5685                    
    5686 0000c940     0003          .WORD   3,0,3,0,12,4,12,6,2,1    ;WILLY PRICING
    5687 0000c9e0     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    5688 0000c9f0     0000          .WORD   0                               ;NO COIN FRACTIONS
    5689 0000ca00     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5690 0000ca50 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    5691 0000ca90 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    5692 0000cab0 00013ae0"         .LONG   USA_5                    ;TITLE OF COIN MODE
    5693 0000cad0 00014d50"         .LONG   DOLLAR_4                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5694 0000caf0     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    5695 0000cb00 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5696                    
    5697                    *
    5698                    *       USA 6    50 PER CREDIT
    5699                    *
    5700 0000cb20     0001          .WORD   1,0,1,0,4,2,0,0,1,1     ; WILLY PRICING
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  123

    5701 0000cbc0     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    5702 0000cbd0     0001          .WORD   1                               ;DISPLAY COIN FRACTIONS
    5703 0000cbe0     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5704 0000cc30 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    5705 0000cc70 00000001          .LONG   CSM_LIST                         ;2 COINS PER PLAYER
    5706 0000cc90 00013b10"         .LONG   USA_6                    ;TITLE OF COIN MODE
    5707 0000ccb0 00014cb0"         .LONG   F_F_1S1C                 ;2 COINS PER CREDIT (SERIES OF STRINGS)
    5708 0000ccd0     0002          .WORD   SHOW_1                  ;SHOW LINE 1
    5709 0000cce0 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5710                    *                                               
    5711                    *       USA 7    COINAGE IS 50 CENT      3/$1.00
    5712                    *
    5713                    
    5714 0000cd00     0001          .WORD   1,0,1,0,4,2,4,0,1,1     ; WILLY PRICING
    5715 0000cda0     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    5716 0000cdb0     0000          .WORD   0                               ;DISPLAY COIN FRACTIONS
    5717 0000cdc0     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5718 0000ce10 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    5719 0000ce50 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    5720 0000ce70 00013b40"         .LONG   USA_7                    ;TITLE OF COIN MODE
    5721 0000ce90 00014e10"         .LONG   UFS3D                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5722 0000ceb0     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    5723 0000cec0 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5724                    
    5725                    *                                               
    5726                    *       USA 8    COINAGE IS 50 CENT      4/$1.00
    5727                    *
    5728                    *              L, C,R, 4,DBV,U/C,U/B,MINUNITS /START /CONTINUE
    5729 0000cee0     0003          .WORD   3,0,3,0,12,4,12,6,2,2    ;WILLY PRICING
    5730 0000cf80     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    5731 0000cf90     0000          .WORD   0                               ;NO COIN FRACTIONS
    5732 0000cfa0     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5733 0000cff0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    5734 0000d030 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    5735 0000d050 00013b70"         .LONG   USA_8                    ;TITLE OF COIN MODE
    5736 0000d070 00014e70"         .LONG   UFS4D                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5737 0000d090     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    5738 0000d0a0 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5739                    
    5740                    *       USA 9    COINAGE IS 50 CENT      4/$1.00
    5741                    *
    5742                    *              L, C,R, 4,DBV,U/C,U/B,MINUNITS /START /CONTINUE
    5743 0000d0c0     0001          .WORD   1,0,1,0,4,1,0,1,3,2      ;WILLY PRICING
    5744 0000d160     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    5745 0000d170     0000          .WORD   0                               ;NO COIN FRACTIONS
    5746 0000d180     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5747 0000d1d0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    5748 0000d210 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    5749 0000d230 00013ba0"         .LONG   USA_9                    ;TITLE OF COIN MODE
    5750 0000d250 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5751 0000d270     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    5752 0000d280 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5753                    
    5754                    *       USA 10   COINAGE IS 50 CENT      4/$1.00
    5755                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  124

    5756 0000d2a0     0001          .WORD   1,0,1,0,4,1,0,1,3,3      ;WILLY PRICING
    5757 0000d340     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    5758 0000d350     0000          .WORD   0                               ;NO COIN FRACTIONS
    5759 0000d360     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    5760 0000d3b0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    5761 0000d3f0 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    5762 0000d410 00013bd0"         .LONG   USA_10                   ;TITLE OF COIN MODE
    5763 0000d430 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5764 0000d450     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    5765 0000d460 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    5766                    
    5767                            .ENDIF
    5768                    *
    5769                    *       USA ELECTRONIC
    5770                    *
    5771 0000d480     0014          .WORD   20,2,5,1,20,5,0,0,2,2   ; L,C,R,4,U/C,U/B,MINUNITS
    5772 0000d520     0014          .WORD   20                      ; COINS/DOLLAR
    5773 0000d530     0001          .WORD   1                       ; DISPLAY FRACTIONS
    5774 0000d540     0014          .WORD   20,2,5,1,20             ; L,C,R,4
    5775 0000d590 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ; CHARACTER STRINGS.
    5776 0000d5d0 0001aba0"         .LONG   USA_ELECTRONIC          ; SPECIAL MESSAGE
    5777 0000d5f0 00013c10"         .LONG   USA_ELECTITLE           ; TITLE OF COIN MODE
    5778 0000d610 00014c10"         .LONG   USA_EL                  ; SETTINGS DESCRIPTION
    5779 0000d630     0003          .WORD   SHOW_2                  ; LINES TO SHOW ON
    5780 0000d640 00018dd0"         .LONG   USA_ESLOT               ; QUARTER
    5781                    
    5782                    *
    5783                    *       GERMAN 1    COINAGE IS 6 PLAYS FOR 5 DM
    5784                    *                        2 TO START, 2 TO CONTINUE
    5785                    *
    5786 0000d660     0006          .WORD   6,0,30,0,0,5,0,0,2,2     ;WILLY PRICING
    5787 0000d700     0001          .WORD   1                        ;DMS HAVE NO FRACTIONS
    5788 0000d710     0000          .WORD   0                        ;DON'T DISPLAY COIN FRACTIONS
    5789 0000d720     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5790 0000d770 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    5791 0000d7b0 00000001          .LONG   CSM_LIST
    5792 0000d7d0 00013d70"         .LONG   GERMAN_1                         ;TITLE OF COIN MODE
    5793 0000d7f0 00014f30"         .LONG   DM_6                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5794 0000d810     0003          .WORD   SHOW_2
    5795 0000d820 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    5796                    
    5797              000c  G1SEL   EQU     ($-CSELCT)/CS_SIZE          ;COIN SELECT VALUE FOR GERMAN 1
    5798                    *
    5799                    *       GERMAN 2    COINAGE IS 7 PLAYS FOR 5 DM
    5800                    *                        2 TO START, 1 TO CONTINUE
    5801                    *
    5802 0000d840     0006          .WORD   6,0,30,0,0,5,30,0,2,1           ;WILLY PRICING
    5803 0000d8e0     0001          .WORD   1                               ;DMS HAVE NO FRACTIONS
    5804 0000d8f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5805 0000d900     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5806 0000d950 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    5807 0000d990 00000001          .LONG   CSM_LIST
    5808 0000d9b0 00013dc0"         .LONG   GERMAN_2                         ;TITLE OF COIN MODE
    5809 0000d9d0 00014f90"         .LONG   DM_7                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5810 0000d9f0     0003          .WORD   SHOW_2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  125

    5811 0000da00 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    5812                    *
    5813                    *       GERMAN 3    COINAGE IS 8 PLAYS FOR 5 DM
    5814                    *                        2 TO START, 1 TO CONTINUE
    5815                    *
    5816 0000da20     0007          .WORD   7,0,35,0,0,5,35,0,2,1           ;WILLY PRICING
    5817 0000dac0     0001          .WORD   1                               ;DMS HAVE NO FRACTIONS
    5818 0000dad0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5819 0000dae0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5820 0000db30 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    5821 0000db70 00000001          .LONG   CSM_LIST
    5822 0000db90 00013e10"         .LONG   GERMAN_3                         ;TITLE OF COIN MODE
    5823 0000dbb0 00014ff0"         .LONG   DM_8                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5824 0000dbd0     0003          .WORD   SHOW_2
    5825 0000dbe0 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    5826                    *
    5827                    *       GERMAN 4    COINAGE IS 5 PLAYS FOR 5 DM
    5828                    *                        2 TO START, 1 TO CONTINUE
    5829                    *
    5830 0000dc00     0001          .WORD   1,0,5,0,0,1,0,0,2,1        ;WILLY PRICING
    5831 0000dca0     0001          .WORD   1                               ;DMS HAVE NO FRACTIONS
    5832 0000dcb0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5833 0000dcc0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5834 0000dd10 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    5835 0000dd50 00000001          .LONG   CSM_LIST
    5836 0000dd70 00013e60"         .LONG   GERMAN_4                         ;TITLE OF COIN MODE
    5837 0000dd90 00014ed0"         .LONG   DM_5                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5838 0000ddb0     0003          .WORD   SHOW_2
    5839 0000ddc0 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    5840                    
    5841                    *
    5842                    *       GERMAN 5    COINAGE IS 6 PLAYS FOR 5 DM
    5843                    *                        2 TO START, 1 TO CONTINUE
    5844                    *
    5845 0000dde0     0006          .WORD   6,0,30,0,0,5,0,0,2,1     ;WILLY PRICING
    5846 0000de80     0001          .WORD   1                        ;DMS HAVE NO FRACTIONS
    5847 0000de90     0000          .WORD   0                        ;DON'T DISPLAY COIN FRACTIONS
    5848 0000dea0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5849 0000def0 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    5850 0000df30 00000001          .LONG   CSM_LIST
    5851 0000df50 00013eb0"         .LONG   GERMAN_5                         ;TITLE OF COIN MODE
    5852 0000df70 00014f30"         .LONG   DM_6                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5853 0000df90     0003          .WORD   SHOW_2
    5854 0000dfa0 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    5855                    
    5856                    *
    5857                    *       GERMAN ELECTRONIC
    5858                    *                        2 TO START, 2 TO CONTINUE
    5859                    *
    5860 0000dfc0     003c          .WORD   60,12,24,0,0,10,0,0,2,2 ; L,C,R,4,U/C,U/B,MINUNITS
    5861 0000e060     0001          .WORD   1                       ; COINS/DOLLAR
    5862 0000e070     0000          .WORD   0                       ; DISPLAY FRACTIONS
    5863 0000e080     0005          .WORD   5,1,2,0,0                       ; L,C,R,4
    5864 0000e0d0 000136a0"         .LONG   NULL_ST,DM_TRAIL        ;CHARACTER STRINGS.
    5865 0000e110 0001afc0"         .LONG   GERMAN_ELECTRONIC       ; SPECIAL MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  126

    5866 0000e130 00013cb0"         .LONG   GERMAN_ELECTITLE        ; TITLE OF COIN MODE
    5867 0000e150 00015050"         .LONG   DM112265                ; SETTINGS DESCRIPTION
    5868 0000e170     0004          .WORD   SHOW_3                  ; LINES TO SHOW ON
    5869 0000e180 00019000"         .LONG   GERMAN_ESLOT            ; QUARTER
    5870                    
    5871                    ****************************************************************************
    5872                    ****************************************************************************
    5873                    ******* THE FOLLOWING NUMBERS ARE FIGURED FOR THE FRENCH SETTINGS
    5874                    ******* REQUESTED BY DIMITRI K. OF P.S.D.
    5875                    *******
    5876                    *******                         1F   5F   10F   U/C   U/B  M/U
    5877                    *******                         --------------------------------
    5878                    ******* 1/2F  3/5F    7/10F     3       15       30       5       30    0
    5879                    ******* 1/3F  2/5F    5/10F     2       10       20       5       20    0
    5880                    ******* 1/5F  3/10F             1        5       10    5    10    0
    5881                    ******* 1/5F  3/10F   7/20F     3       15       30      10       60   15
    5882                    ******* 2/5F  4/10F   9/20F     2       10       20       5       40   10
    5883                    ******* 2/5F  5/10F  11/20F     1        5       10       2       20    5
    5884                    *******
    5885                    *
    5886                    *
    5887                    *       FRENCH 1              2/5F       5/10F
    5888                    *
    5889                    *
    5890 0000e1a0     0002          .WORD   2,0,4,0,0,1,4,0,2,2             ; 2/5F    5/10F
    5891 0000e240     0001          .WORD   1                               ;1 FRANC PER FRANC
    5892 0000e250     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5893 0000e260     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5894 0000e2b0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL             ;CHARACTER STRINGS.
    5895 0000e2f0 00000001          .LONG   CSM_LIST                        ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5896 0000e310 00013f00"         .LONG   FRENCH_1                        ;TITLE OF COIN MODE
    5897 0000e330 00015250"         .LONG   FIVE_10                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5898 0000e350     0003          .WORD   SHOW_2
    5899 0000e360 000194e0"         .LONG   FRENCH510
    5900                    
    5901              0012  F1SEL   EQU     ($-CSELCT)/CS_SIZE          ;COIN SELECT VALUE FOR FRENCH 1
    5902                    
    5903                    *
    5904                    *       FRENCH 2              2/5F       4/10F
    5905                    *
    5906                    *
    5907 0000e380     0002          .WORD   2,0,4,0,0,1,0,0,2,1        ; 2/5F    4/10F
    5908 0000e420     0001          .WORD   1                               ;1 FRANC PER FRANC
    5909 0000e430     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5910 0000e440     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5911 0000e490 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5912 0000e4d0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5913 0000e4f0 00013f50"         .LONG   FRENCH_2                         ;TITLE OF COIN MODE
    5914 0000e510 00015330"         .LONG   FOUR_10                 ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5915 0000e530     0003          .WORD   SHOW_2
    5916 0000e540 000194e0"         .LONG   FRENCH510
    5917                    *
    5918                    *       FRENCH 3              1/5F  3/10F       
    5919                    *
    5920                    *
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  127

    5921 0000e560     0001          .WORD   1,0,2,0,0,1,2,0,2,1         ;1/5F  3/10F        
    5922 0000e600     0001          .WORD   1                               ;1 FRANC PER FRANC
    5923 0000e610     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5924 0000e620     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5925 0000e670 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5926 0000e6b0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5927 0000e6d0 00013fa0"         .LONG   FRENCH_3                         ;TITLE OF COIN MODE
    5928 0000e6f0 00015410"         .LONG   THREE_10                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5929 0000e710     0003          .WORD   SHOW_2
    5930 0000e720 000194e0"         .LONG   FRENCH510
    5931                    *
    5932                    *       FRENCH 4              1/5F  2/10F 
    5933                    *
    5934                    *
    5935 0000e740     0001          .WORD   1,0,2,0,0,1,0,0,2,1      ;1/5F  2/10F
    5936 0000e7e0     0001          .WORD   1                               ;1 FRANC PER FRANC
    5937 0000e7f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5938 0000e800     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5939 0000e850 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5940 0000e890 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5941 0000e8b0 00013ff0"         .LONG   FRENCH_4                         ;TITLE OF COIN MODE
    5942 0000e8d0 000154f0"         .LONG   TWO_10                  ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5943 0000e8f0     0002          .WORD   SHOW_1
    5944 0000e900 000194e0"         .LONG   FRENCH510
    5945                    
    5946                            .IF     FULLPRICE
    5947                    
    5948                    *
    5949                    *
    5950                    *       FRENCH 5              2/5F       5/10F  11/2 X 10F
    5951                    *
    5952                    *
    5953 0000e920     0005          .WORD   5,0,10,0,0,2,20,0,2,1            ;2/5F  5/10F   11/20F
    5954 0000e9c0     0001          .WORD   1                               ;1 FRANC PER FRANC
    5955 0000e9d0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5956 0000e9e0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5957 0000ea30 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5958 0000ea70 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5959 0000ea90 00014040"         .LONG   FRENCH_5                         ;TITLE OF COIN MODE
    5960 0000eab0 000152b0"         .LONG   FIVE_10_11                  ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5961 0000ead0     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    5962 0000eae0 000194e0"         .LONG   FRENCH510
    5963                    *
    5964                    *       FRENCH 6              2/5F       4/10F  9/2 X 10F
    5965                    *
    5966                    *
    5967 0000eb00     0002          .WORD   2,0,4,0,0,1,8,0,2,1                ;2/5F        4/10F   9/20F
    5968 0000eba0     0001          .WORD   1                               ;1 FRANC PER FRANC
    5969 0000ebb0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5970 0000ebc0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5971 0000ec10 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5972 0000ec50 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5973 0000ec70 00014090"         .LONG   FRENCH_6                         ;TITLE OF COIN MODE
    5974 0000ec90 00015390"         .LONG   FOUR_10_9                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5975 0000ecb0     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  128

    5976 0000ecc0 000194e0"         .LONG   FRENCH510
    5977                    *
    5978                    *       FRENCH 7              1/5F       3/10F  7/2 X 10F
    5979                    *
    5980                    *
    5981 0000ece0     0003          .WORD   3,0,6,0,0,2,12,0,2,1              ;1/5F  3/10F   7/20F
    5982 0000ed80     0001          .WORD   1                               ;1 FRANC PER FRANC
    5983 0000ed90     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5984 0000eda0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5985 0000edf0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5986 0000ee30 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5987 0000ee50 000140e0"         .LONG   FRENCH_7                         ;TITLE OF COIN MODE
    5988 0000ee70 00015470"         .LONG   THREE_10_7                  ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5989 0000ee90     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    5990 0000eea0 000194e0"         .LONG   FRENCH510
    5991                    *
    5992                    *       FRENCH 8              1/5F       2/10F  5/2 X 10F
    5993                    *
    5994                    *
    5995 0000eec0     0001          .WORD   1,0,2,0,0,1,4,0,2,1                ;1/5F        2/10F  5/20F
    5996 0000ef60     0001          .WORD   1                               ;1 FRANC PER FRANC
    5997 0000ef70     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5998 0000ef80     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5999 0000efd0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6000 0000f010 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    6001 0000f030 00014130"         .LONG   FRENCH_8                         ;TITLE OF COIN MODE
    6002 0000f050 00015550"         .LONG   TWO_10_5                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    6003 0000f070     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    6004 0000f080 000194e0"         .LONG   FRENCH510
    6005                    
    6006                    *
    6007                    *       FRENCH 9              1/3 X 1F    2/5F
    6008                    *
    6009                    *       COIN SLOTS ARE  1F -- 5F
    6010                    *
    6011                    *
    6012 0000f0a0     0002          .WORD   2,0,10,0,0,5,0,0,2,1              ;1/3X1F  2/5F
    6013 0000f140     0001          .WORD   1                               ;1 FRANC PER FRANC
    6014 0000f150     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    6015 0000f160     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6016 0000f1b0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6017 0000f1f0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    6018 0000f210 00014180"         .LONG   FRENCH_9                         ;TITLE OF COIN MODE
    6019 0000f230 000155d0"         .LONG   F1325                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    6020 0000f250     0003          .WORD   SHOW_2                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    6021 0000f260 000195f0"         .LONG   FRENCH1F5F
    6022                    *
    6023                    *       FRENCH 10             1/2 X 1F    3/5F
    6024                    *
    6025                    *       COIN SLOTS ARE  1F -- 5F
    6026                    *
    6027                    *
    6028 0000f280     0003          .WORD   3,0,15,0,0,5,0,0,2,1              ;1/2X1F  3/5F
    6029 0000f320     0001          .WORD   1                               ;1 FRANC PER FRANC
    6030 0000f330     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  129

    6031 0000f340     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6032 0000f390 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6033 0000f3d0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    6034 0000f3f0 000141d0"         .LONG   FRENCH_10                       ;TITLE OF COIN MODE
    6035 0000f410 000156b0"         .LONG   F1235                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    6036 0000f430     0003          .WORD   SHOW_2                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    6037 0000f440 000195f0"         .LONG   FRENCH1F5F
    6038                    *
    6039                    *       FRENCH 11             1/3 X 1F    2/5F  5/2 X 5F
    6040                    *
    6041                    *       COIN SLOTS ARE  1F -- 5F
    6042                    *
    6043                    *
    6044 0000f460     0002          .WORD   2,0,10,0,0,5,20,0,2,1            ;1/3X1F        2/5F  5/10F
    6045 0000f500     0001          .WORD   1                               ;1 FRANC PER FRANC
    6046 0000f510     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    6047 0000f520     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6048 0000f570 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6049 0000f5b0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    6050 0000f5d0 00014220"         .LONG   FRENCH_11                       ;TITLE OF COIN MODE
    6051 0000f5f0 00015630"         .LONG   F13255                   ;1 COIN PER CREDIT (SERIES OF STRINGS)
    6052 0000f610     0004          .WORD   SHOW_3                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    6053 0000f620 000195f0"         .LONG   FRENCH1F5F
    6054                    
    6055                    *
    6056                    *       FRENCH 12             1/2 X 1F    3/5F    7 / 2 X 5F
    6057                    *
    6058                    *       COIN SLOTS ARE  1F -- 5F
    6059                    *
    6060                    *
    6061 0000f640     0003          .WORD   3,0,15,0,0,5,30,0,2,1            ;1/2X1F        3/5F  7/10F
    6062 0000f6e0     0001          .WORD   1                               ;1 FRANC PER FRANC
    6063 0000f6f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    6064 0000f700     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6065 0000f750 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6066 0000f790 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    6067 0000f7b0 00014270"         .LONG   FRENCH_12                       ;TITLE OF COIN MODE
    6068 0000f7d0 00015710"         .LONG   F12355                   ;1 COIN PER CREDIT (SERIES OF STRINGS)
    6069 0000f7f0     0004          .WORD   SHOW_3                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    6070 0000f800 000195f0"         .LONG   FRENCH1F5F
    6071                    
    6072                            .ENDIF
    6073                    
    6074                    *
    6075                    *       FRANCE ELECTRONIC
    6076                    *
    6077 0000f820     0001          .WORD   1,15,6,0,0,3,0,0,2,2    ; L,C,R,4,U/C,U/B,MINUNITS
    6078 0000f8c0     0001          .WORD   1                       ; COINS/DOLLAR
    6079 0000f8d0     0000          .WORD   0                       ;DON'T DISPLAY COIN FRACTIONS
    6080 0000f8e0     0001          .WORD   1,10,5,0,0              ; L,C,R,4
    6081 0000f930 000136a0"         .LONG   NULL_ST,FRANC_TRAIL     ; CHARACTER STRINGS.
    6082 0000f970 0001adb0"         .LONG   FRANCE_ELECTRONIC       ; SPECIAL MESSAGE
    6083 0000f990 00013c50"         .LONG   FRENCH_ELECTITLE        ; TITLE OF COIN MODE
    6084 0000f9b0 00015630"         .LONG   F13255                  ;COIN PAGE DESCRIPTION
    6085 0000f9d0     0004          .WORD   SHOW_3                  ;THREE LINES FOR THIS BABY
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  130

    6086 0000f9e0 00018ef0"         .LONG   FRANCE_ESLOT            ; QUARTER
    6087                    
    6088                    *
    6089                    *       CANADA    COINAGE IS 50 CENT   3/$1.00
    6090                    *
    6091 0000fa00     0001          .WORD   1,0,4,0,4,2,4,0,2,2    ;WILLY PRICING
    6092 0000faa0     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    6093 0000fab0     0001          .WORD   1                       ;DISPLAY COIN FRACTIONS
    6094 0000fac0     0001          .WORD   1,0,4,0,4                       ;COIN VALUE
    6095 0000fb10 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ;CHARACTER STRINGS.
    6096 0000fb50 00000001          .LONG   CSM_LIST                ;PRINT THE 2 THE OP SEES
    6097 0000fb70 000142c0"         .LONG   CANADA                  ;TITLE OF COIN MODE
    6098 0000fb90 00015130"         .LONG   CAN_1503D               ;1 PLAY 50, 3 FOR A DOLLAR
    6099 0000fbb0     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    6100 0000fbc0 00019700"         .LONG   CAN_QD                  ;QUARTER
    6101                    
    6102                            .IF     FULLPRICE
    6103                    
    6104                    *       SWISS 1    COINAGE IS 6 PLAYS FOR 5 FRANC
    6105                    
    6106 0000fbe0     0006          .WORD   6,0,30,0,0,5,0,0,2,2             ;WILLY PRICING
    6107 0000fc80     0001          .WORD   1                               ;FRANCS HAVE NO FRACTIONS
    6108 0000fc90     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6109 0000fca0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6110 0000fcf0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL              ;CHARACTER STRINGS.
    6111 0000fd30 00000001          .LONG   CSM_LIST
    6112 0000fd50 00014300"         .LONG   SWISS_1                 ;TITLE OF COIN MODE
    6113 0000fd70 000150d0"         .LONG   SFRANC_6                         ;1 COIN PER CREDIT (SERIES
    6114 0000fd90     0003          .WORD   SHOW_2
    6115 0000fda0 00019810"         .LONG   SWISS15
    6116                    
    6117                    *       SWISS 2    COINAGE IS 7 PLAYS FOR 5 FRANC
    6118                    
    6119 0000fdc0     0006          .WORD   6,0,30,0,0,5,30,0,2,2           ;WILLY PRICING
    6120 0000fe60     0001          .WORD   1                               ;FRANCS HAVE NO FRACTIONS
    6121 0000fe70     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6122 0000fe80     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6123 0000fed0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL              ;CHARACTER STRINGS.
    6124 0000ff10 00000001          .LONG   CSM_LIST
    6125 0000ff30 00014340"         .LONG   SWISS_2                 ;TITLE OF COIN MODE
    6126 0000ff50 00015190"         .LONG   SFRANC_7                         ;1 COIN PER CREDIT (SERIES
    6127 0000ff70     0003          .WORD   SHOW_2
    6128 0000ff80 00019810"         .LONG   SWISS15
    6129                    
    6130                    *       SWISS 3     COINAGE IS 8 PLAYS FOR 5 FRANC
    6131                    
    6132 0000ffa0     0007          .WORD   7,0,35,0,0,5,35,0,2,2           ;WILLY PRICING
    6133 00010040     0001          .WORD   1                               ;FRANCS HAVE NO FRACTIONS
    6134 00010050     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6135 00010060     0001          .WORD   1,0,5,0,0                               ;COIN VALUE
    6136 000100b0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL             ;CHARACTER STRINGS.
    6137 000100f0 00000001          .LONG   CSM_LIST
    6138 00010110 00014380"         .LONG   SWISS_3                         ;TITLE OF COIN MODE
    6139 00010130 000151f0"         .LONG   SFRANC_8                        ;1 COIN PER CREDIT (SERIES
    6140 00010150     0003          .WORD   SHOW_2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  131

    6141 00010160 00019810"         .LONG   SWISS15
    6142                    
    6143                    *       ITALY COINAGE IS 1 PLAYS FOR 500 LIRE
    6144                    
    6145 00010180     0001          .WORD   1,0,1,0,0,1,0,0,2,2             ;WILLY PRICING
    6146 00010220     0001          .WORD   1                               ;LIRE HAVE NO FRACTIONS
    6147 00010230     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6148                    ;       .WORD   500,0,500,0,0                    ;COIN VALUE
    6149 00010240     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    6150 00010290 000136a0"         .LONG   NULL_ST,LIRE_TRAIL               ;CHARACTER STRINGS.
    6151 000102d0 00000001          .LONG   CSM_LIST
    6152 000102f0 000143c0"         .LONG   ITALY_1                 ;TITLE OF COIN MODE
    6153 00010310 00015790"         .LONG   P1500L                  ;1 COIN PER CREDIT (SERIES OF ST
    6154 00010330     0002          .WORD   SHOW_1
    6155 00010340 00019920"         .LONG   ITALYLIRE
    6156                    
    6157                    *       U.K. ELECTRONIC 1
    6158                    
    6159                    *       CENTER = 20P  XTRA = 10P  LEFT = 1P  RIGHT = 50P
    6160                    *       1 PLAY / 50 P
    6161                    *       3 PLAY / 1 POUND
    6162                    
    6163                    *                L, C,  R, 4,DBV,U/C,U/B,MINUNITS /START /CONTINUE
    6164 00010360     000a          .WORD   10, 2, 5, 1, 0, 5,  10,0,1,1            ;NUMBERS FOR 1L/20P/50P/10P
    6165 00010400     000a          .WORD   10                                      ;PENCE SUCK!
    6166 00010410     0000          .WORD   0                                       ;DON'T DISPLAY COIN FRACTIO
    6167 00010420     000a          .WORD   10,2,5,1,0                              ;COIN VALUE
    6168 00010470 000136a0"         .LONG   NULL_ST,POUND_TRAIL     ;CHARACTER STRINGS.
    6169 000104b0 0001b2c0"         .LONG   UK_ELECTRONIC1                          ;SPECIAL TITLE W/ POUND
    6170 000104d0 000143f0"         .LONG   UK_1                                    ;TITLE OF COIN MODE
    6171 000104f0 000158b0"         .LONG   UK_420                                  ;
    6172 00010510     0003          .WORD   SHOW_2
    6173 00010520 00019b40"         .LONG   UK_ELEC
    6174                    
    6175                    *       U.K. ELECTRONIC 2  (CCU)
    6176                    
    6177                    *       CREDITS ARE AWARDED 1 COIN / 1 PLAY.....
    6178                    
    6179                    *       CCU ACCUMULATES 4 COINS AND STROKES US AS FOLLOWS:
    6180                    
    6181                    *       1 PLAY / 50 P
    6182                    *       2 PLAY / 1 POUND
    6183                    
    6184                    *                L, C,  R, 4,DBV,U/C,U/B,MINUNITS /START /CONTINUE
    6185 00010540     000a          .WORD   10, 2, 5, 1, 0, 5,  0,0,1,1             ;NUMBERS FOR 1L/20P/50P/10P
    6186 000105e0     000a          .WORD   10                              ;PENCE ARE FRACTIONS!
    6187 000105f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6188 00010600     000a          .WORD   10,2,5,1,0                              ;COIN VALUE
    6189 00010650 000136a0"         .LONG   NULL_ST,COINS_TRAIL        ;CHARACTER STRINGS.
    6190 00010690 0001b530"         .LONG   UK_ELECTRONIC2           ;SPECIAL TITLE W/ POUND
    6191 000106b0 00014450"         .LONG   UK_2                      ;TITLE OF COIN MODE
    6192 000106d0 00015850"         .LONG   UK_320                  ;
    6193 000106f0     0003          .WORD   SHOW_2
    6194 00010700 00019b40"         .LONG   UK_ELEC
    6195                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  132

    6196                    *       U.K. 3   COINAGE IS 1 PLAY FOR 30P   2 FOR 50P  5 FOR 1.00
    6197                    
    6198 00010720     0014          .WORD   20,4,10,2,0,5,20,0,1,1  ;WILLY PRICING
    6199 000107c0     000a          .WORD   10                      ;PENCE ARE FRACTIONS!
    6200 000107d0     0000          .WORD   0                       ;DON'T DISPLAY COIN FRACTIO
    6201 000107e0     000a          .WORD   10,2,5,1,0                              ;COIN VALUE
    6202 00010830 000136a0"         .LONG   NULL_ST,POUND_TRAIL     ;CHARACTER STRINGS.
    6203 00010870 0001b7a0"         .LONG   UK_ELECTRONIC3           ;SPECIAL TITLE W/ POUND
    6204 00010890 000144b0"         .LONG   UK_3                    ;TITLE OF COIN MODE
    6205 000108b0 000157d0"         .LONG   UK_120                  ;1 COIN PER CREDIT (SERIES OF ST
    6206 000108d0     0003          .WORD   SHOW_2
    6207 000108e0 00019b40"         .LONG   UK_ELEC
    6208                    
    6209                    *       U.K. 4  
    6210                    
    6211 00010900     000a          .WORD   10, 0, 5, 0, 0, 5,  10,0,1,1            ;NUMBERS FOR 1L/20P/50P/10P
    6212 000109a0     000a          .WORD   10                                      ;PENCE SUCK!
    6213 000109b0     0000          .WORD   0                                       ;DON'T DISPLAY COIN FRACTIO
    6214 000109c0     000a          .WORD   10,0,5,0,0                              ;COIN VALUE
    6215 00010a10 000136a0"         .LONG   NULL_ST,POUND_TRAIL     ;CHARACTER STRINGS.
    6216 00010a50 0001b2c0"         .LONG   UK_ELECTRONIC1
    6217 00010a70 00014510"         .LONG   UK_4                                    ;TITLE OF COIN MODE
    6218 00010a90 000158b0"         .LONG   UK_220                                  ;
    6219 00010ab0     0003          .WORD   SHOW_2
    6220 00010ac0 00019a30"         .LONG   UK2050
    6221                    
    6222                    *       U.K. 5  
    6223                    
    6224                    
    6225                    *       1 PLAY / 50 P
    6226                    *       2 PLAY / 1 POUND
    6227                    
    6228                    *                L, C,  R, 4,DBV,U/C,U/B,MINUNITS /START /CONTINUE
    6229 00010ae0     000a          .WORD   10, 0, 5, 0, 0, 5,  0,0,1,1             ;NUMBERS FOR 1L/20P/50P/10P
    6230 00010b80     000a          .WORD   10                              ;PENCE ARE FRACTIONS!
    6231 00010b90     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6232 00010ba0     000a          .WORD   10,0,5,0,0                              ;COIN VALUE
    6233 00010bf0 000136a0"         .LONG   NULL_ST,COINS_TRAIL        ;CHARACTER STRINGS.
    6234 00010c30 0001b530"         .LONG   UK_ELECTRONIC2
    6235 00010c50 00014550"         .LONG   UK_5                      ;TITLE OF COIN MODE
    6236 00010c70 00015850"         .LONG   UK_520                  ;
    6237 00010c90     0003          .WORD   SHOW_2
    6238 00010ca0 00019a30"         .LONG   UK2050
    6239                    
    6240                    *       DONE BECAUSE WE LEARNED SOME NEW SPANISH SHIT!
    6241                    
    6242                    *       SPAIN 1     1 PLAY / 100 PESETA   6 PLAY / 500 PESETA
    6243                    
    6244 00010cc0     0001          .WORD   1,0,5,0,0,1,5,0,2,2             ;WILLY PRICING
    6245 00010d60     0001          .WORD   1                               ;NO FRACTIONS
    6246 00010d70     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6247 00010d80     0001          .WORD   1,0,5,0,0                       ;COIN VALUE
    6248 00010dd0 000136a0"         .LONG   NULL_ST,PESETA_TRAIL            ;CHARACTER STRINGS.
    6249 00010e10 00000001          .LONG   CSM_LIST
    6250 00010e30 00014590"         .LONG   SP_1                            ;TITLE OF COIN MODE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  133

    6251 00010e50 00015970"         .LONG   SP_5100                         ;1 COIN PER CREDIT (SERIES OF ST
    6252 00010e70     0003          .WORD   SHOW_2
    6253 00010e80 00019d00"         .LONG   PESETA100
    6254                    
    6255                    
    6256                    *       SPAIN 2     1 PLAY / 25 PESETA   5 PLAY / 100 PESETA
    6257                    
    6258 00010ea0     0001          .WORD   1,0,5,0,0,1,0,0,2,2                ;WILLY PRICING
    6259 00010f40     0001          .WORD   1                               ;NO FRACTIONS
    6260 00010f50     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    6261 00010f60     0001          .WORD   1,0,5,0,0                       ;COIN VALUE
    6262 00010fb0 000136a0"         .LONG   NULL_ST,PESETA_TRAIL      ;CHARACTER STRINGS.
    6263 00010ff0 00000001          .LONG   CSM_LIST
    6264 00011010 000145d0"         .LONG   SP_2                      ;TITLE OF COIN MODE
    6265 00011030 00015910"         .LONG   SP_4100                 ;1 COIN PER CREDIT (SERIES OF ST
    6266 00011050     0003          .WORD   SHOW_2
    6267 00011060 00019d00"         .LONG   PESETA100
    6268                    
    6269                    
    6270                    *       AUSTRALIA 1   1 PLAY / 3 X 20 CENTS     2 FOR $1.00
    6271                    
    6272 00011080     0002          .WORD   2,0,10,0,0,5,0,0,2,2              ;WILLY PRICING
    6273 00011120     0005          .WORD   5                               ;DOLLARS
    6274 00011130     0000          .WORD   0                               ;DON'T SHOW FRACTIONS FOR T
    6275 00011140     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6276 00011190 00013630"         .LONG   DOLLAR_LEAD,NULL_ST       ;CHARACTER STRINGS.
    6277 000111d0 00000001          .LONG   CSM_LIST
    6278 000111f0 00014610"         .LONG   AUS_1                    ;TITLE OF COIN MODE
    6279 00011210 000159d0"         .LONG   AU_60                    ;1 COIN PER CREDIT (SERIES OF S
    6280 00011230     0003          .WORD   SHOW_2
    6281 00011240 00019e10"         .LONG   AUST20C
    6282                    *
    6283                    *       AUSTRALIA 2   1 PLAY / $1.00    2 PLAYS FOR $2.00
    6284                    *
    6285 00011260     0001          .WORD   1,0,5,0,0,5,0,0,1,1      ; WILLY PRICING
    6286 00011300     0005          .WORD   5                        ; DOLLARS
    6287 00011310     0001          .WORD   1                        ; SHOW FRACTIONS FOR THE 3 C
    6288 00011320     0001          .WORD   1,0,5,0,0                        ; COIN VALUE
    6289 00011370 00013630"         .LONG   DOLLAR_LEAD,NULL_ST      ; CHARACTER STRINGS.
    6290 000113b0 00000001          .LONG   CSM_LIST
    6291 000113d0 00014670"         .LONG   AUS_2                    ; TITLE OF COIN MODE
    6292 000113f0 00015a30"         .LONG   AU_100                   ; 1 COIN PER CREDIT (SERIES OF ST
    6293 00011410     0003          .WORD   SHOW_2
    6294 00011420 00019e10"         .LONG   AUST20C
    6295                    
    6296                            .ENDIF
    6297                    
    6298                    *       JAPAN 1  1 PLAY / 100 YEN
    6299                    
    6300 00011440     0001          .WORD   1,0,1,0,0,1,0,0,2,2                ;WILLY PRICING
    6301 000114e0     0001          .WORD   1                               ;DOLLARS
    6302 000114f0     0001          .WORD   1                               ;FRACTIONS OK
    6303 00011500     0001          .WORD   1,0,1,0,0                  ;COIN VALUE
    6304 00011550 000136a0"         .LONG   NULL_ST,YEN_TRAIL               ;CHARACTER STRINGS.
    6305 00011590 00000001          .LONG   CSM_LIST
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  134

    6306 000115b0 000146d0"         .LONG   JAP_1                    ;TITLE OF COIN MODE
    6307 000115d0 00015a90"         .LONG   JAP_100                 ;1 COIN PER CREDIT (SERIES OF ST
    6308 000115f0     0002          .WORD   SHOW_1
    6309 00011600 00019f20"         .LONG   YEN100
    6310                    
    6311                            .IF     FULLPRICE
    6312                    *       JAPAN 2  2 PLAY / 100 YEN
    6313                    
    6314 00011620     0002          .WORD   2,0,2,0,0,1,0,0,2,2                ;WILLY PRICING
    6315 000116c0     0001          .WORD   1                               ;DOLLARS
    6316 000116d0     0001          .WORD   1                               ;FRACTIONS OK
    6317 000116e0     0001          .WORD   1,0,1,0,0                  ;COIN VALUE
    6318 00011730 000136a0"         .LONG   NULL_ST,YEN_TRAIL               ;CHARACTER STRINGS.
    6319 00011770 00000001          .LONG   CSM_LIST
    6320 00011790 00014710"         .LONG   JAP_2                    ;TITLE OF COIN MODE
    6321 000117b0 00015ad0"         .LONG   JAP_200                 ;1 COIN PER CREDIT (SERIES OF ST
    6322 000117d0     0002          .WORD   SHOW_1
    6323 000117e0 00019f20"         .LONG   YEN100
    6324                    
    6325                    *       AUSTRIA  1   1 PLAY / 5 SCHILLING  2 PLAY / 10 SCHILLING
    6326                    
    6327 00011800     0001          .WORD   1,0,2,0,0,1,0,0,2,2                ;WILLY PRICING
    6328 000118a0     0001          .WORD   1                               ;DOLLARS
    6329 000118b0     0001          .WORD   1                               ;FRACTIONS OK
    6330 000118c0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    6331 00011910 000136a0"         .LONG   NULL_ST,SHILL_TRAIL        ;CHARACTER STRINGS.
    6332 00011950 00000001          .LONG   CSM_LIST
    6333 00011970 00014750"         .LONG   ASTA_1                   ;TITLE OF COIN MODE
    6334 00011990 00015b70"         .LONG   ASTA_15                 ;1 COIN PER CREDIT (SERIES OF ST
    6335 000119b0     0002          .WORD   SHOW_1
    6336 000119c0 0001a030"         .LONG   SHILL510
    6337                    
    6338                    *       AUSTRIA  2   1 PLAY / 2 X 5 SCHILLING   3 PLAY / 10 SCHILLING
    6339                    
    6340 000119e0     0001          .WORD   1,0,2,0,0,2,4,0,2,2                ;WILLY PRICING
    6341 00011a80     0001          .WORD   1                               ;DOLLARS
    6342 00011a90     0001          .WORD   1                               ;FRACTIONS OK
    6343 00011aa0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    6344 00011af0 000136a0"         .LONG   NULL_ST,SHILL_TRAIL        ;CHARACTER STRINGS.
    6345 00011b30 00000001          .LONG   CSM_LIST
    6346 00011b50 000147a0"         .LONG   ASTA_2                   ;TITLE OF COIN MODE
    6347 00011b70 00015b10"         .LONG   ASTA_10                 ;1 COIN PER CREDIT (SERIES OF ST
    6348 00011b90     0003          .WORD   SHOW_2
    6349 00011ba0 0001a030"         .LONG   SHILL510
    6350                    
    6351                    *       BELGIUM 1  1 PLAY / 20F
    6352                    
    6353 00011bc0     0001          .WORD   1,0,1,0,0,1,0,0,2,2                ;WILLY PRICING
    6354 00011c60     0001          .WORD   1                               ;DOLLARS
    6355 00011c70     0001          .WORD   1                               ;FRACTIONS OK
    6356 00011c80     0004          .WORD   4,0,4,0,0                        ;COIN VALUE
    6357 00011cd0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6358 00011d10 00000001          .LONG   CSM_LIST
    6359 00011d30 000147f0"         .LONG   BEL_1                    ;TITLE OF COIN MODE
    6360 00011d50 00015bd0"         .LONG   BEL_120                 ;1 COIN PER CREDIT (SERIES OF ST
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  135

    6361 00011d70     0002          .WORD   SHOW_1
    6362 00011d80 0001a140"         .LONG   FRANC20
    6363                    
    6364                    *       BELGIUM 2  3 PLAY / 20F
    6365                    
    6366 00011da0     0003          .WORD   3,0,3,0,0,1,0,0,2,2                ;WILLY PRICING
    6367 00011e40     0001          .WORD   1                               ;DOLLARS
    6368 00011e50     0001          .WORD   1                               ;FRACTIONS OK
    6369 00011e60     0004          .WORD   4,0,4,0,0                        ;COIN VALUE
    6370 00011eb0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6371 00011ef0 00000001          .LONG   CSM_LIST
    6372 00011f10 00014840"         .LONG   BEL_2                    ;TITLE OF COIN MODE
    6373 00011f30 00015c50"         .LONG   BEL_320                 ;1 COIN PER CREDIT (SERIES OF ST
    6374 00011f50     0002          .WORD   SHOW_1
    6375 00011f60 0001a140"         .LONG   FRANC20
    6376                    
    6377                    *       BELGIUM 3  2 PLAY / 20F
    6378                    
    6379 00011f80     0002          .WORD   2,0,2,0,0,1,0,0,2,2                ;WILLY PRICING
    6380 00012020     0001          .WORD   1                               ;DOLLARS
    6381 00012030     0001          .WORD   1                               ;FRACTIONS OK
    6382 00012040     0004          .WORD   4,0,4,0,0                        ;COIN VALUE
    6383 00012090 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    6384 000120d0 00000001          .LONG   CSM_LIST
    6385 000120f0 00014890"         .LONG   BEL_3                    ;TITLE OF COIN MODE
    6386 00012110 00015c10"         .LONG   BEL_220                 ;1 COIN PER CREDIT (SERIES OF ST
    6387 00012130     0002          .WORD   SHOW_1
    6388 00012140 0001a140"         .LONG   FRANC20
    6389                    
    6390                    *
    6391                    *       BELGIUM ELECTRONIC
    6392                    *
    6393 00012160     000a          .WORD   10,1,4,0,0,4,0,0,2,2            ; L,C,R,4,U/C,U/B,MINUNITS
    6394 00012200     0001          .WORD   1                       ; COINS/DOLLAR
    6395 00012210     0001          .WORD   1                       ; DISPLAY FRACTIONS
    6396 00012220     000a          .WORD   10,1,4,0,0              ; L,C,R,4
    6397 00012270 000136a0"         .LONG   NULL_ST,FRANC_TRAIL              ;CHARACTER STRINGS.
    6398 000122b0 0001b190"         .LONG   BELGIUM_ELECTRONIC              ; SPECIAL MESSAGE
    6399 000122d0 000148e0"         .LONG   BELGIUM_ELECTITLE               ; TITLE OF COIN MODE
    6400 000122f0 00015c90"         .LONG   BEL_ELEC                        ; SETTINGS DESCRIPTION
    6401 00012310     0003          .WORD   SHOW_2                  ; LINES TO SHOW ON
    6402 00012320 00019110"         .LONG   BELGIUM_ESLOT           ; QUARTER
    6403                    
    6404                    *       SWEDEN  1 PLAY / 3 X 1 KRONA   2 PLAY   5 KRONA
    6405                    
    6406 00012340     0002          .WORD   2,0,10,0,0,5,0,0,2,2             ;WILLY PRICING
    6407 000123e0     0001          .WORD   1                               ;DOLLARS
    6408 000123f0     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6409 00012400     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6410 00012450 000136a0"         .LONG   NULL_ST,KRONA_TRAIL        ;CHARACTER STRINGS.
    6411 00012490 00000001          .LONG   CSM_LIST
    6412 000124b0 00014940"         .LONG   SWED_1                  ;TITLE OF COIN MODE
    6413 000124d0 00015cd0"         .LONG   SWED_2X5                         ;1 COIN PER CREDIT (SERIES
    6414 000124f0     0002          .WORD   SHOW_1
    6415 00012500 0001a240"         .LONG   KRONA5
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  136

    6416                    
    6417                    *       NEW ZEALAND 1   1 PLAY / 3 X 20 CENT
    6418                    
    6419 00012520     0001          .WORD   1,0,1,0,0,3,0,0,1,1                ;WILLY PRICING
    6420 000125c0     0005          .WORD   5                               ;FIVE PER
    6421 000125d0     0001          .WORD   1                               ;SHOW FRACTIONS
    6422 000125e0     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    6423 00012630 00013630"         .LONG   DOLLAR_LEAD,NULL_ST       ;CHARACTER STRINGS.
    6424 00012670 00000001          .LONG   CSM_LIST
    6425 00012690 00014980"         .LONG   NZ_1                      ;TITLE OF COIN MODE
    6426 000126b0 00015d70"         .LONG   NZ_13                    ;1 COIN PER CREDIT (SERIES OF S
    6427 000126d0     0002          .WORD   SHOW_1
    6428 000126e0 0001a350"         .LONG   NZ20
    6429                    
    6430                    
    6431                    *       NEW ZEALAND 2   1 PLAY / 2 X 20 CENT
    6432                    
    6433 00012700     0001          .WORD   1,0,1,0,0,2,0,0,1,1                ;WILLY PRICING
    6434 000127a0     0005          .WORD   5                               ;FIVE PER
    6435 000127b0     0001          .WORD   1                               ;SHOW FRACTIONS
    6436 000127c0     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    6437 00012810 00013630"         .LONG   DOLLAR_LEAD,NULL_ST       ;CHARACTER STRINGS.
    6438 00012850 00000001          .LONG   CSM_LIST
    6439 00012870 000149f0"         .LONG   NZ_2                      ;TITLE OF COIN MODE
    6440 00012890 00015d30"         .LONG   NZ_12                    ;1 COIN PER CREDIT (SERIES OF S
    6441 000128b0     0002          .WORD   SHOW_1
    6442 000128c0 0001a350"         .LONG   NZ20
    6443                    
    6444                    *       NETHERLANDS     1 PLAY / 1 HFL. 3 PLAY / 2.5 HFL.
    6445                    
    6446 000128e0     0001          .WORD   1,0,3,0,0,1,0,0,2,2                ;WILLY PRICING
    6447 00012980     0001          .WORD   1                               ;FIVE PER
    6448 00012990     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6449 000129a0     0002          .WORD   2,0,5,0,0                        ;COIN VALUE
    6450 000129f0 000136a0"         .LONG   NULL_ST,HFL_TRAIL               ;CHARACTER STRINGS.
    6451 00012a30 00000001          .LONG   CSM_LIST
    6452 00012a50 00014a60"         .LONG   NETH                      ;TITLE OF COIN MODE
    6453 00012a70 00015db0"         .LONG   NETH_HF                 ;1 COIN PER CREDIT (SERIES OF ST
    6454 00012a90     0003          .WORD   SHOW_2
    6455 00012aa0 0001a450"         .LONG   HFSLOT
    6456                    
    6457                    
    6458                    *       FINLAND 1 PLAY / 1 MARKKA
    6459                    
    6460 00012ac0     0001          .WORD   1,0,1,0,0,1,0,0,2,2                ;WILLY PRICING
    6461 00012b60     0001          .WORD   1                               ;FIVE PER
    6462 00012b70     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6463 00012b80     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    6464 00012bd0 000136a0"         .LONG   NULL_ST,MARKKA_TRAIL      ;CHARACTER STRINGS.
    6465 00012c10 00000001          .LONG   CSM_LIST
    6466 00012c30 00014ac0"         .LONG   FINLAND                 ;TITLE OF COIN MODE
    6467 00012c50 00015e10"         .LONG   FINMKA                  ;1 COIN PER CREDIT (SERIES OF ST
    6468 00012c70     0002          .WORD   SHOW_1
    6469 00012c80 0001a560"         .LONG   MKSLOT
    6470                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  137

    6471                    *       NORWAY  1 PLAY / 2 X 1 KRONE    3/ 5 X 1 KRONE
    6472                    
    6473 00012ca0     0003          .WORD   3,0,3,0,0,5,0,0,2,2                ;WILLY PRICING
    6474 00012d40     0001          .WORD   1                               ;FIVE PER
    6475 00012d50     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6476 00012d60     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    6477 00012db0 000136a0"         .LONG   NULL_ST,KRONE_TRAIL       ;CHARACTER STRINGS.
    6478 00012df0 00000001          .LONG   CSM_LIST
    6479 00012e10 00014b00"         .LONG   NORWAY                  ;TITLE OF COIN MODE
    6480 00012e30 00015e50"         .LONG   KR_LIST                  ;1 COIN PER CREDIT (SERIES OF STRI
    6481 00012e50     0003          .WORD   SHOW_2
    6482 00012e60 0001a650"         .LONG   NKRSLOT
    6483                    
    6484                    *       DENMARK 1 PLAY / 2 X 1 KRONE    3/ 5 KRONE        7 / 10 KRONE
    6485                    
    6486 00012e80     0003          .WORD   3,0,15,0,0,5,30,0,2,2            ;WILLY PRICING
    6487 00012f20     0001          .WORD   1                               ;FIVE PER
    6488 00012f30     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6489 00012f40     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    6490 00012f90 000136a0"         .LONG   NULL_ST,KRONE_TRAIL       ;CHARACTER STRINGS.
    6491 00012fd0 00000001          .LONG   CSM_LIST
    6492 00012ff0 00014b40"         .LONG   DENMARK                 ;TITLE OF COIN MODE
    6493 00013010 00015eb0"         .LONG   DKR_LIST                         ;1 COIN PER CREDIT (SERIES
    6494 00013030     0004          .WORD   SHOW_3
    6495 00013040 0001a760"         .LONG   DKRSLOT
    6496                    
    6497                    
    6498                    *       ANTILLES      1 PLAY / 25 CENTS 4 PLAYS / 1 GUILDER
    6499                    
    6500 00013060     0001          .WORD   1,0,4,0,0,1,0,0,2,2                ;WILLY PRICING
    6501 00013100     0004          .WORD   4                               ;FIVE PER
    6502 00013110     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6503 00013120     0001          .WORD   1,0,4,0,0                        ;COIN VALUE
    6504 00013170 000136a0"         .LONG   NULL_ST,GUILDER_TRAIL     ;CHARACTER STRINGS.
    6505 000131b0 00000001          .LONG   CSM_LIST
    6506 000131d0 00014b80"         .LONG   ANTILLES                         ;TITLE OF COIN MODE
    6507 000131f0 00015f30"         .LONG   ANT_LIST                         ;1 COIN PER CREDIT (SERIES
    6508 00013210     0002          .WORD   SHOW_1
    6509 00013220 0001a870"         .LONG   ANTSLOT
    6510                    
    6511                    *       HUNGARY     1 CREDIT / 2X10 FORINT  3 CREDITS / 2X20 FORINT
    6512                    
    6513 00013240     0001          .WORD   1,0,2,0,0,2,4,0,2,2             ;WILLY PRICING
    6514 000132e0     0001          .WORD   1                               ;1 TO 1
    6515 000132f0     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    6516 00013300     0001          .WORD   1,0,2,0,0                       ;COIN VALUE
    6517 00013350 000136a0"         .LONG   NULL_ST,FORINT_TRAIL            ;CHARACTER STRINGS.
    6518 00013390 00000001          .LONG   CSM_LIST
    6519 000133b0 00014bd0"         .LONG   HUNGARY                         ;TITLE OF COIN MODE
    6520 000133d0 00015f90"         .LONG   HUNG_LIST                        ;1 COIN PER CREDIT (SERIES
    6521 000133f0     0002          .WORD   SHOW_1
    6522 00013400 0001a970"         .LONG   HUNGSLOT
    6523                    
    6524                            .ENDIF
    6525                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  138

    6526              003d  CS_ENTS EQU     ($-CSELCT)/CS_SIZE          ;NUMBER OF ENTRIES IN TABLE
    6527                    
    6528                    
    6529                    ;
    6530                    ;       DIP SWITCH TABLES
    6531                    ;
    6532                    
    6533              0001  USABASE EQU     1
    6534              000c  GERBASE EQU     G1SEL
    6535              0012  FRABASE EQU     F1SEL
    6536                    
    6537                            .IF     FULLPRICE
    6538                    
    6539 00013420     0001  USADIP  .WORD   USABASE+0, USABASE+1, USABASE+2, USABASE+3, USABASE+8
    6540 00013470     0009          .WORD   USABASE+8, USABASE+8
    6541                    
    6542 00013490     000c  GERDIP  .WORD   GERBASE+0, GERBASE+1, GERBASE+2, GERBASE+3, GERBASE+4
    6543 000134e0     0010          .WORD   GERBASE+4, GERBASE+4
    6544                    
    6545 00013500     0012  FRADIP  .WORD   FRABASE+0, FRABASE+1, FRABASE+2, FRABASE+3, FRABASE+12
    6546 00013550     001e          .WORD   FRABASE+12, FRABASE+12
    6547                    
    6548                            .ELSE
    6549                    
    6550                    USADIP  .WORD   USABASE+0, USABASE+1, USABASE+2, USABASE+3, USABASE+4
    6551                            .WORD   USABASE+4, USABASE+4
    6552                    
    6553                    GERDIP  .WORD   GERBASE+0, GERBASE+1, GERBASE+2, GERBASE+3, GERBASE+4
    6554                            .WORD   GERBASE+4, GERBASE+4
    6555                    
    6556                    FRADIP  .WORD   FRABASE+0, FRABASE+1, FRABASE+2, FRABASE+3, FRABASE+4
    6557                            .WORD   FRABASE+4, FRABASE+4
    6558                    
    6559                            .ENDIF
    6560                    
    6561                    
    6562 00013570 00013420" DIPCOINTAB      .LONG   USADIP, GERDIP, FRADIP, USADIP
    6563                    
    6564                    
    6565                    **************************************************************************
    6566                    *                                                                       *
    6567                    *        COLLECTION MESSAGES                                      *
    6568                    *                                                                       *
    6569                    **************************************************************************
    6570 000135f0       30  ME_ZERO  .STRING "0"
    6571 000135f8       00          .BYTE   0
    6572 00013600                   .EVEN
    6573                    
    6574 00013600       2d  ME_DASH         .string "-",0
    6575 00013610                   .even
    6576                    
    6577 00013610       2e  ME_DECIMAL      .STRING "."
    6578 00013618       00          .BYTE   0
    6579 00013620                   .EVEN
    6580                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  139

    6581 00013620       3a  ME_COLON .STRING ":"
    6582 00013628       00          .BYTE   0
    6583 00013630                   .EVEN
    6584                    
    6585 00013630       24  DOLLAR_LEAD     .STRING "$  "
    6586 00013648       00          .BYTE   0
    6587 00013650                   .EVEN
    6588                    
    6589 00013650           POUND_LEAD
    6590 00013650       82          .STRING FONT_EPOUND,"  ",0
    6591 00013670                   .EVEN
    6592 00013670           POUND_TRAIL
    6593 00013670       20          .STRING "  PND",0
    6594 000136a0                   .EVEN
    6595                    
    6596 000136a0           NULL_ST 
    6597 000136a0       00          .BYTE   0
    6598 000136b0                   .EVEN
    6599                    
    6600 000136b0       20  DM_TRAIL        .STRING "  DM"
    6601 000136d0       00          .BYTE   0
    6602 000136e0                   .EVEN
    6603                    
    6604 000136e0       20  FRANC_TRAIL     .STRING "  FRANC"
    6605 00013718       00          .BYTE   0
    6606 00013720                   .EVEN
    6607                            
    6608                            .IF     FULLPRICE
    6609 00013720       20  LIRE_TRAIL      .STRING "  LIRE"
    6610 00013750       00          .BYTE   0
    6611 00013760                   .EVEN
    6612                    
    6613 00013760       20  PESETA_TRAIL    .STRING "  PESETA"
    6614 000137a0       00          .BYTE   0
    6615 000137b0                   .EVEN
    6616                            .ENDIF
    6617                    
    6618 000137b0           YEN_TRAIL
    6619 000137b0       20          .STRING "  YEN"
    6620 000137d8       00          .BYTE   0
    6621 000137e0                   .EVEN
    6622                    
    6623                            .IF     FULLPRICE
    6624 000137e0           SHILL_TRAIL
    6625 000137e0       20          .STRING "  SCHILLINGS"
    6626 00013840       00          .BYTE   0
    6627 00013850                   .EVEN
    6628                    
    6629 00013850           KRONA_TRAIL
    6630 00013850       20          .STRING "  KRONA"
    6631 00013888       00          .BYTE   0
    6632 00013890                   .EVEN
    6633                            .ENDIF
    6634                    
    6635 00013890           COINS_TRAIL
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  140

    6636 00013890       20          .STRING "  COINS"
    6637 000138c8       00          .BYTE   0
    6638 000138d0                   .EVEN
    6639                    
    6640                            .IF     FULLPRICE
    6641 000138d0           HFL_TRAIL
    6642 000138d0       20          .STRING "  HFI."
    6643 00013900       00          .BYTE   0
    6644 00013910                   .EVEN
    6645                    
    6646 00013910           MARKKA_TRAIL
    6647 00013910       20          .STRING "  MARKKA"
    6648 00013950       00          .BYTE   0
    6649 00013960                   .EVEN
    6650                    
    6651 00013960           KRONE_TRAIL
    6652 00013960       20          .STRING "  KRONE"
    6653 00013998       00          .BYTE 0
    6654 000139a0                   .EVEN
    6655                    
    6656 000139a0           GUILDER_TRAIL
    6657 000139a0       20          .STRING "  GUILDER"
    6658 000139e8       00          .BYTE 0
    6659 000139f0                   .EVEN
    6660                    
    6661 000139f0           FORINT_TRAIL
    6662 000139f0       20          .STRING "  FT",0
    6663                            .ENDIF
    6664                    
    6665                    *
    6666                    *       FOR THE COINAGE ADJUSTMENT MODE:
    6667                    *
    6668                    *
    6669                    *       THIS SET IS TITLES FOR THE CANNED MODES.
    6670                    *
    6671 00013a18       55  USA_1   .STRING "USA 1",0
    6672 00013a50                   .EVEN
    6673 00013a50       55  USA_2   .STRING "USA 2",0
    6674 00013a80                   .EVEN
    6675 00013a80       55  USA_3   .STRING "USA 3",0
    6676 00013ab0                   .EVEN
    6677 00013ab0       55  USA_4   .STRING "USA 4",0
    6678 00013ae0                   .EVEN
    6679                    
    6680                            .IF     FULLPRICE
    6681 00013ae0       55  USA_5   .STRING "USA 5",0
    6682 00013b10                   .EVEN
    6683 00013b10       55  USA_6   .STRING "USA 6",0
    6684 00013b40                   .EVEN
    6685 00013b40       55  USA_7   .STRING "USA 7",0
    6686 00013b70                   .EVEN
    6687 00013b70       55  USA_8   .STRING "USA 8",0
    6688 00013ba0                   .EVEN
    6689 00013ba0       55  USA_9   .STRING "USA 9",0
    6690 00013bd0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  141

    6691 00013bd0       55  USA_10  .STRING "USA 10",0
    6692 00013c10                   .EVEN
    6693                            .ENDIF
    6694                    
    6695 00013c10           USA_ELECTITLE
    6696 00013c10       55          .STRING "USA ECA",0
    6697 00013c50                   .EVEN
    6698                    
    6699 00013c50           FRENCH_ELECTITLE
    6700 00013c50       46          .STRING "FRANCE ECA",0
    6701 00013cb0                   .EVEN
    6702                    
    6703 00013cb0           GERMAN_ELECTITLE
    6704 00013cb0       47          .STRING "GERMAN ECA",0
    6705 00013d10                   .EVEN
    6706                    
    6707 00013d10           BEL_ELECTITLE
    6708 00013d10       42          .STRING "BELGUIM ECA",0
    6709 00013d70                   .EVEN
    6710                    
    6711 00013d70       47  GERMAN_1 .STRING "GERMAN 1",0
    6712 00013dc0                   .EVEN
    6713 00013dc0       47  GERMAN_2 .STRING "GERMAN 2",0
    6714 00013e10                   .EVEN
    6715 00013e10       47  GERMAN_3 .STRING "GERMAN 3",0
    6716 00013e60                   .EVEN
    6717 00013e60       47  GERMAN_4 .STRING "GERMAN 4",0
    6718 00013eb0                   .EVEN
    6719 00013eb0       47  GERMAN_5 .STRING "GERMAN 5",0
    6720 00013f00                   .EVEN
    6721                    
    6722 00013f00       46  FRENCH_1 .STRING "FRANCE 1",0
    6723 00013f50                   .EVEN
    6724 00013f50       46  FRENCH_2 .STRING "FRANCE 2",0
    6725 00013fa0                   .EVEN
    6726 00013fa0       46  FRENCH_3 .STRING "FRANCE 3",0
    6727 00013ff0                   .EVEN
    6728 00013ff0       46  FRENCH_4 .STRING "FRANCE 4",0
    6729 00014040                   .EVEN
    6730                    
    6731                            .IF     FULLPRICE
    6732 00014040       46  FRENCH_5 .STRING "FRANCE 5",0
    6733 00014090                   .EVEN
    6734 00014090       46  FRENCH_6 .STRING "FRANCE 6",0
    6735 000140e0                   .EVEN
    6736 000140e0       46  FRENCH_7 .STRING "FRANCE 7",0
    6737 00014130                   .EVEN
    6738 00014130       46  FRENCH_8 .STRING "FRANCE 8",0
    6739 00014180                   .EVEN
    6740 00014180       46  FRENCH_9 .STRING "FRANCE 9",0
    6741 000141d0                   .EVEN
    6742 000141d0       46  FRENCH_10 .STRING "FRANCE 10",0
    6743 00014220                   .EVEN
    6744 00014220       46  FRENCH_11 .STRING "FRANCE 11",0
    6745 00014270                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  142

    6746 00014270       46  FRENCH_12 .STRING "FRANCE 12",0
    6747 000142c0                   .EVEN
    6748                    
    6749 000142c0           CANADA
    6750 000142c0       43          .STRING "CANADA",0
    6751 00014300                   .EVEN
    6752                    
    6753 00014300       53  SWISS_1 .STRING "SWISS 1"
    6754 00014338       00          .BYTE   0
    6755 00014340                   .EVEN
    6756 00014340       53  SWISS_2 .STRING "SWISS 2"
    6757 00014378       00          .BYTE   0
    6758 00014380                   .EVEN
    6759 00014380       53  SWISS_3 .STRING "SWISS 3"
    6760 000143b8       00          .BYTE   0
    6761 000143c0                   .EVEN
    6762 000143c0       49  ITALY_1 .STRING "ITALY"
    6763 000143e8       00          .BYTE   0
    6764 000143f0                   .EVEN
    6765 000143f0       55  UK_1    .STRING "U.K. 1 ECA"
    6766 00014440       00          .BYTE   0
    6767 00014450                   .EVEN
    6768 00014450       55  UK_2    .STRING "U.K. 2 ECA"
    6769 000144a0       00          .BYTE   0
    6770 000144b0                   .EVEN
    6771 000144b0       55  UK_3    .STRING "U.K. 3 ECA"
    6772 00014500       00          .BYTE   0
    6773 00014510                   .EVEN
    6774 00014510       55  UK_4    .STRING "U.K. 4"
    6775 00014540       00          .BYTE   0
    6776 00014550                   .EVEN
    6777 00014550       55  UK_5    .STRING "U.K. 5"
    6778 00014580       00          .BYTE   0
    6779 00014590                   .EVEN
    6780 00014590       53  SP_1    .STRING "SPAIN 1"
    6781 000145c8       00          .BYTE   0
    6782 000145d0                   .EVEN
    6783 000145d0       53  SP_2    .STRING "SPAIN 2"
    6784 00014608       00          .BYTE   0
    6785 00014610                   .EVEN
    6786 00014610       41  AUS_1   .STRING "AUSTRALIA 1"
    6787 00014668       00          .BYTE   0
    6788 00014670                   .EVEN
    6789 00014670       41  AUS_2   .STRING "AUSTRALIA 2"
    6790 000146c8       00          .BYTE   0
    6791 000146d0                   .EVEN
    6792                            .ENDIF
    6793                    
    6794 000146d0       4a  JAP_1   .STRING "JAPAN 1"
    6795 00014708       00          .BYTE   0
    6796 00014710                   .EVEN
    6797                    
    6798                            .IF     FULLPRICE
    6799 00014710       4a  JAP_2   .STRING "JAPAN 2"
    6800 00014748       00          .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  143

    6801 00014750                   .EVEN
    6802 00014750       41  ASTA_1  .STRING "AUSTRIA 1"
    6803 00014798       00          .BYTE   0
    6804 000147a0                   .EVEN
    6805 000147a0       41  ASTA_2  .STRING "AUSTRIA 2"
    6806 000147e8       00          .BYTE   0
    6807 000147f0                   .EVEN
    6808 000147f0       42  BEL_1   .STRING "BELGIUM 1"
    6809 00014838       00          .BYTE   0
    6810 00014840                   .EVEN
    6811 00014840       42  BEL_2   .STRING "BELGIUM 2"
    6812 00014888       00          .BYTE   0
    6813 00014890                   .EVEN
    6814 00014890       42  BEL_3   .STRING "BELGIUM 3"
    6815 000148d8       00          .BYTE   0
    6816 000148e0                   .EVEN
    6817 000148e0           BELGIUM_ELECTITLE
    6818 000148e0       42          .STRING "BELGIUM ECA",0
    6819 00014940                   .EVEN
    6820 00014940       53  SWED_1  .STRING "SWEDEN"
    6821 00014970       00          .BYTE   0
    6822 00014980                   .EVEN
    6823 00014980       4e  NZ_1    .STRING "NEW ZEALAND 1"
    6824 000149e8       00          .BYTE   0
    6825 000149f0                   .EVEN
    6826 000149f0       4e  NZ_2    .STRING "NEW ZEALAND 2"
    6827 00014a58       00          .BYTE   0
    6828 00014a60                   .EVEN
    6829 00014a60       4e  NETH    .STRING "NETHERLANDS"
    6830 00014ab8       00          .BYTE   0
    6831 00014ac0                   .EVEN
    6832                    
    6833 00014ac0       46  FINLAND .STRING "FINLAND"
    6834 00014af8       00          .BYTE 0
    6835 00014b00                   .EVEN
    6836                    
    6837 00014b00       4e  NORWAY  .STRING "NORWAY"
    6838 00014b30       00          .BYTE 0
    6839 00014b40                   .EVEN
    6840                    
    6841 00014b40       44  DENMARK .STRING "DENMARK"
    6842 00014b78       00          .BYTE 0
    6843 00014b80                   .EVEN
    6844                    
    6845 00014b80       41  ANTILLES .STRING "ANTILLES"
    6846 00014bc0       00          .BYTE 0
    6847 00014bd0                   .EVEN
    6848                    
    6849 00014bd0           HUNGARY
    6850 00014bd0       48          .STRING "HUNGARY",0
    6851 00014c10                   .EVEN
    6852                    
    6853                            .ENDIF
    6854                    *
    6855                    *       THIS SECTION IS A POINTER TO STRING LISTS
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  144

    6856                    *       FOR THE "CURRENT SETTING" BOX.
    6857                    *
    6858 00014c10           USA_EL
    6859 00014c10 00015ff0"         .LONG   EC1
    6860 00014c30 000164e0"         .LONG   DOLL4
    6861 00014c50 00000000          .LONG   0
    6862                    *
    6863                    *       1 COIN / 1 CREDIT
    6864 00014c70           Q_Q
    6865 00014c70 00016090"         .LONG   C11              ;THIS POINTS AT MESSAGE
    6866 00014c90 00000000          .LONG   0                  ;THIS ENDS LIST
    6867                    *
    6868                    *       2 COINS / 1 CREDIT
    6869                    *
    6870 00014cb0           F_F_1S1C
    6871 00014cb0 00016120"         .LONG   C21
    6872 00014cd0 00000000          .LONG   0
    6873                    
    6874                    *************************************************************************
    6875                    
    6876                    
    6877                    *
    6878                    *       2 COINS / 1 CREDIT
    6879                    *       4 COINS / 3 CREDITS
    6880                    *
    6881 00014cf0 00016120" DOLLAR_3 .LONG  C21
    6882 00014d10 000161c0"         .LONG   C43
    6883 00014d30 00000000          .LONG   0
    6884                    *
    6885                    *       2 COINS / 1 CREDIT
    6886                    *       4 COINS / 4 CREDITS
    6887                    *
    6888 00014d50 00016120" DOLLAR_4 .LONG  C21
    6889 00014d70 00016260"         .LONG   C44
    6890 00014d90 00000000          .LONG   0
    6891                    
    6892                    
    6893                    ********************************************************************
    6894                    
    6895                    
    6896                            .IF     FULLPRICE
    6897                    
    6898 00014db0 00016090" U1Q4D   .LONG   C11              ;THIS POINTS AT MESSAGE
    6899 00014dd0 000164e0"         .LONG   DOLL4           ;4 FOR A DOLLAR
    6900 00014df0 00000000          .LONG   0
    6901                    
    6902                    ;UFS2D  .LONG   C21             ; THIS POINTS AT MESSAGE
    6903                    ;       .LONG   DOLL2           ; 2 FOR A DOLLAR
    6904                    ;       .LONG   0
    6905                    
    6906 00014e10 00016120" UFS3D   .LONG   C21              ;THIS POINTS AT MESSAGE
    6907 00014e30 00016450"         .LONG   DOLL3           ;3 FOR A DOLLAR
    6908 00014e50 00000000          .LONG   0
    6909                    
    6910 00014e70 00016120" UFS4D   .LONG   C21              ;THIS POINTS AT MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  145

    6911 00014e90 000164e0"         .LONG   DOLL4           ;4 FOR A DOLLAR
    6912 00014eb0 00000000          .LONG   0
    6913                    
    6914                            .ENDIF
    6915                    
    6916                    *
    6917                    *       1 PLAY 1/DM
    6918                    *       5 PLAY 5/DM
    6919                    *
    6920 00014ed0 00016570" DM_5    .LONG   DM11
    6921 00014ef0 00016680"         .LONG   DM55
    6922 00014f10 00000000          .LONG   0
    6923                    
    6924 00014f30 00016570" DM_6    .LONG   DM11
    6925 00014f50 00016710"         .LONG   DM65
    6926 00014f70 00000000          .LONG   0
    6927                    
    6928 00014f90 00016570" DM_7    .LONG   DM11
    6929 00014fb0 000167a0"         .LONG   DM75
    6930 00014fd0 00000000          .LONG   0
    6931                    
    6932 00014ff0 00016570" DM_8    .LONG   DM11
    6933 00015010 00016830"         .LONG   DM85
    6934 00015030 00000000          .LONG   0
    6935                    
    6936 00015050           DM112265
    6937 00015050 00016570"         .LONG   DM11
    6938 00015070 000165f0"         .LONG   DM22
    6939 00015090 00016710"         .LONG   DM65
    6940 000150b0 00000000          .LONG   0
    6941                    
    6942 000150d0 000171a0" SFRANC_6     .LONG   SFRANC11
    6943 000150f0 00017210"         .LONG   SFRANC65
    6944 00015110 00000000          .LONG   0
    6945                    
    6946 00015130           CAN_1503D
    6947 00015130 00016300"         .LONG   C15             ;THIS POINTS AT MESSAGE
    6948 00015150 00016450"         .LONG   DOLL3           ;3 FOR A DOLLAR
    6949 00015170 00000000          .LONG   0
    6950                    
    6951 00015190 000171a0" SFRANC_7     .LONG   SFRANC11
    6952 000151b0 00017290"         .LONG   SFRANC75
    6953 000151d0 00000000          .LONG   0
    6954                    
    6955 000151f0 000171a0" SFRANC_8     .LONG   SFRANC11
    6956 00015210 00017310"         .LONG   SFRANC85
    6957 00015230 00000000          .LONG   0
    6958                    *
    6959                    *       2 PLAYS 5F / 5 PLAYS 10F
    6960                    *
    6961 00015250 00016940" FIVE_10 .LONG   F25
    6962 00015270 00016a30"         .LONG   F510
    6963 00015290 00000000          .LONG   0
    6964                    
    6965 000152b0           FIVE_10_11
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  146

    6966 000152b0 00016940"         .LONG   F25
    6967 000152d0 00016a30"         .LONG   F510
    6968 000152f0 00016ab0"         .LONG   F1120
    6969 00015310 00000000          .LONG   0
    6970                    
    6971 00015330 00016940" FOUR_10 .LONG   F25
    6972 00015350 00016d40"         .LONG   F410
    6973 00015370 00000000          .LONG   0
    6974                    
    6975 00015390           FOUR_10_9
    6976 00015390 00016940"         .LONG   F25
    6977 000153b0 00016d40"         .LONG   F410
    6978 000153d0 00016b60"         .LONG   F4109
    6979 000153f0 00000000          .LONG   0
    6980                    
    6981 00015410 000169c0" THREE_10 .LONG  F15
    6982 00015430 00016dc0"         .LONG   F310
    6983 00015450 00000000          .LONG   0
    6984                    
    6985 00015470           THREE_10_7
    6986 00015470 000169c0"         .LONG   F15
    6987 00015490 00016dc0"         .LONG   F310
    6988 000154b0 00016c00"         .LONG   F4107
    6989 000154d0 00000000          .LONG   0
    6990                    
    6991 000154f0 000169c0" TWO_10  .LONG   F15
    6992 00015510 00016e40"         .LONG   F210
    6993 00015530 00000000          .LONG   0
    6994                    
    6995 00015550 000169c0" TWO_10_5 .LONG  F15
    6996 00015570 00016e40"         .LONG   F210
    6997 00015590 00016ca0"         .LONG   F4105
    6998 000155b0 00000000          .LONG   0
    6999                    
    7000 000155d0 00016ec0" F1325   .LONG   F3X1F
    7001 000155f0 00016940"         .LONG   F2F5
    7002 00015610 00000000          .LONG   0
    7003                    
    7004 00015630 00016ec0" F13255  .LONG   F3X1F
    7005 00015650 00016940"         .LONG   F2F5
    7006                    ;       .LONG   F52X5
    7007 00015670 00017080"         .LONG   F5X10F
    7008 00015690 00000000          .LONG   0
    7009                    
    7010 000156b0 00016f50" F1235   .LONG   F2X1F
    7011 000156d0 000168c0"         .LONG   F3F5
    7012 000156f0 00000000          .LONG   0
    7013                    
    7014 00015710 00016f50" F12355  .LONG   F2X1F
    7015 00015730 000168c0"         .LONG   F3F5
    7016 00015750 00017100"         .LONG   F72X5
    7017 00015770 00000000          .LONG   0
    7018                    
    7019                            .IF     FULLPRICE
    7020                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  147

    7021                    *       500 LIRE
    7022                    
    7023 00015790 00017390" P1500L  .LONG   P1500L_P
    7024 000157b0 00000000          .LONG   0
    7025                    
    7026                    *       1 PLAY / 20 P    3 PLAYS 50 P
    7027                    
    7028 000157d0 00017430" UK_120  .LONG   UK_1201
    7029 000157f0 000174b0"         .LONG   UK_1202
    7030 00015810 00017540"         .LONG   UK_1203
    7031 00015830 00000000          .LONG   0
    7032                    
    7033                    ;UK_220 .LONG   UK_2201
    7034                    ;       .LONG   UK_2202
    7035                    ;       .LONG   0
    7036                    
    7037 00015850           UK_520
    7038 00015850 000176f0" UK_320  .LONG   UK_3201
    7039                    ;       .LONG   UK_3202
    7040 00015870 00017770"         .LONG   UK_3203
    7041 00015890 00000000          .LONG   0
    7042                    
    7043 000158b0           UK_220
    7044 000158b0 00017800" UK_420  .LONG   UK_4201
    7045 000158d0 00017880"         .LONG   UK_4202
    7046                    ;       .LONG   UK_4203
    7047 000158f0 00000000          .LONG   0
    7048                    
    7049 00015910 00017910" SP_4100 .LONG   SP_11
    7050 00015930 000179c0"         .LONG   SP_44
    7051 00015950 00000000          .LONG   0
    7052                    
    7053 00015970 00017910" SP_5100 .LONG   SP_11
    7054 00015990 00017a80"         .LONG   SP_54
    7055 000159b0 00000000          .LONG   0
    7056                    
    7057 000159d0 00017b40" AU_60   .LONG   AU_36
    7058 000159f0 00017c00"         .LONG   AU_2D
    7059 00015a10 00000000          .LONG   0
    7060                    
    7061 00015a30 00017ca0" AU_100  .LONG   AU_520
    7062 00015a50 00017d60"         .LONG   AU_1D
    7063 00015a70 00000000          .LONG   0
    7064                    
    7065                            .ENDIF
    7066                    
    7067 00015a90 00017df0" JAP_100 .LONG   JAP_101
    7068 00015ab0 00000000          .LONG   0
    7069                    
    7070                            .IF     FULLPRICE
    7071                    
    7072 00015ad0 00017e90" JAP_200 .LONG   JAP_201
    7073 00015af0 00000000          .LONG   0
    7074                    
    7075 00015b10 00017f30" ASTA_10 .LONG   ASTA101
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  148

    7076 00015b30 00018010"         .LONG   ASTA102
    7077 00015b50 00000000          .LONG   0
    7078                    
    7079 00015b70 00018100" ASTA_15 .LONG   ASTA151
    7080 00015b90 000181c0"         .LONG   ASTA152
    7081 00015bb0 00000000          .LONG   0
    7082                    
    7083 00015bd0 00018290" BEL_120 .LONG   BEL_1201
    7084 00015bf0 00000000          .LONG   0
    7085 00015c10 00018310" BEL_220 .LONG   BEL_2201
    7086 00015c30 00000000          .LONG   0
    7087 00015c50 00018390" BEL_320 .LONG   BEL_3201
    7088 00015c70 00000000          .LONG   0
    7089 00015c90           BEL_ELEC
    7090 00015c90 00018290"         .LONG   BEL_1201
    7091 00015cb0 00000000          .LONG   0
    7092                    
    7093 00015cd0 00018410" SWED_2X5 .LONG  SWED_S51
    7094 00015cf0 000184d0"         .LONG   SWED_S52
    7095 00015d10 00000000          .LONG   0
    7096                    
    7097 00015d30 00018570" NZ_12   .LONG   NZ_121
    7098 00015d50 00000000          .LONG   0
    7099                    
    7100 00015d70 00017b40" NZ_13   .LONG   NZ_131
    7101 00015d90 00000000          .LONG   0
    7102                    
    7103 00015db0 00018630" NETH_HF .LONG   HF_11
    7104 00015dd0 000186c0"         .LONG   HF_32
    7105 00015df0 00000000          .LONG   0
    7106                    
    7107 00015e10 00018760" FINMKA  .LONG   FIN_1
    7108 00015e30 00000000          .LONG   0
    7109                    
    7110 00015e50 00018800" KR_LIST .LONG   NOR_12
    7111 00015e70 000188c0"         .LONG   NOR_35
    7112 00015e90 00000000          .LONG   0
    7113                    
    7114 00015eb0 00018800" DKR_LIST .LONG  DEN_12
    7115 00015ed0 00018980"         .LONG   DEN_35
    7116 00015ef0 00018a20"         .LONG   DEN_710
    7117 00015f10 00000000          .LONG   0
    7118                    
    7119 00015f30 00018ae0" ANT_LIST .LONG  ANT1P25
    7120 00015f50 00018b80"         .LONG   ANT4DOL
    7121 00015f70 00000000          .LONG   0
    7122                    
    7123 00015f90           HUNG_LIST
    7124 00015f90 00018c30"         .LONG   HUNG2X10
    7125 00015fb0 00018d00"         .LONG   HUNG2X20
    7126 00015fd0 00000000          .LONG   0
    7127                    
    7128                            .ENDIF
    7129                    
    7130 00015ff0       31  EC1     .STRING "1 CREDIT / 25 CENTS",0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  149

    7131 00016090                   .EVEN
    7132 00016090       31  C11     .STRING  "1 CREDIT / 1 COIN"
    7133 00016118       00          .BYTE 0
    7134 00016120                   .EVEN
    7135 00016120       31  C21     .STRING  "1 CREDIT / 2 COINS"
    7136 000161b0       00          .BYTE 0
    7137 000161c0                   .EVEN
    7138 000161c0       33  C43     .STRING  "3 CREDIT / 4 COINS"
    7139 00016250       00          .BYTE 0
    7140 00016260                   .EVEN
    7141 00016260       34  C44     .STRING  "4 CREDITS / 4 COINS"
    7142 000162f8       00          .BYTE 0
    7143 00016300                   .EVEN
    7144 00016300           C15
    7145 00016300       31          .STRING "1 CREDIT / 2 X 25 CENTS",0
    7146 000163c0                   .EVEN
    7147                    
    7148 000163c0       32  DOLL2   .STRING  "2 CREDITS / $1.00"
    7149 00016448       00          .BYTE 0
    7150 00016450                   .EVEN
    7151                    
    7152 00016450       33  DOLL3   .STRING  "3 CREDITS / $1.00"
    7153 000164d8       00          .BYTE 0
    7154 000164e0                   .EVEN
    7155                    
    7156 000164e0       34  DOLL4   .STRING  "4 CREDITS / $1.00"
    7157 00016568       00          .BYTE 0
    7158 00016570                   .EVEN
    7159                    
    7160 00016570       31  DM11    .STRING  "1 CREDIT / 1 DM",0
    7161 000165f0                   .EVEN
    7162 000165f0       32  DM22    .STRING  "2 CREDITS / 2 DM",0
    7163 00016680                   .EVEN
    7164 00016680       35  DM55    .STRING  "5 CREDITS / 5 DM",0
    7165 00016710                   .EVEN
    7166 00016710       36  DM65    .STRING  "6 CREDITS / 5 DM",0
    7167 000167a0                   .EVEN
    7168 000167a0       37  DM75    .STRING  "7 CREDITS / 5 DM",0
    7169 00016830                   .EVEN
    7170 00016830       38  DM85    .STRING  "8 CREDITS / 5 DM",0
    7171 000168c0                   .EVEN
    7172                    
    7173 000168c0       33  F3F5    .STRING  "3 CREDITS / 5F"
    7174 00016930       00          .BYTE 0
    7175 00016940                   .EVEN
    7176 00016940           F2F5
    7177 00016940       32  F25     .STRING  "2 CREDITS / 5F"
    7178 000169b0       00          .BYTE 0
    7179 000169c0                   .EVEN
    7180 000169c0       31  F15     .STRING  "1 CREDIT / 5F"
    7181 00016a28       00          .BYTE 0
    7182 00016a30                   .EVEN
    7183 00016a30       35  F510    .STRING  "5 CREDITS / 10F"
    7184 00016aa8       00          .BYTE 0
    7185 00016ab0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  150

    7186 00016ab0       31  F1120   .STRING  "11 CREDITS / 2 X 10F"
    7187 00016b50       00          .BYTE 0
    7188 00016b60                   .EVEN
    7189 00016b60       39  F4109   .STRING  "9 CREDITS / 2 X 10F"
    7190 00016bf8       00          .BYTE 0
    7191 00016c00                   .EVEN
    7192 00016c00       37  F4107   .STRING  "7 CREDITS / 2 X 10F"
    7193 00016c98       00          .BYTE 0
    7194 00016ca0                   .EVEN
    7195 00016ca0       35  F4105   .STRING  "5 CREDITS / 2 X 10F"
    7196 00016d38       00          .BYTE 0
    7197 00016d40                   .EVEN
    7198 00016d40       34  F410    .STRING  "4 CREDITS / 10F"
    7199 00016db8       00          .BYTE 0
    7200 00016dc0                   .EVEN
    7201 00016dc0       33  F310    .STRING  "3 CREDITS / 10F"
    7202 00016e38       00          .BYTE 0
    7203 00016e40                   .EVEN
    7204 00016e40       32  F210    .STRING  "2 CREDITS / 10F"
    7205 00016eb8       00          .BYTE 0
    7206 00016ec0                   .EVEN
    7207                    
    7208 00016ec0       31  F3X1F   .STRING  "1 CREDIT / 3 X 1F"
    7209 00016f48       00          .BYTE   0
    7210 00016f50                   .EVEN
    7211                    
    7212 00016f50       31  F2X1F   .STRING  "1 CREDIT / 2 X 1F"
    7213 00016fd8       00          .BYTE   0
    7214 00016fe0                   .EVEN
    7215                    
    7216 00016fe0       35  F52X5   .STRING  "5 CREDITS / 2 X 5F"
    7217 00017070       00          .BYTE   0
    7218 00017080                   .EVEN
    7219                    
    7220 00017080       35  F5X10F  .STRING  "5 CREDITS / 10F"
    7221 000170f8       00          .BYTE   0
    7222 00017100                   .EVEN
    7223                    
    7224 00017100       37  F72X5   .STRING  "7 CREDITS / 2 X 5F"
    7225 00017190       00          .BYTE   0
    7226 000171a0                   .EVEN
    7227                    
    7228 000171a0       31  SFRANC11     .STRING  "1 CREDIT / 1F"
    7229 00017208       00          .BYTE 0
    7230 00017210                   .EVEN
    7231 00017210       36  SFRANC65     .STRING  "6 CREDITS / 5F"
    7232 00017280       00          .BYTE 0
    7233 00017290                   .EVEN
    7234 00017290       37  SFRANC75     .STRING  "7 CREDITS / 5F"
    7235 00017300       00          .BYTE 0
    7236 00017310                   .EVEN
    7237 00017310       38  SFRANC85     .STRING  "8 CREDITS / 5F"
    7238 00017380       00          .BYTE 0
    7239 00017390                   .EVEN
    7240                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  151

    7241                            .IF     FULLPRICE
    7242 00017390       31  P1500L_P .STRING      "1 CREDIT / 500 LIRE"
    7243 00017428       00          .BYTE 0
    7244 00017430                   .EVEN
    7245                    
    7246 00017430       31  UK_1201 .STRING "1 CREDIT / 30 P"
    7247 000174a8       00          .BYTE 0
    7248 000174b0                   .EVEN
    7249 000174b0       32  UK_1202 .STRING "2 CREDITS / 50 P"
    7250 00017530       00          .BYTE 0
    7251 00017540                   .EVEN
    7252 00017540       35  UK_1203 .STRING "5 CREDITS / L1.00"
    7253 000175c8       00          .BYTE 0
    7254 000175d0                   .EVEN
    7255                    
    7256 000175d0       32  UK_2201 .STRING "2 CREDITS / 20 P"
    7257 00017650       00          .BYTE 0
    7258 00017660                   .EVEN
    7259 00017660       35  UK_2202 .STRING "5 CREDITS / 50 P"
    7260 000176e0       00          .BYTE 0
    7261 000176f0                   .EVEN
    7262                    
    7263 000176f0       31  UK_3201 .STRING "1 CREDIT / 50 P"
    7264 00017768       00          .BYTE 0
    7265 00017770                   .EVEN
    7266                    ;UK_3202        .STRING "2 CREDITS / 50 P"
    7267                    ;       .BYTE 0
    7268                    ;       .EVEN
    7269 00017770       32  UK_3203 .STRING "2 CREDITS / L1.00"
    7270 000177f8       00          .BYTE 0
    7271 00017800                   .EVEN
    7272                    
    7273 00017800       31  UK_4201 .STRING "1 CREDIT / 50 P"
    7274 00017878       00          .BYTE 0
    7275 00017880                   .EVEN
    7276 00017880       33  UK_4202 .STRING "3 CREDITS / L1.00"
    7277 00017908       00          .BYTE 0
    7278 00017910                   .EVEN
    7279                    ;UK_4203        .STRING "7 CREDITS / L1.00"
    7280                    ;       .BYTE 0
    7281                    ;       .EVEN
    7282                    
    7283 00017910       31  SP_11   .STRING "1 CREDIT / 100 PESETA"
    7284 000179b8       00          .BYTE   0
    7285 000179c0                   .EVEN
    7286                    
    7287 000179c0       35  SP_44   .STRING "5 CREDITS / 500 PESETA"
    7288 00017a70       00          .BYTE   0
    7289 00017a80                   .EVEN
    7290                    
    7291 00017a80       36  SP_54   .STRING "6 CREDITS / 500 PESETA"
    7292 00017b30       00          .BYTE   0
    7293 00017b40                   .EVEN
    7294 00017b40           NZ_131
    7295 00017b40       31  AU_36   .STRING "1 CREDIT / 3 X 20 CENTS"
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  152

    7296 00017bf8       00          .BYTE   0
    7297 00017c00                   .EVEN
    7298 00017c00       32  AU_2D   .STRING "2 CREDITS / $ 1.00"
    7299 00017c90       00          .BYTE   0
    7300 00017ca0                   .EVEN
    7301 00017ca0       31  AU_520  .STRING "1 CREDIT / 5 X 20 CENTS"
    7302 00017d58       00          .BYTE   0
    7303 00017d60                   .EVEN
    7304 00017d60       31  AU_1D   .STRING "1 CREDIT / $ 1.00"
    7305 00017de8       00          .BYTE   0
    7306 00017df0                   .EVEN
    7307                            .ENDIF
    7308                    
    7309 00017df0       31  JAP_101 .STRING "1 CREDIT / 100 YEN"
    7310 00017e80       00          .BYTE   0
    7311 00017e90                   .EVEN
    7312                    
    7313                            .IF FULLPRICE
    7314                    
    7315 00017e90       32  JAP_201 .STRING "2 CREDITS / 100 YEN"
    7316 00017f28       00          .BYTE   0
    7317 00017f30                   .EVEN
    7318 00017f30       31  ASTA101 .STRING "1 CREDIT / 2 X 5 SCHILLING"
    7319 00018000       00          .BYTE   0
    7320 00018010                   .EVEN
    7321 00018010       33  ASTA102 .STRING "3 CREDITS / 2 X 10 SCHILLING"
    7322 000180f0       00          .BYTE   0
    7323 00018100                   .EVEN
    7324 00018100       31  ASTA151 .STRING "1 CREDIT / 5 SCHILLING"
    7325 000181b0       00          .BYTE   0
    7326 000181c0                   .EVEN
    7327 000181c0       32  ASTA152 .STRING "2 CREDITS / 10 SCHILLING"
    7328 00018280       00          .BYTE   0
    7329 00018290                   .EVEN
    7330                    
    7331 00018290       31  BEL_1201 .STRING        "1 CREDIT / 2OF"
    7332 00018300       00          .BYTE   0
    7333 00018310                   .EVEN
    7334 00018310       32  BEL_2201 .STRING        "2 CREDITS / 2OF"
    7335 00018388       00          .BYTE   0
    7336 00018390                   .EVEN
    7337 00018390       33  BEL_3201 .STRING        "3 CREDITS / 2OF"
    7338 00018408       00          .BYTE   0
    7339 00018410                   .EVEN
    7340                    
    7341 00018410       31  SWED_S51 .STRING        "1 CREDIT / 3 X 1 KRONA"
    7342 000184c0       00          .BYTE   0
    7343 000184d0                   .EVEN
    7344 000184d0       32  SWED_S52 .STRING        "2 CREDITS / 5 KRONA"
    7345 00018568       00          .BYTE   0
    7346 00018570                   .EVEN
    7347                    
    7348 00018570       31  NZ_121  .STRING "1 CREDIT / 2 X 20 CENTS"
    7349 00018628       00          .BYTE   0
    7350 00018630                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  153

    7351                    
    7352 00018630       31  HF_11   .STRING "1 CREDIT / 1 HFI"
    7353 000186b0       00          .BYTE   0
    7354 000186c0                   .EVEN
    7355                    
    7356 000186c0       33  HF_32   .STRING "3 CREDITS / 2.5 HFI"
    7357 00018758       00          .BYTE   0
    7358 00018760                   .EVEN
    7359                    
    7360 00018760       31  FIN_1   .STRING "1 CREDIT / 1 MARKKA"
    7361 000187f8       00          .BYTE   0
    7362 00018800                   .EVEN
    7363                    
    7364 00018800           DEN_12
    7365 00018800       31  NOR_12  .STRING "1 CREDIT / 2 X 1 KRONE"
    7366 000188b0       00          .BYTE 0
    7367 000188c0                   .EVEN
    7368                    
    7369 000188c0       33  NOR_35  .STRING "3 CREDITS / 5 X 1 KRONE"
    7370 00018978       00          .BYTE 0
    7371 00018980                   .EVEN
    7372                    
    7373 00018980       33  DEN_35  .STRING "3 CREDITS / 5 KRONE"
    7374 00018a18       00          .BYTE 0
    7375 00018a20                   .EVEN
    7376                    
    7377 00018a20       37  DEN_710 .STRING "7 CREDITS / 2 X 5 KRONE"
    7378 00018ad8       00          .BYTE 0
    7379 00018ae0                   .EVEN
    7380                    
    7381 00018ae0       31  ANT1P25 .STRING "1 CREDIT / 25 CENTS"
    7382 00018b78       00          .BYTE 0
    7383 00018b80                   .EVEN
    7384                    
    7385 00018b80       34  ANT4DOL .STRING "4 CREDITS / 1 GUILDER"
    7386 00018c28       00          .BYTE 0
    7387 00018c30                   .EVEN
    7388                    
    7389 00018c30           HUNG2X10
    7390 00018c30       31          .STRING "1 CREDIT / 2 X 10 FORINT",0
    7391 00018d00                   .EVEN
    7392                    
    7393 00018d00           HUNG2X20
    7394 00018d00       33          .STRING "3 CREDITS / 2 X 20 FORINT",0
    7395 00018dd0                   .EVEN
    7396                    
    7397                            .ENDIF
    7398                    
    7399                    **************************************************************************
    7400                    *                                                                       *
    7401                    *        COIN SLOT TITLES                                               *
    7402                    *                                                                       *
    7403                    **************************************************************************
    7404                    
    7405 00018dd0           USA_ESLOT       
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  154

    7406 00018dd0       24          .STRING "$1.00  .10    .25     .5    $1.00 ",0
    7407 00018ef0                   .EVEN
    7408                    
    7409 00018ef0           FRANCE_ESLOT
    7410 00018ef0       31          .STRING "1F     5F    10F                ",0
    7411 00019000                   .EVEN
    7412                    
    7413 00019000           GERMAN_ESLOT
    7414 00019000       20          .STRING " 5DM   2DM  1DM                 ",0
    7415 00019110                   .EVEN
    7416                    
    7417 00019110           BELGIUM_ESLOT
    7418 00019110       20          .STRING " 50F   20F    5F                 ",0
    7419 00019220                   .EVEN
    7420                    
    7421 00019220       32  USA_QQ      .STRING   "25 CENT       25 CENT"
    7422 000192c8       00              .BYTE 0
    7423 000192d0                       .EVEN
    7424                    
    7425                            .IF     FULLPRICE
    7426 000192d0           USA_QDQ
    7427 000192d0       2e          .STRING   ".25    .25                 $1.00",0
    7428 000193e0                   .EVEN
    7429                            .ENDIF
    7430                    
    7431 000193e0       31  GERMAN_15    .STRING   "1 DM 5 DM                      "
    7432 000194d8       00              .BYTE 0
    7433 000194e0                       .EVEN
    7434 000194e0       35  FRENCH510    .STRING   "5F    10F                       "
    7435 000195e0       00              .BYTE 0
    7436 000195f0                       .EVEN
    7437 000195f0           FRENCH1F5F
    7438 000195f0       31          .STRING       "1F     5F                       ",0
    7439 00019700                   .EVEN
    7440                    
    7441 00019700           CAN_QD
    7442 00019700       2e          .STRING       ".25   $1.00                $1.00",0
    7443 00019810                   .EVEN
    7444                    
    7445                            .IF     FULLPRICE
    7446 00019810           SWISS15   
    7447 00019810       31          .STRING       "1F     5F                       ",0
    7448 00019918       00              .BYTE 0
    7449 00019920                       .EVEN
    7450 00019920       35  ITALYLIRE    .STRING   "500L  500L                      "
    7451 00019a20       00              .BYTE 0
    7452 00019a30                       .EVEN
    7453 00019a30       4c  UK2050      .STRING   "L1.00  50 P                     "
    7454 00019b30       00              .BYTE 0
    7455 00019b40                       .EVEN
    7456 00019b40       4c  UK_ELEC     .STRING   "L1.00  20P    50P   10P         "
    7457 00019c40       00              .BYTE 0
    7458 00019c50                       .EVEN
    7459 00019c50       43  UK_CCU      .STRING   "CCU ON LEFT SLOT    "
    7460 00019cf0       00              .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  155

    7461 00019d00                       .EVEN
    7462 00019d00           PESETA100
    7463 00019d00       31          .STRING   "100 P 500 P                     ",0
    7464 00019e10                   .EVEN
    7465 00019e10           AUST20C
    7466 00019e10       2e          .STRING   ".20  $ 1.00                     ",0
    7467 00019f20                   .EVEN
    7468                    
    7469                            .ENDIF
    7470                    
    7471 00019f20       31  YEN100      .STRING   "100Y  100Y                      "
    7472 0001a020       00              .BYTE 0
    7473 0001a030                       .EVEN
    7474                    
    7475                            .IF     FULLPRICE
    7476 0001a030       35  SHILL510     .STRING   "5      10 SCHILLING             "
    7477 0001a130       00              .BYTE 0
    7478 0001a140                       .EVEN
    7479 0001a140       32  FRANC20     .STRING   "20F   20F                      "
    7480 0001a238       00              .BYTE 0
    7481 0001a240                       .EVEN
    7482 0001a240       31  KRONA5      .STRING   "1 KR  5 KR                      "
    7483 0001a340       00              .BYTE 0
    7484 0001a350                       .EVEN
    7485 0001a350       2e  NZ20        .STRING   ".20   .20                      "
    7486 0001a448       00              .BYTE 0
    7487 0001a450                       .EVEN
    7488 0001a450       31  HFSLOT      .STRING   "1HFI  2.5HFI                    "
    7489 0001a550       00              .BYTE 0
    7490 0001a560                       .EVEN
    7491                    
    7492 0001a560       31  MKSLOT      .STRING   "1      1 MARKKA              "             
    7493 0001a648       00              .BYTE 0
    7494 0001a650                       .EVEN
    7495                    
    7496 0001a650       31  NKRSLOT     .STRING   "1 KR  1 KR                      "
    7497 0001a750       00              .BYTE 0
    7498 0001a760                       .EVEN
    7499                    
    7500 0001a760       31  DKRSLOT     .STRING   "1 KR  5 KR                      "
    7501 0001a860       00              .BYTE 0
    7502 0001a870                       .EVEN
    7503                    
    7504 0001a870       2e  ANTSLOT     .STRING   ".25    1 GUILDER               "
    7505 0001a968       00              .BYTE 0
    7506 0001a970                       .EVEN
    7507                    
    7508 0001a970           HUNGSLOT
    7509 0001a970       31          .STRING "10     20 FORINT               ",0
    7510 0001aa70                   .EVEN
    7511                            .ENDIF
    7512                    
    7513                    ;;CP_CX EQU     200
    7514                    ;;CP_11 EQU     11
    7515                    ;;CP_13 EQU     13
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  156

    7516                    ;;CP_23 EQU     23
    7517                    ;;CP_33 EQU     33
    7518                    
    7519                    
    7520 0001aa70           OCOP    MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_11,ROBO_YELLOW,STRCNRM,0
    7521 0001ab10       31          .STRING   "1 COIN / 1 PLAY"
    7522 0001ab88       00          .BYTE     0,0
    7523 0001aba0                   .EVEN
    7524                    
    7525 0001aba0           USA_ELECTRONIC:
    7526 0001aba0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    7527 0001ac40       31          .STRING "1 CREDIT  /  25 CENTS" 
    7528 0001ace8       5c          .STRING "\n4 CREDITS /  1 DOLLAR",0,1
    7529 0001adb0                   .EVEN
    7530                    
    7531 0001adb0           FRANCE_ELECTRONIC:
    7532 0001adb0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    7533 0001ae50       31          .STRING "1 CREDIT  /  25 CENTS" 
    7534 0001aef8       5c          .STRING "\n4 CREDITS /  1 DOLLAR",0,1
    7535 0001afc0                   .EVEN
    7536                    
    7537 0001afc0           GERMAN_ELECTRONIC:
    7538 0001afc0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    7539 0001b060       31          .STRING "1 CREDIT  /  1 DM"     
    7540 0001b0e8       5c          .STRING "\n6 CREDITS /  5 DM",0,1
    7541 0001b190                   .EVEN
    7542                    
    7543                            .IF     FULLPRICE
    7544 0001b190           BELGIUM_ELECTRONIC:
    7545 0001b190                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    7546 0001b230       31          .STRING "1 CREDIT  /  20 FR"    
    7547 0001b2c0                   .EVEN
    7548                    
    7549 0001b2c0           UK_ELECTRONIC1
    7550 0001b2c0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_LF,STRCNRM,0
    7551 0001b360       31          .STRING   "1 CREDIT / 50 P"
    7552 0001b3d8       00          .BYTE     0,1
    7553 0001b3f0                   .EVEN
    7554 0001b3f0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_33,ROBO_LF,STRCNRM,0
    7555 0001b490       33          .STRING "3 CREDITS / "
    7556 0001b4f0       82          .BYTE     FONT_EPOUND
    7557 0001b4f8       31          .STRING "1.00"
    7558 0001b518       00          .BYTE     0,0
    7559 0001b530                   .EVEN
    7560 0001b530           UK_ELECTRONIC2
    7561 0001b530                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_LF,STRCNRM,0
    7562 0001b5d0       31          .STRING   "1 CREDIT / 50 P"
    7563 0001b648       00          .BYTE     0,1
    7564 0001b660                   .EVEN
    7565 0001b660                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_33,ROBO_LF,STRCNRM,0
    7566 0001b700       32          .STRING "2 CREDITS / "
    7567 0001b760       82          .BYTE     FONT_EPOUND
    7568 0001b768       31          .STRING "1.00"
    7569 0001b788       00          .BYTE     0,0
    7570 0001b7a0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  157

    7571 0001b7a0           UK_ELECTRONIC3
    7572 0001b7a0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_LF,STRCNRM,0
    7573 0001b840       31          .STRING   "1 CREDIT / 30 P"
    7574 0001b8b8       00          .BYTE     0,1
    7575 0001b8d0                   .EVEN
    7576 0001b8d0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_23,ROBO_LF,STRCNRM,0
    7577 0001b970       32          .STRING   "2 CREDITS / 50 P"
    7578 0001b9f0       00          .BYTE     0,1
    7579 0001ba00                   .EVEN
    7580 0001ba00                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_33,ROBO_LF,STRCNRM,0
    7581 0001baa0       35          .STRING "5 CREDITS / "
    7582 0001bb00       82          .BYTE     FONT_EPOUND
    7583 0001bb08       31          .STRING "1.00"
    7584 0001bb28       00          .BYTE     0,0
    7585 0001bb40                   .EVEN
    7586                            .ENDIF
    7587                    
    7588                    
    7589                    
    7590                    *
    7591                    *       THE FOLLOWING 2 MESSAGES ARE GENERIC AND WILL
    7592                    *       BE DISPLAYED IF THE MODE MATCHES AND NO
    7593                    *       APPROPRIATE MESSAGE EXISTS
    7594                    *
    7595                    *       THIS IS FOR THIS BEING THE ONLY MESSAGE DISPLAYED ON
    7596                    *       THE SCREEN
    7597                    *
    7598 0001bb40           TWO_TO_START
    7599 0001bb40                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_12,ROBO_LASER,STRCNRM,0
    7600 0001bbe0       32          .byte   "2 CREDITS TO START",0,1
    7601 0001bc80                   .even
    7602 0001bc80                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_22,ROBO_LASER,STRCNRM,0
    7603 0001bd20       31          .byte   "1 CREDIT TO CONTINUE",0,0
    7604 0001bdd0                   .even
    7605                    
    7606 0001bdd0           TWO_TO_START_2C
    7607 0001bdd0                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_12,ROBO_LASER,STRCNRM,0
    7608 0001be70       32          .byte   "2 CREDITS TO START",0,1
    7609 0001bf10                   .even
    7610 0001bf10                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_22,ROBO_LASER,STRCNRM,0
    7611 0001bfb0       32          .byte   "2 CREDITS TO CONTINUE",0,0
    7612 0001c070                   .even
    7613                    *
    7614                    *        THIS IS FOR LINES TWO AND 3 WITH AN ADDITIONAL LINE ABOVE
    7615                    *
    7616                    
    7617 0001c070           TWO_TS  MESS_MAC RD15FONT,SPACING20,CP_CX,CP_23,ROBO_LASER,STRCNRM,0
    7618 0001c110       32          .byte   "2 CREDITS TO START",0,1
    7619 0001c1b0                   .even
    7620 0001c1b0                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_33,ROBO_LASER,STRCNRM,0
    7621 0001c250       31          .byte   "1 CREDIT TO CONTINUE",0,0
    7622 0001c300                   .even
    7623                    
    7624 0001c300           TWO_TP  MESS_MAC RD15FONT,SPACING20,CP_CX,CP_22,ROBO_LASER,STRCNRM,0
    7625 0001c3a0       32          .byte   "2 CREDITS PER PLAYER",0,0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 24 22:32:52 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  158

    7626 0001c450                   .even
    7627                    
    7628 0001c450           TWO_CRED_PER_PLAYER
    7629 0001c450                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_11,ROBO_LASER,STRCNRM,0
    7630 0001c4f0       32          .byte   "2 CREDITS PER PLAYER",0,0
    7631 0001c5a0                   .even
    7632                    
    7633 0001c5a0           MAX_C_M MESS_MAC RD15FONT,SPACING20,CP_CX,CP_11,ROBO_LF,STRCNRM,0
    7634 0001c640       4d          .byte   "MAXIMUM CREDITS!",0,0
    7635 0001c6d0                   .even
    7636                    
    7637                    ******************************************************************************
    7638                    
    7639                            .end

 No Errors,  No Warnings
