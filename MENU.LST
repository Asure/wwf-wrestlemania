TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "menu.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                            .include        "mproc.equ"
       8                            .include        "display.equ"
       9                            .include        "sys.equ"
      10                            .include        "gsp.equ"
      11                            .include        "game.equ"
      12                            .include        "link.equ"
      13                            .include        "menu.equ"
      14                            .include        "macros.h"
      15                            .include        "sound.h"
      16                    
      17                            .include        "fontsimg.glo"
      18                    
      19 00000000                   .text
      20                    
      21                    
      22                            .DEF    MEN_MAIN,GET_CSPT
      23                            .DEF    MESS_FAC
      24                            .DEF    ANY_BUT,MEN_YN
      25                            .DEF    STR_OBJ
      26                            .DEF    STR_FREE
      27                            .DEF    CKPROMPT
      28                            .DEF    GO_DIAG         ;ROUTINE FOR DIAGNOSTIC MENU
      29                            .DEF    RTR_LEV,ROM_LEV
      30                            .DEF    MESS_MM
      31                            .DEF    CS_ENTS         ;NUMBER OF HIGHEST IN COIN TABLE
      32                            .DEF    TWO_TS,TWO_TP
      33                            .DEF    FAC_STUF
      34                            .DEF    BUILD_ST
      35                            .DEF    SCODE           ;SYNTH CODE CURRENTLY BEING MADE
      36                            .DEF    DCODE           ;DIG CODE CURRENTLY BEING MADE
      37                            .DEF    HID_P
      38                            .DEF    SNDTST
      39                            .DEF    USA_1, USA_2, USA_3, USA_4, USA_ELECTITLE
      40                            .DEF    GERMAN_1, GERMAN_2, GERMAN_3, GERMAN_4, GERMAN_ELECTITLE
      41                            .DEF    FRENCH_1, FRENCH_2, FRENCH_3, FRENCH_4, FRENCH_ELECTITLE
      42                            .DEF    DIPCOINTAB
      43                            .def    RES_ALL
      44                    
      45                            .ref    _coin_addr
      46                            .ref    _switch_addr
      47                            .ref    _switch2_addr
      48                            .ref    _sound_addr
      49                            .ref    _soundirq_addr
      50                            .ref    _coin_counter_addr
      51                            .ref    _set_time
      52                            .ref    dec_to_asc
      53                            .ref    copy_rom_string
      54                            .ref    concat_string,concat_rom_string
      55                            .ref    message_buffer
      56                            .ref    MENU_TOP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    2

      57                            .ref    COL_INST
      58                            .ref    GETSTICK
      59                            .ref    ST_STICK
      60                            .ref    CLR_MAIN
      61                            .ref    ADJ_INST
      62                            .ref    CADJ_BOX
      63                            .ref    CLR_CUR
      64                            .ref    _switch_map_mode
      65                            .ref    _clk_rd
      66                            .ref    _get_time
      67                            .ref    _aquire_time
      68                    
      69                            .REF    RNDRNG0
      70                            .REF    CREATE_TEXT_LINE
      71                    
      72                            .globl  _rtc_seconds, _rtc_day, _rtc_date, _rtc_month
      73                            .globl  _rtc_minutes, _rtc_hours, _rtc_year
      74                            .globl  _tseconds,_tminutes,_thours,_tday,_tdate,_tmonth,_tyear
      75                            .globl  _serial_number,_month,_day,_year,_man_date
      76                            .globl  _GetTime,_auto_update_save
      77                    
      78 00000000                   .bss    _setup_mess,10*16       ;Used for built messages
      79 000000a0                   .bss    _setup_mess_msg,8*40    ;Used for built message strings
      80                    
      81 000001e0                   .bss    _rtc_seconds,16         ;These are used when SETTING the RTC
      82 000001f0                   .bss    _rtc_minutes,16
      83 00000200                   .bss    _rtc_hours,16
      84 00000210                   .bss    _rtc_day,16
      85 00000220                   .bss    _rtc_date,16
      86 00000230                   .bss    _rtc_month,16
      87 00000240                   .bss    _rtc_year,16
      88                    
      89 00000250                   .bss    _last_seconds,16        ;This is used when displaying the time
      90                    
      91 00000260                   .bss    _tseconds,16            ;This is where the current time is
      92 00000270                   .bss    _tminutes,16            ;stored when the time data is read
      93 00000280                   .bss    _thours,16              ;from the PIC.
      94 00000290                   .bss    _tday,16
      95 000002a0                   .bss    _tdate,16
      96 000002b0                   .bss    _tmonth,16
      97 000002c0                   .bss    _tyear,16
      98 000002d0                   .bss    _mytemp,32
      99                    
     100 000002f0                   .bss    _serial_number,32       ;Game Serial Number  (Hexidecimal)
     101 00000310                   .bss    _man_date,32            ;Date of manufacture (composite)
     102 00000330                   .bss    _month,32               ;Date of manufacture (month)
     103 00000350                   .bss    _day,32                 ;Date of manufacture (date)
     104 00000370                   .bss    _year,32                ;Date of manufacture (year)
     105                    
     106 00000390                   .bss    _auto_update_save,32    ;Save area for clock auto update
     107                    
     108                    
     109                            .ref    display_init
     110                            .ref    opmsg_main
     111                            .ref    SWITCHTEST
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    3

     112                            .ref    CLR_AUD
     113                            .ref    fswitches_cur,fswitches_down,fudge_switches2
     114                            .ref    AREUSURE
     115                            .ref    RD15FONT
     116                            .ref    L_MESS
     117                            .ref    SCRCLR
     118                            .ref    SUR_MESS
     119                            .ref    DIAG_EX
     120                            .ref    GET_ADJ
     121                            .ref    NO_CREDS
     122                            .ref    COL_BARS
     123                            .ref    DIGSRT
     124                            .ref    STRCNRM
     125                            .ref    GET_AUD
     126                            .ref    STRCAT
     127                            .ref    QSNDRST
     128                            .ref    FAC_SET
     129                            .ref    GEN_MENU
     130                            .ref    STRNGRAM
     131                            .ref    GET_HSC
     132                            .ref    STD_BORD
     133                            .ref    CLR_AUDR
     134                            .ref    STRNEW1
     135                            .ref    CMOS_VAL
     136                            .ref    FORM_ADC
     137                            .ref    LM_FINIS
     138                            .ref    INIT_HSR
     139                            .ref    TOP_BOX
     140                            .ref    LM_SETUP
     141                            .ref    B_MENU
     142                            .ref    GO_ADJ
     143                            .ref    BLNKAREA
     144                            .ref    MAIN_RET
     145                            .ref    STRLNRM
     146                            .ref    RD7FONT
     147                            .ref    WC_WORD
     148                            .ref    HEXTOASC
     149                            .ref    DIAGCPUTEST
     150                            .ref    CROSS_H
     151                            .ref    WDOGDIS
     152                            .ref    SURE_BOX
     153                            .ref    ROM_NAME
     154                            .ref    STRRNRM
     155                            .ref    FILLAREA
     156                            .ref    CLR_SCRN
     157                            .ref    CAT_A0
     158                            .ref    CK_MAX
     159                            .ref    BURN_IN
     160                            .ref    WAIT_BUT
     161                            .ref    BAD_AUD
     162                    
     163                            ;from AUDIT.ASM
     164                            .ref    AUD1
     165                    
     166                            ;from DIAG.ASM
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    4

     167                            .ref    RECTANGLE
     168                    
     169                            ;from HSTD.ASM
     170                            .ref    INIT_TB,STREAK_TAB,PIN_SPEED_TAB,INIT_HSTRING
     171                            .REF    BEATEN_TAB
     172                            .ref    INTER_TAB
     173                            .REF    TAG_TAB
     174                    
     175                            ;from MPROC.ASM
     176                            .ref    KIL1C
     177                    
     178                            ;from NSOUND.ASM
     179                            .ref    SNDSND,nosounds,set_volume
     180                    
     181                            ;from UTIL.ASM
     182                            .ref    get_but_val_down,get_stick_val_cur,dpageflip_off
     183                    
     184                    
     185 000003b0                   .BSS    FAC_FLAG,16             ;FLAG SAYS CLEAR AUDITS AND HSTABLE
     186                                                            ;IF FACTORY SETTINGS SUCCEED.
     187 000003c0                   .BSS    SCODE,16                ;SYNTH CODE LAST MADE!
     188 000003d0                   .BSS    DCODE,16                ;DIG CODE LAST MADE!
     189 000003e0                   .BSS    TMPOBJ,32               ;TEMPORARY OBJECT FROM STR_OBJ
     190                    
     191 00000000                   BSSX    octopus2,16
     192                    
     193                    
     194                    
     195 00000000           GET_CSPT
     196 00000000                   PUSH    a0
     197 00000010     1820          movk    ADJPRICE,a0
     198 00000020     0d5f          CALLA   GET_ADJ         ;GET THE COIN SELECT NUMBER BEING USED.
         00000030 00000000! 
     199 00000050     0d3f          CALLR   CS_POINT
         00000060     0002  
     200 00000070                   PULL    a0
     201 00000080     0960          RETS
     202                            
     203 00000090           CS_POINT
     204 00000090     098f          MMTM    SP,A0,A1
         000000a0     c000  
     205 000000b0     4c00          MOVE    A0,A0           ;ZERO?
     206 000000c0     ca06          JRZ     CS1             ;YEP...RETURN FIRST LINE
     207                    
     208 000000d0     0b60          CMPI    CS_ENTS,A0      ;IN RANGE?
         000000e0 ffffffc2  
     209 00000100     c201          JRLS    CS2             ;YEP...CONTINUE
     210 00000110     1820          MOVK    1,A0            ;TOO LARGE.......USE 1ST LINE.
     211                    
     212 00000120     1420  CS2     DEC     A0              ;INDEX INTO TABLE
     213 00000130     09c1  CS1     MOVI    CS_SIZE,A1      ;SIZE PER ENTRY
         00000140     01e0  
     214 00000150     5e01          MPYU    A0,A1           ;OFFSET INTO TABLE
     215 00000160     0b21          ADDI    CSELCT,A1
         00000170 0000c1c0" 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    5

     216 00000190     4c26          MOVE    A1,A6           ;RETURN THE POINTER
     217 000001a0     09af          MMFM    SP,A0,A1
         000001b0     0003  
     218 000001c0     0960          RETS
     219                    
     220                                                                                    
     221 000001d0           CKPROMPT
     222 000001d0                   PUSH    a6
     223 000001e0     1a60          movk    ADJFREPL,a0
     224 000001f0     0d5f          CALLA   GET_ADJ
         00000200 00000000! 
     225 00000220     cb27          jrnz    RET_NO                  ;Free play?
     226                    
     227 00000230     0d5f          CALLA   CK_MAX                  ;ARE WE AT MAX CREDITS?
         00000240 00000000! 
     228 00000260     c935          JRHS    RET_MAX
     229                    
     230 00000270     1ae0          movk    ADJNOCPAG,a0
     231 00000280     0d5f          CALLA   GET_ADJ                 ;CHECK THE ADJUSTMENT
         00000290 00000000! 
     232 000002b0     cb23          JRNZ    CKSPCASE                ;WE'RE SET TO SHUT UP.JUST START/CONT
     233                    
     234 000002c0     1ac0          movk    ADJ1ST6,a0              ;has operator messed around?
     235 000002d0     0d5f          CALLA   GET_ADJ
         000002e0 00000000! 
     236 00000300     ca1e          JRZ     CKSPCASE                ;YEP...GO FOR GENERIC "2 TO START"
     237                    
     238                    
     239 00000310     0d3f          CALLR   CK_2_CRED               ;IS IT A 2 CREDIT MODE?
         00000320     002d  
     240 00000330     ca0a          JRZ     NOT_2_MODE              ;NOPE...PRINT STOCK STUFF
     241                    
     242 00000340     4c01          MOVE    A0,A1                   ;COPY 2/1        2/2 CODE
     243 00000350     0d3f          CALLR   GET_CSPT                ;POINT A6 AT CSEL FOR US NOW.
         00000360     ffc9  
     244 00000370     b4c0          MOVE    *A6(CS_PICK),A0         ;GET INDICATION OF WHICH LINE
         00000380     01b0  
     245 00000390     ca15          JRZ     CKSPCASE                ;IT SAYS JUST ENUMERATE THE MODE!
     246                    
     247                    
     248 000003a0     1421          subk    1,a1
     249 000003b0     ca0a          JRZ     RET_A0_VAL              ;2/1?
     250                    
     251 000003c0     1060          addk    3,a0
     252 000003d0     c008          JRUC    RET_A0_VAL              ;RETURN THIS!
     253                    
     254 000003e0           NOT_2_MODE
     255 000003e0     0d3f          CALLR   GET_CSPT                ;POINT A6 AT CSEL FOR US NOW.
         000003f0     ffc0  
     256 00000400     b6c0          MOVE    *A6(CS_PROMPT),A0,L     ;FETCH POINTER TO MESSAGE (IF ANY)
         00000410     0150  
     257 00000420     ca0c          JRZ     CKSPCASE
     258                                                            ;WE HAVE SOMETHING STORED AT THE PROMPT
     259 00000430     0b40          CMPI    CSM_LAST,A0             ;IS IT LITTLE?
         00000440     fffb  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    6

     260 00000450     c305          JRHI    CKEXIT                  ;NOPE..ITS A POINTER..RETURN L_MESS STATUE
     261                    
     262 00000460           RET_A0_VAL
     263 00000460     4c01          MOVE    A0,A1                   ;ITS LITTLE...RETURN IT AS A CODE
     264 00000470     b6c0          MOVE    *A6(CS_LIST),A0,L       ;PASS BACK MESSAGE LIST FOR THIS MODE
         00000480     0190  
     265 00000490     c002          JRUC    CK_BYE
     266                    
     267 000004a0     5600  RET_NO  CLR     A0                      ;IT IS FREE PLAY.
     268 000004b0     5621  CKEXIT  CLR     A1                      ;NO FANCIES YET
     269 000004c0           CK_BYE  PULL    a6
     270 000004d0     4c00          move    a0,a0                   ;Pass Z
     271 000004e0     0960          rets
     272                    
     273                    
     274 000004f0           CKSPCASE
     275 000004f0     0d3f          CALLR   CK_2_CRED               ;CHECK IF THERE ARE 2 CREDIT MODES.
         00000500     000f  
     276 00000510     caf8          JRZ     RET_NO                  ;NOT A 2 CREDIT MODE.
     277                    
     278 00000520     1420          subk    1,a0
     279 00000530     ca04          JRZ     TWO_ONE                 ;YEP...RETURN 2/1
     280                    
     281 00000540     09e0          MOVI    TWO_CRED_PER_PLAYER,A0
         00000550 0001c450" 
     282 00000570     c0f3          JRUC    CKEXIT                  ;RETURN IT!
     283                    
     284                    
     285 00000580     09e0  TWO_ONE MOVI    TWO_TO_START_2C,A0
         00000590 0001bdd0" 
     286                    
     287                    
     288 000005b0     c0ef          JRUC    CKEXIT
     289                    
     290 000005c0     09e0  RET_MAX MOVI    MAX_C_M,A0
         000005d0 0001c5a0" 
     291 000005f0     c0eb          JRUC    CKEXIT
     292                    
     293                    
     294 00000600           CK_2_CRED
     295 00000600     09c0          MOVI    ADJCSTRT,A0
         00000610     000c  
     296 00000620     0d5f          CALLA   GET_ADJ         ;HOW MANY TO START
         00000630 00000000! 
     297 00000650     1440          subk    2,a0
     298 00000660     cb0a          jrnz    c2c20           ;!2 to start?
     299                    
     300 00000670     09c0          MOVI    ADJCCONT,A0
         00000680     000d  
     301 00000690     0d5f          CALLA   GET_ADJ         ;GET CONTINUE NUMBER
         000006a0 00000000! 
     302 000006c0     0b40          cmpi    2,a0            ;1 or 2 is what we return
         000006d0     fffd  
     303 000006e0     c302          jrhi    c2c20           ;02H?
     304 000006f0     4c00          move    a0,a0           ;Return NZ (unless its 2/0)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    7

     305 00000700     0960          rets
     306                    
     307 00000710     5600  c2c20   clr     a0              ;Pass Z
     308 00000720     0960          rets
     309                    
     310                    
     311 00000730           FORCE_MAIN
     312 00000730     1820          MOVK    1,A0            ;POSITIVE NUMBER FORCES MAIN MENU.
     313 00000740     0580          MOVE    A0,@MAIN_RET
         00000750 00000000! 
     314 00000770                   RETP                    ;NOW "RETURN TO THE MENU"
     315                    
     316 000007a0           GO_DIAG
     317 000007a0     09e8          MOVI    MEN_DIAG,A8     ;PUT UP THE MENU AND GO!
         000007b0 00006a10" 
     318 000007d0     c080          JAUC    GEN_MENU        ;THIS WILL RETURN TO LEVEL ABOVE US!
         000007e0 00000000! 
     319                    
     320 00000800           gb20    JSRP    DO_CLCOIN
     321 00000870           GO_BOOK
     322 00000870     0d5f          CALLA   CLR_SCRN
         00000880 00000000! 
     323 000008a0     09e2          MOVI    MES_BOOK,A2
         000008b0 00005420" 
     324 000008d0     09c3          MOVI    ROBO_WHITE,A3
         000008e0     0202  
     325 000008f0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
     326                    
     327 00000960     09e0          MOVI    COIN_AUDS,A0            ;PUT TABLE UP.
         00000970 0000fde0' 
     328 00000990                   JSRP    PRNT_AUD
     329 00000a00     09e0          MOVI    COIN1_AUDS,A0           ;PUT TABLE UP.
         00000a10 00010080' 
     330 00000a30                   JSRP    PRNT_AUD
     331                    
     332 00000aa0     09c8          MOVI    AUDLCOIN,A8             ;NOW PRINT MONEY FOR 1ST 3
         00000ab0     0001  
     333 00000ac0                   JSRP    PRINT_COL
     334                    
     335 00000b30     09e0          MOVI    COIN2_AUDS,A0           ;PUT TABLE UP.
         00000b40 00010140' 
     336 00000b60                   JSRP    PRNT_AUD
     337                    
     338                    
     339                    
     340                    
     341 00000bd0     09e8          MOVI    MEN_DETAIL,A8
         00000be0 00007310" 
     342 00000c00     1849          MOVK    2,A9                    ;CURSOR ON 2nd ENTRY
     343 00000c10                   JSRP    B_MENU                  ;SEE IF THEY WANT PAGE 2.
     344 00000c80     0b48          CMPI    1,A8                    ;DID WE GET 1'ST ENTRY?
         00000c90     fffe  
     345 00000ca0     cab5          jreq    gb20
     346                    
     347 00000cb0                   RETP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    8

     348                    
     349                    
     350                    
     351                    
     352                    
     353 00000ce0           GO_AUD
     354 00000ce0     0d5f          CALLA   CLR_SCRN
         00000cf0 00000000! 
     355 00000d10     09e2          MOVI    MES_AUD,A2
         00000d20 000053c0" 
     356 00000d40     09c3          MOVI    ROBO_CYAN,A3
         00000d50     0e0e  
     357 00000d60                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     358                    
     359 00000dd0     09e0          MOVI    GAME_AUDS1,A0   ;PUT TABLE UP.
         00000de0 00010860' 
     360 00000e00                   JSRP    PRNT_AUD
     361 00000e70                   SLEEPK  1
     362                    
     363 00000eb0     09e8          MOVI    MEN_AP1,A8      ;AUDIT PAGE 1 MENU
         00000ec0 000076d0" 
     364 00000ee0     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     365 00000ef0                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     366 00000f60     0b48          CMPI    1,A8            ;DID WE GET 1'ST ENTRY?
         00000f70     fffe  
     367 00000f80     cb00          JRNZ    NO_AP2          ;NOPE...RETURN TO OUR CALLER
         00000f90     00d0  
     368                    
     369                    
     370 00000fa0           xopepage2
     371 00000fa0     0d5f          CALLA   CLR_SCRN
         00000fb0 00000000! 
     372                    
     373 00000fd0     09e2          MOVI    MES_AUD,A2
         00000fe0 000053c0" 
     374 00001000     09c3          MOVI    ROBO_CYAN,A3
         00001010     0e0e  
     375 00001020                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     376                    
     377 00001090     09e0          MOVI    GAME_AUDS2,A0   ;PUT TABLE UP.
         000010a0 00010e00' 
     378 000010c0                   JSRP    PRNT_AUD
     379                    
     380 00001130     09e8          MOVI    MEN_AP2,A8
         00001140 000078b0" 
     381 00001160     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     382 00001170                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     383 000011e0     0b48          cmpi    2,A8            ;DID WE GET 2nd ENTRY (RETURN TO PAGE 1)
         000011f0     fffd  
     384 00001200     caad          jreq    GO_AUD          ;YEP...PUT IT UP!
     385                    
     386 00001210           xopepage2a
     387 00001210     0d5f          CALLA   CLR_SCRN
         00001220 00000000! 
     388                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE    9

     389 00001240     09e2          MOVI    MES_AUD,A2
         00001250 000053c0" 
     390 00001270     09c3          MOVI    ROBO_CYAN,A3
         00001280     0e0e  
     391 00001290                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     392                    
     393 00001300     09e0          MOVI    GAME_AUDS2a,A0  ;PUT TABLE UP.
         00001310 000113a0' 
     394 00001330                   JSRP    PRNT_AUD
     395                    
     396 000013a0     09e8          MOVI    MEN_AP2,A8
         000013b0 000078b0" 
     397 000013d0     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     398 000013e0                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     399 00001450     0b48          cmpi    2,A8            ;DID WE GET 2nd ENTRY (RETURN TO PAGE 1)
         00001460     fffd  
     400 00001470     cab2          jreq    xopepage2               ;YEP...PUT IT UP!
     401                    
     402 00001480           xopepage3
     403 00001480     0d5f          CALLA   CLR_SCRN
         00001490 00000000! 
     404                    
     405 000014b0     09e2          MOVI    MES_AUD,A2
         000014c0 000053c0" 
     406 000014e0     09c3          MOVI    ROBO_CYAN,A3
         000014f0     0e0e  
     407 00001500                   JSRP    TOP_BOX         ;PRINT TITLE BOX.
     408                    
     409 00001570     09e0          MOVI    GAME_AUDS3a,A0  ;PUT TABLE UP.
         00001580 000115e0' 
     410 000015a0                   JSRP    PRNT_AUD
     411                    
     412 00001610     09e0          MOVI    GAME_AUDS3b,A0  ;PUT TABLE UP.
         00001620 00011940' 
     413 00001640                   JSRP    PRNT_AUD
     414                    
     415 000016b0     09e0          MOVI    GAME_AUDS3c,A0  ;PUT TABLE UP.
         000016c0 00011ca0' 
     416 000016e0                   JSRP    PRNT_AUD
     417                    
     418 00001750     09e0          MOVI    GAME_AUDS3d,A0  ;PUT TABLE UP.
         00001760 00012000' 
     419 00001780                   JSRP    PRNT_AUD
     420                    
     421 000017f0     09e8          movi    GAUD_P3HEAD1,a8 ;and the page header
         00001800 00012360' 
     422 00001820                   JSRP    L_MESS
     423                    
     424 00001890     09e8          movi    GAUD_P3HEAD2,a8 ;and the page header
         000018a0 00012440' 
     425 000018c0                   JSRP    L_MESS
     426                    
     427 00001930     09e8          movi    GAUD_P3HEAD3,a8 ;and the page header
         00001940 00012510' 
     428 00001960                   JSRP    L_MESS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   10

     429                    
     430 000019d0     09e8          movi    GAUD_P3HEAD4,a8 ;and the page header
         000019e0 000125e0' 
     431 00001a00                   JSRP    L_MESS
     432                    
     433 00001a70     09e8          movi    GAUD_P3HEAD5,a8 ;and the page header
         00001a80 000126b0' 
     434 00001aa0                   JSRP    L_MESS
     435                    
     436 00001b10     09e8          movi    GAUD_P3HEAD6,a8 ;and the page header
         00001b20 00012780' 
     437 00001b40                   JSRP    L_MESS
     438                    
     439 00001bb0     09e8          MOVI    MEN_AP3,A8
         00001bc0 00007a90" 
     440 00001be0     1829          MOVK    1,A9            ;CURSOR ON 1ST ENTRY
     441 00001bf0                   JSRP    B_MENU          ;SEE IF THEY WANT PAGE 2.
     442 00001c60     0b48          cmpi    2,A8            ;DID WE GET 2nd ENTRY (RETURN TO PAGE 2)
         00001c70     fffd  
     443 00001c80     ca00          jreq    xopepage2a              ;YEP...PUT IT UP!
         00001c90     ff57  
     444                    
     445 00001ca0           NO_AP2
     446 00001ca0                   RETP
     447                    
     448 00001cd0           GO_UTIL
     449 00001cd0     09e8          MOVI    MEN_UTIL,A8
         00001ce0 00006590" 
     450 00001d00     c080          JAUC    GEN_MENU        ;PROCESS THE UTILITY MENU!
         00001d10 00000000! 
     451                    
     452 00001d30           DO_CLCRED
     453 00001d30     09e8          MOVI    MESS_CLCRED,A8  ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00001d40 00009d90" 
     454 00001d60     09e9          MOVI    CLR_CREDITS,A9  ;ROUTINE TO DO IT
         00001d70 00003900' 
     455 00001d90     09ea          MOVI    MESS_CCCONF,A10 ;CONFIRMATION.
         00001da0 00009e00" 
     456 00001dc0     c080          JAUC    AREUSURE        ;ASK EM......THEN RETURN!
         00001dd0 00000000! 
     457                    
     458                    
     459 00000410                   .bss    bar_height,16
     460                    
     461 00001df0           GO_VOL
     462                    
     463 00001df0     0d5f          calla   display_blank
         00001e00 00000000! 
     464 00001e20     0d5f          calla   dpageflip_off           ;page flipping off
         00001e30 00000000! 
     465                            
     466 00001e50     0d5f          calla   CLR_SCRN
         00001e60 00000000! 
     467 00001e80     09e2          movi    M_VOLUME,a2
         00001e90 00000120" 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   11

     468 00001eb0     09c3          movi    ROBO_GREEN,a3
         00001ec0     0606  
     469 00001ed0                   JSRP    TOP_BOX
     470                    
     471 00001f40                   create  FX_PID,background_sound ;noise
     472                    
     473 00001fc0     09e8          movi    pf_volume_2,a8
         00001fd0 000032b0' 
     474 00001ff0                   JSRP    L_MESS
     475 00002060     09e8          movi    pf_volume_3,a8
         00002070 000034d0' 
     476 00002090                   JSRP    L_MESS
     477                    
     478 00002100     09e0          movi    bxy,a0                  ;frame
         00002110 002e00b0  
     479 00002130     09e1          movi    bw|bh,a1
         00002140 00b00030  
     480 00002160     09c2          movi    ROBO_BLUE,a2
         00002170     0707  
     481 00002180                   fcall   RECTANGLE,b6
     482                    
     483 000021c0     09e0          movi    bxy+000030003H,a0       ;frame
         000021d0 003100b3  
     484 000021f0     09e1          movi    bw|bh-000060006H,a1
         00002200 00aa002a  
     485 00002220     09c2          movi    ROBO_BLACK,a2
         00002230     1414  
     486 00002240                   fcall   RECTANGLE,b6
     487                    
     488 00002280     09e8          movi    pf_volume_4,a8          ;MIN/MAX
         00002290 00003640' 
     489 000022b0                   JSRP    L_MESS
     490 00002320     09e8          movi    pf_volume_5,a8
         00002330 00003710' 
     491 00002350                   JSRP    L_MESS
     492                    
     493 000023c0     5600          clr     a0
     494 000023d0     0580          move    a0,@bar_height
         000023e0 00000410- 
     495 00002400     09c0          movi    ADJVOLUME,a0
         00002410     001c  
     496 00002420     0d5f          calla   GET_ADJ
         00002430 00000000! 
     497 00002450                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
     498 000024e0     0d5f          calla   set_volume
         000024f0 00000000! 
     499 00002510     0d3f          callr   vol_to_ht
         00002520     00a3  
     500 00002530     0d3f          callr   adjust_bar_height
         00002540     0075  
     501 00002550                   SLEEPK  2
     502 00002590     0d5f          calla   display_unblank
         000025a0 00000000! 
     503                    
     504 000025c0           vol_loop_top
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   12

     505 000025c0                   SLEEPK  1
     506                    
     507                            ;check for done
     508 00002600     5621          clr     a1
     509 00002610     5600          clr     a0
     510 00002620     0d5f          calla   get_but_val_down
         00002630 00000000! 
     511 00002650     5401          or      a0,a1
     512 00002660     1820          movk    1,a0
     513 00002670     0d5f          calla   get_but_val_down
         00002680 00000000! 
     514 000026a0     5401          or      a0,a1
     515 000026b0     07a0          move    @_coin_addr,a0,L
         000026c0 00000000! 
     516 000026e0     8400          move    *a0,a0
     517 000026f0     03e0          not     a0
     518 00002700     0b80          andi    0e7efh,a0
         00002710 ffff1810  
     519 00002730     5401          or      a0,a1
     520 00002740     cb4a          jrnz    vol_loop_done
     521                    
     522                            ;check for a vol change
     523 00002750     5600          clr     a0
     524 00002760     0d5f          calla   get_stick_val_cur
         00002770 00000000! 
     525 00002790     4c01          move    a0,a1
     526 000027a0     1820          movk    1,a0
     527 000027b0     0d5f          calla   get_stick_val_cur
         000027c0 00000000! 
     528 000027e0     5401          or      a0,a1
     529 000027f0     0b81          andi    0011b,a1                ;filter out left/right
         00002800 fffffffc  
     530                    
     531                            ;listen to the coin door switches too.  OR them in.
     532 00002820     07a0          move    @_coin_addr,a0,L
         00002830 00000000! 
     533 00002850     8400          move    *a0,a0
     534 00002860     03e0          not     a0
     535 00002870     0b80          andi    0800h,a0
         00002880 fffff7ff  
     536 000028a0     2ec0          srl     10,a0
     537 000028b0     5401          or      a0,a1
     538 000028c0     07a0          move    @_coin_addr,a0,L
         000028d0 00000000! 
     539 000028f0     8400          move    *a0,a0
     540 00002900     03e0          not     a0
     541 00002910     0b80          andi    1000h,a0
         00002920 ffffefff  
     542 00002940     2e80          srl     12,a0
     543 00002950     5401          or      a0,a1
     544 00002960     cac5          jrz     vol_loop_top
     545                    
     546                            ;get the volume
     547 00002970     09c0          movi    ADJVOLUME,a0
         00002980     001c  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   13

     548 00002990     0d5f          calla   GET_ADJ
         000029a0 00000000! 
     549                    
     550                            ;make sure the volume is in range
     551 000029c0                   BADCHK  a0,1,255,28             ;reg, lo, hi, val if bad
     552                    
     553 00002a50     1fc1          btst    JOYDN,a1
     554 00002a60     cb0c          jrnz    vol_dec
     555                    
     556                            ;increment volume
     557 00002a70     0b40          cmpi    255,a0
         00002a80     ff00  
     558 00002a90     cab2          jreq    vol_loop_top
     559 00002aa0     1020          inc     a0
     560 00002ab0     0d5f          calla   set_volume
         00002ac0 00000000! 
     561 00002ae0     0d3f          callr   vol_to_ht
         00002af0     0046  
     562 00002b00     0d3f          callr   adjust_bar_height
         00002b10     0018  
     563 00002b20     c0a9          jruc    vol_loop_top
     564                    
     565 00002b30           vol_dec ;decrement volume
     566 00002b30     0b40          cmpi    4,a0
         00002b40     fffb  
     567 00002b50     caa6          jreq    vol_loop_top
     568 00002b60     1420          dec     a0
     569 00002b70     0d5f          calla   set_volume
         00002b80 00000000! 
     570 00002ba0     0d3f          callr   vol_to_ht
         00002bb0     003a  
     571 00002bc0     0d3f          callr   adjust_bar_height
         00002bd0     000c  
     572 00002be0     c09d          jruc    vol_loop_top
     573                    
     574 00002bf0           vol_loop_done
     575 00002bf0     09c0          movi    FX_PID,a0       ;kill the background noise
         00002c00     0120  
     576 00002c10     0d5f          calla   KIL1C
         00002c20 00000000! 
     577 00002c40     0d5f          calla   nosounds
         00002c50 00000000! 
     578                    
     579 00002c70                   RETP
     580                    
     581                    
     582                    
     583 00002ca0            SUBRP  adjust_bar_height
     584                    
     585 00002ca0     4c01          move    a0,a1
     586 00002cb0     05a0          move    @bar_height,a0
         00002cc0 00000410- 
     587 00002ce0           xfbyadjust_loop
     588 00002ce0     4820          cmp     a1,a0
     589 00002cf0     ca0d          jreq    xfbydone
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   14

     590 00002d00     c406          jrlt    xfbygrow_bar
     591                    
     592 00002d10     09c2          movi    ROBO_BLACK,a2
         00002d20     1414  
     593 00002d30     0d3f          callr   vol_bar_line
         00002d40     000c  
     594 00002d50     1420          dec     a0
     595 00002d60     c0f7          jruc    xfbyadjust_loop
     596                    
     597 00002d70           xfbygrow_bar    
     598 00002d70     1020          inc     a0
     599 00002d80     09c2          movi    ROBO_RED,a2
         00002d90     0303  
     600 00002da0     0d3f          callr   vol_bar_line
         00002db0     0005  
     601 00002dc0     c0f1          jruc    xfbyadjust_loop
     602                    
     603 00002dd0           xfbydone
     604 00002dd0     0580          move    a0,@bar_height
         00002de0 00000410- 
     605 00002e00     0960          rets
     606                    
     607                    
     608                    
     609 00002e10            SUBRP  vol_bar_line
     610                    
     611 00002e10                   PUSH    a0,a1,a2
     612                            ;convert the line index to a linear address
     613 00002e30     2200          sla     16,a0
     614 00002e40     03a0          neg     a0
     615 00002e50     0b20          addi    bxy+bh-000030000H+59,a0 ;various fudges here
         00002e60 00db00eb  
     616 00002e80     e800          cvxyl   a0,a0
     617                    
     618                            ;now write the color value to all non-green pixels
     619 00002e90     09ee          movi    bw-6,a14
         00002ea0 0000002a  
     620 00002ec0           vbl_pixel_loop
     621 00002ec0     8e01          movb    *a0,a1
     622 00002ed0     0b41          cmpi    ROBO_BLUE&0Fh,a1
         00002ee0     fff8  
     623 00002ef0     ca01          jreq    vbl_skip_pixel
     624 00002f00     8c40          movb    a2,*a0
     625 00002f10           vbl_skip_pixel
     626 00002f10     1100          addk    8,a0
     627 00002f20     3cee          dsj     a14,vbl_pixel_loop
     628                    
     629 00002f30                   PULL    a0,a1,a2
     630 00002f50     0960          rets
     631                            
     632                    
     633 00002f60            SUBRP  vol_to_ht
     634                    
     635 00002f60                   PUSH    a1
     636 00002f70     4c01          move    a0,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   15

     637 00002f80     09ce          movi    169,a14
         00002f90     00a9  
     638 00002fa0     5fc1          mpyu    a14,a1
     639 00002fb0     09ce          movi    255,a14
         00002fc0     00ff  
     640 00002fd0     5bc1          divu    a14,a1
     641 00002fe0     1021          inc     a1
     642 00002ff0     4c20          move    a1,a0
     643 00003000                   PULL    a1
     644                    
     645 00003010     0960          rets
     646                    
     647                    
     648 00003020            SUBRP  background_sound
     649 00003020     5663          clr     a3
     650 00003030     0d5f          calla   SNDSND
         00003040 00000000! 
     651 00003060     09c3          movi    1000,a3
         00003070     03e8  
     652 00003080     0d5f          calla   SNDSND
         00003090 00000000! 
     653 000030b0                   SLEEP   040H
     654                    
     655 00003100     09ea  bgsnd3  movi    sound_fx_table,a10
         00003110 000031e0' 
     656 00003130     9543  bgsnd6  move    *a10+,a3,W
     657 00003140     cafb          jrz     bgsnd3
     658 00003150     0d5f          calla   SNDSND
         00003160 00000000! 
     659 00003180                   SLEEP   020H
     660 000031d0     c0f5          jruc    bgsnd6
     661                    
     662 000031e0           sound_fx_table
     663 000031e0     1980          .word   6528
     664 000031f0     00b0          .word   00B0H
     665 00003200     0080          .word   0080H
     666 00003210     0203          .word   0203H
     667 00003220     00c5          .word   00C5H
     668 00003230     00b9          .word   00B9H
     669 00003240     00cb          .word   00CBH
     670 00003250     0206          .word   0206H
     671 00003260     00b6          .word   00B6H
     672 00003270     00d1          .word   00D1H
     673 00003280     0315          .word   0315H
     674 00003290     0202          .word   0202H
     675 000032a0     0000          .word   0
     676                    
     677 000032b0           pf_volume_2
     678 000032b0                   MESS_MAC RD7FONT,SPACING20,200,174+53,COLOR_YELLOW,STRCNRM,0
     679 00003350       41          .string "ADJUST VOLUME WITH JOYSTICKS OR VOLUME BUTTONS",0,0
     680 000034d0                   .even
     681                    
     682 000034d0           pf_volume_3
     683 000034d0                   MESS_MAC RD7FONT,SPACING20,200,184+53,ROBO_LASER,STRCNRM,0
     684 00003570       41          .string "ANY OTHER BUTTON TO QUIT",0,0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   16

     685 00003640                   .even
     686                    
     687 00003640           pf_volume_4
     688 00003640                   MESS_MAC RD7FONT,SPACING20,201,vb_y+005H,ROBO_BLUE,STRCNRM,0
     689 000036e0       4d          .string "MAX",0,0
     690 00003710                   .even
     691                    
     692 00003710           pf_volume_5
     693 00003710                   MESS_MAC RD7FONT,SPACING20,201,vb_y+0a0H,ROBO_BLUE,STRCNRM,0
     694 000037b0       4d          .string "MIN",0,0
     695 000037e0                   .even
     696                    
     697              002f  vb_y            .set    02fH
     698              00ab  vb_height       .set    171
     699          002e00b0  bxy     .set    0002e0000H+200-018H
     700                    
     701          00b00000  bh      .set    0b0H*010000H
     702              0030  bw      .set    030H
     703                    
     704              0003  bthickx .set    3
     705          00030000  bthicky .set    3*010000H
     706                    
     707 000037e0           volume_table
     708 000037e0 00b00003          .long   bh+3,bxy                ; height:width  /  y:x coordinates
     709 00003820 00b00003          .long   bh+3,bxy+bw             ; height:width  /  y:x coordinates
     710                    
     711 00003860 00030030          .long   bthicky+bw,bxy                  ; height:width  /  y:x coordinates
     712 000038a0 00030033          .long   bthicky+bw+bthickx,bxy+bh       ; height:width  /  y:x coordinates
     713 000038e0 00000000          .long   0
     714                    
     715 00003900           CLR_CREDITS
     716 00003900     0d5f          CALLA   NO_CREDS                ;CALL THE ROUTINE THAT DOES IT
         00003910 00000000! 
     717 00003930                   RETP
     718                    
     719 00003960           DO_CLCOIN
     720 00003960     09e8          MOVI    MESS_CLCOIN,A8          ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00003970 00009e80" 
     721 00003990     09e9          MOVI    CLR_COINS,A9            ;ROUTINE TO DO IT
         000039a0 00003a20' 
     722 000039c0     09ea          MOVI    MESS_CCNCONF,A10        ;CONFIRMATION.
         000039d0 0000b070" 
     723 000039f0     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         00003a00 00000000! 
     724                    
     725 00003a20           CLR_COINS
     726 00003a20     09c0          MOVI    FRST_C,A0
         00003a30     0001  
     727 00003a40     09c1          MOVI    LAST_C,A1
         00003a50     000d  
     728 00003a60     0d5f          CALLA   CLR_AUDR
         00003a70 00000000! 
     729 00003a90                   RETP
     730                    
     731 00003ac0           DO_CLAUD
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   17

     732 00003ac0     09e8          MOVI    MESS_CLAUD,A8           ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00003ad0 00009f20" 
     733 00003af0     09e9          MOVI    CLR_AUDITS,A9           ;ROUTINE TO DO IT
         00003b00 00003ce0' 
     734 00003b20     09ea          MOVI    MESS_CAUDCONF,A10       ;CONFIRMATION.
         00003b30 0000b1d0" 
     735 00003b50     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         00003b60 00000000! 
     736                    
     737 00003b80           DO_CLPLRECS
     738 00003b80     09e8          movi    MESS_CLPLRECS,A8        ;CLEAR PLAYER RECORDS
         00003b90 00009fb0" 
     739 00003bb0     09e9          movi    clr_plr_records,a9      ;ROUTINE TO DO IT
         00003bc0 00003c40' 
     740 00003be0     09ea          movi    MESS_CLPLRECSCONF,a10   ;CONFIRMATION.
         00003bf0 0000b490" 
     741 00003c10     c080          jauc    AREUSURE                ;ASK EM......THEN RETURN!
         00003c20 00000000! 
     742                    
     743 00003c40           clr_plr_records
     744 00003c40     09c0          MOVI    AUD_BHART,A0
         00003c50     0033  
     745 00003c60     09c1          MOVI    LASTGAUD,A1
         00003c70     0067  
     746 00003c80     0d5f          CALLA   CLR_AUDR
         00003c90 00000000! 
     747 00003cb0                   RETP
     748                    
     749 00003ce0           CLR_AUDITS
     750 00003ce0     09c0          MOVI    FRSTGAUD,A0
         00003cf0     000e  
     751 00003d00     09c1          MOVI    LASTGAUD,A1
         00003d10     0067  
     752 00003d20     0d5f          CALLA   CLR_AUDR
         00003d30 00000000! 
     753 00003d50                   RETP
     754                    
     755 00003d80           DO_HSRES
     756 00003d80     09e8          MOVI    MESS_HSRESET,A8
         00003d90 0000a070" 
     757 00003db0     09e9          MOVI    HSSOFT,A9
         00003dc0 00003e40' 
     758 00003de0     09ea          MOVI    MESS_HSRCONF,A10
         00003df0 0000b320" 
     759 00003e10     c080          JAUC    AREUSURE
         00003e20 00000000! 
     760                    
     761 00003e40           HSSOFT
     762 00003e40     0d3f          CALLR   RES_ALL
         00003e50     0003  
     763 00003e60                   RETP                            ;PROGRAM TO DO THE JOB!
     764                    
     765 00003e90           RES_ALL
     766 00003e90     09e8          MOVI    STREAK_TAB,A8
         00003ea0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   18

     767 00003ec0     0d5f          CALLA   INIT_TB
         00003ed0 00000000! 
     768 00003ef0     09e8          movi    PIN_SPEED_TAB,a8
         00003f00 00000000! 
     769 00003f20     0d5f          calla   INIT_TB
         00003f30 00000000! 
     770 00003f50     09e8          movi    BEATEN_TAB,a8
         00003f60 00000000! 
     771 00003f80     0d5f          calla   INIT_TB
         00003f90 00000000! 
     772 00003fb0     09e8          movi    INTER_TAB,a8
         00003fc0 00000000! 
     773 00003fe0     0d5f          calla   INIT_TB
         00003ff0 00000000! 
     774 00004010     09e8          MOVI    TAG_TAB,A8
         00004020 00000000! 
     775 00004040     0d5f          calla   INIT_TB
         00004050 00000000! 
     776                    
     777 00004070     0d5f          calla   INIT_HSTRING
         00004080 00000000! 
     778 000040a0     c080          jauc    INIT_HSR                ;RE-SET THE HIGH SCORE RESET COUNTER
         000040b0 00000000! 
     779                    
     780 000040d0           DO_FACSET
     781 000040d0     09e8           MOVI    MESS_FACSET,A8
         000040e0 0000a4b0" 
     782 00004100     1820           MOVK    1,A0
     783 00004110     c004           JRUC    DEF_ADJ_PART
     784                    
     785 00004120           DO_DEF_ADJ
     786 00004120     09e8          MOVI    MESS_DEF_ADJ,A8
         00004130 0000a380" 
     787 00004150     5600          CLR     A0
     788                    
     789 00004160           DEF_ADJ_PART
     790 00004160     0580          MOVE    A0,@FAC_FLAG,W          ;INDICATE THIS IS ADJUSTMENTS ONLY
         00004170 000003b0- 
     791 00004190     09e9          MOVI    DEFADJSOFT,A9
         000041a0 00004290' 
     792 000041c0     09ea          MOVI    NULL_ST,A10             ;DON'T PRINT ANYTHING....ROUTINE WILL.
         000041d0 000136a0" 
     793 000041f0                   JSRP    AREUSURE
     794 00004260                   RETP
     795                    
     796 00004290           DEFADJSOFT
     797 00004290     0d5f          CALLA   FORM_ADC               ;FORM THE CKSUM
         000042a0 00000000! 
     798 000042c0     4c20          MOVE    A1,A0                  ;PUT IN CMOS WRITING REGGIE
     799 000042d0     09e7          MOVI    ADJ_CKSUM,A7
         000042e0 01404dc0  
     800 00004300     1020          INC     A0                     ;THIS SMASHES ADJUSTMENTS
     801 00004310     0d5f          CALLA   WC_WORD                ;AND STORE IT
         00004320 00000000! 
     802                            .ref    form_crc32
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   19

     803                            .ref    WC_LONG
     804                    
     805 00004340     0d5f          calla   form_crc32
         00004350 00000000! 
     806 00004370     4c20          move    a1,a0
     807 00004380     09e7          movi    ADJ_CRC32,a7
         00004390 01404fc0  
     808 000043b0     0d5f          calla   WC_LONG
         000043c0 00000000! 
     809 000043e0     0d5f          CALLA   CMOS_VAL
         000043f0 00000000! 
     810 00004410     ca27          JRZ     AD_FAIL                ;WE CAN'T DO IT.....PRINT FAILURE.
     811 00004420     5600          clr     a0              ;Full
     812 00004430     0d5f          CALLA   FAC_SET
         00004440 00000000! 
     813 00004460     0d5f          CALLA   CMOS_VAL        ;IS IT OK NOW?
         00004470 00000000! 
     814 00004490     cb1f          JRNZ    AD_FAIL         ;NOPE...PRINT FAILURE
     815                    
     816 000044a0     09e8          MOVI    MESS_DEFCONF,A8 ;THIS IS SINGLE MESSAGE
         000044b0 0000af10" 
     817                    
     818 000044d0     05a0          MOVE    @FAC_FLAG,A0,W  ;DO WE NEED TO CLEAR THE TABLES?
         000044e0 000003b0- 
     819 00004500     ca1f          JRZ     DAX             ;NOPE...POST SINGLE MESSAGE
     820                    
     821 00004510     0d5f          CALLA   CLR_SCRN        ;CLEAR THE SCREEN FOR OUR MESSAGES.
         00004520 00000000! 
     822 00004540     0d3f          CALLR   FAC_STUF        ;DO AUDITS AND HIGH SCORE TABLE
         00004550     000d  
     823                    
     824 00004560     09e8          MOVI    MESS_FFSCONF,A8 ;PRINT THE REST OF THE MESSAGES
         00004570 0000ae70" 
     825 00004590                   JSRP    L_MESS          ;THAT DOES IT!
     826                    
     827 00004600           NOTABS
     828 00004600                   RETP
     829                    
     830 00004630           FAC_STUF
     831 00004630     0d5f          CALLA   CLR_AUD         ;CLEAR AUDITS TOO
         00004640 00000000! 
     832 00004660     0d3f          CALLR   RES_ALL         ;ALL TIME TABLE
         00004670     ff81  
     833 00004680     0960          RETS
     834                    
     835 00004690           AD_FAIL
     836 00004690     09e8          MOVI    MESS_FACFAIL,A8
         000046a0 0000adc0" 
     837 000046c0     c003          JRUC    DAX
     838                    
     839 000046d0           DEF_CAN
     840 000046d0     09e8          MOVI    MESS_CANCELLED,A8
         000046e0 0000b570" 
     841 00004700           DAX
     842 00004700     0d5f          CALLA   CLR_SCRN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   20

         00004710 00000000! 
     843 00004730                   JSRP    SUR_MESS
     844 000047a0                   RETP
     845 000047d0           EXIST_LET
     846 000047d0     09c0          MOVI    OPMES_PID,A0                   ;SETUP FOR THE EXISTP
         000047e0     0ac3  
     847 000047f0     09e1          MOVI    0FFFFH,A1
         00004800 0000ffff  
     848 00004820     c080          JAUC   EXISTP
         00004830 00000000! 
     849 00004850           BUILD_ST
     850 00004850     098f          MMTM    SP,A0,A1,A3,A4,A5,A10
         00004860     dc20  
     851 00004870     5684          CLR     A4                     ;A4 = ZERO UNTIL 1ST NON-BLANK
     852 00004880     09e5          MOVI    STRNGRAM-BYTE_SIZE,A5  ;LAST NON-SPACE CHAR
         00004890 fffffff8! 
     853 000048b0     09e1          MOVI    STRNGRAM,A1          ;DESTINATION POINTER
         000048c0 00000000! 
     854 000048e0     09c2          MOVI    CMESS_CHARS,A2       ;CHAR COUNT
         000048f0     001a  
     855                    
     856 00004900           BSLOOP
     857 00004900     8f43          MOVB    *A10,A3              ;FETCH A BYTE
     858 00004910     0b83          ANDI    BYTE_MASK,A3         ;KILL SIGN EXTEND.
         00004920 ffffff00  
     859 00004940     cb02          JRNZ    BS1                  ;NOT ZERO
     860 00004950     09c3          MOVI    SPACE,A3             ;REPLACE ZERO WITH SPACE.
         00004960     0020  
     861                    
     862 00004970           BS1
     863 00004970     0b43          CMPI    SPACE,A3             ;IS IT A SPACE?
         00004980     ffdf  
     864 00004990     ca03          JRZ     BS2                  ;IT IS...
     865 000049a0     5464          OR      A3,A4                ;INDICATE 1ST NON-BLANK SEEN
     866 000049b0     4c25          MOVE    A1,A5                ;INDICATE THIS IS CURRENT TERMINATOR.
     867 000049c0     c002          JRUC    BS3
     868                    
     869 000049d0           BS2
     870 000049d0     4c84          MOVE    A4,A4                ;HAS 1ST SPACE BEEN SEEN?
     871 000049e0     ca02          JRZ     BS4                  ;NOT YET...DON'T STORE
     872 000049f0           BS3
     873 000049f0     8c61          MOVB    A3,*A1               ;STORE IT IN MEMORY
     874 00004a00     1101          ADDK    BYTE_SIZE,A1         ;PUSH DESTINATION POINTER
     875 00004a10           BS4
     876 00004a10     110a          ADDK    BYTE_SIZE,A10        ;PUSH SOURCE POINTER
     877 00004a20     3e62          DSJS    A2,BSLOOP            ;AND FINISH PARSE
     878 00004a30     1105          ADDK    BYTE_SIZE,A5         ;THIS IS 1 BEYOND
     879 00004a40     5642          CLR     A2
     880 00004a50     8c45          MOVB    A2,*A5               ;TERMINATE WITH A ZERO.
     881 00004a60     4c84          MOVE    A4,A4                ;ALL BLANK?
     882 00004a70     cb03          JRNZ    NOT_BLNK
     883 00004a80     09c2          MOVI    CMESS_CHARS,A2       ;ALL CHARS ARE TRAILING BLANKS
         00004a90     001a  
     884 00004aa0     c003          JRUC    BL_EX                ;RETURN THIS
     885                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   21

     886 00004ab0           NOT_BLNK
     887 00004ab0     4c22          MOVE    A1,A2                ;THIS IS LAST CHAR WE WROTE
     888 00004ac0     44a2          SUB     A5,A2                ;THIS IS NUMBER OF TRAILING SPACES (TIMES 8)
     889 00004ad0     2fa2          SRL     3,A2                 ;DIVIDE BY 8 TO GET SPACES
     890 00004ae0           BL_EX
     891 00004ae0     4c84          MOVE    A4,A4                ;FLAG ZERO FOR ALL BLANK!
     892 00004af0     09af          MMFM    SP,A0,A1,A3,A4,A5,A10
         00004b00     043b  
     893 00004b10     0960          RETS
     894                    
     895                    
     896 00004b20           GO_RED
     897 00004b20     09c1          MOVI    ROBO_RED,A1
         00004b30     0303  
     898 00004b40     c080          JAUC    SC_COL
         00004b50 00004be0' 
     899                    
     900 00004b70           GO_GREEN
     901 00004b70     09c1          MOVI    ROBO_GREEN,A1
         00004b80     0606  
     902 00004b90     c080          JAUC    SC_COL
         00004ba0 00004be0' 
     903                    
     904 00004bc0           GO_BLUE
     905 00004bc0     09c1          MOVI    ROBO_BLUE,A1
         00004bd0     0707  
     906 00004be0           SC_COL
     907 00004be0     2601          SLL     16,A1           ;[color,palette]
     908 00004bf0     5663          clr     a3              ;[y,x] start
     909 00004c00     09e4          movi    [256,399],a4    ;[Y,X] SIZE OF AREA
         00004c10 0100018f  
     910 00004c30     0d5f          CALLA   FILLAREA        ;THIS DOES THE SCREEN
         00004c40 00000000! 
     911 00004c60     1861          movk    3,a1                    ; Any button map mode
     912 00004c70     0781          move    a1,@_switch_map_mode,L
         00004c80 00000000! 
     913 00004ca0                   JSRP    WAIT_BUT
     914 00004d10     1821          movk    1,a1
     915 00004d20     0781          move    a1,@_switch_map_mode,L  ; Back to menu map mode
         00004d30 00000000! 
     916 00004d50                   RETP
     917                    
     918 00004d80           GO_CPUTEST
     919 00004d80     c080          JAUC    DIAGCPUTEST
         00004d90 00000000! 
     920                    
     921                            
     922 00004db0           GO_CROSS
     923 00004db0     0d5f          CALLA   SCRCLR
         00004dc0 00000000! 
     924 00004de0     0d5f          CALLA   CROSS_H
         00004df0 00000000! 
     925 00004e10     1861          movk    3,a1                    ; Any button map mode
     926 00004e20     0781          move    a1,@_switch_map_mode,L
         00004e30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   22

     927 00004e50                   JSRP    WAIT_BUT
     928 00004ec0     1821          movk    1,a1
     929 00004ed0     0781          move    a1,@_switch_map_mode,L  ; Back to menu map mode
         00004ee0 00000000! 
     930 00004f00                   RETP
     931                    
     932 00004f30           GO_SWTEST
     933 00004f30     0d5f          CALLA   SCRCLR
         00004f40 00000000! 
     934 00004f60     09e2          movi    M_SWTEST,a2
         00004f70 00000080" 
     935 00004f90     09c3          movi    ROBO_GREEN,a3
         00004fa0     0606  
     936 00004fb0                   JSRP    TOP_BOX
     937 00005020     5600          clr     a0
     938 00005030                   JSRP    SWITCHTEST
     939 000050a0                   RETP
     940                    
     941 000050d0           dipsw_test
     942 000050d0     0d5f          CALLA   SCRCLR
         000050e0 00000000! 
     943 00005100     09e2          movi    M_DIPTEST,a2
         00005110 00000000" 
     944 00005130     09c3          movi    ROBO_GREEN,a3
         00005140     0606  
     945 00005150                   JSRP    TOP_BOX
     946 000051c0     1820          movk    1,a0                    ;DIP mode
     947 000051d0                   JSRP    SWITCHTEST
     948 00005240                   RETP
     949                            
     950                    
     951 00005270           GO_BARS
     952 00005270     0d5f          CALLA   SCRCLR
         00005280 00000000! 
     953 000052a0     098f          MMTM    SP,A12,A13
         000052b0     000c  
     954 000052c0     0d5f          CALLA   COL_BARS
         000052d0 00000000! 
     955 000052f0     09af          MMFM    SP,A12,A13
         00005300     3000  
     956 00005310     1861          movk    3,a1                    ; Any button map mode
     957 00005320     0781          move    a1,@_switch_map_mode,L
         00005330 00000000! 
     958 00005350                   JSRP    WAIT_BUT
     959 000053c0     1821          movk    1,a1
     960 000053d0     0781          move    a1,@_switch_map_mode,L  ; Back to menu map mode
         000053e0 00000000! 
     961 00005400                   RETP
     962                    
     963 00005430           DO_BURN
     964 00005430     09e8          MOVI    MESS_BURN,A8         ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00005440 0000a2f0" 
     965 00005460     09e9          MOVI    BURN_IN,A9           ;ENTRY POINT
         00005470 00000000! 
     966 00005490     09ea          MOVI    MESS_BURN,A10        ;THIS WILL NEVER BE SEEN!
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   23

         000054a0 0000a2f0" 
     967 000054c0     c080          JAUC    AREUSURE             ;ASK EM.
         000054d0 00000000! 
     968                    
     969 000054f0           ANY_BUT
     970 000054f0     09e8          MOVI    ANY_MENU,A8          ;ANY BUTTON TO CONTINUE
         00005500 00006dd0" 
     971 00005520     1829          MOVK    1,A9                 ;CURSOR ON ENTRY 1
     972 00005530     c080          JAUC    B_MENU               ;DO IT....RETURN WHEN PRESSED.
         00005540 00000000! 
     973                    
     974                    
     975 00000000                   .data
     976                    
     977 00000000           M_DIPTEST
     978 00000000       44          .string "DIPSWITCH TEST",0
     979 00000080                   .even
     980 00000080           M_SWTEST
     981 00000080       47          .string "GENERAL SWITCH TEST",0
     982 00000120                   .even
     983 00000120           M_VOLUME
     984 00000120       56          .string "VOLUME ADJUST",0
     985 00000190                   .even
     986 00000190           HARDWARE_HELP
     987 00000190     0000          .word   0
     988 000001a0     0707          .word   COLOR_BLUE
     989 000001b0     0002          .word   2
     990 000001c0 00000200"         .long   HDWH_SN
     991 000001e0 00000270"         .long   HDWH_MAN
     992 00000200           HDWH_SN
     993 00000200       53          .string "SERIAL NUMBER",0
     994 00000270                   .even
     995 00000270           HDWH_MAN
     996 00000270       4d          .string "MANUFACTURE DATE",0
     997 00000300                   .even
     998                    
     999 00000300           CLOCK_HELP
    1000 00000300     0000          .word   0
    1001 00000310     0707          .word   COLOR_BLUE
    1002 00000320     0002          .word   2
    1003 00000330 00000370"         .long   CLKH_MESS1
    1004 00000350 000003f0"         .long   CLKH_MESS2
    1005 00000370           CLKH_MESS1
    1006 00000370       44          .string "DISPLAY OR SET",0
    1007 000003f0                   .even
    1008 000003f0           CLKH_MESS2
    1009 000003f0       54          .string "THE REAL TIME CLOCK",0
    1010 00000490                   .even
    1011 00000490           CLK_DISPLAY_HELP
    1012 00000490     0000          .word   0
    1013 000004a0     0707          .word   COLOR_BLUE
    1014 000004b0     0003          .word   3
    1015 000004c0 00000520"         .long   CDISP_H1
    1016 000004e0 000005d0"         .long   CDISP_H2
    1017 00000500 00000670"         .long   CDISP_H3
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   24

    1018 00000520           CDISP_H1
    1019 00000520       44          .string "DISPLAYS THE CURRENT",0
    1020 000005d0                   .even
    1021 000005d0           CDISP_H2
    1022 000005d0       44          .string "DATE AND TIME FROM",0
    1023 00000670                   .even
    1024 00000670           CDISP_H3
    1025 00000670       54          .string "THE REAL TIME CLOCK",0
    1026 00000710                   .even
    1027 00000710           CLK_SET_HELP
    1028 00000710     0000          .word   0
    1029 00000720     0707          .word   COLOR_BLUE
    1030 00000730     0003          .word   3
    1031 00000740 000007a0"         .long   CSET_H1
    1032 00000760 00000850"         .long   CSET_H2
    1033 00000780 000008e0"         .long   CSET_H3
    1034 000007a0           CSET_H1
    1035 000007a0       41          .string "ALLOWS SETTING OF THE",0
    1036 00000850                   .even
    1037 00000850           CSET_H2
    1038 00000850       44          .string "DATE AND TIME FOR",0
    1039 000008e0                   .even
    1040 000008e0           CSET_H3
    1041 000008e0       54          .string "THE REAL TIME CLOCK",0
    1042 00000980                   .even
    1043 00000980           CLK_CALIBRATE_HELP
    1044 00000980     0000          .word   0
    1045 00000990     0707          .word   COLOR_BLUE
    1046 000009a0     0003          .word   3
    1047 000009b0 00000a10"         .long   CCAL_H1
    1048 000009d0 00000ab0"         .long   CCAL_H2
    1049 000009f0 00000b50"         .long   CCAL_H3
    1050 00000a10           CCAL_H1
    1051 00000a10       50          .string "PREFORMS AUTOMATIC",0
    1052 00000ab0                   .even
    1053 00000ab0           CCAL_H2
    1054 00000ab0       43          .string "CALIBRATION OF THE",0
    1055 00000b50                   .even
    1056 00000b50           CCAL_H3
    1057 00000b50       52          .string "REAL TIME CLOCK",0
    1058 00000bd0                   .even
    1059                    
    1060 00000bd0           MESS_HARDWARE
    1061 00000bd0       48          .string "HARDWARE INFO",0
    1062 00000c40                   .even
    1063 00000c40           MESS_CLOCK
    1064 00000c40       52          .string "REAL TIME CLOCK",0
    1065 00000cc0                   .even
    1066                    
    1067              0072  CAL_MESS_Y      EQU     114
    1068                    
    1069 00000cc0           CLK_CALIBRATE_MESS
    1070 00000cc0                   MESS_MAC RD15FONT,SPACING07,200,CAL_MESS_Y+20,ROBO_YELLOW,STRCNRM,0
    1071 00000d60       43          .string "Calibrating Real Time Clock"
    1072 00000e38       00          .byte   0,1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   25

    1073 00000e50                   .even
    1074 00000e50                   MESS_MAC RD15FONT,SPACING07,200,CAL_MESS_Y,ROBO_DECAY,STRCNRM,0
    1075 00000ef0       50          .string "Please Wait"
    1076 00000f48       00          .byte   0,0
    1077 00000f60                   .even
    1078 00000f60           CLK_CALIBRATE_OK_MESS
    1079 00000f60                   MESS_MAC RD15FONT,SPACING07,200,CAL_MESS_Y+7,ROBO_WHITE,STRCNRM,0
    1080 00001000       43          .string "Calibration Successful"
    1081 000010b0       00          .byte   0,0
    1082 000010c0                   .even
    1083 000010c0           M_CLK_DISPLAY
    1084 000010c0       44          .string "DATE AND TIME DISPLAY",0,0
    1085 00001180                   .even
    1086 00001180           M_CLK_CALIBRATE
    1087 00001180       52          .string "REAL TIME CLOCK CALIBRATION",0,0
    1088 00001270                   .even
    1089 00001270           M_CLK_SET
    1090 00001270       53          .string "SETTING REAL TIME CLOCK",0,0
    1091 00001340                   .even
    1092                    
    1093              0032  CDAY_PROMPT_Y   EQU     50
    1094              0082  CTIME_PROMPT_Y  EQU     130
    1095              0050  CDAY_Y          EQU     CDAY_PROMPT_Y+30
    1096              0064  CDATE_Y         EQU     CDAY_Y+20
    1097              00a0  CTIME_Y         EQU     CTIME_PROMPT_Y+30
    1098                    
    1099 00001340           MESS_CLKD_PROMPTS
    1100 00001340                   MESS_MAC RD15FONT,SPACING07,200,CDAY_PROMPT_Y,ROBO_WHITE,STRCNRM,0
    1101 000013e0       43          .string "Current Date"
    1102 00001440       00          .byte   0,1
    1103 00001450                   .even
    1104 00001450                   MESS_MAC RD15FONT,SPACING07,200,CTIME_PROMPT_Y,ROBO_WHITE,STRCNRM,0
    1105 000014f0       43          .string "Current Time"
    1106 00001550       00          .byte   0,1
    1107 00001560                   .even
    1108 00001560           MESS_QUIT
    1109 00001560                   MESS_MAC RD7FONT,SPACING07,200,230,ROBO_DECAY,STRCNRM,0
    1110 00001600       50          .string "PRESS ANY BUTTON TO QUIT"
    1111 000016c0       00          .byte   0,0
    1112 000016d0                   .even
    1113 000016d0           MESS_RTC_SET
    1114 000016d0                   MESS_MAC RD7FONT,SPACING07,200,215,ROBO_LASER,STRCNRM,0
    1115 00001770       54          .string "THE REAL TIME CLOCK HAS BEEN SET"
    1116 00001870       00          .byte   0,0
    1117 00001880                   .even
    1118 00001880           MESS_SUNDAY
    1119 00001880       53          .string "Sunday",0
    1120 000018c0                   .even
    1121 000018c0           MESS_MONDAY
    1122 000018c0       4d          .string "Monday",0
    1123 00001900                   .even
    1124 00001900           MESS_TUESDAY
    1125 00001900       54          .string "Tuesday",0
    1126 00001940                   .even
    1127 00001940           MESS_WEDNESDAY
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   26

    1128 00001940       57          .string "Wednesday",0
    1129 00001990                   .even
    1130 00001990           MESS_THURSDAY
    1131 00001990       54          .string "Thursday",0
    1132 000019e0                   .even
    1133 000019e0           MESS_FRIDAY
    1134 000019e0       46          .string "Friday",0
    1135 00001a20                   .even
    1136 00001a20           MESS_SATURDAY
    1137 00001a20       53          .string "Saturday",0
    1138 00001a70                   .even
    1139                    
    1140 00001a70 00001880" DAY_TABLE       .long   MESS_SUNDAY,MESS_MONDAY,MESS_TUESDAY,MESS_WEDNESDAY
    1141 00001af0 00001990"                 .long   MESS_THURSDAY,MESS_FRIDAY,MESS_SATURDAY
    1142 00001b50                           .even
    1143                    
    1144 00001b50           MESS_JANUARY
    1145 00001b50       4a          .string "January  ",0
    1146 00001ba0                   .even
    1147 00001ba0           MESS_FEBRUARY
    1148 00001ba0       46          .string "February  ",0
    1149 00001c00                   .even
    1150 00001c00           MESS_MARCH
    1151 00001c00       4d          .string "March  ",0
    1152 00001c40                   .even
    1153 00001c40           MESS_APRIL
    1154 00001c40       41          .string "April  ",0
    1155 00001c80                   .even
    1156 00001c80           MESS_MAY
    1157 00001c80       4d          .string "May  ",0
    1158 00001cb0                   .even
    1159 00001cb0           MESS_JUNE
    1160 00001cb0       4a          .string "June  ",0
    1161 00001cf0                   .even
    1162 00001cf0           MESS_JULY
    1163 00001cf0       4a          .string "July  ",0
    1164 00001d30                   .even
    1165 00001d30           MESS_AUGUST
    1166 00001d30       41          .string "August  ",0
    1167 00001d80                   .even
    1168 00001d80           MESS_SEPTEMBER
    1169 00001d80       53          .string "September  ",0
    1170 00001de0                   .even
    1171 00001de0           MESS_OCTOBER
    1172 00001de0       4f          .string "October  ",0
    1173 00001e30                   .even
    1174 00001e30           MESS_NOVEMBER
    1175 00001e30       4e          .string "November  ",0
    1176 00001e90                   .even
    1177 00001e90           MESS_DECEMBER
    1178 00001e90       44          .string "December  ",0
    1179 00001ef0                   .even
    1180 00001ef0           MONTH_TABLE
    1181 00001ef0 00001b50"         .long   MESS_JANUARY, MESS_FEBRUARY, MESS_MARCH, MESS_APRIL
    1182 00001f70 00001c80"         .long   MESS_MAY, MESS_JUNE, MESS_JULY, MESS_AUGUST, MESS_SEPTEMBER
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   27

    1183 00002010 00001de0"         .long   MESS_OCTOBER, MESS_NOVEMBER, MESS_DECEMBER
    1184 00002070                   .even
    1185 00002070           MESS_HYEARS
    1186 00002070       2c          .string ", 19",0
    1187 000020a0                   .even
    1188 000020a0           TSEPERATOR
    1189 000020a0       3a          .string ":",0
    1190 000020b0                   .even
    1191 000020b0           ZPAD
    1192 000020b0       30          .string "0",0
    1193 000020c0                   .even
    1194 000020c0           TIME_PM
    1195 000020c0       20          .string " PM",0
    1196 000020e0                   .even
    1197 000020e0           TIME_AM
    1198 000020e0       20          .string " AM",0
    1199 00002100                   .even
    1200 00002100           DAY_SETUP
    1201 00002100                   MESS_MAC RD15FONT,SPACING07,200,CDAY_Y,ROBO_GREEN,STRCNRM,0
    1202                            .string ""
    1203 000021a0       00          .byte   0,0
    1204 000021b0                   .even
    1205 000021b0           DATE_SETUP
    1206 000021b0                   MESS_MAC RD15FONT,SPACING07,200,CDATE_Y,ROBO_GREEN,STRCNRM,0
    1207                            .string ""
    1208 00002250       00          .byte   0,0
    1209 00002260                   .even
    1210 00002260           TIME_SETUP
    1211 00002260                   MESS_MAC RD15FONT,SPACING07,200,CTIME_Y,ROBO_GREEN,STRCNRM,0
    1212                            .string ""
    1213 00002300       00          .byte   0,0
    1214 00002310                   .even
    1215 00002310           DAYADJ_SETUP
    1216 00002310                   MESS_MAC RD15FONT,SPACING07,284,185,ROBO_GREEN,STRCNRM,0
    1217                            .string ""
    1218 000023b0       00          .byte   0,0
    1219 000023c0                   .even
    1220 000023c0           DATEADJ_SETUP
    1221 000023c0                   MESS_MAC RD15FONT,SPACING07,286,205,ROBO_GREEN,STRCNRM,0
    1222                            .string ""
    1223 00002460       00          .byte   0,0
    1224 00002470                   .even
    1225 00002470           TADJ_SETUP
    1226 00002470                   MESS_MAC RD15FONT,SPACING07,284,225,ROBO_GREEN,STRCNRM,0
    1227                            .string ""
    1228 00002510       00          .byte   0,0
    1229 00002520                   .even
    1230                    
    1231                    
    1232              0032  WILLY_Y         EQU     50
    1233              0064  UNIT_Y          EQU     WILLY_Y+50
    1234              008c  SERIAL_Y        EQU     UNIT_Y+40
    1235              00b4  MAN_Y           EQU     SERIAL_Y+40
    1236                    
    1237 00002520           M_DOM
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   28

    1238 00002520       44          .string "DATE OF MANUFACTURE:  ",0
    1239 000025e0                   .even
    1240 000025e0           M_SERIAL
    1241 000025e0       53          .string "SERIAL NUMBER:  ",0
    1242 00002670                   .even
    1243 00002670           MAN_DATE_SETUP:
    1244 00002670                   MESS_MAC RD7FONT, SPACING07,200, MAN_Y, ROBO_PURPLE,STRCNRM,0
    1245                            .string ""
    1246 00002710       00          .byte   0,0
    1247 00002720                   .even
    1248 00002720           WILLY_PROMPT:
    1249 00002720                   MESS_MAC RD15FONT, SPACING07, 200, WILLY_Y, ROBO_GREEN, STRCNRM,0
    1250 000027c0       4d          .string "Midway Manufacturing Inc."
    1251 00002888       00          .byte   0,1
    1252 000028a0                   .even
    1253 000028a0                   MESS_MAC RD15FONT, SPACING20, 200, UNIT_Y, ROBO_YELLOW, STRCNRM, 0
    1254 00002940       57          .string "WWF UNIT"
    1255 00002980       00          .byte   0,0
    1256 00002990                   .even
    1257 00002990           SERIAL_NUM_SETUP:
    1258 00002990                   MESS_MAC RD7FONT,SPACING07,200,SERIAL_Y,ROBO_PURPLE,STRCNRM,0
    1259                            .string ""
    1260 00002a30       00          .byte   0,0
    1261 00002a40                   .even
    1262                    
    1263 00002a40           M_HARDWARE_INFO
    1264 00002a40       48          .string "HARDWARE INFORMATION",0
    1265 00002af0                   .even
    1266                    
    1267 00002af0           MESS_CLK_TITLE
    1268 00002af0       52          .string "REAL TIME CLOCK",0
    1269 00002b70                   .even
    1270 00002b70           MESS_DISPLAY
    1271 00002b70       44          .string "DISPLAY",0
    1272 00002bb0                   .even
    1273 00002bb0           MESS_SET
    1274 00002bb0       53          .string "SET",0
    1275 00002bd0                   .even
    1276 00002bd0           MESS_CALIBRATE
    1277 00002bd0       43          .string "CALIBRATE",0
    1278 00002c20                   .even
    1279                    
    1280 00002c20           MEN_CLOCK
    1281 00002c20 00000000!         .long   RD7FONT         ;FONT
    1282 00002c40 00000000!         .long   STRCNRM         ;CENTER PLEASE
    1283 00002c60 00002af0"         .long   MESS_CLK_TITLE  ;TITLE
    1284 00002c80     0606          .word   COLOR_GREEN     ;COLOR OF TITLE
    1285 00002c90     0068          .word   104             ;UL X
    1286 00002ca0     0057          .word   MENU_Y-3        ;UL Y
    1287 00002cb0     0013          .word   MENU_DY-4       ;VERTICAL SPACING
    1288 00002cc0     0202          .word   ROBO_WHITE      ;COLOR WHEN NOT SELECTED
    1289 00002cd0     0010          .word   16              ;HEIGHT OF SELECTION BAR
    1290 00002ce0     fffc          .word   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1291 00002cf0     0006          .word   BAR_DX          ;EXTRA X ON EACH SIDE.
    1292 00002d00     00b7          .word   BAR_WID         ;WIDTH OF BAR!  (A LITTLE FATTER)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   29

    1293 00002d10     3d3d          .word   ROBO_DECAY      ;TEXT COLOR OF SELECTED ITEM (SHOULD BE DECAY)
    1294 00002d20 00002b70"         .long   MESS_DISPLAY,GO_DISPLAY,CLK_DISPLAY_HELP
    1295 00002d80 00002bb0"         .long   MESS_SET,GO_TIME_SET,CLK_SET_HELP
    1296 00002de0 00009600"         .long   MESS_MM,RET_CLOCK,BLNK_HELP
    1297 00002e40 00000000          .long   0
    1298                    
    1299                    
    1300                    
    1301              fffe  CS_BDY  EQU     -2
    1302              00a7  CS_WID  EQU     0A7H
    1303              005e  CS_X    EQU     TIT_ULX+GAP+MB_XWID+(CS_WID/2)+C_KLUDGE
    1304              0054  CS_Y    EQU     INST_LRY+BOX_YGAP+MB_YWID+GAP-CS_BDY
    1305              00b6  CS_RX   EQU     TIT_ULX+(2*GAP)+CS_WID+(2*MB_XWID)
    1306              00b8  CS_HX   EQU     CS_RX+BOX_XGAP
    1307                    
    1308 00002e60           M_TIME_SET
    1309 00002e60       53          .string "SET REAL TIME CLOCK",0
    1310 00002f00                   .even
    1311 00002f00           MESS_YEAR_SET
    1312 00002f00       59          .string "YEAR",0
    1313 00002f30                   .even
    1314 00002f30           MESS_DATE_SET
    1315 00002f30       44          .string "DATE",0
    1316 00002f60                   .even
    1317 00002f60           MESS_MONTH_SET
    1318 00002f60       4d          .string "MONTH",0
    1319 00002f90                   .even
    1320 00002f90           MESS_DAY_SET
    1321 00002f90       44          .string "DAY",0
    1322 00002fb0                   .even
    1323 00002fb0           MESS_HOUR_SET
    1324 00002fb0       48          .string "HOURS",0
    1325 00002fe0                   .even
    1326 00002fe0           MESS_MINUTE_SET
    1327 00002fe0       4d          .string "MINUTES",0
    1328 00003020                   .even
    1329 00003020           MESS_SECOND_SET
    1330 00003020       53          .string "SECONDS",0
    1331 00003060                   .even
    1332 00003060           MESS_SET_CLOCK
    1333 00003060       53          .string "SET TIME/DATE",0
    1334 000030d0                   .even
    1335 000030d0           MESS_CLK_RET
    1336 000030d0       52          .string "RETURN TO PREV MENU",0
    1337 00003170                   .even
    1338                    
    1339 00003170           MEN_TIME_SET
    1340 00003170 00000000!         .LONG   RD7FONT         ;FONT
    1341 00003190 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    1342 000031b0 00002e60"         .LONG   M_TIME_SET      ;TITLE
    1343 000031d0     0202          .WORD   COLOR_WHITE    ;COLOR OF TITLE
    1344 000031e0     005e          .WORD   CS_X            ;UL X
    1345 000031f0     0054          .WORD   CS_Y            ;UL Y
    1346 00003200     000c          .WORD   12
    1347 00003210     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   30

    1348 00003220     000c          .WORD   12              ;HEIGHT OF SELECTION BAR
    1349 00003230     fffe          .WORD   CS_BDY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    1350 00003240     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    1351 00003250     00a7          .WORD   CS_WID          ;WIDTH OF BAR!
    1352 00003260     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    1353 00003270 000030d0"         .LONG   MESS_CLK_RET,0,BLNK_HELP           ;RETURN TO MAIN MENU
    1354 000032d0 00002f00"         .LONG   MESS_YEAR_SET,DO_YEAR,ADJ_HELP
    1355 00003330 00002f30"         .LONG   MESS_DATE_SET,DO_DATE,ADJ_HELP
    1356 00003390 00002f60"         .LONG   MESS_MONTH_SET,DO_MONTH,ADJ_HELP        ;FREE PLAY
    1357 000033f0 00002f90"         .LONG   MESS_DAY_SET,DO_DAY,ADJ_HELP
    1358 00003450 00002fb0"         .LONG   MESS_HOUR_SET,DO_HOUR,ADJ_HELP
    1359 000034b0 00002fe0"         .LONG   MESS_MINUTE_SET,DO_MINUTE,ADJ_HELP
    1360 00003510 00003020"         .LONG   MESS_SECOND_SET,DO_SECOND,ADJ_HELP
    1361 00003570 00003060"         .LONG   MESS_SET_CLOCK,GO_CLOCK_SET,SET_CLOCK_HELP
    1362 000035d0 000030d0"         .LONG   MESS_CLK_RET,0,BLNK_HELP           ;RETURN TO MAIN MENU
    1363 00003630 00000000          .LONG   0               ;END
    1364                    
    1365              0032  INSTR_Y  EQU     INST_ULY+5
    1366              003c  INSTR_2Y EQU     INSTR_Y+10
    1367                    
    1368 00003650           CS_ADV
    1369 00003650                     MESS_MAC  RD7FONT,SPACING07,CS_X,INSTR_Y,COLOR_BPR,STRCNRM,0
    1370 000036f0       53           .STRING   "SELECT WITH ANY STICK"
    1371 00003798       00           .BYTE   0,1
    1372 000037b0                    .EVEN
    1373 000037b0                    MESS_MAC  RD7FONT,SPACING07,CS_X,INSTR_2Y,COLOR_BPR,STRCNRM,0
    1374 00003850       50           .STRING   "PRESS A BUTTON TO MODIFY"
    1375 00003910       00           .BYTE   0,0
    1376 00003920                    .EVEN
    1377                    
    1378 00003920           SCH_1
    1379 00003920       53          .string "SETS THE REAL TIME CLOCK",0
    1380 000039f0                   .even
    1381 000039f0           SCH_2
    1382 000039f0       54          .string "TO THE VALUES SPECIFIED BY",0
    1383 00003ad0                   .even
    1384 00003ad0           SCH_3
    1385 00003ad0       54          .string "THE OTHER MENU ITEMS.",0
    1386 00003b80                   .even
    1387 00003b80           SET_CLOCK_HELP
    1388 00003b80     0001          .word   1
    1389 00003b90     0707          .word   COLOR_BLUE
    1390 00003ba0     0003          .word   3
    1391 00003bb0 00003920"         .long   SCH_1
    1392 00003bd0 000039f0"         .long   SCH_2
    1393 00003bf0 00003ad0"         .long   SCH_3
    1394 00003c10                   .even
    1395 00003c10           YSH_1
    1396 00003c10       20          .string " SET THE REAL TIME CLOCK's",0
    1397 00003cf0                   .even
    1398 00003cf0           YSH_2
    1399 00003cf0       20          .string "        YEAR VALUE.",0
    1400 00003d90                   .even
    1401 00003d90           YSH_3
    1402 00003d90       20          .string " Takes effect when SET is",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   31

    1403 00003e60                   .even
    1404 00003e60           YSH_4
    1405 00003e60       20          .string " selected on the RTC MENU",0
    1406 00003f30                   .even
    1407 00003f30           HELP_YEAR
    1408 00003f30     0001          .word   1
    1409 00003f40     0707          .word   COLOR_BLUE
    1410 00003f50     0004          .word   4
    1411 00003f60 00003c10"         .long   YSH_1
    1412 00003f80 00003cf0"         .long   YSH_2
    1413 00003fa0 00003d90"         .long   YSH_3
    1414 00003fc0 00003e60"         .long   YSH_4
    1415 00003fe0                   .even
    1416 00003fe0           DO_YEAR
    1417 00003fe0 0000aae0'         .long   GEN_TS                  ; Routine to run
    1418 00004000 00002f00"         .long   MESS_YEAR_SET           ; Header Message
    1419 00004020 00003f30"         .long   HELP_YEAR               ; Help Messages
    1420 00004040     0006          .word   6                       ; Index number of val to change
    1421 00004050 00000000          .long   0                       ; Minimum value
    1422 00004070 00000063          .long   99                      ; Maximum value
    1423 00004090 00000001          .long   1                       ; Move up and down by 1's
    1424 000040b0 00000000          .long   0                       ; Dont sub zero for any
    1425 000040d0 00009c70'         .long   YEAR_SET                ; Message list for values
    1426 000040f0     0001          .word   WRAP_VAL                ; Wrap around
    1427 00004100 00000000          .long   0                       ; Just Show Number
    1428 00004120 00002f00"         .long   MESS_YEAR_SET           ; Header Message
    1429                    
    1430 00004140           DTSH_2
    1431 00004140       20          .string "        DATE VALUE.",0
    1432 000041e0                   .even
    1433 000041e0           HELP_DATE
    1434 000041e0     0001          .word   1
    1435 000041f0     0707          .word   COLOR_BLUE
    1436 00004200     0004          .word   4
    1437 00004210 00003c10"         .long   YSH_1
    1438 00004230 00004140"         .long   DTSH_2
    1439 00004250 00003d90"         .long   YSH_3
    1440 00004270 00003e60"         .long   YSH_4
    1441 00004290                   .even
    1442 00004290           DO_DATE
    1443 00004290 0000aae0'         .long   GEN_TS                  ; Routine to run
    1444 000042b0 00002f30"         .long   MESS_DATE_SET           ; Header Message
    1445 000042d0 000041e0"         .long   HELP_DATE               ; Help Messages
    1446 000042f0     0004          .word   4                       ; Index Number of val to change
    1447 00004300 00000001          .long   1                       ; Minimum value
    1448 00004320 0000001f          .long   31                      ; Maximum value
    1449 00004340 00000001          .long   1                       ; Move up and down by 1's
    1450 00004360 00000000          .long   0                       ; Dont sub zero for any
    1451 00004380 00009fd0'         .long   DATE_SET                ; Message list for values
    1452 000043a0     0001          .word   WRAP_VAL                ; Wrap around
    1453 000043b0 00000000          .long   0                       ; Just Show Number
    1454 000043d0 00002f30"         .long   MESS_DATE_SET           ; Header Message
    1455                    
    1456                    
    1457 000043f0           MSH_2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   32

    1458 000043f0       20          .string "       MONTH OF YEAR.",0
    1459 000044a0                   .even
    1460 000044a0           HELP_MONTH
    1461 000044a0     0001          .word   1
    1462 000044b0     0707          .word   COLOR_BLUE
    1463 000044c0     0004          .word   4
    1464 000044d0 00003c10"         .long   YSH_1
    1465 000044f0 000043f0"         .long   MSH_2
    1466 00004510 00003d90"         .long   YSH_3
    1467 00004530 00003e60"         .long   YSH_4
    1468 00004550                   .even
    1469 00004550           DO_MONTH
    1470 00004550 0000aae0'         .long   GEN_TS                  ; Routine to run
    1471 00004570 00002f60"         .long   MESS_MONTH_SET          ; Header Message
    1472 00004590 000044a0"         .long   HELP_MONTH              ; Help Messages
    1473 000045b0     0005          .word   5                       ; Index Number of val to change
    1474 000045c0 00000001          .long   1                       ; Minimum value
    1475 000045e0 0000000c          .long   12                      ; Maximum value
    1476 00004600 00000001          .long   1                       ; Move up and down by 1's
    1477 00004620 00000000          .long   0                       ; Dont sub zero for any
    1478 00004640 00009e20'         .long   MONTH_SET               ; Message list for values
    1479 00004660     0001          .word   WRAP_VAL                ; Wrap around
    1480 00004670 00001ef0"         .long   MONTH_TABLE             ; Just Show Number
    1481 00004690 00002f60"         .long   MESS_MONTH_SET          ; Header Message
    1482                    
    1483                    
    1484 000046b0           DSH_2
    1485 000046b0       20          .string "        DAY OF WEEK.",0
    1486 00004760                   .even
    1487 00004760           HELP_DAY
    1488 00004760     0001          .word   1
    1489 00004770     0707          .word   COLOR_BLUE
    1490 00004780     0004          .word   4
    1491 00004790 00003c10"         .long   YSH_1
    1492 000047b0 000046b0"         .long   DSH_2
    1493 000047d0 00003d90"         .long   YSH_3
    1494 000047f0 00003e60"         .long   YSH_4
    1495 00004810                   .even
    1496 00004810           DO_DAY
    1497 00004810 0000aae0'         .long   GEN_TS                  ; Routine to run
    1498 00004830 00002f90"         .long   MESS_DAY_SET            ; Header Message
    1499 00004850 00004760"         .long   HELP_DAY                ; Help Messages
    1500 00004870     0003          .word   3                       ; Index Number of val to change
    1501 00004880 00000001          .long   1                       ; Minimum value
    1502 000048a0 00000007          .long   7                       ; Maximum value
    1503 000048c0 00000001          .long   1                       ; Move up and down by 1's
    1504 000048e0 00000000          .long   0                       ; Dont sub zero for any
    1505 00004900 0000a180'         .long   DAY_SET                 ; Message list for values
    1506 00004920     0001          .word   WRAP_VAL                ; Wrap around
    1507 00004930 00001a70"         .long   DAY_TABLE               ; Just Show Number
    1508 00004950 00002f90"         .long   MESS_DAY_SET            ; Header Message
    1509                    
    1510 00004970           HSH_2
    1511 00004970       20          .string "         HOUR VALUE.",0
    1512 00004a20                   .even
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   33

    1513 00004a20           HELP_HOUR
    1514 00004a20     0001          .word   1
    1515 00004a30     0707          .word   COLOR_BLUE
    1516 00004a40     0004          .word   4
    1517 00004a50 00003c10"         .long   YSH_1
    1518 00004a70 00004970"         .long   HSH_2
    1519 00004a90 00003d90"         .long   YSH_3
    1520 00004ab0 00003e60"         .long   YSH_4
    1521 00004ad0                   .even
    1522 00004ad0           DO_HOUR
    1523 00004ad0 0000aae0'         .long   GEN_TS                  ; Routine to run
    1524 00004af0 00002fb0"         .long   MESS_HOUR_SET           ; Header Message
    1525 00004b10 00004a20"         .long   HELP_HOUR               ; Help Messages
    1526 00004b30     0002          .word   2                       ; Index Number of val to change
    1527 00004b40 00000001          .long   1                       ; Minimum value
    1528 00004b60 00000018          .long   24                      ; Maximum value
    1529 00004b80 00000001          .long   1                       ; Move up and down by 1's
    1530 00004ba0 00000000          .long   0                       ; Dont sub zero for any
    1531 00004bc0 0000a330'         .long   HOUR_SET                ; Message list for values
    1532 00004be0     0001          .word   WRAP_VAL                ; Wrap around
    1533 00004bf0 00000000          .long   0                       ; Just Show Number
    1534 00004c10 00002fb0"         .long   MESS_HOUR_SET           ; Header Message
    1535                    
    1536                    
    1537 00004c30           MINSH_2
    1538 00004c30       20          .string "        MINUTE VALUE.",0
    1539 00004ce0                   .even
    1540 00004ce0           HELP_MINUTE
    1541 00004ce0     0001          .word   1
    1542 00004cf0     0707          .word   COLOR_BLUE
    1543 00004d00     0004          .word   4
    1544 00004d10 00003c10"         .long   YSH_1
    1545 00004d30 00004c30"         .long   MINSH_2
    1546 00004d50 00003d90"         .long   YSH_3
    1547 00004d70 00003e60"         .long   YSH_4
    1548 00004d90                   .even
    1549 00004d90           DO_MINUTE
    1550 00004d90 0000aae0'         .long   GEN_TS                  ; Routine to run
    1551 00004db0 00002fe0"         .long   MESS_MINUTE_SET         ; Header Message
    1552 00004dd0 00004ce0"         .long   HELP_MINUTE             ; Help Messages
    1553 00004df0     0001          .word   1                       ; Index Number of val to change
    1554 00004e00 00000000          .long   0                       ; Minimum value
    1555 00004e20 0000003b          .long   59                      ; Maximum value
    1556 00004e40 00000001          .long   1                       ; Move up and down by 1's
    1557 00004e60 00000000          .long   0                       ; Dont sub zero for any
    1558 00004e80 0000a4e0'         .long   MINUTE_SET              ; Message list for values
    1559 00004ea0     0001          .word   WRAP_VAL                ; Wrap around
    1560 00004eb0 00000000          .long   0                       ; Just Show Number
    1561 00004ed0 00002fe0"         .long   MESS_MINUTE_SET         ; Header Message
    1562                    
    1563 00004ef0           SSH_2
    1564 00004ef0       20          .string "        SECOND VALUE.",0
    1565 00004fa0                   .even
    1566 00004fa0           HELP_SECOND
    1567 00004fa0     0001          .word   1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   34

    1568 00004fb0     0707          .word   COLOR_BLUE
    1569 00004fc0     0004          .word   4
    1570 00004fd0 00003c10"         .long   YSH_1
    1571 00004ff0 00004ef0"         .long   SSH_2
    1572 00005010 00003d90"         .long   YSH_3
    1573 00005030 00003e60"         .long   YSH_4
    1574 00005050                   .even
    1575 00005050           DO_SECOND
    1576 00005050 0000aae0'         .long   GEN_TS                  ; Routine to run
    1577 00005070 00003020"         .long   MESS_SECOND_SET         ; Header Message
    1578 00005090 00004fa0"         .long   HELP_SECOND             ; Help Messages
    1579 000050b0     0000          .word   0                       ; Not used
    1580 000050c0 00000000          .long   0                       ; Minimum value
    1581 000050e0 0000003b          .long   59                      ; Maximum value
    1582 00005100 00000001          .long   1                       ; Move up and down by 1's
    1583 00005120 00000000          .long   0                       ; Dont sub zero for any
    1584 00005140 0000a690'         .long   SECOND_SET              ; Message list for values
    1585 00005160     0001          .word   WRAP_VAL                ; Wrap around
    1586 00005170 00000000          .long   0                       ; Just Show Number
    1587 00005190 00003020"         .long   MESS_SECOND_SET         ; Header Message
    1588                    
    1589 00005560                   .text
    1590                    
    1591 00005560           GO_HARDWARE:
    1592 00005560     07a2          move    @_man_date,a2,L
         00005570 00000310- 
    1593 00005590     4c41          move    a2,a1
    1594 000055a0     1421          subk    1,a1
    1595 000055b0     09c0          movi    372,a0
         000055c0     0174  
    1596 000055d0     5a01          divu    a0,a1
    1597 000055e0     09c3          movi    372,a3
         000055f0     0174  
    1598 00005600     5e23          mpyu    a1,a3
    1599 00005610     4462          sub     a3,a2
    1600 00005620     0b01          addi    80,a1
         00005630     0050  
    1601 00005640     0781          move    a1,@_year,1
         00005650 00000370- 
    1602 00005670     4c40          move    a2,a0
    1603 00005680     09c1          movi    31,a1
         00005690     001f  
    1604 000056a0     6e20          modu    a1,a0
    1605 000056b0     0780          move    a0,@_day,1
         000056c0 00000350- 
    1606 000056e0     4c41          move    a2,a1
    1607 000056f0     1421          subk    1,a1
    1608 00005700     09c0          movi    31,a0
         00005710     001f  
    1609 00005720     5a01          divu    a0,a1
    1610 00005730     1021          addk    1,a1
    1611 00005740     0781          move    a1,@_month,1
         00005750 00000330- 
    1612 00005770     0d5f          calla   CLR_SCRN                ; Clear the screen
         00005780 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   35

    1613 000057a0     09e2          movi    M_HARDWARE_INFO,a2      ; Put up Title Box
         000057b0 00002a40" 
    1614 000057d0     09c3          movi    ROBO_GREEN,a3
         000057e0     0606  
    1615 000057f0                   JSRP    TOP_BOX
    1616 00005860     09e8          movi    WILLY_PROMPT,a8
         00005870 00002720" 
    1617 00005890                   JSRP    L_MESS
    1618 00005900     09e4          movi    M_DOM,a4
         00005910 00002520" 
    1619 00005930     0d5f          calla   copy_rom_string         ; Copy the Date of manufacture prompt
         00005940 00000000! 
    1620 00005960     05a0          move    @_month,a0
         00005970 00000330- 
    1621 00005990     1420          dec     a0
    1622 000059a0     24a0          sll     5,a0
    1623 000059b0     09e8          movi    MONTH_TABLE,a8
         000059c0 00001ef0" 
    1624 000059e0     4008          add     a0,a8
    1625 000059f0     8704          move    *a8,a4,L
    1626 00005a00     0d5f          calla   concat_rom_string       ; Copy the month name
         00005a10 00000000! 
    1627 00005a30     05a0          move    @_day,a0                ; Convert date to ascii
         00005a40 00000350- 
    1628 00005a60     09c1          movi    31,a1
         00005a70     001f  
    1629 00005a80     0d5f          calla   dec_to_asc
         00005a90 00000000! 
    1630 00005ab0     0d5f          calla   concat_string           ; Add date to string
         00005ac0 00000000! 
    1631 00005ae0     09e4          movi    MESS_HYEARS,a4          ; Add , 19 to string
         00005af0 00002070" 
    1632 00005b10     0d5f          calla   concat_rom_string
         00005b20 00000000! 
    1633 00005b40     05a0          move    @_year,a0               ; Convert year to ascii
         00005b50 00000370- 
    1634 00005b70     09c1          movi    99,a1
         00005b80     0063  
    1635 00005b90     0d5f          calla   dec_to_asc
         00005ba0 00000000! 
    1636 00005bc0     0d5f          calla   concat_string           ; Add year to string
         00005bd0 00000000! 
    1637 00005bf0     09e0          movi    MAN_DATE_SETUP,a0       ; Setup message
         00005c00 00002670" 
    1638 00005c20     0d3f          callr   _setup_message
         00005c30     00d0  
    1639 00005c40     09e8          movi    _setup_mess,a8
         00005c50 00000000- 
    1640 00005c70                   JSRP    L_MESS                  ; Print Date of Manufacture
    1641                    
    1642 00005ce0     09e4          movi    M_SERIAL,a4
         00005cf0 000025e0" 
    1643 00005d10     0d5f          calla   copy_rom_string         ; Copy serial number prompt
         00005d20 00000000! 
    1644 00005d40     07a0          move    @_serial_number,a0,L    ; Convert serial number to ascii
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   36

         00005d50 000002f0- 
    1645 00005d70     09e1          movi    1000000,a1
         00005d80 000f4240  
    1646 00005da0     0d5f          calla   dec_to_asc
         00005db0 00000000! 
    1647 00005dd0     0d5f          calla   concat_string           ; Add serial number to prompt
         00005de0 00000000! 
    1648 00005e00     09e0          movi    SERIAL_NUM_SETUP,a0     ; Setup the message
         00005e10 00002990" 
    1649 00005e30     0d3f          callr   _setup_message
         00005e40     00af  
    1650 00005e50     09e8          movi    _setup_mess,a8
         00005e60 00000000- 
    1651 00005e80                   JSRP    L_MESS                  ; Print the Serial Number
    1652 00005ef0     09e8          movi    MESS_QUIT,a8
         00005f00 00001560" 
    1653 00005f20                   JSRP    L_MESS
    1654 00005f90           _hardware_check_sw:                     ; Wait for a button to be pressed
    1655 00005f90                   SLEEP   10
    1656 00005fe0     07a0          move    @_switch2_addr,a0,L
         00005ff0 00000000! 
    1657 00006010     8400          move    *a0,a0,W
    1658 00006020     07a1          move    @_switch_addr,a1,L
         00006030 00000000! 
    1659 00006050     8421          move    *a1,a1,W
    1660 00006060     2600          sll     16,a0
    1661 00006070     2e00          srl     16,a0
    1662 00006080     2601          sll     16,a1
    1663 00006090     2e01          srl     16,a1
    1664 000060a0     5001          and     a0,a1
    1665 000060b0     07a0          move    @_coin_addr,a0,L
         000060c0 00000000! 
    1666 000060e0     8400          move    *a0,a0
    1667 000060f0     0ba0          ori     10h,a0
         00006100 00000010  
    1668 00006120     2600          sll     16,a0
    1669 00006130     5420          or      a1,a0
    1670 00006140     03e0          not     a0
    1671 00006150     cae3          jrz     _hardware_check_sw
    1672 00006160           RET_HARDWARE:
    1673 00006160                   JSRP    FORCE_MAIN
    1674 000061d0                   RETP
    1675                    
    1676                    
    1677 00006200           GO_CLOCK:
    1678 00006200     07a8          move    @_clk_rd,a8,L           ;Save current auto update state
         00006210 00000000! 
    1679 00006230     0788          move    a8,@_auto_update_save,L
         00006240 00000390- 
    1680 00006260     5708          clr     a8                      ;Enable auto update
    1681 00006270     0788          move    a8,@_clk_rd,L
         00006280 00000000! 
    1682 000062a0                   JSRP    _GetTime
    1683 00006310     09e8          movi    MEN_CLOCK,a8
         00006320 00002c20" 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   37

    1684 00006340     c080          jauc    GEN_MENU
         00006350 00000000! 
    1685 00006370           RET_CLOCK:
    1686 00006370     07a8          move    @_auto_update_save,a8,L ;Restore Auto Update state
         00006380 00000390- 
    1687 000063a0     0788          move    a8,@_clk_rd,L
         000063b0 00000000! 
    1688 000063d0                   JSRP    FORCE_MAIN
    1689 00006440                   RETP
    1690                    
    1691 00006470           GO_CALIBRATE:
    1692 00006470     0d5f          calla   CLR_SCRN                ; Clear the screen
         00006480 00000000! 
    1693 000064a0     09e2          movi    M_CLK_CALIBRATE,a2      ; Put up Title Box
         000064b0 00001180" 
    1694 000064d0     09c3          movi    ROBO_GREEN,a3
         000064e0     0606  
    1695 000064f0                   JSRP    TOP_BOX
    1696 00006560     09e8          movi    CLK_CALIBRATE_MESS,a8   ; Put up calibrating message
         00006570 00000cc0" 
    1697 00006590                   JSRP    L_MESS
    1698 00006600                   SLEEP   5*60                    ; Do calibration here
    1699 00006650     05a0          move    @0c00000b0h,a0          ; Make sure transparency is OFF
         00006660 c00000b0  
    1700 00006680     a00f          move    a0,-*sp
    1701 00006690     0b80          andni   020h,a0
         000066a0 00000020  
    1702 000066c0     0580          move    a0,@0c00000b0h
         000066d0 c00000b0  
    1703 000066f0     09e0          movi    [CAL_MESS_Y,0],a0       ; Get rid of calibrating message
         00006700 00720000  
    1704 00006720     09e1          movi    [40,400],a1
         00006730 00280190  
    1705 00006750     09c2          movi    ROBO_BLACK,a2
         00006760     1414  
    1706 00006770                   fcall   RECTANGLE,b6
    1707 000067b0     95e0          move    *sp+,a0
    1708 000067c0     0580          move    a0,@0c00000b0h          ; Restore CONTROL register
         000067d0 c00000b0  
    1709 000067f0     09e8          movi    CLK_CALIBRATE_OK_MESS,a8        ; Put up success message
         00006800 00000f60" 
    1710 00006820                   JSRP    L_MESS
    1711 00006890                   SLEEP   60                      ; Let user see it
    1712 000068e0     0d5f          calla   CLR_SCRN
         000068f0 00000000! 
    1713 00006910                   RETP                            ; All done
    1714                    
    1715 00006940           _setup_message:
    1716 00006940     09e1          movi    _setup_mess,a1
         00006950 00000000- 
    1717 00006970     1942          movk    10,a2
    1718 00006980           _sm_lp1:
    1719 00006980     9801          move    *a0+,*a1+
    1720 00006990     3c42          dsjs    a2,_sm_lp1
    1721 000069a0     09e1          movi    _setup_mess_msg,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   38

         000069b0 000000a0- 
    1722 000069d0     09e0          movi    message_buffer,a0
         000069e0 00000000! 
    1723 00006a00     01e0          pushst
    1724 00006a10     0548          setf    8,0
    1725 00006a20           _sm_lp2:
    1726 00006a20     9402          move    *a0+,a2
    1727 00006a30     9041          move    a2,*a1+
    1728 00006a40     4c42          move    a2,a2
    1729 00006a50     cbfc          jrnz    _sm_lp2
    1730 00006a60           _sm_done
    1731 00006a60     01c0          popst
    1732 00006a70     5642          clr     a2
    1733 00006a80     8041          move    a2,*a1
    1734 00006a90     0960          rets
    1735                    
    1736 00006aa0             SUBRP _GetTime
    1737 00006aa0     07a0          move    @_clk_rd,a0,L   ;Save status of auto update
         00006ab0 00000000! 
    1738 00006ad0     0780          move    a0,@_auto_update_save,L
         00006ae0 00000390- 
    1739 00006b00     09c0          movi    -1,a0           ;Shut down auto update
         00006b10     ffff  
    1740 00006b20     0780          move    a0,@_clk_rd,L
         00006b30 00000000! 
    1741 00006b50     0d5f          calla   _aquire_time    ;Arm time aquistion
         00006b60 00000000! 
    1742 00006b80                   SLEEPK  5               ;Wait for it to aquire time
    1743 00006bc0     0d5f          calla   _get_time       ;Get the current time
         00006bd0 00000000! 
    1744 00006bf0     07a0          move    @_auto_update_save,a0,L
         00006c00 00000390- 
    1745 00006c20     0780          move    a0,@_clk_rd,L   ;Restore auto update status
         00006c30 00000000! 
    1746 00006c50                   RETP                    ;All done
    1747                    
    1748 00006c80           _display_time:
    1749 00006c80     5600          clr     a0
    1750 00006c90     0580          move    a0,@message_buffer
         00006ca0 00000000! 
    1751 00006cc0     05a0          move    @_thours,a0             ; Hours
         00006cd0 00000280- 
    1752 00006cf0     cb02          jrnz    _hour_gz1
    1753 00006d00     1180          addk    12,a0
    1754 00006d10     c008          jruc    _time_is_am
    1755 00006d20           _hour_gz1
    1756 00006d20     0b40          cmpi    12,a0
         00006d30     fff3  
    1757 00006d40     c605          jrle    _time_is_am
    1758 00006d50     05a0          move    @_thours,a0             ; Hours
         00006d60 00000280- 
    1759 00006d80     0be0          subi    12,a0
         00006d90     fff3  
    1760 00006da0           _time_is_am
    1761 00006da0     09c1          movi    12,a1                   ; Max hours
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   39

         00006db0     000c  
    1762 00006dc0     0d5f          calla   dec_to_asc
         00006dd0 00000000! 
    1763 00006df0     0d5f          calla   concat_string
         00006e00 00000000! 
    1764 00006e20     09e4          movi    TSEPERATOR,a4
         00006e30 000020a0" 
    1765 00006e50     0d5f          calla   concat_rom_string
         00006e60 00000000! 
    1766 00006e80     05a0          move    @_tminutes,a0
         00006e90 00000270- 
    1767 00006eb0     0b40          cmpi    9,a0
         00006ec0     fff6  
    1768 00006ed0     c706          jrgt    _no_min_pad
    1769 00006ee0     09e4          movi    ZPAD,a4
         00006ef0 000020b0" 
    1770 00006f10     0d5f          calla   concat_rom_string
         00006f20 00000000! 
    1771 00006f40           _no_min_pad
    1772 00006f40     05a0          move    @_tminutes,a0
         00006f50 00000270- 
    1773 00006f70     09c1          movi    59,a1                   ; Max Minutes
         00006f80     003b  
    1774 00006f90     0d5f          calla   dec_to_asc
         00006fa0 00000000! 
    1775 00006fc0     0d5f          calla   concat_string
         00006fd0 00000000! 
    1776 00006ff0     09e4          movi    TSEPERATOR,a4
         00007000 000020a0" 
    1777 00007020     0d5f          calla   concat_rom_string
         00007030 00000000! 
    1778 00007050     05a0          move    @_tseconds,a0
         00007060 00000260- 
    1779 00007080     0580          move    a0,@_last_seconds
         00007090 00000250- 
    1780 000070b0     0b40          cmpi    9,a0
         000070c0     fff6  
    1781 000070d0     c706          jrgt    _no_sec_pad
    1782 000070e0     09e4          movi    ZPAD,a4
         000070f0 000020b0" 
    1783 00007110     0d5f          calla   concat_rom_string
         00007120 00000000! 
    1784 00007140           _no_sec_pad
    1785 00007140     05a0          move    @_tseconds,a0
         00007150 00000260- 
    1786 00007170     09c1          movi    59,a1                   ; Max Seconds
         00007180     003b  
    1787 00007190     0d5f          calla   dec_to_asc
         000071a0 00000000! 
    1788 000071c0     0d5f          calla   concat_string
         000071d0 00000000! 
    1789 000071f0     05a0          move    @_thours,a0             ; Hours
         00007200 00000280- 
    1790 00007220     0b40          cmpi    11,a0
         00007230     fff4  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   40

    1791 00007240     c704          jrgt    _time_is_pm
    1792 00007250     09e4          movi    TIME_AM,a4
         00007260 000020e0" 
    1793 00007280     c003          jruc    _tdone
    1794 00007290           _time_is_pm
    1795 00007290     09e4          movi    TIME_PM,a4
         000072a0 000020c0" 
    1796 000072c0           _tdone
    1797 000072c0     0d5f          calla   concat_rom_string
         000072d0 00000000! 
    1798 000072f0     09e0          movi    TIME_SETUP,a0
         00007300 00002260" 
    1799 00007320     0d3f          callr   _setup_message
         00007330     ff60  
    1800 00007340     09e8          movi    _setup_mess,a8
         00007350 00000000- 
    1801 00007370                   JSRP    L_MESS
    1802 000073e0           _time_check_sw:
    1803 000073e0                   SLEEP   1
    1804 00007430     07a0          move    @_switch2_addr,a0,L
         00007440 00000000! 
    1805 00007460     8400          move    *a0,a0,W
    1806 00007470     07a1          move    @_switch_addr,a1,L
         00007480 00000000! 
    1807 000074a0     8421          move    *a1,a1,W
    1808 000074b0     2600          sll     16,a0
    1809 000074c0     2e00          srl     16,a0
    1810 000074d0     2601          sll     16,a1
    1811 000074e0     2e01          srl     16,a1
    1812 000074f0     5001          and     a0,a1
    1813 00007500     07a0          move    @_coin_addr,a0,L
         00007510 00000000! 
    1814 00007530     8400          move    *a0,a0,W
    1815 00007540     0ba0          ori     10h,a0
         00007550 00000010  
    1816 00007570     2600          sll     16,a0
    1817 00007580     5420          or      a1,a0
    1818 00007590     03e0          not     a0
    1819 000075a0     cb29          jrnz    _dtime_done
    1820 000075b0     05a0          move    @_tseconds,a0
         000075c0 00000260- 
    1821 000075e0     05a1          move    @_last_seconds,a1
         000075f0 00000250- 
    1822 00007610     4801          cmp     a0,a1
    1823 00007620     cadb          jrz     _time_check_sw
    1824 00007630     09c3          movi    1cch,a3
         00007640     01cc  
    1825 00007650     0d5f          calla   SNDSND
         00007660 00000000! 
    1826 00007680     05a0          move    @CONTROL,a0             ; Make sure transparency is OFF
         00007690 c00000b0  
    1827 000076b0     a00f          move    a0,-*sp
    1828 000076c0     0b80          andni   020h,a0
         000076d0 00000020  
    1829 000076f0     0580          move    a0,@CONTROL
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   41

         00007700 c00000b0  
    1830 00007720     09e0          movi    [CTIME_Y,0],a0          ; Get rid of calibrating message
         00007730 00a00000  
    1831 00007750     09e1          movi    [20,400],a1
         00007760 00140190  
    1832 00007780     09c2          movi    ROBO_BLACK,a2
         00007790     1414  
    1833 000077a0                   fcall   RECTANGLE,b6
    1834 000077e0     95e0          move    *sp+,a0
    1835 000077f0     0580          move    a0,@CONTROL             ; Restore CONTROL register
         00007800 c00000b0  
    1836 00007820     c000          jruc    _display_time
         00007830     ff44  
    1837 00007840           _dtime_done
    1838 00007840                   RETP
    1839                            
    1840                    
    1841 00007870           GO_DISPLAY:
    1842 00007870     0d5f          calla   CLR_SCRN                ; Clear the screen
         00007880 00000000! 
    1843 000078a0     09e2          movi    M_CLK_DISPLAY,a2        ; Put up Title Box
         000078b0 000010c0" 
    1844 000078d0     09c3          movi    ROBO_GREEN,a3
         000078e0     0606  
    1845 000078f0                   JSRP    TOP_BOX
    1846 00007960           GO_CLKS:
    1847 00007960     09e8          movi    MESS_CLKD_PROMPTS,a8    ; Put up assorted prompts
         00007970 00001340" 
    1848 00007990                   JSRP    L_MESS
    1849 00007a00                   SLEEP   5
    1850 00007a50     09e8          movi    DAY_TABLE,a8            ; Put Day of week up
         00007a60 00001a70" 
    1851 00007a80     05a0          move    @_tday,a0               ; Day of week (1-7)
         00007a90 00000290- 
    1852 00007ab0     1420          dec     a0
    1853 00007ac0     0b40          cmpi    6,a0
         00007ad0     fff9  
    1854 00007ae0     c715          jrgt    _bad_day
    1855 00007af0     24a0          sll     5,a0
    1856 00007b00     4008          add     a0,a8
    1857 00007b10     8704          move    *a8,a4,L
    1858 00007b20     0d5f          calla   copy_rom_string
         00007b30 00000000! 
    1859 00007b50     09e0          movi    DAY_SETUP,a0
         00007b60 00002100" 
    1860 00007b80     0d3f          callr   _setup_message
         00007b90     feda  
    1861 00007ba0     09e8          movi    _setup_mess,a8
         00007bb0 00000000- 
    1862 00007bd0                   JSRP    L_MESS
    1863 00007c40           _bad_day
    1864 00007c40     09e8          movi    MONTH_TABLE,a8          ; Put month of year up
         00007c50 00001ef0" 
    1865 00007c70     05a0          move    @_tmonth,a0             ; Month of year number (0-11)
         00007c80 000002b0- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   42

    1866 00007ca0     1420          dec     a0
    1867 00007cb0     0b40          cmpi    11,a0
         00007cc0     fff4  
    1868 00007cd0     c706          jrgt    _bad_month
    1869 00007ce0     24a0          sll     5,a0
    1870 00007cf0     4008          add     a0,a8
    1871 00007d00     8704          move    *a8,a4,L
    1872 00007d10     0d5f          calla   copy_rom_string         ; Copy month name to buffer
         00007d20 00000000! 
    1873 00007d40           _bad_month
    1874 00007d40     05a0          move    @_tdate,a0              ; Date (1-31)
         00007d50 000002a0- 
    1875 00007d70     0b40          cmpi    9,a0
         00007d80     fff6  
    1876 00007d90     c706          jrgt    _no_date_pad
    1877 00007da0     09e4          movi    ZPAD,a4
         00007db0 000020b0" 
    1878 00007dd0     0d5f          calla   concat_rom_string
         00007de0 00000000! 
    1879 00007e00           _no_date_pad
    1880 00007e00     05a0          move    @_tdate,a0              ; Date (1-31)
         00007e10 000002a0- 
    1881 00007e30     09c1          movi    31,a1                   ; Maximum Date
         00007e40     001f  
    1882 00007e50     0d5f          calla   dec_to_asc              ; Convert Date to ascii
         00007e60 00000000! 
    1883 00007e80     0d5f          calla   concat_string           ; Add to buffer
         00007e90 00000000! 
    1884 00007eb0     09e4          movi    MESS_HYEARS,a4          ; , 19
         00007ec0 00002070" 
    1885 00007ee0     0d5f          calla   concat_rom_string       ; Add to buffer
         00007ef0 00000000! 
    1886 00007f10     05a0          move    @_tyear,a0              ; Year (0 - 99)
         00007f20 000002c0- 
    1887 00007f40     0b40          cmpi    9,a0
         00007f50     fff6  
    1888 00007f60     c706          jrgt    _no_year_pad
    1889 00007f70     09e4          movi    ZPAD,a4
         00007f80 000020b0" 
    1890 00007fa0     0d5f          calla   concat_rom_string
         00007fb0 00000000! 
    1891 00007fd0           _no_year_pad
    1892 00007fd0     05a0          move    @_tyear,a0
         00007fe0 000002c0- 
    1893 00008000     09c1          movi    99,a1                   ; Max year
         00008010     0063  
    1894 00008020     0d5f          calla   dec_to_asc              ; Convert Years to ascii
         00008030 00000000! 
    1895 00008050     0d5f          calla   concat_string           ; Add to buffer
         00008060 00000000! 
    1896 00008080     09e0          movi    DATE_SETUP,a0
         00008090 000021b0" 
    1897 000080b0     0d3f          callr   _setup_message
         000080c0     fe87  
    1898 000080d0     09e8          movi    _setup_mess,a8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   43

         000080e0 00000000- 
    1899 00008100                   JSRP    L_MESS
    1900 00008170                   JSRP    _display_time
    1901 000081e0     09c3          movi    0c7h,a3
         000081f0     00c7  
    1902 00008200     0d5f          calla   SNDSND
         00008210 00000000! 
    1903 00008230                   RETP                            ; All done
    1904                    
    1905 00008260           _transfer_time
    1906 00008260     098f          mmtm    sp,a1,a2,a3
         00008270     7000  
    1907 00008280     09e1          movi    _rtc_seconds,a1
         00008290 000001e0- 
    1908 000082b0     09e2          movi    _tseconds,a2
         000082c0 00000260- 
    1909 000082e0     09c3          movi    7,a3
         000082f0     0007  
    1910 00008300           _tt_loop1
    1911 00008300     9841          move    *a2+,*a1+
    1912 00008310     3c43          dsjs    a3,_tt_loop1
    1913 00008320     09af          mmfm    sp,a1,a2,a3
         00008330     000e  
    1914 00008340     0960          rets
    1915                    
    1916 00008350           GO_CLOCK_SET:
    1917 00008350     0d5f          calla   CLR_SCRN                ; Clear the screen
         00008360 00000000! 
    1918 00008380     09e2          movi    M_CLK_SET,a2            ; Put up Title Box
         00008390 00001270" 
    1919 000083b0     09c3          movi    ROBO_GREEN,a3
         000083c0     0606  
    1920 000083d0                   JSRP    TOP_BOX
    1921 00008440     0d5f          calla   _set_time
         00008450 00000000! 
    1922 00008470     09e8          movi    MESS_RTC_SET,a8         ; Put up "CLOCK SET" message
         00008480 000016d0" 
    1923 000084a0                   JSRP    L_MESS
    1924 00008510                   SLEEP   30
    1925 00008560     0d3f          callr   _transfer_time
         00008570     ffce  
    1926 00008580     c080          jauc    GO_CLKS
         00008590 00007960' 
    1927                    
    1928 000085b0           GO_TIME_SET
    1929 000085b0     0d3f          callr   _transfer_time
         000085c0     ffc9  
    1930 000085d0     09e8          movi    MEN_TIME_SET,a8
         000085e0 00003170" 
    1931 00008600           GEN_TIME_SET
    1932 00008600     a30c          move    a8,-*a12,L
    1933 00008610     1820          movk    1,a0
    1934 00008620     a00c          move    a0,-*a12,W
    1935 00008630           TIME_SET_LOOP
    1936 00008630     0d5f          calla   CLR_SCRN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   44

         00008640 00000000! 
    1937 00008660     09e8          movi    CS_ADV,a8
         00008670 00003650" 
    1938 00008690                   JSRP    L_MESS
    1939 00008700     b788          move    *a12(WORD_SIZE),a8,L
         00008710     0010  
    1940 00008720                   JSRP    MENU_TOP
    1941 00008790     09c9          movi    COLOR_RED,a9
         000087a0     0303  
    1942 000087b0     0d5f          calla   COL_INST
         000087c0 00000000! 
    1943 000087e0     8589          move    *a12,a9,W
    1944 000087f0                   JSRP    B_MENU
    1945 00008860     4d29          move    a9,a9
    1946 00008870     ca0e          jrz     GO_TS_QUIT
    1947 00008880           _not_set_time
    1948 00008880     810c          move    a8,*a12,W
    1949 00008890     b720          move    *a9(AD_ROUT),a0,L
         000088a0     0000  
    1950 000088b0     09e7          movi    TIME_SET_LOOP,a7
         000088c0 00008630' 
    1951 000088e0     a2ec          move    a7,-*a12,L
    1952 000088f0     0b48          cmpi    9,a8
         00008900     fff6  
    1953 00008910     ca01          jrz     _time_set
    1954 00008920     0160          jump    a0
    1955 00008930           _time_set
    1956 00008930     c080          jauc    GO_CLOCK_SET
         00008940 00008350' 
    1957 00008960           GO_TS_QUIT
    1958 00008960     120c          addk    WORD_SIZE,a12
    1959 00008970     100c          addk    LONG_SIZE,a12
    1960 00008980                   RETP
    1961                    
    1962 000089b0           _do_title
    1963 000089b0     098c          mmtm    a12,a10,a11,a8       ;SAVE STUFF FOR CALLER
         000089c0     00b0  
    1964 000089d0     148a          subk    4,a10
    1965 000089e0     4d66          move    a11,a6
    1966 000089f0     09c9          movi    CS_HX,a9
         00008a00     00b8  
    1967 00008a10     0b09          addi    TIT_LRX,a9
         00008a20     0185  
    1968 00008a30     2fe9          srl     1,a9
    1969 00008a40     1489          subk    4,a9
    1970 00008a50     260a          sll     16,a10               ;SHIFT Y DOWN
    1971 00008a60     ef49          movy    a10,a9               ;X,Y SET
    1972 00008a70     4c48          move    a2,a8                ;TEXT POINTER
    1973 00008a80     5600          clr     a0                   ;NO SLEEP
    1974 00008a90     09ca          movi    SPACING20,a10
         00008aa0     0002  
    1975 00008ab0     09eb          movi    RD15FONT,a11
         00008ac0 00000000! 
    1976 00008ae0                   JSRP    STRCNRM              ;DO IT!
    1977 00008b50     09ac          mmfm    a12,a10,a11,a8       ;POP THE STUFF.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   45

         00008b60     0d00  
    1978 00008b70                   RETP
    1979                    
    1980 00008ba0           _adj_time_and_date
    1981 00008ba0     09e8          movi    DAY_TABLE,a8            ; Put Day of week up
         00008bb0 00001a70" 
    1982 00008bd0     05a0          move    @_rtc_day,a0            ; Day of week number (1-7)
         00008be0 00000210- 
    1983 00008c00     1420          dec     a0
    1984 00008c10     24a0          sll     5,a0
    1985 00008c20     4008          add     a0,a8
    1986 00008c30     8704          move    *a8,a4,L
    1987 00008c40     0d5f          calla   copy_rom_string
         00008c50 00000000! 
    1988 00008c70     09e0          movi    DAYADJ_SETUP,a0
         00008c80 00002310" 
    1989 00008ca0     0d3f          callr   _setup_message
         00008cb0     fdc8  
    1990 00008cc0     09e8          movi    _setup_mess,a8
         00008cd0 00000000- 
    1991 00008cf0                   JSRP    L_MESS
    1992 00008d60           _abad_day
    1993 00008d60     09e8          movi    MONTH_TABLE,a8          ; Put month of year up
         00008d70 00001ef0" 
    1994 00008d90     05a0          move    @_rtc_month,a0          ; Month of year number (1 - 12)
         00008da0 00000230- 
    1995 00008dc0     1420          dec     a0
    1996 00008dd0     24a0          sll     5,a0
    1997 00008de0     4008          add     a0,a8
    1998 00008df0     8704          move    *a8,a4,L
    1999 00008e00     0d5f          calla   copy_rom_string         ; Copy month name to buffer
         00008e10 00000000! 
    2000 00008e30           _abad_month
    2001 00008e30     05a0          move    @_rtc_date,a0           ; Date
         00008e40 00000220- 
    2002 00008e60     0b40          cmpi    9,a0
         00008e70     fff6  
    2003 00008e80     c706          jrgt    _no_date_pad1
    2004 00008e90     09e4          movi    ZPAD,a4
         00008ea0 000020b0" 
    2005 00008ec0     0d5f          calla   concat_rom_string
         00008ed0 00000000! 
    2006 00008ef0           _no_date_pad1
    2007 00008ef0     05a0          move    @_rtc_date,a0           ; Date
         00008f00 00000220- 
    2008 00008f20     09c1          movi    31,a1                   ; Maximum Date
         00008f30     001f  
    2009 00008f40     0d5f          calla   dec_to_asc              ; Convert Date to ascii
         00008f50 00000000! 
    2010 00008f70     0d5f          calla   concat_string           ; Add to buffer
         00008f80 00000000! 
    2011 00008fa0     09e4          movi    MESS_HYEARS,a4          ; , 19
         00008fb0 00002070" 
    2012 00008fd0     0d5f          calla   concat_rom_string       ; Add to buffer
         00008fe0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   46

    2013 00009000     05a0          move    @_rtc_year,a0           ; Year
         00009010 00000240- 
    2014 00009030     0b40          cmpi    9,a0
         00009040     fff6  
    2015 00009050     c706          jrgt    _no_year_pad1
    2016 00009060     09e4          movi    ZPAD,a4
         00009070 000020b0" 
    2017 00009090     0d5f          calla   concat_rom_string
         000090a0 00000000! 
    2018 000090c0           _no_year_pad1
    2019 000090c0     05a0          move    @_rtc_year,a0
         000090d0 00000240- 
    2020 000090f0     09c1          movi    99,a1                   ; Max year
         00009100     0063  
    2021 00009110     0d5f          calla   dec_to_asc              ; Convert Years to ascii
         00009120 00000000! 
    2022 00009140     0d5f          calla   concat_string           ; Add to buffer
         00009150 00000000! 
    2023 00009170     09e0          movi    DATEADJ_SETUP,a0
         00009180 000023c0" 
    2024 000091a0     0d3f          callr   _setup_message
         000091b0     fd78  
    2025 000091c0     09e8          movi    _setup_mess,a8
         000091d0 00000000- 
    2026 000091f0                   JSRP    L_MESS
    2027                    
    2028 00009260     5600          clr     a0
    2029 00009270     0580          move    a0,@message_buffer
         00009280 00000000! 
    2030 000092a0     05a0          move    @_rtc_hours,a0          ; Hours
         000092b0 00000200- 
    2031 000092d0     cb02          jrnz    _hour_gz
    2032 000092e0     1180          addk    12,a0
    2033 000092f0     c008          jruc    _time_is_am1
    2034 00009300           _hour_gz
    2035 00009300     0b40          cmpi    12,a0
         00009310     fff3  
    2036 00009320     c605          jrle    _time_is_am1
    2037 00009330     05a0          move    @_rtc_hours,a0          ; Hours
         00009340 00000200- 
    2038 00009360     0be0          subi    12,a0
         00009370     fff3  
    2039 00009380           _time_is_am1
    2040 00009380     09c1          movi    12,a1                   ; Max hours
         00009390     000c  
    2041 000093a0     0d5f          calla   dec_to_asc
         000093b0 00000000! 
    2042 000093d0     0d5f          calla   concat_string
         000093e0 00000000! 
    2043 00009400     09e4          movi    TSEPERATOR,a4
         00009410 000020a0" 
    2044 00009430     0d5f          calla   concat_rom_string
         00009440 00000000! 
    2045 00009460     05a0          move    @_rtc_minutes,a0
         00009470 000001f0- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   47

    2046 00009490     0b40          cmpi    9,a0
         000094a0     fff6  
    2047 000094b0     c706          jrgt    _no_min_pad1
    2048 000094c0     09e4          movi    ZPAD,a4
         000094d0 000020b0" 
    2049 000094f0     0d5f          calla   concat_rom_string
         00009500 00000000! 
    2050 00009520           _no_min_pad1
    2051 00009520     05a0          move    @_rtc_minutes,a0
         00009530 000001f0- 
    2052 00009550     09c1          movi    59,a1                   ; Max Minutes
         00009560     003b  
    2053 00009570     0d5f          calla   dec_to_asc
         00009580 00000000! 
    2054 000095a0     0d5f          calla   concat_string
         000095b0 00000000! 
    2055 000095d0     09e4          movi    TSEPERATOR,a4
         000095e0 000020a0" 
    2056 00009600     0d5f          calla   concat_rom_string
         00009610 00000000! 
    2057 00009630     05a0          move    @_rtc_seconds,a0
         00009640 000001e0- 
    2058 00009660     0b40          cmpi    9,a0
         00009670     fff6  
    2059 00009680     c706          jrgt    _no_sec_pad1
    2060 00009690     09e4          movi    ZPAD,a4
         000096a0 000020b0" 
    2061 000096c0     0d5f          calla   concat_rom_string
         000096d0 00000000! 
    2062 000096f0           _no_sec_pad1
    2063 000096f0     05a0          move    @_rtc_seconds,a0
         00009700 000001e0- 
    2064 00009720     09c1          movi    59,a1                   ; Max Seconds
         00009730     003b  
    2065 00009740     0d5f          calla   dec_to_asc
         00009750 00000000! 
    2066 00009770     0d5f          calla   concat_string
         00009780 00000000! 
    2067 000097a0     05a0          move    @_rtc_hours,a0          ; Hours
         000097b0 00000200- 
    2068 000097d0     0b40          cmpi    11,a0
         000097e0     fff4  
    2069 000097f0     c704          jrgt    _time_is_pm1
    2070 00009800           _time_is_afm
    2071 00009800     09e4          movi    TIME_AM,a4
         00009810 000020e0" 
    2072 00009830     c006          jruc    _tdone1
    2073 00009840           _time_is_pm1
    2074 00009840     0b40          cmpi    24,a0
         00009850     ffe7  
    2075 00009860     caf9          jrz     _time_is_afm
    2076 00009870     09e4          movi    TIME_PM,a4
         00009880 000020c0" 
    2077 000098a0           _tdone1
    2078 000098a0     0d5f          calla   concat_rom_string
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   48

         000098b0 00000000! 
    2079 000098d0     09e0          movi    TADJ_SETUP,a0
         000098e0 00002470" 
    2080 00009900     0d3f          callr   _setup_message
         00009910     fd02  
    2081 00009920     09e8          movi    _setup_mess,a8
         00009930 00000000- 
    2082 00009950                   JSRP    L_MESS
    2083 000099c0                   RETP
    2084                    
    2085 000099f0           _set_it_up
    2086 000099f0     0d5f          calla   CLR_CUR
         00009a00 00000000! 
    2087 00009a20     09c1          movi    6,a1
         00009a30     0006  
    2088 00009a40     18a4          movk    5,a4
    2089 00009a50     0d5f          calla   CADJ_BOX
         00009a60 00000000! 
    2090 00009a80     09c1          movi    1,a1
         00009a90     0001  
    2091 00009aa0     5684          clr     a4
    2092 00009ab0     0d5f          calla   CADJ_BOX
         00009ac0 00000000! 
    2093 00009ae0     09e3          movi    [ADJ_CULY+5,CS_HX+5],A3
         00009af0 009d00bd  
    2094 00009b10     09e4          movi    [21,185],A4
         00009b20 001500b9  
    2095 00009b40     0d5f          calla   BLNKAREA
         00009b50 00000000! 
    2096 00009b70     09e3          movi    [ADJ_CULY+31,CS_HX+5],A3
         00009b80 00b700bd  
    2097 00009ba0     09e4          movi    [58,185],A4
         00009bb0 003a00b9  
    2098 00009bd0     0d5f          calla   BLNKAREA
         00009be0 00000000! 
    2099 00009c00                   SLEEPK  2                       ; I dare you to take this out
    2100 00009c40                   RETP
    2101                    
    2102                    
    2103 00009c70           YEAR_SET
    2104 00009c70                   JSRP    _set_it_up
    2105 00009ce0     09e2          movi    MESS_YEAR_SET,a2
         00009cf0 00002f00" 
    2106 00009d10                   JSRP    _do_title
    2107 00009d80                   JSRP    _adj_time_and_date
    2108 00009df0                   RETP
    2109                    
    2110 00009e20           MONTH_SET
    2111 00009e20                   JSRP    _set_it_up
    2112 00009e90     09e2          movi    MESS_MONTH_SET,a2
         00009ea0 00002f60" 
    2113 00009ec0                   JSRP    _do_title
    2114 00009f30                   JSRP    _adj_time_and_date
    2115 00009fa0                   RETP
    2116                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   49

    2117 00009fd0           DATE_SET
    2118 00009fd0                   JSRP    _set_it_up
    2119 0000a040     09e2          movi    MESS_DATE_SET,a2
         0000a050 00002f30" 
    2120 0000a070                   JSRP    _do_title
    2121 0000a0e0                   JSRP    _adj_time_and_date
    2122 0000a150                   RETP
    2123                    
    2124 0000a180           DAY_SET
    2125 0000a180                   JSRP    _set_it_up
    2126 0000a1f0     09e2          movi    MESS_DAY_SET,a2
         0000a200 00002f90" 
    2127 0000a220                   JSRP    _do_title
    2128 0000a290                   JSRP    _adj_time_and_date
    2129 0000a300                   RETP
    2130                    
    2131 0000a330           HOUR_SET
    2132 0000a330                   JSRP    _set_it_up
    2133 0000a3a0     09e2          movi    MESS_HOUR_SET,a2
         0000a3b0 00002fb0" 
    2134 0000a3d0                   JSRP    _do_title
    2135 0000a440                   JSRP    _adj_time_and_date
    2136 0000a4b0                   RETP
    2137                    
    2138 0000a4e0           MINUTE_SET
    2139 0000a4e0                   JSRP    _set_it_up
    2140 0000a550     09e2          movi    MESS_MINUTE_SET,a2
         0000a560 00002fe0" 
    2141 0000a580                   JSRP    _do_title
    2142 0000a5f0                   JSRP    _adj_time_and_date
    2143 0000a660                   RETP
    2144                    
    2145 0000a690           SECOND_SET
    2146 0000a690                   JSRP    _set_it_up
    2147 0000a700     09e2          movi    MESS_SECOND_SET,a2
         0000a710 00003020" 
    2148 0000a730                   JSRP    _do_title
    2149 0000a7a0                   JSRP    _adj_time_and_date
    2150 0000a810                   RETP
    2151                    
    2152 0000a840           _ts_val_up:
    2153 0000a840     098f          mmtm    sp,a0,a2,a3
         0000a850     b000  
    2154 0000a860     2480          sll     4,a0
    2155 0000a870     0b20          addi    _rtc_seconds,a0
         0000a880 000001e0- 
    2156 0000a8a0     8403          move    *a0,a3
    2157 0000a8b0     1023          addk    1,a3
    2158 0000a8c0     b702          move    *a8(AD_MAX),a2,L
         0000a8d0     0090  
    2159 0000a8e0     4862          cmp     a3,a2
    2160 0000a8f0     c502          jrge    _ts_vu_done
    2161 0000a900     b703          move    *a8(AD_MIN),a3,L
         0000a910     0070  
    2162 0000a920           _ts_vu_done
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   50

    2163 0000a920     0b81          andi    0ffh,a1
         0000a930 ffffff00  
    2164 0000a950     8060          move    a3,*a0
    2165 0000a960     09af          mmfm    sp,a0,a2,a3
         0000a970     000d  
    2166 0000a980     0960          rets
    2167                    
    2168 0000a990           _ts_val_down:
    2169 0000a990     098f          mmtm    sp,a0,a3,a1
         0000a9a0     d000  
    2170 0000a9b0     2480          sll     4,a0
    2171 0000a9c0     0b20          addi    _rtc_seconds,a0
         0000a9d0 000001e0- 
    2172 0000a9f0     8403          move    *a0,a3
    2173 0000aa00     1423          subk    1,a3
    2174 0000aa10     b701          move    *a8(AD_MIN),a1,L
         0000aa20     0070  
    2175 0000aa30     4823          cmp     a1,a3
    2176 0000aa40     c502          jrge    _ts_vd_done
    2177 0000aa50     b703          move    *a8(AD_MAX),a3,L
         0000aa60     0090  
    2178 0000aa70           _ts_vd_done
    2179 0000aa70     0b83          andi    0ffh,a3
         0000aa80 ffffff00  
    2180 0000aaa0     8060          move    a3,*a0
    2181 0000aab0     09af          mmfm    sp,a0,a3,a1
         0000aac0     000b  
    2182 0000aad0     0960          rets
    2183                    
    2184 0000aae0           GEN_TS:
    2185 0000aae0     1840          movk    2,a0
    2186 0000aaf0     0780          move    a0,@_switch_map_mode,L
         0000ab00 00000000! 
    2187 0000ab20     b32d          move    a9,*a13(PDATA),L
         0000ab30     0100  
    2188 0000ab40     4d28          move    a9,a8
    2189 0000ab50     0d5f          calla   CLR_MAIN
         0000ab60 00000000! 
    2190 0000ab80     0d5f          calla   ADJ_INST
         0000ab90 00000000! 
    2191 0000abb0                   JSRP    ST_STICK
    2192 0000ac20                   SLEEPK  2
    2193 0000ac60           TS_CHNG
    2194 0000ac60                   SLEEPK  1
    2195 0000aca0     09e5          movi    31000h,a5
         0000acb0 00031000  
    2196 0000acd0                   JSRP    GETSTICK
    2197 0000ad40     b7a8          move    *a13(PDATA),a8,L
         0000ad50     0100  
    2198 0000ad60     4c01          move    a0,a1
    2199 0000ad70     caee          jrz     TS_CHNG
    2200 0000ad80     b500          move    *a8(AD_CMOS),a0,W       ; Get What we are adjusting
         0000ad90     0060  
    2201 0000ada0     0b41          cmpi    3,a1
         0000adb0     fffc  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   51

    2202 0000adc0     ca1a          jrz     TS_BUTT
    2203 0000add0     0b41          cmpi    2,a1
         0000ade0     fffd  
    2204 0000adf0     ca03          jrz     TS_DOWN
    2205 0000ae00     0d3f          callr   _ts_val_up              ; Incrment the value
         0000ae10     ffa2  
    2206 0000ae20     c002          jruc    TS_JOIN
    2207 0000ae30           TS_DOWN:
    2208 0000ae30     0d3f          callr   _ts_val_down            ; Decrement the value
         0000ae40     ffb4  
    2209 0000ae50           TS_JOIN:
    2210 0000ae50     09c3          movi    beep1_snd,a3
         0000ae60     03d9  
    2211 0000ae70     0d5f          calla   SNDSND
         0000ae80 00000000! 
    2212 0000aea0                   JSRP    TS_UPDATE
    2213 0000af10     c0d4          jruc    TS_CHNG
    2214 0000af20           TS_UPDATE:
    2215 0000af20     b700          move    *a8(AD_NAMEIT),a0,L
         0000af30     00f0  
    2216 0000af40     09cb          movi    ROBO_LASER,a11
         0000af50     3e3e  
    2217 0000af60     0160          jump    a0
    2218 0000af70           TS_BUTT:
    2219 0000af70     09c3          movi    beep2_snd,a3
         0000af80     03da  
    2220 0000af90     0d5f          calla   SNDSND
         0000afa0 00000000! 
    2221 0000afc0                   JSRP    TS_UPDATE
    2222 0000b030                   SLEEPK  5
    2223 0000b070           TS_CAN:
    2224 0000b070     1820          movk    1,a0
    2225 0000b080     0780          move    a0,@_switch_map_mode,L
         0000b090 00000000! 
    2226 0000b0b0                   RETP
    2227                    
    2228                    
    2229                    
    2230              0006  NCHAN           EQU     6       ;DECLARE NUMBER OF ALLOWED CHANNELS
    2231              0003  MUSICHAN        EQU     3       ;THIS CHANNEL IS FOR THE TUNES
    2232                    
    2233                    
    2234                    
    2235                    
    2236 0000b0e0           GO_STEST
    2237                    
    2238 0000b0e0     0d5f          CALLA   CLR_SCRN
         0000b0f0 00000000! 
    2239                    
    2240 0000b110     09e8          movi    MEN_SOUNDTEST,a8
         0000b120 00007c70" 
    2241 0000b140     1829          movk    1,a9                    ;CURSOR ON 1st ENTRY
    2242                    
    2243 0000b150     c080          JAUC    GEN_MENU                ;THIS WILL RETURN TO LEVEL ABOVE US!
         0000b160 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   52

    2244                    
    2245                    
    2246 0000b180           SNDTST
    2247 0000b180     09e8          MOVI    SNDMES,A8       ;MESSAGE POINTER
         0000b190 0000b520' 
    2248 0000b1b0           SNDTLP
    2249 0000b1b0     0d5f          CALLA   SCRCLR
         0000b1c0 00000000! 
    2250 0000b1e0     09e0          MOVI    M_STEST,A0      ;SOUND TEST MESSAGE
         0000b1f0 0000a900" 
    2251 0000b210     09c1          MOVI    06080H,A1
         0000b220     6080  
    2252 0000b230     5642          CLR     A2
    2253 0000b240     09c3          MOVI    ROBO_WHITE,A3
         0000b250     0202  
    2254 0000b260     0d5f          CALLA   STRNEW1
         0000b270 00000000! 
    2255 0000b290     09e1          MOVI    0B080H,A1       ;SCREEN ADDRESS
         0000b2a0 0000b080  
    2256 0000b2c0     4d00          MOVE    A8,A0
    2257 0000b2d0     0d5f          CALLA   STRNEW1
         0000b2e0 00000000! 
    2258 0000b300     1100          ADDK    8,A0
    2259 0000b310     8e05          MOVB    *A0,A5          ;Channel
    2260 0000b320     1100          ADDK    8,A0
    2261 0000b330     8e03          MOVB    *A0,A3          ;Sound #
    2262 0000b340     2703          sll     32-8,a3         ;Kill sign extend
    2263 0000b350     2d03          srl     32-8,a3
    2264 0000b360     1100          ADDK    8,A0
    2265 0000b370     0d5f          CALLA   SNDSND
         0000b380 00000000! 
    2266 0000b3a0     4c08          MOVE    A0,A8
    2267 0000b3b0     4dad          MOVE    A13,A13         ;AUTO-CYCLE?
    2268 0000b3c0     cb08          JRNE    SNDSLP          ;NO
    2269 0000b3d0     0d5f          CALLA   WDOGDIS
         0000b3e0 00000000! 
    2270 0000b400     09ed          MOVI    3000000,A13
         0000b410 002dc6c0  
    2271 0000b430     3c2d  SNDAUTO DSJS    A13,SNDAUTO
    2272 0000b440     c005          JRUC    SNDSLP1
    2273 0000b450           SNDSLP
    2274 0000b450                   SLEEP   120
    2275 0000b4a0           SNDSLP1 
    2276 0000b4a0     8f05          MOVB    *A8,A5
    2277 0000b4b0     cbcf          JRNE    SNDTLP
    2278 0000b4c0     4dad          MOVE    A13,A13         ;AUTO CYCLE EXIT
    2279 0000b4d0     ca03          JREQ    SNDX1
    2280 0000b4e0                   RETP
    2281                    
    2282 0000b510     0960  SNDX1   RETS
    2283                    
    2284 0000b520           SNDMES  
    2285 0000b520       54          .byte   "TUNE 1 (1)",0
    2286 0000b578       03          .byte   MUSICHAN,1
    2287 0000b588       4e          .byte   "NO WAY (E6)",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   53

    2288 0000b5e8       01          .byte   1,0e6H
    2289 0000b5f8       45          .byte   "EXPL1 (30)",0
    2290 0000b650       04          .byte   4,030H
    2291 0000b660       54          .byte   "TUNE 2 (9)",0
    2292 0000b6b8       03          .byte   MUSICHAN,9
    2293 0000b6c8       53          .byte   "SPIDER BOUNCE (83)",0
    2294 0000b760       04          .byte   4,083H
    2295 0000b770       4d          .byte   "MUSIC OFF (0)",0
    2296 0000b7e0       03          .byte   MUSICHAN,0
    2297 0000b7f0       00          .byte   0               ;THE END OF TABLE
    2298 0000b800                   .even
    2299                    
    2300                            .ref    SNDPROTOPROMPT
    2301                            .ref    SNDRELEASEPROMPT
    2302                            .ref    SNDTIMEOUT
    2303                            .ref    SOUNDSUP
    2304                            .ref    _snd_chip_count
    2305                    
    2306 0000b800           snd_vprompt
    2307 0000b800       53          .string "SOUND SYSTEM VERSION:  ",0
    2308 0000b8c0                   .even
    2309                    
    2310 0000b8c0           snd_rev_mes
    2311 0000b8c0                    MESS_MAC  RD7FONT,SPACING07,200,227,ROBO_GREEN,STRCNRM,0
    2312 0000b960       00          .byte   0,0,0
    2313 0000b980                   .even
    2314                    
    2315 0000b980           snd_tout_mes
    2316 0000b980                    MESS_MAC  RD7FONT,SPACING07,200,227,ROBO_RED,STRCNRM,0
    2317 0000ba20       00          .byte   0,0,0
    2318 0000ba40                   .even
    2319                    
    2320 0000ba40            SUBRP  GetSoundRev
    2321 0000ba40     07a0          move    @_coin_counter_addr,a0,L
         0000ba50 00000000! 
    2322 0000ba70     09c1          movi    030h,a1                         ; Yank down the reset
         0000ba80     0030  
    2323 0000ba90     8020          move    a1,*a0,W
    2324 0000baa0     09c1          movi    10000,a1                        ; Hold it fer a while
         0000bab0     2710  
    2325 0000bac0     3c21          dsjs    a1,$
    2326 0000bad0     09c1          movi    020h,a1                         ; Let it go
         0000bae0     0020  
    2327 0000baf0     8020          move    a1,*a0,W
    2328 0000bb00     09c1          movi    10000,a1
         0000bb10     2710  
    2329 0000bb20     3c21          dsjs    a1,$
    2330 0000bb30     07a0          move    @_sound_addr,a0,L               ; Bypass the diags
         0000bb40 00000000! 
    2331 0000bb60     8c00          movb    a0,*a0
    2332 0000bb70     09e1          movi    500000,a1                       ; Wait fer a while
         0000bb80 0007a120  
    2333 0000bba0           nqgiswait_lp
    2334 0000bba0     3c21          dsjs    a1,nqgiswait_lp
    2335 0000bbb0     5663          clr     a3                      ; Turn on the sounds
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   54

    2336 0000bbc0     0583          move    a3,@SOUNDSUP,W
         0000bbd0 00000000! 
    2337 0000bbf0     09c3          movi    999,a3                  ; Send revision request sound call
         0000bc00     03e7  
    2338 0000bc10     0d5f          calla   SNDSND
         0000bc20 00000000! 
    2339 0000bc40     09e2          movi    1000000,a2
         0000bc50 000f4240  
    2340 0000bc70           nqgisndrev_loop
    2341 0000bc70     07a0          move    @_soundirq_addr,a0,L    ; Wait fer a response
         0000bc80 00000000! 
    2342 0000bca0     8401          move    *a0,a1,W
    2343 0000bcb0     1ea1          btst    B_SDAV,a1               ; Got a response ?
    2344 0000bcc0     ca17          jrz     nqgisnd_response                ; BR = yes
    2345 0000bcd0     3ce2          dsjs    a2,nqgisndrev_loop
    2346 0000bce0           nqgisnd_timeout
    2347 0000bce0     09e4          movi    SNDTIMEOUT,a4           ; If we get here we never got a response
         0000bcf0 00000000! 
    2348 0000bd10     0d5f          calla   copy_rom_string
         0000bd20 00000000! 
    2349 0000bd40     09e0          movi    snd_tout_mes,a0
         0000bd50 0000b980' 
    2350 0000bd70     0d3f          callr   _setup_message
         0000bd80     fabb  
    2351 0000bd90     09e8          movi    _setup_mess,a8
         0000bda0 00000000- 
    2352 0000bdc0                   JSRP    L_MESS
    2353                    
    2354 0000be30     c040          jruc    nqgisndrev_done         ; Then we be done
    2355 0000be40           nqgisnd_response
    2356 0000be40     09e4          movi    snd_vprompt,a4
         0000be50 0000b800' 
    2357 0000be70     0d5f          calla   copy_rom_string
         0000be80 00000000! 
    2358                    
    2359 0000bea0     07a0          move    @_sound_addr,a0,L       ; Get sound revision data
         0000beb0 00000000! 
    2360 0000bed0     8400          move    *a0,a0,W
    2361 0000bee0     0580          move    a0,@_snd_chip_count,W   ; Put up sound revision
         0000bef0 00000000! 
    2362 0000bf10     4c01          move    a0,a1
    2363 0000bf20     0b81          andi    0ffh,a1
         0000bf30 ffffff00  
    2364 0000bf50     0b41          cmpi    0ffh,a1
         0000bf60     ff00  
    2365 0000bf70     cad6          jrz     nqgisnd_timeout
    2366 0000bf80     0b81          andi    0f0h,a1
         0000bf90 ffffff0f  
    2367 0000bfb0     0b41          cmpi    0d0h,a1
         0000bfc0     ff2f  
    2368 0000bfd0     ca04          jrz     nqgiproto_version
    2369 0000bfe0     09e4          movi    SNDRELEASEPROMPT,a4
         0000bff0 00000000! 
    2370 0000c010     c003          jruc    nqgido_snd_version
    2371 0000c020           nqgiproto_version
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   55

    2372 0000c020     09e4          movi    SNDPROTOPROMPT,a4
         0000c030 00000000! 
    2373 0000c050           nqgido_snd_version
    2374 0000c050     0d5f          calla   concat_rom_string
         0000c060 00000000! 
    2375 0000c080     05a0          move    @_snd_chip_count,a0,W
         0000c090 00000000! 
    2376 0000c0b0     0b80          andi    0fh,a0
         0000c0c0 fffffff0  
    2377 0000c0e0     19e1          movk    15,a1
    2378 0000c0f0     0d5f          calla   dec_to_asc
         0000c100 00000000! 
    2379 0000c120     0d5f          calla   concat_string
         0000c130 00000000! 
    2380 0000c150     09e0          movi    snd_rev_mes,a0
         0000c160 0000b8c0' 
    2381 0000c180     0d3f          callr   _setup_message
         0000c190     fa7a  
    2382 0000c1a0     09e8          movi    _setup_mess,a8
         0000c1b0 00000000- 
    2383 0000c1d0                   JSRP    L_MESS
    2384 0000c240           nqgisndrev_done
    2385 0000c240                   RETP
    2386                    
    2387 0000c270           DO_GENTEST
    2388                            
    2389 0000c270     0d5f          CALLA   CLR_SCRN
         0000c280 00000000! 
    2390 0000c2a0     09e2          MOVI    M_DIGT,A2
         0000c2b0 0000cc50' 
    2391 0000c2d0     09c3          MOVI    ROBO_GREEN,A3
         0000c2e0     0606  
    2392 0000c2f0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
    2393                    
    2394 0000c360     0d5f          CALLA   SURE_BOX                ;PUT A NICE BOX UP!
         0000c370 00000000! 
    2395                    
    2396 0000c390     09e8          movi    nqgisnd_testing_mess,a8
         0000c3a0 0000e1f0' 
    2397 0000c3c0                   JSRP    L_MESS
    2398                    
    2399 0000c430                   JSRP    GetSoundRev
    2400                    
    2401                            ;reset the board
    2402 0000c4a0     09c0          movi    SNDRSTBIT|32,a0         ;pull bit low
         0000c4b0     0030  
    2403 0000c4c0     07a8          move    @_coin_counter_addr,a8,L
         0000c4d0 00000000! 
    2404 0000c4f0     8008          move    a0,*a8,W
    2405 0000c500     09ce          movi    8,a14                   ;wait a bit
         0000c510     0008  
    2406 0000c520     3c2e          dsjs    a14,$
    2407                    
    2408 0000c530     09c0          movi    32,a0                   ;send it high again
         0000c540     0020  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   56

    2409 0000c550     07a8          move    @_coin_counter_addr,a8,L
         0000c560 00000000! 
    2410 0000c580     8008          move    a0,*a8,W
    2411                    
    2412 0000c590                   SLEEP   TSEC/4                  ;250ms wait
    2413                    
    2414 0000c5e0     09c0          movi    TSEC*7,a0               ;wait for data available
         0000c5f0     0173  
    2415 0000c600                   JSRP    poll_sdav
    2416                    
    2417 0000c670     07a0          move    @_sound_addr,a0,L
         0000c680 00000000! 
    2418 0000c6a0     8e00          movb    *a0,a0
    2419 0000c6b0     0b40          cmpi    79h,a0
         0000c6c0     ff86  
    2420 0000c6d0     cb1c          jrne    sdav_not79
    2421                    
    2422 0000c6e0     09c0          movi    TSEC/5,a0
         0000c6f0     000a  
    2423 0000c700                   JSRP    poll_sdav               ;great.  now wait for the bong count
    2424                    
    2425 0000c770     07a0          move    @_sound_addr,a0,L
         0000c780 00000000! 
    2426 0000c7a0     8e00          movb    *a0,a0
    2427 0000c7b0                   X32     a0
    2428 0000c7c0     0b20          addi    diag_message_table,a0
         0000c7d0 0000c920' 
    2429 0000c7f0     8608          move    *a0,a8,L
    2430 0000c800                   JSRP    L_MESS
    2431                    
    2432 0000c870     c080          jauc    ANY_BUT
         0000c880 000054f0' 
    2433                    
    2434 0000c8a0           sdav_not79
    2435 0000c8a0     09c0          movi    AUD_SNDERR4,a0
         0000c8b0     0032  
    2436 0000c8c0     0d5f          calla   AUD1
         0000c8d0 00000000! 
    2437                            .if     DEBUG                   ;sound board misbehaving.  should
    2438                            LOCKUP                          ; write a 0x79 after the checksum
    2439                            .endif                          ; tests.  it wrote something else.
    2440 0000c8f0     c080          jauc    ANY_BUT
         0000c900 000054f0' 
    2441                    
    2442 0000c920           diag_message_table
    2443 0000c920 0000e2e0'         .long   nqgicheck_hardware
    2444 0000c940 0000e5a0'         .long   nqgiboard_ok
    2445 0000c960 0000e710'         .long   nqgibad_u2_checksum
    2446 0000c980 0000e840'         .long   nqgibad_u3_checksum
    2447 0000c9a0 0000e970'         .long   nqgibad_u4_checksum
    2448 0000c9c0 0000eaa0'         .long   nqgibad_u5_checksum
    2449 0000c9e0 0000ebd0'         .long   nqgibad_u6_checksum
    2450 0000ca00 0000ed00'         .long   nqgibad_u7_checksum
    2451 0000ca20 0000ee30'         .long   nqgibad_u8_checksum
    2452 0000ca40 0000ef60'         .long   nqgibad_u9_checksum
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   57

    2453 0000ca60 0000f090'         .long   nqgibad_ram
    2454                    
    2455                    
    2456                    
    2457 0000ca80            SUBR   poll_sdav
    2458 0000ca80                   PUSHP   a8
    2459 0000ca90     4c08          move    a0,a8
    2460                    
    2461                    
    2462                    
    2463 0000caa0           psdav_0
    2464 0000caa0     07a1          move    @_soundirq_addr,a1,L
         0000cab0 00000000! 
    2465 0000cad0     8421          move    *a1,a1,W
    2466                    
    2467 0000cae0     1ea1          btst    B_SDAV,a1
    2468 0000caf0     ca06          jrz     psdav_found
    2469 0000cb00                   SLEEPK  1
    2470 0000cb40     3d68          dsj     a8,psdav_0
    2471 0000cb50     c001          jruc    psdav_timeout
    2472                    
    2473 0000cb60           psdav_found
    2474 0000cb60     0300          nop
    2475                    
    2476 0000cb70           psdav_timeout
    2477 0000cb70     4d00          move    a8,a0
    2478 0000cb80                   PULLP   a8
    2479 0000cb90                   RETP
    2480                    
    2481                    
    2482 0000cbc0           blnk_sure_box
    2483 0000cbc0     09e3          MOVI    [41H,29H],A3
         0000cbd0 00410029  
    2484 0000cbf0     09e4          MOVI    [0F2H,166H]-[41H,29H],A4
         0000cc00 00b1013d  
    2485 0000cc20     c080          JAUC    BLNKAREA                ;ITS BLANK!
         0000cc30 00000000! 
    2486                    
    2487 0000cc50           M_DIGT
    2488 0000cc50       47          .STRING "GENERAL SOUND TEST",0,0
    2489 0000ccf0                   .EVEN
    2490                    
    2491 0000ccf0           SIRQ_DETECT
    2492 0000ccf0                    MESS_MAC  RD7FONT,SPACING07,200,170,ROBO_GREEN,STRCNRM,0
    2493 0000cd90       53          .STRING "SOUND IRQ DETECT FUNCTIONAL.",0,0
    2494 0000ce80                   .EVEN
    2495                    
    2496 0000ce80           SIRQ_ERR
    2497 0000ce80                   MESS_MAC RD15FONT,SPACING07,200,95,COLOR_LF,STRCNRM,0
    2498 0000cf20       2a          .STRING "** WARNING! **",0,1
    2499 0000cfa0                   .EVEN
    2500 0000cfa0                   MESS_MAC RD7FONT,SPACING07,200,120,COLOR_YELLOW,STRCNRM,0
    2501 0000d040       55          .STRING "UNABLE TO DETECT SOUND BOARD IRQ.",0,1
    2502 0000d160                   .EVEN
    2503 0000d160                   MESS_MAC RD7FONT,SPACING07,200,135,COLOR_YELLOW,STRCNRM,0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   58

    2504 0000d200       54          .STRING "THIS MAY RESULT IN ERRANT SOUNDS.",0,0
    2505 0000d320                   .EVEN
    2506                    
    2507 0000d320           SIRQ_ERR2
    2508 0000d320                    MESS_MAC  RD7FONT,SPACING07,200,170,ROBO_RED,STRCNRM,0
    2509 0000d3c0       45          .STRING "ERROR - SOUND IRQ NOT DETECTED.",0,0
    2510 0000d4d0                   .EVEN
    2511                    
    2512              007d  DAC_LX  EQU     125
    2513              00b1  DAC_LX2 EQU     DAC_LX+52
    2514 0000d4d0           DAC_ERR
    2515 0000d4d0                   MESS_MAC RD7FONT,SPACING07,200,68,COLOR_LF,STRCNRM,0
    2516 0000d570       4c          .STRING "LISTEN FOR TONES:",0,1
    2517 0000d610                   .EVEN
    2518 0000d610                   MESS_MAC RD7FONT,SPACING07,200,81,COLOR_YELLOW,STRCNRM,0
    2519 0000d6b0       30          .STRING "0 TONES - CHECK HARDWARE",0,1
    2520 0000d780                   .EVEN
    2521 0000d780                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2522 0000d820       31          .STRING "1 TONE - SOUND BOARD OK",0,1
    2523 0000d8f0                   .EVEN
    2524 0000d8f0                   MESS_MAC RD7FONT,SPACING07,200,101,COLOR_YELLOW,STRCNRM,0
    2525 0000d990       32          .STRING "2 TONES - BAD U2 CHECKSUM",0,1
    2526 0000da70                   .EVEN
    2527 0000da70                   MESS_MAC RD7FONT,SPACING07,200,111,COLOR_YELLOW,STRCNRM,0
    2528 0000db10       33          .STRING "3 TONES - BAD U3 CHECKSUM",0,1
    2529 0000dbf0                   .EVEN
    2530 0000dbf0                   MESS_MAC RD7FONT,SPACING07,200,121,COLOR_YELLOW,STRCNRM,0
    2531 0000dc90       34          .STRING "4 TONES - BAD U4 CHECKSUM",0,1
    2532 0000dd70                   .EVEN
    2533 0000dd70                   MESS_MAC RD7FONT,SPACING07,200,131,COLOR_YELLOW,STRCNRM,0
    2534 0000de10       35          .STRING "5 TONES - BAD U5 CHECKSUM",0,1
    2535 0000def0                   .EVEN
    2536 0000def0                   MESS_MAC RD7FONT,SPACING07,200,141,COLOR_YELLOW,STRCNRM,0
    2537 0000df90       36          .STRING "6 TONES - BAD U6 CHECKSUM",0,1
    2538 0000e070                   .EVEN
    2539 0000e070                   MESS_MAC RD7FONT,SPACING07,200,151,COLOR_YELLOW,STRCNRM,0
    2540 0000e110       31          .STRING "10 TONES - RAM TEST FAILED",0,0
    2541 0000e1f0                   .EVEN
    2542                    
    2543 0000e1f0           nqgisnd_testing_mess
    2544 0000e1f0                   MESS_MAC RD7FONT,SPACING07,200,81,COLOR_YELLOW,STRCNRM,0
    2545 0000e290       54          .STRING "TESTING",0,0
    2546 0000e2e0                   .EVEN
    2547                    
    2548 0000e2e0           nqgicheck_hardware
    2549 0000e2e0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2550 0000e380       4e          .STRING "NO RESPONSE FROM SOUND SYSTEM",0,1
    2551 0000e480                   .EVEN
    2552 0000e480                   MESS_MAC RD7FONT,SPACING07,200,101,COLOR_YELLOW,STRCNRM,0
    2553 0000e520       43          .STRING "CHECK HARDWARE",0,0
    2554 0000e5a0                   .EVEN
    2555                    
    2556 0000e5a0           nqgiboard_ok
    2557 0000e5a0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2558 0000e640       31          .STRING "1 TONE - SOUND BOARD OK",0,0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   59

    2559 0000e710                   .EVEN
    2560                    
    2561 0000e710           nqgibad_u2_checksum
    2562 0000e710                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2563 0000e7b0       42          .STRING "BAD U2 CHECKSUM",0,0
    2564 0000e840                   .EVEN
    2565                    
    2566 0000e840           nqgibad_u3_checksum
    2567 0000e840                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2568 0000e8e0       42          .STRING "BAD U3 CHECKSUM",0,0
    2569 0000e970                   .EVEN
    2570                    
    2571 0000e970           nqgibad_u4_checksum
    2572 0000e970                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2573 0000ea10       42          .STRING "BAD U4 CHECKSUM",0,0
    2574 0000eaa0                   .EVEN
    2575                    
    2576 0000eaa0           nqgibad_u5_checksum
    2577 0000eaa0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2578 0000eb40       42          .STRING "BAD U5 CHECKSUM",0,0
    2579 0000ebd0                   .EVEN
    2580                    
    2581 0000ebd0           nqgibad_u6_checksum
    2582 0000ebd0                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2583 0000ec70       42          .STRING "BAD U6 CHECKSUM",0,0
    2584 0000ed00                   .EVEN
    2585                    
    2586 0000ed00           nqgibad_u7_checksum
    2587 0000ed00                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2588 0000eda0       42          .STRING "BAD U7 CHECKSUM",0,0
    2589 0000ee30                   .EVEN
    2590                    
    2591 0000ee30           nqgibad_u8_checksum
    2592 0000ee30                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2593 0000eed0       42          .STRING "BAD U8 CHECKSUM",0,0
    2594 0000ef60                   .EVEN
    2595                    
    2596 0000ef60           nqgibad_u9_checksum
    2597 0000ef60                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2598 0000f000       42          .STRING "BAD U9 CHECKSUM",0,1
    2599 0000f090                   .EVEN
    2600                    
    2601 0000f090           nqgibad_ram
    2602 0000f090                   MESS_MAC RD7FONT,SPACING07,200,91,COLOR_YELLOW,STRCNRM,0
    2603 0000f130       52          .STRING "RAM TEST FAILED",0,1
    2604 0000f1c0                   .EVEN
    2605                    
    2606 0000f1c0           DO_PLAYSOUNDS
    2607                    
    2608 0000f1c0     09e8          MOVI    SND_INST,A8
         0000f1d0 000087e0" 
    2609 0000f1f0                   JSRP    L_MESS                          ;PUT INSTRUCTION OUT.
    2610                    
    2611 0000f260                   JSRP    QSNDRST
    2612                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   60

    2613 0000f2d0     09e4          movi    [177,200-105],a4        ;upper left
         0000f2e0 00b1005f  
    2614 0000f300     09e5          movi    [238+16,200+104-1],a5   ;bottom right
         0000f310 00fe012f  
    2615 0000f330     09c9          MOVI    COLOR_WHITE,a9
         0000f340     0202  
    2616 0000f350     0d5f          CALLA   STD_BORD
         0000f360 00000000! 
    2617                    
    2618 0000f380     574a          CLR     A10
    2619 0000f390     09c0          movi    COLOR_LF,a0
         0000f3a0     3e3e  
    2620 0000f3b0     4d41          move    a10,a1
    2621 0000f3c0     0d3f          callr   plot_sound
         0000f3d0     0061  
    2622 0000f3e0     4d43          move    a10,a3
    2623 0000f3f0     0d3f          CALLR   MAKE_SOUND
         0000f400     0077  
    2624 0000f410           nqgiloop
    2625 0000f410                   SLEEPK  1
    2626                    
    2627 0000f450     0d5f          calla   fudge_switches2
         0000f460 00000000! 
    2628 0000f480     07a0          move    @fswitches_down,a0,L
         0000f490 00000000! 
    2629 0000f4b0     0b80          andi    START_BITS,a0
         0000f4c0 f9dbffff  
    2630 0000f4e0     cb46          jrnz    nqgiexit
    2631                    
    2632 0000f4f0     07a0          move    @fswitches_down,a0,L
         0000f500 00000000! 
    2633 0000f520     0b80          andi    ACTION_BITS,a0
         0000f530 ffff8f8f  
    2634 0000f550     ca04          jrz     nqgino_play_sound
    2635 0000f560     4d43          move    a10,a3
    2636 0000f570     0d3f          CALLR   MAKE_SOUND
         0000f580     005f  
    2637 0000f590     c0e7          jruc    nqgiloop
    2638 0000f5a0           nqgino_play_sound
    2639                    
    2640 0000f5a0     4d42          move    a10,a2
    2641 0000f5b0     07a0          move    @fswitches_cur,a0,L
         0000f5c0 00000000! 
    2642 0000f5e0     0b80          andi    UP_BITS,a0
         0000f5f0 fffffefe  
    2643 0000f610     ca01          jrz     nqgino_down
    2644 0000f620     1022          inc     a2
    2645 0000f630           nqgino_down
    2646 0000f630     07a0          move    @fswitches_cur,a0,L
         0000f640 00000000! 
    2647 0000f660     0b80          andi    DOWN_BITS,a0
         0000f670 fffffdfd  
    2648 0000f690     ca01          jrz     nqgino_up
    2649 0000f6a0     1422          dec     a2
    2650 0000f6b0           nqgino_up
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   61

    2651 0000f6b0     484a          cmp     a2,a10
    2652 0000f6c0     cad4          jreq    nqgiloop                ;no change
    2653                    
    2654 0000f6d0                   push    a2
    2655 0000f6e0     09c0          movi    ROBO_BLACK,a0
         0000f6f0     1414  
    2656 0000f700     4d41          move    a10,a1
    2657 0000f710     0d3f          callr   plot_sound
         0000f720     002c  
    2658 0000f730                   pull    a10
    2659 0000f740     0b8a          andi    7,a10
         0000f750 fffffff8  
    2660 0000f770                   SLEEPK  6
    2661 0000f7b0     09c0          movi    COLOR_LF,a0
         0000f7c0     3e3e  
    2662 0000f7d0     4d41          move    a10,a1
    2663 0000f7e0     0d3f          callr   plot_sound
         0000f7f0     001f  
    2664 0000f800     4d43          move    a10,a3
    2665 0000f810     0d3f          CALLR   MAKE_SOUND
         0000f820     0035  
    2666                    
    2667 0000f830     09cb          movi    30,a11
         0000f840     001e  
    2668 0000f850           nqgiwait_release
    2669                    
    2670 0000f850     0d5f          calla   fudge_switches2
         0000f860 00000000! 
    2671 0000f880     07a0          move    @fswitches_cur,a0,L
         0000f890 00000000! 
    2672 0000f8b0     0b80          andi    UP_BITS|DOWN_BITS,a0
         0000f8c0 fffffcfc  
    2673 0000f8e0     cab2          jrz     nqgiloop
    2674 0000f8f0                   SLEEPK  1
    2675 0000f930     3deb          dsj     a11,nqgiwait_release
    2676 0000f940     c0ac          jruc    nqgiloop
    2677                    
    2678 0000f950           nqgiexit
    2679 0000f950                   JSRP    QSNDRST
    2680 0000f9c0                   RETP
    2681                    
    2682 0000f9f0           plot_sound
    2683 0000f9f0                   PUSH    a10
    2684 0000fa00     24a1          sll     5,a1                    ;x 32 bits
    2685 0000fa10     0b21          addi    sounds_tab,a1           ;base addr
         0000fa20 00008d20" 
    2686 0000fa40     8621          move    *a1,a1,L
    2687 0000fa50                   PUSH    a0,a1
    2688 0000fa70     09e8          movi    SND_SETUP,a8
         0000fa80 00008c80" 
    2689 0000faa0     0d5f          calla   LM_SETUP                ;GET CONFIRMATION DATA READY.
         0000fab0 00000000! 
    2690 0000fad0                   PULL    a6,a8                   ;colour,string
    2691 0000faf0                   JSRP    LM_FINIS                ;plot strings
    2692 0000fb60                   PULL    a10
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   62

    2693 0000fb70     0960          rets
    2694 0000fb80           MAKE_SOUND
    2695 0000fb80     2483          SLL     4,A3
    2696 0000fb90     0b23          ADDI    TEST_SOUND_TAB,A3
         0000fba0 000090a0" 
    2697 0000fbc0     8463          MOVE    *A3,A3,W
    2698 0000fbd0     c080          JAUC    SNDSND
         0000fbe0 00000000! 
    2699                    
    2700 0000fc00           GO_PATTERNS
    2701 0000fc00     09e8          MOVI    MEN_PATTERNS,A8      ;PUT UP THE MENU AND GO!
         0000fc10 00006f50" 
    2702 0000fc30     c080          JAUC    GEN_MENU             ;THIS WILL RETURN TO LEVEL ABOVE US!
         0000fc40 00000000! 
    2703                    
    2704                    
    2705 0000fc60                   STRUCT  0
    2706 0000fc60                   APTR    AUD_MESS        ;*Text
    2707 0000fc60                   APTR    AUD_ROUTINE     ;*Code to call or 0
    2708 0000fc60                   WORD    AUD_NUMBER      ;Audit number to show or 0
    2709 0000fc60                   WORD    AUD_COLOR       ;Color for this line
    2710 0000fc60                   LABEL   AUD_T_SIZE      ;Size of structure
    2711                    
    2712                    AMAC    .macro  mess,rout,audit,color
    2713                            .long   :mess:,:rout:
    2714                            .word   :audit:,:color:
    2715                            .endm
    2716                    
    2717                    TXTLINE .macro  s
    2718                            .byte   ":s:",0
    2719                            .even
    2720                            .endm
    2721                    
    2722                    
    2723              0005  AUD_LM          EQU     TIT_ULX         ;SQUARE OFF AUDITS W/ HEADER.
    2724              0185  AUD_RM          EQU     TIT_LRX
    2725              0036  AUD_Y_STRT      EQU     54
    2726              000e  AUD_DY          EQU     14
    2727                    
    2728              009c  CP2_Y           EQU     156             ;PART 2 OF COIN AUDIT PAGE.
    2729                    
    2730                    
    2731 0000fc60           COIN_OCTO_AUDS
    2732 0000fc60     0068          .word   AUD_Y_STRT+50,12+8              ;Y start, Y spacing
    2733 0000fc80     0023          .word   AUD_LM+30,AUD_RM-30             ;LFT/RGT margin X
    2734 0000fca0                   AMAC    M_LCOIN2,0,AUDLCOIN,ROBO_YELLOW
    2735 0000fd00                   AMAC    M_RCOIN2,0,AUDRCOIN,ROBO_YELLOW
    2736 0000fd60                   AMAC    M_CCOIN2,0,AUDCCOIN,ROBO_YELLOW
    2737                    
    2738 0000fdc0 00000000          .long   0
    2739                    
    2740                    
    2741                    
    2742                    
    2743 0000fde0           COIN_AUDS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   63

    2744 0000fde0     0036          .word   AUD_Y_STRT,12+5                 ;Y start, Y spacing
    2745 0000fe00     0005          .word   AUD_LM,AUD_RM                   ;LFT/RGT margin X
    2746 0000fe20                   AMAC    M_LCOIN,0,AUDLCOIN,ROBO_YELLOW
    2747 0000fe80                   AMAC    M_RCOIN,0,AUDRCOIN,ROBO_YELLOW
    2748 0000fee0                   AMAC    M_CCOIN,0,AUDCCOIN,ROBO_YELLOW
    2749 0000ff40                   AMAC    M_XCOIN,0,AUDXCOIN,ROBO_YELLOW
    2750 0000ffa0                   AMAC    M_DBV,0,AUD_DBV,ROBO_YELLOW
    2751 00010000                   AMAC    M_START,STARTS,0,ROBO_GREEN
    2752 00010060 00000000          .long   0
    2753                    
    2754 00010080           COIN1_AUDS
    2755 00010080     0099          .word   AUD_Y_STRT+14*6+2+13,AUD_DY
    2756 000100a0     0005          .word   AUD_LM,AUD_RM
    2757 000100c0                   AMAC    M_PAIDC,0,AUDPAIDC,ROBO_WHITE
    2758 00010120 00000000          .long   0
    2759                    
    2760 00010140           COIN2_AUDS
    2761 00010140     00bc          .word   CP2_Y+AUD_DY+5+13,AUD_DY                ;Y start, Y spacing
    2762 00010160     0005          .word   AUD_LM,AUD_RM                   ;LFT/RGT margin X
    2763 00010180                   AMAC    M_SERV,0,AUDSERV,01212H
    2764 000101e0                   AMAC    M_PLAYS,DOPLAYS,0,ROBO_YELLOW
    2765 00010240 00000000          .long   0
    2766                    
    2767 00010260           amst_s  TXTLINE "ATTRACT MODE STARTS"
    2768 00010300           M_START TXTLINE "MID GAME STARTS"
    2769 00010380           M_CONTO TXTLINE "CONTINUES OFFERED"
    2770 00010410           M_CONT  TXTLINE "CONTINUES TAKEN"
    2771 00010490           M_EXTRA TXTLINE "EXTRA MEN COLLECTED/EARNED"
    2772 00010570           M_P1MIN TXTLINE "HOURS OF SINGLE PLAY"
    2773 00010620           M_P2MIN TXTLINE "HOURS OF DUAL PLAY"
    2774 000106c0           M_HOURS TXTLINE "TOTAL HOURS OF PLAY"
    2775 00010760       41  M_AVGT  .byte   "AVG. ",ASCII_DQ,"PLAYER",ASCII_DQ," GAME TIME (MIN.)",0
    2776 00010860                   .even
    2777                    
    2778                    
    2779                    
    2780                    
    2781                    
    2782                            .asg    50,LM
    2783                            .asg    400-50,RM
    2784                    
    2785 00010860           GAME_AUDS1
    2786 00010860     002d          .word   55-10,11,LM,RM ;Y start, Y spacing, L margin, R margin
    2787 000108a0                   AMAC    str_totuptime,  prn_uptime,0,   ROBO_WHITE
    2788 00010900                   AMAC    str_totpltime,  prn_pltime,0,   ROBO_WHITE
    2789 00010960                   AMAC    str_1pplay,     prn_1plpct,0,   ROBO_BLUE
    2790 000109c0                   AMAC    str_2pplay,     prn_2plpct,0,   ROBO_BLUE
    2791 00010a20                   AMAC    str_totstarts,  0,AUD_TOTSTARTS,ROBO_YELLOW
    2792 00010a80                   AMAC    str_amodstarts, 0,AUD_PRESTARTS,ROBO_YELLOW
    2793 00010ae0                   AMAC    str_contoff,    0,AUD_CONTOFF,  ROBO_CYAN
    2794 00010b40                   AMAC    str_conttaken,  0,AUD_CONTTAKN, ROBO_CYAN
    2795 00010ba0                   AMAC    str_vscpus,     0,AUD_VSCPUS,   ROBO_PURPLE
    2796 00010c00                   AMAC    str_vscpuf,     0,AUD_VSCPUF,   ROBO_PURPLE
    2797 00010c60                   AMAC    str_cpuwin,     prn_cpuwins,0,  ROBO_GREEN
    2798 00010cc0                   AMAC    str_credlen,    prn_credlen,0,ROBO_GREEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   64

    2799 00010d20                   AMAC    str_inter,      0,AUD_INTERCON, ROBO_YELLOW
    2800 00010d80                   AMAC    str_wwf,        0,AUD_WWF,      ROBO_YELLOW
    2801 00010de0 00000000          .long   0
    2802                    
    2803 00010e00           GAME_AUDS2
    2804 00010e00     002d          .word   55-10,11,LM,RM ;Y start, Y spacing, L margin, R margin
    2805 00010e40                   AMAC    str_gametime,   prn_avgtime,0,  ROBO_BLUE
    2806 00010ea0                   AMAC    str_vshumtime,  prn_hvhtime,0,  ROBO_WHITE
    2807 00010f00                   AMAC    str_cpuwintime, prn_cwintime,0, ROBO_WHITE
    2808 00010f60                   AMAC    str_cpulosstime,prn_closstime,0,ROBO_WHITE
    2809 00010fc0                   AMAC    str_fasthvh,    prn_fasthvh,0,  ROBO_GREEN
    2810 00011020                   AMAC    str_fastcpuwin, prn_fastcwin,0, ROBO_GREEN
    2811 00011080                   AMAC    str_combo_per,  prn_combogames,0,       ROBO_GREEN
    2812 000110e0                   AMAC    str_fasthumwin, prn_fasthwin,0, ROBO_GREEN
    2813                    
    2814 00011140                   AMAC    str_lockups,    0,AUD_LOCKUP,   ROBO_CYAN
    2815 000111a0                   AMAC    str_lockups2,   0,AUD_LOCKUP2,  ROBO_CYAN
    2816 00011200                   AMAC    str_snderr1,    0,AUD_SNDERR1,  ROBO_PINK
    2817 00011260                   AMAC    str_snderr2,    0,AUD_SNDERR2,  ROBO_PINK
    2818 000112c0                   AMAC    str_snderr3,    0,AUD_SNDERR3,  ROBO_PINK
    2819 00011320                   AMAC    str_snderr4,    0,AUD_SNDERR4,  ROBO_PINK
    2820 00011380 00000000          .long   0
    2821                    
    2822 000113a0           GAME_AUDS2a
    2823 000113a0     002d          .word   55-10,11,LM,RM ;Y start, Y spacing, L margin, R margin
    2824 000113e0                   AMAC    str_hdtohd,     0,AUD_HEADTOHEAD,ROBO_WHITE
    2825 00011440                   AMAC    str_rumble,     0,AUD_ROYALRUM, ROBO_WHITE
    2826 000114a0                   AMAC    str_rumwins,    0,AUD_RRWINS,   ROBO_GREEN
    2827 00011500                   AMAC    str_p1icons,    0,AUD_P1ICONMAX,ROBO_CYAN
    2828 00011560                   AMAC    str_p2icons,    0,AUD_P2ICONMAX,ROBO_CYAN
    2829 000115c0 00000000          .long   0
    2830                    
    2831 000115e0           GAME_AUDS3a
    2832 000115e0     0043          .word   55-10+22,11,LM,RM-140 ;Y start, Y spacing, L margin, R margin
    2833 00011620                   AMAC    str_bhart,      0,AUD_BHART,    ROBO_GREEN
    2834 00011680                   AMAC    str_rramo,      0,AUD_RRAMO,    ROBO_WHITE
    2835 000116e0                   AMAC    str_under,      0,AUD_UNDER,    ROBO_BLUE
    2836 00011740                   AMAC    str_yoko,       0,AUD_YOKO,     ROBO_YELLOW
    2837 000117a0                   AMAC    str_smich,      0,AUD_SMICH,    ROBO_CYAN
    2838 00011800                   AMAC    str_bbbig,      0,AUD_BBBIG,    ROBO_PURPLE
    2839 00011860                   AMAC    str_dclow,      0,AUD_DCLOW,    ROBO_GREEN
    2840 000118c0                   AMAC    str_lluge,      0,AUD_LLUGE,    ROBO_YELLOW
    2841 00011920 00000000          .long   0
    2842                    
    2843 00011940           GAME_AUDS3b
    2844 00011940     0043          .word   55-10+22,11,LM,RM-105-12 ;Y start, Y spacing, L margin, R margin
    2845 00011980                   AMAC    str_space,      bhart_hwinpct,0,ROBO_GREEN
    2846 000119e0                   AMAC    str_space,      rramo_hwinpct,0,ROBO_WHITE
    2847 00011a40                   AMAC    str_space,      under_hwinpct,0,ROBO_BLUE
    2848 00011aa0                   AMAC    str_space,      yoko_hwinpct,0,ROBO_YELLOW
    2849 00011b00                   AMAC    str_space,      smich_hwinpct,0,ROBO_CYAN
    2850 00011b60                   AMAC    str_space,      bbbig_hwinpct,0,ROBO_PURPLE
    2851 00011bc0                   AMAC    str_space,      dclow_hwinpct,0,ROBO_GREEN
    2852 00011c20                   AMAC    str_space,      lluge_hwinpct,0,ROBO_YELLOW
    2853 00011c80 00000000          .long   0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   65

    2854                    
    2855 00011ca0           GAME_AUDS3c
    2856 00011ca0     0043          .word   55-10+22,11,LM,RM-35 ;Y start, Y spacing, L margin, R margin
    2857 00011ce0                   AMAC    str_space,      0,AUD_BHARTC,   ROBO_GREEN
    2858 00011d40                   AMAC    str_space,      0,AUD_RRAMOC,   ROBO_WHITE
    2859 00011da0                   AMAC    str_space,      0,AUD_UNDERC,   ROBO_BLUE
    2860 00011e00                   AMAC    str_space,      0,AUD_YOKOC,    ROBO_YELLOW
    2861 00011e60                   AMAC    str_space,      0,AUD_SMICHC,   ROBO_CYAN
    2862 00011ec0                   AMAC    str_space,      0,AUD_BBBIGC,   ROBO_PURPLE
    2863 00011f20                   AMAC    str_space,      0,AUD_DCLOWC,   ROBO_GREEN
    2864 00011f80                   AMAC    str_space,      0,AUD_LLUGEC,   ROBO_YELLOW
    2865 00011fe0 00000000          .long   0
    2866                    
    2867 00012000           GAME_AUDS3d
    2868 00012000     0043          .word   55-10+22,11,LM,RM-12 ;Y start, Y spacing, L margin, R margin
    2869 00012040                   AMAC    str_space,      bhart_cwinpct,0,ROBO_GREEN
    2870 000120a0                   AMAC    str_space,      rramo_cwinpct,0,ROBO_WHITE
    2871 00012100                   AMAC    str_space,      under_cwinpct,0,ROBO_BLUE
    2872 00012160                   AMAC    str_space,      yoko_cwinpct,0,ROBO_YELLOW
    2873 000121c0                   AMAC    str_space,      smich_cwinpct,0,ROBO_CYAN
    2874 00012220                   AMAC    str_space,      bbbig_cwinpct,0,ROBO_PURPLE
    2875 00012280                   AMAC    str_space,      dclow_cwinpct,0,ROBO_GREEN
    2876 000122e0                   AMAC    str_space,      lluge_cwinpct,0,ROBO_YELLOW
    2877 00012340 00000000          .long   0
    2878                    
    2879 00012360           GAUD_P3HEAD1
    2880 00012360                    MESS_MAC  RD7FONT,SPACING07,RM-135,45,ROBO_BLUE,STRCNRM,0
    2881 00012400       50          .STRING "PLAYER",0,0
    2882 00012440                   .EVEN
    2883                    
    2884 00012440           GAUD_P3HEAD2
    2885 00012440                    MESS_MAC  RD7FONT,SPACING07,RM-30,45,ROBO_BLUE,STRCNRM,0
    2886 000124e0       43          .STRING "CPU",0,0
    2887 00012510                   .EVEN
    2888                    
    2889 00012510           GAUD_P3HEAD3
    2890 00012510                    MESS_MAC  RD7FONT,SPACING07,RM-140,56,ROBO_RED,STRRNRM,0
    2891 000125b0       55          .STRING "USES",0,0
    2892 000125e0                   .EVEN
    2893                    
    2894 000125e0           GAUD_P3HEAD4
    2895 000125e0                    MESS_MAC  RD7FONT,SPACING07,RM-105,56,ROBO_RED,STRRNRM,0
    2896 00012680       57          .STRING "WINS",0,0
    2897 000126b0                   .EVEN
    2898                    
    2899 000126b0           GAUD_P3HEAD5
    2900 000126b0                    MESS_MAC  RD7FONT,SPACING07,RM-35,56,ROBO_RED,STRRNRM,0
    2901 00012750       55          .STRING "USES",0,0
    2902 00012780                   .EVEN
    2903                    
    2904 00012780           GAUD_P3HEAD6
    2905 00012780                    MESS_MAC  RD7FONT,SPACING07,RM,56,ROBO_RED,STRRNRM,0
    2906 00012820       57          .STRING "WINS",0,0
    2907 00012850                   .EVEN
    2908                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   66

    2909 00012850           str_totuptime   TXTLINE "TOTAL GAME UPTIME (HRS:MINS)"
    2910 00012940           str_totpltime   TXTLINE "TOTAL GAME PLAY TIME (HRS:MINS)"
    2911 00012a40           str_1pplay      TXTLINE "ONE-PLAYER PLAY"
    2912 00012ac0           str_2pplay      TXTLINE "TWO-PLAYER PLAY"
    2913 00012b40           str_totstarts   TXTLINE "TOTAL STARTS"
    2914 00012bb0           str_amodstarts  TXTLINE "ATTRACT MODE STARTS"
    2915 00012c50           str_contoff     TXTLINE "CONTINUES OFFERED"
    2916 00012ce0           str_conttaken   TXTLINE "CONTINUES TAKEN"
    2917 00012d60           str_vscpus      TXTLINE "1P GAMES BEGUN"
    2918 00012de0           str_vscpuf      TXTLINE "1P GAMES FINISHED"
    2919 00012e70           str_cpuwin      TXTLINE "CPU VICTORIES"
    2920 00012ee0           str_inter       TXTLINE "INTER BELT CHOSEN"
    2921 00012f70           str_wwf         TXTLINE "WWF BELT CHOSEN"
    2922 00012ff0           str_hdtohd      TXTLINE "HEAD TO HEAD GAMES"
    2923 00013090           str_rumble      TXTLINE "ROYAL RUMBLE GAMES"
    2924 00013130           str_rumwins     TXTLINE "ROYAL RUMBLE WINS"
    2925 000131c0           str_p1icons     TXTLINE "PLAYER 1 MAX ICONS"
    2926 00013260           str_p2icons     TXTLINE "PLAYER 2 MAX ICONS"
    2927                    
    2928 00013300           str_gametime    TXTLINE "AVG MATCH TIME (MIN:SEC)"
    2929 000133d0           str_vshumtime   TXTLINE "AVG HUMAN VS HUMAN TIME"
    2930 00013490           str_cpuwintime  TXTLINE "AVG CPU WIN TIME"
    2931 00013520           str_cpulosstime TXTLINE "AVG CPU LOSS TIME"
    2932 000135b0           str_fasthvh     TXTLINE "FASTEST 2-PLAYER WIN"
    2933 00013660           str_credlen     TXTLINE "AVG 1 PLAYER TIME PER CREDIT"
    2934 00013750           str_fastcpuwin  TXTLINE "FASTEST CPU WIN"
    2935 000137d0           str_fasthumwin  TXTLINE "FASTEST CPU LOSS"
    2936 00013860           str_combo_per   TXTLINE "HUMAN COMBO GAMES"
    2937 000138f0           str_lockups     TXTLINE "DOGS"
    2938 00013920           str_lockups2    TXTLINE "PROCESS KO"
    2939 00013980           str_snderr1     TXTLINE "SND ERR nqgi1 (IRQ)"
    2940 00013a20           str_snderr2     TXTLINE "SND ERR nqgi2 (ROM CHECKSUM)"
    2941 00013b10           str_snderr3     TXTLINE "SND ERR nqgi3 (RAM TEST)"
    2942 00013be0           str_snderr4     TXTLINE "SND ERR nqgi4 (SDAV)"
    2943                    
    2944 00013c90           str_bhart       TXTLINE "BRET HART"
    2945 00013ce0           str_rramo       TXTLINE "RAZOR RAMON"
    2946 00013d40           str_under       TXTLINE "UNDERTAKER"
    2947 00013da0           str_yoko        TXTLINE "YOKOZUNA"
    2948 00013df0           str_smich       TXTLINE "SHAWN MICHAELS"
    2949 00013e70           str_bbbig       TXTLINE "BAM BAM BIGELOW"
    2950 00013ef0           str_dclow       TXTLINE "DOINK THE CLOWN"
    2951 00013f70           str_lluge       TXTLINE "LEX LUGER"
    2952                    
    2953 00013fc0           str_pct         TXTLINE "%"
    2954                    
    2955 00013fd0           str_space       TXTLINE " "
    2956 00013fe0                   .even
    2957                    
    2958                     .if 0
    2959                    ROBO_GREY       EQU     0101H   ;[0E0H-223,0E0H-223]
    2960                    ROBO_WHITE      EQU     0202H   ;[0E1H-223,0E1H-223]
    2961                    ROBO_RED        EQU     0303H   ;[0E2H-223,0E2H-223]
    2962                    ROBO_ORANGE     EQU     0404H   ;[0E3H-223,0E3H-223]
    2963                    ROBO_YELLOW     EQU     0505H   ;[0E4H-223,0E4H-223]
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   67

    2964                    ROBO_GREEN      EQU     0606H   ;[0E5H-223,0E5H-223]
    2965                    ROBO_BLUE       EQU     0707H   ;[0E6H-223,0E6H-223]
    2966                    ROBO_LF         EQU     03E3EH 
    2967                    ROBO_CYAN       EQU     0E0EH   ;[0EDH-223,0EDH-223]
    2968                    ROBO_DECAY      EQU     03F3FH
    2969                    ROBO_RGOLD      EQU     0A0AH   ;[0E9H-223,0E9H-223]
    2970                    ROBO_LASER      EQU     03E3EH
    2971                    ROBO_LASER2     EQU     03F3FH
    2972                    ROBO_BLUWH      EQU     0C0CH   ;[0EBH-223,0EBH-223]
    2973                    ROBO_PINK       EQU     0303H   ;[0E2H-223,0E2H-223]
    2974                    ROBO_SKY        EQU     0D0DH   ;[0ECH-223,0ECH-223]  ;LAST COLOR IN ROBO IS "SKY" COLOR
    2975                    ROBO_PURPLE     EQU     ROBO_SKY     ;PURPLE FOR TEST MODE
    2976                    ROBO_BLACK      EQU     1414H   ;BLACK AS COAL
    2977                     .endif
    2978                    
    2979                    
    2980 00013fe0           prn_uptime
    2981 00013fe0     09c0          movi    AUD_UPTIME,a0
         00013ff0     001d  
    2982 00014000     0d5f          calla   GET_AUD
         00014010 00000000! 
    2983                                                            ;* 5 sec incs / 60 (sec p/min) = /12
    2984 00014030     1980          movk    12,a0
    2985 00014040     5a01          divu    a0,a1                   ;mins
    2986 00014050     c000          jruc    P_TIME
         00014060     04fb  
    2987                    
    2988                    
    2989 00014070           prn_pltime
    2990 00014070     09c0          movi    AUD_PLTIME,a0
         00014080     001e  
    2991 00014090     0d5f          calla   GET_AUD
         000140a0 00000000! 
    2992                                                            ;* 5 sec incs / 60 (sec p/min) = /12
    2993 000140c0     1980          movk    12,a0
    2994 000140d0     5a01          divu    a0,a1                   ;mins
    2995 000140e0     c000          jruc    P_TIME
         000140f0     04f2  
    2996                    
    2997                    
    2998 00014100           prn_1plpct
    2999 00014100     09c0          movi    AUD_PLTIME,a0
         00014110     001e  
    3000 00014120     0d5f          calla   GET_AUD
         00014130 00000000! 
    3001 00014150     4c24          move    a1,a4
    3002                    
    3003 00014160     09c0          movi    AUD_1PLAYTIME,a0
         00014170     001f  
    3004 00014180     0d5f          calla   GET_AUD
         00014190 00000000! 
    3005 000141b0     09c0          movi    100,a0
         000141c0     0064  
    3006 000141d0     5e01          mpyu    a0,a1
    3007 000141e0     4c22          move    a1,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   68

    3008 000141f0     4c80          move    a4,a0
    3009 00014200     0d3f          callr   ROUNDED_A0_INTO_A2      ;DIVIDES A0 INTO A2. RESULT IN A2
         00014210     043e  
    3010 00014220     4c43          move    a2,a3
    3011 00014230     c000          jruc    PERCENT_WORK
         00014240     010c  
    3012                    
    3013                    
    3014 00014250           prn_2plpct
    3015 00014250     09c0          movi    AUD_PLTIME,a0
         00014260     001e  
    3016 00014270     0d5f          calla   GET_AUD
         00014280 00000000! 
    3017 000142a0     4c24          move    a1,a4
    3018                    
    3019 000142b0     09c0          movi    AUD_2PLAYTIME,a0
         000142c0     0020  
    3020 000142d0     0d5f          calla   GET_AUD
         000142e0 00000000! 
    3021 00014300     09c0          movi    100,a0
         00014310     0064  
    3022 00014320     5e01          mpyu    a0,a1
    3023 00014330     4c22          move    a1,a2
    3024 00014340     4c80          move    a4,a0
    3025 00014350     0d3f          callr   ROUNDED_A0_INTO_A2      ;DIVIDES A0 INTO A2. RESULT IN A2
         00014360     0429  
    3026 00014370     4c43          move    a2,a3
    3027 00014380     c000          jruc    PERCENT_WORK
         00014390     00f7  
    3028                    
    3029                    
    3030 000143a0           prn_cpuwins
    3031 000143a0     09c0          movi    AUD_VSCPUF,a0
         000143b0     0025  
    3032 000143c0     0d5f          calla   GET_AUD
         000143d0 00000000! 
    3033 000143f0     4c24          move    a1,a4
    3034                    
    3035 00014400     09c0          movi    AUD_CPUWIN,a0
         00014410     002b  
    3036 00014420     0d5f          calla   GET_AUD
         00014430 00000000! 
    3037 00014450     09c0          movi    100,a0
         00014460     0064  
    3038 00014470     5e01          mpyu    a0,a1
    3039 00014480     4c22          move    a1,a2
    3040 00014490     4c80          move    a4,a0
    3041 000144a0     0d3f          callr   ROUNDED_A0_INTO_A2      ;DIVIDES A0 INTO A2. RESULT IN A2
         000144b0     0414  
    3042 000144c0     4c43          move    a2,a3
    3043 000144d0     c000          jruc    PERCENT_WORK
         000144e0     00e2  
    3044                    
    3045                    
    3046                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   69

    3047 000144f0           prn_avgtime
    3048 000144f0     09c0          movi    AUD_2PBTIME,a0
         00014500     0021  
    3049 00014510     0d5f          calla   GET_AUD
         00014520 00000000! 
    3050 00014540     4c23          move    a1,a3
    3051 00014550     09c0          movi    AUD_CPUWINTIME,a0
         00014560     0022  
    3052 00014570     0d5f          calla   GET_AUD
         00014580 00000000! 
    3053 000145a0     4023          add     a1,a3
    3054 000145b0     09c0          movi    AUD_CPULOSETIME,a0
         000145c0     0023  
    3055 000145d0     0d5f          calla   GET_AUD
         000145e0 00000000! 
    3056 00014600     4023          add     a1,a3
    3057                    
    3058 00014610     09c0          movi    AUD_VSHUMF,a0
         00014620     0027  
    3059 00014630     0d5f          calla   GET_AUD
         00014640 00000000! 
    3060 00014660     4c22          move    a1,a2
    3061 00014670     09c0          movi    AUD_VSCPUF,a0
         00014680     0025  
    3062 00014690     0d5f          calla   GET_AUD
         000146a0 00000000! 
    3063 000146c0     4022          add     a1,a2
    3064                    
    3065 000146d0     5a43          divu    a2,a3
    3066 000146e0     4c61          move    a3,a1
    3067 000146f0     c000          jruc    P_TIME
         00014700     0491  
    3068                    
    3069                    
    3070                    
    3071 00014710           prn_hvhtime
    3072 00014710     09c0          movi    AUD_2PBTIME,a0
         00014720     0021  
    3073 00014730     0d5f          calla   GET_AUD
         00014740 00000000! 
    3074                    
    3075 00014760     4c23          move    a1,a3
    3076 00014770     09c0          movi    AUD_VSHUMF,a0
         00014780     0027  
    3077 00014790     0d5f          calla   GET_AUD
         000147a0 00000000! 
    3078                    
    3079 000147c0     5a23          divu    a1,a3
    3080 000147d0     4c61          move    a3,a1
    3081 000147e0     c000          jruc    P_TIME
         000147f0     0482  
    3082                    
    3083                    
    3084                    
    3085 00014800           prn_cwintime
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   70

    3086 00014800     09c0          movi    AUD_CPUWINTIME,a0
         00014810     0022  
    3087 00014820     0d5f          calla   GET_AUD
         00014830 00000000! 
    3088                    
    3089 00014850     4c23          move    a1,a3
    3090 00014860     09c0          movi    AUD_CPUWIN,a0
         00014870     002b  
    3091 00014880     0d5f          calla   GET_AUD
         00014890 00000000! 
    3092                    
    3093 000148b0     5a23          divu    a1,a3
    3094 000148c0     4c61          move    a3,a1
    3095 000148d0     c000          jruc    P_TIME
         000148e0     0473  
    3096                    
    3097                    
    3098                    
    3099 000148f0           prn_closstime
    3100 000148f0     09c0          movi    AUD_CPULOSETIME,a0
         00014900     0023  
    3101 00014910     0d5f          calla   GET_AUD
         00014920 00000000! 
    3102                    
    3103 00014940     4c23          move    a1,a3
    3104 00014950     09c0          movi    AUD_VSCPUF,a0
         00014960     0025  
    3105 00014970     0d5f          calla   GET_AUD
         00014980 00000000! 
    3106 000149a0     4c22          move    a1,a2
    3107 000149b0     09c0          movi    AUD_CPUWIN,a0
         000149c0     002b  
    3108 000149d0     0d5f          calla   GET_AUD
         000149e0 00000000! 
    3109 00014a00     4422          sub     a1,a2
    3110                    
    3111 00014a10     5a43          divu    a2,a3
    3112 00014a20     4c61          move    a3,a1
    3113 00014a30     c000          jruc    P_TIME
         00014a40     045d  
    3114                    
    3115                    
    3116                    
    3117 00014a50           prn_fasthvh
    3118 00014a50     09c0          movi    AUD_FASTHDH,a0
         00014a60     002a  
    3119 00014a70     0d5f          calla   GET_AUD
         00014a80 00000000! 
    3120 00014aa0     c000          jruc    P_TIME
         00014ab0     0456  
    3121                    
    3122                    
    3123                    
    3124 00014ac0           prn_credlen
    3125 00014ac0     09c0          MOVI    AUD_CREDLEN,A0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   71

         00014ad0     005d  
    3126 00014ae0     0d5f          CALLA   GET_AUD
         00014af0 00000000! 
    3127 00014b10     4c23          MOVE    A1,A3
    3128 00014b20     09c0          MOVI    AUD_CREDLENNUM,A0
         00014b30     005e  
    3129 00014b40     0d5f          CALLA   GET_AUD
         00014b50 00000000! 
    3130 00014b70     5a23          DIVU    A1,A3
    3131 00014b80     18a1          MOVK    5,A1            ;TURN INTO SECONDS
    3132 00014b90     5e23          MPYU    A1,A3           ;A3 HAS SECONDS OF INTEREST
    3133 00014ba0     4c61          MOVE    A3,A1
    3134 00014bb0     c000          jruc    P_TIME
         00014bc0     0445  
    3135                    
    3136                    
    3137                    
    3138 00014bd0           prn_fastcwin
    3139 00014bd0     09c0          movi    AUD_FASTCDH,a0
         00014be0     0028  
    3140 00014bf0     0d5f          calla   GET_AUD
         00014c00 00000000! 
    3141 00014c20     c000          jruc    P_TIME
         00014c30     043e  
    3142                    
    3143                    
    3144                    
    3145 00014c40           prn_fasthwin
    3146 00014c40     09c0          movi    AUD_FASTHDC,a0
         00014c50     0029  
    3147 00014c60     0d5f          calla   GET_AUD
         00014c70 00000000! 
    3148 00014c90     c000          jruc    P_TIME
         00014ca0     0437  
    3149                    
    3150                    
    3151                    
    3152 00014cb0           prn_combogames
    3153 00014cb0     09c2          movi    AUD_COMBO,a2
         00014cc0     005b  
    3154 00014cd0     09c0          movi    AUD_TOTALGAMES,a0
         00014ce0     005c  
    3155 00014cf0     c050          jruc    aernset
    3156                    
    3157                    
    3158 00014d00           bhart_hwinpct
    3159 00014d00     09c0          movi    AUD_BHART,a0
         00014d10     0033  
    3160 00014d20     09c2          movi    AUD_BHARTHW,a2
         00014d30     0045  
    3161 00014d40     c04b          jruc    aernset
    3162 00014d50           bhart_cwinpct
    3163 00014d50     09c0          movi    AUD_BHARTC,a0
         00014d60     003c  
    3164 00014d70     09c2          movi    AUD_BHARTCW,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   72

         00014d80     004e  
    3165 00014d90     c046          jruc    aernset
    3166 00014da0           rramo_hwinpct
    3167 00014da0     09c0          movi    AUD_RRAMO,a0
         00014db0     0034  
    3168 00014dc0     09c2          movi    AUD_RRAMOHW,a2
         00014dd0     0046  
    3169 00014de0     c041          jruc    aernset
    3170 00014df0           rramo_cwinpct
    3171 00014df0     09c0          movi    AUD_RRAMOC,a0
         00014e00     003d  
    3172 00014e10     09c2          movi    AUD_RRAMOCW,a2
         00014e20     004f  
    3173 00014e30     c03c          jruc    aernset
    3174 00014e40           under_hwinpct
    3175 00014e40     09c0          movi    AUD_UNDER,a0
         00014e50     0035  
    3176 00014e60     09c2          movi    AUD_UNDERHW,a2
         00014e70     0047  
    3177 00014e80     c037          jruc    aernset
    3178 00014e90           under_cwinpct
    3179 00014e90     09c0          movi    AUD_UNDERC,a0
         00014ea0     003e  
    3180 00014eb0     09c2          movi    AUD_UNDERCW,a2
         00014ec0     0050  
    3181 00014ed0     c032          jruc    aernset
    3182 00014ee0           yoko_hwinpct
    3183 00014ee0     09c0          movi    AUD_YOKO,a0
         00014ef0     0036  
    3184 00014f00     09c2          movi    AUD_YOKOHW,a2
         00014f10     0048  
    3185 00014f20     c02d          jruc    aernset
    3186 00014f30           yoko_cwinpct
    3187 00014f30     09c0          movi    AUD_YOKOC,a0
         00014f40     003f  
    3188 00014f50     09c2          movi    AUD_YOKOCW,a2
         00014f60     0051  
    3189 00014f70     c028          jruc    aernset
    3190 00014f80           smich_hwinpct
    3191 00014f80     09c0          movi    AUD_SMICH,a0
         00014f90     0037  
    3192 00014fa0     09c2          movi    AUD_SMICHHW,a2
         00014fb0     0049  
    3193 00014fc0     c023          jruc    aernset
    3194 00014fd0           smich_cwinpct
    3195 00014fd0     09c0          movi    AUD_SMICHC,a0
         00014fe0     0040  
    3196 00014ff0     09c2          movi    AUD_SMICHCW,a2
         00015000     0052  
    3197 00015010     c01e          jruc    aernset
    3198 00015020           bbbig_hwinpct
    3199 00015020     09c0          movi    AUD_BBBIG,a0
         00015030     0038  
    3200 00015040     09c2          movi    AUD_BBBIGHW,a2
         00015050     004a  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   73

    3201 00015060     c019          jruc    aernset
    3202 00015070           bbbig_cwinpct
    3203 00015070     09c0          movi    AUD_BBBIGC,a0
         00015080     0041  
    3204 00015090     09c2          movi    AUD_BBBIGCW,a2
         000150a0     0053  
    3205 000150b0     c014          jruc    aernset
    3206 000150c0           dclow_hwinpct
    3207 000150c0     09c0          movi    AUD_DCLOW,a0
         000150d0     0039  
    3208 000150e0     09c2          movi    AUD_DCLOWHW,a2
         000150f0     004b  
    3209 00015100     c00f          jruc    aernset
    3210 00015110           dclow_cwinpct
    3211 00015110     09c0          movi    AUD_DCLOWC,a0
         00015120     0042  
    3212 00015130     09c2          movi    AUD_DCLOWCW,a2
         00015140     0054  
    3213 00015150     c00a          jruc    aernset
    3214 00015160           lluge_hwinpct
    3215 00015160     09c0          movi    AUD_LLUGE,a0
         00015170     003b  
    3216 00015180     09c2          movi    AUD_LLUGEHW,a2
         00015190     004d  
    3217 000151a0     c005          jruc    aernset
    3218 000151b0           lluge_cwinpct
    3219 000151b0     09c0          movi    AUD_LLUGEC,a0
         000151c0     0044  
    3220 000151d0     09c2          movi    AUD_LLUGECW,a2
         000151e0     0056  
    3221 000151f0     0300          jruc    aernset
    3222 00015200           aernset
    3223 00015200     0d5f          calla   GET_AUD
         00015210 00000000! 
    3224 00015230     4c24          move    a1,a4
    3225 00015240     4c40          move    a2,a0
    3226 00015250     0d5f          calla   GET_AUD
         00015260 00000000! 
    3227 00015280     09c0          movi    100,a0
         00015290     0064  
    3228 000152a0     5e01          mpyu    a0,a1
    3229 000152b0     4c22          move    a1,a2
    3230 000152c0     4c80          move    a4,a0
    3231 000152d0     0d3f          callr   ROUNDED_A0_INTO_A2
         000152e0     0331  
    3232 000152f0     4c43          move    a2,a3
    3233 00015300     0300          jruc    PERCENT_WORK
    3234                    
    3235                    
    3236 00015310           PERCENT_WORK
    3237 00015310     09e8          MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
         00015320 00005280" 
    3238 00015340     0d5f          CALLA   LM_SETUP
         00015350 00000000! 
    3239                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   74

    3240 00015370     4c68          MOVE    A3,A8                   ;NOW WE HAVE BINARY NUMBER
    3241 00015380     0d5f          CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
         00015390 00000000! 
    3242                    
    3243 000153b0                   PUSH    a8
    3244 000153c0     4d07          move    a8,a7
    3245 000153d0     09e8          movi    str_pct,a8
         000153e0 00013fc0' 
    3246 00015400     0d5f          CALLA   STRCAT
         00015410 00000000! 
    3247 00015430                   PULL    a8
    3248                    
    3249 00015440                   PUSH    a0
    3250 00015450     b5a0          move    *a13(AT_RX),a0
         00015460     0150  
    3251 00015470                   PUSHP   a0
    3252 00015480     0b00          addi    13,a0
         00015490     000d  
    3253 000154a0     b00d          move    a0,*a13(AT_RX)
         000154b0     0150  
    3254 000154c0                   PULL    a0
    3255                    
    3256 000154d0     b7a6          move    *a13(AT_PTR),a6,L       ;Get *audit
         000154e0     0100  
    3257 000154f0     b4c6          move    *a6(AUD_COLOR),a6
         00015500     0050  
    3258                    
    3259 00015510                   JSRP    RIGHT_FINISH
    3260                    
    3261 00015580                   PULLP   a0
    3262 00015590     b00d          move    a0,*a13(AT_RX)          ;restore right margin
         000155a0     0150  
    3263 000155b0                   RETP
    3264                    
    3265                    
    3266 000155e0           MISC_AUD
    3267 000155e0     0032          .word   50,18,AUD_LM,AUD_RM             ;Y start, Y spacing, LMar, RMar
    3268 00015620                   AMAC    M_SECBON,0,AUDSURV,ROBO_YELLOW  ;WARPS TAKEN
    3269 00015680                   AMAC    M_HIDB,0,AUDBONE,ROBO_YELLOW    ;GAMES NOT FINISHED
    3270 000156e0                   AMAC    M_PLAYS,DOPLAYS,0,ROBO_YELLOW   ;PLAYS ON TOP
    3271 00015740                   AMAC    M_P1MIN,DO_P1MIN,0,ROBO_YELLOW
    3272 000157a0                   AMAC    M_P2MIN,DO_P2MIN,0,ROBO_YELLOW
    3273 00015800                   AMAC    M_AVGT,DO_AVGT,0,ROBO_YELLOW
    3274 00015860                   AMAC    M_ELAPSE,DO_ELAPSE,0,ROBO_YELLOW
    3275 000158c0                   AMAC    adiff_s,diff_prt,0,01212H
    3276 00015920 00000000          .LONG   0
    3277                    
    3278 00015940           adiff_s TXTLINE "GAME DIFFICULTY LEVEL"
    3279                    
    3280                    
    3281                            .IF     0
    3282                    
    3283                    FACCHECK
    3284                            calla   dpageflip_off
    3285                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   75

    3286                            CALLA   CLR_SCRN
    3287                            MOVI    DIAGP,A0
    3288                            CALLA   pal_getf
    3289                    
    3290                            MOVI    AUDSTAT,A0              ;CLEAR GAME STATE AUDIT
    3291                            CLR     A1
    3292                            CALLA   STORE_AUDIT
    3293                    
    3294                            MOVI    ROM_NAME,A2
    3295                            MOVI    ROBO_LF,A3
    3296                            JSRP    TOP_BOX                 ;PRINT TITLE BOX.
    3297                    
    3298                            .if     YUNIT
    3299                            move    @SWITCH+30h,a0
    3300                            btst    6,a0
    3301                            jrnz    fc40                    ;No DIP coinage?
    3302                    
    3303                            movk    1,a0                    ;Just coinage
    3304                            calla   FAC_SET
    3305                            movi    dipcoinage_mess,a8
    3306                            JSRP    L_MESS
    3307                    fc40
    3308                            .endif
    3309                    
    3310                            .if     DEBUG
    3311                            SLEEPK  1                       ;Show it DEBUG
    3312                            .else
    3313                            SLEEP   120                     ;Show it
    3314                            .endif
    3315                    
    3316                            CALLA   CMOS_VAL                ;CMOS BOGUS?
    3317                            JRZ     FACC0                   ;NO
    3318                    
    3319                            MOVI    MESS_RESET,A8           ;ERROR MESSAGE
    3320                            JSRP    L_MESS
    3321                            SLEEP   60
    3322                    
    3323                            CALLR   RES_ALL                 ;ALL TIME TABLE
    3324                            clr     a0                      ;Full
    3325                            CALLA   FAC_SET
    3326                    
    3327                            MOVI    MESS_FAC,A8
    3328                            CALLA   LM_SETUP                ;GET CONFIRMATION DATA READY.
    3329                            JSRP    LM_FINIS
    3330                            SLEEP   60
    3331                            CALLA   CMOS_VAL                ;CMOS BOGUS?
    3332                            JRZ     FACC00                  ;NO
    3333                    
    3334                            CALLA   SCRCLR
    3335                            MOVI    MESS_RESET,A8           ;ERROR MESSAGE
    3336                            JSRP    L_MESS
    3337                    FACC00
    3338                            SLEEP   240
    3339                    
    3340                    FACC0   CALLA   SCRCLR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   76

    3341                    
    3342                            CREATE  AMODE_PID,attract_mode
    3343                            DIE
    3344                    
    3345                    
    3346                    dipcoinage_mess
    3347                            MESS_MAC RD7FONT,SPACING20,200,65,ROBO_WHITE,STRCNRM,0
    3348                            .byte   "USING DIPSWITCH COINAGE",0,0
    3349                            .even
    3350                    
    3351                            .ENDIF
    3352                    
    3353                    
    3354                    
    3355 000159f0           HID_P
    3356 000159f0     0d5f          CALLA   display_init            ;MAKE SURE A13 IS OK BEFORE ANY ACTIONS!
         00015a00 00000000! 
    3357 00015a20     0d5f          CALLA   DIGSRT                  ;RE-INIT THE WORLD!
         00015a30 00000000! 
    3358                    
    3359 00015a50     09e2          MOVI    ROM_NAME,A2
         00015a60 00000000! 
    3360 00015a80     09c3          MOVI    ROBO_LF,A3
         00015a90     3e3e  
    3361 00015aa0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
    3362                    
    3363                    
    3364 00015b10     0d5f          calla   CLR_SCRN                ;Clr screen
         00015b20 00000000! 
    3365                    
    3366 00015b40     09e0          movi    COIN_OCTO_AUDS,a0
         00015b50 0000fc60' 
    3367 00015b70                   JSRP    PRNT_AUD
    3368                    
    3369 00015be0     09c0          movi    AUD_Y_STRT,a0           ;aud Y start
         00015bf0     0036  
    3370 00015c00     b00d          MOVE    a0,*A13(AT_Y),W         ;set Y COORDINATE
         00015c10     0120  
    3371 00015c20     09c8          MOVI    AUDLCOIN,A8             ;NOW PRINT MONEY FOR 1ST 3
         00015c30     0001  
    3372 00015c40                   JSRP    PRINT_COL2
    3373 00015cb0                   JSRP    WAIT_BUT
    3374                    
    3375 00015d20     0d5f          calla   CLR_SCRN                ;Clr screen
         00015d30 00000000! 
    3376 00015d50     09e0          movi    GAME_AUDS1,A0           ;Show 1st screen
         00015d60 00010860' 
    3377 00015d80                   JSRP    PRNT_AUD
    3378 00015df0                   JSRP    WAIT_BUT
    3379                    
    3380 00015e60     0d5f          calla   CLR_SCRN                ;Clr screen
         00015e70 00000000! 
    3381 00015e90     09e0          movi    GAME_AUDS2,A0           ;Show 2nd screen
         00015ea0 00010e00' 
    3382 00015ec0                   JSRP    PRNT_AUD
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   77

    3383 00015f30                   JSRP    WAIT_BUT
    3384                    
    3385 00015fa0     0d5f          calla   CLR_SCRN                ;Clr screen
         00015fb0 00000000! 
    3386 00015fd0     09e0          movi    GAME_AUDS2a,A0          ;Show 3rd screen
         00015fe0 000113a0' 
    3387 00016000                   JSRP    PRNT_AUD
    3388 00016070                   JSRP    WAIT_BUT
    3389                    
    3390 000160e0     0d5f          calla   CLR_SCRN                ;Clr screen
         000160f0 00000000! 
    3391 00016110     09e0          movi    GAME_AUDS3a,A0          ;Show 4th screen data
         00016120 000115e0' 
    3392 00016140                   JSRP    PRNT_AUD
    3393 000161b0     09e0          movi    GAME_AUDS3b,A0
         000161c0 00011940' 
    3394 000161e0                   JSRP    PRNT_AUD
    3395 00016250     09e0          movi    GAME_AUDS3c,A0
         00016260 00011ca0' 
    3396 00016280                   JSRP    PRNT_AUD
    3397 000162f0     09e0          movi    GAME_AUDS3d,A0
         00016300 00012000' 
    3398 00016320                   JSRP    PRNT_AUD
    3399 00016390     09e8          movi    GAUD_P3HEAD1,a8         ;and the page headers
         000163a0 00012360' 
    3400 000163c0                   JSRP    L_MESS
    3401 00016430     09e8          movi    GAUD_P3HEAD2,a8
         00016440 00012440' 
    3402 00016460                   JSRP    L_MESS
    3403 000164d0     09e8          movi    GAUD_P3HEAD3,a8
         000164e0 00012510' 
    3404 00016500                   JSRP    L_MESS
    3405 00016570     09e8          movi    GAUD_P3HEAD4,a8
         00016580 000125e0' 
    3406 000165a0                   JSRP    L_MESS
    3407 00016610     09e8          movi    GAUD_P3HEAD5,a8
         00016620 000126b0' 
    3408 00016640                   JSRP    L_MESS
    3409 000166b0     09e8          movi    GAUD_P3HEAD6,a8
         000166c0 00012780' 
    3410 000166e0                   JSRP    L_MESS
    3411 00016750                   JSRP    WAIT_BUT
    3412                    
    3413                            ;volume adjust
    3414 000167c0                   JSRP    GO_VOL
    3415                    
    3416 00016830     c080          JAUC    DIAG_EX                 ;NOW GET OUT!
         00016840 00000000! 
    3417                    
    3418                    
    3419                    
    3420              0100  AT_PTR   EQU    PDATA                   ;LONG
    3421              0120  AT_Y     EQU    PDATA+LONG_SIZE         ;WORD
    3422              0130  AT_DY    EQU    AT_Y+WORD_SIZE          ;WORD
    3423              0140  AT_LX    EQU    AT_DY+WORD_SIZE         ;WORD LEFT MARGIN X
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   78

    3424              0150  AT_RX    EQU    AT_LX+WORD_SIZE         ;WORD RIGHT MARGIN X
    3425              0160  AT_OBJ   EQU    AT_RX+WORD_SIZE         ;LONG OBJECT POINTER FOR COLLECTION ROUT
    3426              0180  AT_MESS  EQU    AT_OBJ+LONG_SIZE        ;LONG PRINT_MONEY MESSAGE STASH
    3427                            
    3428 00016860           PRNT_AUD
    3429 00016860     9401          MOVE    *A0+,A1                 ;GET STARTING HEIGHT
    3430 00016870     b02d          MOVE    A1,*A13(AT_Y)           ;STORE
         00016880     0120  
    3431                    
    3432 00016890     9401          MOVE    *A0+,A1                 ;GET DY TO USE
    3433 000168a0     b02d          MOVE    A1,*A13(AT_DY)          ;STASH IT AWAY
         000168b0     0130  
    3434                    
    3435 000168c0     9401          MOVE    *A0+,A1                 ;GET LEFT MARGIN
    3436 000168d0     b02d          MOVE    A1,*A13(AT_LX)          ;STORE
         000168e0     0140  
    3437                    
    3438 000168f0     9401          MOVE    *A0+,A1                 ;GET RIGHT MARGIN
    3439 00016900     b02d          MOVE    A1,*A13(AT_RX)          ;STASH IT AWAY
         00016910     0150  
    3440                    
    3441 00016920     b20d          MOVE    A0,*A13(AT_PTR),L       ;SAVE POINTER INTO AREA
         00016930     0100  
    3442                    
    3443 00016940           PA1     JSRP    aud_prtone
    3444                    
    3445 000169b0     b7a0          MOVE    *A13(AT_PTR),A0,L       ;GET POINTER
         000169c0     0100  
    3446 000169d0     0b00          ADDI    AUD_T_SIZE,A0
         000169e0     0060  
    3447 000169f0     b20d          MOVE    A0,*A13(AT_PTR),L       ;PUT BACK
         00016a00     0100  
    3448                    
    3449 00016a10     0d3f          CALLR   ADD_AUDIT_DY
         00016a20     0009  
    3450                    
    3451 00016a30     8601          MOVE    *A0,A1,L                ;ARE WE DONE?
    3452 00016a40     cbef          JRNZ    PA1
    3453 00016a50                   SLEEPK  2
    3454                    
    3455 00016a90                   RETP
    3456                    
    3457 00016ac0           ADD_AUDIT_DY
    3458 00016ac0     098f          MMTM    SP,A1,A2
         00016ad0     6000  
    3459 00016ae0     b5a1          MOVE    *A13(AT_Y),A1,W
         00016af0     0120  
    3460 00016b00     b5a2          MOVE    *A13(AT_DY),A2,W        ;GET DELTA Y
         00016b10     0130  
    3461 00016b20     4041          ADD     A2,A1                   ;MOVE THE Y DOWN
    3462 00016b30     b02d          MOVE    A1,*A13(AT_Y),W
         00016b40     0120  
    3463 00016b50     09af          MMFM    SP,A1,A2
         00016b60     0006  
    3464 00016b70     0960          RETS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   79

    3465                    
    3466 00016b80           BEGIN_AUDIT
    3467 00016b80     098f          MMTM    SP,A0
         00016b90     8000  
    3468 00016ba0     5600          CLR     A0
    3469 00016bb0     0580          MOVE    A0,@BAD_AUD,W           ;MONITOR CORRUPTION.
         00016bc0 00000000! 
    3470 00016be0     09af          MMFM    SP,A0
         00016bf0     0001  
    3471 00016c00     0960          RETS
    3472                    
    3473                    
    3474 00016c10            SUBRP  aud_prtone
    3475                    
    3476 00016c10     0d3f          CALLR   BEGIN_AUDIT
         00016c20     fff5  
    3477 00016c30     b7a3          MOVE    *A13(AT_PTR),A3,L       ;GET POINTER
         00016c40     0100  
    3478 00016c50     b664          MOVE    *A3(AUD_ROUTINE),A4,L
         00016c60     0020  
    3479 00016c70     ca05          jrz     apo20                   ;No code?
    3480                    
    3481 00016c80     09e7          movi    apo50,a7
         00016c90 00016da0' 
    3482 00016cb0     a2ec          MOVE    A7,-*A12,L              ;PUSH RET ADDR
    3483 00016cc0     0164          JUMP    A4                      ;"CALL" THE ROUTINE
    3484                    
    3485 00016cd0     b460  apo20   MOVE    *A3(AUD_NUMBER),A0      ;FETCH THE AUDIT NUMBER
         00016ce0     0040  
    3486 00016cf0     0d5f          CALLA   GET_AUD                 ;TURN INTO AUDIT COUNT!
         00016d00 00000000! 
    3487 00016d20     4c23          MOVE    A1,A3                   ;PROTECT FOR A SECOND.
    3488 00016d30                   JSRP    NUMBER_WORK             ;GET THE NUMBER IN A3 UP THERE!
    3489                    
    3490 00016da0           apo50
    3491 00016da0     09e8          movi    MESS_AUD_LINE,a8
         00016db0 00005320" 
    3492 00016dd0     0d5f          calla   LM_SETUP                ;Setup for audit printing
         00016de0 00000000! 
    3493                    
    3494 00016e00     b7a3          move    *a13(AT_PTR),a3,L       ;Get *audit
         00016e10     0100  
    3495 00016e20     b466          move    *a3(AUD_COLOR),a6
         00016e30     0050  
    3496 00016e40     b668          move    *a3(AUD_MESS),a8,L      ;Get *text
         00016e50     0000  
    3497                    
    3498 00016e60     0300          jruc    LEFT_FINISH
    3499                    
    3500                    
    3501                    
    3502 00016e70           LEFT_FINISH
    3503 00016e70     0d3f          CALLR   TURN_RED_IF_NEC
         00016e80     0036  
    3504 00016e90     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   80

         00016ea0     003f  
    3505 00016eb0     0d3f          CALLR   SET_LEFT_X              ;SET FOR LEFT X
         00016ec0     0046  
    3506 00016ed0                   JSRP    LM_FINIS                ;AND TYPE UP THE MESSAGE!
    3507 00016f40                   RETP
    3508                    
    3509 00016f70           RIGHT_FINISH
    3510 00016f70     0d3f          CALLR   TURN_RED_IF_NEC         ;CHANGE COLOR IF CORRUPTED.
         00016f80     0026  
    3511 00016f90     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00016fa0     002f  
    3512 00016fb0     0d3f          CALLR   SET_RIGHT_X
         00016fc0     003e  
    3513 00016fd0                   JSRP    LM_FINIS                ;FINISH THE JOB!
    3514                    
    3515 00017040     05a0          MOVE    @BAD_AUD,A0,W          ;IS IT CORRUPTED?
         00017050 00000000! 
    3516 00017070     ca14          JRZ     RFX                    ;NOPE....RETURN
    3517                    
    3518 00017080     09e8          MOVI    MESS_ERROR,A8
         00017090 000051b0" 
    3519 000170b0     0d5f          CALLA   LM_SETUP               ;SETUP "ERROR"
         000170c0 00000000! 
    3520                    
    3521 000170e0     0d3f          CALLR   SET_FOR_Y              ;SET FOR AUDIT'S Y
         000170f0     001a  
    3522 00017100     0b29          ADDI    40000H,A9              ;PUSH 4 Y UNITS TO CENTER
         00017110 00040000  
    3523 00017130     0d3f          CALLR   SET_RIGHT_X
         00017140     0026  
    3524 00017150                   JSRP    LM_FINIS               ;FINISH THE JOB!
    3525                    
    3526 000171c0           RFX     RETP
    3527                    
    3528 000171f0           TURN_RED_IF_NEC
    3529 000171f0     098f          MMTM    SP,A3
         00017200     1000  
    3530 00017210     05a3          MOVE    @BAD_AUD,A3     ;CHANGE TO RED?
         00017220 00000000! 
    3531 00017240     ca02          JRZ     DAA_1           ;NOPE...ITS OK!
    3532 00017250     09c6          MOVI    ROBO_RED,A6    ;CHANGE COLOR TO RED
         00017260     0303  
    3533 00017270     09af  DAA_1   MMFM    SP,A3
         00017280     0008  
    3534 00017290     0960          RETS
    3535                                            
    3536 000172a0           SET_FOR_Y
    3537 000172a0     098f          MMTM    SP,A3
         000172b0     1000  
    3538 000172c0     b5a3          MOVE    *A13(AT_Y),A3,W   ;GET Y COORDINATE
         000172d0     0120  
    3539 000172e0     2603          SLL     16,A3             ;PUT IT IN POSITION
    3540 000172f0     ee69          MOVY    A3,A9             ;PUT IT IN PLACE
    3541 00017300     09af          MMFM    SP,A3
         00017310     0008  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   81

    3542 00017320     0960          RETS
    3543                    
    3544 00017330           SET_LEFT_X
    3545 00017330     098f          MMTM    SP,A3
         00017340     1000  
    3546 00017350     b5a3          MOVE    *A13(AT_LX),A3,W
         00017360     0140  
    3547 00017370     ec69          MOVX    A3,A9             ;PUT THE X IN PLACE
    3548 00017380     09af          MMFM    SP,A3
         00017390     0008  
    3549 000173a0     0960          RETS
    3550                    
    3551 000173b0           SET_RIGHT_X
    3552 000173b0     098f          MMTM    SP,A3
         000173c0     1000  
    3553 000173d0     b5a3          MOVE    *A13(AT_RX),A3,W
         000173e0     0150  
    3554 000173f0     ec69          MOVX    A3,A9             ;PUT THE X IN PLACE
    3555 00017400     09af          MMFM    SP,A3
         00017410     0008  
    3556 00017420     0960          RETS
    3557                    
    3558                    
    3559 00017430           NUMBER_WORK
    3560 00017430     09e8          MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
         00017440 00005280" 
    3561 00017460     0d5f          CALLA   LM_SETUP
         00017470 00000000! 
    3562                    
    3563 00017490     4c68          MOVE    A3,A8                   ;NOW WE HAVE BINARY NUMBER
    3564 000174a0     0d5f          CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
         000174b0 00000000! 
    3565 000174d0     b7a6          move    *a13(AT_PTR),a6,L       ;Get *audit
         000174e0     0100  
    3566 000174f0     b4c6          move    *a6(AUD_COLOR),a6
         00017500     0050  
    3567 00017510     c0a5          jruc    RIGHT_FINISH
    3568                    
    3569 00017520           GET_STARTS
    3570 00017520     098f          MMTM    SP,A0,A1
         00017530     c000  
    3571 00017540     1a00          MOVK    AUD1STRT,A0
    3572 00017550     0d5f          CALLA   GET_AUD
         00017560 00000000! 
    3573 00017580     4c22          MOVE    A1,A2
    3574                    
    3575 00017590     1a20          MOVK    AUD2STRT,A0
    3576 000175a0     0d5f          CALLA   GET_AUD
         000175b0 00000000! 
    3577 000175d0     4022          ADD     A1,A2
    3578 000175e0     09af          MMFM    SP,A0,A1
         000175f0     0003  
    3579 00017600     0960          RETS
    3580                    
    3581 00017610           GET_CONTS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   82

    3582 00017610     098f          MMTM    SP,A0,A1
         00017620     c000  
    3583 00017630     1a40          MOVK    AUD1CONT,A0
    3584 00017640     0d5f          CALLA   GET_AUD
         00017650 00000000! 
    3585 00017670     4c22          MOVE    A1,A2
    3586                    
    3587 00017680     1a60          MOVK    AUD2CONT,A0
    3588 00017690     0d5f          CALLA   GET_AUD
         000176a0 00000000! 
    3589 000176c0     4022          ADD     A1,A2
    3590 000176d0     09af          MMFM    SP,A0,A1
         000176e0     0003  
    3591 000176f0     0960          RETS
    3592                    
    3593                    
    3594                    
    3595 00017700           GET_PLAYS
    3596 00017700                   PUSH    a0
    3597 00017710     5600          clr     a0
    3598 00017720     0d3f          callr   GET_STARTS      ;Actually middle starts
         00017730     ffde  
    3599 00017740     4040          add     a2,a0
    3600 00017750     0d3f          callr   GET_CONTS
         00017760     ffea  
    3601 00017770     4002          add     a0,a2
    3602 00017780                   PULL    a0
    3603 00017790     0960          rets
    3604                    
    3605 000177a0           PRINT_COL
    3606 000177a0     09e9          MOVI    T_MONEY,A9           ;THIS ENTRYPOINT IS FOR COLLECTION MESSAGE
         000177b0 00005da0" 
    3607                            
    3608 000177d0           PRINT_MONEY
    3609 000177d0     b32d          MOVE    A9,*A13(AT_MESS),L   ;HOLD MESSAGE FOR WHEN WE NEED IT!
         000177e0     0180  
    3610 000177f0     09c0          MOVI    ADJCDIV,A0           ;IF DIVISOR IS ZERO..THEN ITS OFF!
         00017800     000a  
    3611 00017810     0d5f          CALLA   GET_ADJ
         00017820 00000000! 
    3612 00017840     ca5e          JRZ     NO_MONEY             ;THAT'S ALL FOLKS!
    3613                    
    3614 00017850     0d3f          CALLR   BEGIN_AUDIT          ;KEEP TRACK OF SANITY OF CALC.
         00017860     ff31  
    3615 00017870     0d3f          CALLR   STR_OBJ              ;GET AN OBJECT FOR STRINGING
         00017880     00c5  
    3616 00017890     c859          JRC     NO_MONEY             ;COULDN'T GET AN OBJECT!
    3617                    
    3618 000178a0     0d3f          CALLR   SUM_COINS            ;ADD UP THE COIN PARTS IN A2
         000178b0     00f9  
    3619                    
    3620 000178c0     0d3f          CALLR   SIXP                 ;HAVE THE 6 BEEN TAMPERED
         000178d0     0116  
    3621 000178e0     ca07          JRZ     NO_PREFIX
    3622 000178f0     0d3f          CALLR   GET_CSPT             ;A6 POINTS AT CSECECT DATA.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   83

         00017900     e86f  
    3623 00017910     b6c8          MOVE    *A6(CS_LMES),A8,L    ;LEFT STRING FOR MONEY TOTAL
         00017920     0110  
    3624 00017930     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         00017940 00000000! 
    3625                    
    3626 00017960           NO_PREFIX
    3627 00017960     1820          MOVK    1,A0                 ;DIVIDE COINS BY 1 IF ITS BEEN TAMPERED WITH
    3628 00017970     0d3f          CALLR   SIXP
         00017980     010b  
    3629 00017990     ca05          JRZ     DIV_BY_1             ;TAMPERED WITH...DIVIDE BY 1 FOR "COINS"
    3630                    
    3631 000179a0     09c0          MOVI    ADJCDIV,A0           ;GET THE COIN PARTS PLEASE
         000179b0     000a  
    3632 000179c0     0d5f          CALLA   GET_ADJ
         000179d0 00000000! 
    3633 000179f0           DIV_BY_1
    3634 000179f0     4c43          MOVE    A2,A3                ;SETUP <A2><A3> AS DIVIDEND
    3635 00017a00     5642          CLR     A2
    3636 00017a10     5a02          DIVU    A0,A2                ;DIVIDE UNITS/DIVISOR
    3637                    
    3638 00017a20     4c48          MOVE    A2,A8                ;WE NEED TO PUT QUOTIENT IN STRING
    3639 00017a30     0d5f          CALLA   HEXTOASC             ;THIS FORMS STRING FOR QUOTIENT
         00017a40 00000000! 
    3640                    
    3641 00017a60     0d5f          CALLA   STRCAT               ;ADD QUOTIENT TO PRINTOUT
         00017a70 00000000! 
    3642                    
    3643 00017a90     0b40          CMPI    1,A0                 ;IS DIVISOR ONE??????
         00017aa0     fffe  
    3644 00017ab0     ca0e          JRZ     NOFRAC               ;YEP.......NO DECIMAL!
    3645 00017ac0     09e8          MOVI    ME_DECIMAL,A8        ;ADD DECIMAL POINT
         00017ad0 00013610" 
    3646 00017af0     0d5f          CALLA   STRCAT               ;ITS THERE!
         00017b00 00000000! 
    3647 00017b20     09c2          MOVI    100,A2
         00017b30     0064  
    3648 00017b40     5e43          MPYU    A2,A3                ;REMAINDER TIMES 100
    3649 00017b50     4c62          MOVE    A3,A2                ;DIVIDEND IN A2
    3650                    
    3651 00017b60     0d3f          CALLR   ROUNDED_A0_INTO_A2
         00017b70     00a8  
    3652 00017b80     0d3f          CALLR   A2_100TH             ;CAT THE 100THS IN A2 TO THE A7 STRING.
         00017b90     00b6  
    3653                    
    3654 00017ba0           NOFRAC
    3655 00017ba0     09e8          MOVI    COINS_TRAIL,A8           ;ASSUME IT WILL BE "COINS"
         00017bb0 00013890" 
    3656 00017bd0     0d3f          CALLR   SIXP                 ;TAMPERED?
         00017be0     00e5  
    3657 00017bf0     ca02          JRZ     COIN_SUF             ;YEP....USE " COINS"
    3658 00017c00     b6c8          MOVE    *A6(CS_RMES),A8,L    ;FINISH IT OFF WITH RIGHT STRING
         00017c10     0130  
    3659                    
    3660 00017c20           COIN_SUF
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   84

    3661 00017c20     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         00017c30 00000000! 
    3662 00017c50     09e8          MOVI    M_MONEY,A8                ;MESSAGE FOR THIS LINE PASSED IN A9
         00017c60 00005d00" 
    3663 00017c80     0d5f          CALLA   LM_SETUP
         00017c90 00000000! 
    3664                    
    3665 00017cb0     07a8          MOVE    @TMPOBJ,A8,L         ;POINTER TO MONEY STRING
         00017cc0 000003e0- 
    3666 00017ce0                   JSRP    RIGHT_FINISH            ;PUT ON RIGHT MARGIN
    3667                    
    3668 00017d50     0d3f          CALLR   STR_FREE
         00017d60     0155  
    3669                    
    3670 00017d70     b7a8          MOVE    *A13(AT_MESS),A8,L      ;SETUP PASSED MESSAGE
         00017d80     0180  
    3671 00017d90     0d5f          CALLA   LM_SETUP
         00017da0 00000000! 
    3672 00017dc0                   JSRP    LEFT_FINISH             ;PUT UP PASSED MESSAGE.
    3673 00017e30           NO_MONEY
    3674 00017e30                   RETP
    3675                    
    3676                    
    3677 00017e60           PRINT_COL2
    3678 00017e60     09e9          MOVI    T_MONEY2,A9          ;THIS ENTRYPOINT IS FOR COLLECTION MESSAGE
         00017e70 00005ed0" 
    3679                            
    3680 00017e90     b32d          MOVE    A9,*A13(AT_MESS),L   ;HOLD MESSAGE FOR WHEN WE NEED IT!
         00017ea0     0180  
    3681 00017eb0     09c0          MOVI    ADJCDIV,A0           ;IF DIVISOR IS ZERO..THEN ITS OFF!
         00017ec0     000a  
    3682 00017ed0     0d5f          CALLA   GET_ADJ
         00017ee0 00000000! 
    3683 00017f00     ca5a          JRZ     NO_MONEY2            ;THAT'S ALL FOLKS!
    3684                    
    3685 00017f10     0d3f          CALLR   BEGIN_AUDIT          ;KEEP TRACK OF SANITY OF CALC.
         00017f20     fec5  
    3686 00017f30     0d3f          CALLR   STR_OBJ              ;GET AN OBJECT FOR STRINGING
         00017f40     0059  
    3687 00017f50     c855          JRC     NO_MONEY2            ;COULDN'T GET AN OBJECT!
    3688                    
    3689 00017f60     0d3f          CALLR   SUM_COINS            ;ADD UP THE COIN PARTS IN A2
         00017f70     008d  
    3690                    
    3691 00017f80     09e8          movi    M_VERINF,a8
         00017f90 00005fd0" 
    3692 00017fb0     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         00017fc0 00000000! 
    3693                    
    3694 00017fe0           NO_PREFIX2
    3695 00017fe0     1820          MOVK    1,A0                 ;DIVIDE COINS BY 1 IF ITS BEEN TAMPERED WITH
    3696 00017ff0     0d3f          CALLR   SIXP
         00018000     00a3  
    3697 00018010     ca05          JRZ     DIV_BY_12            ;TAMPERED WITH...DIVIDE BY 1 FOR "COINS"
    3698                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   85

    3699 00018020     09c0          MOVI    ADJCDIV,A0           ;GET THE COIN PARTS PLEASE
         00018030     000a  
    3700 00018040     0d5f          CALLA   GET_ADJ
         00018050 00000000! 
    3701 00018070           DIV_BY_12
    3702 00018070     4c43          MOVE    A2,A3                ;SETUP <A2><A3> AS DIVIDEND
    3703 00018080     5642          CLR     A2
    3704 00018090     5a02          DIVU    A0,A2                ;DIVIDE UNITS/DIVISOR
    3705                    
    3706 000180a0     4c48          MOVE    A2,A8                ;WE NEED TO PUT QUOTIENT IN STRING
    3707 000180b0     0d5f          CALLA   HEXTOASC             ;THIS FORMS STRING FOR QUOTIENT
         000180c0 00000000! 
    3708                    
    3709 000180e0     0d5f          CALLA   STRCAT               ;ADD QUOTIENT TO PRINTOUT
         000180f0 00000000! 
    3710                    
    3711 00018110     0b40          CMPI    1,A0                 ;IS DIVISOR ONE??????
         00018120     fffe  
    3712 00018130     ca0e          JRZ     NOFRAC2              ;YEP.......NO DECIMAL!
    3713 00018140     09e8          MOVI    ME_DASH,A8           ;ADD DASH
         00018150 00013600" 
    3714 00018170     0d5f          CALLA   STRCAT               ;ITS THERE!
         00018180 00000000! 
    3715 000181a0     09c2          MOVI    100,A2
         000181b0     0064  
    3716 000181c0     5e43          MPYU    A2,A3                ;REMAINDER TIMES 100
    3717 000181d0     4c62          MOVE    A3,A2                ;DIVIDEND IN A2
    3718                    
    3719 000181e0     0d3f          CALLR   ROUNDED_A0_INTO_A2
         000181f0     0040  
    3720 00018200     0d3f          CALLR   A2_100TH             ;CAT THE 100THS IN A2 TO THE A7 STRING.
         00018210     004e  
    3721                    
    3722 00018220           NOFRAC2
    3723 00018220     09e8          MOVI    COINS_TRAIL,A8           ;ASSUME IT WILL BE "COINS"
         00018230 00013890" 
    3724 00018250     0d3f          CALLR   SIXP                 ;TAMPERED?
         00018260     007d  
    3725 00018270     ca02          JRZ     COIN_SUF2            ;YEP....USE " COINS"
    3726 00018280     b6c8          MOVE    *A6(CS_RMES),A8,L    ;FINISH IT OFF WITH RIGHT STRING
         00018290     0130  
    3727                    
    3728 000182a0           COIN_SUF2
    3729 000182a0     0d5f          CALLA   STRCAT               ;SHOVE THE STRING IN!
         000182b0 00000000! 
    3730 000182d0     09e8          MOVI    M_MONEY,A8                ;MESSAGE FOR THIS LINE PASSED IN A9
         000182e0 00005d00" 
    3731 00018300     0d5f          CALLA   LM_SETUP
         00018310 00000000! 
    3732                    
    3733 00018330     07a8          MOVE    @TMPOBJ,A8,L         ;POINTER TO MONEY STRING
         00018340 000003e0- 
    3734 00018360                   JSRP    RIGHT_FINISH            ;PUT ON RIGHT MARGIN
    3735                    
    3736 000183d0     0d3f          CALLR   STR_FREE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   86

         000183e0     00ed  
    3737                    
    3738 000183f0     b7a8          MOVE    *A13(AT_MESS),A8,L      ;SETUP PASSED MESSAGE
         00018400     0180  
    3739 00018410     0d5f          CALLA   LM_SETUP
         00018420 00000000! 
    3740 00018440                   JSRP    LEFT_FINISH             ;PUT UP PASSED MESSAGE.
    3741 000184b0           NO_MONEY2
    3742 000184b0                   RETP
    3743                    
    3744 000184e0           STR_OBJ
    3745 000184e0                   PUSH    a0,a1,a14
    3746 00018500     0d5f          CALLA   GETOBJ               ;USE AN OBJECT BLOCK FOR STRING MANIPULATION
         00018510 00000000! 
    3747 00018530     cb02          JRNZ    STR_O1
    3748 00018540     0de0          SETC    
    3749 00018550     c007          JRUC    STR_OFAIL
    3750                    
    3751 00018560           STR_O1
    3752 00018560     0780          MOVE    A0,@TMPOBJ,L         ;SAVE TO FREE LATER
         00018570 000003e0- 
    3753 00018590     4c07          MOVE    A0,A7                ;THIS IS WHERE IT BELONGS.
    3754 000185a0     5600          CLR     A0
    3755 000185b0     8c07          MOVB    A0,*A7               ;MAKE STRING NULL
    3756 000185c0     0320          CLRC                         ;RETURN SUCCESS
    3757 000185d0           STR_OFAIL
    3758 000185d0                   PULL    a0,a1,a14
    3759 000185f0     0960          RETS
    3760                    
    3761 00018600           ROUNDED_A0_INTO_A2
    3762 00018600     098f          MMTM    SP,A3
         00018610     1000  
    3763 00018620     4c00          MOVE    A0,A0                ;DIVIDE BY ZERO?
    3764 00018630     cb02          JRNZ    NDZ
    3765 00018640     4c02          MOVE    A0,A2                ;RETURN ZERO
    3766 00018650     c007          JRUC    NOROUND
    3767 00018660           NDZ
    3768 00018660     4c43          MOVE    A2,A3
    3769 00018670     5642          CLR     A2                   ;<A2> <A3> AS DIVIDEND
    3770 00018680     5a02          DIVU    A0,A2                ;DIVIDE AND A2 = PENNIES....A3 = REMAINDER
    3771 00018690     2423          SLL     1,A3                 ;SHIFT REMAINDER
    3772 000186a0     4803          CMP     A0,A3                ;COMPARE TO DIVISOR
    3773 000186b0     c801          JRLO    NOROUND              ;TOO LOW TO ROUND UP
    3774 000186c0     1022          INC     A2                   ;A2 HAS CORRECT PENNIES
    3775 000186d0           NOROUND
    3776 000186d0     09af          MMFM    SP,A3
         000186e0     0008  
    3777 000186f0     0960          RETS
    3778                    
    3779 00018700           A2_100TH
    3780 00018700     098f          MMTM    SP,A8
         00018710     0080  
    3781 00018720     0b42          CMPI    9,A2                 ;9 OR LESS REQUIES LEAD ZERO.
         00018730     fff6  
    3782 00018740     c306          JRHI    NOLEAD
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   87

    3783                    
    3784 00018750     09e8          MOVI    ME_ZERO,A8           ;THROW IN THE LEAD ZERO
         00018760 000135f0" 
    3785 00018780     0d5f          CALLA   STRCAT               ;THIS DOES IT!
         00018790 00000000! 
    3786                    
    3787 000187b0           NOLEAD
    3788 000187b0     4c48          MOVE    A2,A8
    3789 000187c0     0d5f          CALLA   HEXTOASC             ;MAKE STRING
         000187d0 00000000! 
    3790 000187f0     0d5f          CALLA   STRCAT               ;PUT IT IN!
         00018800 00000000! 
    3791 00018820     09af          MMFM    SP,A8
         00018830     0100  
    3792 00018840     0960          RETS
    3793                    
    3794 00018850           SUM_COINS
    3795 00018850     098f          MMTM    SP,A0,A1,A3,A6,A4
         00018860     da00  
    3796                    
    3797 00018870     4d00          MOVE    A8,A0                     ;POINT AT AUDIT NUMBER
    3798 00018880     5642          CLR     A2                        ;SUM = ZERO
    3799                    
    3800 00018890     0d3f          CALLR   GET_CSPT                  ;A6 POINTS AT CSELECT TABLE
         000188a0     e775  
    3801 000188b0     0b06          ADDI    CS_LVAL,A6                ;POINT AT 1ST MULTIPLIER
         000188c0     00c0  
    3802                    
    3803 000188d0     09c4          MOVI    CHUTES,A4                 ;NOW...ITERATE OVER THE CHUTES
         000188e0     0005  
    3804                    
    3805 000188f0           NEXT_CHUTE
    3806 000188f0     94c3          MOVE    *A6+,A3,W                 ;GET MULTPLIER FOR THIS CHUTE
    3807 00018900     0d3f          CALLR   FIX_A3                    ;REPLACE A3 WITH 1 (MULTIPLIER) IF
         00018910     000d  
    3808                                                              ;ITS SOME CUSTOM MODE.
    3809 00018920     0d3f          CALLR   ADD_AUD_A0_TIMES_A3_TO_A2
         00018930     0005  
    3810 00018940     1020          INC     A0                        ;NEXT AUDIT
    3811 00018950     3ce4          DSJS    A4,NEXT_CHUTE
    3812                    
    3813 00018960     09af          MMFM    SP,A0,A1,A3,A6,A4
         00018970     005b  
    3814 00018980     0960          RETS
    3815                    
    3816 00018990           ADD_AUD_A0_TIMES_A3_TO_A2
    3817 00018990     0d5f          CALLA   GET_AUD                   ;FETCH THE AUDIT
         000189a0 00000000! 
    3818 000189c0     5e23          MPYU    A1,A3                     ;TIME THE FACTOR
    3819 000189d0     4062          ADD     A3,A2
    3820 000189e0     0960          RETS
    3821                    
    3822 000189f0           FIX_A3
    3823 000189f0     0d3f          CALLR   SIXP                 ;HAS IT BEEN TAMPERED WITH?
         00018a00     0003  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   88

    3824 00018a10     cb01          JRNZ    FIX_A3X              ;NOPE...LEAVE A3
    3825                    
    3826 00018a20     1823          MOVK    1,A3
    3827 00018a30           FIX_A3X
    3828 00018a30     0960          RETS
    3829                    
    3830 00018a40           SIXP
    3831 00018a40     098f          MMTM    SP,A0
         00018a50     8000  
    3832 00018a60     09c0          MOVI    ADJ1ST6,A0
         00018a70     0016  
    3833 00018a80     0d5f          CALLA   GET_ADJ         ;HAS IT BEEN TAMPERED WITH?
         00018a90 00000000! 
    3834 00018ab0     09af          MMFM    SP,A0
         00018ac0     0001  
    3835 00018ad0     0960          RETS
    3836                    
    3837 00018ae0           STARTS
    3838 00018ae0     0d3f          CALLR   GET_STARTS
         00018af0     fea2  
    3839 00018b00     4c43          MOVE    A2,A3           ;GET IN PRINTOUT REG.
    3840 00018b10     c000          jruc    NUMBER_WORK     ;AND PRINT IT
         00018b20     fe90  
    3841                    
    3842 00018b30           CONTINS
    3843 00018b30     0d3f          CALLR   GET_CONTS
         00018b40     feac  
    3844 00018b50     4c43          MOVE    A2,A3           ;GET IN PRINTOUT REG.
    3845 00018b60     c000          jruc    NUMBER_WORK     ;AND PRINT IT
         00018b70     fe8b  
    3846                    
    3847 00018b80           DOPLAYS
    3848 00018b80     0d3f          CALLR   GET_PLAYS
         00018b90     feb6  
    3849 00018ba0     4c43          MOVE    A2,A3           ;PUT IN PLACE
    3850 00018bb0     c000          jruc    NUMBER_WORK
         00018bc0     fe86  
    3851                    
    3852 00018bd0           DOHSLEFT
    3853 00018bd0     09c0          MOVI    ADJHSRES,A0
         00018be0     000f  
    3854 00018bf0     0d5f          CALLA   GET_ADJ         ;IS IF OFF?
         00018c00 00000000! 
    3855 00018c20     ca06          JRZ     DOHSOFF         ;YEP...PRINT IT
    3856                    
    3857 00018c30     0d5f          CALLA   GET_HSC         ;GET THE COUNTER VALUE
         00018c40 00000000! 
    3858 00018c60     4c03          MOVE    A0,A3
    3859 00018c70     c000          jruc    NUMBER_WORK     ;AND SHOW IT!
         00018c80     fe7a  
    3860                    
    3861 00018c90           DOHSOFF
    3862 00018c90     09e8          MOVI    MESS_AUD_NUM,A8
         00018ca0 00005280" 
    3863 00018cc0     0d5f          CALLA   LM_SETUP        ;SETUP FOR AUDIT PRINTING.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   89

         00018cd0 00000000! 
    3864                    
    3865 00018cf0     09e8          MOVI    M_HSOFF,A8      ;THIS EFFECTIVELY ERASES LINE!
         00018d00 00005c20" 
    3866 00018d20     c080          JAUC    RIGHT_FINISH
         00018d30 00016f70' 
    3867                    
    3868 00018d50           DO_P1MIN
    3869 00018d50     09c0          MOVI    AUD1TIME,A0
         00018d60     0014  
    3870 00018d70           P1MJ
    3871 00018d70     0d5f          CALLA   GET_AUD         ;TURN INTO NUMBER
         00018d80 00000000! 
    3872 00018da0     4c24          MOVE    A1,A4           ;MOVE NUMBER TO "HOUR" COMPUTATION REGGIE
    3873 00018db0     c005          JRUC    DH11            ;AND DO LIKE THE HOURS!
    3874                    
    3875                    
    3876 00018dc0           DO_P2MIN
    3877 00018dc0     09c0          MOVI    AUD2TIME,A0
         00018dd0     0015  
    3878 00018de0     c0f8          JRUC    P1MJ
    3879                    
    3880 00018df0           DO_HOURS
    3881 00018df0     0d3f          CALLR   TOT_TIME        ;READ OUT THE TOTAL TIME.
         00018e00     0053  
    3882 00018e10     4c85  DH11    MOVE    A4,A5           ;A5 HAS RUNNING PLAY TIME
    3883 00018e20     5684          CLR     A4              ;<A4><A5> READY FOR DIVISION
    3884 00018e30     1980          MOVK    12,A0
    3885 00018e40     5a04          DIVU    A0,A4           ;A4 HAS MINUTES
    3886 00018e50     0b45          CMPI    6,A5            ;ROUND PROPERLY
         00018e60     fff9  
    3887 00018e70     c801          JRLO    DH1             ;NOT ENOUGH
    3888 00018e80     1024          INC     A4
    3889 00018e90           DH1
    3890 00018e90     4c81          MOVE    A4,A1           ;NOW THIS DIVIDED BY 60 IS WHAT WE NEED
    3891 00018ea0     c017          jruc    P_TIME          ;DO IT!
    3892                    
    3893 00018eb0           DO_AVGT
    3894 00018eb0     0d3f          CALLR   TOT_TIME        ;A3 HAS WEIGHTED TIME
         00018ec0     0047  
    3895                    
    3896 00018ed0     0d3f  DOAVC   CALLR   GET_PLAYS       ;GET TOTAL PLAYS IN A2
         00018ee0     fe81  
    3897 00018ef0     4c40          MOVE    A2,A0           ;STASH IN A0.
    3898 00018f00     18a1          MOVK    5,A1            ;TURN INTO SECONDS
    3899 00018f10     5e23          MPYU    A1,A3           ;A3 HAS SECONDS OF INTEREST
    3900 00018f20     4c62          MOVE    A3,A2
    3901 00018f30     0d3f          CALLR   ROUNDED_A0_INTO_A2   ;DIVIDE A2 BY PLAYS (AND ROUND)
         00018f40     ff6b  
    3902 00018f50     4c41          MOVE    A2,A1           ;NOW GET IN PLACE FOR P_TIME
    3903 00018f60     c00b          jruc    P_TIME          ;DO IT!
    3904                    
    3905 00018f70           DO_ELAPSE
    3906 00018f70     0d3f          CALLR   TOT_TIME
         00018f80     003b  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   90

    3907 00018f90     4c83          MOVE    A4,A3           ;USE ELAPSED TIME
    3908 00018fa0     c0f2          JRUC    DOAVC           ;AND THE REST IS IDENTICAL.
    3909                    
    3910                    
    3911 00018fb0           keyavg_prt
    3912                    
    3913                    
    3914 00018fb0           diff_prt
    3915 00018fb0     19c0          movk    ADJDIFF,a0
    3916 00018fc0     0d5f          calla   GET_ADJ
         00018fd0 00000000! 
    3917 00018ff0     4c03          move    a0,a3
    3918 00019000     c000          jruc    NUMBER_WORK     ;Print it
         00019010     fe41  
    3919                    
    3920                    
    3921 00019020           P_TIME
    3922 00019020     0d3f          CALLR   STR_OBJ         ;USE AN OBJECT BLOCK FOR STRING MANIPULATION
         00019030     ff4a  
    3923 00019040     c824          JRC     NO_OBJS         ;NO OBJECTS....PRINT NOTHING
    3924                    
    3925 00019050     5600          CLR     A0              ;DIVIDEND IN <A0><A1>
    3926 00019060     09c2          MOVI    60,A2
         00019070     003c  
    3927 00019080     5a40          DIVU    A2,A0           ;A0 = "MINUTES"....A1 = "SECONDS
    3928                    
    3929 00019090     0d5f          CALLA   CAT_A0          ;ADD A0 STRING TO A7 BUILD
         000190a0 00000000! 
    3930 000190c0     09e8          MOVI    ME_COLON,A8
         000190d0 00013620" 
    3931 000190f0     0d5f          CALLA   STRCAT          ;PUT THE COLON IN.
         00019100 00000000! 
    3932                    
    3933 00019120     4c22          MOVE    A1,A2           ;GET "SECONDS" IN A2
    3934 00019130     0d3f          CALLR   A2_100TH        ;AND GET THE 100THS IN.
         00019140     ff5b  
    3935                    
    3936 00019150     09e8          MOVI    MESS_AUD_NUM,A8 ;SETUP FOR AUDIT NUMBER
         00019160 00005280" 
    3937 00019180     0d5f          CALLA   LM_SETUP
         00019190 00000000! 
    3938 000191b0     b7a6          move    *a13(AT_PTR),a6,L       ;Get *audit
         000191c0     0100  
    3939 000191d0     b4c6          move    *a6(AUD_COLOR),a6
         000191e0     0050  
    3940                    
    3941 000191f0     4ce8          MOVE    A7,A8           ;PUT STRING CORRECT REGGIE
    3942 00019200                   JSRP    RIGHT_FINISH    ;PRINT THE LINE
    3943                    
    3944 00019270     0d3f          CALLR   STR_FREE        ;FREE UP THE OBJECT!
         00019280     0003  
    3945                    
    3946 00019290           NO_OBJS
    3947 00019290                   RETP                    ;NOW RETURN TO CALLER
    3948                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   91

    3949 000192c0           STR_FREE
    3950 000192c0     07a0          MOVE    @TMPOBJ,A0,L    ;GET OBJECT BACK
         000192d0 000003e0- 
    3951 000192f0     cb01          JRNZ    FREE_IT_NOW
    3952                    
    3953                            .IF     DEBUG
    3954                            LOCKUP
    3955                            .ENDIF
    3956 00019300     0960          RETS                    ;NO OBJECT...RETURN!
    3957                    
    3958 00019310           FREE_IT_NOW
    3959 00019310     c080          jauc    FREEOBJ         ;AND LET IT GO.
         00019320 00000000! 
    3960                            
    3961 00019340           TOT_TIME
    3962 00019340     098f          MMTM    SP,A0,A1
         00019350     c000  
    3963 00019360     09c0          MOVI    AUD1TIME,A0
         00019370     0014  
    3964 00019380     0d5f          CALLA   GET_AUD
         00019390 00000000! 
    3965 000193b0     4c23          MOVE    A1,A3
    3966 000193c0     4c24          MOVE    A1,A4
    3967 000193d0     09c0          MOVI    AUD2TIME,A0
         000193e0     0015  
    3968 000193f0     0d5f          CALLA   GET_AUD
         00019400 00000000! 
    3969 00019420     4024          ADD     A1,A4                ;A4 HAS SIMPLE SUM NOW
    3970 00019430     2421          SLL     1,A1                 ;DOUBLE THE PLAYER 2 TIME
    3971 00019440     4023          ADD     A1,A3
    3972 00019450     09af          MMFM    SP,A0,A1
         00019460     0003  
    3973 00019470     0960          RETS
    3974                    
    3975                    
    3976                    
    3977 000051b0                   .DATA
    3978                    
    3979                    
    3980                    
    3981                    
    3982 000051b0           MESS_ERROR
    3983 000051b0                   MESS_MAC RD7FONT,SPACING07,0,0,ROBO_RED,STRLNRM,0
    3984 00005250                   TXTLINE "  ERROR"
    3985                    
    3986 00005280           MESS_AUD_NUM
    3987 00005280                   MESS_MAC RD7FONT,SPACING20,367,227,ROBO_YELLOW,STRRNRM,0
    3988                    
    3989 00005320           MESS_AUD_LINE
    3990 00005320                   MESS_MAC RD7FONT,SPACING20,23,227,ROBO_YELLOW,STRLNRM,0
    3991                    
    3992                    
    3993 000053c0           MES_AUD TXTLINE "GAME AUDITS"
    3994                    
    3995 00005420           MES_BOOK
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   92

    3996 00005420                   TXTLINE "COIN BOOKKEEPING"
    3997                    
    3998 000054b0           M_LCOIN TXTLINE "LEFT SLOT COINS"
    3999 00005530           M_CCOIN TXTLINE "CENTER SLOT (3) COINS"
    4000 000055e0           M_RCOIN TXTLINE "RIGHT SLOT COINS"
    4001                    
    4002 00005670           M_LCOIN2 TXTLINE "WATCHDOG FEEDINGS"
    4003 00005700           M_CCOIN2 TXTLINE "SELF-CORRECTED CMOS ERRORS"
    4004 000057e0           M_RCOIN2 TXTLINE "PROCESS LIST RE-INITIALIZATIONS"
    4005                    
    4006 000058e0           M_XCOIN TXTLINE "EXTRA SLOT (4) COINS"
    4007 00005990           M_DBV   TXTLINE "BILL VALIDATOR"
    4008                    
    4009 00005a10           M_PAIDC TXTLINE "PAID CREDITS"
    4010                    
    4011 00005a80           M_SERV  TXTLINE "SERVICE CREDITS"
    4012                    
    4013                    
    4014 00005b00           M_PLAYS TXTLINE "TOTAL PLAYS"
    4015                    
    4016 00005b60           M_HSLEFT
    4017 00005b60                   TXTLINE "PLAYS UNTIL H.S. RESET"
    4018                    
    4019 00005c20           M_HSOFF TXTLINE "OFF"
    4020                    
    4021 00005c40                   .even
    4022 00005c40           M_ELAPSE
    4023 00005c40                   TXTLINE "AVG. ELAPSED TIME/PLAY"
    4024                    
    4025 00005d00           M_MONEY MESS_MAC  RD15FONT,SPACING20,367,227,ROBO_WHITE,STRRNRM,0
    4026                    
    4027 00005da0           T_MONEY MESS_MAC  RD15FONT,SPACING20,23,227,ROBO_WHITE,STRLNRM,0
    4028 00005e40                   TXTLINE "TOTAL COLLECTION"
    4029                    
    4030 00005ed0           T_MONEY2 MESS_MAC  RD15FONT,SPACING20,23,227,ROBO_WHITE,STRLNRM,0
    4031 00005f70                   TXTLINE "XRAM COUNT"
    4032                    
    4033 00005fd0           M_VERINF
    4034 00005fd0                   TXTLINE "031-0"
    4035                    
    4036 00006000           M_LOCKUP
    4037 00006000                   TXTLINE "LOCKUPS"
    4038 00006040           M_HIDB  TXTLINE "GAMES NOT FINISHED"
    4039                    
    4040 000060e0           M_SECBON
    4041 000060e0                   TXTLINE "WARPS"
    4042                    
    4043                    
    4044 00006110           MEN_MAIN
    4045 00006110 00000000!          .LONG   RD7FONT        ;FONT   
    4046 00006130 00000000!          .LONG   STRCNRM        ;CENTER PLEASE
    4047 00006150 0000c090"          .LONG   MESSMAIN       ;TITLE
    4048 00006170     0202           .WORD   ROBO_WHITE     ;COLOR OF TITLE
    4049 00006180     0066           .WORD   MENU_X         ;UL X
    4050 00006190     0057           .WORD   MENU_Y-3       ;UL Y
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   93

    4051 000061a0     0011           .WORD   MENU_DY-6      ;VERTICAL SPACING
    4052 000061b0     0202           .WORD   ROBO_WHITE     ;COLOR WHEN NOT SELECTED
    4053 000061c0     0010           .WORD   16             ;HEIGHT OF SELECTION BAR
    4054 000061d0     fffc           .WORD   -4             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4055 000061e0     0006           .WORD   BAR_DX         ;EXTRA X ON EACH SIDE.
    4056 000061f0     00b7           .WORD   BAR_WID        ;WIDTH OF BAR!
    4057 00006200     3d3d           .WORD   ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4058 00006210 000096a0"          .LONG   MESS_DIAG,GO_DIAG,DIAG_HELP
    4059 00006270 00009730"          .LONG   MESS_COIN_AUD,GO_BOOK,COIN_HELP
    4060 000062d0 000097c0"          .LONG   MESS_GAME_AUD,GO_AUD,AUDIT_HELP
    4061 00006330 00009820"          .LONG   MESS_GAME_ADJ,GO_ADJ,ADJUST_HELP
    4062 00006390 000098a0"          .LONG   MESS_UTIL,GO_UTIL,UTIL_HELP
    4063 000063f0 00000bd0"          .LONG   MESS_HARDWARE,GO_HARDWARE,HARDWARE_HELP
    4064 00006450 00000c40"          .LONG   MESS_CLOCK,GO_CLOCK,CLOCK_HELP
    4065 000064b0 000098f0"          .LONG   MESS_VOL,GO_VOL,VOL_HELP
    4066 00006510 00009960"          .LONG   MESS_EXIT,0,EXIT_HELP  ;SPECIAL CASE!
    4067 00006570 00000000           .LONG   0              ;END
    4068                    
    4069                    
    4070              00ce  UM_WID   EQU     206
    4071              0072  UM_X     EQU     TIT_ULX+GAP+MB_XWID+(UM_WID/2)+C_KLUDGE
    4072                    
    4073 00006590           MEN_UTIL
    4074 00006590 00000000!         .LONG   RD7FONT         ;FONT
    4075 000065b0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4076 000065d0 0000c150"         .LONG   MESSUTIL        ;TITLE
    4077 000065f0     0202          .WORD   COLOR_WHITE     ;COLOR OF TITLE
    4078 00006600     0072          .WORD   UM_X            ;UL X
    4079 00006610     0057          .WORD   MENU_Y-3        ;UL Y
    4080 00006620     0012          .WORD   18              ;VERTICAL SPACING
    4081 00006630     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
    4082 00006640     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4083 00006650     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEG)
    4084 00006660     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4085 00006670     00ce          .WORD   UM_WID          ;WIDTH OF BAR!
    4086 00006680     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4087 00006690 00009d90"         .LONG   MESS_CLCRED,DO_CLCRED,CLCRED_HELP
    4088 000066f0 00009e80"         .LONG   MESS_CLCOIN,DO_CLCOIN,CLCOIN_HELP
    4089 00006750 00009f20"         .LONG   MESS_CLAUD,DO_CLAUD,CLAUD_HELP
    4090 000067b0 0000a100"         .LONG   MESS_HSRES,DO_HSRES,HSRES_HELP
    4091 00006810 00009fb0"         .LONG   MESS_CLPLRECS,DO_CLPLRECS,CLPLRECS_HELP
    4092 00006870 0000a380"         .LONG   MESS_DEF_ADJ,DO_DEF_ADJ,DEF_ADJ_HELP
    4093 000068d0 0000a4b0"         .LONG   MESS_FACSET,DO_FACSET,FACSET_HELP
    4094 00006930 0000a560"         .LONG   opmsg_s,opmsg_main,OPMSG_HELP
    4095 00006990 00009600"         .LONG   MESS_MM,0,BLNK_HELP     ;RETURN TO MAIN MENU
    4096 000069f0 00000000          .LONG   0                       ;END
    4097                    
    4098                    
    4099 00006a10           MEN_DIAG
    4100 00006a10 00000000!         .LONG   RD7FONT         ;FONT
    4101 00006a30 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4102 00006a50 000096a0"         .LONG   MESSDIAG        ;TITLE
    4103 00006a70     0303          .WORD   COLOR_RED       ;COLOR OF TITLE
    4104 00006a80     00c8          .WORD   200             ;UL X
    4105 00006a90     0057          .WORD   MENU_Y-3        ;UL Y
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   94

    4106 00006aa0     0014          .WORD   20              ;VERTICAL SPACING
    4107 00006ab0     0303          .WORD   COLOR_RED       ;COLOR WHEN NOT SELECTED
    4108 00006ac0     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4109 00006ad0     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4110 00006ae0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4111 00006af0     00c3          .WORD   195             ;WIDTH OF BAR!  (A LITTLE FATTER)
    4112 00006b00     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4113 00006b10 0000a7a0"         .LONG   MESS_SWTEST,GO_SWTEST,BLNK_HELP
    4114 00006b70 0000a800"         .LONG   diptst_mess,dipsw_test,BLNK_HELP
    4115              0003  ROM_LEV EQU     3               ;TEST NUMBER FOLLOWING ROM TEST
    4116 00006bd0 0000a880"         .LONG   MESS_CPUTEST,GO_CPUTEST,BLNK_HELP
    4117              0004  RTR_LEV EQU     4               ;TEST NUMBER FOLLOWING CPU TEST (FOR RETURN)
    4118 00006c30 0000a900"         .LONG   M_STEST,GO_STEST,BLNK_HELP
    4119 00006c90 0000a990"         .LONG   MESS_PATTERNS,GO_PATTERNS,BLNK_HELP
    4120 00006cf0 0000a2f0"         .LONG   MESS_BURN,DO_BURN,BLNK_HELP
    4121 00006d50 00009600"         .LONG   MESS_MM,0,BLNK_HELP     ;RETURN TO MAIN MENU
    4122 00006db0 00000000          .LONG   0
    4123                    
    4124              00fa  STM_WID EQU       250
    4125                    
    4126                    
    4127                    
    4128 00006dd0           ANY_MENU
    4129 00006dd0 00000000!         .LONG   RD7FONT         ;FONT
    4130 00006df0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4131 00006e10 00000000          .LONG   0               ;TITLE
    4132 00006e30     0000          .WORD   0               ;COLOR OF TITLE
    4133 00006e40     00c8          .WORD   200             ;UL X
    4134 00006e50     00c8          .WORD   200             ;UL Y
    4135 00006e60     0017          .WORD   MENU_DY         ;VERTICAL SPACING
    4136 00006e70     0707          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
    4137 00006e80     001a          .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    4138 00006e90     fff7          .WORD   -9              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4139 00006ea0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4140 00006eb0     00ea          .WORD   234             ;WIDTH OF BAR!
    4141 00006ec0     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4142 00006ed0 00009540"         .LONG   MESS_ANY,0,NO_HELP
    4143 00006f30 00000000          .LONG   0
    4144                    
    4145                    
    4146 00006f50           MEN_PATTERNS
    4147 00006f50 00000000!         .LONG   RD7FONT         ;FONT
    4148 00006f70 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4149 00006f90 0000a990"         .LONG   MESSPAT         ;TITLE
    4150 00006fb0     0303          .WORD   COLOR_RED       ;COLOR OF TITLE
    4151 00006fc0     00c8          .WORD   200             ;UL X       (CENTER IT!)
    4152 00006fd0     0057          .WORD   MENU_Y-3        ;UL Y
    4153 00006fe0     0017          .WORD   23              ;VERTICAL SPACING
    4154 00006ff0     0505          .WORD   COLOR_YELLOW    ;COLOR WHEN NOT SELECTED
    4155 00007000     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4156 00007010     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4157 00007020     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4158 00007030     00ea          .WORD   234             ;WIDTH OF BAR!
    4159 00007040     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4160 00007050 0000aa20"         .LONG   MESS_RED,GO_RED,BLNK_HELP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   95

    4161 000070b0 0000aa80"         .LONG   MESS_GREEN,GO_GREEN,BLNK_HELP
    4162 00007110 0000aaf0"         .LONG   MESS_BLUE,GO_BLUE,BLNK_HELP
    4163 00007170 0000ab50"         .LONG   MESS_BARS,GO_BARS,BLNK_HELP
    4164 000071d0 0000abb0"         .LONG   MESS_CROSS,GO_CROSS,BLNK_HELP
    4165 00007230 0000ac50"         .LONG   MESS_DIAGM,0,BLNK_HELP
    4166 00007290 00009600"         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;RETURN TO MAIN MENU
    4167 000072f0 00000000          .LONG   0
    4168                    
    4169                    
    4170 00007310           MEN_DETAIL
    4171 00007310 00000000!         .LONG   RD7FONT ;FONT
    4172 00007330 00000000!         .LONG   STRCNRM ;CENTER PLEASE
    4173 00007350 0000a990"         .LONG   MESSPAT ;TITLE
    4174 00007370     0505          .WORD   COLOR_YELLOW    ;COLOR OF TITLE
    4175 00007380     00c8          .WORD   200             ;UL X       (CENTER IT!)
    4176 00007390     00e0          .WORD   224             ;UL Y
    4177 000073a0     000c          .WORD   12              ;VERTICAL SPACING
    4178 000073b0     0707          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
    4179 000073c0     000a          .WORD   10              ;HEIGHT OF SELECTION BAR
    4180 000073d0     ffff          .WORD   -1              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4181 000073e0     0006          .WORD   BAR_DX  ;EXTRA X ON EACH SIDE.
    4182 000073f0     009d          .WORD   157             ;WIDTH OF BAR!
    4183 00007400     3d3d          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4184 00007410 00009e80"         .LONG   MESS_CLCOIN,0,NO_HELP           ;Clr coins
    4185 00007470 00009600"         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;RETURN TO MAIN MENU
    4186 000074d0 00000000          .LONG   0
    4187                    
    4188                    
    4189 000074f0 00000000! MEN_YN  .LONG    RD7FONT        ;FONT
    4190 00007510 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    4191 00007530 000096a0"         .LONG    MESSDIAG       ;TITLE
    4192 00007550     0303          .WORD    COLOR_RED      ;COLOR OF TITLE
    4193 00007560     00c8          .WORD    200            ;UL X
    4194 00007570     00a6          .WORD    166            ;UL Y
    4195 00007580     0013          .WORD    19             ;VERTICAL SPACING
    4196 00007590     0505          .WORD    COLOR_YELLOW   ;COLOR WHEN NOT SELECTED
    4197 000075a0     0010          .WORD    16             ;HEIGHT OF SELECTION BAR
    4198 000075b0     fffc          .WORD    -4             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4199 000075c0     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    4200 000075d0     004e          .WORD    78             ;WIDTH OF BAR!  (A LITTLE FATTER)
    4201 000075e0     3d3d          .WORD    COLOR_DECAY    ;TEXT COLOR OF SELECTED ITEM
    4202 000075f0 000093d8"         .LONG    MESS_YES,0,NO_HELP
    4203 00007650 00009400"         .LONG    MESS_NO,0,NO_HELP
    4204 000076b0 00000000          .LONG    0
    4205                    
    4206                    
    4207 000076d0 00000000! MEN_AP1 .LONG    RD7FONT        ;FONT
    4208 000076f0 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    4209 00007710 0000a990"         .LONG    MESSPAT        ;TITLE
    4210 00007730     0505          .WORD    ROBO_YELLOW    ;COLOR OF TITLE
    4211 00007740     00c8          .WORD    200            ;UL X       (CENTER IT!)
    4212 00007750     00e2          .WORD    226            ;UL Y
    4213 00007760     000c          .WORD    12             ;VERTICAL SPACING
    4214 00007770     0707          .WORD    COLOR_BLUE     ;COLOR WHEN NOT SELECTED
    4215 00007780     000a          .WORD    10             ;HEIGHT OF SELECTION BAR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   96

    4216 00007790     ffff          .WORD    -1             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4217 000077a0     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    4218 000077b0     009d          .WORD    157            ;WIDTH OF BAR!
    4219 000077c0     3d3d          .WORD    ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4220 000077d0 00009420"         .LONG    MESS_TOPAGE2,0,NO_HELP         ;DETAILED SECTION
    4221 00007830 00009600"         .LONG    MESS_MM,FORCE_MAIN,NO_HELP;RETURN TO MAIN MENU
    4222 00007890 00000000          .LONG    0
    4223                    
    4224 000078b0 00000000! MEN_AP2 .LONG    RD7FONT        ;FONT
    4225 000078d0 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    4226 000078f0 0000a990"         .LONG    MESSPAT        ;TITLE
    4227 00007910     0505          .WORD    ROBO_YELLOW    ;COLOR OF TITLE
    4228 00007920     00c8          .WORD    200            ;UL X       (CENTER IT!)
    4229 00007930     00e2          .WORD    226            ;UL Y
    4230 00007940     000c          .WORD    12             ;VERTICAL SPACING
    4231 00007950     0707          .WORD    COLOR_BLUE     ;COLOR WHEN NOT SELECTED
    4232 00007960     000a          .WORD    10             ;HEIGHT OF SELECTION BAR
    4233 00007970     ffff          .WORD    -1             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4234 00007980     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    4235 00007990     009d          .WORD    157            ;WIDTH OF BAR!
    4236 000079a0     3d3d          .WORD    ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4237 000079b0 00009420"         .LONG    MESS_TOPAGE2,0,NO_HELP         ;DETAILED SECTION
    4238 00007a10 000094a0"         .LONG    MESS_BACKP1,0,NO_HELP          ;DETAILED SECTION
    4239 00007a70 00000000          .LONG    0
    4240                    
    4241 00007a90 00000000! MEN_AP3 .LONG    RD7FONT        ;FONT
    4242 00007ab0 00000000!         .LONG    STRCNRM        ;CENTER PLEASE
    4243 00007ad0 0000a990"         .LONG    MESSPAT        ;TITLE
    4244 00007af0     0505          .WORD    ROBO_YELLOW    ;COLOR OF TITLE
    4245 00007b00     00c8          .WORD    200            ;UL X       (CENTER IT!)
    4246 00007b10     00e2          .WORD    226            ;UL Y
    4247 00007b20     000c          .WORD    12             ;VERTICAL SPACING
    4248 00007b30     0707          .WORD    COLOR_BLUE     ;COLOR WHEN NOT SELECTED
    4249 00007b40     000a          .WORD    10             ;HEIGHT OF SELECTION BAR
    4250 00007b50     ffff          .WORD    -1             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4251 00007b60     0006          .WORD    BAR_DX         ;EXTRA X ON EACH SIDE.
    4252 00007b70     009d          .WORD    157            ;WIDTH OF BAR!
    4253 00007b80     3d3d          .WORD    ROBO_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4254 00007b90 00009600"         .LONG    MESS_MM,FORCE_MAIN,NO_HELP;RETURN TO MAIN MENU
    4255 00007bf0 000094a0"         .LONG    MESS_BACKP1,0,NO_HELP          ;DETAILED SECTION
    4256 00007c50 00000000          .LONG    0
    4257                    
    4258                    
    4259 00007c70           MEN_SOUNDTEST
    4260 00007c70 00000000!         .LONG   RD7FONT ;FONT
    4261 00007c90 00000000!         .LONG   STRCNRM ;CENTER PLEASE
    4262 00007cb0 00009120"         .LONG   MESS_SNDTST0    ;TITLE
    4263 00007cd0     0505          .WORD   ROBO_YELLOW     ;COLOR OF TITLE
    4264 00007ce0     00c8          .WORD   200             ;UL X       (CENTER IT!)
    4265 00007cf0     0057          .WORD   MENU_Y-3        ;UL Y
    4266 00007d00     0014          .WORD   20              ;VERTICAL SPACING
    4267 00007d10     0303          .word   ROBO_RED        ;colour when not selected
    4268 00007d20     0010          .WORD   16              ;HEIGHT OF SELECTION BAR
    4269 00007d30     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4270 00007d40     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   97

    4271 00007d50     00c6          .WORD   192+6           ;WIDTH OF BAR!
    4272 00007d60     3d3d          .WORD   ROBO_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4273 00007d70 000091a8"         .long   MESS_SNDTST1,DO_GENTEST,NO_HELP
    4274 00007dd0 00009210"         .long   MESS_SNDTST2,DO_PLAYSOUNDS,NO_HELP
    4275 00007e30 00009270"         .long   MESS_SNDTST3,0,NO_HELP
    4276 00007e90 00009338"         .long   MESS_SNDTST4,FORCE_MAIN,NO_HELP
    4277 00007ef0 00000000          .LONG   0
    4278                    
    4279                    
    4280 00007f10           DIAG_HELP
    4281 00007f10     0000          .WORD   0               ;CENTER JUSTIFY
    4282 00007f20     0707          .WORD   COLOR_BLUE      ;COLOR
    4283 00007f30     0006          .WORD   6               ;# ENTRIES
    4284 00007f40 0000a7a0"         .LONG   MESS_SWTEST
    4285 00007f60 0000a800"         .long   diptst_mess
    4286 00007f80 0000a880"         .LONG   MESS_CPUTEST
    4287 00007fa0 0000a900"         .LONG   M_STEST
    4288 00007fc0 0000a990"         .LONG   MESS_PATTERNS
    4289 00007fe0 0000a280"         .LONG   U_BURNIN
    4290                    
    4291 00008000           COIN_HELP
    4292 00008000     0000          .WORD   0               ;CENTER JUSTIFY
    4293 00008010     0707          .WORD   COLOR_BLUE      ;COLOR
    4294 00008020     0003          .WORD   3               ;2 ENTRIES
    4295 00008030 000099f0"         .LONG   CH_0
    4296 00008050 00009a60"         .LONG   CH_1
    4297 00008070 00009ac0"         .LONG   CH_2
    4298                    
    4299 00008090           AUDIT_HELP
    4300 00008090     0000          .WORD   0               ;CENTER JUSTIFY
    4301 000080a0     0707          .WORD   COLOR_BLUE      ;COLOR
    4302 000080b0     0002          .WORD   2               ;2 ENTRIES
    4303 000080c0 00009b50"         .LONG   AH_1
    4304 000080e0 00009ba0"         .LONG   AH_2
    4305                    
    4306 00008100           ADJUST_HELP
    4307 00008100     0000          .WORD   0               ;CENTER JUSTIFY
    4308 00008110     0707          .WORD   COLOR_BLUE      ;COLOR
    4309 00008120     0003          .WORD   3               ;3 ENTRIES
    4310 00008130 00009c20"         .LONG   AD_1
    4311 00008150 00009c90"         .LONG   AD_2
    4312 00008170 00009d10"         .LONG   AD_3
    4313                    
    4314 00008190           UTIL_HELP
    4315 00008190     0000          .WORD   0               ;CENTER JUSTIFY
    4316 000081a0     0707          .WORD   COLOR_BLUE      ;COLOR
    4317 000081b0     0006          .WORD   6               ;6 ENTRIES
    4318 000081c0 00009d90"         .LONG   U_CLR_CRED
    4319 000081e0 00009e80"         .LONG   U_CLR_COIN
    4320 00008200 00009f20"         .LONG   U_CLR_AUD
    4321 00008220 0000a070"         .LONG   U_HSRESET
    4322 00008240 00009fb0"         .LONG   U_CLRRECS
    4323 00008260 0000a420"         .LONG   U_FACTORY
    4324                    
    4325 00008280           VOL_HELP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   98

    4326 00008280     0000          .WORD   0               ;CENTER JUSTIFY
    4327 00008290     0707          .WORD   COLOR_BLUE      ;COLOR
    4328 000082a0     0002          .WORD   2               ;2 ENTRIES
    4329 000082b0 0000a190"         .LONG   MESS_ATV
    4330 000082d0 0000a220"         .LONG   MESS_OTG
    4331                    
    4332 000082f0           EXIT_HELP
    4333 000082f0     0000          .WORD   0               ;CENTER JUSTIFY
    4334 00008300     0707          .WORD   COLOR_BLUE      ;COLOR
    4335 00008310     0001          .WORD   1               ;1 ENTRY
    4336 00008320 0000a740"         .LONG   U_END
    4337                    
    4338                    
    4339                    
    4340 00008340           CLCRED_HELP
    4341 00008340     0000          .WORD   0               ;CENTER JUSTIFY
    4342 00008350     0707          .WORD   COLOR_BLUE      ;COLOR
    4343 00008360     0003          .WORD   3               ;# entries
    4344 00008370 0000b5c0"         .LONG   MEH_CLCRED1
    4345 00008390 0000b620"         .LONG   MEH_CLCRED2
    4346 000083b0 0000b6a0"         .LONG   MEH_CLCRED3
    4347                    
    4348 000083d0           CLCOIN_HELP
    4349 000083d0     0000          .WORD   0               ;CENTER JUSTIFY
    4350 000083e0     0707          .WORD   COLOR_BLUE      ;COLOR
    4351 000083f0     0004          .WORD   4               ;# entries
    4352 00008400 0000b710"         .LONG   MEH_CLCOIN1
    4353 00008420 0000b790"         .LONG   MEH_CLCOIN2
    4354 00008440 0000b800"         .LONG   MEH_CLCOIN3
    4355 00008460 0000b870"         .LONG   MEH_CLCOIN4
    4356                    
    4357 00008480           CLAUD_HELP
    4358 00008480     0000          .WORD   0               ;CENTER JUSTIFY
    4359 00008490     0707          .WORD   COLOR_BLUE      ;COLOR
    4360 000084a0     0002          .WORD   2               ;# entries
    4361 000084b0 0000b8e0"         .LONG   MEH_CLAUD1
    4362 000084d0 0000b960"         .LONG   MEH_CLAUD2
    4363                    
    4364 000084f0           CLPLRECS_HELP
    4365 000084f0     0000          .WORD   0               ;CENTER JUSTIFY
    4366 00008500     0707          .WORD   COLOR_BLUE      ;COLOR
    4367 00008510     0002          .WORD   2               ;# entries
    4368 00008520 0000b9c0"         .long   MEH_CLPLRECS1
    4369 00008540 0000ba30"         .long   MEH_CLPLRECS2
    4370                    
    4371 00008560           HSRES_HELP
    4372 00008560     0000          .WORD   0               ;CENTER JUSTIFY
    4373 00008570     0707          .WORD   COLOR_BLUE      ;COLOR
    4374 00008580     0003          .WORD   3               ;# entries
    4375 00008590 0000ba90"         .LONG   MEH_RESHS1
    4376 000085b0 0000bb20"         .LONG   MEH_RESHS2
    4377 000085d0 0000bbb0"         .LONG   MEH_RESHS3
    4378                    
    4379 000085f0           DEF_ADJ_HELP
    4380 000085f0     0000          .WORD   0               ;CENTER JUSTIFY
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE   99

    4381 00008600     0707          .WORD   COLOR_BLUE      ;COLOR
    4382 00008610     0004          .WORD   4               ;# entries
    4383 00008620 0000bc30"         .LONG   MEH_DEFA1
    4384 00008640 0000bca0"         .LONG   MEH_DEFA2
    4385 00008660 0000bd20"         .LONG   MEH_DEFA3
    4386 00008680 0000bd90"         .LONG   MEH_DEFA4
    4387                    
    4388 000086a0           FACSET_HELP
    4389 000086a0     0000          .WORD   0               ;CENTER JUSTIFY
    4390 000086b0     0707          .WORD   COLOR_BLUE      ;COLOR
    4391 000086c0     0004          .WORD   4               ;# entries
    4392 000086d0 0000be00"         .LONG   MEH_FAC1
    4393 000086f0 0000be90"         .LONG   MEH_FAC2
    4394 00008710 0000bf50"         .LONG   MEH_FAC3
    4395 00008730 0000bfd0"         .LONG   MEH_FAC4
    4396                    
    4397 00008750           OPMSG_HELP
    4398 00008750     0000          .word   0               ;CENTER JUSTIFY
    4399 00008760     0707          .word   COLOR_BLUE      ;COLOR
    4400 00008770     0003          .word   3               ;# entries
    4401 00008780 0000a5f0"         .long   opmsgh1_s
    4402 000087a0 0000a680"         .long   opmsgh2_s
    4403 000087c0 0000a6e0"         .long   opmsgh3_s
    4404                    
    4405                    
    4406                    
    4407              00be  SIY0    equ     190
    4408              00d4  SIY1    equ     212
    4409              00e0  SIY2    equ     224
    4410              00ec  SIY3    equ     236
    4411                    
    4412 000087e0           SND_INST
    4413 000087e0                    MESS_MAC  RD7FONT,SPACING07,200,SIY1,ROBO_WHITE,STRCNRM,0
    4414 00008880       55          .STRING   "UP AND DOWN TO SELECT SOUND",0,1
    4415 00008970                   .EVEN
    4416 00008970                    MESS_MAC  RD7FONT,SPACING07,200,SIY2,ROBO_WHITE,STRCNRM,0
    4417 00008a10       50          .STRING   "PRESS ACTION BUTTON TO PLAY",0,1
    4418 00008b00                   .EVEN
    4419 00008b00                    MESS_MAC  RD7FONT,SPACING07,200,SIY3,ROBO_WHITE,STRCNRM,0
    4420 00008ba0       50          .STRING   "PRESS START BUTTON TO EXIT",0,0
    4421                    
    4422 00008c80           SND_SETUP MESS_MAC  RD15FONT,SPACING20,200,SIY0,ROBO_WHITE,STRCNRM,0
    4423                    
    4424 00008d20 00008e20" sounds_tab      .long   SND_ST0,SND_ST1,SND_ST2,SND_ST3
    4425 00008da0 00008f40"                 .long   SND_ST4,SND_ST5,SND_ST6,SND_ST7
    4426                    
    4427 00008e20       46  SND_ST0 .string "FACE HIT",0
    4428 00008e68       57  SND_ST1 .string "WHOOSH",0
    4429 00008ea0       48  SND_ST2 .string "HARD HIT",0
    4430 00008ee8       4c  SND_ST3 .string "LONG GRUNT",0
    4431 00008f40       53  SND_ST4 .string "SHORT GRUNT",0
    4432 00008fa0       44  SND_ST5 .string "DOINK LAUGH",0
    4433 00009000       44  SND_ST6 .string "DOINK YELL",0
    4434 00009058       4d  SND_ST7 .string "MR FUJI",0
    4435                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  100

    4436 000090a0                   .even
    4437                    
    4438 000090a0           TEST_SOUND_TAB
    4439 000090a0     0080          .word   080h,0B4h,0C7h,0DDh,114h,226h,230h,6528
    4440                    
    4441 00009120       53  MESS_SNDTST0    .string "SOUND BOARD TEST",0
    4442 000091a8       47  MESS_SNDTST1    .string "GENERAL TEST",0
    4443 00009210       50  MESS_SNDTST2    .string "PLAY SOUNDS",0
    4444 00009270       42  MESS_SNDTST3    .string "BACK TO DIAGNOSTICS MENU",0
    4445 00009338       52  MESS_SNDTST4    .string "RETURN TO MAIN MENU",0
    4446                    
    4447 000093d8           MESS_YES
    4448 000093d8       59          .byte    "YES",0
    4449 00009400                   .EVEN
    4450                    
    4451 00009400       4e  MESS_NO .byte    "NO",0
    4452 00009420                   .EVEN
    4453                    
    4454                    
    4455 00009420           MESS_TOPAGE2
    4456 00009420       4e           .byte   "NEXT AUDIT PAGE"
    4457 00009498       00           .BYTE           0
    4458 000094a0                    .EVEN
    4459                    
    4460 000094a0           MESS_BACKP1
    4461 000094a0       50           .byte   "PREVIOUS AUDIT PAGE"
    4462 00009538       00           .BYTE           0
    4463 00009540                    .EVEN
    4464                    
    4465 00009540           MESS_ANY
    4466 00009540       41           .byte   "ANY BUTTON TO CONTINUE"
    4467 000095f0       00           .BYTE           0
    4468 00009600                    .EVEN
    4469                    
    4470 00009600           MESS_MM
    4471 00009600       52           .byte   "RETURN TO MAIN MENU"
    4472 00009698       00           .BYTE           0
    4473 000096a0                    .EVEN
    4474                    
    4475 000096a0           MESSDIAG                                ;THIS IS TITLE OF PAGE
    4476 000096a0           MESS_DIAG
    4477 000096a0       44           .byte   "DIAGNOSTIC TESTS"
    4478 00009720       00           .BYTE     0
    4479 00009730                    .EVEN
    4480 00009730           MESS_COIN_AUD
    4481 00009730       43           .byte   "COIN BOOKKEEPING"
    4482 000097b0       00           .BYTE     0
    4483 000097c0                    .EVEN
    4484 000097c0           MESS_GAME_AUD
    4485 000097c0       47           .byte   "GAME AUDITS"
    4486 00009818       00           .BYTE     0
    4487 00009820                    .EVEN
    4488                    
    4489 00009820           MESS_GAME_ADJ
    4490 00009820       47           .byte   "GAME ADJUSTMENT"
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  101

    4491 00009898       00           .BYTE     0
    4492 000098a0                    .EVEN
    4493 000098a0           MESS_UTIL
    4494 000098a0       55           .byte   "UTILITIES"
    4495 000098e8       00           .BYTE     0
    4496 000098f0                    .EVEN
    4497                    
    4498 000098f0           MESS_VOL
    4499 000098f0       56          .byte   "VOLUME ADJUST"
    4500 00009958       00          .BYTE      0
    4501 00009960                   .EVEN
    4502                    
    4503 00009960           MESS_EXIT
    4504 00009960       45           .byte   "EXIT TO GAME OVER"
    4505 000099e8       00           .BYTE     0
    4506 000099f0                    .EVEN
    4507                    
    4508 000099f0       56  CH_0     .byte   "VIEW COINBOX"
    4509 00009a50       00           .BYTE   0
    4510 00009a60                    .EVEN
    4511 00009a60       54  CH_1     .byte   "TOTALS AND"
    4512 00009ab0       00           .BYTE   0
    4513 00009ac0                    .EVEN
    4514 00009ac0       47  CH_2     .byte   "GAMEPLAY COUNTERS"
    4515 00009b48       00           .BYTE   0
    4516 00009b50                    .EVEN
    4517                    
    4518 00009b50       56  AH_1     .byte   "VIEW GAME"
    4519 00009b98       00           .BYTE   0
    4520 00009ba0                    .EVEN
    4521 00009ba0       50  AH_2     .byte   "PLAY STATISTICS"
    4522 00009c18       00           .BYTE   0
    4523 00009c20                    .EVEN
    4524                    
    4525 00009c20       4d  AD_1     .byte   "MAKE CHANGES"
    4526 00009c80       00           .BYTE   0
    4527 00009c90                    .EVEN
    4528 00009c90       54  AD_2     .byte   "TO PRICING AND"
    4529 00009d00       00           .BYTE   0
    4530 00009d10                    .EVEN
    4531 00009d10       47  AD_3     .byte   "GAME DIFFICULTY"
    4532 00009d88       00           .BYTE   0
    4533 00009d90                    .EVEN
    4534                    
    4535 00009d90           MESS_CLCRED
    4536 00009d90       43  U_CLR_CRED       .byte "CLEAR CREDITS"
    4537 00009df8       00           .BYTE   0
    4538 00009e00                    .EVEN
    4539                    
    4540 00009e00       43  MESS_CCCONF      .byte "CREDITS CLEARED"
    4541 00009e78       00           .BYTE   0
    4542 00009e80                    .EVEN
    4543                    
    4544 00009e80           MESS_CLCOIN
    4545 00009e80       43  U_CLR_COIN       .byte "CLEAR COIN COUNTERS"
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  102

    4546 00009f18       00           .BYTE   0
    4547 00009f20                    .EVEN
    4548                    
    4549 00009f20           MESS_CLAUD
    4550 00009f20       43  U_CLR_AUD        .byte "CLEAR GAME AUDITS"
    4551 00009fa8       00           .BYTE   0
    4552 00009fb0                    .EVEN
    4553                    
    4554 00009fb0           MESS_CLPLRECS
    4555 00009fb0           U_CLRRECS
    4556 00009fb0       43          .string "CLEAR PLAYER STATISTICS",0
    4557                    
    4558 0000a070           MESS_HSRESET
    4559 0000a070       52  U_HSRESET        .byte "RESET HIGH SCORES"
    4560 0000a0f8       00           .BYTE   0
    4561 0000a100                    .EVEN
    4562                    
    4563 0000a100           MESS_HSRES
    4564 0000a100       52           .byte "RESET HIGH SCORES"
    4565 0000a188       00           .BYTE   0
    4566 0000a190                    .EVEN
    4567                    
    4568 0000a190           MESS_ATV
    4569 0000a190       41          .byte   "ADJUST THE VOLUME",0
    4570 0000a220                   .even
    4571 0000a220           MESS_OTG
    4572 0000a220       4f          .byte   "OF THE GAME",0
    4573 0000a280                   .even
    4574                    
    4575                    
    4576                    
    4577 0000a280       42  U_BURNIN        .byte "BURN-IN TEST",0
    4578 0000a2f0                   .even
    4579                    
    4580 0000a2f0       52  MESS_BURN       .byte "RUN BURN-IN TEST",0
    4581 0000a380                   .even
    4582                    
    4583 0000a380           MESS_DEF_ADJ    TXTLINE "DEFAULT ADJUSTMENTS"
    4584 0000a420           U_FACTORY       TXTLINE "FACTORY SETTINGS"
    4585 0000a4b0           MESS_FACSET     TXTLINE "FULL FACTORY RESTORE"
    4586                    
    4587 0000a560           opmsg_s         TXTLINE "OPERATOR MESSAGE"
    4588 0000a5f0           opmsgh1_s       TXTLINE "ENTER AN OPERATOR"
    4589 0000a680           opmsgh2_s       TXTLINE "MESSAGE TO"
    4590 0000a6e0           opmsgh3_s       TXTLINE "THE PLAYERS"
    4591                    
    4592                    
    4593 0000a740       45  U_END   .byte "END TESTING",0
    4594 0000a7a0                   .even
    4595                    
    4596 0000a7a0       53  MESS_SWTEST     .byte "SWITCH TEST",0
    4597 0000a800                   .even
    4598 0000a800       44  diptst_mess     .byte "DIP SWITCH TEST",0
    4599 0000a880                   .even
    4600 0000a880       43  MESS_CPUTEST    .byte "CPU BOARD TEST",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  103

    4601 0000a900                   .even
    4602 0000a900       53  M_STEST .byte   "SOUND BOARD TEST",0
    4603 0000a990                   .even
    4604                    
    4605 0000a990           MESSPAT                 ;HEADER TITLE
    4606 0000a990       4d  MESS_PATTERNS   .byte "MONITOR PATTERNS",0
    4607 0000aa20                   .EVEN
    4608                    
    4609 0000aa20       52  MESS_RED        .byte "RED SCREEN",0
    4610 0000aa80                   .EVEN
    4611 0000aa80       47  MESS_GREEN       .byte "GREEN SCREEN",0
    4612 0000aaf0                   .EVEN
    4613 0000aaf0       42  MESS_BLUE        .byte "BLUE SCREEN",0
    4614 0000ab50                   .EVEN
    4615 0000ab50       43  MESS_BARS        .byte "COLOR BARS",0
    4616 0000abb0                   .EVEN
    4617 0000abb0       43  MESS_CROSS       .byte "CROSSHATCH  PATTERN",0
    4618 0000ac50                   .EVEN
    4619 0000ac50       42  MESS_DIAGM       .byte "BACK TO DIAGNOSTICS MENU",0
    4620 0000ad20                   .EVEN
    4621                    
    4622                            ;0 = END OF STRING...1 = MORE MESSAGES!
    4623                    
    4624 0000ad20           MESS_RESET
    4625 0000ad20                   MESS_MAC  RD7FONT,SPACING20,200,80,ROBO_RED,STRCNRM,0
    4626 0000adc0           MESS_FACFAIL
    4627 0000adc0       46          .byte  "FAILURE IN CMOS RAM",0,0
    4628 0000ae70                   .EVEN
    4629                    
    4630 0000ae70           MESS_FFSCONF
    4631 0000ae70           MESS_FAC MESS_MAC RD7FONT,SPACING20,200,96,COLOR_WHITE,STRCNRM,0
    4632 0000af10           MESS_DEFCONF
    4633 0000af10       41          .byte   "ADJUSTMENTS RESTORED.",0,1
    4634 0000afd0                   .EVEN
    4635                    
    4636 0000afd0                   MESS_MAC RD7FONT,SPACING20,200,112,COLOR_YELLOW,STRCNRM,0
    4637 0000b070           MESS_CCNCONF
    4638 0000b070       43          .byte  "COIN COUNTERS CLEARED.",0,1
    4639 0000b130                   .EVEN
    4640                    
    4641 0000b130                   MESS_MAC RD7FONT,SPACING20,200,128,COLOR_BLUE,STRCNRM,0
    4642 0000b1d0           MESS_CAUDCONF
    4643 0000b1d0       47          .byte  "GAME AUDITS CLEARED.",0,1
    4644 0000b280                   .EVEN
    4645                    
    4646 0000b280                   MESS_MAC RD7FONT,SPACING20,200,144,COLOR_RED,STRCNRM,0
    4647 0000b320           MESS_HSRCONF
    4648 0000b320       48          .byte  "HIGH SCORE TABLE RESET.",0,1
    4649 0000b3f0                   .EVEN
    4650                    
    4651 0000b3f0                   MESS_MAC RD7FONT,SPACING20,200,160,COLOR_CYAN,STRCNRM,0
    4652 0000b490           MESS_CLPLRECSCONF
    4653 0000b490       50          .string "PLAYER STATISTICS CLEARED.",0,0
    4654 0000b570                   .EVEN
    4655                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  104

    4656 0000b570           MESS_CANCELLED
    4657 0000b570       43          .byte "CANCELLED",0
    4658 0000b5c0                   .EVEN
    4659                    
    4660              00c5  CIN_X   EQU     (TIT_ULX+TIT_LRX)/2
    4661              00a3  CR_X    EQU     CIN_X-34
    4662              0056  CIN_Y   EQU     86
    4663                    
    4664              0064  CIY1    EQU     CIN_Y+14
    4665              0073  CIY2    EQU     CIY1+15
    4666              008c  CIY3    EQU     CIY2+25
    4667              00a5  CIY4    EQU     CIY3+25
    4668                    
    4669 0000b5c0       52  MEH_CLCRED1      .byte "REMOVE ANY",0
    4670 0000b620                            .EVEN
    4671 0000b620       50  MEH_CLCRED2      .byte "POSTED CREDITS",0
    4672 0000b6a0                            .EVEN
    4673 0000b6a0       46  MEH_CLCRED3      .byte "FROM THE GAME",0
    4674 0000b710                            .EVEN
    4675                    
    4676 0000b710       43  MEH_CLCOIN1      .byte "CLEAR OUT PAID",0
    4677 0000b790                            .EVEN
    4678 0000b790       43  MEH_CLCOIN2      .byte "CREDITS TOTAL",0
    4679 0000b800                            .EVEN
    4680 0000b800       41  MEH_CLCOIN3      .byte "AND THE COIN",0
    4681 0000b870                            .EVEN
    4682 0000b870       53  MEH_CLCOIN4      .byte "SLOT COUNTERS",0
    4683 0000b8e0                            .EVEN
    4684                    
    4685 0000b8e0       43  MEH_CLAUD1       .byte "CLEAR GAMEPLAY",0
    4686 0000b960                            .EVEN
    4687 0000b960       53  MEH_CLAUD2       .byte "STATISTICS",0
    4688 0000b9c0                            .EVEN
    4689                    
    4690 0000b9c0       43  MEH_CLPLRECS1   .string "CLEAR PLAYER",0
    4691 0000ba30                           .even
    4692 0000ba30       53  MEH_CLPLRECS2   .string "STATISTICS",0
    4693 0000ba90                           .even
    4694                    
    4695 0000ba90       52  MEH_RESHS1       .byte "RESET HIGH SCORE",0
    4696 0000bb20                            .EVEN
    4697 0000bb20       54  MEH_RESHS2       .byte "TABLE TO FACTORY",0
    4698 0000bbb0                            .EVEN
    4699 0000bbb0       44  MEH_RESHS3       .byte "DEFAULT VALUES",0
    4700 0000bc30                            .EVEN
    4701                    
    4702 0000bc30       53  MEH_DEFA1        .byte "SET ALL GAME",0
    4703 0000bca0                            .EVEN
    4704 0000bca0       41  MEH_DEFA2        .byte "ADJUSTMENTS TO",0
    4705 0000bd20                            .EVEN
    4706 0000bd20       54  MEH_DEFA3        .byte "THEIR FACTORY",0
    4707 0000bd90                            .EVEN
    4708 0000bd90       44  MEH_DEFA4        .byte "DEFAULT VALUE",0
    4709 0000be00                            .EVEN
    4710                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  105

    4711                    
    4712 0000be00           MEH_FAC1
    4713 0000be00       52          .STRING "RESET ALL AUDITS,",0
    4714 0000be90                   .EVEN
    4715 0000be90           MEH_FAC2
    4716 0000be90       43          .STRING "COUNTERS, ADJUSTMENTS,",0
    4717 0000bf50                   .EVEN
    4718 0000bf50           MEH_FAC3
    4719 0000bf50       48          .STRING "HIGH SCORES AND",0
    4720 0000bfd0                   .EVEN
    4721 0000bfd0           MEH_FAC4
    4722 0000bfd0       54          .STRING "THE PLAYER STATISTICS.",0
    4723 0000c090                   .EVEN
    4724                    
    4725                    
    4726 0000c090           MESSMAIN
    4727 0000c090       57          .byte   "WRESTLEMANIA TEST MENU",0
    4728 0000c150                   .even
    4729                    
    4730 0000c150           MESSUTIL
    4731 0000c150       55          .byte   "UTILITY MENU",0
    4732 0000c1c0                   .even
    4733                    
    4734                    
    4735                    
    4736 0000c1c0           CSELCT
    4737 0000c1c0     0001          .WORD   1,0,1,0,4,1,0,0,2,2     ;WILLY PRICING
    4738 0000c260     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    4739 0000c270     0001          .WORD   1                       ;DISPLAY COIN FRACTIONS
    4740 0000c280     0001          .WORD   1,0,1,0,4                       ;COIN VALUE
    4741 0000c2d0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ;CHARACTER STRINGS.
    4742 0000c310 0001aa70"         .LONG   OCOP                    ;ONE COIN ONE PLAY
    4743 0000c330 00013a18"         .LONG   USA_1                   ;TITLE OF COIN MODE
    4744 0000c350 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4745 0000c370     0000          .WORD   SHOW_NONE               ;NO PRICING LINE ON 2/1
    4746 0000c380 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4747                    
    4748 0000c3a0     0001          .WORD   1,0,1,0,4,1,0,0,2,1     ;WILLY PRICING
    4749 0000c440     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    4750 0000c450     0001          .WORD   1                       ;DISPLAY COIN FRACTIONS
    4751 0000c460     0001          .WORD   1,0,1,0,4                       ;COIN VALUE
    4752 0000c4b0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ;CHARACTER STRINGS.
    4753 0000c4f0 0001aa70"         .LONG   OCOP                    ;ONE COIN ONE PLAY
    4754 0000c510 00013a50"         .LONG   USA_2                   ;TITLE OF COIN MODE
    4755 0000c530 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4756 0000c550     0000          .WORD   SHOW_NONE               ;NO PRICING LINE ON 2/1
    4757 0000c560 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4758                    
    4759                    
    4760                    
    4761 0000c580     0001          .WORD   1,0,1,0,4,1,0,0,1,1        ;WILLY PRICING
    4762 0000c620     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    4763 0000c630     0001          .WORD   1                               ;DISPLAY COIN FRACTIONS
    4764 0000c640     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4765 0000c690 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  106

    4766 0000c6d0 00000001          .LONG   CSM_LIST                         ;ONE COIN ONE PLAY
    4767 0000c6f0 00013a80"         .LONG   USA_3                    ;TITLE OF COIN MODE
    4768 0000c710 00014c70"         .LONG   Q_Q                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4769 0000c730     0000          .WORD   SHOW_NONE               ;NO PRICING LINE ON 2/1
    4770 0000c740 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4771                    
    4772                    
    4773 0000c760     0001          .WORD   1,0,1,0,4,2,4,0,1,1     ; WILLY PRICING
    4774 0000c800     0004          .WORD   4                       ; 4 COINS PER DOLLAR (FOR CALC)
    4775 0000c810     0001          .WORD   1                       ; DISPLAY COIN FRACTIONS
    4776 0000c820     0001          .WORD   1,0,1,0,4                       ; COIN VALUE
    4777 0000c870 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ; CHARACTER STRINGS.
    4778 0000c8b0 00000001          .LONG   CSM_LIST                ; PRINT THE 2 THE OP SEES
    4779 0000c8d0 00013ab0"         .LONG   USA_4                   ; TITLE OF COIN MODE
    4780 0000c8f0 00014cf0"         .LONG   DOLLAR_3                ; 1 COIN PER CREDIT (SERIES OF STRINGS)
    4781 0000c910     0003          .WORD   SHOW_2                  ; SHOW LINE 2
    4782 0000c920 000192d0"         .LONG   USA_QDQ                 ; QUARTER
    4783                                                                    
    4784                    
    4785                    
    4786                            .IF     FULLPRICE
    4787                    
    4788                    
    4789 0000c940     0003          .WORD   3,0,3,0,12,4,12,6,2,1    ;WILLY PRICING
    4790 0000c9e0     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    4791 0000c9f0     0000          .WORD   0                               ;NO COIN FRACTIONS
    4792 0000ca00     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4793 0000ca50 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    4794 0000ca90 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    4795 0000cab0 00013ae0"         .LONG   USA_5                    ;TITLE OF COIN MODE
    4796 0000cad0 00014d50"         .LONG   DOLLAR_4                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4797 0000caf0     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    4798 0000cb00 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4799                    
    4800 0000cb20     0001          .WORD   1,0,1,0,4,2,0,0,1,1     ; WILLY PRICING
    4801 0000cbc0     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    4802 0000cbd0     0001          .WORD   1                               ;DISPLAY COIN FRACTIONS
    4803 0000cbe0     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4804 0000cc30 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    4805 0000cc70 00000001          .LONG   CSM_LIST                         ;2 COINS PER PLAYER
    4806 0000cc90 00013b10"         .LONG   USA_6                    ;TITLE OF COIN MODE
    4807 0000ccb0 00014cb0"         .LONG   F_F_1S1C                 ;2 COINS PER CREDIT (SERIES OF STRINGS)
    4808 0000ccd0     0002          .WORD   SHOW_1                  ;SHOW LINE 1
    4809 0000cce0 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4810                    
    4811 0000cd00     0001          .WORD   1,0,1,0,4,2,4,0,1,1     ; WILLY PRICING
    4812 0000cda0     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    4813 0000cdb0     0000          .WORD   0                               ;DISPLAY COIN FRACTIONS
    4814 0000cdc0     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4815 0000ce10 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    4816 0000ce50 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    4817 0000ce70 00013b40"         .LONG   USA_7                    ;TITLE OF COIN MODE
    4818 0000ce90 00014e10"         .LONG   UFS3D                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4819 0000ceb0     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    4820 0000cec0 000192d0"         .LONG   USA_QDQ                 ;QUARTER
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  107

    4821                    
    4822 0000cee0     0003          .WORD   3,0,3,0,12,4,12,6,2,2    ;WILLY PRICING
    4823 0000cf80     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    4824 0000cf90     0000          .WORD   0                               ;NO COIN FRACTIONS
    4825 0000cfa0     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4826 0000cff0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    4827 0000d030 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    4828 0000d050 00013b70"         .LONG   USA_8                    ;TITLE OF COIN MODE
    4829 0000d070 00014e70"         .LONG   UFS4D                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4830 0000d090     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    4831 0000d0a0 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4832                    
    4833 0000d0c0     0001          .WORD   1,0,1,0,4,1,0,1,3,2      ;WILLY PRICING
    4834 0000d160     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    4835 0000d170     0000          .WORD   0                               ;NO COIN FRACTIONS
    4836 0000d180     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4837 0000d1d0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    4838 0000d210 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    4839 0000d230 00013ba0"         .LONG   USA_9                    ;TITLE OF COIN MODE
    4840 0000d250 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4841 0000d270     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    4842 0000d280 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4843                    
    4844 0000d2a0     0001          .WORD   1,0,1,0,4,1,0,1,3,3      ;WILLY PRICING
    4845 0000d340     0004          .WORD   4                               ;4 COINS PER DOLLAR (FOR CALC)
    4846 0000d350     0000          .WORD   0                               ;NO COIN FRACTIONS
    4847 0000d360     0001          .WORD   1,0,1,0,4                        ;COIN VALUE
    4848 0000d3b0 00013630"         .LONG   DOLLAR_LEAD,NULL_ST        ;CHARACTER STRINGS.
    4849 0000d3f0 00000001          .LONG   CSM_LIST                         ;PRINT THE 2 THE OP SEES
    4850 0000d410 00013bd0"         .LONG   USA_10                   ;TITLE OF COIN MODE
    4851 0000d430 00014c70"         .LONG   Q_Q             ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4852 0000d450     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    4853 0000d460 000192d0"         .LONG   USA_QDQ                 ;QUARTER
    4854                    
    4855                            .ENDIF
    4856 0000d480     0014          .WORD   20,2,5,1,20,5,0,0,2,2   ; L,C,R,4,U/C,U/B,MINUNITS
    4857 0000d520     0014          .WORD   20                      ; COINS/DOLLAR
    4858 0000d530     0001          .WORD   1                       ; DISPLAY FRACTIONS
    4859 0000d540     0014          .WORD   20,2,5,1,20             ; L,C,R,4
    4860 0000d590 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ; CHARACTER STRINGS.
    4861 0000d5d0 0001aba0"         .LONG   USA_ELECTRONIC          ; SPECIAL MESSAGE
    4862 0000d5f0 00013c10"         .LONG   USA_ELECTITLE           ; TITLE OF COIN MODE
    4863 0000d610 00014c10"         .LONG   USA_EL                  ; SETTINGS DESCRIPTION
    4864 0000d630     0003          .WORD   SHOW_2                  ; LINES TO SHOW ON
    4865 0000d640 00018dd0"         .LONG   USA_ESLOT               ; QUARTER
    4866                    
    4867 0000d660     0006          .WORD   6,0,30,0,0,5,0,0,2,2     ;WILLY PRICING
    4868 0000d700     0001          .WORD   1                        ;DMS HAVE NO FRACTIONS
    4869 0000d710     0000          .WORD   0                        ;DON'T DISPLAY COIN FRACTIONS
    4870 0000d720     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    4871 0000d770 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    4872 0000d7b0 00000001          .LONG   CSM_LIST
    4873 0000d7d0 00013d70"         .LONG   GERMAN_1                         ;TITLE OF COIN MODE
    4874 0000d7f0 00014f30"         .LONG   DM_6                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4875 0000d810     0003          .WORD   SHOW_2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  108

    4876 0000d820 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    4877                    
    4878              000c  G1SEL   EQU     ($-CSELCT)/CS_SIZE          ;COIN SELECT VALUE FOR GERMAN 1
    4879 0000d840     0006          .WORD   6,0,30,0,0,5,30,0,2,1           ;WILLY PRICING
    4880 0000d8e0     0001          .WORD   1                               ;DMS HAVE NO FRACTIONS
    4881 0000d8f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4882 0000d900     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    4883 0000d950 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    4884 0000d990 00000001          .LONG   CSM_LIST
    4885 0000d9b0 00013dc0"         .LONG   GERMAN_2                         ;TITLE OF COIN MODE
    4886 0000d9d0 00014f90"         .LONG   DM_7                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4887 0000d9f0     0003          .WORD   SHOW_2
    4888 0000da00 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    4889 0000da20     0007          .WORD   7,0,35,0,0,5,35,0,2,1           ;WILLY PRICING
    4890 0000dac0     0001          .WORD   1                               ;DMS HAVE NO FRACTIONS
    4891 0000dad0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4892 0000dae0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    4893 0000db30 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    4894 0000db70 00000001          .LONG   CSM_LIST
    4895 0000db90 00013e10"         .LONG   GERMAN_3                         ;TITLE OF COIN MODE
    4896 0000dbb0 00014ff0"         .LONG   DM_8                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4897 0000dbd0     0003          .WORD   SHOW_2
    4898 0000dbe0 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    4899 0000dc00     0001          .WORD   1,0,5,0,0,1,0,0,2,1        ;WILLY PRICING
    4900 0000dca0     0001          .WORD   1                               ;DMS HAVE NO FRACTIONS
    4901 0000dcb0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4902 0000dcc0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    4903 0000dd10 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    4904 0000dd50 00000001          .LONG   CSM_LIST
    4905 0000dd70 00013e60"         .LONG   GERMAN_4                         ;TITLE OF COIN MODE
    4906 0000dd90 00014ed0"         .LONG   DM_5                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4907 0000ddb0     0003          .WORD   SHOW_2
    4908 0000ddc0 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    4909                    
    4910 0000dde0     0006          .WORD   6,0,30,0,0,5,0,0,2,1     ;WILLY PRICING
    4911 0000de80     0001          .WORD   1                        ;DMS HAVE NO FRACTIONS
    4912 0000de90     0000          .WORD   0                        ;DON'T DISPLAY COIN FRACTIONS
    4913 0000dea0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    4914 0000def0 000136a0"         .LONG   NULL_ST,DM_TRAIL                 ;CHARACTER STRINGS.
    4915 0000df30 00000001          .LONG   CSM_LIST
    4916 0000df50 00013eb0"         .LONG   GERMAN_5                         ;TITLE OF COIN MODE
    4917 0000df70 00014f30"         .LONG   DM_6                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4918 0000df90     0003          .WORD   SHOW_2
    4919 0000dfa0 000193e0"         .LONG   GERMAN_15                       ;1 DM / 5 DM
    4920                    
    4921 0000dfc0     003c          .WORD   60,12,24,0,0,10,0,0,2,2 ; L,C,R,4,U/C,U/B,MINUNITS
    4922 0000e060     0001          .WORD   1                       ; COINS/DOLLAR
    4923 0000e070     0000          .WORD   0                       ; DISPLAY FRACTIONS
    4924 0000e080     0005          .WORD   5,1,2,0,0                       ; L,C,R,4
    4925 0000e0d0 000136a0"         .LONG   NULL_ST,DM_TRAIL        ;CHARACTER STRINGS.
    4926 0000e110 0001afc0"         .LONG   GERMAN_ELECTRONIC       ; SPECIAL MESSAGE
    4927 0000e130 00013cb0"         .LONG   GERMAN_ELECTITLE        ; TITLE OF COIN MODE
    4928 0000e150 00015050"         .LONG   DM112265                ; SETTINGS DESCRIPTION
    4929 0000e170     0004          .WORD   SHOW_3                  ; LINES TO SHOW ON
    4930 0000e180 00019000"         .LONG   GERMAN_ESLOT            ; QUARTER
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  109

    4931                    
    4932 0000e1a0     0002          .WORD   2,0,4,0,0,1,4,0,2,2             ; 2/5F    5/10F
    4933 0000e240     0001          .WORD   1                               ;1 FRANC PER FRANC
    4934 0000e250     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4935 0000e260     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    4936 0000e2b0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL             ;CHARACTER STRINGS.
    4937 0000e2f0 00000001          .LONG   CSM_LIST                        ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    4938 0000e310 00013f00"         .LONG   FRENCH_1                        ;TITLE OF COIN MODE
    4939 0000e330 00015250"         .LONG   FIVE_10                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4940 0000e350     0003          .WORD   SHOW_2
    4941 0000e360 000194e0"         .LONG   FRENCH510
    4942                    
    4943              0012  F1SEL   EQU     ($-CSELCT)/CS_SIZE          ;COIN SELECT VALUE FOR FRENCH 1
    4944                    
    4945 0000e380     0002          .WORD   2,0,4,0,0,1,0,0,2,1        ; 2/5F    4/10F
    4946 0000e420     0001          .WORD   1                               ;1 FRANC PER FRANC
    4947 0000e430     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4948 0000e440     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    4949 0000e490 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    4950 0000e4d0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    4951 0000e4f0 00013f50"         .LONG   FRENCH_2                         ;TITLE OF COIN MODE
    4952 0000e510 00015330"         .LONG   FOUR_10                 ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4953 0000e530     0003          .WORD   SHOW_2
    4954 0000e540 000194e0"         .LONG   FRENCH510
    4955 0000e560     0001          .WORD   1,0,2,0,0,1,2,0,2,1         ;1/5F  3/10F        
    4956 0000e600     0001          .WORD   1                               ;1 FRANC PER FRANC
    4957 0000e610     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4958 0000e620     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    4959 0000e670 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    4960 0000e6b0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    4961 0000e6d0 00013fa0"         .LONG   FRENCH_3                         ;TITLE OF COIN MODE
    4962 0000e6f0 00015410"         .LONG   THREE_10                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4963 0000e710     0003          .WORD   SHOW_2
    4964 0000e720 000194e0"         .LONG   FRENCH510
    4965 0000e740     0001          .WORD   1,0,2,0,0,1,0,0,2,1      ;1/5F  2/10F
    4966 0000e7e0     0001          .WORD   1                               ;1 FRANC PER FRANC
    4967 0000e7f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4968 0000e800     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    4969 0000e850 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    4970 0000e890 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    4971 0000e8b0 00013ff0"         .LONG   FRENCH_4                         ;TITLE OF COIN MODE
    4972 0000e8d0 000154f0"         .LONG   TWO_10                  ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4973 0000e8f0     0002          .WORD   SHOW_1
    4974 0000e900 000194e0"         .LONG   FRENCH510
    4975                    
    4976                            .IF     FULLPRICE
    4977                    
    4978 0000e920     0005          .WORD   5,0,10,0,0,2,20,0,2,1            ;2/5F  5/10F   11/20F
    4979 0000e9c0     0001          .WORD   1                               ;1 FRANC PER FRANC
    4980 0000e9d0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4981 0000e9e0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    4982 0000ea30 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    4983 0000ea70 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    4984 0000ea90 00014040"         .LONG   FRENCH_5                         ;TITLE OF COIN MODE
    4985 0000eab0 000152b0"         .LONG   FIVE_10_11                  ;1 COIN PER CREDIT (SERIES OF STRINGS)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  110

    4986 0000ead0     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    4987 0000eae0 000194e0"         .LONG   FRENCH510
    4988 0000eb00     0002          .WORD   2,0,4,0,0,1,8,0,2,1                ;2/5F        4/10F   9/20F
    4989 0000eba0     0001          .WORD   1                               ;1 FRANC PER FRANC
    4990 0000ebb0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    4991 0000ebc0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    4992 0000ec10 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    4993 0000ec50 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    4994 0000ec70 00014090"         .LONG   FRENCH_6                         ;TITLE OF COIN MODE
    4995 0000ec90 00015390"         .LONG   FOUR_10_9                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    4996 0000ecb0     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    4997 0000ecc0 000194e0"         .LONG   FRENCH510
    4998 0000ece0     0003          .WORD   3,0,6,0,0,2,12,0,2,1              ;1/5F  3/10F   7/20F
    4999 0000ed80     0001          .WORD   1                               ;1 FRANC PER FRANC
    5000 0000ed90     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5001 0000eda0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5002 0000edf0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5003 0000ee30 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5004 0000ee50 000140e0"         .LONG   FRENCH_7                         ;TITLE OF COIN MODE
    5005 0000ee70 00015470"         .LONG   THREE_10_7                  ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5006 0000ee90     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    5007 0000eea0 000194e0"         .LONG   FRENCH510
    5008 0000eec0     0001          .WORD   1,0,2,0,0,1,4,0,2,1                ;1/5F        2/10F  5/20F
    5009 0000ef60     0001          .WORD   1                               ;1 FRANC PER FRANC
    5010 0000ef70     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5011 0000ef80     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5012 0000efd0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5013 0000f010 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5014 0000f030 00014130"         .LONG   FRENCH_8                         ;TITLE OF COIN MODE
    5015 0000f050 00015550"         .LONG   TWO_10_5                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5016 0000f070     0004          .WORD   SHOW_3                  ;USE LINE 3 WHEN ONLY 1 WILL FIT
    5017 0000f080 000194e0"         .LONG   FRENCH510
    5018                    
    5019 0000f0a0     0002          .WORD   2,0,10,0,0,5,0,0,2,1              ;1/3X1F  2/5F
    5020 0000f140     0001          .WORD   1                               ;1 FRANC PER FRANC
    5021 0000f150     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5022 0000f160     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5023 0000f1b0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5024 0000f1f0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5025 0000f210 00014180"         .LONG   FRENCH_9                         ;TITLE OF COIN MODE
    5026 0000f230 000155d0"         .LONG   F1325                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5027 0000f250     0003          .WORD   SHOW_2                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    5028 0000f260 000195f0"         .LONG   FRENCH1F5F
    5029 0000f280     0003          .WORD   3,0,15,0,0,5,0,0,2,1              ;1/2X1F  3/5F
    5030 0000f320     0001          .WORD   1                               ;1 FRANC PER FRANC
    5031 0000f330     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5032 0000f340     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5033 0000f390 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5034 0000f3d0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5035 0000f3f0 000141d0"         .LONG   FRENCH_10                       ;TITLE OF COIN MODE
    5036 0000f410 000156b0"         .LONG   F1235                    ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5037 0000f430     0003          .WORD   SHOW_2                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    5038 0000f440 000195f0"         .LONG   FRENCH1F5F
    5039 0000f460     0002          .WORD   2,0,10,0,0,5,20,0,2,1            ;1/3X1F        2/5F  5/10F
    5040 0000f500     0001          .WORD   1                               ;1 FRANC PER FRANC
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  111

    5041 0000f510     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5042 0000f520     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5043 0000f570 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5044 0000f5b0 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5045 0000f5d0 00014220"         .LONG   FRENCH_11                       ;TITLE OF COIN MODE
    5046 0000f5f0 00015630"         .LONG   F13255                   ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5047 0000f610     0004          .WORD   SHOW_3                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    5048 0000f620 000195f0"         .LONG   FRENCH1F5F
    5049                    
    5050 0000f640     0003          .WORD   3,0,15,0,0,5,30,0,2,1            ;1/2X1F        3/5F  7/10F
    5051 0000f6e0     0001          .WORD   1                               ;1 FRANC PER FRANC
    5052 0000f6f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIONS
    5053 0000f700     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5054 0000f750 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5055 0000f790 00000001          .LONG   CSM_LIST                         ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    5056 0000f7b0 00014270"         .LONG   FRENCH_12                       ;TITLE OF COIN MODE
    5057 0000f7d0 00015710"         .LONG   F12355                   ;1 COIN PER CREDIT (SERIES OF STRINGS)
    5058 0000f7f0     0004          .WORD   SHOW_3                  ;USE LINE 2 WHEN ONLY 1 WILL FIT
    5059 0000f800 000195f0"         .LONG   FRENCH1F5F
    5060                    
    5061                            .ENDIF
    5062                    
    5063 0000f820     0001          .WORD   1,15,6,0,0,3,0,0,2,2    ; L,C,R,4,U/C,U/B,MINUNITS
    5064 0000f8c0     0001          .WORD   1                       ; COINS/DOLLAR
    5065 0000f8d0     0000          .WORD   0                       ;DON'T DISPLAY COIN FRACTIONS
    5066 0000f8e0     0001          .WORD   1,10,5,0,0              ; L,C,R,4
    5067 0000f930 000136a0"         .LONG   NULL_ST,FRANC_TRAIL     ; CHARACTER STRINGS.
    5068 0000f970 0001adb0"         .LONG   FRANCE_ELECTRONIC       ; SPECIAL MESSAGE
    5069 0000f990 00013c50"         .LONG   FRENCH_ELECTITLE        ; TITLE OF COIN MODE
    5070 0000f9b0 00015630"         .LONG   F13255                  ;COIN PAGE DESCRIPTION
    5071 0000f9d0     0004          .WORD   SHOW_3                  ;THREE LINES FOR THIS BABY
    5072 0000f9e0 00018ef0"         .LONG   FRANCE_ESLOT            ; QUARTER
    5073                    
    5074 0000fa00     0001          .WORD   1,0,4,0,4,2,4,0,2,2    ;WILLY PRICING
    5075 0000faa0     0004          .WORD   4                       ;4 COINS PER DOLLAR (FOR CALC)
    5076 0000fab0     0001          .WORD   1                       ;DISPLAY COIN FRACTIONS
    5077 0000fac0     0001          .WORD   1,0,4,0,4                       ;COIN VALUE
    5078 0000fb10 00013630"         .LONG   DOLLAR_LEAD,NULL_ST     ;CHARACTER STRINGS.
    5079 0000fb50 00000001          .LONG   CSM_LIST                ;PRINT THE 2 THE OP SEES
    5080 0000fb70 000142c0"         .LONG   CANADA                  ;TITLE OF COIN MODE
    5081 0000fb90 00015130"         .LONG   CAN_1503D               ;1 PLAY 50, 3 FOR A DOLLAR
    5082 0000fbb0     0003          .WORD   SHOW_2                  ;SHOW LINE 2
    5083 0000fbc0 00019700"         .LONG   CAN_QD                  ;QUARTER
    5084                    
    5085                            .IF     FULLPRICE
    5086                    
    5087                    
    5088 0000fbe0     0006          .WORD   6,0,30,0,0,5,0,0,2,2             ;WILLY PRICING
    5089 0000fc80     0001          .WORD   1                               ;FRANCS HAVE NO FRACTIONS
    5090 0000fc90     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5091 0000fca0     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5092 0000fcf0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL              ;CHARACTER STRINGS.
    5093 0000fd30 00000001          .LONG   CSM_LIST
    5094 0000fd50 00014300"         .LONG   SWISS_1                 ;TITLE OF COIN MODE
    5095 0000fd70 000150d0"         .LONG   SFRANC_6                         ;1 COIN PER CREDIT (SERIES
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  112

    5096 0000fd90     0003          .WORD   SHOW_2
    5097 0000fda0 00019810"         .LONG   SWISS15
    5098                    
    5099                    
    5100 0000fdc0     0006          .WORD   6,0,30,0,0,5,30,0,2,2           ;WILLY PRICING
    5101 0000fe60     0001          .WORD   1                               ;FRANCS HAVE NO FRACTIONS
    5102 0000fe70     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5103 0000fe80     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5104 0000fed0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL              ;CHARACTER STRINGS.
    5105 0000ff10 00000001          .LONG   CSM_LIST
    5106 0000ff30 00014340"         .LONG   SWISS_2                 ;TITLE OF COIN MODE
    5107 0000ff50 00015190"         .LONG   SFRANC_7                         ;1 COIN PER CREDIT (SERIES
    5108 0000ff70     0003          .WORD   SHOW_2
    5109 0000ff80 00019810"         .LONG   SWISS15
    5110                    
    5111                    
    5112 0000ffa0     0007          .WORD   7,0,35,0,0,5,35,0,2,2           ;WILLY PRICING
    5113 00010040     0001          .WORD   1                               ;FRANCS HAVE NO FRACTIONS
    5114 00010050     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5115 00010060     0001          .WORD   1,0,5,0,0                               ;COIN VALUE
    5116 000100b0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL             ;CHARACTER STRINGS.
    5117 000100f0 00000001          .LONG   CSM_LIST
    5118 00010110 00014380"         .LONG   SWISS_3                         ;TITLE OF COIN MODE
    5119 00010130 000151f0"         .LONG   SFRANC_8                        ;1 COIN PER CREDIT (SERIES
    5120 00010150     0003          .WORD   SHOW_2
    5121 00010160 00019810"         .LONG   SWISS15
    5122                    
    5123                    
    5124 00010180     0001          .WORD   1,0,1,0,0,1,0,0,2,2             ;WILLY PRICING
    5125 00010220     0001          .WORD   1                               ;LIRE HAVE NO FRACTIONS
    5126 00010230     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5127 00010240     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    5128 00010290 000136a0"         .LONG   NULL_ST,LIRE_TRAIL               ;CHARACTER STRINGS.
    5129 000102d0 00000001          .LONG   CSM_LIST
    5130 000102f0 000143c0"         .LONG   ITALY_1                 ;TITLE OF COIN MODE
    5131 00010310 00015790"         .LONG   P1500L                  ;1 COIN PER CREDIT (SERIES OF ST
    5132 00010330     0002          .WORD   SHOW_1
    5133 00010340 00019920"         .LONG   ITALYLIRE
    5134                    
    5135                    
    5136                    
    5137 00010360     000a          .WORD   10, 2, 5, 1, 0, 5,  10,0,1,1            ;NUMBERS FOR 1L/20P/50P/10P
    5138 00010400     000a          .WORD   10                                      ;PENCE SUCK!
    5139 00010410     0000          .WORD   0                                       ;DON'T DISPLAY COIN FRACTIO
    5140 00010420     000a          .WORD   10,2,5,1,0                              ;COIN VALUE
    5141 00010470 000136a0"         .LONG   NULL_ST,POUND_TRAIL     ;CHARACTER STRINGS.
    5142 000104b0 0001b2c0"         .LONG   UK_ELECTRONIC1                          ;SPECIAL TITLE W/ POUND
    5143 000104d0 000143f0"         .LONG   UK_1                                    ;TITLE OF COIN MODE
    5144 000104f0 000158b0"         .LONG   UK_420                                  ;
    5145 00010510     0003          .WORD   SHOW_2
    5146 00010520 00019b40"         .LONG   UK_ELEC
    5147                    
    5148                    
    5149                    
    5150                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  113

    5151                    
    5152 00010540     000a          .WORD   10, 2, 5, 1, 0, 5,  0,0,1,1             ;NUMBERS FOR 1L/20P/50P/10P
    5153 000105e0     000a          .WORD   10                              ;PENCE ARE FRACTIONS!
    5154 000105f0     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5155 00010600     000a          .WORD   10,2,5,1,0                              ;COIN VALUE
    5156 00010650 000136a0"         .LONG   NULL_ST,COINS_TRAIL        ;CHARACTER STRINGS.
    5157 00010690 0001b530"         .LONG   UK_ELECTRONIC2           ;SPECIAL TITLE W/ POUND
    5158 000106b0 00014450"         .LONG   UK_2                      ;TITLE OF COIN MODE
    5159 000106d0 00015850"         .LONG   UK_320                  ;
    5160 000106f0     0003          .WORD   SHOW_2
    5161 00010700 00019b40"         .LONG   UK_ELEC
    5162                    
    5163                    
    5164 00010720     0014          .WORD   20,4,10,2,0,5,20,0,1,1  ;WILLY PRICING
    5165 000107c0     000a          .WORD   10                      ;PENCE ARE FRACTIONS!
    5166 000107d0     0000          .WORD   0                       ;DON'T DISPLAY COIN FRACTIO
    5167 000107e0     000a          .WORD   10,2,5,1,0                              ;COIN VALUE
    5168 00010830 000136a0"         .LONG   NULL_ST,POUND_TRAIL     ;CHARACTER STRINGS.
    5169 00010870 0001b7a0"         .LONG   UK_ELECTRONIC3           ;SPECIAL TITLE W/ POUND
    5170 00010890 000144b0"         .LONG   UK_3                    ;TITLE OF COIN MODE
    5171 000108b0 000157d0"         .LONG   UK_120                  ;1 COIN PER CREDIT (SERIES OF ST
    5172 000108d0     0003          .WORD   SHOW_2
    5173 000108e0 00019b40"         .LONG   UK_ELEC
    5174                    
    5175                    
    5176 00010900     000a          .WORD   10, 0, 5, 0, 0, 5,  10,0,1,1            ;NUMBERS FOR 1L/20P/50P/10P
    5177 000109a0     000a          .WORD   10                                      ;PENCE SUCK!
    5178 000109b0     0000          .WORD   0                                       ;DON'T DISPLAY COIN FRACTIO
    5179 000109c0     000a          .WORD   10,0,5,0,0                              ;COIN VALUE
    5180 00010a10 000136a0"         .LONG   NULL_ST,POUND_TRAIL     ;CHARACTER STRINGS.
    5181 00010a50 0001b2c0"         .LONG   UK_ELECTRONIC1
    5182 00010a70 00014510"         .LONG   UK_4                                    ;TITLE OF COIN MODE
    5183 00010a90 000158b0"         .LONG   UK_220                                  ;
    5184 00010ab0     0003          .WORD   SHOW_2
    5185 00010ac0 00019a30"         .LONG   UK2050
    5186                    
    5187                    
    5188                    
    5189                    
    5190 00010ae0     000a          .WORD   10, 0, 5, 0, 0, 5,  0,0,1,1             ;NUMBERS FOR 1L/20P/50P/10P
    5191 00010b80     000a          .WORD   10                              ;PENCE ARE FRACTIONS!
    5192 00010b90     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5193 00010ba0     000a          .WORD   10,0,5,0,0                              ;COIN VALUE
    5194 00010bf0 000136a0"         .LONG   NULL_ST,COINS_TRAIL        ;CHARACTER STRINGS.
    5195 00010c30 0001b530"         .LONG   UK_ELECTRONIC2
    5196 00010c50 00014550"         .LONG   UK_5                      ;TITLE OF COIN MODE
    5197 00010c70 00015850"         .LONG   UK_520                  ;
    5198 00010c90     0003          .WORD   SHOW_2
    5199 00010ca0 00019a30"         .LONG   UK2050
    5200                    
    5201                    
    5202                    
    5203 00010cc0     0001          .WORD   1,0,5,0,0,1,5,0,2,2             ;WILLY PRICING
    5204 00010d60     0001          .WORD   1                               ;NO FRACTIONS
    5205 00010d70     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  114

    5206 00010d80     0001          .WORD   1,0,5,0,0                       ;COIN VALUE
    5207 00010dd0 000136a0"         .LONG   NULL_ST,PESETA_TRAIL            ;CHARACTER STRINGS.
    5208 00010e10 00000001          .LONG   CSM_LIST
    5209 00010e30 00014590"         .LONG   SP_1                            ;TITLE OF COIN MODE
    5210 00010e50 00015970"         .LONG   SP_5100                         ;1 COIN PER CREDIT (SERIES OF ST
    5211 00010e70     0003          .WORD   SHOW_2
    5212 00010e80 00019d00"         .LONG   PESETA100
    5213                    
    5214                    
    5215                    
    5216 00010ea0     0001          .WORD   1,0,5,0,0,1,0,0,2,2                ;WILLY PRICING
    5217 00010f40     0001          .WORD   1                               ;NO FRACTIONS
    5218 00010f50     0000          .WORD   0                               ;DON'T DISPLAY COIN FRACTIO
    5219 00010f60     0001          .WORD   1,0,5,0,0                       ;COIN VALUE
    5220 00010fb0 000136a0"         .LONG   NULL_ST,PESETA_TRAIL      ;CHARACTER STRINGS.
    5221 00010ff0 00000001          .LONG   CSM_LIST
    5222 00011010 000145d0"         .LONG   SP_2                      ;TITLE OF COIN MODE
    5223 00011030 00015910"         .LONG   SP_4100                 ;1 COIN PER CREDIT (SERIES OF ST
    5224 00011050     0003          .WORD   SHOW_2
    5225 00011060 00019d00"         .LONG   PESETA100
    5226                    
    5227                    
    5228                    
    5229 00011080     0002          .WORD   2,0,10,0,0,5,0,0,2,2              ;WILLY PRICING
    5230 00011120     0005          .WORD   5                               ;DOLLARS
    5231 00011130     0000          .WORD   0                               ;DON'T SHOW FRACTIONS FOR T
    5232 00011140     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5233 00011190 00013630"         .LONG   DOLLAR_LEAD,NULL_ST       ;CHARACTER STRINGS.
    5234 000111d0 00000001          .LONG   CSM_LIST
    5235 000111f0 00014610"         .LONG   AUS_1                    ;TITLE OF COIN MODE
    5236 00011210 000159d0"         .LONG   AU_60                    ;1 COIN PER CREDIT (SERIES OF S
    5237 00011230     0003          .WORD   SHOW_2
    5238 00011240 00019e10"         .LONG   AUST20C
    5239 00011260     0001          .WORD   1,0,5,0,0,5,0,0,1,1      ; WILLY PRICING
    5240 00011300     0005          .WORD   5                        ; DOLLARS
    5241 00011310     0001          .WORD   1                        ; SHOW FRACTIONS FOR THE 3 C
    5242 00011320     0001          .WORD   1,0,5,0,0                        ; COIN VALUE
    5243 00011370 00013630"         .LONG   DOLLAR_LEAD,NULL_ST      ; CHARACTER STRINGS.
    5244 000113b0 00000001          .LONG   CSM_LIST
    5245 000113d0 00014670"         .LONG   AUS_2                    ; TITLE OF COIN MODE
    5246 000113f0 00015a30"         .LONG   AU_100                   ; 1 COIN PER CREDIT (SERIES OF ST
    5247 00011410     0003          .WORD   SHOW_2
    5248 00011420 00019e10"         .LONG   AUST20C
    5249                    
    5250                            .ENDIF
    5251                    
    5252                    
    5253 00011440     0001          .WORD   1,0,1,0,0,1,0,0,2,2                ;WILLY PRICING
    5254 000114e0     0001          .WORD   1                               ;DOLLARS
    5255 000114f0     0001          .WORD   1                               ;FRACTIONS OK
    5256 00011500     0001          .WORD   1,0,1,0,0                  ;COIN VALUE
    5257 00011550 000136a0"         .LONG   NULL_ST,YEN_TRAIL               ;CHARACTER STRINGS.
    5258 00011590 00000001          .LONG   CSM_LIST
    5259 000115b0 000146d0"         .LONG   JAP_1                    ;TITLE OF COIN MODE
    5260 000115d0 00015a90"         .LONG   JAP_100                 ;1 COIN PER CREDIT (SERIES OF ST
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  115

    5261 000115f0     0002          .WORD   SHOW_1
    5262 00011600 00019f20"         .LONG   YEN100
    5263                    
    5264                            .IF     FULLPRICE
    5265                    
    5266 00011620     0002          .WORD   2,0,2,0,0,1,0,0,2,2                ;WILLY PRICING
    5267 000116c0     0001          .WORD   1                               ;DOLLARS
    5268 000116d0     0001          .WORD   1                               ;FRACTIONS OK
    5269 000116e0     0001          .WORD   1,0,1,0,0                  ;COIN VALUE
    5270 00011730 000136a0"         .LONG   NULL_ST,YEN_TRAIL               ;CHARACTER STRINGS.
    5271 00011770 00000001          .LONG   CSM_LIST
    5272 00011790 00014710"         .LONG   JAP_2                    ;TITLE OF COIN MODE
    5273 000117b0 00015ad0"         .LONG   JAP_200                 ;1 COIN PER CREDIT (SERIES OF ST
    5274 000117d0     0002          .WORD   SHOW_1
    5275 000117e0 00019f20"         .LONG   YEN100
    5276                    
    5277                    
    5278 00011800     0001          .WORD   1,0,2,0,0,1,0,0,2,2                ;WILLY PRICING
    5279 000118a0     0001          .WORD   1                               ;DOLLARS
    5280 000118b0     0001          .WORD   1                               ;FRACTIONS OK
    5281 000118c0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5282 00011910 000136a0"         .LONG   NULL_ST,SHILL_TRAIL        ;CHARACTER STRINGS.
    5283 00011950 00000001          .LONG   CSM_LIST
    5284 00011970 00014750"         .LONG   ASTA_1                   ;TITLE OF COIN MODE
    5285 00011990 00015b70"         .LONG   ASTA_15                 ;1 COIN PER CREDIT (SERIES OF ST
    5286 000119b0     0002          .WORD   SHOW_1
    5287 000119c0 0001a030"         .LONG   SHILL510
    5288                    
    5289                    
    5290 000119e0     0001          .WORD   1,0,2,0,0,2,4,0,2,2                ;WILLY PRICING
    5291 00011a80     0001          .WORD   1                               ;DOLLARS
    5292 00011a90     0001          .WORD   1                               ;FRACTIONS OK
    5293 00011aa0     0005          .WORD   5,0,10,0,0                      ;COIN VALUE
    5294 00011af0 000136a0"         .LONG   NULL_ST,SHILL_TRAIL        ;CHARACTER STRINGS.
    5295 00011b30 00000001          .LONG   CSM_LIST
    5296 00011b50 000147a0"         .LONG   ASTA_2                   ;TITLE OF COIN MODE
    5297 00011b70 00015b10"         .LONG   ASTA_10                 ;1 COIN PER CREDIT (SERIES OF ST
    5298 00011b90     0003          .WORD   SHOW_2
    5299 00011ba0 0001a030"         .LONG   SHILL510
    5300                    
    5301                    
    5302 00011bc0     0001          .WORD   1,0,1,0,0,1,0,0,2,2                ;WILLY PRICING
    5303 00011c60     0001          .WORD   1                               ;DOLLARS
    5304 00011c70     0001          .WORD   1                               ;FRACTIONS OK
    5305 00011c80     0004          .WORD   4,0,4,0,0                        ;COIN VALUE
    5306 00011cd0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5307 00011d10 00000001          .LONG   CSM_LIST
    5308 00011d30 000147f0"         .LONG   BEL_1                    ;TITLE OF COIN MODE
    5309 00011d50 00015bd0"         .LONG   BEL_120                 ;1 COIN PER CREDIT (SERIES OF ST
    5310 00011d70     0002          .WORD   SHOW_1
    5311 00011d80 0001a140"         .LONG   FRANC20
    5312                    
    5313                    
    5314 00011da0     0003          .WORD   3,0,3,0,0,1,0,0,2,2                ;WILLY PRICING
    5315 00011e40     0001          .WORD   1                               ;DOLLARS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  116

    5316 00011e50     0001          .WORD   1                               ;FRACTIONS OK
    5317 00011e60     0004          .WORD   4,0,4,0,0                        ;COIN VALUE
    5318 00011eb0 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5319 00011ef0 00000001          .LONG   CSM_LIST
    5320 00011f10 00014840"         .LONG   BEL_2                    ;TITLE OF COIN MODE
    5321 00011f30 00015c50"         .LONG   BEL_320                 ;1 COIN PER CREDIT (SERIES OF ST
    5322 00011f50     0002          .WORD   SHOW_1
    5323 00011f60 0001a140"         .LONG   FRANC20
    5324                    
    5325                    
    5326 00011f80     0002          .WORD   2,0,2,0,0,1,0,0,2,2                ;WILLY PRICING
    5327 00012020     0001          .WORD   1                               ;DOLLARS
    5328 00012030     0001          .WORD   1                               ;FRACTIONS OK
    5329 00012040     0004          .WORD   4,0,4,0,0                        ;COIN VALUE
    5330 00012090 000136a0"         .LONG   NULL_ST,FRANC_TRAIL        ;CHARACTER STRINGS.
    5331 000120d0 00000001          .LONG   CSM_LIST
    5332 000120f0 00014890"         .LONG   BEL_3                    ;TITLE OF COIN MODE
    5333 00012110 00015c10"         .LONG   BEL_220                 ;1 COIN PER CREDIT (SERIES OF ST
    5334 00012130     0002          .WORD   SHOW_1
    5335 00012140 0001a140"         .LONG   FRANC20
    5336                    
    5337 00012160     000a          .WORD   10,1,4,0,0,4,0,0,2,2            ; L,C,R,4,U/C,U/B,MINUNITS
    5338 00012200     0001          .WORD   1                       ; COINS/DOLLAR
    5339 00012210     0001          .WORD   1                       ; DISPLAY FRACTIONS
    5340 00012220     000a          .WORD   10,1,4,0,0              ; L,C,R,4
    5341 00012270 000136a0"         .LONG   NULL_ST,FRANC_TRAIL              ;CHARACTER STRINGS.
    5342 000122b0 0001b190"         .LONG   BELGIUM_ELECTRONIC              ; SPECIAL MESSAGE
    5343 000122d0 000148e0"         .LONG   BELGIUM_ELECTITLE               ; TITLE OF COIN MODE
    5344 000122f0 00015c90"         .LONG   BEL_ELEC                        ; SETTINGS DESCRIPTION
    5345 00012310     0003          .WORD   SHOW_2                  ; LINES TO SHOW ON
    5346 00012320 00019110"         .LONG   BELGIUM_ESLOT           ; QUARTER
    5347                    
    5348                    
    5349 00012340     0002          .WORD   2,0,10,0,0,5,0,0,2,2             ;WILLY PRICING
    5350 000123e0     0001          .WORD   1                               ;DOLLARS
    5351 000123f0     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    5352 00012400     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5353 00012450 000136a0"         .LONG   NULL_ST,KRONA_TRAIL        ;CHARACTER STRINGS.
    5354 00012490 00000001          .LONG   CSM_LIST
    5355 000124b0 00014940"         .LONG   SWED_1                  ;TITLE OF COIN MODE
    5356 000124d0 00015cd0"         .LONG   SWED_2X5                         ;1 COIN PER CREDIT (SERIES
    5357 000124f0     0002          .WORD   SHOW_1
    5358 00012500 0001a240"         .LONG   KRONA5
    5359                    
    5360                    
    5361 00012520     0001          .WORD   1,0,1,0,0,3,0,0,1,1                ;WILLY PRICING
    5362 000125c0     0005          .WORD   5                               ;FIVE PER
    5363 000125d0     0001          .WORD   1                               ;SHOW FRACTIONS
    5364 000125e0     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    5365 00012630 00013630"         .LONG   DOLLAR_LEAD,NULL_ST       ;CHARACTER STRINGS.
    5366 00012670 00000001          .LONG   CSM_LIST
    5367 00012690 00014980"         .LONG   NZ_1                      ;TITLE OF COIN MODE
    5368 000126b0 00015d70"         .LONG   NZ_13                    ;1 COIN PER CREDIT (SERIES OF S
    5369 000126d0     0002          .WORD   SHOW_1
    5370 000126e0 0001a350"         .LONG   NZ20
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  117

    5371                    
    5372                    
    5373                    
    5374 00012700     0001          .WORD   1,0,1,0,0,2,0,0,1,1                ;WILLY PRICING
    5375 000127a0     0005          .WORD   5                               ;FIVE PER
    5376 000127b0     0001          .WORD   1                               ;SHOW FRACTIONS
    5377 000127c0     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    5378 00012810 00013630"         .LONG   DOLLAR_LEAD,NULL_ST       ;CHARACTER STRINGS.
    5379 00012850 00000001          .LONG   CSM_LIST
    5380 00012870 000149f0"         .LONG   NZ_2                      ;TITLE OF COIN MODE
    5381 00012890 00015d30"         .LONG   NZ_12                    ;1 COIN PER CREDIT (SERIES OF S
    5382 000128b0     0002          .WORD   SHOW_1
    5383 000128c0 0001a350"         .LONG   NZ20
    5384                    
    5385                    
    5386 000128e0     0001          .WORD   1,0,3,0,0,1,0,0,2,2                ;WILLY PRICING
    5387 00012980     0001          .WORD   1                               ;FIVE PER
    5388 00012990     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    5389 000129a0     0002          .WORD   2,0,5,0,0                        ;COIN VALUE
    5390 000129f0 000136a0"         .LONG   NULL_ST,HFL_TRAIL               ;CHARACTER STRINGS.
    5391 00012a30 00000001          .LONG   CSM_LIST
    5392 00012a50 00014a60"         .LONG   NETH                      ;TITLE OF COIN MODE
    5393 00012a70 00015db0"         .LONG   NETH_HF                 ;1 COIN PER CREDIT (SERIES OF ST
    5394 00012a90     0003          .WORD   SHOW_2
    5395 00012aa0 0001a450"         .LONG   HFSLOT
    5396                    
    5397                    
    5398                    
    5399 00012ac0     0001          .WORD   1,0,1,0,0,1,0,0,2,2                ;WILLY PRICING
    5400 00012b60     0001          .WORD   1                               ;FIVE PER
    5401 00012b70     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    5402 00012b80     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    5403 00012bd0 000136a0"         .LONG   NULL_ST,MARKKA_TRAIL      ;CHARACTER STRINGS.
    5404 00012c10 00000001          .LONG   CSM_LIST
    5405 00012c30 00014ac0"         .LONG   FINLAND                 ;TITLE OF COIN MODE
    5406 00012c50 00015e10"         .LONG   FINMKA                  ;1 COIN PER CREDIT (SERIES OF ST
    5407 00012c70     0002          .WORD   SHOW_1
    5408 00012c80 0001a560"         .LONG   MKSLOT
    5409                    
    5410                    
    5411 00012ca0     0003          .WORD   3,0,3,0,0,5,0,0,2,2                ;WILLY PRICING
    5412 00012d40     0001          .WORD   1                               ;FIVE PER
    5413 00012d50     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    5414 00012d60     0001          .WORD   1,0,1,0,0                        ;COIN VALUE
    5415 00012db0 000136a0"         .LONG   NULL_ST,KRONE_TRAIL       ;CHARACTER STRINGS.
    5416 00012df0 00000001          .LONG   CSM_LIST
    5417 00012e10 00014b00"         .LONG   NORWAY                  ;TITLE OF COIN MODE
    5418 00012e30 00015e50"         .LONG   KR_LIST                  ;1 COIN PER CREDIT (SERIES OF STRI
    5419 00012e50     0003          .WORD   SHOW_2
    5420 00012e60 0001a650"         .LONG   NKRSLOT
    5421                    
    5422                    
    5423 00012e80     0003          .WORD   3,0,15,0,0,5,30,0,2,2            ;WILLY PRICING
    5424 00012f20     0001          .WORD   1                               ;FIVE PER
    5425 00012f30     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  118

    5426 00012f40     0001          .WORD   1,0,5,0,0                        ;COIN VALUE
    5427 00012f90 000136a0"         .LONG   NULL_ST,KRONE_TRAIL       ;CHARACTER STRINGS.
    5428 00012fd0 00000001          .LONG   CSM_LIST
    5429 00012ff0 00014b40"         .LONG   DENMARK                 ;TITLE OF COIN MODE
    5430 00013010 00015eb0"         .LONG   DKR_LIST                         ;1 COIN PER CREDIT (SERIES
    5431 00013030     0004          .WORD   SHOW_3
    5432 00013040 0001a760"         .LONG   DKRSLOT
    5433                    
    5434                    
    5435                    
    5436 00013060     0001          .WORD   1,0,4,0,0,1,0,0,2,2                ;WILLY PRICING
    5437 00013100     0004          .WORD   4                               ;FIVE PER
    5438 00013110     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    5439 00013120     0001          .WORD   1,0,4,0,0                        ;COIN VALUE
    5440 00013170 000136a0"         .LONG   NULL_ST,GUILDER_TRAIL     ;CHARACTER STRINGS.
    5441 000131b0 00000001          .LONG   CSM_LIST
    5442 000131d0 00014b80"         .LONG   ANTILLES                         ;TITLE OF COIN MODE
    5443 000131f0 00015f30"         .LONG   ANT_LIST                         ;1 COIN PER CREDIT (SERIES
    5444 00013210     0002          .WORD   SHOW_1
    5445 00013220 0001a870"         .LONG   ANTSLOT
    5446                    
    5447                    
    5448 00013240     0001          .WORD   1,0,2,0,0,2,4,0,2,2             ;WILLY PRICING
    5449 000132e0     0001          .WORD   1                               ;1 TO 1
    5450 000132f0     0000          .WORD   0                               ;DON'T SHOW FRACTIONS
    5451 00013300     0001          .WORD   1,0,2,0,0                       ;COIN VALUE
    5452 00013350 000136a0"         .LONG   NULL_ST,FORINT_TRAIL            ;CHARACTER STRINGS.
    5453 00013390 00000001          .LONG   CSM_LIST
    5454 000133b0 00014bd0"         .LONG   HUNGARY                         ;TITLE OF COIN MODE
    5455 000133d0 00015f90"         .LONG   HUNG_LIST                        ;1 COIN PER CREDIT (SERIES
    5456 000133f0     0002          .WORD   SHOW_1
    5457 00013400 0001a970"         .LONG   HUNGSLOT
    5458                    
    5459                            .ENDIF
    5460                    
    5461              003d  CS_ENTS EQU     ($-CSELCT)/CS_SIZE          ;NUMBER OF ENTRIES IN TABLE
    5462                    
    5463                    
    5464                    
    5465              0001  USABASE EQU     1
    5466              000c  GERBASE EQU     G1SEL
    5467              0012  FRABASE EQU     F1SEL
    5468                    
    5469                            .IF     FULLPRICE
    5470                    
    5471 00013420     0001  USADIP  .WORD   USABASE+0, USABASE+1, USABASE+2, USABASE+3, USABASE+8
    5472 00013470     0009          .WORD   USABASE+8, USABASE+8
    5473                    
    5474 00013490     000c  GERDIP  .WORD   GERBASE+0, GERBASE+1, GERBASE+2, GERBASE+3, GERBASE+4
    5475 000134e0     0010          .WORD   GERBASE+4, GERBASE+4
    5476                    
    5477 00013500     0012  FRADIP  .WORD   FRABASE+0, FRABASE+1, FRABASE+2, FRABASE+3, FRABASE+12
    5478 00013550     001e          .WORD   FRABASE+12, FRABASE+12
    5479                    
    5480                            .ELSE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  119

    5481                    
    5482                    USADIP  .WORD   USABASE+0, USABASE+1, USABASE+2, USABASE+3, USABASE+4
    5483                            .WORD   USABASE+4, USABASE+4
    5484                    
    5485                    GERDIP  .WORD   GERBASE+0, GERBASE+1, GERBASE+2, GERBASE+3, GERBASE+4
    5486                            .WORD   GERBASE+4, GERBASE+4
    5487                    
    5488                    FRADIP  .WORD   FRABASE+0, FRABASE+1, FRABASE+2, FRABASE+3, FRABASE+4
    5489                            .WORD   FRABASE+4, FRABASE+4
    5490                    
    5491                            .ENDIF
    5492                    
    5493                    
    5494 00013570 00013420" DIPCOINTAB      .LONG   USADIP, GERDIP, FRADIP, USADIP
    5495                    
    5496                    
    5497 000135f0       30  ME_ZERO  .STRING "0"
    5498 000135f8       00          .BYTE   0
    5499 00013600                   .EVEN
    5500                    
    5501 00013600       2d  ME_DASH         .string "-",0
    5502 00013610                   .even
    5503                    
    5504 00013610       2e  ME_DECIMAL      .STRING "."
    5505 00013618       00          .BYTE   0
    5506 00013620                   .EVEN
    5507                    
    5508 00013620       3a  ME_COLON .STRING ":"
    5509 00013628       00          .BYTE   0
    5510 00013630                   .EVEN
    5511                    
    5512 00013630       24  DOLLAR_LEAD     .STRING "$  "
    5513 00013648       00          .BYTE   0
    5514 00013650                   .EVEN
    5515                    
    5516 00013650           POUND_LEAD
    5517 00013650       82          .STRING FONT_EPOUND,"  ",0
    5518 00013670                   .EVEN
    5519 00013670           POUND_TRAIL
    5520 00013670       20          .STRING "  PND",0
    5521 000136a0                   .EVEN
    5522                    
    5523 000136a0           NULL_ST 
    5524 000136a0       00          .BYTE   0
    5525 000136b0                   .EVEN
    5526                    
    5527 000136b0       20  DM_TRAIL        .STRING "  DM"
    5528 000136d0       00          .BYTE   0
    5529 000136e0                   .EVEN
    5530                    
    5531 000136e0       20  FRANC_TRAIL     .STRING "  FRANC"
    5532 00013718       00          .BYTE   0
    5533 00013720                   .EVEN
    5534                            
    5535                            .IF     FULLPRICE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  120

    5536 00013720       20  LIRE_TRAIL      .STRING "  LIRE"
    5537 00013750       00          .BYTE   0
    5538 00013760                   .EVEN
    5539                    
    5540 00013760       20  PESETA_TRAIL    .STRING "  PESETA"
    5541 000137a0       00          .BYTE   0
    5542 000137b0                   .EVEN
    5543                            .ENDIF
    5544                    
    5545 000137b0           YEN_TRAIL
    5546 000137b0       20          .STRING "  YEN"
    5547 000137d8       00          .BYTE   0
    5548 000137e0                   .EVEN
    5549                    
    5550                            .IF     FULLPRICE
    5551 000137e0           SHILL_TRAIL
    5552 000137e0       20          .STRING "  SCHILLINGS"
    5553 00013840       00          .BYTE   0
    5554 00013850                   .EVEN
    5555                    
    5556 00013850           KRONA_TRAIL
    5557 00013850       20          .STRING "  KRONA"
    5558 00013888       00          .BYTE   0
    5559 00013890                   .EVEN
    5560                            .ENDIF
    5561                    
    5562 00013890           COINS_TRAIL
    5563 00013890       20          .STRING "  COINS"
    5564 000138c8       00          .BYTE   0
    5565 000138d0                   .EVEN
    5566                    
    5567                            .IF     FULLPRICE
    5568 000138d0           HFL_TRAIL
    5569 000138d0       20          .STRING "  HFI."
    5570 00013900       00          .BYTE   0
    5571 00013910                   .EVEN
    5572                    
    5573 00013910           MARKKA_TRAIL
    5574 00013910       20          .STRING "  MARKKA"
    5575 00013950       00          .BYTE   0
    5576 00013960                   .EVEN
    5577                    
    5578 00013960           KRONE_TRAIL
    5579 00013960       20          .STRING "  KRONE"
    5580 00013998       00          .BYTE 0
    5581 000139a0                   .EVEN
    5582                    
    5583 000139a0           GUILDER_TRAIL
    5584 000139a0       20          .STRING "  GUILDER"
    5585 000139e8       00          .BYTE 0
    5586 000139f0                   .EVEN
    5587                    
    5588 000139f0           FORINT_TRAIL
    5589 000139f0       20          .STRING "  FT",0
    5590                            .ENDIF
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  121

    5591                    
    5592 00013a18       55  USA_1   .STRING "USA 1",0
    5593 00013a50                   .EVEN
    5594 00013a50       55  USA_2   .STRING "USA 2",0
    5595 00013a80                   .EVEN
    5596 00013a80       55  USA_3   .STRING "USA 3",0
    5597 00013ab0                   .EVEN
    5598 00013ab0       55  USA_4   .STRING "USA 4",0
    5599 00013ae0                   .EVEN
    5600                    
    5601                            .IF     FULLPRICE
    5602 00013ae0       55  USA_5   .STRING "USA 5",0
    5603 00013b10                   .EVEN
    5604 00013b10       55  USA_6   .STRING "USA 6",0
    5605 00013b40                   .EVEN
    5606 00013b40       55  USA_7   .STRING "USA 7",0
    5607 00013b70                   .EVEN
    5608 00013b70       55  USA_8   .STRING "USA 8",0
    5609 00013ba0                   .EVEN
    5610 00013ba0       55  USA_9   .STRING "USA 9",0
    5611 00013bd0                   .EVEN
    5612 00013bd0       55  USA_10  .STRING "USA 10",0
    5613 00013c10                   .EVEN
    5614                            .ENDIF
    5615                    
    5616 00013c10           USA_ELECTITLE
    5617 00013c10       55          .STRING "USA ECA",0
    5618 00013c50                   .EVEN
    5619                    
    5620 00013c50           FRENCH_ELECTITLE
    5621 00013c50       46          .STRING "FRANCE ECA",0
    5622 00013cb0                   .EVEN
    5623                    
    5624 00013cb0           GERMAN_ELECTITLE
    5625 00013cb0       47          .STRING "GERMAN ECA",0
    5626 00013d10                   .EVEN
    5627                    
    5628 00013d10           BEL_ELECTITLE
    5629 00013d10       42          .STRING "BELGUIM ECA",0
    5630 00013d70                   .EVEN
    5631                    
    5632 00013d70       47  GERMAN_1 .STRING "GERMAN 1",0
    5633 00013dc0                   .EVEN
    5634 00013dc0       47  GERMAN_2 .STRING "GERMAN 2",0
    5635 00013e10                   .EVEN
    5636 00013e10       47  GERMAN_3 .STRING "GERMAN 3",0
    5637 00013e60                   .EVEN
    5638 00013e60       47  GERMAN_4 .STRING "GERMAN 4",0
    5639 00013eb0                   .EVEN
    5640 00013eb0       47  GERMAN_5 .STRING "GERMAN 5",0
    5641 00013f00                   .EVEN
    5642                    
    5643 00013f00       46  FRENCH_1 .STRING "FRANCE 1",0
    5644 00013f50                   .EVEN
    5645 00013f50       46  FRENCH_2 .STRING "FRANCE 2",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  122

    5646 00013fa0                   .EVEN
    5647 00013fa0       46  FRENCH_3 .STRING "FRANCE 3",0
    5648 00013ff0                   .EVEN
    5649 00013ff0       46  FRENCH_4 .STRING "FRANCE 4",0
    5650 00014040                   .EVEN
    5651                    
    5652                            .IF     FULLPRICE
    5653 00014040       46  FRENCH_5 .STRING "FRANCE 5",0
    5654 00014090                   .EVEN
    5655 00014090       46  FRENCH_6 .STRING "FRANCE 6",0
    5656 000140e0                   .EVEN
    5657 000140e0       46  FRENCH_7 .STRING "FRANCE 7",0
    5658 00014130                   .EVEN
    5659 00014130       46  FRENCH_8 .STRING "FRANCE 8",0
    5660 00014180                   .EVEN
    5661 00014180       46  FRENCH_9 .STRING "FRANCE 9",0
    5662 000141d0                   .EVEN
    5663 000141d0       46  FRENCH_10 .STRING "FRANCE 10",0
    5664 00014220                   .EVEN
    5665 00014220       46  FRENCH_11 .STRING "FRANCE 11",0
    5666 00014270                   .EVEN
    5667 00014270       46  FRENCH_12 .STRING "FRANCE 12",0
    5668 000142c0                   .EVEN
    5669                    
    5670 000142c0           CANADA
    5671 000142c0       43          .STRING "CANADA",0
    5672 00014300                   .EVEN
    5673                    
    5674 00014300       53  SWISS_1 .STRING "SWISS 1"
    5675 00014338       00          .BYTE   0
    5676 00014340                   .EVEN
    5677 00014340       53  SWISS_2 .STRING "SWISS 2"
    5678 00014378       00          .BYTE   0
    5679 00014380                   .EVEN
    5680 00014380       53  SWISS_3 .STRING "SWISS 3"
    5681 000143b8       00          .BYTE   0
    5682 000143c0                   .EVEN
    5683 000143c0       49  ITALY_1 .STRING "ITALY"
    5684 000143e8       00          .BYTE   0
    5685 000143f0                   .EVEN
    5686 000143f0       55  UK_1    .STRING "U.K. 1 ECA"
    5687 00014440       00          .BYTE   0
    5688 00014450                   .EVEN
    5689 00014450       55  UK_2    .STRING "U.K. 2 ECA"
    5690 000144a0       00          .BYTE   0
    5691 000144b0                   .EVEN
    5692 000144b0       55  UK_3    .STRING "U.K. 3 ECA"
    5693 00014500       00          .BYTE   0
    5694 00014510                   .EVEN
    5695 00014510       55  UK_4    .STRING "U.K. 4"
    5696 00014540       00          .BYTE   0
    5697 00014550                   .EVEN
    5698 00014550       55  UK_5    .STRING "U.K. 5"
    5699 00014580       00          .BYTE   0
    5700 00014590                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  123

    5701 00014590       53  SP_1    .STRING "SPAIN 1"
    5702 000145c8       00          .BYTE   0
    5703 000145d0                   .EVEN
    5704 000145d0       53  SP_2    .STRING "SPAIN 2"
    5705 00014608       00          .BYTE   0
    5706 00014610                   .EVEN
    5707 00014610       41  AUS_1   .STRING "AUSTRALIA 1"
    5708 00014668       00          .BYTE   0
    5709 00014670                   .EVEN
    5710 00014670       41  AUS_2   .STRING "AUSTRALIA 2"
    5711 000146c8       00          .BYTE   0
    5712 000146d0                   .EVEN
    5713                            .ENDIF
    5714                    
    5715 000146d0       4a  JAP_1   .STRING "JAPAN 1"
    5716 00014708       00          .BYTE   0
    5717 00014710                   .EVEN
    5718                    
    5719                            .IF     FULLPRICE
    5720 00014710       4a  JAP_2   .STRING "JAPAN 2"
    5721 00014748       00          .BYTE   0
    5722 00014750                   .EVEN
    5723 00014750       41  ASTA_1  .STRING "AUSTRIA 1"
    5724 00014798       00          .BYTE   0
    5725 000147a0                   .EVEN
    5726 000147a0       41  ASTA_2  .STRING "AUSTRIA 2"
    5727 000147e8       00          .BYTE   0
    5728 000147f0                   .EVEN
    5729 000147f0       42  BEL_1   .STRING "BELGIUM 1"
    5730 00014838       00          .BYTE   0
    5731 00014840                   .EVEN
    5732 00014840       42  BEL_2   .STRING "BELGIUM 2"
    5733 00014888       00          .BYTE   0
    5734 00014890                   .EVEN
    5735 00014890       42  BEL_3   .STRING "BELGIUM 3"
    5736 000148d8       00          .BYTE   0
    5737 000148e0                   .EVEN
    5738 000148e0           BELGIUM_ELECTITLE
    5739 000148e0       42          .STRING "BELGIUM ECA",0
    5740 00014940                   .EVEN
    5741 00014940       53  SWED_1  .STRING "SWEDEN"
    5742 00014970       00          .BYTE   0
    5743 00014980                   .EVEN
    5744 00014980       4e  NZ_1    .STRING "NEW ZEALAND 1"
    5745 000149e8       00          .BYTE   0
    5746 000149f0                   .EVEN
    5747 000149f0       4e  NZ_2    .STRING "NEW ZEALAND 2"
    5748 00014a58       00          .BYTE   0
    5749 00014a60                   .EVEN
    5750 00014a60       4e  NETH    .STRING "NETHERLANDS"
    5751 00014ab8       00          .BYTE   0
    5752 00014ac0                   .EVEN
    5753                    
    5754 00014ac0       46  FINLAND .STRING "FINLAND"
    5755 00014af8       00          .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  124

    5756 00014b00                   .EVEN
    5757                    
    5758 00014b00       4e  NORWAY  .STRING "NORWAY"
    5759 00014b30       00          .BYTE 0
    5760 00014b40                   .EVEN
    5761                    
    5762 00014b40       44  DENMARK .STRING "DENMARK"
    5763 00014b78       00          .BYTE 0
    5764 00014b80                   .EVEN
    5765                    
    5766 00014b80       41  ANTILLES .STRING "ANTILLES"
    5767 00014bc0       00          .BYTE 0
    5768 00014bd0                   .EVEN
    5769                    
    5770 00014bd0           HUNGARY
    5771 00014bd0       48          .STRING "HUNGARY",0
    5772 00014c10                   .EVEN
    5773                    
    5774                            .ENDIF
    5775 00014c10           USA_EL
    5776 00014c10 00015ff0"         .LONG   EC1
    5777 00014c30 000164e0"         .LONG   DOLL4
    5778 00014c50 00000000          .LONG   0
    5779 00014c70           Q_Q
    5780 00014c70 00016090"         .LONG   C11              ;THIS POINTS AT MESSAGE
    5781 00014c90 00000000          .LONG   0                  ;THIS ENDS LIST
    5782 00014cb0           F_F_1S1C
    5783 00014cb0 00016120"         .LONG   C21
    5784 00014cd0 00000000          .LONG   0
    5785                    
    5786                    
    5787                    
    5788 00014cf0 00016120" DOLLAR_3 .LONG  C21
    5789 00014d10 000161c0"         .LONG   C43
    5790 00014d30 00000000          .LONG   0
    5791 00014d50 00016120" DOLLAR_4 .LONG  C21
    5792 00014d70 00016260"         .LONG   C44
    5793 00014d90 00000000          .LONG   0
    5794                    
    5795                    
    5796                    
    5797                    
    5798                            .IF     FULLPRICE
    5799                    
    5800 00014db0 00016090" U1Q4D   .LONG   C11              ;THIS POINTS AT MESSAGE
    5801 00014dd0 000164e0"         .LONG   DOLL4           ;4 FOR A DOLLAR
    5802 00014df0 00000000          .LONG   0
    5803                    
    5804                    
    5805 00014e10 00016120" UFS3D   .LONG   C21              ;THIS POINTS AT MESSAGE
    5806 00014e30 00016450"         .LONG   DOLL3           ;3 FOR A DOLLAR
    5807 00014e50 00000000          .LONG   0
    5808                    
    5809 00014e70 00016120" UFS4D   .LONG   C21              ;THIS POINTS AT MESSAGE
    5810 00014e90 000164e0"         .LONG   DOLL4           ;4 FOR A DOLLAR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  125

    5811 00014eb0 00000000          .LONG   0
    5812                    
    5813                            .ENDIF
    5814                    
    5815 00014ed0 00016570" DM_5    .LONG   DM11
    5816 00014ef0 00016680"         .LONG   DM55
    5817 00014f10 00000000          .LONG   0
    5818                    
    5819 00014f30 00016570" DM_6    .LONG   DM11
    5820 00014f50 00016710"         .LONG   DM65
    5821 00014f70 00000000          .LONG   0
    5822                    
    5823 00014f90 00016570" DM_7    .LONG   DM11
    5824 00014fb0 000167a0"         .LONG   DM75
    5825 00014fd0 00000000          .LONG   0
    5826                    
    5827 00014ff0 00016570" DM_8    .LONG   DM11
    5828 00015010 00016830"         .LONG   DM85
    5829 00015030 00000000          .LONG   0
    5830                    
    5831 00015050           DM112265
    5832 00015050 00016570"         .LONG   DM11
    5833 00015070 000165f0"         .LONG   DM22
    5834 00015090 00016710"         .LONG   DM65
    5835 000150b0 00000000          .LONG   0
    5836                    
    5837 000150d0 000171a0" SFRANC_6     .LONG   SFRANC11
    5838 000150f0 00017210"         .LONG   SFRANC65
    5839 00015110 00000000          .LONG   0
    5840                    
    5841 00015130           CAN_1503D
    5842 00015130 00016300"         .LONG   C15             ;THIS POINTS AT MESSAGE
    5843 00015150 00016450"         .LONG   DOLL3           ;3 FOR A DOLLAR
    5844 00015170 00000000          .LONG   0
    5845                    
    5846 00015190 000171a0" SFRANC_7     .LONG   SFRANC11
    5847 000151b0 00017290"         .LONG   SFRANC75
    5848 000151d0 00000000          .LONG   0
    5849                    
    5850 000151f0 000171a0" SFRANC_8     .LONG   SFRANC11
    5851 00015210 00017310"         .LONG   SFRANC85
    5852 00015230 00000000          .LONG   0
    5853 00015250 00016940" FIVE_10 .LONG   F25
    5854 00015270 00016a30"         .LONG   F510
    5855 00015290 00000000          .LONG   0
    5856                    
    5857 000152b0           FIVE_10_11
    5858 000152b0 00016940"         .LONG   F25
    5859 000152d0 00016a30"         .LONG   F510
    5860 000152f0 00016ab0"         .LONG   F1120
    5861 00015310 00000000          .LONG   0
    5862                    
    5863 00015330 00016940" FOUR_10 .LONG   F25
    5864 00015350 00016d40"         .LONG   F410
    5865 00015370 00000000          .LONG   0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  126

    5866                    
    5867 00015390           FOUR_10_9
    5868 00015390 00016940"         .LONG   F25
    5869 000153b0 00016d40"         .LONG   F410
    5870 000153d0 00016b60"         .LONG   F4109
    5871 000153f0 00000000          .LONG   0
    5872                    
    5873 00015410 000169c0" THREE_10 .LONG  F15
    5874 00015430 00016dc0"         .LONG   F310
    5875 00015450 00000000          .LONG   0
    5876                    
    5877 00015470           THREE_10_7
    5878 00015470 000169c0"         .LONG   F15
    5879 00015490 00016dc0"         .LONG   F310
    5880 000154b0 00016c00"         .LONG   F4107
    5881 000154d0 00000000          .LONG   0
    5882                    
    5883 000154f0 000169c0" TWO_10  .LONG   F15
    5884 00015510 00016e40"         .LONG   F210
    5885 00015530 00000000          .LONG   0
    5886                    
    5887 00015550 000169c0" TWO_10_5 .LONG  F15
    5888 00015570 00016e40"         .LONG   F210
    5889 00015590 00016ca0"         .LONG   F4105
    5890 000155b0 00000000          .LONG   0
    5891                    
    5892 000155d0 00016ec0" F1325   .LONG   F3X1F
    5893 000155f0 00016940"         .LONG   F2F5
    5894 00015610 00000000          .LONG   0
    5895                    
    5896 00015630 00016ec0" F13255  .LONG   F3X1F
    5897 00015650 00016940"         .LONG   F2F5
    5898 00015670 00017080"         .LONG   F5X10F
    5899 00015690 00000000          .LONG   0
    5900                    
    5901 000156b0 00016f50" F1235   .LONG   F2X1F
    5902 000156d0 000168c0"         .LONG   F3F5
    5903 000156f0 00000000          .LONG   0
    5904                    
    5905 00015710 00016f50" F12355  .LONG   F2X1F
    5906 00015730 000168c0"         .LONG   F3F5
    5907 00015750 00017100"         .LONG   F72X5
    5908 00015770 00000000          .LONG   0
    5909                    
    5910                            .IF     FULLPRICE
    5911                    
    5912                    
    5913 00015790 00017390" P1500L  .LONG   P1500L_P
    5914 000157b0 00000000          .LONG   0
    5915                    
    5916                    
    5917 000157d0 00017430" UK_120  .LONG   UK_1201
    5918 000157f0 000174b0"         .LONG   UK_1202
    5919 00015810 00017540"         .LONG   UK_1203
    5920 00015830 00000000          .LONG   0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  127

    5921                    
    5922                    
    5923 00015850           UK_520
    5924 00015850 000176f0" UK_320  .LONG   UK_3201
    5925 00015870 00017770"         .LONG   UK_3203
    5926 00015890 00000000          .LONG   0
    5927                    
    5928 000158b0           UK_220
    5929 000158b0 00017800" UK_420  .LONG   UK_4201
    5930 000158d0 00017880"         .LONG   UK_4202
    5931 000158f0 00000000          .LONG   0
    5932                    
    5933 00015910 00017910" SP_4100 .LONG   SP_11
    5934 00015930 000179c0"         .LONG   SP_44
    5935 00015950 00000000          .LONG   0
    5936                    
    5937 00015970 00017910" SP_5100 .LONG   SP_11
    5938 00015990 00017a80"         .LONG   SP_54
    5939 000159b0 00000000          .LONG   0
    5940                    
    5941 000159d0 00017b40" AU_60   .LONG   AU_36
    5942 000159f0 00017c00"         .LONG   AU_2D
    5943 00015a10 00000000          .LONG   0
    5944                    
    5945 00015a30 00017ca0" AU_100  .LONG   AU_520
    5946 00015a50 00017d60"         .LONG   AU_1D
    5947 00015a70 00000000          .LONG   0
    5948                    
    5949                            .ENDIF
    5950                    
    5951 00015a90 00017df0" JAP_100 .LONG   JAP_101
    5952 00015ab0 00000000          .LONG   0
    5953                    
    5954                            .IF     FULLPRICE
    5955                    
    5956 00015ad0 00017e90" JAP_200 .LONG   JAP_201
    5957 00015af0 00000000          .LONG   0
    5958                    
    5959 00015b10 00017f30" ASTA_10 .LONG   ASTA101
    5960 00015b30 00018010"         .LONG   ASTA102
    5961 00015b50 00000000          .LONG   0
    5962                    
    5963 00015b70 00018100" ASTA_15 .LONG   ASTA151
    5964 00015b90 000181c0"         .LONG   ASTA152
    5965 00015bb0 00000000          .LONG   0
    5966                    
    5967 00015bd0 00018290" BEL_120 .LONG   BEL_1201
    5968 00015bf0 00000000          .LONG   0
    5969 00015c10 00018310" BEL_220 .LONG   BEL_2201
    5970 00015c30 00000000          .LONG   0
    5971 00015c50 00018390" BEL_320 .LONG   BEL_3201
    5972 00015c70 00000000          .LONG   0
    5973 00015c90           BEL_ELEC
    5974 00015c90 00018290"         .LONG   BEL_1201
    5975 00015cb0 00000000          .LONG   0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  128

    5976                    
    5977 00015cd0 00018410" SWED_2X5 .LONG  SWED_S51
    5978 00015cf0 000184d0"         .LONG   SWED_S52
    5979 00015d10 00000000          .LONG   0
    5980                    
    5981 00015d30 00018570" NZ_12   .LONG   NZ_121
    5982 00015d50 00000000          .LONG   0
    5983                    
    5984 00015d70 00017b40" NZ_13   .LONG   NZ_131
    5985 00015d90 00000000          .LONG   0
    5986                    
    5987 00015db0 00018630" NETH_HF .LONG   HF_11
    5988 00015dd0 000186c0"         .LONG   HF_32
    5989 00015df0 00000000          .LONG   0
    5990                    
    5991 00015e10 00018760" FINMKA  .LONG   FIN_1
    5992 00015e30 00000000          .LONG   0
    5993                    
    5994 00015e50 00018800" KR_LIST .LONG   NOR_12
    5995 00015e70 000188c0"         .LONG   NOR_35
    5996 00015e90 00000000          .LONG   0
    5997                    
    5998 00015eb0 00018800" DKR_LIST .LONG  DEN_12
    5999 00015ed0 00018980"         .LONG   DEN_35
    6000 00015ef0 00018a20"         .LONG   DEN_710
    6001 00015f10 00000000          .LONG   0
    6002                    
    6003 00015f30 00018ae0" ANT_LIST .LONG  ANT1P25
    6004 00015f50 00018b80"         .LONG   ANT4DOL
    6005 00015f70 00000000          .LONG   0
    6006                    
    6007 00015f90           HUNG_LIST
    6008 00015f90 00018c30"         .LONG   HUNG2X10
    6009 00015fb0 00018d00"         .LONG   HUNG2X20
    6010 00015fd0 00000000          .LONG   0
    6011                    
    6012                            .ENDIF
    6013                    
    6014 00015ff0       31  EC1     .STRING "1 CREDIT / 25 CENTS",0
    6015 00016090                   .EVEN
    6016 00016090       31  C11     .STRING  "1 CREDIT / 1 COIN"
    6017 00016118       00          .BYTE 0
    6018 00016120                   .EVEN
    6019 00016120       31  C21     .STRING  "1 CREDIT / 2 COINS"
    6020 000161b0       00          .BYTE 0
    6021 000161c0                   .EVEN
    6022 000161c0       33  C43     .STRING  "3 CREDIT / 4 COINS"
    6023 00016250       00          .BYTE 0
    6024 00016260                   .EVEN
    6025 00016260       34  C44     .STRING  "4 CREDITS / 4 COINS"
    6026 000162f8       00          .BYTE 0
    6027 00016300                   .EVEN
    6028 00016300           C15
    6029 00016300       31          .STRING "1 CREDIT / 2 X 25 CENTS",0
    6030 000163c0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  129

    6031                    
    6032 000163c0       32  DOLL2   .STRING  "2 CREDITS / $1.00"
    6033 00016448       00          .BYTE 0
    6034 00016450                   .EVEN
    6035                    
    6036 00016450       33  DOLL3   .STRING  "3 CREDITS / $1.00"
    6037 000164d8       00          .BYTE 0
    6038 000164e0                   .EVEN
    6039                    
    6040 000164e0       34  DOLL4   .STRING  "4 CREDITS / $1.00"
    6041 00016568       00          .BYTE 0
    6042 00016570                   .EVEN
    6043                    
    6044 00016570       31  DM11    .STRING  "1 CREDIT / 1 DM",0
    6045 000165f0                   .EVEN
    6046 000165f0       32  DM22    .STRING  "2 CREDITS / 2 DM",0
    6047 00016680                   .EVEN
    6048 00016680       35  DM55    .STRING  "5 CREDITS / 5 DM",0
    6049 00016710                   .EVEN
    6050 00016710       36  DM65    .STRING  "6 CREDITS / 5 DM",0
    6051 000167a0                   .EVEN
    6052 000167a0       37  DM75    .STRING  "7 CREDITS / 5 DM",0
    6053 00016830                   .EVEN
    6054 00016830       38  DM85    .STRING  "8 CREDITS / 5 DM",0
    6055 000168c0                   .EVEN
    6056                    
    6057 000168c0       33  F3F5    .STRING  "3 CREDITS / 5F"
    6058 00016930       00          .BYTE 0
    6059 00016940                   .EVEN
    6060 00016940           F2F5
    6061 00016940       32  F25     .STRING  "2 CREDITS / 5F"
    6062 000169b0       00          .BYTE 0
    6063 000169c0                   .EVEN
    6064 000169c0       31  F15     .STRING  "1 CREDIT / 5F"
    6065 00016a28       00          .BYTE 0
    6066 00016a30                   .EVEN
    6067 00016a30       35  F510    .STRING  "5 CREDITS / 10F"
    6068 00016aa8       00          .BYTE 0
    6069 00016ab0                   .EVEN
    6070 00016ab0       31  F1120   .STRING  "11 CREDITS / 2 X 10F"
    6071 00016b50       00          .BYTE 0
    6072 00016b60                   .EVEN
    6073 00016b60       39  F4109   .STRING  "9 CREDITS / 2 X 10F"
    6074 00016bf8       00          .BYTE 0
    6075 00016c00                   .EVEN
    6076 00016c00       37  F4107   .STRING  "7 CREDITS / 2 X 10F"
    6077 00016c98       00          .BYTE 0
    6078 00016ca0                   .EVEN
    6079 00016ca0       35  F4105   .STRING  "5 CREDITS / 2 X 10F"
    6080 00016d38       00          .BYTE 0
    6081 00016d40                   .EVEN
    6082 00016d40       34  F410    .STRING  "4 CREDITS / 10F"
    6083 00016db8       00          .BYTE 0
    6084 00016dc0                   .EVEN
    6085 00016dc0       33  F310    .STRING  "3 CREDITS / 10F"
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  130

    6086 00016e38       00          .BYTE 0
    6087 00016e40                   .EVEN
    6088 00016e40       32  F210    .STRING  "2 CREDITS / 10F"
    6089 00016eb8       00          .BYTE 0
    6090 00016ec0                   .EVEN
    6091                    
    6092 00016ec0       31  F3X1F   .STRING  "1 CREDIT / 3 X 1F"
    6093 00016f48       00          .BYTE   0
    6094 00016f50                   .EVEN
    6095                    
    6096 00016f50       31  F2X1F   .STRING  "1 CREDIT / 2 X 1F"
    6097 00016fd8       00          .BYTE   0
    6098 00016fe0                   .EVEN
    6099                    
    6100 00016fe0       35  F52X5   .STRING  "5 CREDITS / 2 X 5F"
    6101 00017070       00          .BYTE   0
    6102 00017080                   .EVEN
    6103                    
    6104 00017080       35  F5X10F  .STRING  "5 CREDITS / 10F"
    6105 000170f8       00          .BYTE   0
    6106 00017100                   .EVEN
    6107                    
    6108 00017100       37  F72X5   .STRING  "7 CREDITS / 2 X 5F"
    6109 00017190       00          .BYTE   0
    6110 000171a0                   .EVEN
    6111                    
    6112 000171a0       31  SFRANC11     .STRING  "1 CREDIT / 1F"
    6113 00017208       00          .BYTE 0
    6114 00017210                   .EVEN
    6115 00017210       36  SFRANC65     .STRING  "6 CREDITS / 5F"
    6116 00017280       00          .BYTE 0
    6117 00017290                   .EVEN
    6118 00017290       37  SFRANC75     .STRING  "7 CREDITS / 5F"
    6119 00017300       00          .BYTE 0
    6120 00017310                   .EVEN
    6121 00017310       38  SFRANC85     .STRING  "8 CREDITS / 5F"
    6122 00017380       00          .BYTE 0
    6123 00017390                   .EVEN
    6124                    
    6125                            .IF     FULLPRICE
    6126 00017390       31  P1500L_P .STRING      "1 CREDIT / 500 LIRE"
    6127 00017428       00          .BYTE 0
    6128 00017430                   .EVEN
    6129                    
    6130 00017430       31  UK_1201 .STRING "1 CREDIT / 30 P"
    6131 000174a8       00          .BYTE 0
    6132 000174b0                   .EVEN
    6133 000174b0       32  UK_1202 .STRING "2 CREDITS / 50 P"
    6134 00017530       00          .BYTE 0
    6135 00017540                   .EVEN
    6136 00017540       35  UK_1203 .STRING "5 CREDITS / L1.00"
    6137 000175c8       00          .BYTE 0
    6138 000175d0                   .EVEN
    6139                    
    6140 000175d0       32  UK_2201 .STRING "2 CREDITS / 20 P"
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  131

    6141 00017650       00          .BYTE 0
    6142 00017660                   .EVEN
    6143 00017660       35  UK_2202 .STRING "5 CREDITS / 50 P"
    6144 000176e0       00          .BYTE 0
    6145 000176f0                   .EVEN
    6146                    
    6147 000176f0       31  UK_3201 .STRING "1 CREDIT / 50 P"
    6148 00017768       00          .BYTE 0
    6149 00017770                   .EVEN
    6150 00017770       32  UK_3203 .STRING "2 CREDITS / L1.00"
    6151 000177f8       00          .BYTE 0
    6152 00017800                   .EVEN
    6153                    
    6154 00017800       31  UK_4201 .STRING "1 CREDIT / 50 P"
    6155 00017878       00          .BYTE 0
    6156 00017880                   .EVEN
    6157 00017880       33  UK_4202 .STRING "3 CREDITS / L1.00"
    6158 00017908       00          .BYTE 0
    6159 00017910                   .EVEN
    6160                    
    6161 00017910       31  SP_11   .STRING "1 CREDIT / 100 PESETA"
    6162 000179b8       00          .BYTE   0
    6163 000179c0                   .EVEN
    6164                    
    6165 000179c0       35  SP_44   .STRING "5 CREDITS / 500 PESETA"
    6166 00017a70       00          .BYTE   0
    6167 00017a80                   .EVEN
    6168                    
    6169 00017a80       36  SP_54   .STRING "6 CREDITS / 500 PESETA"
    6170 00017b30       00          .BYTE   0
    6171 00017b40                   .EVEN
    6172 00017b40           NZ_131
    6173 00017b40       31  AU_36   .STRING "1 CREDIT / 3 X 20 CENTS"
    6174 00017bf8       00          .BYTE   0
    6175 00017c00                   .EVEN
    6176 00017c00       32  AU_2D   .STRING "2 CREDITS / $ 1.00"
    6177 00017c90       00          .BYTE   0
    6178 00017ca0                   .EVEN
    6179 00017ca0       31  AU_520  .STRING "1 CREDIT / 5 X 20 CENTS"
    6180 00017d58       00          .BYTE   0
    6181 00017d60                   .EVEN
    6182 00017d60       31  AU_1D   .STRING "1 CREDIT / $ 1.00"
    6183 00017de8       00          .BYTE   0
    6184 00017df0                   .EVEN
    6185                            .ENDIF
    6186                    
    6187 00017df0       31  JAP_101 .STRING "1 CREDIT / 100 YEN"
    6188 00017e80       00          .BYTE   0
    6189 00017e90                   .EVEN
    6190                    
    6191                            .IF FULLPRICE
    6192                    
    6193 00017e90       32  JAP_201 .STRING "2 CREDITS / 100 YEN"
    6194 00017f28       00          .BYTE   0
    6195 00017f30                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  132

    6196 00017f30       31  ASTA101 .STRING "1 CREDIT / 2 X 5 SCHILLING"
    6197 00018000       00          .BYTE   0
    6198 00018010                   .EVEN
    6199 00018010       33  ASTA102 .STRING "3 CREDITS / 2 X 10 SCHILLING"
    6200 000180f0       00          .BYTE   0
    6201 00018100                   .EVEN
    6202 00018100       31  ASTA151 .STRING "1 CREDIT / 5 SCHILLING"
    6203 000181b0       00          .BYTE   0
    6204 000181c0                   .EVEN
    6205 000181c0       32  ASTA152 .STRING "2 CREDITS / 10 SCHILLING"
    6206 00018280       00          .BYTE   0
    6207 00018290                   .EVEN
    6208                    
    6209 00018290       31  BEL_1201 .STRING        "1 CREDIT / 2OF"
    6210 00018300       00          .BYTE   0
    6211 00018310                   .EVEN
    6212 00018310       32  BEL_2201 .STRING        "2 CREDITS / 2OF"
    6213 00018388       00          .BYTE   0
    6214 00018390                   .EVEN
    6215 00018390       33  BEL_3201 .STRING        "3 CREDITS / 2OF"
    6216 00018408       00          .BYTE   0
    6217 00018410                   .EVEN
    6218                    
    6219 00018410       31  SWED_S51 .STRING        "1 CREDIT / 3 X 1 KRONA"
    6220 000184c0       00          .BYTE   0
    6221 000184d0                   .EVEN
    6222 000184d0       32  SWED_S52 .STRING        "2 CREDITS / 5 KRONA"
    6223 00018568       00          .BYTE   0
    6224 00018570                   .EVEN
    6225                    
    6226 00018570       31  NZ_121  .STRING "1 CREDIT / 2 X 20 CENTS"
    6227 00018628       00          .BYTE   0
    6228 00018630                   .EVEN
    6229                    
    6230 00018630       31  HF_11   .STRING "1 CREDIT / 1 HFI"
    6231 000186b0       00          .BYTE   0
    6232 000186c0                   .EVEN
    6233                    
    6234 000186c0       33  HF_32   .STRING "3 CREDITS / 2.5 HFI"
    6235 00018758       00          .BYTE   0
    6236 00018760                   .EVEN
    6237                    
    6238 00018760       31  FIN_1   .STRING "1 CREDIT / 1 MARKKA"
    6239 000187f8       00          .BYTE   0
    6240 00018800                   .EVEN
    6241                    
    6242 00018800           DEN_12
    6243 00018800       31  NOR_12  .STRING "1 CREDIT / 2 X 1 KRONE"
    6244 000188b0       00          .BYTE 0
    6245 000188c0                   .EVEN
    6246                    
    6247 000188c0       33  NOR_35  .STRING "3 CREDITS / 5 X 1 KRONE"
    6248 00018978       00          .BYTE 0
    6249 00018980                   .EVEN
    6250                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  133

    6251 00018980       33  DEN_35  .STRING "3 CREDITS / 5 KRONE"
    6252 00018a18       00          .BYTE 0
    6253 00018a20                   .EVEN
    6254                    
    6255 00018a20       37  DEN_710 .STRING "7 CREDITS / 2 X 5 KRONE"
    6256 00018ad8       00          .BYTE 0
    6257 00018ae0                   .EVEN
    6258                    
    6259 00018ae0       31  ANT1P25 .STRING "1 CREDIT / 25 CENTS"
    6260 00018b78       00          .BYTE 0
    6261 00018b80                   .EVEN
    6262                    
    6263 00018b80       34  ANT4DOL .STRING "4 CREDITS / 1 GUILDER"
    6264 00018c28       00          .BYTE 0
    6265 00018c30                   .EVEN
    6266                    
    6267 00018c30           HUNG2X10
    6268 00018c30       31          .STRING "1 CREDIT / 2 X 10 FORINT",0
    6269 00018d00                   .EVEN
    6270                    
    6271 00018d00           HUNG2X20
    6272 00018d00       33          .STRING "3 CREDITS / 2 X 20 FORINT",0
    6273 00018dd0                   .EVEN
    6274                    
    6275                            .ENDIF
    6276                    
    6277                    
    6278 00018dd0           USA_ESLOT       
    6279 00018dd0       24          .STRING "$1.00  .10    .25     .5    $1.00 ",0
    6280 00018ef0                   .EVEN
    6281                    
    6282 00018ef0           FRANCE_ESLOT
    6283 00018ef0       31          .STRING "1F     5F    10F                ",0
    6284 00019000                   .EVEN
    6285                    
    6286 00019000           GERMAN_ESLOT
    6287 00019000       20          .STRING " 5DM   2DM  1DM                 ",0
    6288 00019110                   .EVEN
    6289                    
    6290 00019110           BELGIUM_ESLOT
    6291 00019110       20          .STRING " 50F   20F    5F                 ",0
    6292 00019220                   .EVEN
    6293                    
    6294 00019220       32  USA_QQ      .STRING   "25 CENT       25 CENT"
    6295 000192c8       00              .BYTE 0
    6296 000192d0                       .EVEN
    6297                    
    6298                            .IF     FULLPRICE
    6299 000192d0           USA_QDQ
    6300 000192d0       2e          .STRING   ".25    .25                 $1.00",0
    6301 000193e0                   .EVEN
    6302                            .ENDIF
    6303                    
    6304 000193e0       31  GERMAN_15    .STRING   "1 DM 5 DM                      "
    6305 000194d8       00              .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  134

    6306 000194e0                       .EVEN
    6307 000194e0       35  FRENCH510    .STRING   "5F    10F                       "
    6308 000195e0       00              .BYTE 0
    6309 000195f0                       .EVEN
    6310 000195f0           FRENCH1F5F
    6311 000195f0       31          .STRING       "1F     5F                       ",0
    6312 00019700                   .EVEN
    6313                    
    6314 00019700           CAN_QD
    6315 00019700       2e          .STRING       ".25   $1.00                $1.00",0
    6316 00019810                   .EVEN
    6317                    
    6318                            .IF     FULLPRICE
    6319 00019810           SWISS15   
    6320 00019810       31          .STRING       "1F     5F                       ",0
    6321 00019918       00              .BYTE 0
    6322 00019920                       .EVEN
    6323 00019920       35  ITALYLIRE    .STRING   "500L  500L                      "
    6324 00019a20       00              .BYTE 0
    6325 00019a30                       .EVEN
    6326 00019a30       4c  UK2050      .STRING   "L1.00  50 P                     "
    6327 00019b30       00              .BYTE 0
    6328 00019b40                       .EVEN
    6329 00019b40       4c  UK_ELEC     .STRING   "L1.00  20P    50P   10P         "
    6330 00019c40       00              .BYTE 0
    6331 00019c50                       .EVEN
    6332 00019c50       43  UK_CCU      .STRING   "CCU ON LEFT SLOT    "
    6333 00019cf0       00              .BYTE 0
    6334 00019d00                       .EVEN
    6335 00019d00           PESETA100
    6336 00019d00       31          .STRING   "100 P 500 P                     ",0
    6337 00019e10                   .EVEN
    6338 00019e10           AUST20C
    6339 00019e10       2e          .STRING   ".20  $ 1.00                     ",0
    6340 00019f20                   .EVEN
    6341                    
    6342                            .ENDIF
    6343                    
    6344 00019f20       31  YEN100      .STRING   "100Y  100Y                      "
    6345 0001a020       00              .BYTE 0
    6346 0001a030                       .EVEN
    6347                    
    6348                            .IF     FULLPRICE
    6349 0001a030       35  SHILL510     .STRING   "5      10 SCHILLING             "
    6350 0001a130       00              .BYTE 0
    6351 0001a140                       .EVEN
    6352 0001a140       32  FRANC20     .STRING   "20F   20F                      "
    6353 0001a238       00              .BYTE 0
    6354 0001a240                       .EVEN
    6355 0001a240       31  KRONA5      .STRING   "1 KR  5 KR                      "
    6356 0001a340       00              .BYTE 0
    6357 0001a350                       .EVEN
    6358 0001a350       2e  NZ20        .STRING   ".20   .20                      "
    6359 0001a448       00              .BYTE 0
    6360 0001a450                       .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  135

    6361 0001a450       31  HFSLOT      .STRING   "1HFI  2.5HFI                    "
    6362 0001a550       00              .BYTE 0
    6363 0001a560                       .EVEN
    6364                    
    6365 0001a560       31  MKSLOT      .STRING   "1      1 MARKKA              "             
    6366 0001a648       00              .BYTE 0
    6367 0001a650                       .EVEN
    6368                    
    6369 0001a650       31  NKRSLOT     .STRING   "1 KR  1 KR                      "
    6370 0001a750       00              .BYTE 0
    6371 0001a760                       .EVEN
    6372                    
    6373 0001a760       31  DKRSLOT     .STRING   "1 KR  5 KR                      "
    6374 0001a860       00              .BYTE 0
    6375 0001a870                       .EVEN
    6376                    
    6377 0001a870       2e  ANTSLOT     .STRING   ".25    1 GUILDER               "
    6378 0001a968       00              .BYTE 0
    6379 0001a970                       .EVEN
    6380                    
    6381 0001a970           HUNGSLOT
    6382 0001a970       31          .STRING "10     20 FORINT               ",0
    6383 0001aa70                   .EVEN
    6384                            .ENDIF
    6385                    
    6386                    
    6387                    
    6388 0001aa70           OCOP    MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_11,ROBO_YELLOW,STRCNRM,0
    6389 0001ab10       31          .STRING   "1 COIN / 1 PLAY"
    6390 0001ab88       00          .BYTE     0,0
    6391 0001aba0                   .EVEN
    6392                    
    6393 0001aba0           USA_ELECTRONIC:
    6394 0001aba0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    6395 0001ac40       31          .STRING "1 CREDIT  /  25 CENTS" 
    6396 0001ace8       5c          .STRING "\n4 CREDITS /  1 DOLLAR",0,1
    6397 0001adb0                   .EVEN
    6398                    
    6399 0001adb0           FRANCE_ELECTRONIC:
    6400 0001adb0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    6401 0001ae50       31          .STRING "1 CREDIT  /  25 CENTS" 
    6402 0001aef8       5c          .STRING "\n4 CREDITS /  1 DOLLAR",0,1
    6403 0001afc0                   .EVEN
    6404                    
    6405 0001afc0           GERMAN_ELECTRONIC:
    6406 0001afc0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    6407 0001b060       31          .STRING "1 CREDIT  /  1 DM"     
    6408 0001b0e8       5c          .STRING "\n6 CREDITS /  5 DM",0,1
    6409 0001b190                   .EVEN
    6410                    
    6411                            .IF     FULLPRICE
    6412 0001b190           BELGIUM_ELECTRONIC:
    6413 0001b190                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_YELLOW,STRCNRM,0
    6414 0001b230       31          .STRING "1 CREDIT  /  20 FR"    
    6415 0001b2c0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  136

    6416                    
    6417 0001b2c0           UK_ELECTRONIC1
    6418 0001b2c0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_LF,STRCNRM,0
    6419 0001b360       31          .STRING   "1 CREDIT / 50 P"
    6420 0001b3d8       00          .BYTE     0,1
    6421 0001b3f0                   .EVEN
    6422 0001b3f0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_33,ROBO_LF,STRCNRM,0
    6423 0001b490       33          .STRING "3 CREDITS / "
    6424 0001b4f0       82          .BYTE     FONT_EPOUND
    6425 0001b4f8       31          .STRING "1.00"
    6426 0001b518       00          .BYTE     0,0
    6427 0001b530                   .EVEN
    6428 0001b530           UK_ELECTRONIC2
    6429 0001b530                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_LF,STRCNRM,0
    6430 0001b5d0       31          .STRING   "1 CREDIT / 50 P"
    6431 0001b648       00          .BYTE     0,1
    6432 0001b660                   .EVEN
    6433 0001b660                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_33,ROBO_LF,STRCNRM,0
    6434 0001b700       32          .STRING "2 CREDITS / "
    6435 0001b760       82          .BYTE     FONT_EPOUND
    6436 0001b768       31          .STRING "1.00"
    6437 0001b788       00          .BYTE     0,0
    6438 0001b7a0                   .EVEN
    6439 0001b7a0           UK_ELECTRONIC3
    6440 0001b7a0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_13,ROBO_LF,STRCNRM,0
    6441 0001b840       31          .STRING   "1 CREDIT / 30 P"
    6442 0001b8b8       00          .BYTE     0,1
    6443 0001b8d0                   .EVEN
    6444 0001b8d0                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_23,ROBO_LF,STRCNRM,0
    6445 0001b970       32          .STRING   "2 CREDITS / 50 P"
    6446 0001b9f0       00          .BYTE     0,1
    6447 0001ba00                   .EVEN
    6448 0001ba00                   MESS_MAC  RD7FONT,SPACING07,CP_CX,CP_33,ROBO_LF,STRCNRM,0
    6449 0001baa0       35          .STRING "5 CREDITS / "
    6450 0001bb00       82          .BYTE     FONT_EPOUND
    6451 0001bb08       31          .STRING "1.00"
    6452 0001bb28       00          .BYTE     0,0
    6453 0001bb40                   .EVEN
    6454                            .ENDIF
    6455                    
    6456                    
    6457                    
    6458 0001bb40           TWO_TO_START
    6459 0001bb40                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_12,ROBO_LASER,STRCNRM,0
    6460 0001bbe0       32          .byte   "2 CREDITS TO START",0,1
    6461 0001bc80                   .even
    6462 0001bc80                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_22,ROBO_LASER,STRCNRM,0
    6463 0001bd20       31          .byte   "1 CREDIT TO CONTINUE",0,0
    6464 0001bdd0                   .even
    6465                    
    6466 0001bdd0           TWO_TO_START_2C
    6467 0001bdd0                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_12,ROBO_LASER,STRCNRM,0
    6468 0001be70       32          .byte   "2 CREDITS TO START",0,1
    6469 0001bf10                   .even
    6470 0001bf10                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_22,ROBO_LASER,STRCNRM,0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:48 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

test menus                                                           PAGE  137

    6471 0001bfb0       32          .byte   "2 CREDITS TO CONTINUE",0,0
    6472 0001c070                   .even
    6473                    
    6474 0001c070           TWO_TS  MESS_MAC RD15FONT,SPACING20,CP_CX,CP_23,ROBO_LASER,STRCNRM,0
    6475 0001c110       32          .byte   "2 CREDITS TO START",0,1
    6476 0001c1b0                   .even
    6477 0001c1b0                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_33,ROBO_LASER,STRCNRM,0
    6478 0001c250       31          .byte   "1 CREDIT TO CONTINUE",0,0
    6479 0001c300                   .even
    6480                    
    6481 0001c300           TWO_TP  MESS_MAC RD15FONT,SPACING20,CP_CX,CP_22,ROBO_LASER,STRCNRM,0
    6482 0001c3a0       32          .byte   "2 CREDITS PER PLAYER",0,0
    6483 0001c450                   .even
    6484                    
    6485 0001c450           TWO_CRED_PER_PLAYER
    6486 0001c450                   MESS_MAC RD15FONT,SPACING20,CP_CX,CP_11,ROBO_LASER,STRCNRM,0
    6487 0001c4f0       32          .byte   "2 CREDITS PER PLAYER",0,0
    6488 0001c5a0                   .even
    6489                    
    6490 0001c5a0           MAX_C_M MESS_MAC RD15FONT,SPACING20,CP_CX,CP_11,ROBO_LF,STRCNRM,0
    6491 0001c640       4d          .byte   "MAXIMUM CREDITS!",0,0
    6492 0001c6d0                   .even
    6493                    
    6494                    
    6495                            .end

 No Errors,  No Warnings
