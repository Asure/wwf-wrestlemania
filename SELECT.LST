TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:     Jason Skiles
       4                    * Initiated:    1066, shortly after the Battle of Hastings
       5                    *
       6                    * COPYRIGHT (C) 1993 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    *.Last mod - 11/22/93 14:24
       9                    **************************************************************
      10                    
      11                            .file   "select.asm"
      13                            .width  132
      14                            .option b,d,l,t
      15                            .mnolist
      16                    
      17                    
      18                            .include        "mproc.equ"             ;Mproc equates
      19                            .include        "display.equ"           ;Display proc equates
      20                            .include        "gsp.equ"               ;Gsp asm equates
      21                            .include        "sys.equ"
      22                            .include        "game.equ"
      23                            .include        "audit.equ"
      24                            .include        "macros.h"
      25                            .include        "link.equ"
      26                            .include        "sound.h"
      27                            .include        "plyr.equ"
      28                            .INCLUDE        "SOUND.EQU"
      29                    
      30                            .include        "fontsimg.glo"
      31                            .include        "bgndtbl.glo"
      32                            .include        "imgtbl.glo"
      33                            .include        "miscimg.glo"
      34                            .include        "ropeimg.glo"
      35                    
      36                    *****************************************************************************
      37                    
      38                            .ref    current_round
      39                            .ref    DO_BEATEN_GAME
      40                    
      41                            .def    howard_wins,digits_tbl,calc_match_time_1
      42                            .def    num_wrestlers,wrestler_mugs
      43                    
      44                            .def    wrestler_attributes,attbars
      45                            .def    wrestler_mugs2,wrestler_audits
      46                    
      47                            .ref    ADD_VOICE,BAKMODS,BCDBIN,BEGINOBJ_TBL,BGND_UD1
      48                            .ref    BINBCD,change_image,CHECK_SCORE,civanic
      49                            .ref    CLOSE_PROGRESS_SCREEN,CLOSE_SCREEN_LINE,CR_STRTP
      50                            .ref    CURRENT_ANN_QUEUE,DONE_HOWARD,do_that_cycle,dpageflip
      51                            .ref    entered_inits,FADE_MASTER_VOL,FIND_LOW_TABLE_LEVEL
      52                            .ref    GET_ADJ,get_but_val_down,get_process_ptr,get_start_cur
      53                            .ref    get_stick_val_cur,get_stick_val_down,match_time
      54                            .ref    NEXT_ANN_QUEUE,no_pin_check,PCNT,pin_speed_check
      55                            .ref    PIN_SPEED_TAB,OLD_PSTATUS2,TEMP_PSTATUS,PSTATUS,PSTATUS2,PUT_UP_PROGRESS,RNDPER,RNDRNG0
      56                            .ref    SPECIAL_WIPEOUT,start_credbox
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    2

      57                            .ref    NEXT_IN_LADDER,INIT_LADDER_TABLE
      58                            .ref    NUM_OF_OPPS,CURRENT_LADDER,get_all_buttons_cur2
      59                            .ref    print_message,osgemd_ascii,is_final_match
      60                            .ref    UNIT_CLR,attract_mode,round_start_time,round_end_time
      61                            .REF    set_volume
      62                            .REF    belt_type
      63                    
      64                            .if DEBUG
      65                            .ref    stay_down
      66                            .endif
      67                    
      68                            .ref    total_matches
      69                            .ref    triple_sound,winstreak_check,WIPEOUT,wmania_tune
      70                            .ref    print_beaten
      71                            .ref    print_inter
      72                            .ref    GET_AUD
      73                            .ref    match_cnt
      74                            .ref    show_bonus_icons
      75                            .ref    clear_icon_total
      76                            .ref    del_bonus_icons
      77                    
      78                            .ref    wgsf24_ascii
      79                            .REF    royal_rumble
      80                            .REF    DO_TAG_GAME
      81                            .ref    print_tag
      82                            .ref    hscore_colcyc
      83                            .ref    hscore_colcyc2
      84                            .ref    font9_ascii,FNT9WHT_P,auto_init
      85                    
      86                    *****************************************************************************
      87                    
      88 00000000                   BSSX    MATCH_TIMERS,64
      89 00000000                   bssx    which_player,32
      90                    
      91 00000000                   BSSX    index1,         16      ;player 1 cursor position
      92 00000000                   BSSX    index2,         16      ;player 2 cursor position
      93 00000080                   .bss    time_out,       16      ;time out flag
      94 00000000                   BSSX    active_flag,    16      ;0:player 1 active, 1:player 2 active
      95                    
      96 000000a0                   .bss    kp_p1cursor,    32
      97 000000c0                   .bss    blow_out,       16      ;Flag for not delaying after no buyin
      98 000000d0                   .BSS    SPEECH_STARTED, 16
      99                    
     100 00000000                   bssx    match_time_bcd,32
     101                    
     102 00000000                   bssx    are_we_waiting_f,32
     103                    ;       BSSX    player_pal_pref,116*2
     104 00000000                   BSSX    player_pal_pref,120*2
     105 00000210                   .bss    cursor_procs,16
     106 00000000                   BSSX    rr_loss,16
     107 00000230                   .BSS    TEMP_PSTATUS2,16
     108                    
     109                    *****************************************************************************
     110                    
     111              0009  num_wrestlers   EQU     9
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    3

     112                    
     113 00000000     0032          .word   AUD_SNDERR4,AUD_SNDERR4,AUD_SNDERR4,AUD_SNDERR4
     114 00000040           wrestler_audits
     115 00000040     0033          .word   AUD_BHART,AUD_BHARTHW,AUD_BHARTC,AUD_BHARTCW
     116 00000080     0034          .word   AUD_RRAMO,AUD_RRAMOHW,AUD_RRAMOC,AUD_RRAMOCW
     117 000000c0     0035          .word   AUD_UNDER,AUD_UNDERHW,AUD_UNDERC,AUD_UNDERCW
     118 00000100     0036          .word   AUD_YOKO,AUD_YOKOHW,AUD_YOKOC,AUD_YOKOCW
     119 00000140     0037          .word   AUD_SMICH,AUD_SMICHHW,AUD_SMICHC,AUD_SMICHCW
     120 00000180     0038          .word   AUD_BBBIG,AUD_BBBIGHW,AUD_BBBIGC,AUD_BBBIGCW
     121 000001c0     0039          .word   AUD_DCLOW,AUD_DCLOWHW,AUD_DCLOWC,AUD_DCLOWCW
     122 00000200     0000          .word   0,0,0,0
     123 00000240     003b          .word   AUD_LLUGE,AUD_LLUGEHW,AUD_LLUGEC,AUD_LLUGECW
     124 00000280           wrestler_auditsX
     125                    
     126                    *****************************************************************************
     127                    
     128              002d  PLEASE_YPOS             .equ    45
     129              00ca  CONTINUE_YPOS           .equ    PLEASE_YPOS+157
     130              006e  CREDIT_LINE_YPOS        .equ    110
     131              00d0  TIMER_YPOS              .equ    208
     132              007d  TO_CONTINUE_YPOS        .equ    CREDIT_LINE_YPOS+15
     133                    
     134                    *****************************************************************************
     135                    
     136                            .ref    OLD_PSTATUS
     137                            .ref    CR_CONTP
     138                            .ref    GAMSTATE
     139                    ;       .ref    secret_damage
     140                    
     141                    *******************************
     142                    
     143 00000280                   STRUCTPD
     144 00000280                   LONG    cyrncursorimg           ;UHL cursor *img
     145 00000280                   LONG    cyrnhiliteimg           ;UHL hilite letter *img
     146 00000280                   WORD    cyrnstick                       ;UHW stick to read
     147 00000280                   LONG    cyrnwhich_tab
     148 00000280                   LONG    cyrnwhich_entry
     149 00000280                   LONG    cyrnwhich_level
     150                    
     151 00000280            SUBR   GAME_BEATEN
     152                    
     153                            ;kill the ladder
     154 00000280     0d5f          calla   INIT_LADDER_TABLE
         00000290 00000000! 
     155                    
     156 000002b0     18c0          MOVK    INPARTY,A0
     157 000002c0     0580          MOVE    A0,@GAMSTATE
         000002d0 00000000! 
     158 000002f0     09c3          MOVI    998,A3
         00000300     03e6  
     159 00000310     0d5f          CALLA   SNDSND
         00000320 00000000! 
     160 00000340     09c0          movi    2,a0
         00000350     0002  
     161 00000360     0d5f          calla   RNDRNG0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    4

         00000370 00000000! 
     162 00000390     4c03          move    a0,a3
     163 000003a0     11e3          addk    0fh,a3
     164 000003b0     0d5f          calla   SNDSND
         000003c0 00000000! 
     165                    
     166 000003e0     18ab          MOVK    5,A11
     167 000003f0     09c8          MOVI    32,A8
         00000400     0020  
     168 00000410                   CREATE  FADE_PID,FADE_MASTER_VOL
     169                    
     170 00000490     0d5f          calla   WIPEOUT
         000004a0 00000000! 
     171 000004c0     1820          movk    1,a0                    ;page flipping on
     172 000004d0     0580          move    a0,@dpageflip
         000004e0 00000000! 
     173 00000500     0d5f          calla   start_credbox
         00000510 00000000! 
     174 00000530     09e0          movi    cyrnplyrsel_mod,a0
         00000540 00003f30' 
     175 00000560     0780          move    a0,@BAKMODS,L
         00000570 00000000! 
     176 00000590     0d5f          calla   BGND_UD1                ;create objects for background
         000005a0 00000000! 
     177 000005c0     57ce          clr     a14
     178 000005d0     058e          move    a14,@time_out
         000005e0 00000080- 
     179                    
     180 00000600                   CREATE  CROUTON_PID,display_croutons
     181                    
     182 00000680     05aa          MOVE    @royal_rumble,A10
         00000690 00000000! 
     183 000006b0     cb00          JRNZ    WE_PLAYED_A_TAG_TEAM
         000006c0     009e  
     184                    
     185 000006d0     05aa          move    @PSTATUS2,A10
         000006e0 00000000! 
     186 00000700     2fea          srl     1,a10
     187 00000710     4d48          move    a10,a8
     188                    
     189 00000720     4d01          MOVE    a8,a1
     190 00000730     24a1          sll     5,a1
     191 00000740     4d02          move    a8,a2
     192 00000750     2482          sll     4,a2
     193 00000760     4041          add     a2,a1
     194 00000770     0b21          addi    entered_inits,a1
         00000780 00000000! 
     195 000007a0     5642          clr     a2
     196 000007b0     9241          move    a2,*a1+,L
     197 000007c0     8041          move    a2,*a1
     198                    
     199 000007d0                   push    a10
     200 000007e0     5621          clr     a1
     201 000007f0     4d4a          move    a10,a10
     202 00000800     cb01          jrnz    which_playr_set
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    5

     203 00000810     1821          movk    1,a1
     204 00000820           which_playr_set
     205 00000820     4c2a          move    a1,a10
     206 00000830                   CREATE  PCURSOR_PID,player_cursor
     207                    
     208 000008b0                   pull    a10
     209 000008c0                   push    a10
     210                    
     211 000008d0                   JSRP    DO_BEATEN_GAME
     212 00000940                   pull    a10
     213                    
     214 00000950           are_we_waiting4
     215 00000950     4d40          move    a10,a0
     216 00000960     0b00          addi    HI_INPUT_PID,a0
         00000970     0137  
     217 00000980     09c1          movi    -1,a1
         00000990     ffff  
     218 000009a0     0d5f          calla   EXISTP
         000009b0 00000000! 
     219 000009d0     ca1e          JRZ     no_need_for_inputb
     220 000009e0                   sleep   1
     221 00000a30     09c0          movi    CYCPID,a0
         00000a40     0110  
     222 00000a50     09c1          movi    -1,a1
         00000a60     ffff  
     223 00000a70     0d5f          calla   EXISTP
         00000a80 00000000! 
     224 00000aa0     cbea          jrnz    are_we_waiting4
     225 00000ab0     4d40          move    a10,a0
     226 00000ac0     0b00          addi    HI_INPUT_PID,a0
         00000ad0     0137  
     227 00000ae0     09c1          movi    -1,a1
         00000af0     ffff  
     228 00000b00     0d5f          calla   EXISTP
         00000b10 00000000! 
     229 00000b30     ca08          JRZ     no_need_for_inputb
     230 00000b40     098f          mmtm    sp,a10,a9,a8
         00000b50     00e0  
     231 00000b60     0d5f          calla   do_that_cycle
         00000b70 00000000! 
     232 00000b90     09af          mmfm    sp,a10,a9,a8
         00000ba0     0700  
     233 00000bb0     c0d9          jruc    are_we_waiting4
     234                    
     235 00000bc0           no_need_for_inputb
     236                    
     237 00000bc0     0d5f          CALLA   WIPEOUT
         00000bd0 00000000! 
     238 00000bf0     1820          movk    1,a0                    ;page flipping on
     239 00000c00     0580          move    a0,@dpageflip
         00000c10 00000000! 
     240 00000c30     09e0          movi    cyrnhstd_mod,a0
         00000c40 00001790' 
     241 00000c60     0780          move    a0,@BAKMODS,L
         00000c70 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    6

     242 00000c90     0d5f          CALLA   BGND_UD1                ;create objects for background
         00000ca0 00000000! 
     243                    
     244 00000cc0     09c0          movi    AUD_BEATEN,A0
         00000cd0     0059  
     245 00000ce0     05a1          MOVE    @belt_type,a1
         00000cf0 00000000! 
     246 00000d10     cb02          jrnz    got_right_audit
     247 00000d20     09c0          MOVI    AUD_INTER,A0
         00000d30     005a  
     248 00000d40           got_right_audit
     249 00000d40     0d5f          calla   GET_AUD
         00000d50 00000000! 
     250 00000d70     0be1          SUBI    1,A1
         00000d80     fffe  
     251 00000d90     0b41          CMPI    1,A1
         00000da0     fffe  
     252 00000db0     c501          JRGE    NO_PROBLEM
     253 00000dc0     1821          MOVK    1,A1
     254 00000dd0           NO_PROBLEM
     255 00000dd0     0b41          CMPI    48,A1
         00000de0     ffcf  
     256 00000df0     c602          JRLE    NO_PROBLEM2
     257 00000e00     09c1          MOVI    48,A1
         00000e10     0030  
     258 00000e20           NO_PROBLEM2
     259 00000e20     4c25          MOVE    A1,A5
     260                    
     261 00000e30     05a1          MOVE    @belt_type,a1
         00000e40 00000000! 
     262 00000e60     cb0f          jrnz    DISPLAY_RIGHT_TABLE
     263 00000e70                   JSRP    print_inter
     264                    
     265 00000ee0                   SLEEP   TSEC*7
     266 00000f30                   RETP
     267                    
     268 00000f60           DISPLAY_RIGHT_TABLE
     269 00000f60                   JSRP    print_beaten
     270 00000fd0     0d5f          calla   hscore_colcyc
         00000fe0 00000000! 
     271 00001000     0d5f          calla   hscore_colcyc2
         00001010 00000000! 
     272                    
     273 00001030                   SLEEP   TSEC*7
     274 00001080                   RETP
     275                    
     276 000010b0           WE_PLAYED_A_TAG_TEAM
     277                    
     278 000010b0     07a9          move    @MATCH_TIMERS,a9,L
         000010c0 00000000- 
     279 000010e0     c106          jrp     cyrntime_ok
     280 000010f0     07a9          move    @MATCH_TIMERS+20h,a9,L
         00001100 00000020- 
     281 00001120     cb02          jrnz    cyrntime_ok
     282                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    7

     283                            .if DEBUG
     284                            LOCKUP  ;bogus timer value
     285                            .endif
     286 00001130     09c9          movi    12340,a9                ;123.4 seconds if the value is bogus
         00001140     3034  
     287 00001150           cyrntime_ok
     288                    
     289 00001150     574a          CLR     A10
     290 00001160     078a          MOVE    A10,@entered_inits,L
         00001170 00000000! 
     291 00001190     078a          MOVE    A10,@entered_inits+32,L
         000011a0 00000020! 
     292 000011c0     078a          MOVE    A10,@entered_inits+64,L
         000011d0 00000040! 
     293 000011f0     5708          clr     a8
     294                    
     295 00001200                   JSRP    DO_TAG_GAME
     296                    
     297 00001270     182a          MOVK    1,A10
     298 00001280     4d48          MOVE    A10,A8
     299 00001290                   JSRP    DO_TAG_GAME
     300                    
     301 00001300           are_we_waiting5
     302 00001300                   sleep   1
     303                    
     304 00001350     09c0          movi    CYCPID,a0
         00001360     0110  
     305 00001370     09c1          movi    -1,a1
         00001380     ffff  
     306 00001390     0d5f          calla   EXISTP
         000013a0 00000000! 
     307 000013c0     cb03          jrnz    are_we_waiting6
     308                    
     309 000013d0     0d5f          calla   do_that_cycle
         000013e0 00000000! 
     310 00001400           are_we_waiting6
     311 00001400     09c0          movi    HI_INPUT_PID,a0
         00001410     0137  
     312 00001420     09c1          movi    -1,a1
         00001430     ffff  
     313 00001440     0d5f          calla   EXISTP
         00001450 00000000! 
     314 00001470     cbe8          JRNZ    are_we_waiting5
     315 00001480     09c0          movi    HI_INPUT_PID+1,a0
         00001490     0138  
     316 000014a0     09c1          movi    -1,a1
         000014b0     ffff  
     317 000014c0     0d5f          calla   EXISTP
         000014d0 00000000! 
     318 000014f0     cbe0          JRNZ    are_we_waiting5
     319 00001500           no_need_for_inputc
     320                            .if RR_AWARD = 1
     321 00001500     05ae          move    @royal_rumble,a14
         00001510 00000000! 
     322 00001530     cb22          jrnz    no_scores
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    8

     323                            .endif
     324                    
     325                    
     326 00001540     0d5f          CALLA   WIPEOUT
         00001550 00000000! 
     327 00001570     1820          movk    1,a0                    ;page flipping on
     328 00001580     0580          move    a0,@dpageflip
         00001590 00000000! 
     329 000015b0     09e0          movi    cyrnhstd_mod,a0
         000015c0 00001790' 
     330 000015e0     0780          move    a0,@BAKMODS,L
         000015f0 00000000! 
     331 00001610     0d5f          CALLA   BGND_UD1                ;create objects for background
         00001620 00000000! 
     332                    
     333 00001640                   JSRP    print_tag
     334                    
     335 000016b0     0d5f          calla   hscore_colcyc
         000016c0 00000000! 
     336 000016e0     0d5f          calla   hscore_colcyc2
         000016f0 00000000! 
     337                    
     338 00001710                   SLEEP   TSEC*7
     339                    
     340                            .if RR_AWARD = 1
     341 00001760           no_scores
     342                            .endif
     343                    
     344 00001760                   RETP
     345                    
     346                    
     347 00001790           cyrnhstd_mod
     348 00001790           hstd_mod
     349 00001790 00000000!         .long   slateBMOD
     350 000017b0     0000          .word   0,0
     351 000017d0 00000000          .long   0
     352                    
     353                    ******************************************************************************
     354                    
     355 000017f0            SUBR   pin_speed_in_case
     356 000017f0     05c0          MOVE    @PSTATUS2,@TEMP_PSTATUS
         00001800 00000000! 
         00001820 00000000! 
     357                    
     358 00001840     05ae          move    @total_matches,a14
         00001850 00000000! 
     359 00001870     ca00          jrz     no_need_for_input
         00001880     00af  
     360 00001890     05ae          move    @current_round,a14
         000018a0 00000000! 
     361 000018c0     0b4e          cmpi    3,a14
         000018d0     fffc  
     362 000018e0     ca00          jreq    no_need_for_input
         000018f0     00a8  
     363                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    9

     364 00001900     0d5f          calla   is_final_match
         00001910 00000000! 
     365 00001930     c800          jrc     no_need_for_input
         00001940     00a3  
     366 00001950     09ce          movi    INSELECT,a14
         00001960     0002  
     367 00001970     058e          move    a14,@GAMSTATE
         00001980 00000000! 
     368                    
     369 000019a0     4d48          move    a10,a8
     370                    
     371 000019b0     4d01          move    a8,A1
     372 000019c0     0d5f          CALLA   get_process_ptr
         000019d0 00000000! 
     373 000019f0     4d00          MOVE    A8,A0
     374 00001a00     24a0          SLL     5,A0
     375 00001a10     0b20          ADDI    MATCH_TIMERS,A0
         00001a20 00000000- 
     376 00001a40     8600          move    *a0,A0,L
     377 00001a50     09eb          movi    FIND_LOW_TABLE_LEVEL,a11
         00001a60 00000000! 
     378 00001a80     b36d          move    a11,*a13(cyrnwhich_level),L
         00001a90     0190  
     379 00001aa0     5663          clr     a3
     380 00001ab0     09e8          MOVI    PIN_SPEED_TAB,A8
         00001ac0 00000000! 
     381 00001ae0     0d5f          calla   CHECK_SCORE
         00001af0 00000000! 
     382                    
     383 00001b10     ca00          jrz     no_need_for_input
         00001b20     0085  
     384 00001b30     4d41          move    a10,A1
     385 00001b40     24a1          sll     5,a1
     386                    
     387 00001b50     4d42          MOVE    A10,A2
     388 00001b60     2482          SLL     4,A2
     389 00001b70     4041          ADD     A2,A1
     390 00001b80     0b21          addi    entered_inits,a1
         00001b90 00000000! 
     391 00001bb0     8621          move    *a1,a1,L
     392 00001bc0     cb48          jrnz    no_display_anything
     393                    
     394                    
     395 00001bd0     09c3          MOVI    998,A3
         00001be0     03e6  
     396 00001bf0     0d5f          CALLA   SNDSND
         00001c00 00000000! 
     397 00001c20     09c0          movi    2,a0
         00001c30     0002  
     398 00001c40     0d5f          calla   RNDRNG0
         00001c50 00000000! 
     399 00001c70     4c03          move    a0,a3
     400 00001c80     11e3          addk    0fh,a3
     401 00001c90     0d5f          calla   SNDSND
         00001ca0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   10

     402                    
     403 00001cc0     18ab          MOVK    5,A11
     404 00001cd0     09c8          MOVI    32,A8
         00001ce0     0020  
     405 00001cf0                   CREATE  FADE_PID,FADE_MASTER_VOL
     406                    
     407 00001d70     0d5f          calla   WIPEOUT
         00001d80 00000000! 
     408 00001da0     1820          movk    1,a0                    ;page flipping on
     409 00001db0     0580          move    a0,@dpageflip
         00001dc0 00000000! 
     410 00001de0     0d5f          calla   start_credbox
         00001df0 00000000! 
     411 00001e10     09e0          movi    cyrnplyrsel_mod,a0
         00001e20 00003f30' 
     412 00001e40     0780          move    a0,@BAKMODS,L
         00001e50 00000000! 
     413 00001e70     0d5f          calla   BGND_UD1                ;create objects for background
         00001e80 00000000! 
     414 00001ea0     57ce          clr     a14
     415 00001eb0     058e          move    a14,@time_out
         00001ec0 00000080- 
     416                    
     417 00001ee0                   CREATE  CROUTON_PID,display_croutons
     418                    
     419 00001f60                   push    a10
     420 00001f70     5621          clr     a1
     421 00001f80     4d4a          move    a10,a10
     422 00001f90     cb01          jrnz    which_play_set
     423 00001fa0     1821          movk    1,a1
     424 00001fb0           which_play_set
     425 00001fb0     4c2a          move    a1,a10
     426 00001fc0                   CREATE  PCURSOR_PID,player_cursor
     427                    
     428 00002040                   pull    a10
     429 00002050           no_display_anything
     430                    
     431 00002050     4d48          move    a10,a8
     432 00002060     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00002070     03f0  
     433 00002080                   jsrp    pin_speed_check
     434 000020f0     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         00002100     0fc0  
     435                    
     436 00002110           are_we_waiting3
     437 00002110     4d40          move    a10,a0
     438 00002120     0b00          addi    HI_INPUT_PID,a0
         00002130     0137  
     439 00002140     09c1          movi    -1,a1
         00002150     ffff  
     440 00002160     0d5f          calla   EXISTP
         00002170 00000000! 
     441 00002190     ca1e          JRZ     no_need_for_input
     442 000021a0                   sleep   1
     443 000021f0     09c0          movi    CYCPID,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   11

         00002200     0110  
     444 00002210     09c1          movi    -1,a1
         00002220     ffff  
     445 00002230     0d5f          calla   EXISTP
         00002240 00000000! 
     446 00002260     cbea          jrnz    are_we_waiting3
     447 00002270     4d40          move    a10,a0
     448 00002280     0b00          addi    HI_INPUT_PID,a0
         00002290     0137  
     449 000022a0     09c1          movi    -1,a1
         000022b0     ffff  
     450 000022c0     0d5f          calla   EXISTP
         000022d0 00000000! 
     451 000022f0     ca08          JRZ     no_need_for_input
     452 00002300     098f          mmtm    sp,a10,a9,a8
         00002310     00e0  
     453 00002320     0d5f          calla   do_that_cycle
         00002330 00000000! 
     454 00002350     09af          mmfm    sp,a10,a9,a8
         00002360     0700  
     455 00002370     c0d9          jruc    are_we_waiting3
     456                    
     457 00002380           no_need_for_input
     458 00002380     05ae          MOVE    @TEMP_PSTATUS2,A14
         00002390 00000230- 
     459 000023b0     05a1          MOVE    @PSTATUS2,A1
         000023c0 00000000! 
     460 000023e0     482e          CMP     A1,A14
     461 000023f0     ca28          JREQ    NORMAL_EXIT     
     462                    
     463 00002400     57ce          clr     a14
     464 00002410     058e          move    a14,@time_out
         00002420 00000080- 
     465                    
     466                            ;a10 is already set up with side we are on 0 or 1
     467 00002440                   CREATE  PCURSOR_PID,player_cursor
     468 000024c0     102a          inc     a10
     469 000024d0     05ae          move    @active_flag,a14
         000024e0 00000090- 
     470 00002500     554e          or      a10,a14
     471 00002510     058e          move    a14,@active_flag
         00002520 00000090- 
     472                    
     473                    
     474 00002540     09c0          MOVI    CLOCK_PID,A0
         00002550     013a  
     475 00002560     09c1          movi    -1,a1
         00002570     ffff  
     476 00002580     0d5f          CALLA   EXISTP
         00002590 00000000! 
     477 000025b0     ca00          jrz     waitloop
         000025c0     0150  
     478                    
     479 000025d0     09ee          movi    select_time,a14
         000025e0 0000031b  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   12

     480 00002600     b1c0          move    a14,*a0(PA9)
         00002610     00a0  
     481 00002620     57ce          clr     a14
     482 00002630     058e          move    a14,@OLD_PSTATUS
         00002640 00000000! 
     483                            
     484 00002660     c000          JRUC    waitloop
         00002670     0145  
     485                    
     486 00002680           NORMAL_EXIT
     487 00002680                   RETP
     488                    
     489 000026b0           calc_match_time_1
     490 000026b0     0d3f          callr   work_out_match_time
         000026c0     0026  
     491                    ;       movi    10000,a1
     492                    ;       sub     a0,a1
     493 000026d0     c01a          JRUC    STORE_MATCH_TIME
     494                    
     495                            .def    calc_match_time_2
     496 000026e0           calc_match_time_2
     497 000026e0     0d3f          callr   work_out_match_time
         000026f0     0023  
     498                    ;       movi    10000,a1
     499                    ;       sub     a0,a1
     500 00002700     b540          MOVE    *A10(PLYRNUM),A0
         00002710     0580  
     501 00002720     0b40          CMPI    2,A0
         00002730     fffd  
     502 00002740     c51d          JRGE    NO_POINT_ITS_A_DRONE
     503 00002750     24a0          SLL     5,A0
     504 00002760     0b20          ADDI    MATCH_TIMERS,A0
         00002770 00000000- 
     505 00002790     8600          MOVE    *A0,A0,L
     506 000027a0     4020          add     a1,a0
     507 000027b0     0b60          cmpi    50000,a0
         000027c0 ffff3caf  
     508 000027e0     c507          jrge    no_bother_pin_speed_check
     509 000027f0     4c00          MOVE    A0,A0
     510 00002800     ce05          JRN     no_bother_pin_speed_check
     511 00002810     0d5f          calla   BINBCD
         00002820 00000000! 
     512 00002840     4c01          move    a0,a1
     513 00002850     c002          JRUC    STORE_MATCH_TIME
     514 00002860           no_bother_pin_speed_check
     515 00002860     09c1          movi    -1,a1
         00002870     ffff  
     516 00002880           STORE_MATCH_TIME
     517 00002880     b540          MOVE    *A10(PLYR_SIDE),A0
         00002890     05b0  
     518 000028a0     0b40          CMPI    2,A0
         000028b0     fffd  
     519 000028c0     c505          JRGE    NO_POINT_ITS_A_DRONE
     520 000028d0     24a0          SLL     5,A0
     521 000028e0     0b20          ADDI    MATCH_TIMERS,A0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   13

         000028f0 00000000- 
     522 00002910     8220          MOVE    A1,*A0,L
     523 00002920           NO_POINT_ITS_A_DRONE
     524 00002920     0960          rets
     525                    
     526                    
     527                    ******************************************************************************
     528                    *
     529                    * Return match time in a0, format is kinda funny.  Return 100 - time elapsed
     530                    * in BCD, 0xIIFF format, where II is the integer part and FF is the fractional.
     531                    * Then convert this back to hex from BCD.
     532                    
     533 00002930            SUBRP  work_out_match_time
     534                    
     535                            ;old
     536 00002930     07a4          move    @match_time,a4,L
         00002940 00000000! 
     537 00002960     4c81          move    a4,a1
     538 00002970     2f04          srl     8,a4
     539 00002980     2701          sll     24,a1
     540 00002990     2e81          srl     12,a1
     541 000029a0     5424          or      a1,a4
     542                    
     543 000029b0     05a5          move    @match_time+020h,a5
         000029c0 00000020! 
     544 000029e0     2605          sll     16,a5
     545 000029f0     2e05          srl     16,a5
     546 00002a00     09c0          movi    100,a0
         00002a10     0064  
     547 00002a20     5e05          mpyu    a0,a5
     548 00002a30     2e05          srl     16,a5
     549 00002a40     4ca0          move    a5,a0
     550 00002a50     0d5f          calla   BINBCD
         00002a60 00000000! 
     551 00002a80     5480          or      a4,a0
     552 00002a90     0d5f          calla   BCDBIN
         00002aa0 00000000! 
     553                    
     554                    
     555                            ;new
     556 00002ac0     05a1          move    @round_end_time,a1
         00002ad0 00000000! 
     557 00002af0     05ae          move    @round_start_time,a14
         00002b00 00000000! 
     558 00002b20     45c1          sub     a14,a1                  ;ticks
     559 00002b30     09ce          movi    (100<<8)/55,a14         ;convert from 55ths to 100ths.
         00002b40     01d1  
     560 00002b50     5fc1          mpyu    a14,a1
     561 00002b60     2f01          srl     8,a1
     562                    
     563                    ;       movi    10000,a0
     564                    ;       sub     a1,a0
     565                    ;       calla   BINBCD
     566                    ;       calla   BCDBIN
     567                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   14

     568 00002b70     0960          rets
     569                    
     570                    
     571                    ***********
     572                    
     573                    
     574 00002b80           howard_wins
     575 00002b80     05a0          MOVE    @SPEECH_STARTED,a0
         00002b90 000000d0- 
     576 00002bb0     0b40          CMPI    2,A0
         00002bc0     fffd  
     577 00002bd0     ca54          jreq    NO_SPEECH_COS_HOWRD_TALKIN
     578 00002be0     09e2          movi    NORMAL_WINNERS,a2
         00002bf0 00002e20' 
     579                    
     580 00002c10     0d5f          CALLA   is_final_match
         00002c20 00000000! 
     581 00002c40     c903          JRNC    NOT_LAST_MATCH
     582 00002c50     09e2          movi    SPECIAL_CONGRATS,A2
         00002c60 00002e50' 
     583                    
     584 00002c80           NOT_LAST_MATCH
     585 00002c80     1840          MOVK    2,A0
     586 00002c90     0d5f          CALLA   RNDRNG0
         00002ca0 00000000! 
     587 00002cc0     2480          SLL     4,A0
     588 00002cd0     4040          ADD     A2,A0
     589 00002ce0     8400          MOVE    *A0,A0
     590 00002cf0     0d5f          CALLA   ADD_VOICE
         00002d00 00000000! 
     591 00002d20     1840          movk    2,a0
     592 00002d30     0580          MOVE    a0,@SPEECH_STARTED
         00002d40 000000d0- 
     593 00002d60                   sleep   80
     594 00002db0     5600          clr     a0
     595 00002dc0     0580          MOVE    a0,@SPEECH_STARTED
         00002dd0 000000d0- 
     596 00002df0                   die
     597                    
     598 00002e20           NORMAL_WINNERS
     599 00002e20     01fe          .WORD   1FEH
     600 00002e30     0300          .WORD   L_SIGN_YOUR_NAME
     601 00002e40     01bb          .WORD   SIGN_HERE_PLEASE
     602                    
     603 00002e50           SPECIAL_CONGRATS
     604 00002e50     00f2          .WORD   CONGRATULATIONS
     605 00002e60     02ff          .WORD   L_CONGRATS
     606 00002e70     00f2          .WORD   CONGRATULATIONS
     607                    
     608                    
     609                    
     610 00002e80            SUBRP  call_wrestler_name
     611 00002e80                   SLEEPK  20              ;wait 1/3 sec before doing anything.
     612                    
     613 00002ec0           cyrnwait        SLEEPK  1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   15

     614 00002f00     05a0          MOVE    @SPEECH_STARTED,A0
         00002f10 000000d0- 
     615 00002f30     cbf8          JRNZ    cyrnwait
     616 00002f40     07a1          MOVE    @NEXT_ANN_QUEUE,A1,L
         00002f50 00000000! 
     617 00002f70     07a2          MOVE    @CURRENT_ANN_QUEUE,A2,L
         00002f80 00000000! 
     618 00002fa0     4822          CMP     A1,A2
     619 00002fb0     cb16          JRNE    NO_SPEECH_COS_HOWRD_TALKIN
     620 00002fc0     1820          MOVK    1,A0
     621 00002fd0     0580          MOVE    A0,@SPEECH_STARTED
         00002fe0 000000d0- 
     622 00003000     8509          MOVE    *A8,A9
     623 00003010     24a9          SLL     5,A9
     624 00003020     0b29          ADDI    WHICH_SPEECH,A9
         00003030 00003150' 
     625 00003050     8520          MOVE    *A9,A0
     626 00003060     0d5f          CALLA   ADD_VOICE
         00003070 00000000! 
     627 00003090     b500          MOVE    *A8(010H),A0
         000030a0     0010  
     628 000030b0     0d5f          CALLA   PRCSLP
         000030c0 00000000! 
     629 000030e0     5600          CLR     A0
     630 000030f0     0580          MOVE    A0,@SPEECH_STARTED
         00003100 000000d0- 
     631 00003120           NO_SPEECH_COS_HOWRD_TALKIN
     632 00003120                   DIE
     633                    
     634                    ;Bret
     635                    ;Razor
     636                    ;Taker
     637                    ;Yoko
     638                    ;Shawn
     639                    ;Bam Bam
     640                    ;Doink
     641                    ;spare
     642                    ;Lex
     643 00003150           WHICH_SPEECH
     644 00003150     0131          .WORD   131H,70
     645 00003170     012d          .WORD   12DH,44
     646 00003190     012f          .WORD   12FH,54
     647 000031b0     0132          .WORD   132H,59
     648 000031d0     012c          .WORD   12CH,55
     649 000031f0     012e          .WORD   12EH,76
     650 00003210     012b          .WORD   12BH,54
     651 00003230     0000          .WORD   0,0
     652 00003250     0130          .WORD   130H,47
     653                    
     654 00003270            SUBR   buyin_select
     655                    
     656                    ;This turns on the player select background, etc.
     657                    
     658                    ;If this is a one player game, then display standard challenger needed
     659                    ;message on the correct side.  Then display a please continue message
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   16

     660                    ;on the other side, along with a buyin timer.
     661                    
     662                    ;If this is a two player game, turn on the cursor, etc. for the winning
     663                    ;player.  Then display a please continue message on the other side, along
     664                    ;with a buyin timer.
     665                    
     666                    ;If a player chooses to let his buyin timer expire, then check to see if
     667                    ;he had achieved a high score.  If so, display the initials on his side
     668                    ;and let him pick.  The other player (or none) will stay in limbo.
     669                    
     670 00003270     09ce          movi    INWAITCONT,a14          ;set GAMSTATE
         00003280     0005  
     671 00003290     058e          move    a14,@GAMSTATE
         000032a0 00000000! 
     672                    
     673 000032c0            SUBR   select_screen
     674                    
     675                            ;clear royal_rumble at the start of every select screen
     676 000032c0     57ce          clr     a14
     677 000032d0     058e          move    a14,@royal_rumble
         000032e0 00000000! 
     678                    
     679 00003300     0d5f          calla   display_blank
         00003310 00000000! 
     680 00003330     5600          clr     a0
     681                    ;       move    a0,@secret_damage
     682 00003340     0580          MOVE    A0,@SPEECH_STARTED
         00003350 000000d0- 
     683                    
     684 00003370     0d5f          calla   WIPEOUT                 ;kill any attract modes or old
         00003380 00000000! 
     685                                                            ;battles lying around.
     686 000033a0     09ce          movi    INSELECT,a14            ;set GAMSTATE
         000033b0     0002  
     687 000033c0     058e          move    a14,@GAMSTATE
         000033d0 00000000! 
     688 000033f0     09ce          movi    SELECT_PID,a14          ;set our PID
         00003400     0300  
     689 00003410     b1cd          move    a14,*a13(PROCID)
         00003420     0020  
     690                    
     691                     .if DEBUG
     692                    ;Temp, stuff @index1,2 for testing wrestlers.
     693                    
     694                            move    @skip_select,a0
     695                            jrz     cyrnnoskp
     696                    
     697                    ;0      (Bret)
     698                    ;1      (Razor)
     699                    ;2      (Taker)
     700                    ;3      (Yoko)
     701                    ;4      (Shawn)
     702                    ;5      (Bam Bam)
     703                    ;6      (Doink)
     704                    ;7      spare
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   17

     705                    ;8      (Lex)
     706                    
     707                            calla   display_unblank
     708                            movi    4,a0
     709                            move    a0,@index1
     710                            movi    8,a0
     711                            move    a0,@index2
     712                    
     713                    ;       MOVK    1,A0
     714                    ;       .ref    BONUS_POWER
     715                    ;       MOVE    A0,@BONUS_POWER
     716                    
     717                            move    @skip_select,a0
     718                            jrp     cyrnskp
     719                    
     720                            .ref    NUM_OPPS
     721                            movk    1,a0
     722                            move    a0,@NUM_OPPS
     723                    
     724                    cyrnskp
     725                    ;       RETP
     726                    
     727                            clr     a0
     728                            calla   get_but_val_cur
     729                            btst    PLAYER_BLOCK_BIT,a0
     730                            jrz     cyrnno_block1
     731                            movk    1,a14
     732                            move    a14,@stay_down
     733                            andni   PLAYER_BLOCK_VAL,a0
     734                    cyrnno_block1
     735                            X16     a0
     736                            addi    cyrnselect_table,a0
     737                            move    *a0,a14
     738                            move    a14,@index1
     739                    
     740                            movi    1,a0
     741                            calla   get_but_val_cur
     742                            btst    PLAYER_BLOCK_BIT,a0
     743                            jrz     cyrnno_block2
     744                            movk    1,a14
     745                            move    a14,@stay_down
     746                            andni   PLAYER_BLOCK_VAL,a0
     747                    cyrnno_block2
     748                            X16     a0
     749                            addi    cyrnselect_table,a0
     750                            move    *a0,a14
     751                            move    a14,@index2
     752                            RETP
     753                    
     754                            ;lookup table
     755                    cyrndf  equ     8       ;LEX
     756                    cyrnselect_table
     757                            .word   cyrndf
     758                            .word   3               ;1      punch           - YOKO
     759                            .word   cyrndf,cyrndf
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   18

     760                            .word   0               ;4      spunch          - BRET
     761                            .word   8               ;5      punch + spunch  - LEX
     762                            .word   cyrndf,cyrndf
     763                            .word   1               ;8      kick            - RAZOR
     764                            .word   6               ;9      punch + kick    - DOINK
     765                            .word   cyrndf,cyrndf,cyrndf
     766                            .word   cyrndf,cyrndf,cyrndf
     767                            .word   4               ;16     skick           - SHAWN
     768                            .word   cyrndf,cyrndf,cyrndf
     769                            .word   5               ;20     spunch + skick  - BAM BAM
     770                            .word   cyrndf,cyrndf,cyrndf
     771                            .word   2               ;24     kick + skick    - TAKER
     772                            .word   cyrndf,cyrndf,cyrndf
     773                            .word   cyrndf,cyrndf,cyrndf,cyrndf
     774                    
     775                            BSSX    skip_select,    16
     776                    
     777                    cyrnnoskp
     778                     .endif
     779                    
     780 00003430     18ab          MOVK    5,A11
     781 00003440     09c8          MOVI    32,A8
         00003450     0020  
     782 00003460                   CREATE  FADE_PID,FADE_MASTER_VOL
     783                    
     784 000034e0     5600          clr     a0
     785 000034f0     0580          move    a0,@blow_out
         00003500 000000c0- 
     786                    
     787 00003520     1820          movk    1,a0                    ;page flipping on
     788 00003530     0580          move    a0,@dpageflip
         00003540 00000000! 
     789                    
     790 00003560     09e0          movi    cyrnplyrsel_mod,a0
         00003570 00003f30' 
     791 00003590     0780          move    a0,@BAKMODS,L
         000035a0 00000000! 
     792 000035c0     0d5f          calla   BGND_UD1                ;create objects for background
         000035d0 00000000! 
     793                    
     794                            ;play wrestlemania tune
     795                            .if MUSIC_ON
     796 000035f0     05a0          MOVE    @match_cnt,A0
         00003600 00000000! 
     797 00003620     cb07          JRNZ    NO_NEW_TUNE
     798 00003630                   CREATE0 wmania_tune
     799 000036a0           NO_NEW_TUNE
     800                            .endif
     801                    
     802 000036a0                   CREATE  CROUTON_PID,display_croutons
     803 00003720     0d5f          calla   start_credbox
         00003730 00000000! 
     804                    
     805                    ;Initialize flags
     806 00003750     05ae          move    @PSTATUS2,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   19

         00003760 00000000! 
     807 00003780     058e          move    a14,@active_flag
         00003790 00000090- 
     808                    
     809 000037b0     57ce          clr     a14
     810 000037c0     058e          move    a14,@time_out
         000037d0 00000080- 
     811                    
     812                            ;create the player cursors
     813 000037f0     574a          clr     a10
     814 00003800     05ae          move    @rr_loss,a14
         00003810 00000220- 
     815 00003830     ca03          jrz     cyrnnot_rr
     816 00003840     058a          move    a10,@cursor_procs
         00003850 00000210- 
     817 00003870           cyrnnot_rr
     818 00003870                   CREATE  PCURSOR_PID,player_cursor
     819                    
     820 000038f0     0780          move    a0,@kp_p1cursor,L
         00003900 000000a0- 
     821 00003920                   CREATE0 blink_rndper
     822                    
     823 00003990     182a          movk    1,a10
     824 000039a0                   CREATE  PCURSOR_PID,player_cursor
     825                    
     826                            ;wait for them to finish up
     827                    
     828 00003a20                   SLEEPK  1
     829                    
     830 00003a60     1820          movk    1,a0
     831 00003a70     0580          move    a0,@DISPLAYON
         00003a80 00000000! 
     832 00003aa0     0d5f          calla   display_unblank
         00003ab0 00000000! 
     833                    
     834 00003ad0           waitloop
     835 00003ad0                   SLEEPK  1
     836 00003b10     05ae          move    @are_we_waiting_f,a14
         00003b20 00000100- 
     837 00003b40     c604          jrle    no_we_are_not
     838                    ;       jrz     no_we_are_not
     839                    ;       jrn     no_we_are_not
     840 00003b50     142e          dec     a14
     841 00003b60     058e          move    a14,@are_we_waiting_f
         00003b70 00000100- 
     842 00003b90           no_we_are_not
     843                    
     844 00003b90     05ae          move    @active_flag,a14
         00003ba0 00000090- 
     845 00003bc0     cbf0          jrnz    waitloop
     846                    
     847 00003bd0     05ae          move    @OLD_PSTATUS2,a14
         00003be0 00000000! 
     848 00003c00     cbec          jrnz    waitloop
     849                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   20

     850                    
     851                    ;Players have chosen their guys.  wait a sec, then bail
     852 00003c10     09c8          movi    30,a8
         00003c20     001e  
     853 00003c30           cyrnfinal_waitloop
     854                    
     855 00003c30                   SLEEPK  1
     856                    
     857 00003c70     05ae          move    @active_flag,a14        ;don't quit if someone jumps in here
         00003c80 00000090- 
     858 00003ca0     cbe2          jrnz    waitloop
     859                    
     860 00003cb0     05a0          move    @blow_out,a0
         00003cc0 000000c0- 
     861 00003ce0     cb01          jrnz    cyrnout
     862                    
     863 00003cf0     3da8          dsj     a8,cyrnfinal_waitloop
     864                    
     865 00003d00           cyrnout
     866 00003d00                   RETP
     867                    
     868                    
     869 00003d30            SUBRP  display_croutons
     870                    
     871                    ;Why is this a process?
     872                    
     873                    ;Draw the croutons and their associated pix
     874                    
     875 00003d30     05a0          move    @PSTATUS2,a0
         00003d40 00000000! 
     876                    ;       jrnz    cyrngocrut
     877                    ;       SLEEPK  1
     878                    ;       jruc    display_croutons
     879                    ;cyrngocrut
     880                    
     881 00003d60     09e9          movi    crouton_pos_table,a9
         00003d70 000040d0' 
     882 00003d90     09ea          movi    cyrncrouton_pic_table,a10
         00003da0 00003fd0' 
     883 00003dc0     9520          move    *a9+,a0
     884 00003dd0           cyrncrouton_loop
     885 00003dd0     9521          move    *a9+,a1
     886                    
     887 00003de0     2600          sll     16,a0
     888 00003df0     2601          sll     16,a1
     889 00003e00     9742          move    *a10+,a2,L
     890 00003e10     09e3          movi    cyrncrutpic_z,a3
         00003e20 00000004  
     891 00003e40     09e4          movi    DMAWNZ,a4
         00003e50 00008002  
     892 00003e70     09c5          movi    CLSNEUT,a5
         00003e80     0000  
     893 00003e90     56c6          clr     a6
     894 00003ea0     56e7          clr     a7
     895                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   21

     896 00003eb0     0d5f          calla   BEGINOBJW
         00003ec0 00000000! 
     897                    
     898 00003ee0     9520          move    *a9+,a0
     899 00003ef0     cbed          jrnz    cyrncrouton_loop
     900                    
     901                    ;       CREATE0 select_clock
     902                    ;       move    a0,a10
     903                    ;       CREATE0 clock_digits
     904                    
     905 00003f00                   DIE
     906                    
     907                    
     908 00003f30           cyrnplyrsel_mod
     909 00003f30 00000000!         .long   wwfselbkBMOD
     910 00003f50     ffd8          .word   -40,0
     911 00003f70 00000000!         .long   choiceBMOD
     912 00003f90     0003          .word   3,256
     913 00003fb0 00000000          .long   0
     914                    
     915              0001  cyrncrutplt_z   equ     1
     916              0002  hiplate_z       equ     2       ;oscillates from 2 to 3
     917              0004  cyrncrutpic_z   equ     4
     918              0005  hilite_z        equ     5
     919                    
     920              0001  cyrnbaseshad_z  equ     1
     921              0002  cyrnhishad_z    equ     2
     922              0003  cyrnattplt_z    equ     3
     923              0003  cyrnsidebar_z   equ     3
     924              0005  cyrnnameshad_z  equ     5
     925              0007  cyrnnamebar_z   equ     7
     926              0008  atttxt_z        equ     8
     927                    
     928              0009  name_z          equ     9
     929                    
     930              0001  mugshot_z       equ     1
     931                    
     932 00003fd0           cyrncrouton_pic_table
     933 00003fd0 00000000!         .long   CRUT_DK
     934 00003ff0 00000000!         .long   CRUT_RR
     935 00004010 00000000!         .long   CRUT_UN
     936 00004030 00000000!         .long   CRUT_YK
     937 00004050 00000000!         .long   CRUT_SM
     938 00004070 00000000!         .long   CRUT_BM
     939 00004090 00000000!         .long   CRUT_BH
     940 000040b0 00000000!         .long   CRUT_LX
     941                    
     942 000040d0           crouton_pos_table
     943 000040d0     00a4          .word   164,45
     944 000040f0     00cc          .word   204,45
     945                    
     946 00004110     00a4          .word   164,90
     947 00004130     00cc          .word   204,90
     948                    
     949 00004150     00a4          .word   164,135
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   22

     950 00004170     00cc          .word   204,135
     951                    
     952 00004190     00a4          .word   164,180
     953 000041b0     00cc          .word   204,180
     954                    
     955 000041d0     0000          .word   0
     956                    
     957                    
     958                    *****************************************************************************
     959                    * Process that handles player selection for one player.
     960                    * 0a10H = player (0 or 1)
     961                    
     962 000041e0                   STRUCTPD
     963 000041e0                   LONG            wrirHILITE                      ;UHL *hilite ring
     964                    
     965 000041e0                   LONG            wrirHIPLATE             ;UHL *color crouton
     966                    
     967 000041e0                   LONG            wrirNAME                        ;UHL *name obj (message *obj)
     968 000041e0                   WORD            wrirRND_DEST            ;UHW target if in random mode
     969                    
     970 000041e0                   LONG            wrirMUG1
     971 000041e0                   LONG            wrirMUG2
     972 000041e0                   LONG            wrirMUG3
     973 000041e0                   LONG            wrirMUG4
     974 000041e0                   LONG            wrirMUG5
     975 000041e0                   LONG            wrirMUG6
     976 000041e0                   LONG            wrirMUG7
     977 000041e0                   LONG            wrirMUG8
     978                    
     979 000041e0                   LONG            wrirATT1
     980 000041e0                   LONG            wrirATT2
     981 000041e0                   LONG            wrirATT3
     982 000041e0                   LONG            wrirATT4
     983 000041e0                   WORD            wrirCNTR                        ;Flashing cursor delay
     984                    
     985                    
     986                    ;player info struct
     987              0000  wrirPI_HILITE   equ     0               ;UHL hilite box TBL_ hdr
     988              0020  wrirPI_HIPLATE  equ     20h             ;UHL hilite plate TBL_ hdr
     989              0040  wrirPI_STARTPOS equ     40h             ;UHW starting pos (index)
     990              0050  wrirPI_MUGPOS   equ     50h             ;UHL mugshot [y,x]
     991              0050  wrirPI_MUGXPOS  equ     50h             ;UHW mugshot x
     992              0060  wrirPI_MUGYPOS  equ     60h             ;UHW mugshot y
     993              0070  wrirPI_MUGCTRL  equ     70h             ;UHW mugshot OCTRL
     994              0080  wrirPI_STARTNAME        equ     80h             ;UHL starting name TBL_ hdr
     995              00a0  wrirPI_ATTTXT   equ     0A0h            ;UHL atttribute text TBL_ hdr
     996              00c0  wrirPI_INDEX    equ     0C0h            ;UHL write selection word here
     997              00e0  wrirPI_MOVESOUND        equ     0E0h            ;UHW cursor move triple_sound
     998              00f0  wrirPI_SELSOUND equ     0F0h            ;UHW select sound
     999                    
    1000              0005  wrirrnd_movespeed       equ     5               ;ticks between rndsel moves
    1001                    
    1002              000e  wrirrnd_wander  equ     14              ;rnd moves before home-in begins
    1003                    
    1004 000041e0            SUBRP  player_cursor
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   23

    1005                    
    1006                            ;reg use
    1007                            ;  a6 = ticks until another move is allowed (debounce)
    1008                            ;  a6 = ticks until next move (random mode)
    1009                            ;  a7 = moves until home-in (random mode)
    1010                            ;  a9 = player info struct pointer
    1011                            ; a10 = player number
    1012                            ; a11 = position index (0-9)
    1013                    
    1014                            ;aim a9 at wrirp?info
    1015 000041e0     4d49          move    a10,a9
    1016 000041f0                   X32     a9
    1017 00004200     0b29          addi    wririnfo,a9
         00004210 0000ae70' 
    1018 00004230     8729          move    *a9,a9,L
    1019                    
    1020                            ;initialize the index word to -1
    1021 00004240     09ce          movi    -1,a14
         00004250     ffff  
    1022 00004260     b720          move    *a9(wrirPI_INDEX),a0,L
         00004270     00c0  
    1023 00004280     81c0          move    a14,*a0,W
    1024                    
    1025                            ;initialize random dest to -1
    1026 00004290     09ce          movi    -1,a14
         000042a0     ffff  
    1027 000042b0     b1cd          move    a14,*a13(wrirRND_DEST)
         000042c0     0160  
    1028                    
    1029 000042d0     5600          clr     a0
    1030 000042e0     b20d          move    a0,*a13(wrirNAME),L
         000042f0     0140  
    1031 00004300     1bc0          movk    30,a0
    1032 00004310     b00d          move    a0,*a13(wrirCNTR)
         00004320     02f0  
    1033                            ;active?
    1034 00004330     05ae          move    @PSTATUS2,a14
         00004340 00000000! 
    1035 00004360     4b4e          btst    a10,a14
    1036 00004370     cb00          jrnz    wrirbegin_select
         00004380     0331  
    1037                    
    1038 00004390     05ae          move    @OLD_PSTATUS2,a14
         000043a0 00000000! 
    1039 000043c0     4b4e          btst    a10,a14
    1040 000043d0     ca00          jrz     wrirnorm
         000043e0     016a  
    1041                    
    1042                    ;This guy lost his last match:
    1043                    ;did this guy get a high win streak ? 
    1044 000043f0     4d48          move    a10,a8
    1045 00004400     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00004410     03f0  
    1046 00004420                   JSRP    winstreak_check
    1047 00004490     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   24

         000044a0     0fc0  
    1048                    ;       .ref    wrestler_number
    1049                    ;       .ref    process_ptrs
    1050                    ;
    1051                    ;       PUSH    a9
    1052                    ;       movi    process_ptrs,a9
    1053                    ;wrirfind_loop
    1054                    ;       move    *a9(PLYRNUM),a0
    1055                    ;       cmp     a10,a0
    1056                    ;       jrz     wrirfound
    1057                    ;       addi    32,a9
    1058                    ;       jruc    wrirfind_loop
    1059                    ;wrirfound
    1060                    ;       move    *a9(WRESTLERNUM),a0,W
    1061                    ;       move    a0,@wrestler_number,L
    1062                    ;       PULL    a9
    1063                    
    1064                            ;wait for the enter initials stuff to end
    1065 000044b0           are_we_waiting
    1066 000044b0     4d40          move    a10,a0
    1067 000044c0     0b00          addi    HI_INPUT_PID,a0
         000044d0     0137  
    1068 000044e0     09c1          movi    -1,a1
         000044f0     ffff  
    1069 00004500     0d5f          calla   EXISTP
         00004510 00000000! 
    1070 00004530     ca1d          JRZ     FINISHED_INPUTTING
    1071 00004540                   SLEEPK  1
    1072 00004580     09c0          movi    CYCPID,a0
         00004590     0110  
    1073 000045a0     09c1          movi    -1,a1
         000045b0     ffff  
    1074 000045c0     0d5f          calla   EXISTP
         000045d0 00000000! 
    1075 000045f0     cbeb          jrnz    are_we_waiting
    1076                    
    1077 00004600     4d40          move    a10,a0
    1078 00004610     0b00          addi    HI_INPUT_PID,a0
         00004620     0137  
    1079 00004630     09c1          movi    -1,a1
         00004640     ffff  
    1080 00004650     0d5f          calla   EXISTP
         00004660 00000000! 
    1081 00004680     ca08          JRZ     FINISHED_INPUTTING
    1082 00004690     098f          mmtm    sp,a10,a9,a8
         000046a0     00e0  
    1083 000046b0     0d5f          calla   do_that_cycle
         000046c0 00000000! 
    1084 000046e0     09af          mmfm    sp,a10,a9,a8
         000046f0     0700  
    1085 00004700     c0da          jruc    are_we_waiting
    1086                    
    1087 00004710           FINISHED_INPUTTING
    1088 00004710     05ae          move    @auto_init,a14
         00004720 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   25

    1089 00004740     ca0a          jrz     wrirno_ai
    1090 00004750     09e2          movi    auto_str,a2
         00004760 0000f740' 
    1091 00004780     0d5f          calla   print_message
         00004790 00000000! 
    1092 000047b0     57ce          clr     a14
    1093 000047c0     058e          move    a14,@auto_init
         000047d0 00000000! 
    1094 000047f0           wrirno_ai
    1095                    
    1096 000047f0     0d5f          calla   show_bonus_icons
         00004800 00000000! 
    1097                    
    1098                            ;create the name text
    1099 00004820     b720          move    *a9(wrirPI_STARTNAME),a0,L
         00004830     0080  
    1100 00004840     0d5f          calla   BEGINOBJ_TBL
         00004850 00000000! 
    1101 00004870     b30d          move    a8,*a13(wrirNAME),L
         00004880     0140  
    1102                    
    1103                    ;Display please continue message
    1104                    ;Display price to continue
    1105                    ;Turn on continue timer at bottom of screen (Attribute area)
    1106                    
    1107                    ;Wait for him to make a decision
    1108                    ;If he continues, turn on cursor, etc.
    1109                    ;If he does not continue, start the other players time out for
    1110                    ;player selection (If other plyr is present)
    1111                    
    1112 00004890                   CREATE0 buyin_counter
    1113 00004900     0d3f          callr   buyin_text
         00004910     0862  
    1114                    
    1115                    ;Inactive.  wait for buyin
    1116                    ;Display the insert coin/press start message
    1117                    
    1118 00004920           wrirenough_money1
    1119 00004920     0d5f          calla   CR_CONTP
         00004930 00000000! 
    1120 00004950     c909          jrhs    wrirenough_money2
    1121                    ;There's not enough money.  flash 'insert coins' message and wait
    1122 00004960     b7a8          move    *a13(wrirNAME),a8,L
         00004970     0140  
    1123 00004980     09e0          movi    WF_INSERT,a0
         00004990 00000000! 
    1124 000049b0     0d5f          calla   civanic
         000049c0 00000000! 
    1125 000049e0     c008          jruc    wrirstart_waitloop1
    1126 000049f0           wrirenough_money2
    1127                    ;There's enough money.  flash 'press start' message and wait
    1128 000049f0     b7a8          move    *a13(wrirNAME),a8,L
         00004a00     0140  
    1129 00004a10     09e0          movi    WF_START,a0
         00004a20 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   26

    1130 00004a40     0d5f          calla   civanic
         00004a50 00000000! 
    1131                    
    1132 00004a70           wrirstart_waitloop1
    1133 00004a70     05ae          move    @OLD_PSTATUS2,a14
         00004a80 00000000! 
    1134 00004aa0     4b4e          btst    a10,a14
    1135 00004ab0     cb00          jrnz    wrirokz
         00004ac0     00dd  
    1136                    
    1137 00004ad0     05ae          move    @PSTATUS2,a14
         00004ae0 00000000! 
    1138 00004b00     4b4e          btst    a10,a14
    1139 00004b10     cb00          jrnz    wrirokz
         00004b20     00d7  
    1140                    ;Timer has run out on this player
    1141 00004b30     4d48          move    a10,a8
    1142 00004b40     0d5f          calla   clear_icon_total
         00004b50 00000000! 
    1143 00004b70     0d5f          calla   del_bonus_icons
         00004b80 00000000! 
    1144 00004ba0     05a0          move    @PSTATUS2,a0
         00004bb0 00000000! 
    1145 00004bd0     cb00          jrnz    wrirstill
         00004be0     00ba  
    1146 00004bf0     05a0          move    @rr_loss,a0
         00004c00 00000220- 
    1147 00004c20     ca1c          jrz     do_game_over
    1148 00004c30     05a0          move    @cursor_procs,a0
         00004c40 00000210- 
    1149 00004c60     ca18          jrz     do_game_over
    1150 00004c70     4d40          move    a10,a0
    1151 00004c80     1020          addk    1,a0
    1152 00004c90     05ae          move    @active_flag,a14
         00004ca0 00000090- 
    1153 00004cc0     540e          or      a0,a14
    1154 00004cd0     058e          move    a14,@active_flag
         00004ce0 00000090- 
    1155 00004d00     c000          jruc    wrirstill
         00004d10     00a7  
    1156                    ;       jruc    do_game_over
    1157                    
    1158                    ;Goto game over.
    1159 00004d20            SUBR   THIS_GAME_IS_BEATEN
    1160 00004d20     5600          CLR     A0
    1161 00004d30     0580          MOVE    A0,@PSTATUS
         00004d40 00000000! 
    1162                    
    1163 00004d60     09ce          movi    INGAMEOVER,a14          ;set GAMSTATE
         00004d70     0007  
    1164 00004d80     058e          move    a14,@GAMSTATE
         00004d90 00000000! 
    1165 00004db0     09ce          movi    GAMEOVER_PID,a14        ;set our PID
         00004dc0     0800  
    1166 00004dd0     b1cd          move    a14,*a13(PROCID)
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   27

         00004de0     0020  
    1167                    
    1168                    ;       ;put up the sneak preview screen
    1169                    ;       calla   display_blank
    1170                    ;       calla   WIPEOUT
    1171                    ;       movk    1,a0                    ;page flipping on
    1172                    ;       move    a0,@dpageflip
    1173                    ;       movi    hstd_mod,a0
    1174                    ;       move    a0,@BAKMODS,L
    1175                    ;       CALLA   BGND_UD1                ;create objects for background
    1176                    ;
    1177                    ;       movi    wrirwin1_msg,a2
    1178                    ;       calla   print_message
    1179                    ;
    1180                    ;       movi    wrirwin2_msg,a2
    1181                    ;       calla   print_message
    1182                    ;
    1183                    ;       movi    wrirwin3_msg,a2
    1184                    ;       calla   print_message
    1185                    ;
    1186                    ;       calla   display_unblank
    1187                    ;
    1188                    ;       SLEEP   TSEC*10
    1189                    
    1190 00004df0            SUBR   do_game_over
    1191                    
    1192                            ;kill the ladder
    1193 00004df0     0d5f          calla   INIT_LADDER_TABLE
         00004e00 00000000! 
    1194                    
    1195 00004e20     57ce          clr     a14
    1196 00004e30     058e          move    a14,@rr_loss
         00004e40 00000220- 
    1197 00004e60     058e          move    a14,@PSTATUS
         00004e70 00000000! 
    1198                    
    1199 00004e90     09ce          movi    INGAMEOVER,a14          ;set GAMSTATE
         00004ea0     0007  
    1200 00004eb0     058e          move    a14,@GAMSTATE
         00004ec0 00000000! 
    1201                    
    1202 00004ee0     09ce          movi    GAMEOVER_PID,a14        ;set our PID
         00004ef0     0800  
    1203 00004f00     b1cd          move    a14,*a13(PROCID)
         00004f10     0020  
    1204                    
    1205 00004f20     0d5f          calla   display_blank
         00004f30 00000000! 
    1206 00004f50     0d5f          calla   WIPEOUT
         00004f60 00000000! 
    1207                    
    1208                            .ref    wsf14_ascii,GENERIC_DISPLAY
    1209                    
    1210 00004f80                   JSRP    GENERIC_DISPLAY
    1211                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   28

    1212 00004ff0     09e2          movi    LN1b_setup,a2
         00005000 00005600' 
    1213 00005020     0d5f          calla   setup_message
         00005030 00000000! 
    1214 00005050     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00005060     0702  
    1215 00005070     0580          move    a0,@mess_objid          ;OBJ ID's for text
         00005080 00000000! 
    1216 000050a0     09e4          movi    wrirstr_game,a4
         000050b0 00005740' 
    1217 000050d0     0d5f          calla   print_string_C2
         000050e0 00000000! 
    1218                    
    1219 00005100     09e2          movi    LN2b_setup,a2
         00005110 000056a0' 
    1220 00005130     0d5f          calla   setup_message
         00005140 00000000! 
    1221 00005160     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00005170     0702  
    1222 00005180     0580          move    a0,@mess_objid          ;OBJ ID's for text
         00005190 00000000! 
    1223 000051b0     09e4          movi    wrirstr_over,a4
         000051c0 00005768' 
    1224 000051e0     0d5f          calla   print_string_C2
         000051f0 00000000! 
    1225                    
    1226                    ;       .ref    show_wrestler_end_story
    1227                    
    1228                    ;       movi    0,a1
    1229                    ;       clr     a0
    1230                    ;       calla   show_wrestler_end_story
    1231                    ;       SLEEP   TSEC*5
    1232                    
    1233 00005210                   SLEEPK  1
    1234                    
    1235 00005250     09cb          MOVI    -1,A11
         00005260     ffff  
    1236 00005270     09c8          MOVI    100,A8
         00005280     0064  
    1237 00005290                   CREATE  FADE_PID,FADE_MASTER_VOL
    1238                    
    1239 00005310     0d5f          calla   display_unblank
         00005320 00000000! 
    1240 00005340                   SLEEP   TSEC*4
    1241 00005390     0d5f          calla   UNIT_CLR                ;CLEAR THE FACTIONS OF FRACTIONS
         000053a0 00000000! 
    1242                    
    1243 000053c0     09c0          movi    AMODE_PID,a0
         000053d0     0100  
    1244 000053e0     b00d          move    a0,*a13(PROCID)
         000053f0     0020  
    1245                    
    1246 00005400     5663          CLR     A3
    1247 00005410     0d5f          CALLA   SNDSND
         00005420 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   29

    1248                    
    1249 00005440     09c0          movi    ADJVOLUME,a0
         00005450     001c  
    1250 00005460     0d5f          calla   GET_ADJ
         00005470 00000000! 
    1251 00005490                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    1252 00005520     0d5f          calla   set_volume
         00005530 00000000! 
    1253                    
    1254 00005550     5708          clr     a8
    1255 00005560     0d5f          calla   clear_icon_total
         00005570 00000000! 
    1256 00005590     1828          movk    1,a8
    1257 000055a0     0d5f          calla   clear_icon_total
         000055b0 00000000! 
    1258                    
    1259 000055d0     c080          jauc    attract_mode
         000055e0 00000000! 
    1260                    
    1261 00005600           LN1b_setup
    1262 00005600                   JAM_STR wgsf24_ascii,6,0,200,128-41,WGSF_Y_P,0
    1263 000056a0           LN2b_setup
    1264 000056a0                   JAM_STR wgsf24_ascii,6,0,200,128,WGSF_Y_P,0
    1265 00005740           wrirstr_game
    1266 00005740       47          .byte   "GAME",0
    1267 00005768           wrirstr_over
    1268 00005768       4f          .byte   "OVER",0
    1269 00005790                   .even
    1270                    
    1271                    ;wrirwin1_msg
    1272                    ;       JAM_STR osgemd_ascii,10,0,200,50,GOLD,print_string_C2
    1273                    ;       .byte   "THANK YOU FOR PLAYING",0,0
    1274                    ;       .even
    1275                    ;
    1276                    ;wrirwin2_msg
    1277                    ;       JAM_STR osgemd_ascii,10,0,200,90,GOLD,print_string_C2
    1278                    ;       .byte   "THIS SNEAK PREVIEW",0,0
    1279                    ;       .even
    1280                    ;
    1281                    ;wrirwin3_msg
    1282                    ;       JAM_STR osgemd_ascii,10,0,200,130,GOLD,print_string_C2
    1283                    ;       .byte   "OF WRESTLEMANIA BY MIDWAY",0,0
    1284                    ;       .even
    1285                    
    1286 00005790           wrirstill
    1287                    ;Other player is in game
    1288 00005790     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000057a0     0704  
    1289 000057b0     4140          add     a10,a0
    1290 000057c0     0d5f          calla   obj_del1c
         000057d0 00000000! 
    1291                    ;If other player has already picked his wrestler, just blow out of here
    1292                    ;otherwise, goto challenger needed screen stuff...
    1293 000057f0     05ae          move    @active_flag,a14        ;don't quit if someone jumps in here
         00005800 00000090- 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   30

    1294 00005820     cb26          jrnz    wrirnorm
    1295                    ;Tell buyin_select proc to wake up and exit!
    1296 00005830     1820          movk    1,a0
    1297 00005840     0580          move    a0,@blow_out
         00005850 000000c0- 
    1298                    
    1299 00005870                   DIE
    1300                    
    1301 000058a0           wrirokz
    1302 000058a0                   SLEEPK  1
    1303                    
    1304 000058e0     0d3f          callr   wrirblink
         000058f0     02a8  
    1305                    
    1306 00005900     05ae          move    @PSTATUS2,a14
         00005910 00000000! 
    1307 00005930     4b4e          btst    a10,a14
    1308 00005940     ca00          jrz     wrirenough_money1
         00005950     fefc  
    1309                    
    1310                    ;       jrz     wrirstart_waitloop1
    1311                    
    1312 00005960     b500          move    *a8(OXPOS),a0
         00005970     0090  
    1313 00005980     0b80          andi    1ffh,a0
         00005990 fffffe00  
    1314 000059b0     b008          move    a0,*a8(OXPOS)
         000059c0     0090  
    1315                    
    1316 000059d0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000059e0     0704  
    1317 000059f0     4140          add     a10,a0
    1318 00005a00     0d5f          calla   obj_del1c
         00005a10 00000000! 
    1319                    
    1320 00005a30                   SLEEPK  1                       ;Fix pal glitch!
    1321                    
    1322 00005a70     c000          jruc    wrirbegin_select
         00005a80     01c1  
    1323                    
    1324 00005a90           wrirnorm
    1325                    
    1326 00005a90     b7a8          move    *a13(wrirNAME),a8,L
         00005aa0     0140  
    1327 00005ab0     cb07          jrnz    no_need_to_create_name
    1328                    
    1329                            ;create the name text
    1330 00005ac0     b720          move    *a9(wrirPI_STARTNAME),a0,L
         00005ad0     0080  
    1331 00005ae0     0d5f          calla   BEGINOBJ_TBL
         00005af0 00000000! 
    1332 00005b10     b30d          move    a8,*a13(wrirNAME),L
         00005b20     0140  
    1333 00005b30           no_need_to_create_name
    1334                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   31

    1335                    ;Place a message which reads:
    1336                    ;Challenger needed!
    1337                    ;x credits to start
    1338                    ;Unless we are in freeplay!  Then
    1339                    ;just display challenger needed centered
    1340                    ;in the box!
    1341                    
    1342 00005b30     1a60          movk    ADJFREPL,a0             ;Are we in free play?
    1343 00005b40     0d5f          calla   GET_ADJ
         00005b50 00000000! 
    1344 00005b70     ca39          jrz     wrirnot_freeply
    1345                    
    1346                    ;Print free play
    1347 00005b80     09e2          movi    wrirln0_setup,a2
         00005b90 00006c10' 
    1348 00005bb0     4d4a          move    a10,a10
    1349 00005bc0     ca03          jrz     wrirok2c
    1350 00005bd0     09e2          movi    wrirln0_setupb,a2
         00005be0 00006cb0' 
    1351 00005c00     0d5f  wrirok2c        calla   setup_message
         00005c10 00000000! 
    1352                    
    1353 00005c30     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00005c40     0704  
    1354 00005c50     4140          add     a10,a0
    1355 00005c60     0580          move    a0,@mess_objid
         00005c70 00000000! 
    1356                    
    1357 00005c90     09e4          movi    wrirstr_text0,a4
         00005ca0 00007528' 
    1358 00005cc0     0d5f          calla   print_string_C2
         00005cd0 00000000! 
    1359                    
    1360                    
    1361                    
    1362                    ;Print centered "challenger needed" message
    1363 00005cf0     09e2          movi    wrirln1_setup,a2
         00005d00 00006d50' 
    1364 00005d20     4d4a          move    a10,a10
    1365 00005d30     ca03          jrz     wrirok
    1366 00005d40     09e2          movi    wrirln1_setupb,a2
         00005d50 00006df0' 
    1367 00005d70     0d5f  wrirok  calla   setup_message
         00005d80 00000000! 
    1368                    
    1369 00005da0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00005db0     0704  
    1370 00005dc0     4140          add     a10,a0
    1371 00005dd0     0580          move    a0,@mess_objid
         00005de0 00000000! 
    1372                    
    1373 00005e00     09e4          movi    wrirstr_text,a4
         00005e10 000074d0' 
    1374 00005e30     0d5f          calla   print_string_C2
         00005e40 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   32

    1375                    
    1376 00005e60     09e2          movi    wrirln2_setup,a2
         00005e70 00006e90' 
    1377 00005e90     4d4a          move    a10,a10
    1378 00005ea0     ca00          jrz     wrirok4
         00005eb0     0093  
    1379 00005ec0     09e2          movi    wrirln2_setupb,a2
         00005ed0 00006f30' 
    1380 00005ef0     c000          jruc    wrirok4
         00005f00     008e  
    1381                    
    1382 00005f10           wrirnot_freeply
    1383                    ;Print how many credits to start
    1384 00005f10                   PUSH    a8
    1385 00005f20     1980          movk    ADJCSTRT,a0
    1386 00005f30     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         00005f40 00000000! 
    1387 00005f60     4c03          move    a0,a3
    1388 00005f70     0b40          cmpi    10,a0
         00005f80     fff5  
    1389 00005f90     c401          jrlt    wrirmax
    1390 00005fa0     1920          movk    9,a0
    1391 00005fb0           wrirmax
    1392 00005fb0     24a0          sll     5,a0
    1393 00005fc0     0b20          addi    digits_tbl,a0
         00005fd0 0000c870' 
    1394 00005ff0     8602          move    *a0,a2,L                ;* image
    1395                    
    1396 00006000     09e0          movi    [050,0],a0                      ;x pos
         00006010 00320000  
    1397 00006030     0b43          cmpi    1,a3
         00006040     fffe  
    1398 00006050     cb03          jrnz    wrirnot1
    1399 00006060     09e0          movi    [054,0],a0                      ;x pos
         00006070 00360000  
    1400 00006090     4d4a  wrirnot1        move    a10,a10
    1401 000060a0     ca09          jrz     wrirzp1
    1402 000060b0     09e0          movi    [0122h,0],a0                    ;x pos
         000060c0 01220000  
    1403 000060e0     0b43          cmpi    1,a3
         000060f0     fffe  
    1404 00006100     cb03          jrnz    wrirzp1
    1405 00006110     09e0          movi    [0126h,0],a0                    ;x pos
         00006120 01260000  
    1406 00006140           wrirzp1
    1407 00006140     09e1          movi    [110,0],a1                      ;y pos
         00006150 006e0000  
    1408 00006170     09c3          movi    104+200,a3                      ;z pos
         00006180     0130  
    1409 00006190     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         000061a0 0000a002  
    1410 000061c0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         000061d0     0704  
    1411 000061e0     4145          add     a10,a5                          ;object ID
    1412 000061f0     56c6          clr     a6                              ;x vel
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   33

    1413 00006200     56e7          clr     a7                              ;y vel
    1414 00006210     09f0          movi    FNT9YEL_P,b0
         00006220 00000000! 
    1415 00006240     0d5f          calla   BEGINOBJP
         00006250 00000000! 
    1416 00006270                   PULL    a8
    1417                    
    1418 00006280     09e2          movi    wrirln3_setup,a2
         00006290 00007250' 
    1419 000062b0     4d4a          move    a10,a10
    1420 000062c0     ca03          jrz     wrirok2
    1421 000062d0     09e2          movi    wrirln3_setupb,a2
         000062e0 000072f0' 
    1422 00006300     0d5f  wrirok2 calla   setup_message
         00006310 00000000! 
    1423                    
    1424 00006330     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006340     0704  
    1425 00006350     4140          add     a10,a0
    1426 00006360     0580          move    a0,@mess_objid
         00006370 00000000! 
    1427                    
    1428 00006390     09e4          movi    wrirstr_text3,a4
         000063a0 000075b8' 
    1429 000063c0     1980          movk    ADJCSTRT,a0
    1430 000063d0     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         000063e0 00000000! 
    1431 00006400     0b40          cmpi    1,a0
         00006410     fffe  
    1432 00006420     cb03          jrnz    wrirnot1b
    1433 00006430     09e4          movi    wrirstr_text3b,a4
         00006440 00007608' 
    1434 00006460           wrirnot1b
    1435 00006460     0d5f          calla   print_string_C2
         00006470 00000000! 
    1436                    
    1437 00006490     09e2          movi    wrirln4_setup,a2
         000064a0 00007390' 
    1438 000064c0     4d4a          move    a10,a10
    1439 000064d0     ca03          jrz     wrirok2B
    1440 000064e0     09e2          movi    wrirln4_setupb,a2
         000064f0 00007430' 
    1441 00006510     0d5f  wrirok2B        calla   setup_message
         00006520 00000000! 
    1442                    
    1443 00006540     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006550     0704  
    1444 00006560     4140          add     a10,a0
    1445 00006570     0580          move    a0,@mess_objid
         00006580 00000000! 
    1446                    
    1447 000065a0     09e4          movi    wrirstr_text4,a4
         000065b0 00007650' 
    1448 000065d0     0d5f          calla   print_string_C2
         000065e0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   34

    1449                    
    1450                    
    1451                    ;Print "challenger needed" message
    1452 00006600     09e2          movi    wrirln1_setupx,a2
         00006610 00006fd0' 
    1453 00006630     4d4a          move    a10,a10
    1454 00006640     ca03          jrz     wrirok3
    1455 00006650     09e2          movi    wrirln1_setupxb,a2
         00006660 00007070' 
    1456 00006680     0d5f  wrirok3 calla   setup_message
         00006690 00000000! 
    1457                    
    1458 000066b0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000066c0     0704  
    1459 000066d0     4140          add     a10,a0
    1460 000066e0     0580          move    a0,@mess_objid
         000066f0 00000000! 
    1461                    
    1462 00006710     09e4          movi    wrirstr_text,a4
         00006720 000074d0' 
    1463 00006740     0d5f          calla   print_string_C2
         00006750 00000000! 
    1464                    
    1465 00006770     09e2          movi    wrirln2_setupx,a2
         00006780 00007110' 
    1466 000067a0     4d4a          move    a10,a10
    1467 000067b0     ca03          jrz     wrirok4
    1468 000067c0     09e2          movi    wrirln2_setupxb,a2
         000067d0 000071b0' 
    1469 000067f0     0d5f  wrirok4 calla   setup_message
         00006800 00000000! 
    1470                    
    1471 00006820     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006830     0704  
    1472 00006840     4140          add     a10,a0
    1473 00006850     0580          move    a0,@mess_objid
         00006860 00000000! 
    1474                    
    1475 00006880     09e4          movi    wrirstr_text2,a4
         00006890 00007578' 
    1476 000068b0     0d5f          calla   print_string_C2
         000068c0 00000000! 
    1477                    
    1478                    ;Inactive.  wait for buyin
    1479                    ;Create the insert coin/press start message
    1480                      
    1481 000068e0           wrirenough_money
    1482 000068e0     0d5f          calla   CR_STRTP
         000068f0 00000000! 
    1483 00006910     c909          jrhs    wrirenough_money3
    1484                    ;There's not enough money.  flash 'insert coins' message and wait
    1485 00006920     b7a8          move    *a13(wrirNAME),a8,L
         00006930     0140  
    1486 00006940     09e0          movi    WF_INSERT,a0
         00006950 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   35

    1487 00006970     0d5f          calla   civanic
         00006980 00000000! 
    1488 000069a0     c008          jruc    wrirstart_waitloop
    1489 000069b0           wrirenough_money3
    1490                    ;There's enough money.  flash 'press start' message and wait
    1491 000069b0     b7a8          move    *a13(wrirNAME),a8,L
         000069c0     0140  
    1492 000069d0     09e0          movi    WF_START,a0
         000069e0 00000000! 
    1493 00006a00     0d5f          calla   civanic
         00006a10 00000000! 
    1494                    
    1495                    
    1496 00006a30           wrirstart_waitloop
    1497 00006a30                   SLEEPK  1
    1498                    
    1499 00006a70     0d3f          callr   wrirblink
         00006a80     018f  
    1500                    
    1501 00006a90     05ae          move    @PSTATUS2,a14
         00006aa0 00000000! 
    1502 00006ac0     4b4e          btst    a10,a14
    1503 00006ad0     cae0          jrz     wrirenough_money
    1504                    
    1505                    ;       jrz     wrirstart_waitloop
    1506                    
    1507 00006ae0     b500          move    *a8(OXPOS),a0
         00006af0     0090  
    1508 00006b00     0b80          andi    1ffh,a0
         00006b10 fffffe00  
    1509 00006b30     b008          move    a0,*a8(OXPOS)
         00006b40     0090  
    1510                    
    1511 00006b50     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006b60     0704  
    1512 00006b70     4140          add     a10,a0
    1513 00006b80     0d5f          calla   obj_del1c
         00006b90 00000000! 
    1514                    
    1515 00006bb0                   SLEEPK  1                       ;Fix pal glitch!
    1516                    
    1517 00006bf0     c000          jruc    wrirbegin_select
         00006c00     00a9  
    1518                    
    1519                    
    1520                    
    1521 00006c10           wrirln0_setup
    1522 00006c10                   JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    1523 00006cb0           wrirln0_setupb
    1524 00006cb0                   JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    1525                    
    1526 00006d50           wrirln1_setup
    1527 00006d50                   JAM_STR font9_ascii,8,0,81,80,FNT9YEL_P,0
    1528 00006df0           wrirln1_setupb
    1529 00006df0                   JAM_STR font9_ascii,8,0,321,80,FNT9YEL_P,0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   36

    1530                    
    1531 00006e90           wrirln2_setup
    1532 00006e90                   JAM_STR font9_ascii,8,0,81,95,FNT9YEL_P,0
    1533 00006f30           wrirln2_setupb
    1534 00006f30                   JAM_STR font9_ascii,8,0,321,95,FNT9YEL_P,0
    1535                    
    1536 00006fd0           wrirln1_setupx
    1537 00006fd0                   JAM_STR font9_ascii,8,0,81,60,FNT9YEL_P,0
    1538 00007070           wrirln1_setupxb
    1539 00007070                   JAM_STR font9_ascii,8,0,321,60,FNT9YEL_P,0
    1540                    
    1541 00007110           wrirln2_setupx
    1542 00007110                   JAM_STR font9_ascii,8,0,81,75,FNT9YEL_P,0
    1543 000071b0           wrirln2_setupxb
    1544 000071b0                   JAM_STR font9_ascii,8,0,321,75,FNT9YEL_P,0
    1545                    
    1546                    
    1547 00007250           wrirln3_setup
    1548 00007250                   JAM_STR font9_ascii,8,0,81,110,FNT9YEL_P,0
    1549 000072f0           wrirln3_setupb
    1550 000072f0                   JAM_STR font9_ascii,8,0,321,110,FNT9YEL_P,0
    1551                    
    1552 00007390           wrirln4_setup
    1553 00007390                   JAM_STR font9_ascii,8,0,81,125,FNT9YEL_P,0
    1554 00007430           wrirln4_setupb
    1555 00007430                   JAM_STR font9_ascii,8,0,321,125,FNT9YEL_P,0
    1556                    
    1557 000074d0           wrirstr_text
    1558 000074d0       43          .string "CHALLENGER",0
    1559 00007528           wrirstr_text0
    1560 00007528       46          .string "FREE PLAY",0
    1561 00007578           wrirstr_text2
    1562 00007578       4e          .string "NEEDED!",0
    1563 000075b8           wrirstr_text3
    1564 000075b8       20          .string "  CREDITS",0
    1565 00007608           wrirstr_text3b
    1566 00007608       20          .string "  CREDIT",0
    1567 00007650           wrirstr_text4
    1568 00007650       54          .string "TO START",0
    1569 000076a0                   .even
    1570                    
    1571 000076a0           wrirbegin_select
    1572 000076a0     05a0          MOVE    @no_pin_check,A0
         000076b0 00000000! 
    1573 000076d0     cb1f          JRNZ    are_we_waiting2
    1574 000076e0     0d5f          calla   is_final_match
         000076f0 00000000! 
    1575 00007710     c81b          jrc     are_we_waiting2
    1576                    
    1577 00007720     4d48          move    a10,a8
    1578 00007730     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00007740     03f0  
    1579 00007750                   JSRP    pin_speed_check
    1580 000077c0     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         000077d0     0fc0  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   37

    1581                    
    1582 000077e0     4d40          move    a10,a0
    1583 000077f0     0b00          addi    HI_INPUT_PID,a0
         00007800     0137  
    1584 00007810     09c1          movi    -1,a1
         00007820     ffff  
    1585 00007830     0d5f          calla   EXISTP
         00007840 00000000! 
    1586 00007860     ca06          jrz     no_set_it_later
    1587 00007870     4d40          move    a10,a0
    1588 00007880     1020          inc     a0
    1589 00007890     03a0          neg     a0
    1590 000078a0     0580          move    a0,@are_we_waiting_f
         000078b0 00000100- 
    1591 000078d0           no_set_it_later
    1592                    
    1593                    ;       move    @PSTATUS2,A0
    1594                    ;       CMPI    3,A0
    1595                    ;       JREQ    are_we_waiting2
    1596                    ;
    1597                    ;       movi    60,a0
    1598                    ;       move    a0,@are_we_waiting_f
    1599                    
    1600 000078d0           are_we_waiting2
    1601 000078d0     4d40          move    a10,a0
    1602 000078e0     0b00          addi    HI_INPUT_PID,a0
         000078f0     0137  
    1603 00007900     09c1          movi    -1,a1
         00007910     ffff  
    1604 00007920     0d5f          calla   EXISTP
         00007930 00000000! 
    1605 00007950     ca1e          JRZ     FINISHED_INPUTTING2b
    1606 00007960                   sleep   1
    1607 000079b0     09c0          movi    CYCPID,a0
         000079c0     0110  
    1608 000079d0     09c1          movi    -1,a1
         000079e0     ffff  
    1609 000079f0     0d5f          calla   EXISTP
         00007a00 00000000! 
    1610 00007a20     cbea          jrnz    are_we_waiting2
    1611 00007a30     4d40          move    a10,a0
    1612 00007a40     0b00          addi    HI_INPUT_PID,a0
         00007a50     0137  
    1613 00007a60     09c1          movi    -1,a1
         00007a70     ffff  
    1614 00007a80     0d5f          calla   EXISTP
         00007a90 00000000! 
    1615 00007ab0     ca08          JRZ     FINISHED_INPUTTING2b
    1616 00007ac0     098f          mmtm    sp,a10,a9,a8
         00007ad0     00e0  
    1617 00007ae0     0d5f          calla   do_that_cycle
         00007af0 00000000! 
    1618 00007b10     09af          mmfm    sp,a10,a9,a8
         00007b20     0700  
    1619 00007b30     c0d9          jruc    are_we_waiting2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   38

    1620                    
    1621 00007b40           FINISHED_INPUTTING2b
    1622 00007b40     05a0          move    @are_we_waiting_f,a0
         00007b50 00000100- 
    1623 00007b70     4d41          move    a10,a1
    1624 00007b80     1021          inc     a1
    1625 00007b90     03a1          neg     a1
    1626 00007ba0     4820          cmp     a1,a0
    1627 00007bb0     cb05          jrne    FINISHED_INPUTTING2
    1628 00007bc0     09c0          movi    60,a0
         00007bd0     003c  
    1629 00007be0     0580          move    a0,@are_we_waiting_f
         00007bf0 00000100- 
    1630                    
    1631 00007c10           FINISHED_INPUTTING2
    1632                    
    1633 00007c10     09c0          MOVI    CLOCK_PID,A0
         00007c20     013a  
    1634 00007c30     09c1          movi    -1,a1
         00007c40     ffff  
    1635 00007c50     0d5f          CALLA   EXISTP
         00007c60 00000000! 
    1636 00007c80     cb12          JRNZ    CLOCK_ALREADY_TICKING
    1637                    
    1638 00007c90                   PUSH    A10
    1639 00007ca0                   CREATE  CLOCK_PID,select_clock
    1640 00007d20     4c0a          move    a0,a10
    1641 00007d30                   CREATE0 clock_digits
    1642 00007da0                   PULL    A10
    1643                    
    1644 00007db0           CLOCK_ALREADY_TICKING
    1645                    
    1646 00007db0     b7a8          move    *a13(wrirNAME),a8,L
         00007dc0     0140  
    1647 00007dd0     cb07          jrnz    no_need_to_create
    1648                    
    1649                            ;create the name text
    1650 00007de0     b720          move    *a9(wrirPI_STARTNAME),a0,L
         00007df0     0080  
    1651 00007e00     0d5f          calla   BEGINOBJ_TBL
         00007e10 00000000! 
    1652 00007e30     b30d          move    a8,*a13(wrirNAME),L
         00007e40     0140  
    1653 00007e50           no_need_to_create
    1654                    
    1655 00007e50     05ae          move    @total_matches,a14
         00007e60 00000000! 
    1656 00007e80     cb18          jrnz    HOWARD_ALREADY_GOING
    1657 00007e90     05ae          move    @DONE_HOWARD,a14
         00007ea0 00000000! 
    1658 00007ec0     cb2a          jrnz    HOWARD_HAS_SPOKEN
    1659                    
    1660 00007ed0           GOOD_EVENING
    1661 00007ed0     09c0          movi    1Fbh,a0
         00007ee0     01fb  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   39

    1662 00007ef0     0d5f          CALLA   ADD_VOICE
         00007f00 00000000! 
    1663 00007f20     09c0          movi    1Fch,a0
         00007f30     01fc  
    1664 00007f40     0d5f          CALLA   ADD_VOICE
         00007f50 00000000! 
    1665 00007f70     09c0          movi    1Fdh,a0
         00007f80     01fd  
    1666 00007f90     0d5f          CALLA   ADD_VOICE
         00007fa0 00000000! 
    1667                    
    1668 00007fc0     1820          movk    1,a0
    1669 00007fd0     0580          move    a0,@DONE_HOWARD
         00007fe0 00000000! 
    1670 00008000     c016          JRUC    HOWARD_HAS_SPOKEN
    1671                    
    1672 00008010           HOWARD_ALREADY_GOING
    1673 00008010     05ae          move    @DONE_HOWARD,a14
         00008020 00000000! 
    1674 00008040     cb12          jrnz    HOWARD_HAS_SPOKEN
    1675 00008050     09c0          MOVI    100,A0
         00008060     0064  
    1676 00008070     0d5f          CALLA   RNDPER
         00008080 00000000! 
    1677 000080a0     c20c          jrls    HOWARD_HAS_SPOKEN
    1678                    
    1679 000080b0     0be0          SUBI    50,A0
         000080c0     ffcd  
    1680 000080d0     cedf          JRN     GOOD_EVENING
    1681 000080e0     09c0          movi    1Ffh,a0
         000080f0     01ff  
    1682 00008100     0d5f          CALLA   ADD_VOICE
         00008110 00000000! 
    1683                    
    1684 00008130     1820          movk    1,a0
    1685 00008140     0580          move    a0,@DONE_HOWARD
         00008150 00000000! 
    1686 00008170           HOWARD_HAS_SPOKEN
    1687                    
    1688                            ;set our active bit if it's not already set
    1689 00008170     05ae          move    @active_flag,a14
         00008180 00000090- 
    1690 000081a0     4d40          move    a10,a0
    1691 000081b0     1020          inc     a0
    1692 000081c0     540e          or      a0,a14
    1693 000081d0     058e          move    a14,@active_flag
         000081e0 00000090- 
    1694                    
    1695                            ;initialize index
    1696 00008200     b52b          move    *a9(wrirPI_STARTPOS),a11
         00008210     0040  
    1697                    
    1698                            ;initialize wrirMUG?
    1699 00008220     1900          movk    8,a0
    1700 00008230     5621          clr     a1
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   40

    1701 00008240     4da2          move    a13,a2
    1702 00008250     0b02          addi    wrirMUG1,a2
         00008260     0170  
    1703 00008270           wririnitloop
    1704 00008270     9222          move    a1,*a2+,L
    1705 00008280     3c40          dsj     a0,wririnitloop
    1706                    
    1707                    ;       ;create our attrib text
    1708                    ;       move    *a9(wrirPI_ATTTXT),a0,L
    1709                    ;       calla   BEGINOBJ_TBL
    1710                    ;       move    *a8(OXVAL),a0,L
    1711                    ;       move    *a8(OYVAL),a1,L
    1712                    ;
    1713                    ;       ;create the att bars
    1714                    ;       addi    [63,0],a0
    1715                    ;       addi    [12,0],a1
    1716                    ;       movi    ATTMTR_0,a2
    1717                    ;       movi    atttxt_z,a3
    1718                    ;       movi    DMAWNZ,a4
    1719                    ;       movi    CLSNEUT,a5
    1720                    ;       clr     a6
    1721                    ;       clr     a7
    1722                    ;
    1723                    ;       PUSH    a10,a11
    1724                    ;
    1725                    ;       movi    4,a10                   ;bar count
    1726                    ;       move    a13,a11
    1727                    ;       addi    wrirATT1,a11
    1728                    ;
    1729                    ;wrirabc_loop
    1730                    ;       PUSH    a0,a1,a2,a3,a4,a5,a6,a7
    1731                    ;       calla   BEGINOBJ
    1732                    ;       PULL    a0,a1,a2,a3,a4,a5,a6,a7
    1733                    ;       move    a8,*a11+,L
    1734                    ;       addi    [8,0],a1
    1735                    ;       dsj     a10,wrirabc_loop
    1736                    ;       PULL    a10,a11
    1737                    
    1738                            ;create our cursors
    1739 00008290     b720          move    *a9(wrirPI_HILITE),a0,L
         000082a0     0000  
    1740 000082b0     0d5f          calla   BEGINOBJ_TBL
         000082c0 00000000! 
    1741 000082e0     b30d          move    a8,*a13(wrirHILITE),L
         000082f0     0100  
    1742                    
    1743 00008300     b720          move    *a9(wrirPI_HIPLATE),a0,L
         00008310     0020  
    1744 00008320     0d5f          calla   BEGINOBJ_TBL
         00008330 00000000! 
    1745 00008350     b30d          move    a8,*a13(wrirHIPLATE),L
         00008360     0120  
    1746                    
    1747 00008370     c01d          jruc    wrirfirst_adjust
    1748                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   41

    1749 00008380           wrirblink
    1750 00008380     b5a0          move    *a13(wrirCNTR),a0
         00008390     02f0  
    1751 000083a0     1420          dec     a0
    1752 000083b0     b00d          move    a0,*a13(wrirCNTR)
         000083c0     02f0  
    1753 000083d0     c10a          jrp     wrircont
    1754 000083e0     1ac0          movk    22,a0
    1755 000083f0     b00d          move    a0,*a13(wrirCNTR)
         00008400     02f0  
    1756 00008410     b500          move    *a8(OXPOS),a0
         00008420     0090  
    1757 00008430     0bc0          xori    1000h,a0
         00008440 00001000  
    1758 00008460     b008          move    a0,*a8(OXPOS)
         00008470     0090  
    1759 00008480           wrircont
    1760 00008480     0960          rets
    1761                    
    1762                    
    1763                            .if     0
    1764                    
    1765                    ;Color cycle cursors...
    1766                    ;Good example for future cycles....
    1767                    
    1768                            PUSH    a8,a9,a10,a11
    1769                    
    1770                            move    a10,a10
    1771                            jrz     wrirblue
    1772                    
    1773                            movi    [1,1],a8
    1774                            movi    CRHI_R_P,a9
    1775                            movi    redcyc_tbl,a10
    1776                            movk    4,a11
    1777                            CREATE  CYCPID,CYCLE_TABLE
    1778                            jruc    wrirout
    1779                    
    1780                    wrirblue
    1781                            movi    [1,1],a8
    1782                            movi    CRHI_B_P,a9
    1783                            movi    blucyc_tbl,a10
    1784                            movk    4,a11
    1785                            CREATE  CYCPID,CYCLE_TABLE
    1786                    
    1787                    wrirout PULL    a8,a9,a10,a11
    1788                    
    1789                            jruc    wrirfirst_adjust
    1790                    
    1791                    
    1792                    blucyc_tbl
    1793                            .word   0041fh
    1794                            .word   0001fh
    1795                            .word   0001fh
    1796                            .word   0001fh
    1797                            .word   0001fh
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   42

    1798                            .word   0001fh
    1799                            .word   0001fh
    1800                            .word   0001fh
    1801                            .word   0001fh
    1802                            .word   0001fh
    1803                            .word   0001fh
    1804                            .word   0001fh
    1805                            .word   0001fh
    1806                            .word   0001fh
    1807                            .word   0001fh
    1808                            .word   0001fh
    1809                            .word   0001fh
    1810                            .word   0081fh,00c1fh,0101fh,0141fh,0181fh
    1811                            .word   01c1fh,0201fh,0241fh,0281fh,02c1fh,0301fh,0341fh,0381fh
    1812                            .word   03c1fh,0401fh,0441fh,0481fh,04c1fh,0501fh,0541fh,0581fh
    1813                            .word   05c1fh,0601fh,0641fh,0681fh,06c1fh,0701fh
    1814                            .word   0741fh,0701fh,06c1fh,0681fh,0641fh,0601fh,05c1fh
    1815                            .word   0581fh,0541fh,0501fh,04c1fh,0481fh,0441fh,0401fh,03c1fh
    1816                            .word   0381fh,0341fh,0301fh,02c1fh,0281fh,0241fh,0201fh,01c1fh
    1817                            .word   0181fh,0141fh,0101fh,00c1fh,0081fh,0041fh
    1818                    
    1819                            .word   0041fh
    1820                            .word   0001fh
    1821                            .word   0001fh
    1822                            .word   0001fh
    1823                            .word   0001fh
    1824                            .word   0001fh
    1825                            .word   0001fh
    1826                            .word   0001fh
    1827                            .word   0001fh
    1828                            .word   0001fh
    1829                            .word   0001fh
    1830                            .word   0001fh
    1831                            .word   0001fh
    1832                            .word   0001fh
    1833                            .word   0001fh
    1834                            .word   0001fh
    1835                            .word   0001fh
    1836                            .word   0081fh,00c1fh,0101fh,0141fh,0181fh
    1837                            .word   01c1fh,0201fh,0241fh,0281fh,02c1fh,0301fh,0341fh,0381fh
    1838                            .word   03c1fh,0401fh,0441fh,0481fh,04c1fh,0501fh,0541fh,0581fh
    1839                            .word   05c1fh,0601fh,0641fh,0681fh,06c1fh,0701fh
    1840                            .word   0741fh,0701fh,06c1fh,0681fh,0641fh,0601fh,05c1fh
    1841                            .word   0581fh,0541fh,0501fh,04c1fh,0481fh,0441fh,0401fh,03c1fh
    1842                            .word   0381fh,0341fh,0301fh,02c1fh,0281fh,0241fh,0201fh,01c1fh
    1843                            .word   0181fh,0141fh,0101fh,00c1fh,0081fh,0041fh
    1844                            .word   -1
    1845                    
    1846                    redcyc_tbl
    1847                            .word   07c20h
    1848                            .word   07c00h
    1849                            .word   07c00h
    1850                            .word   07c00h
    1851                            .word   07c00h
    1852                            .word   07c00h
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   43

    1853                            .word   07c00h
    1854                            .word   07c00h
    1855                            .word   07c00h
    1856                            .word   07c00h
    1857                            .word   07c00h
    1858                            .word   07c00h
    1859                            .word   07c00h
    1860                            .word   07c00h
    1861                            .word   07c00h
    1862                            .word   07c00h
    1863                            .word   07c00h
    1864                            .word   07c40h,07c60h,07c80h,07ca0h,07cc0h
    1865                            .word   07ce0h,07d00h,07d20h,07d40h,07d60h,07d80h,07da0h,07dc0h
    1866                            .word   07de0h,07e00h,07e20h,07e40h,07e60h,07e80h,07ea0h
    1867                            .word   07ec0h,07ee0h,07f00h,07f20h,07f40h,07f60h,07f80h
    1868                            .word   07fa0h,07f80h,07f60h,07f40h,07f20h,07f00h,07ee0h,07ec0h
    1869                            .word   07ea0h,07e80h,07e60h,07e40h,07e20h,07e00h,07de0h
    1870                            .word   07dc0h,07da0h,07d80h,07d60h,07d40h,07d20h,07d00h,07ce0h
    1871                            .word   07cc0h,07ca0h,07c80h,07c60h,07c40h,07c20h
    1872                    
    1873                            .word   07c20h
    1874                            .word   07c00h
    1875                            .word   07c00h
    1876                            .word   07c00h
    1877                            .word   07c00h
    1878                            .word   07c00h
    1879                            .word   07c00h
    1880                            .word   07c00h
    1881                            .word   07c00h
    1882                            .word   07c00h
    1883                            .word   07c00h
    1884                            .word   07c00h
    1885                            .word   07c00h
    1886                            .word   07c00h
    1887                            .word   07c00h
    1888                            .word   07c00h
    1889                            .word   07c00h
    1890                            .word   07c40h,07c60h,07c80h,07ca0h,07cc0h
    1891                            .word   07ce0h,07d00h,07d20h,07d40h,07d60h,07d80h,07da0h,07dc0h
    1892                            .word   07de0h,07e00h,07e20h,07e40h,07e60h,07e80h,07ea0h
    1893                            .word   07ec0h,07ee0h,07f00h,07f20h,07f40h,07f60h,07f80h
    1894                            .word   07fa0h,07f80h,07f60h,07f40h,07f20h,07f00h,07ee0h,07ec0h
    1895                            .word   07ea0h,07e80h,07e60h,07e40h,07e20h,07e00h,07de0h
    1896                            .word   07dc0h,07da0h,07d80h,07d60h,07d40h,07d20h,07d00h,07ce0h
    1897                            .word   07cc0h,07ca0h,07c80h,07c60h,07c40h,07c20h
    1898                            .word   -1
    1899                    
    1900                            .endif
    1901                    
    1902                    
    1903 00008490           wriradjust
    1904 00008490     b520          move    *a9(wrirPI_MOVESOUND),a0
         000084a0     00e0  
    1905                    
    1906 000084b0     b5ae          move    *a13(wrirRND_DEST),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   44

         000084c0     0160  
    1907 000084d0     ce02          jrn     wrirmove_sound_ok
    1908 000084e0     09c0          movi    0DDH,a0
         000084f0     00dd  
    1909 00008500           wrirmove_sound_ok
    1910                    
    1911 00008500     0d5f          calla   triple_sound
         00008510 00000000! 
    1912 00008530     0d3f          callr   wrirerase_mugshot
         00008540     0219  
    1913 00008550           wrirfirst_adjust
    1914 00008550     0d3f          callr   wrirplace_cursor
         00008560     01df  
    1915 00008570     0d3f          callr   wrirdraw_mugshot
         00008580     0223  
    1916 00008590     0d3f          callr   wrirupdate_name
         000085a0     01fe  
    1917                    ;       callr   wrirupdate_attbars
    1918                    
    1919                            ;set a6 to debounce value if not rndsel, or to move time if rndsel
    1920 000085b0     b5ae          move    *a13(wrirRND_DEST),a14
         000085c0     0160  
    1921 000085d0     cf06          jrnn    wrirwaitloop
    1922 000085e0     1866          movk    3,a6
    1923                    
    1924 000085f0     5600          clr     a0
    1925 00008600     b008          move    a0,*a8(OCONST)          ;Clr color
         00008610     0160  
    1926 00008620     b00d          move    a0,*a13(wrirCNTR)
         00008630     02f0  
    1927                    
    1928 00008640           wrirwaitloop
    1929                    
    1930 00008640     0d3f          callr   wrirplace_cursor
         00008650     01d0  
    1931                    
    1932                            ;flash the hilightes
    1933 00008660     b7a8          move    *a13(wrirHIPLATE),a8,L
         00008670     0120  
    1934 00008680     b50e          move    *a8(OZPOS),a14
         00008690     00d0  
    1935 000086a0     0bce          xori    1,a14
         000086b0 00000001  
    1936 000086d0     b1c8          move    a14,*a8(OZPOS)
         000086e0     00d0  
    1937                    
    1938 000086f0     b7a8          move    *a13(wrirHILITE),a8,L
         00008700     0100  
    1939 00008710     b50e          move    *a8(OZPOS),a14
         00008720     00d0  
    1940 00008730     0bce          xori    1,a14
         00008740 00000001  
    1941 00008760     b1c8          move    a14,*a8(OZPOS)
         00008770     00d0  
    1942                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   45

    1943 00008780                   PUSHP   a6,a7
    1944 000087a0                   SLEEPK  1
    1945 000087e0                   PULLP   a6,a7
    1946                    
    1947                    ;Flash cursors white
    1948                    
    1949 00008800     b5ae          move    *a13(wrirCNTR),a14
         00008810     02f0  
    1950 00008820     142e          dec     a14
    1951 00008830     b1cd          move    a14,*a13(wrirCNTR)
         00008840     02f0  
    1952 00008850     c110          jrp     wrirnormz
    1953 00008860     190e          movk    8,a14
    1954 00008870     b1cd          move    a14,*a13(wrirCNTR)
         00008880     02f0  
    1955                    
    1956 00008890                   PUSH    a6,a7,a9
    1957 000088b0     09c9          movi    0202h,a9
         000088c0     0202  
    1958 000088d0                   CREATE0 FLASHME
    1959                            .ref    FLASHME
    1960 00008940                   PULL    a6,a7,a9
    1961 00008960           wrirnormz
    1962                    
    1963                            ;are we in random mode?
    1964 00008960     b5ae          move    *a13(wrirRND_DEST),a14
         00008970     0160  
    1965 00008980     ce3f          jrn     wrirnot_rndsel
    1966                    
    1967                            ;we're in random select
    1968 00008990     0d86          dsj     a6,wrirwaitloop
         000089a0     ffc9  
    1969                    
    1970                            ;time to move again
    1971 000089b0     09c6          movi    wrirrnd_movespeed,a6    ;set time to next move
         000089c0     0005  
    1972 000089d0     1427          dec     a7
    1973 000089e0     c115          jrp     wrirmove_at_random
    1974                    
    1975                            ;move toward final destination
    1976                            ;if we're there, take it
    1977 000089f0     b5ae          move    *a13(wrirRND_DEST),a14
         00008a00     0160  
    1978 00008a10     49cb          cmp     a14,a11
    1979 00008a20     ca00          jreq    wrirbut_hit
         00008a30     010f  
    1980                    
    1981                            ;not there.  one time in three, move at random anyway
    1982 00008a40     1860          movk    3,a0
    1983 00008a50     0d5f          calla   RNDRNG0
         00008a60 00000000! 
    1984 00008a80                   TEST    a0
    1985 00008a90     ca0a          jrz     wrirmove_at_random
    1986                    
    1987                            ;if we're in the correct row, move sideways
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   46

    1988 00008aa0     b5ae          move    *a13(wrirRND_DEST),a14
         00008ab0     0160  
    1989 00008ac0     576e          xor     a11,a14
    1990 00008ad0     2fee          srl     1,a14
    1991 00008ae0     ca0f          jrz     wrirrnd_move_sideways
    1992                    
    1993                            ;okay, move toward the correct row
    1994 00008af0     b5ae          move    *a13(wrirRND_DEST),a14
         00008b00     0160  
    1995 00008b10     496e          cmp     a11,a14
    1996 00008b20     c45f          jrlt    wrirstick_up
    1997 00008b30     c056          jruc    wrirstick_down
    1998                    
    1999 00008b40           wrirmove_at_random
    2000                            ;move in a random direction, but only in legal directions
    2001 00008b40     1840          movk    2,a0
    2002 00008b50     0d5f          calla   RNDRNG0
         00008b60 00000000! 
    2003 00008b80     0b40          cmpi    2,a0
         00008b90     fffd  
    2004 00008ba0     ca07          jreq    wrirrnd_move_up
    2005 00008bb0     0b40          cmpi    1,a0
         00008bc0     fffe  
    2006 00008bd0     ca0f          jreq    wrirrnd_move_down
    2007                    
    2008                            ;move sideways by toggling bit zero in the index
    2009 00008be0           wrirrnd_move_sideways
    2010 00008be0     0bcb          xori    1,a11
         00008bf0 00000001  
    2011 00008c10     c087          jruc    wriradjust
    2012                    
    2013 00008c20           wrirrnd_move_up
    2014 00008c20     0b4b          cmpi    2,a11
         00008c30     fffd  
    2015 00008c40     c54d          jrge    wrirstick_up
    2016                    
    2017                            ;moving up isn't legal.  move sideways or down
    2018 00008c50     09c0          movi    1,a0
         00008c60     0001  
    2019 00008c70     0d5f          calla   RNDRNG0
         00008c80 00000000! 
    2020 00008ca0                   TEST    a0
    2021 00008cb0     caf2          jrz     wrirrnd_move_sideways
    2022 00008cc0     c03d          jruc    wrirstick_down
    2023                    
    2024 00008cd0           wrirrnd_move_down
    2025 00008cd0     0b4b          cmpi    5,a11
         00008ce0     fffa  
    2026 00008cf0     c63a          jrle    wrirstick_down
    2027                    
    2028                            ;moving down isn't legal.  move sideways or up
    2029 00008d00     09c0          movi    1,a0
         00008d10     0001  
    2030 00008d20     0d5f          calla   RNDRNG0
         00008d30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   47

    2031 00008d50                   TEST    a0
    2032 00008d60     cae7          jrz     wrirrnd_move_sideways
    2033 00008d70     c03a          jruc    wrirstick_up
    2034                    
    2035 00008d80           wrirnot_rndsel
    2036                            ;if time is out, pick whoever we're on.
    2037 00008d80     05ae          move    @time_out,a14
         00008d90 00000080- 
    2038 00008db0     cb00          jrnz    wrirbut_hit
         00008dc0     00d6  
    2039                    
    2040                            ;begin random select?
    2041 00008dd0     4d40          move    a10,a0
    2042 00008de0     0d5f          calla   get_start_cur
         00008df0 00000000! 
    2043 00008e10     ca0a          jrz     wrirbutton_checks
    2044                    
    2045                            ;start is down.  check stick
    2046 00008e20     4d40          move    a10,a0
    2047 00008e30     0d5f          calla   get_stick_val_cur
         00008e40 00000000! 
    2048 00008e60     1fe0          btst    JOYUP,a0
    2049 00008e70     ca04          jrz     wrirbutton_checks
    2050                    
    2051                            ;stick is up.  check position
    2052 00008e80     b52e          move    *a9(wrirPI_STARTPOS),a14
         00008e90     0040  
    2053 00008ea0     496e          cmp     a11,a14
    2054 00008eb0     ca3a          jreq    wrirbegin_random_select
    2055                    
    2056 00008ec0           wrirbutton_checks
    2057 00008ec0     05ae          move    @are_we_waiting_f,a14
         00008ed0 00000100- 
    2058 00008ef0     ce01          jrn     no_worry_about_it
    2059 00008f00     cb07          jrnz    no_check_buts_yet
    2060 00008f10           no_worry_about_it
    2061                    
    2062                            ;button checks
    2063 00008f10     4d40          move    a10,a0
    2064 00008f20     0d5f          calla   get_but_val_down
         00008f30 00000000! 
    2065 00008f50                   TEST    a0
    2066 00008f60     cb00          jrnz    wrirbut_hit
         00008f70     00bb  
    2067 00008f80           no_check_buts_yet
    2068                    
    2069 00008f80     1426          dec     a6
    2070 00008f90     c100          jrp     wrirwaitloop
         00008fa0     ff69  
    2071 00008fb0     56c6          clr     a6
    2072                    
    2073                            ;stick checks
    2074 00008fc0     4d40          move    a10,a0
    2075 00008fd0     0d5f          calla   get_stick_val_down
         00008fe0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   48

    2076 00009000     1fc0          btst    JOYDN,a0
    2077 00009010     cb08          jrnz    wrirstick_down
    2078 00009020     1fe0          btst    JOYUP,a0
    2079 00009030     cb0e          jrnz    wrirstick_up
    2080 00009040     1fa0          btst    JOYLFT,a0
    2081 00009050     cb14          jrnz    wrirstick_left
    2082 00009060     1f80          btst    JOYRGT,a0
    2083 00009070     cb18          jrnz    wrirstick_right
    2084 00009080     c000          jruc    wrirwaitloop
         00009090     ff5a  
    2085                    
    2086 000090a0           wrirstick_down
    2087                            ;add 2 unless the index is 6 or 7
    2088 000090a0     0b4b          cmpi    6,a11
         000090b0     fff9  
    2089 000090c0     c500          jrge    wrirwaitloop
         000090d0     ff56  
    2090 000090e0     0b0b          addi    2,a11
         000090f0     0002  
    2091 00009100     c000          jruc    wriradjust
         00009110     ff37  
    2092                    
    2093 00009120           wrirstick_up
    2094                            ;sub 2 unless index is 0 or 1
    2095 00009120     0b4b          cmpi    2,a11
         00009130     fffd  
    2096 00009140     c400          jrlt    wrirwaitloop
         00009150     ff4e  
    2097 00009160     0beb          subi    2,a11
         00009170     fffd  
    2098 00009180     c000          jruc    wriradjust
         00009190     ff2f  
    2099                    
    2100 000091a0           wrirstick_left
    2101                            ;sub 1 unless index is even
    2102 000091a0     1feb          btst    0,a11
    2103 000091b0     ca00          jrz     wrirwaitloop
         000091c0     ff47  
    2104 000091d0     142b          dec     a11
    2105 000091e0     c000          jruc    wriradjust
         000091f0     ff29  
    2106                    
    2107 00009200           wrirstick_right
    2108                            ;add 1 unless index is odd
    2109 00009200     1feb          btst    0,a11
    2110 00009210     cb00          jrnz    wrirwaitloop
         00009220     ff41  
    2111 00009230     102b          inc     a11
    2112 00009240     c000          jruc    wriradjust
         00009250     ff23  
    2113                    
    2114 00009260           wrirbegin_random_select
    2115                    
    2116                    ;Print text message
    2117 00009260     09e2          movi    wrirmessage_setup,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   49

         00009270 00009980' 
    2118 00009290     4d4a          move    a10,a10
    2119 000092a0     ca03          jrz     wrirp1m
    2120 000092b0     09e2          movi    wrirmessage_setup2,a2
         000092c0 00009a20' 
    2121 000092e0           wrirp1m
    2122 000092e0     0d5f          calla   setup_message
         000092f0 00000000! 
    2123                    
    2124 00009310     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00009320     0702  
    2125 00009330     4d4a          move    a10,a10
    2126 00009340     ca02          jrz     wrirp1x
    2127 00009350     09c0          movi    CLSNEUT|TYPTEXT|SUBMES2,a0
         00009360     0703  
    2128 00009370           wrirp1x
    2129 00009370     0580          move    a0,@mess_objid
         00009380 00000000! 
    2130                    
    2131 000093a0     09e4          movi    wrirmessage_string,a4
         000093b0 00009ac0' 
    2132 000093d0     0d5f          calla   print_string_C2
         000093e0 00000000! 
    2133                    
    2134 00009400     09c0          movi    7,a0
         00009410     0007  
    2135 00009420     0d5f          calla   RNDRNG0
         00009430 00000000! 
    2136                    
    2137 00009450     b00d          move    a0,*a13(wrirRND_DEST)
         00009460     0160  
    2138 00009470     09c6          movi    wrirrnd_movespeed,a6
         00009480     0005  
    2139 00009490     09c7          movi    wrirrnd_wander,a7
         000094a0     000e  
    2140 000094b0     c000          jruc    wrirwaitloop
         000094c0     ff17  
    2141                    
    2142                            .ref    font9_ascii
    2143                            .ref    pal_getf,setup_message
    2144                            .ref    mess_objid,print_string_C2
    2145                    
    2146                    
    2147 000094d0           blink_rndper
    2148                    
    2149 000094d0     09e0          movi    FNT9RED_P,a0
         000094e0 00000000! 
    2150 00009500     0d5f          calla   pal_getf
         00009510 00000000! 
    2151 00009530     4c09          move    a0,a9
    2152                    
    2153 00009540     09e0          movi    FNT9WHT_P,a0
         00009550 00000000! 
    2154 00009570     0d5f          calla   pal_getf
         00009580 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   50

    2155                    
    2156 000095a0     09ee          movi    OBJLST,a14
         000095b0 00000000! 
    2157 000095d0           wrirlpz
    2158 000095d0     87ce          move    *a14,a14,L
    2159 000095e0     ca0f          jrz     wrirx
    2160 000095f0     b5c2          move    *a14(OPAL),a2
         00009600     0150  
    2161 00009610     4802          cmp     a0,a2
    2162 00009620     cbfa          jrne    wrirlpz
    2163                    
    2164 00009630     b5c2          move    *a14(OID),a2
         00009640     0190  
    2165 00009650     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES1,a2
         00009660     f8fd  
    2166 00009670     ca03          jreq    wrirlpdo
    2167 00009680     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES2,a2
         00009690     f8fc  
    2168 000096a0     cbf2          jrne    wrirlpz
    2169 000096b0           wrirlpdo
    2170 000096b0     b12e          move    a9,*a14(OPAL)
         000096c0     0150  
    2171 000096d0     c0ef          jruc    wrirlpz
    2172                    
    2173 000096e0           wrirx   SLEEPK  4
    2174                    
    2175 00009720     09e0          movi    FNT9RED_P,a0
         00009730 00000000! 
    2176 00009750     0d5f          calla   pal_getf
         00009760 00000000! 
    2177 00009780     4c09          move    a0,a9
    2178                    
    2179 00009790     09e0          movi    FNT9WHT_P,a0
         000097a0 00000000! 
    2180 000097c0     0d5f          calla   pal_getf
         000097d0 00000000! 
    2181                    
    2182 000097f0     09ee          movi    OBJLST,a14
         00009800 00000000! 
    2183 00009820           wrirlp2
    2184 00009820     87ce          move    *a14,a14,L
    2185 00009830     ca0f          jrz     wrirx2
    2186 00009840     b5c2          move    *a14(OPAL),a2
         00009850     0150  
    2187 00009860     4922          cmp     a9,a2
    2188 00009870     cbfa          jrne    wrirlp2
    2189                    
    2190 00009880     b5c2          move    *a14(OID),a2
         00009890     0190  
    2191 000098a0     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES1,a2
         000098b0     f8fd  
    2192 000098c0     ca03          jreq    wrirlpdo2
    2193 000098d0     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES2,a2
         000098e0     f8fc  
    2194 000098f0     cbf2          jrne    wrirlp2
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   51

    2195 00009900           wrirlpdo2
    2196 00009900     b00e          move    a0,*a14(OPAL)
         00009910     0150  
    2197 00009920     c0ef          jruc    wrirlp2
    2198                    
    2199 00009930           wrirx2  SLEEPK  7
    2200                    
    2201 00009970     c0b5          jruc    blink_rndper
    2202                    
    2203                    
    2204 00009980           wrirmessage_setup
    2205 00009980                   JAM_STR font9_ascii,5,0,79,15,FNT9WHT_P,0
    2206                    
    2207 00009a20           wrirmessage_setup2
    2208 00009a20                   JAM_STR font9_ascii,5,0,321,15,FNT9WHT_P,0
    2209                    
    2210 00009ac0           wrirmessage_string
    2211 00009ac0       43          .string "CALLA RNDPER",0
    2212                    
    2213 00009b30                   .even
    2214                    
    2215                    
    2216 00009b30           wrirbut_hit
    2217 00009b30     09e1          movi    player_pal_pref,a1
         00009b40 00000120- 
    2218 00009b60     4d4a          move    a10,a10
    2219 00009b70     ca01          jrz     wriris_p1
    2220 00009b80     1201          addk    16,a1
    2221 00009b90           wriris_p1
    2222 00009b90     4d40          move    a10,a0
    2223 00009ba0     0d5f          calla   get_stick_val_cur
         00009bb0 00000000! 
    2224 00009bd0     ca11          jrz     wrirno_pref
    2225 00009be0     4d40          move    a10,a0
    2226 00009bf0     0d5f          calla   get_but_val_cur
         00009c00 00000000! 
    2227 00009c20     ca0c          jrz     wrirno_pref
    2228 00009c30     188e          movk    4,a14
    2229 00009c40     1fe0          btst    0,a0                    ; PUNCH
    2230 00009c50     cb0a          jrnz    wrirpp_pref
    2231 00009c60     18ee          movk    7,a14
    2232 00009c70     1f60          btst    4,a0                    ; SKICK
    2233 00009c80     cb07          jrnz    wrirpp_pref
    2234 00009c90     18ae          movk    5,a14
    2235 00009ca0     1fa0          btst    2,a0                    ; SPUNCH
    2236 00009cb0     cb04          jrnz    wrirpp_pref
    2237 00009cc0     18ce          movk    6,a14
    2238 00009cd0     1f80          btst    3,a0                    ; KICK
    2239 00009ce0     cb01          jrnz    wrirpp_pref
    2240 00009cf0           wrirno_pref
    2241 00009cf0     57ce          clr     a14
    2242 00009d00           wrirpp_pref
    2243 00009d00     81c1          move    a14,*a1
    2244                            ;they hit a button.  Stick 'em with the current guy.
    2245                    ;Erase rndper message for this player
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   52

    2246 00009d10     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00009d20     0702  
    2247 00009d30     4d4a          move    a10,a10
    2248 00009d40     ca02          jrz     wrirp1c
    2249 00009d50     09c0          movi    CLSNEUT|TYPTEXT|SUBMES2,a0
         00009d60     0703  
    2250 00009d70           wrirp1c
    2251 00009d70     0d5f          calla   obj_del1c
         00009d80 00000000! 
    2252                    
    2253 00009da0     b720          move    *a9(wrirPI_INDEX),a0,L
         00009db0     00c0  
    2254                            ;rewire kludge
    2255 00009dc0     4d6e          move    a11,a14
    2256 00009dd0                   X16     a14
    2257 00009de0     0b2e          addi    scramble_table,a14
         00009df0 0000acb0' 
    2258 00009e10     85ce          move    *a14,a14,W
    2259 00009e20     81c0          move    a14,*a0
    2260                    
    2261 00009e30     4d41          move    a10,a1
    2262 00009e40     2481          sll     4,a1
    2263 00009e50     0b21          addi    which_player,a1
         00009e60 00000040- 
    2264 00009e80     81c1          move    a14,*a1
    2265                    
    2266                            ;say the name.
    2267 00009e90     09c1          MOVI    SEL_SPCH_PID1,A1
         00009ea0     0131  
    2268 00009eb0     4141          ADD     A10,A1
    2269 00009ec0     4c08          MOVE    A0,A8
    2270 00009ed0     09e7          MOVI    call_wrestler_name,A7
         00009ee0 00002e80' 
    2271 00009f00     0d5f          CALLA   GETPRC
         00009f10 00000000! 
    2272                    
    2273                            ;make a joyful noise unto the player
    2274 00009f30     b520          move    *a9(wrirPI_SELSOUND),a0
         00009f40     00f0  
    2275 00009f50     0d5f          calla   triple_sound
         00009f60 00000000! 
    2276                    
    2277                            ;clear our bit in the active flag
    2278 00009f80     05a0          move    @active_flag,a0
         00009f90 00000090- 
    2279 00009fb0     4d4e          move    a10,a14
    2280 00009fc0     102e          inc     a14
    2281 00009fd0     53c0          andn    a14,a0
    2282 00009fe0     0580          move    a0,@active_flag
         00009ff0 00000090- 
    2283                    
    2284                            ;flash over the crouton
    2285                            ;synch!  begin flashing on an even PCNT
    2286 0000a010     05ae          move    @PCNT,a14
         0000a020 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   53

    2287 0000a040     1fee          btst    0,a14
    2288 0000a050     cb04          jrnz    wrirsynch
    2289 0000a060                   SLEEPK  1
    2290                    
    2291 0000a0a0           wrirsynch
    2292 0000a0a0     b7a8          move    *a13(wrirHILITE),a8,L
         0000a0b0     0100  
    2293 0000a0c0     09c9          movi    TSEC/4,a9
         0000a0d0     000d  
    2294 0000a0e0           wrirflashloop
    2295 0000a0e0     09ce          movi    0202h,a14
         0000a0f0     0202  
    2296 0000a100     b1c8          move    a14,*a8(OCONST)
         0000a110     0160  
    2297 0000a120     b50e          move    *a8(OCTRL),a14
         0000a130     00f0  
    2298 0000a140     0bce          xori    M_CONZER,a14
         0000a150 00000004  
    2299 0000a170     b1c8          move    a14,*a8(OCTRL)
         0000a180     00f0  
    2300 0000a190                   SLEEPK  2
    2301 0000a1d0     3e09          dsj     a9,wrirflashloop
    2302                    
    2303 0000a1e0     b50e          move    *a8(OCTRL),a14
         0000a1f0     00f0  
    2304 0000a200     0b8e          andni   M_CONZER,a14
         0000a210 00000004  
    2305 0000a230     b1c8          move    a14,*a8(OCTRL)
         0000a240     00f0  
    2306                    
    2307 0000a250     09ce          movi    hilite_z,a14
         0000a260     0005  
    2308 0000a270     b1c8          move    a14,*a8(OZPOS)
         0000a280     00d0  
    2309                    
    2310 0000a290     b7a8          move    *a13(wrirHIPLATE),a8,L
         0000a2a0     0120  
    2311 0000a2b0     09ce          movi    hiplate_z,a14
         0000a2c0     0002  
    2312 0000a2d0     b1c8          move    a14,*a8(OZPOS)
         0000a2e0     00d0  
    2313                            
    2314 0000a2f0           wrirlp
    2315 0000a2f0                   SLEEPK  1
    2316 0000a330     0d3f          callr   wrirplace_cursor
         0000a340     0001  
    2317 0000a350     c0f9          jruc    wrirlp
    2318                            
    2319                    
    2320                    ********
    2321                    * moves cursor to the current index position
    2322                    
    2323 0000a360            SUBRP  wrirplace_cursor
    2324                    
    2325 0000a360                   PUSH    a2,a3,a7,a8
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   54

    2326                    
    2327 0000a380     4d61          move    a11,a1
    2328 0000a390                   X32     a1
    2329 0000a3a0     0b21          addi    crouton_pos_table,a1
         0000a3b0 000040d0' 
    2330 0000a3d0     9422          move    *a1+,a2,W
    2331 0000a3e0     8423          move    *a1,a3,W
    2332                    
    2333 0000a3f0     b7a7          move    *a13(wrirHILITE),a7,L
         0000a400     0100  
    2334 0000a410     b7a8          move    *a13(wrirHIPLATE),a8,L
         0000a420     0120  
    2335                    
    2336 0000a430     b048          move    a2,*a8(OXPOS)
         0000a440     0090  
    2337 0000a450     b068          move    a3,*a8(OYPOS)
         0000a460     00b0  
    2338                    
    2339 0000a470     4d4a          move    a10,a10
    2340 0000a480     ca09          jrz     wrirp1
    2341 0000a490     07a8          move    @kp_p1cursor,a8,L
         0000a4a0 000000a0- 
    2342 0000a4c0     b508          move    *a8(PA11),a8
         0000a4d0     0060  
    2343 0000a4e0     490b          cmp     a8,a11
    2344 0000a4f0     cb02          jrnz    wrirp1
    2345 0000a500     1042          addk    2,a2
    2346 0000a510     1043          addk    2,a3
    2347 0000a520           wrirp1
    2348 0000a520     b047          move    a2,*a7(OXPOS)
         0000a530     0090  
    2349 0000a540     b067          move    a3,*a7(OYPOS)
         0000a550     00b0  
    2350                    
    2351 0000a560                   PULL    a2,a3,a7,a8
    2352 0000a580     0960          rets
    2353                    
    2354                    
    2355                    ********
    2356                    * updates the name text
    2357                    
    2358 0000a590            SUBRP  wrirupdate_name
    2359                    
    2360 0000a590                   PUSH    a8,a11
    2361                    
    2362                            ;rewiring kludge
    2363 0000a5b0                   X16     a11
    2364 0000a5c0     0b2b          addi    scramble_table,a11
         0000a5d0 0000acb0' 
    2365 0000a5f0     856b          move    *a11,a11,W
    2366                    
    2367 0000a600     4d60          move    a11,a0
    2368 0000a610                   X32     a0
    2369 0000a620     0b20          addi    name_tbl,a0
         0000a630 0000c150' 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   55

    2370 0000a650     8600          move    *a0,a0,L
    2371 0000a660     b7a8          move    *a13(wrirNAME),a8,L
         0000a670     0140  
    2372 0000a680     0d5f          calla   civanic
         0000a690 00000000! 
    2373                    
    2374 0000a6b0                   PULL    a8,a11
    2375                    
    2376 0000a6d0     0960          rets
    2377                    
    2378                    ********
    2379                    * erases current mugshot
    2380                    
    2381 0000a6e0            SUBRP  wrirerase_mugshot
    2382                    
    2383 0000a6e0                   PUSH    a5,a6,a8
    2384                    
    2385 0000a700     1906          movk    8,a6
    2386 0000a710     4da5          move    a13,a5
    2387 0000a720     0b05          addi    wrirMUG1,a5
         0000a730     0170  
    2388 0000a740           wrireraseloop
    2389 0000a740     96a0          move    *a5+,a0,L
    2390 0000a750     0d5f          calla   DELOBJ
         0000a760 00000000! 
    2391 0000a780     3ca6          dsj     a6,wrireraseloop
    2392                    
    2393 0000a790                   PULL    a5,a6,a8
    2394                    
    2395 0000a7b0     0960          rets
    2396                    
    2397                    
    2398                    ********
    2399                    * draws a new mugshot
    2400                    
    2401 0000a7c0            SUBRP  wrirdraw_mugshot
    2402                    
    2403                            ;reg use
    2404                            ;a10 = PDATA pointer
    2405                            ;a11 = mug pointer
    2406                    
    2407 0000a7c0                   PUSH    a6,a7,a8,a10,a11
    2408                    
    2409                            ;rewiring kludge
    2410 0000a7e0                   X16     a11
    2411 0000a7f0     0b2b          addi    scramble_table,a11
         0000a800 0000acb0' 
    2412 0000a820     856b          move    *a11,a11,W
    2413                    
    2414 0000a830                   X32     a11
    2415 0000a840     0b2b          addi    wrestler_mugs,a11
         0000a850 0000b630' 
    2416 0000a870     876b          move    *a11,a11,L
    2417                    
    2418 0000a880     4daa          move    a13,a10
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   56

    2419 0000a890     0b0a          addi    wrirMUG1,a10
         0000a8a0     0170  
    2420 0000a8b0     9762          move    *a11+,a2,L
    2421                    
    2422 0000a8c0           wrirdrawloop
    2423 0000a8c0     b520          move    *a9(wrirPI_MUGXPOS),a0
         0000a8d0     0050  
    2424 0000a8e0     b521          move    *a9(wrirPI_MUGYPOS),a1
         0000a8f0     0060  
    2425 0000a900     2200          sla     16,a0
    2426 0000a910     2201          sla     16,a1
    2427 0000a920     09c3          movi    mugshot_z,a3
         0000a930     0001  
    2428 0000a940     b524          move    *a9(wrirPI_MUGCTRL),a4
         0000a950     0070  
    2429 0000a960     09c5          movi    CLSNEUT,a5
         0000a970     0000  
    2430 0000a980     56c6          clr     a6
    2431 0000a990     56e7          clr     a7
    2432 0000a9a0     0d5f          calla   BEGINOBJW
         0000a9b0 00000000! 
    2433 0000a9d0     930a          move    a8,*a10+,L
    2434                            
    2435 0000a9e0     9762          move    *a11+,a2,L
    2436 0000a9f0     ca01          jrz     wrirdone
    2437 0000aa00     c0eb          jruc    wrirdrawloop
    2438                    
    2439 0000aa10           wrirdone
    2440 0000aa10                   PULL    a6,a7,a8,a10,a11
    2441 0000aa30     0d5f          calla   show_bonus_icons
         0000aa40 00000000! 
    2442 0000aa60     0960          rets
    2443                    
    2444                    ;
    2445                    ;********
    2446                    ;* updates the attribute bars
    2447                    ;
    2448                    ; SUBRP wrirupdate_attbars
    2449                    ;
    2450                    ;       PUSH    a7,a10,a11
    2451                    ;
    2452                    ;
    2453                    ;       ;rewiring kludge
    2454                    ;       X16     a11
    2455                    ;       addi    scramble_table,a11
    2456                    ;       move    *a11,a11,W
    2457                    ;
    2458                    ;       move    a11,a10
    2459                    ;       X64     a10
    2460                    ;       addi    wrestler_attributes,a10
    2461                    ;       move    a13,a11
    2462                    ;       addi    wrirATT1,a11
    2463                    ;
    2464                    ;       movi    4,a7
    2465                    ;wrirualoop
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   57

    2466                    ;       move    *a10+,a0,W
    2467                    ;       X32     a0
    2468                    ;       addi    attbars,a0
    2469                    ;       move    *a0,a0,L
    2470                    ;       move    *a11+,a8,L
    2471                    ;       calla   civanic
    2472                    ;       dsj     a7,wrirualoop
    2473                    ;
    2474                    ;       PULL    a7,a10,a11
    2475                    ;       rets
    2476                    ;
    2477 0000aa70           wrestler_attributes
    2478                    ;Power, speed, agility, recovery
    2479 0000aa70     0004          .word   4,9,9,3 ;0      (Bret)
    2480 0000aab0     0007          .word   7,6,2,5 ;1      (Razor)
    2481 0000aaf0     0008          .word   8,4,7,6 ;2      (Taker)
    2482 0000ab30     0009          .word   9,2,4,6 ;3      (Yoko)
    2483 0000ab70     0003          .word   3,9,8,7 ;4      (Shawn)
    2484 0000abb0     0008          .word   8,6,5,3 ;5      (Bam Bam)
    2485 0000abf0     0004          .word   4,8,7,8 ;6      (Doink)
    2486 0000ac30     0009          .word   9,5,4,7 ;7      (Lex)
    2487 0000ac70     0009          .word   9,5,4,7 ;8      (Lex)
    2488                    
    2489 0000acb0           scramble_table  ;swap bret and doink on the select page
    2490 0000acb0     0006          .word   6
    2491 0000acc0     0001          .word   1,2,3,4,5
    2492 0000ad10     0000          .word   0
    2493 0000ad20     0008          .word   8               ;put lex in place of adam
    2494                    
    2495 0000ad30           attbars
    2496 0000ad30 00000000!         .long   ATTMTR_0,ATTMTR_1,ATTMTR_2,ATTMTR_3,ATTMTR_4
    2497 0000add0 00000000!         .long   ATTMTR_5,ATTMTR_6,ATTMTR_7,ATTMTR_8,ATTMTR_9
    2498                    
    2499 0000ae70           wririnfo
    2500 0000ae70 0000aeb0'         .long   wrirp1info,wrirp2info
    2501                    
    2502 0000aeb0           wrirp1info
    2503 0000aeb0 0000b210'         .long   wrirhi_b,wrirplt_b                      ;hilite, crouton
    2504 0000aef0     0000          .word   0                               ;start index
    2505 0000af00     0014          .word   0+18+2,175                      ;mug position
    2506 0000af20     a102          .word   DMAWNZ|M_3D|M_SCRNREL           ;mug octrl
    2507 0000af30 0000b370'         .long   wrirp1name,latttxt                      ;start name,att text
    2508 0000af70 00000060-         .long   index1                          ;report choice to
    2509 0000af90     00c8          .word   0c8h,0cbh                       ;cursor/select sounds
    2510                    
    2511 0000afb0           wrirp2info
    2512 0000afb0 0000b2c0'         .long   wrirhi_r,wrirplt_r                      ;hilite, crouton
    2513 0000aff0     0001          .word   1                               ;start index
    2514 0000b000     017e          .word   400-18,175                      ;mug position
    2515 0000b020     a112          .word   DMAWNZ|M_3D|M_SCRNREL|M_FLIPH   ;mug octrl
    2516 0000b030 0000b420'         .long   wrirp2name,ratttxt                      ;start name,att text
    2517 0000b070 00000070-         .long   index2                          ;report choice to
    2518 0000b090     00c7          .word   0c7h,0cch                       ;cursor/select sounds
    2519                    
    2520                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   58

    2521 0000b0b0     0000  wrirplt_b       .word   0,0,hiplate_z                           ;X,Y,Z
    2522 0000b0e0 00000000!         .long   CRUTPLT_B                               ;IMG
    2523 0000b100     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2524 0000b110     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2525 0000b120 00000000          .long   0,0                                     ;XVEL, YVEL
    2526                    
    2527 0000b160     0000  wrirplt_r       .word   0,0,hiplate_z+1                         ;X,Y,Z
    2528 0000b190 00000000!         .long   CRUTPLT_R                               ;IMG
    2529 0000b1b0     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2530 0000b1c0     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2531 0000b1d0 00000000          .long   0,0                                     ;XVEL, YVEL
    2532                    
    2533 0000b210     0000  wrirhi_b        .word   0,0,hilite_z                            ;X,Y,Z
    2534 0000b240 00000000!         .long   CRUTHI_B                                ;IMG
    2535 0000b260     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2536 0000b270     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2537 0000b280 00000000          .long   0,0                                     ;XVEL, YVEL
    2538                    
    2539 0000b2c0     0000  wrirhi_r        .word   0,0,hilite_z+1                          ;X,Y,Z
    2540 0000b2f0 00000000!         .long   CRUTHI_R                                ;IMG
    2541 0000b310     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2542 0000b320     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2543 0000b330 00000000          .long   0,0                                     ;XVEL, YVEL
    2544                    
    2545 0000b370     0051  wrirp1name      .word   051H,184,name_z
    2546 0000b3a0 00000000!         .long   WF_INSERT
    2547 0000b3c0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2548 0000b3d0     0000          .word   CLSNEUT|TYPNEUT
    2549 0000b3e0 00000000          .long   0,0
    2550                    
    2551 0000b420     0142  wrirp2name      .word   0142H,184,name_z
    2552 0000b450 00000000!         .long   WF_INSERT
    2553 0000b470     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2554 0000b480     0000          .word   CLSNEUT|TYPNEUT
    2555 0000b490 00000000          .long   0,0
    2556                    
    2557 0000b4d0     0012  latttxt .word   0+18,189,atttxt_z                       ;X, Y, Z
    2558 0000b500 00000000!         .long   ATT_TXT                                 ;IMG
    2559 0000b520     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2560 0000b530     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2561 0000b540 00000000          .long   0,0                                     ;XVEL, YVEL
    2562                    
    2563 0000b580     0102  ratttxt .word   400-18-124,189,atttxt_z                 ;X, Y, Z
    2564 0000b5b0 00000000!         .long   ATT_TXT                                 ;IMG
    2565 0000b5d0     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2566 0000b5e0     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2567 0000b5f0 00000000          .long   0,0                                     ;XVEL, YVEL
    2568                    
    2569                    ;Mugshot stuff
    2570                    
    2571 0000b630           wrestler_mugs
    2572 0000b630 0000b850'         .long   BHARTMUG
    2573 0000b650 0000b970'         .long   RAZORMUG
    2574 0000b670 0000ba90'         .long   UNDERMUG
    2575 0000b690 0000bbb0'         .long   YOKOMUG
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   59

    2576 0000b6b0 0000bcd0'         .long   MICHAELMUG
    2577 0000b6d0 0000bdf0'         .long   BAMBAMMUG
    2578 0000b6f0 0000bf10'         .long   DOINKMUG
    2579 0000b710 00000000          .long   0
    2580 0000b730 0000c030'         .long   LUGERMUG
    2581                    
    2582 0000b750           wrestler_mugs2
    2583 0000b750 0000b850'         .long   BHARTMUG
    2584 0000b770 0000b970'         .long   RAZORMUG
    2585 0000b790 0000ba90'         .long   UNDERMUG
    2586 0000b7b0 0000bbb0'         .long   YOKOMUG
    2587 0000b7d0 0000bcd0'         .long   MICHAELMUG
    2588 0000b7f0 0000bdf0'         .long   BAMBAMMUG
    2589 0000b810 0000bf10'         .long   DOINKMUG
    2590                    ;       .long   ADAMMUG
    2591 0000b830 0000c030'         .long   LUGERMUG
    2592                    
    2593 0000b850           BHARTMUG
    2594 0000b850 00000000!         .long   BHMUG_A,BHMUG_B,BHMUG_C,BHMUG_D
    2595 0000b8d0 00000000!         .long   BHMUG_E,BHMUG_F,BHMUG_G,BHMUG_H,0
    2596 0000b970           RAZORMUG
    2597 0000b970 00000000!         .long   RRMUG_A,RRMUG_B,RRMUG_C,RRMUG_D
    2598 0000b9f0 00000000!         .long   RRMUG_E,RRMUG_F,RRMUG_G,RRMUG_H,0
    2599 0000ba90           UNDERMUG
    2600 0000ba90 00000000!         .long   UNMUG_A,UNMUG_B,UNMUG_C,UNMUG_D
    2601 0000bb10 00000000!         .long   UNMUG_E,UNMUG_F,UNMUG_G,UNMUG_H,0
    2602 0000bbb0           YOKOMUG
    2603 0000bbb0 00000000!         .long   YKMUG_A,YKMUG_B,YKMUG_C,YKMUG_D
    2604 0000bc30 00000000!         .long   YKMUG_E,YKMUG_F,YKMUG_G,YKMUG_H,0
    2605 0000bcd0           MICHAELMUG
    2606 0000bcd0 00000000!         .long   SMMUG_A,SMMUG_B,SMMUG_C,SMMUG_D
    2607 0000bd50 00000000!         .long   SMMUG_E,SMMUG_F,SMMUG_G,SMMUG_H,0
    2608 0000bdf0           BAMBAMMUG
    2609 0000bdf0 00000000!         .long   BMMUG_A,BMMUG_B,BMMUG_C,BMMUG_D
    2610 0000be70 00000000!         .long   BMMUG_E,BMMUG_F,BMMUG_G,BMMUG_H,0
    2611 0000bf10           DOINKMUG
    2612 0000bf10 00000000!         .long   DKMUG_A,DKMUG_B,DKMUG_C,DKMUG_D
    2613 0000bf90 00000000!         .long   DKMUG_E,DKMUG_F,DKMUG_G,DKMUG_H,0
    2614 0000c030           LUGERMUG
    2615 0000c030 00000000!         .long   LXMUG_A,LXMUG_B,LXMUG_C,LXMUG_D
    2616 0000c0b0 00000000!         .long   LXMUG_E,LXMUG_F,LXMUG_G,LXMUG_H,0
    2617                    
    2618 0000c150           name_tbl
    2619 0000c150 00000000!         .long   NAM_BRT,NAM_RZR,NAM_UND,NAM_YOK
    2620 0000c1d0 00000000!         .long   NAM_SHN2,NAM_BAM2,NAM_DNK,0,NAM_LEX
    2621                    
    2622                    *****************************************************************************
    2623                    * Player select clock - sets time_out when it runs out of time
    2624                    *
    2625                    
    2626 0000c270            SUBR   select_clock
    2627                    
    2628                            ;reg use
    2629                            ; a8 - current pstatus
    2630                            ; a9 - time remaining
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   60

    2631                    
    2632              031b  select_time     equ     TSEC*15
    2633                    
    2634 0000c270           iehnreset
    2635 0000c270     09c9          movi    select_time,a9
         0000c280     031b  
    2636 0000c290     05a8          move    @PSTATUS2,a8
         0000c2a0 00000000! 
    2637                    
    2638 0000c2c0           iehnwaitloop
    2639 0000c2c0                   SLEEPK  1
    2640 0000c300     05ae          move    @PSTATUS2,a14
         0000c310 00000000! 
    2641 0000c330     49c8          cmp     a14,a8
    2642 0000c340     cbf2          jrne    iehnreset                       ;new buyin.  reset
    2643                    
    2644 0000c350     3d49          dsj     a9,iehnwaitloop
    2645                    
    2646                    ;If other player is still thinking about buying in or is
    2647                    ;still entering his initials, then go to iehnreset
    2648                    
    2649 0000c360     05a0          move    @OLD_PSTATUS2,a0
         0000c370 00000000! 
    2650 0000c390     cbed          jrnz    iehnreset
    2651                    
    2652 0000c3a0     182e          movk    1,a14
    2653 0000c3b0     058e          move    a14,@time_out
         0000c3c0 00000080- 
    2654                    
    2655 0000c3e0                   DIE
    2656                    
    2657 0000c410           clock_digits
    2658                    ;When player select time gets down to 5 seconds, display it...
    2659                    ;a10=select_clock *PROC
    2660                    
    2661 0000c410     09e0          movi    [0cbh,0],a0                     ;x pos
         0000c420 00cb0000  
    2662 0000c440     09e1          movi    [232,0],a1                      ;y pos
         0000c450 00e80000  
    2663 0000c470     09e2          movi    FNT9_5,a2                       ;* image
         0000c480 00000000! 
    2664 0000c4a0     09c3          movi    104+200,a3                      ;z pos
         0000c4b0     0130  
    2665 0000c4c0     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000c4d0 0000a002  
    2666 0000c4f0     56a5          clr     a5                              ;object ID
    2667 0000c500     56c6          clr     a6                              ;x vel
    2668 0000c510     56e7          clr     a7                              ;y vel
    2669 0000c520     09f0          movi    FNT9WHT_P,b0
         0000c530 00000000! 
    2670 0000c550     0d5f          calla   BEGINOBJP
         0000c560 00000000! 
    2671 0000c580     188b          movk    4,a11
    2672 0000c590     0d3f  iehnloop0       callr   obj_off
         0000c5a0     0091  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   61

    2673                    
    2674 0000c5b0           iehnloop        SLEEPK  1
    2675 0000c5f0     05a0          move    @time_out,a0
         0000c600 00000080- 
    2676 0000c620     cb80          janz    KILL_THIS_DIGIT
         0000c630 0000c820' 
    2677                    
    2678 0000c650     05a0          move    @OLD_PSTATUS2,a0
         0000c660 00000000! 
    2679 0000c680     cbf0          jrnz    iehnloop0
    2680                    
    2681 0000c690     b540          move    *a10(PA9),a0
         0000c6a0     00a0  
    2682 0000c6b0     2f40          srl     6,a0
    2683 0000c6c0     480b          cmp     a0,a11
    2684 0000c6d0     caed          jrz     iehnloop
    2685 0000c6e0     0b40          cmpi    6,a0
         0000c6f0     fff9  
    2686 0000c700     c5e8          jrge    iehnloop0
    2687                    
    2688                    ;New digit time 
    2689 0000c710     4c0b          move    a0,a11
    2690 0000c720     24a0          sll     5,a0
    2691                    
    2692 0000c730     0b20          addi    digits_tbl,a0
         0000c740 0000c870' 
    2693 0000c760     8600          move    *a0,a0,L                ;* image
    2694                    
    2695 0000c770     b501          move    *a8(OCTRL),a1           ;DMA flags
         0000c780     00f0  
    2696 0000c790     0d5f          calla   change_image
         0000c7a0 00000000! 
    2697 0000c7c0     0d3f          callr   obj_on
         0000c7d0     0066  
    2698                    
    2699 0000c7e0     4d6e          move    a11,a14
    2700 0000c7f0     0d3f          callr   setup_clock_sound
         0000c800     0297  
    2701 0000c810     c0d9          jruc    iehnloop
    2702                    
    2703 0000c820           KILL_THIS_DIGIT
    2704 0000c820     0d3f          callr   obj_off
         0000c830     0068  
    2705 0000c840                   DIE
    2706                    
    2707 0000c870           digits_tbl
    2708 0000c870 00000000!         .long   FNT9_0,FNT9_1,FNT9_2,FNT9_3,FNT9_4
    2709 0000c910 00000000!         .long   FNT9_5,FNT9_6,FNT9_7,FNT9_8,FNT9_9
    2710                    
    2711                    *****************************************************************************
    2712                    * One player ladder of progression
    2713                    *
    2714                    
    2715 0000c9b0            SUBR   pregame_show
    2716                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   62

    2717                    
    2718                    ;This will be the ladder type screen, showing the 1 player
    2719                    ;game progression.  Chooses the CPU opponent.
    2720                    
    2721                    ;Show 1 player game ladder of progression
    2722                    ;Scroll horizontally to the next challenger
    2723                            
    2724                     .if DEBUG
    2725                            move    @skip_select,a0
    2726                            jrz     nwysnoskp
    2727                    
    2728                            RETP
    2729                    nwysnoskp
    2730                     .endif
    2731                    
    2732 0000c9b0     05a0          move    @PSTATUS2,a0
         0000c9c0 00000000! 
    2733 0000c9e0     0b40          cmpi    3,a0
         0000c9f0     fffc  
    2734 0000ca00     cb1e          jrnz    nwysoneplyrgm
    2735                    
    2736                            .ref    question_type
    2737                            .if     RR_AWARD = 1
    2738 0000ca10     05ae          move    @royal_rumble,a14
         0000ca20 00000000! 
    2739 0000ca40     cb0c          jrnz    nwyslast_was_royal
    2740                            .endif
    2741 0000ca50     182e          movk    1,a14
    2742 0000ca60     058e          move    a14,@question_type
         0000ca70 00000000! 
    2743 0000ca90                   JSRP    ask_belt_question
    2744                            .if     RR_AWARD = 1
    2745 0000cb00     c004          jruc    nwystype_set
    2746 0000cb10           nwyslast_was_royal
    2747 0000cb10     57ce          clr     a14
    2748 0000cb20     058e          move    a14,@royal_rumble
         0000cb30 00000000! 
    2749 0000cb50           nwystype_set
    2750                            .endif
    2751                    
    2752 0000cb50                   JSRP    CLOSE_PROGRESS_SCREEN
    2753                    
    2754 0000cbc0                   RETP
    2755                    
    2756                    ;0      (Bret)
    2757                    ;1      (Razor)
    2758                    ;2      (Taker)
    2759                    ;3      (Yoko)
    2760                    ;4      (Shawn)
    2761                    ;5      (Bam Bam)
    2762                    ;6      (Doink)
    2763                    ;7      spare
    2764                    ;8      (Lex)
    2765                    
    2766                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   63

    2767 0000cbf0           nwysoneplyrgm
    2768                            .ref    belt_ask
    2769                            .ref    ask_belt_question
    2770                    
    2771 0000cbf0     05ae          move    @belt_ask,a14,W
         0000cc00 00000000! 
    2772 0000cc20     ca12          jrz     nwysbelt_is_set
    2773 0000cc30     57ce          clr     a14
    2774 0000cc40     058e          move    a14,@question_type
         0000cc50 00000000! 
    2775 0000cc70                   JSRP    ask_belt_question
    2776                    
    2777 0000cce0     0d5f          calla   INIT_LADDER_TABLE
         0000ccf0 00000000! 
    2778 0000cd10     5708          clr     a8
    2779 0000cd20     0588          move    a8,@belt_ask
         0000cd30 00000000! 
    2780 0000cd50           nwysbelt_is_set
    2781                    
    2782                    ;       movk    15,a8
    2783                    ;       movk    4,a9
    2784 0000cd50     1948          movk    10,a8
    2785 0000cd60     1849          movk    2,a9
    2786 0000cd70                   JSRP    CLOSE_SCREEN_LINE
    2787                    
    2788 0000cde0     0d5f          calla   SPECIAL_WIPEOUT
         0000cdf0 00000000! 
    2789 0000ce10     c080          JAUC    PUT_UP_PROGRESS
         0000ce20 00000000! 
    2790                    
    2791                    ;AVOID_PREGAME
    2792                    ;       MOVE    @CURRENT_LADDER,A10,L
    2793                    ;       CALLA   NEXT_IN_LADDER
    2794                    ;       CALLA   NUM_OF_OPPS
    2795                    ;       JSRP    CLOSE_PROGRESS_SCREEN
    2796                    ;       RETP
    2797                    
    2798                    ;Can we remove this?
    2799                    ;       .ref    osgemd_ascii
    2800                    ;nwysln1_setup
    2801                    ;       JAM_STR osgemd_ascii,8,0,200,80,BLUE,0
    2802                    ;
    2803                    ;nwysln2_setup
    2804                    ;       JAM_STR osgemd_ascii,8,0,200,110,BLUE,0
    2805                    ;
    2806                    ;nwysstr_text
    2807                    ;       .string "SINGLE PLAYER GAME",0
    2808                    ;nwysstr_text2
    2809                    ;       .string "LADDER OF PROGRESSION",0
    2810                    ;       .even
    2811                    ;
    2812                    ;nwysladder_mod
    2813                    ;       .long   slateBMOD               ;wrestler select map
    2814                    ;       .word   0,0
    2815                    ;       .long   0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   64

    2816                    
    2817                    
    2818                    *****************************************************************************
    2819                    *
    2820                    * INPUT:        a8 = * object
    2821                    *-----------------------------------------------------------------------------
    2822                    
    2823 0000ce40            SUBRP  obj_on
    2824 0000ce40     b500          move    *a8(OYPOS),a0
         0000ce50     00b0  
    2825 0000ce60     0b80          andni   400h,a0
         0000ce70 00000400  
    2826 0000ce90     b008          move    a0,*a8(OYPOS)
         0000cea0     00b0  
    2827 0000ceb0     0960          rets
    2828                    
    2829                    
    2830                    *****************************************************************************
    2831                    *
    2832                    * INPUT:        a8 = * object
    2833                    *-----------------------------------------------------------------------------
    2834                    
    2835 0000cec0            SUBRP  obj_off
    2836 0000cec0     b500          move    *a8(OYPOS),a0
         0000ced0     00b0  
    2837 0000cee0     0ba0          ori     400h,a0
         0000cef0 00000400  
    2838 0000cf10     b008          move    a0,*a8(OYPOS)
         0000cf20     00b0  
    2839 0000cf30     0960          rets
    2840                    
    2841                    ******************************************************************************
    2842                    
    2843 0000cf40           buyin_text
    2844                    
    2845 0000cf40     1a60          movk    ADJFREPL,a0             ;Are we in free play?
    2846 0000cf50     0d5f          calla   GET_ADJ
         0000cf60 00000000! 
    2847 0000cf80     ca47          jrz     kincnot_freeply
    2848                    
    2849                    ;Print free play
    2850 0000cf90     09e2          movi    kincln0_setup,a2
         0000cfa0 0000dde0' 
    2851 0000cfc0     4d4a          move    a10,a10
    2852 0000cfd0     ca03          jrz     kincok2c
    2853 0000cfe0     09e2          movi    kincln0_setupb,a2
         0000cff0 0000de80' 
    2854 0000d010     0d5f  kincok2c        calla   setup_message
         0000d020 00000000! 
    2855                    
    2856 0000d040     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d050     0704  
    2857 0000d060     4140          add     a10,a0
    2858 0000d070     0580          move    a0,@mess_objid
         0000d080 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   65

    2859                    
    2860 0000d0a0     09e4          movi    kincstr_text0,a4
         0000d0b0 0000e6d8' 
    2861 0000d0d0     0d5f          calla   print_string_C2
         0000d0e0 00000000! 
    2862                    
    2863                    ;Print centered "PLEASE CONTINUE" message
    2864 0000d100     09e2          movi    kincln1_setup,a2
         0000d110 0000df20' 
    2865 0000d130     4d4a          move    a10,a10
    2866 0000d140     ca03          jrz     kincok
    2867 0000d150     09e2          movi    kincln1_setupb,a2
         0000d160 0000dfc0' 
    2868 0000d180     0d5f  kincok  calla   setup_message
         0000d190 00000000! 
    2869                    
    2870 0000d1b0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d1c0     0704  
    2871 0000d1d0     4140          add     a10,a0
    2872 0000d1e0     0580          move    a0,@mess_objid
         0000d1f0 00000000! 
    2873                    
    2874 0000d210     09e4          movi    kincstr_text,a4
         0000d220 0000e6a0' 
    2875 0000d240     0d5f          calla   print_string_C2
         0000d250 00000000! 
    2876                    
    2877 0000d270     09e2          movi    kincln2_setup,a2
         0000d280 0000e060' 
    2878 0000d2a0     4d4a          move    a10,a10
    2879 0000d2b0     ca00          jrz     kincok4
         0000d2c0     00a1  
    2880 0000d2d0     09e2          movi    kincln2_setupb,a2
         0000d2e0 0000e100' 
    2881 0000d300     0d5f          calla   setup_message
         0000d310 00000000! 
    2882                    
    2883 0000d330     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d340     0704  
    2884 0000d350     4140          add     a10,a0
    2885 0000d360     0580          move    a0,@mess_objid
         0000d370 00000000! 
    2886                    
    2887 0000d390     09e4          movi    kincstr_text2,a4
         0000d3a0 0000e728' 
    2888 0000d3c0     0d5f          calla   print_string_C2
         0000d3d0 00000000! 
    2889                    
    2890 0000d3f0     0960          rets
    2891                    
    2892 0000d400           kincnot_freeply
    2893                    ;Print how many credits to start
    2894 0000d400                   PUSH    a8
    2895 0000d410     19a0          movk    ADJCCONT,a0
    2896 0000d420     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   66

         0000d430 00000000! 
    2897 0000d450     4c03          move    a0,a3
    2898 0000d460     0b40          cmpi    10,a0
         0000d470     fff5  
    2899 0000d480     c401          jrlt    kincmax
    2900 0000d490     1920          movk    9,a0
    2901 0000d4a0           kincmax
    2902 0000d4a0     24a0          sll     5,a0
    2903 0000d4b0     0b20          addi    digits_tbl,a0
         0000d4c0 0000c870' 
    2904 0000d4e0     8602          move    *a0,a2,L                ;* image
    2905                    
    2906 0000d4f0     09e0          movi    [050,0],a0                      ;x pos
         0000d500 00320000  
    2907 0000d520     0b43          cmpi    1,a3
         0000d530     fffe  
    2908 0000d540     cb03          jrnz    kincnot1
    2909 0000d550     09e0          movi    [054,0],a0                      ;x pos
         0000d560 00360000  
    2910 0000d580     4d4a  kincnot1        move    a10,a10
    2911 0000d590     ca09          jrz     kinczp1
    2912 0000d5a0     09e0          movi    [0122h,0],a0                    ;x pos
         0000d5b0 01220000  
    2913 0000d5d0     0b43          cmpi    1,a3
         0000d5e0     fffe  
    2914 0000d5f0     cb03          jrnz    kinczp1
    2915 0000d600     09e0          movi    [0126h,0],a0                    ;x pos
         0000d610 01260000  
    2916 0000d630           kinczp1
    2917 0000d630     09e1          movi    [CREDIT_LINE_YPOS,0],a1         ;y pos
         0000d640 006e0000  
    2918 0000d660     09c3          movi    104+200,a3                      ;z pos
         0000d670     0130  
    2919 0000d680     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000d690 0000a002  
    2920 0000d6b0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         0000d6c0     0704  
    2921 0000d6d0     4145          add     a10,a5                          ;object ID
    2922 0000d6e0     56c6          clr     a6                              ;x vel
    2923 0000d6f0     56e7          clr     a7                              ;y vel
    2924 0000d700     09f0          movi    FNT9YEL_P,b0
         0000d710 00000000! 
    2925 0000d730     0d5f          calla   BEGINOBJP
         0000d740 00000000! 
    2926 0000d760                   PULL    a8
    2927                    
    2928 0000d770     09e2          movi    kincln3_setup,a2
         0000d780 0000e420' 
    2929 0000d7a0     4d4a          move    a10,a10
    2930 0000d7b0     ca03          jrz     kincok2
    2931 0000d7c0     09e2          movi    kincln3_setupb,a2
         0000d7d0 0000e4c0' 
    2932 0000d7f0     0d5f  kincok2 calla   setup_message
         0000d800 00000000! 
    2933                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   67

    2934 0000d820     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d830     0704  
    2935 0000d840     4140          add     a10,a0
    2936 0000d850     0580          move    a0,@mess_objid
         0000d860 00000000! 
    2937                    
    2938 0000d880     09e4          movi    kincstr_text3,a4
         0000d890 0000e778' 
    2939 0000d8b0     19a0          movk    ADJCCONT,a0
    2940 0000d8c0     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         0000d8d0 00000000! 
    2941 0000d8f0     0b40          cmpi    1,a0
         0000d900     fffe  
    2942 0000d910     cb03          jrnz    kincnot1b
    2943 0000d920     09e4          movi    kincstr_text3b,a4
         0000d930 0000e7c8' 
    2944 0000d950           kincnot1b
    2945 0000d950     0d5f          calla   print_string_C2
         0000d960 00000000! 
    2946                    
    2947 0000d980     09e2          movi    kincln4_setup,a2
         0000d990 0000e560' 
    2948 0000d9b0     4d4a          move    a10,a10
    2949 0000d9c0     ca03          jrz     kincok2B
    2950 0000d9d0     09e2          movi    kincln4_setupb,a2
         0000d9e0 0000e600' 
    2951 0000da00     0d5f  kincok2B        calla   setup_message
         0000da10 00000000! 
    2952                    
    2953 0000da30     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000da40     0704  
    2954 0000da50     4140          add     a10,a0
    2955 0000da60     0580          move    a0,@mess_objid
         0000da70 00000000! 
    2956                    
    2957 0000da90     09e4          movi    kincstr_text4,a4
         0000daa0 0000e810' 
    2958 0000dac0     0d5f          calla   print_string_C2
         0000dad0 00000000! 
    2959                    
    2960                    
    2961                    ;Print "challenger needed" message
    2962 0000daf0     09e2          movi    kincln1_setupx,a2
         0000db00 0000e1a0' 
    2963 0000db20     4d4a          move    a10,a10
    2964 0000db30     ca03          jrz     kincok3
    2965 0000db40     09e2          movi    kincln1_setupxb,a2
         0000db50 0000e240' 
    2966 0000db70     0d5f  kincok3 calla   setup_message
         0000db80 00000000! 
    2967                    
    2968 0000dba0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000dbb0     0704  
    2969 0000dbc0     4140          add     a10,a0
    2970 0000dbd0     0580          move    a0,@mess_objid
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   68

         0000dbe0 00000000! 
    2971                    
    2972 0000dc00     09e4          movi    kincstr_text,a4
         0000dc10 0000e6a0' 
    2973 0000dc30     0d5f          calla   print_string_C2
         0000dc40 00000000! 
    2974                    
    2975 0000dc60     09e2          movi    kincln2_setupx,a2
         0000dc70 0000e2e0' 
    2976 0000dc90     4d4a          move    a10,a10
    2977 0000dca0     ca03          jrz     kincok4
    2978 0000dcb0     09e2          movi    kincln2_setupxb,a2
         0000dcc0 0000e380' 
    2979 0000dce0     0d5f  kincok4 calla   setup_message
         0000dcf0 00000000! 
    2980                    
    2981 0000dd10     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000dd20     0704  
    2982 0000dd30     4140          add     a10,a0
    2983 0000dd40     0580          move    a0,@mess_objid
         0000dd50 00000000! 
    2984                    
    2985 0000dd70     09e4          movi    kincstr_text2,a4
         0000dd80 0000e728' 
    2986 0000dda0     0d5f          calla   print_string_C2
         0000ddb0 00000000! 
    2987                    
    2988 0000ddd0     0960          rets
    2989                    
    2990                            .if 1
    2991 0000dde0           kincln0_setup
    2992 0000dde0                   JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    2993 0000de80           kincln0_setupb
    2994 0000de80                   JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    2995                    
    2996 0000df20           kincln1_setup
    2997 0000df20                   JAM_STR font9_ascii,8,0,81,80,FNT9WHT_P,0
    2998 0000dfc0           kincln1_setupb
    2999 0000dfc0                   JAM_STR font9_ascii,8,0,321,80,FNT9WHT_P,0
    3000                    
    3001 0000e060           kincln2_setup
    3002 0000e060                   JAM_STR font9_ascii,8,0,81,95,FNT9WHT_P,0
    3003 0000e100           kincln2_setupb
    3004 0000e100                   JAM_STR font9_ascii,8,0,321,95,FNT9WHT_P,0
    3005                    
    3006 0000e1a0           kincln1_setupx
    3007 0000e1a0                   JAM_STR font9_ascii,8,0,81,60,FNT9WHT_P,0
    3008 0000e240           kincln1_setupxb
    3009 0000e240                   JAM_STR font9_ascii,8,0,321,60,FNT9WHT_P,0
    3010                    
    3011 0000e2e0           kincln2_setupx
    3012 0000e2e0                   JAM_STR font9_ascii,8,0,81,75,FNT9WHT_P,0
    3013 0000e380           kincln2_setupxb
    3014 0000e380                   JAM_STR font9_ascii,8,0,321,75,FNT9WHT_P,0
    3015                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   69

    3016                    
    3017 0000e420           kincln3_setup
    3018 0000e420                   JAM_STR font9_ascii,8,0,81,110,FNT9YEL_P,0
    3019 0000e4c0           kincln3_setupb
    3020 0000e4c0                   JAM_STR font9_ascii,8,0,321,110,FNT9YEL_P,0
    3021                    
    3022 0000e560           kincln4_setup
    3023 0000e560                   JAM_STR font9_ascii,8,0,81,125,FNT9YEL_P,0
    3024 0000e600           kincln4_setupb
    3025 0000e600                   JAM_STR font9_ascii,8,0,321,125,FNT9YEL_P,0
    3026                    
    3027                            .else
    3028                    
    3029                    kincln0_setup                                           ; FREE PLAY
    3030                            JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    3031                    kincln0_setupb
    3032                            JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    3033                    
    3034                    kincln1_setup                                           ; PLEASE
    3035                            JAM_STR font9_ascii,8,0,81,80,FNT9WHT_P,0
    3036                    kincln1_setupb
    3037                            JAM_STR font9_ascii,8,0,321,80,FNT9WHT_P,0
    3038                    
    3039                    kincln2_setup                                           ; DIGIT
    3040                            JAM_STR font9_ascii,8,0,81,95,FNT9WHT_P,0
    3041                    kincln2_setupb
    3042                            JAM_STR font9_ascii,8,0,321,95,FNT9WHT_P,0
    3043                    
    3044                    kincln1_setupx                                          ; PLEASE
    3045                            JAM_STR font9_ascii,8,0,81,PLEASE_YPOS,FNT9WHT_P,0
    3046                    kincln1_setupxb
    3047                            JAM_STR font9_ascii,8,0,321,PLEASE_YPOS,FNT9WHT_P,0
    3048                    
    3049                    kincln2_setupx                                          ; CONTINUE
    3050                            JAM_STR font9_ascii,8,0,81,CONTINUE_YPOS,FNT9WHT_P,0
    3051                    kincln2_setupxb
    3052                            JAM_STR font9_ascii,8,0,321,CONTINUE_YPOS,FNT9WHT_P,0
    3053                    
    3054                    
    3055                    kincln3_setup                                           ; CREDITS
    3056                            JAM_STR font9_ascii,8,0,81,CREDIT_LINE_YPOS,FNT9YEL_P,0
    3057                    kincln3_setupb
    3058                            JAM_STR font9_ascii,8,0,321,CREDIT_LINE_YPOS,FNT9YEL_P,0
    3059                    
    3060                    kincln4_setup                                           ; TO CONTINUE
    3061                            JAM_STR font9_ascii,8,0,81,TO_CONTINUE_YPOS,FNT9YEL_P,0
    3062                    kincln4_setupb
    3063                            JAM_STR font9_ascii,8,0,321,TO_CONTINUE_YPOS,FNT9YEL_P,0
    3064                            .endif
    3065                    
    3066                    
    3067 0000e6a0           kincstr_text
    3068 0000e6a0       50          .string "PLEASE",0
    3069 0000e6d8           kincstr_text0
    3070 0000e6d8       46          .string "FREE PLAY",0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   70

    3071 0000e728           kincstr_text2
    3072 0000e728       43          .string "CONTINUE!",0
    3073 0000e778           kincstr_text3
    3074 0000e778       20          .string "  CREDITS",0
    3075 0000e7c8           kincstr_text3b
    3076 0000e7c8       20          .string "  CREDIT",0
    3077 0000e810           kincstr_text4
    3078 0000e810       54          .string "TO CONTINUE",0
    3079 0000e870                   .even
    3080                    
    3081                    
    3082                    ******************************************************************************
    3083                    
    3084                            .ref    AUD1
    3085                            .ref    GET_CREDITS
    3086                            .ref    get_start_down
    3087                            .ref    get_but_val_cur
    3088                    
    3089              0009  kinccont_timer  .equ    9
    3090              0019  kincresets_allowed      .equ    25              ;People whack on button to reset
    3091                    
    3092 0000e870            SUBRP  buyin_counter
    3093                    
    3094 0000e870     05a0          move    @rr_loss,a0
         0000e880 00000220- 
    3095 0000e8a0     ca07          jrz     not_rr1
    3096 0000e8b0     05a0          move    @cursor_procs,a0
         0000e8c0 00000210- 
    3097 0000e8e0     1020          inc     a0
    3098 0000e8f0     0580          move    a0,@cursor_procs
         0000e900 00000210- 
    3099 0000e920           not_rr1
    3100                    
    3101 0000e920     b14d          move    a10,*a13(PDATA+16)      ;0 or 1
         0000e930     0110  
    3102                    
    3103 0000e940     09c0          movi    AUD_CONTOFF,a0          ;increment the offered audit
         0000e950     002c  
    3104 0000e960     0d5f          calla   AUD1
         0000e970 00000000! 
    3105                    
    3106 0000e990     09c7          movi    kincresets_allowed,a7
         0000e9a0     0019  
    3107                    
    3108 0000e9b0     c005          jruc    kincloop_start
    3109                    
    3110 0000e9c0           kinccoin_loop_reset
    3111 0000e9c0     09c7          movi    kincresets_allowed,a7
         0000e9d0     0019  
    3112                    
    3113 0000e9e0           kincloop_reset
    3114 0000e9e0     0d5f          calla   DELOBJA8
         0000e9f0 00000000! 
    3115                    
    3116 0000ea10           kincloop_start
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   71

    3117 0000ea10     0d5f          calla   GET_CREDITS
         0000ea20 00000000! 
    3118 0000ea40     4c06          move    a0,a6
    3119                    
    3120 0000ea50                   PUSH    a6,a7
    3121 0000ea70     09e0          movi    [080,0],a0                      ;x pos
         0000ea80 00500000  
    3122 0000eaa0     b5aa          move    *a13(PDATA+16),a10
         0000eab0     0110  
    3123 0000eac0     4d4a          move    a10,a10
    3124 0000ead0     ca03          jrz     kincp1
    3125 0000eae0     09e0          movi    [0320,0],a0                     ;x pos
         0000eaf0 01400000  
    3126 0000eb10           kincp1
    3127 0000eb10     09e1          movi    [TIMER_YPOS,0],a1               ;y pos
         0000eb20 00d00000  
    3128 0000eb40     09e2          movi    FNT9_9,a2                       ;* image
         0000eb50 00000000! 
    3129 0000eb70     09c3          movi    104+200,a3                      ;z pos
         0000eb80     0130  
    3130 0000eb90     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000eba0 0000a002  
    3131 0000ebc0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         0000ebd0     0704  
    3132 0000ebe0     4145          add     a10,a5
    3133 0000ebf0     56c6          clr     a6                              ;x vel
    3134 0000ec00     56e7          clr     a7                              ;y vel
    3135 0000ec10     09f0          movi    FNT9WHT_P,b0
         0000ec20 00000000! 
    3136 0000ec40     0d5f          calla   BEGINOBJP
         0000ec50 00000000! 
    3137 0000ec70                   PULL    a6,a7
    3138                    
    3139 0000ec90     05a9          move    @PSTATUS2,a9
         0000eca0 00000000! 
    3140 0000ecc0     09ca          movi    TSEC*2,a10
         0000ecd0     006a  
    3141 0000ece0     09cb          movi    kinccont_timer,a11
         0000ecf0     0009  
    3142                    
    3143 0000ed00           kincloop
    3144 0000ed00                   PUSHP   a6,a7
    3145 0000ed20                   SLEEPK  1
    3146 0000ed60                   PULLP   a6,a7
    3147                    
    3148                    ;Buyin check
    3149 0000ed80     05ae          move    @PSTATUS2,a14
         0000ed90 00000000! 
    3150 0000edb0     b5a0          move    *a13(PDATA+16),a0
         0000edc0     0110  
    3151 0000edd0     4a0e          btst    a0,a14
    3152 0000ede0     cb47          jrne    kincbuyin
    3153                    
    3154                    ;More credits check
    3155 0000edf0     0d5f          calla   GET_CREDITS
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   72

         0000ee00 00000000! 
    3156 0000ee20     4806          cmp     a0,a6
    3157 0000ee30     cbb8          jrne    kinccoin_loop_reset
    3158                    
    3159                    ;Start button check
    3160 0000ee40     4ce7          move    a7,a7
    3161 0000ee50     ca11          jrz     kincskip_start_check
    3162                    
    3163                    ;Any player who hits his start will reset buyin timer!
    3164 0000ee60     b5a0          move    *a13(PDATA+16),a0
         0000ee70     0110  
    3165 0000ee80     0d5f          calla   get_start_down
         0000ee90 00000000! 
    3166 0000eeb0     4c00          move    a0,a0
    3167 0000eec0     cb36          jrnz    kincstart_hit
    3168                    
    3169 0000eed0     b5a0          move    *a13(PDATA+16),a0
         0000eee0     0110  
    3170 0000eef0     0bc0          xori    1,a0
         0000ef00 00000001  
    3171 0000ef20     0d5f          calla   get_start_down
         0000ef30 00000000! 
    3172 0000ef50     4c00          move    a0,a0
    3173 0000ef60     cb2c          jrnz    kincstart_hit
    3174                    
    3175 0000ef70           kincskip_start_check
    3176                    
    3177                    ;Regular button check
    3178                    
    3179                    ;Make these button presses player specific!
    3180                    
    3181 0000ef70     b5a0          move    *a13(PDATA+16),a0
         0000ef80     0110  
    3182 0000ef90     0d5f          calla   get_but_val_down
         0000efa0 00000000! 
    3183 0000efc0     4c00          move    a0,a0
    3184 0000efd0     cb20          jrnz    kincnew_button_press
    3185                    
    3186 0000efe0     b5a0          move    *a13(PDATA+16),a0
         0000eff0     0110  
    3187 0000f000     0d5f          calla   get_but_val_cur
         0000f010 00000000! 
    3188 0000f030     4c00          move    a0,a0
    3189 0000f040     cb1b          jrnz    kincold_button_press
    3190                    
    3191                    ;No buttons down
    3192 0000f050     0d8a          dsj     a10,kincloop
         0000f060     ffc9  
    3193                    
    3194 0000f070           kincsec_elapsed
    3195                    ;A second has elapsed.
    3196 0000f070     142b          dec     a11
    3197 0000f080     ca44          jrz     kinctimeout
    3198 0000f090     09ca          movi    TSEC*2,a10
         0000f0a0     006a  
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   73

    3199                    
    3200 0000f0b0     4d6e          move    a11,a14
    3201 0000f0c0                   X32     a14
    3202 0000f0d0     0b2e          addi    digits_tbl,a14
         0000f0e0 0000c870' 
    3203 0000f100     87c0          move    *a14,a0,L
    3204 0000f110     0d5f          calla   civanic
         0000f120 00000000! 
    3205                    
    3206 0000f140     4d6e          move    a11,a14
    3207 0000f150     0d3f          callr   setup_clock_sound
         0000f160     0001  
    3208                    
    3209 0000f170     c0b8          jruc    kincloop
    3210                    
    3211 0000f180           setup_clock_sound
    3212                    ;       x16     a14
    3213                    ;       addi    which_tick_tock,a14
    3214                    ;       move    *a14,a0
    3215                    ;       CREATE0 do_next_tick
    3216                    ;       movi    0B7H,a0
    3217 0000f180     09c0          movi    0AH,a0
         0000f190     000a  
    3218 0000f1a0     0d5f          calla   triple_sound
         0000f1b0 00000000! 
    3219 0000f1d0     0960          rets
    3220                    
    3221                    ;do_next_tick
    3222                    ;       SLEEP   12
    3223                    ;       MOVI    0B8H,A0
    3224                    ;       CALLA   triple_sound
    3225                    ;       DIE
    3226                    
    3227                    ;which_tick_tock
    3228                    ;       .word   0b7h,0b8h,0b7h,0b8h
    3229                    ;       .word   0b7h,0b8h,0b7h,0b8h
    3230                    ;       .word   0b7h,0b8h,0b7h,0b8h
    3231                    
    3232 0000f1e0           kincnew_button_press
    3233                    ;New press.  skip a digit
    3234 0000f1e0     574a          clr     a10
    3235 0000f1f0     c0e7          jruc    kincsec_elapsed
    3236                    
    3237 0000f200           kincold_button_press
    3238                    ;Button being held.  Run clock at triple rate
    3239 0000f200     168a          subk    20,a10
    3240 0000f210     c1ae          jrp     kincloop
    3241 0000f220     c0e4          jruc    kincsec_elapsed
    3242                    
    3243 0000f230           kincstart_hit
    3244                    ;A PSTATUS-active player has hit a start button.
    3245 0000f230     1427          dec     a7
    3246 0000f240     c000          jruc    kincloop_reset
         0000f250     ff78  
    3247                    
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   74

    3248 0000f260           kincbuyin
    3249                    ;Someone has bought in.
    3250                    ;ALREADY DONE ELSE WHERE
    3251                    ;       movi    AUD_CONTTAKN,a0         ;inc the conts taken audit
    3252                    ;       calla   AUD1
    3253 0000f260     05ae          move    @rr_loss,a14
         0000f270 00000220- 
    3254 0000f290     ca19          jrz     kincno_rr_loss
    3255 0000f2a0     b5ae          move    *a13(PDATA+16),a14
         0000f2b0     0110  
    3256 0000f2c0     102e          addk    1,a14
    3257 0000f2d0     03ee          not     a14
    3258 0000f2e0     05a0          move    @OLD_PSTATUS2,a0
         0000f2f0 00000000! 
    3259 0000f310     51c0          and     a14,a0
    3260 0000f320     05ae          move    @cursor_procs,a14
         0000f330 00000210- 
    3261 0000f350     142e          dec     a14
    3262 0000f360     058e          move    a14,@cursor_procs
         0000f370 00000210- 
    3263 0000f390     4dce          move    a14,a14
    3264 0000f3a0     cb03          jrnz    kincno_cp
    3265 0000f3b0     058e          move    a14,@active_flag
         0000f3c0 00000090- 
    3266 0000f3e0     57ce  kincno_cp       clr     a14
    3267 0000f3f0     058e          move    a14,@rr_loss            ;don't care about this anymore
         0000f400 00000220- 
    3268 0000f420     c001          jruc    kincok2_1
    3269 0000f430           kincno_rr_loss
    3270 0000f430     5600          clr     a0      ; ORG
    3271 0000f440           kincok2_1
    3272 0000f440     0580          move    a0,@OLD_PSTATUS
         0000f450 00000000! 
    3273 0000f470     0580          move    a0,@blow_out
         0000f480 000000c0- 
    3274                    
    3275 0000f4a0                   DIE
    3276                    
    3277 0000f4d0           kinctimeout
    3278                    ;Time ran out!
    3279                    ;If the other player has not bought in, then goto game over
    3280                    ;If the other player is active, and has already chosen his fighter, then
    3281                    ;immediately go into the match
    3282                    ;If he hasn't chosen his fighter, replot the text messages to now read
    3283                    ;Challenger needed, Insert x coins to start (The player blew his opportunity
    3284                    ;to continue the game at the potentially lower price!)
    3285                    ;
    3286 0000f4d0     05ae          move    @rr_loss,a14
         0000f4e0 00000220- 
    3287 0000f500     ca10          jrz     kincno_rr_loss1
    3288 0000f510     b5ae          move    *a13(PDATA+16),a14
         0000f520     0110  
    3289 0000f530     102e          addk    1,a14
    3290 0000f540     03ee          not     a14
    3291 0000f550     05a0          move    @OLD_PSTATUS2,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Oct 31 23:36:21 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   75

         0000f560 00000000! 
    3292 0000f580     51c0          and     a14,a0
    3293 0000f590     05ae          move    @cursor_procs,a14
         0000f5a0 00000210- 
    3294 0000f5c0     142e          dec     a14
    3295 0000f5d0     058e          move    a14,@cursor_procs
         0000f5e0 00000210- 
    3296 0000f600     c001          jruc    kincok1
    3297 0000f610           kincno_rr_loss1
    3298 0000f610     5600          clr     a0      ;ORG
    3299 0000f620           kincok1
    3300 0000f620     0580          move    a0,@OLD_PSTATUS
         0000f630 00000000! 
    3301 0000f650     05a0          move    @rr_loss,a0
         0000f660 00000220- 
    3302 0000f680     ca04          jrz     kincdo_end
    3303 0000f690     4dce          move    a14,a14
    3304 0000f6a0     ca02          jrz     kincdo_end
    3305 0000f6b0     5600          clr     a0
    3306 0000f6c0     c001          jruc    kincset_it
    3307 0000f6d0           kincdo_end
    3308                    
    3309 0000f6d0     1820          movk    1,a0
    3310 0000f6e0           kincset_it
    3311 0000f6e0     0580          move    a0,@blow_out
         0000f6f0 000000c0- 
    3312                    
    3313 0000f710                   DIE
    3314                    
    3315 0000f740           auto_str
    3316 0000f740                   JAM_STR font9_ascii,10,0,200,19,FNT9WHT_P,print_string_C2
    3317 0000f7e0       41          .string "AUTO INITIALS",0
    3318 0000f850                   .even
    3319                    
    3320                    ******************************************************************************
    3321                    
    3322                            .end

 No Errors,  No Warnings
