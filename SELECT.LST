TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "select.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "mproc.equ"             ;Mproc equates
      10                            .include        "display.equ"           ;Display proc equates
      11                            .include        "gsp.equ"               ;Gsp asm equates
      12                            .include        "sys.equ"
      13                            .include        "game.equ"
      14                            .include        "audit.equ"
      15                            .include        "macros.h"
      16                            .include        "link.equ"
      17                            .include        "sound.h"
      18                            .include        "plyr.equ"
      19                            .INCLUDE        "SOUND.EQU"
      20                    
      21                            .include        "fontsimg.glo"
      22                            .include        "bgndtbl.glo"
      23                            .include        "imgtbl.glo"
      24                            .include        "miscimg.glo"
      25                            .include        "ropeimg.glo"
      26                    
      27                    
      28                            .ref    current_round
      29                            .ref    DO_BEATEN_GAME
      30                    
      31                            .def    howard_wins,digits_tbl,calc_match_time_1
      32                            .def    num_wrestlers,wrestler_mugs
      33                    
      34                            .def    wrestler_attributes,attbars
      35                            .def    wrestler_mugs2,wrestler_audits
      36                    
      37                            .ref    ADD_VOICE,BAKMODS,BCDBIN,BEGINOBJ_TBL,BGND_UD1
      38                            .ref    BINBCD,change_image,CHECK_SCORE,civanic
      39                            .ref    CLOSE_PROGRESS_SCREEN,CLOSE_SCREEN_LINE,CR_STRTP
      40                            .ref    CURRENT_ANN_QUEUE,DONE_HOWARD,do_that_cycle,dpageflip
      41                            .ref    entered_inits,FADE_MASTER_VOL,FIND_LOW_TABLE_LEVEL
      42                            .ref    GET_ADJ,get_but_val_down,get_process_ptr,get_start_cur
      43                            .ref    get_stick_val_cur,get_stick_val_down,match_time
      44                            .ref    NEXT_ANN_QUEUE,no_pin_check,PCNT,pin_speed_check
      45                            .ref    PIN_SPEED_TAB,OLD_PSTATUS2,TEMP_PSTATUS,PSTATUS,PSTATUS2,PUT_UP_PROGRESS,RNDPER,RNDRNG0
      46                            .ref    SPECIAL_WIPEOUT,start_credbox
      47                            .ref    NEXT_IN_LADDER,INIT_LADDER_TABLE
      48                            .ref    NUM_OF_OPPS,CURRENT_LADDER,get_all_buttons_cur2
      49                            .ref    print_message,osgemd_ascii,is_final_match
      50                            .ref    UNIT_CLR,attract_mode,round_start_time,round_end_time
      51                            .REF    set_volume
      52                            .REF    belt_type
      53                    
      54                            .if DEBUG
      55                            .ref    stay_down
      56                            .endif
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    2

      57                    
      58                            .ref    total_matches
      59                            .ref    triple_sound,winstreak_check,WIPEOUT,wmania_tune
      60                            .ref    print_beaten
      61                            .ref    print_inter
      62                            .ref    GET_AUD
      63                            .ref    match_cnt
      64                            .ref    show_bonus_icons
      65                            .ref    clear_icon_total
      66                            .ref    del_bonus_icons
      67                    
      68                            .ref    wgsf24_ascii
      69                            .REF    royal_rumble
      70                            .REF    DO_TAG_GAME
      71                            .ref    print_tag
      72                            .ref    hscore_colcyc
      73                            .ref    hscore_colcyc2
      74                            .ref    font9_ascii,FNT9WHT_P,auto_init
      75                    
      76                    
      77 00000000                   BSSX    MATCH_TIMERS,64
      78 00000000                   bssx    which_player,32
      79                    
      80 00000000                   BSSX    index1,         16      ;player 1 cursor position
      81 00000000                   BSSX    index2,         16      ;player 2 cursor position
      82 00000080                   .bss    time_out,       16      ;time out flag
      83 00000000                   BSSX    active_flag,    16      ;0:player 1 active, 1:player 2 active
      84                    
      85 000000a0                   .bss    kp_p1cursor,    32
      86 000000c0                   .bss    blow_out,       16      ;Flag for not delaying after no buyin
      87 000000d0                   .BSS    SPEECH_STARTED, 16
      88                    
      89 00000000                   bssx    match_time_bcd,32
      90                    
      91 00000000                   bssx    are_we_waiting_f,32
      92 00000000                   BSSX    player_pal_pref,120*2
      93 00000210                   .bss    cursor_procs,16
      94 00000000                   BSSX    rr_loss,16
      95 00000230                   .BSS    TEMP_PSTATUS2,16
      96                    
      97                    
      98              0009  num_wrestlers   EQU     9
      99                    
     100 00000000     0032          .word   AUD_SNDERR4,AUD_SNDERR4,AUD_SNDERR4,AUD_SNDERR4
     101 00000040           wrestler_audits
     102 00000040     0033          .word   AUD_BHART,AUD_BHARTHW,AUD_BHARTC,AUD_BHARTCW
     103 00000080     0034          .word   AUD_RRAMO,AUD_RRAMOHW,AUD_RRAMOC,AUD_RRAMOCW
     104 000000c0     0035          .word   AUD_UNDER,AUD_UNDERHW,AUD_UNDERC,AUD_UNDERCW
     105 00000100     0036          .word   AUD_YOKO,AUD_YOKOHW,AUD_YOKOC,AUD_YOKOCW
     106 00000140     0037          .word   AUD_SMICH,AUD_SMICHHW,AUD_SMICHC,AUD_SMICHCW
     107 00000180     0038          .word   AUD_BBBIG,AUD_BBBIGHW,AUD_BBBIGC,AUD_BBBIGCW
     108 000001c0     0039          .word   AUD_DCLOW,AUD_DCLOWHW,AUD_DCLOWC,AUD_DCLOWCW
     109 00000200     0000          .word   0,0,0,0
     110 00000240     003b          .word   AUD_LLUGE,AUD_LLUGEHW,AUD_LLUGEC,AUD_LLUGECW
     111 00000280           wrestler_auditsX
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    3

     112                    
     113                    
     114              002d  PLEASE_YPOS             .equ    45
     115              00ca  CONTINUE_YPOS           .equ    PLEASE_YPOS+157
     116              006e  CREDIT_LINE_YPOS        .equ    110
     117              00d0  TIMER_YPOS              .equ    208
     118              007d  TO_CONTINUE_YPOS        .equ    CREDIT_LINE_YPOS+15
     119                    
     120                    
     121                            .ref    OLD_PSTATUS
     122                            .ref    CR_CONTP
     123                            .ref    GAMSTATE
     124                    
     125                    
     126 00000280                   STRUCTPD
     127 00000280                   LONG    dgimcursorimg           ;UHL cursor *img
     128 00000280                   LONG    dgimhiliteimg           ;UHL hilite letter *img
     129 00000280                   WORD    dgimstick                       ;UHW stick to read
     130 00000280                   LONG    dgimwhich_tab
     131 00000280                   LONG    dgimwhich_entry
     132 00000280                   LONG    dgimwhich_level
     133                    
     134 00000280            SUBR   GAME_BEATEN
     135                    
     136                            ;kill the ladder
     137 00000280     0d5f          calla   INIT_LADDER_TABLE
         00000290 00000000! 
     138                    
     139 000002b0     18c0          MOVK    INPARTY,A0
     140 000002c0     0580          MOVE    A0,@GAMSTATE
         000002d0 00000000! 
     141 000002f0     09c3          MOVI    998,A3
         00000300     03e6  
     142 00000310     0d5f          CALLA   SNDSND
         00000320 00000000! 
     143 00000340     09c0          movi    2,a0
         00000350     0002  
     144 00000360     0d5f          calla   RNDRNG0
         00000370 00000000! 
     145 00000390     4c03          move    a0,a3
     146 000003a0     11e3          addk    0fh,a3
     147 000003b0     0d5f          calla   SNDSND
         000003c0 00000000! 
     148                    
     149 000003e0     18ab          MOVK    5,A11
     150 000003f0     09c8          MOVI    32,A8
         00000400     0020  
     151 00000410                   CREATE  FADE_PID,FADE_MASTER_VOL
     152                    
     153 00000490     0d5f          calla   WIPEOUT
         000004a0 00000000! 
     154 000004c0     1820          movk    1,a0                    ;page flipping on
     155 000004d0     0580          move    a0,@dpageflip
         000004e0 00000000! 
     156 00000500     0d5f          calla   start_credbox
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    4

         00000510 00000000! 
     157 00000530     09e0          movi    dgimplyrsel_mod,a0
         00000540 00003f30' 
     158 00000560     0780          move    a0,@BAKMODS,L
         00000570 00000000! 
     159 00000590     0d5f          calla   BGND_UD1                ;create objects for background
         000005a0 00000000! 
     160 000005c0     57ce          clr     a14
     161 000005d0     058e          move    a14,@time_out
         000005e0 00000080- 
     162                    
     163 00000600                   CREATE  CROUTON_PID,display_croutons
     164                    
     165 00000680     05aa          MOVE    @royal_rumble,A10
         00000690 00000000! 
     166 000006b0     cb00          JRNZ    WE_PLAYED_A_TAG_TEAM
         000006c0     009e  
     167                    
     168 000006d0     05aa          move    @PSTATUS2,A10
         000006e0 00000000! 
     169 00000700     2fea          srl     1,a10
     170 00000710     4d48          move    a10,a8
     171                    
     172 00000720     4d01          MOVE    a8,a1
     173 00000730     24a1          sll     5,a1
     174 00000740     4d02          move    a8,a2
     175 00000750     2482          sll     4,a2
     176 00000760     4041          add     a2,a1
     177 00000770     0b21          addi    entered_inits,a1
         00000780 00000000! 
     178 000007a0     5642          clr     a2
     179 000007b0     9241          move    a2,*a1+,L
     180 000007c0     8041          move    a2,*a1
     181                    
     182 000007d0                   push    a10
     183 000007e0     5621          clr     a1
     184 000007f0     4d4a          move    a10,a10
     185 00000800     cb01          jrnz    which_playr_set
     186 00000810     1821          movk    1,a1
     187 00000820           which_playr_set
     188 00000820     4c2a          move    a1,a10
     189 00000830                   CREATE  PCURSOR_PID,player_cursor
     190                    
     191 000008b0                   pull    a10
     192 000008c0                   push    a10
     193                    
     194 000008d0                   JSRP    DO_BEATEN_GAME
     195 00000940                   pull    a10
     196                    
     197 00000950           are_we_waiting4
     198 00000950     4d40          move    a10,a0
     199 00000960     0b00          addi    HI_INPUT_PID,a0
         00000970     0137  
     200 00000980     09c1          movi    -1,a1
         00000990     ffff  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    5

     201 000009a0     0d5f          calla   EXISTP
         000009b0 00000000! 
     202 000009d0     ca1e          JRZ     no_need_for_inputb
     203 000009e0                   sleep   1
     204 00000a30     09c0          movi    CYCPID,a0
         00000a40     0110  
     205 00000a50     09c1          movi    -1,a1
         00000a60     ffff  
     206 00000a70     0d5f          calla   EXISTP
         00000a80 00000000! 
     207 00000aa0     cbea          jrnz    are_we_waiting4
     208 00000ab0     4d40          move    a10,a0
     209 00000ac0     0b00          addi    HI_INPUT_PID,a0
         00000ad0     0137  
     210 00000ae0     09c1          movi    -1,a1
         00000af0     ffff  
     211 00000b00     0d5f          calla   EXISTP
         00000b10 00000000! 
     212 00000b30     ca08          JRZ     no_need_for_inputb
     213 00000b40     098f          mmtm    sp,a10,a9,a8
         00000b50     00e0  
     214 00000b60     0d5f          calla   do_that_cycle
         00000b70 00000000! 
     215 00000b90     09af          mmfm    sp,a10,a9,a8
         00000ba0     0700  
     216 00000bb0     c0d9          jruc    are_we_waiting4
     217                    
     218 00000bc0           no_need_for_inputb
     219                    
     220 00000bc0     0d5f          CALLA   WIPEOUT
         00000bd0 00000000! 
     221 00000bf0     1820          movk    1,a0                    ;page flipping on
     222 00000c00     0580          move    a0,@dpageflip
         00000c10 00000000! 
     223 00000c30     09e0          movi    dgimhstd_mod,a0
         00000c40 00001790' 
     224 00000c60     0780          move    a0,@BAKMODS,L
         00000c70 00000000! 
     225 00000c90     0d5f          CALLA   BGND_UD1                ;create objects for background
         00000ca0 00000000! 
     226                    
     227 00000cc0     09c0          movi    AUD_BEATEN,A0
         00000cd0     0059  
     228 00000ce0     05a1          MOVE    @belt_type,a1
         00000cf0 00000000! 
     229 00000d10     cb02          jrnz    got_right_audit
     230 00000d20     09c0          MOVI    AUD_INTER,A0
         00000d30     005a  
     231 00000d40           got_right_audit
     232 00000d40     0d5f          calla   GET_AUD
         00000d50 00000000! 
     233 00000d70     0be1          SUBI    1,A1
         00000d80     fffe  
     234 00000d90     0b41          CMPI    1,A1
         00000da0     fffe  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    6

     235 00000db0     c501          JRGE    NO_PROBLEM
     236 00000dc0     1821          MOVK    1,A1
     237 00000dd0           NO_PROBLEM
     238 00000dd0     0b41          CMPI    48,A1
         00000de0     ffcf  
     239 00000df0     c602          JRLE    NO_PROBLEM2
     240 00000e00     09c1          MOVI    48,A1
         00000e10     0030  
     241 00000e20           NO_PROBLEM2
     242 00000e20     4c25          MOVE    A1,A5
     243                    
     244 00000e30     05a1          MOVE    @belt_type,a1
         00000e40 00000000! 
     245 00000e60     cb0f          jrnz    DISPLAY_RIGHT_TABLE
     246 00000e70                   JSRP    print_inter
     247                    
     248 00000ee0                   SLEEP   TSEC*7
     249 00000f30                   RETP
     250                    
     251 00000f60           DISPLAY_RIGHT_TABLE
     252 00000f60                   JSRP    print_beaten
     253 00000fd0     0d5f          calla   hscore_colcyc
         00000fe0 00000000! 
     254 00001000     0d5f          calla   hscore_colcyc2
         00001010 00000000! 
     255                    
     256 00001030                   SLEEP   TSEC*7
     257 00001080                   RETP
     258                    
     259 000010b0           WE_PLAYED_A_TAG_TEAM
     260                    
     261 000010b0     07a9          move    @MATCH_TIMERS,a9,L
         000010c0 00000000- 
     262 000010e0     c106          jrp     dgimtime_ok
     263 000010f0     07a9          move    @MATCH_TIMERS+20h,a9,L
         00001100 00000020- 
     264 00001120     cb02          jrnz    dgimtime_ok
     265                    
     266                            .if DEBUG
     267                            LOCKUP  ;bogus timer value
     268                            .endif
     269 00001130     09c9          movi    12340,a9                ;123.4 seconds if the value is bogus
         00001140     3034  
     270 00001150           dgimtime_ok
     271                    
     272 00001150     574a          CLR     A10
     273 00001160     078a          MOVE    A10,@entered_inits,L
         00001170 00000000! 
     274 00001190     078a          MOVE    A10,@entered_inits+32,L
         000011a0 00000020! 
     275 000011c0     078a          MOVE    A10,@entered_inits+64,L
         000011d0 00000040! 
     276 000011f0     5708          clr     a8
     277                    
     278 00001200                   JSRP    DO_TAG_GAME
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    7

     279                    
     280 00001270     182a          MOVK    1,A10
     281 00001280     4d48          MOVE    A10,A8
     282 00001290                   JSRP    DO_TAG_GAME
     283                    
     284 00001300           are_we_waiting5
     285 00001300                   sleep   1
     286                    
     287 00001350     09c0          movi    CYCPID,a0
         00001360     0110  
     288 00001370     09c1          movi    -1,a1
         00001380     ffff  
     289 00001390     0d5f          calla   EXISTP
         000013a0 00000000! 
     290 000013c0     cb03          jrnz    are_we_waiting6
     291                    
     292 000013d0     0d5f          calla   do_that_cycle
         000013e0 00000000! 
     293 00001400           are_we_waiting6
     294 00001400     09c0          movi    HI_INPUT_PID,a0
         00001410     0137  
     295 00001420     09c1          movi    -1,a1
         00001430     ffff  
     296 00001440     0d5f          calla   EXISTP
         00001450 00000000! 
     297 00001470     cbe8          JRNZ    are_we_waiting5
     298 00001480     09c0          movi    HI_INPUT_PID+1,a0
         00001490     0138  
     299 000014a0     09c1          movi    -1,a1
         000014b0     ffff  
     300 000014c0     0d5f          calla   EXISTP
         000014d0 00000000! 
     301 000014f0     cbe0          JRNZ    are_we_waiting5
     302 00001500           no_need_for_inputc
     303                            .if RR_AWARD = 1
     304 00001500     05ae          move    @royal_rumble,a14
         00001510 00000000! 
     305 00001530     cb22          jrnz    no_scores
     306                            .endif
     307                    
     308                    
     309 00001540     0d5f          CALLA   WIPEOUT
         00001550 00000000! 
     310 00001570     1820          movk    1,a0                    ;page flipping on
     311 00001580     0580          move    a0,@dpageflip
         00001590 00000000! 
     312 000015b0     09e0          movi    dgimhstd_mod,a0
         000015c0 00001790' 
     313 000015e0     0780          move    a0,@BAKMODS,L
         000015f0 00000000! 
     314 00001610     0d5f          CALLA   BGND_UD1                ;create objects for background
         00001620 00000000! 
     315                    
     316 00001640                   JSRP    print_tag
     317                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    8

     318 000016b0     0d5f          calla   hscore_colcyc
         000016c0 00000000! 
     319 000016e0     0d5f          calla   hscore_colcyc2
         000016f0 00000000! 
     320                    
     321 00001710                   SLEEP   TSEC*7
     322                    
     323                            .if RR_AWARD = 1
     324 00001760           no_scores
     325                            .endif
     326                    
     327 00001760                   RETP
     328                    
     329                    
     330 00001790           dgimhstd_mod
     331 00001790           hstd_mod
     332 00001790 00000000!         .long   slateBMOD
     333 000017b0     0000          .word   0,0
     334 000017d0 00000000          .long   0
     335                    
     336                    
     337 000017f0            SUBR   pin_speed_in_case
     338 000017f0     05c0          MOVE    @PSTATUS2,@TEMP_PSTATUS
         00001800 00000000! 
         00001820 00000000! 
     339                    
     340 00001840     05ae          move    @total_matches,a14
         00001850 00000000! 
     341 00001870     ca00          jrz     no_need_for_input
         00001880     00af  
     342 00001890     05ae          move    @current_round,a14
         000018a0 00000000! 
     343 000018c0     0b4e          cmpi    3,a14
         000018d0     fffc  
     344 000018e0     ca00          jreq    no_need_for_input
         000018f0     00a8  
     345                    
     346 00001900     0d5f          calla   is_final_match
         00001910 00000000! 
     347 00001930     c800          jrc     no_need_for_input
         00001940     00a3  
     348 00001950     09ce          movi    INSELECT,a14
         00001960     0002  
     349 00001970     058e          move    a14,@GAMSTATE
         00001980 00000000! 
     350                    
     351 000019a0     4d48          move    a10,a8
     352                    
     353 000019b0     4d01          move    a8,A1
     354 000019c0     0d5f          CALLA   get_process_ptr
         000019d0 00000000! 
     355 000019f0     4d00          MOVE    A8,A0
     356 00001a00     24a0          SLL     5,A0
     357 00001a10     0b20          ADDI    MATCH_TIMERS,A0
         00001a20 00000000- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    9

     358 00001a40     8600          move    *a0,A0,L
     359 00001a50     09eb          movi    FIND_LOW_TABLE_LEVEL,a11
         00001a60 00000000! 
     360 00001a80     b36d          move    a11,*a13(dgimwhich_level),L
         00001a90     0190  
     361 00001aa0     5663          clr     a3
     362 00001ab0     09e8          MOVI    PIN_SPEED_TAB,A8
         00001ac0 00000000! 
     363 00001ae0     0d5f          calla   CHECK_SCORE
         00001af0 00000000! 
     364                    
     365 00001b10     ca00          jrz     no_need_for_input
         00001b20     0085  
     366 00001b30     4d41          move    a10,A1
     367 00001b40     24a1          sll     5,a1
     368                    
     369 00001b50     4d42          MOVE    A10,A2
     370 00001b60     2482          SLL     4,A2
     371 00001b70     4041          ADD     A2,A1
     372 00001b80     0b21          addi    entered_inits,a1
         00001b90 00000000! 
     373 00001bb0     8621          move    *a1,a1,L
     374 00001bc0     cb48          jrnz    no_display_anything
     375                    
     376                    
     377 00001bd0     09c3          MOVI    998,A3
         00001be0     03e6  
     378 00001bf0     0d5f          CALLA   SNDSND
         00001c00 00000000! 
     379 00001c20     09c0          movi    2,a0
         00001c30     0002  
     380 00001c40     0d5f          calla   RNDRNG0
         00001c50 00000000! 
     381 00001c70     4c03          move    a0,a3
     382 00001c80     11e3          addk    0fh,a3
     383 00001c90     0d5f          calla   SNDSND
         00001ca0 00000000! 
     384                    
     385 00001cc0     18ab          MOVK    5,A11
     386 00001cd0     09c8          MOVI    32,A8
         00001ce0     0020  
     387 00001cf0                   CREATE  FADE_PID,FADE_MASTER_VOL
     388                    
     389 00001d70     0d5f          calla   WIPEOUT
         00001d80 00000000! 
     390 00001da0     1820          movk    1,a0                    ;page flipping on
     391 00001db0     0580          move    a0,@dpageflip
         00001dc0 00000000! 
     392 00001de0     0d5f          calla   start_credbox
         00001df0 00000000! 
     393 00001e10     09e0          movi    dgimplyrsel_mod,a0
         00001e20 00003f30' 
     394 00001e40     0780          move    a0,@BAKMODS,L
         00001e50 00000000! 
     395 00001e70     0d5f          calla   BGND_UD1                ;create objects for background
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   10

         00001e80 00000000! 
     396 00001ea0     57ce          clr     a14
     397 00001eb0     058e          move    a14,@time_out
         00001ec0 00000080- 
     398                    
     399 00001ee0                   CREATE  CROUTON_PID,display_croutons
     400                    
     401 00001f60                   push    a10
     402 00001f70     5621          clr     a1
     403 00001f80     4d4a          move    a10,a10
     404 00001f90     cb01          jrnz    which_play_set
     405 00001fa0     1821          movk    1,a1
     406 00001fb0           which_play_set
     407 00001fb0     4c2a          move    a1,a10
     408 00001fc0                   CREATE  PCURSOR_PID,player_cursor
     409                    
     410 00002040                   pull    a10
     411 00002050           no_display_anything
     412                    
     413 00002050     4d48          move    a10,a8
     414 00002060     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00002070     03f0  
     415 00002080                   jsrp    pin_speed_check
     416 000020f0     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         00002100     0fc0  
     417                    
     418 00002110           are_we_waiting3
     419 00002110     4d40          move    a10,a0
     420 00002120     0b00          addi    HI_INPUT_PID,a0
         00002130     0137  
     421 00002140     09c1          movi    -1,a1
         00002150     ffff  
     422 00002160     0d5f          calla   EXISTP
         00002170 00000000! 
     423 00002190     ca1e          JRZ     no_need_for_input
     424 000021a0                   sleep   1
     425 000021f0     09c0          movi    CYCPID,a0
         00002200     0110  
     426 00002210     09c1          movi    -1,a1
         00002220     ffff  
     427 00002230     0d5f          calla   EXISTP
         00002240 00000000! 
     428 00002260     cbea          jrnz    are_we_waiting3
     429 00002270     4d40          move    a10,a0
     430 00002280     0b00          addi    HI_INPUT_PID,a0
         00002290     0137  
     431 000022a0     09c1          movi    -1,a1
         000022b0     ffff  
     432 000022c0     0d5f          calla   EXISTP
         000022d0 00000000! 
     433 000022f0     ca08          JRZ     no_need_for_input
     434 00002300     098f          mmtm    sp,a10,a9,a8
         00002310     00e0  
     435 00002320     0d5f          calla   do_that_cycle
         00002330 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   11

     436 00002350     09af          mmfm    sp,a10,a9,a8
         00002360     0700  
     437 00002370     c0d9          jruc    are_we_waiting3
     438                    
     439 00002380           no_need_for_input
     440 00002380     05ae          MOVE    @TEMP_PSTATUS2,A14
         00002390 00000230- 
     441 000023b0     05a1          MOVE    @PSTATUS2,A1
         000023c0 00000000! 
     442 000023e0     482e          CMP     A1,A14
     443 000023f0     ca28          JREQ    NORMAL_EXIT     
     444                    
     445 00002400     57ce          clr     a14
     446 00002410     058e          move    a14,@time_out
         00002420 00000080- 
     447                    
     448                            ;a10 is already set up with side we are on 0 or 1
     449 00002440                   CREATE  PCURSOR_PID,player_cursor
     450 000024c0     102a          inc     a10
     451 000024d0     05ae          move    @active_flag,a14
         000024e0 00000090- 
     452 00002500     554e          or      a10,a14
     453 00002510     058e          move    a14,@active_flag
         00002520 00000090- 
     454                    
     455                    
     456 00002540     09c0          MOVI    CLOCK_PID,A0
         00002550     013a  
     457 00002560     09c1          movi    -1,a1
         00002570     ffff  
     458 00002580     0d5f          CALLA   EXISTP
         00002590 00000000! 
     459 000025b0     ca00          jrz     waitloop
         000025c0     0150  
     460                    
     461 000025d0     09ee          movi    select_time,a14
         000025e0 0000031b  
     462 00002600     b1c0          move    a14,*a0(PA9)
         00002610     00a0  
     463 00002620     57ce          clr     a14
     464 00002630     058e          move    a14,@OLD_PSTATUS
         00002640 00000000! 
     465                            
     466 00002660     c000          JRUC    waitloop
         00002670     0145  
     467                    
     468 00002680           NORMAL_EXIT
     469 00002680                   RETP
     470                    
     471 000026b0           calc_match_time_1
     472 000026b0     0d3f          callr   work_out_match_time
         000026c0     0026  
     473 000026d0     c01a          JRUC    STORE_MATCH_TIME
     474                    
     475                            .def    calc_match_time_2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   12

     476 000026e0           calc_match_time_2
     477 000026e0     0d3f          callr   work_out_match_time
         000026f0     0023  
     478 00002700     b540          MOVE    *A10(PLYRNUM),A0
         00002710     0580  
     479 00002720     0b40          CMPI    2,A0
         00002730     fffd  
     480 00002740     c51d          JRGE    NO_POINT_ITS_A_DRONE
     481 00002750     24a0          SLL     5,A0
     482 00002760     0b20          ADDI    MATCH_TIMERS,A0
         00002770 00000000- 
     483 00002790     8600          MOVE    *A0,A0,L
     484 000027a0     4020          add     a1,a0
     485 000027b0     0b60          cmpi    50000,a0
         000027c0 ffff3caf  
     486 000027e0     c507          jrge    no_bother_pin_speed_check
     487 000027f0     4c00          MOVE    A0,A0
     488 00002800     ce05          JRN     no_bother_pin_speed_check
     489 00002810     0d5f          calla   BINBCD
         00002820 00000000! 
     490 00002840     4c01          move    a0,a1
     491 00002850     c002          JRUC    STORE_MATCH_TIME
     492 00002860           no_bother_pin_speed_check
     493 00002860     09c1          movi    -1,a1
         00002870     ffff  
     494 00002880           STORE_MATCH_TIME
     495 00002880     b540          MOVE    *A10(PLYR_SIDE),A0
         00002890     05b0  
     496 000028a0     0b40          CMPI    2,A0
         000028b0     fffd  
     497 000028c0     c505          JRGE    NO_POINT_ITS_A_DRONE
     498 000028d0     24a0          SLL     5,A0
     499 000028e0     0b20          ADDI    MATCH_TIMERS,A0
         000028f0 00000000- 
     500 00002910     8220          MOVE    A1,*A0,L
     501 00002920           NO_POINT_ITS_A_DRONE
     502 00002920     0960          rets
     503                    
     504                    
     505                    
     506 00002930            SUBRP  work_out_match_time
     507                    
     508                            ;old
     509 00002930     07a4          move    @match_time,a4,L
         00002940 00000000! 
     510 00002960     4c81          move    a4,a1
     511 00002970     2f04          srl     8,a4
     512 00002980     2701          sll     24,a1
     513 00002990     2e81          srl     12,a1
     514 000029a0     5424          or      a1,a4
     515                    
     516 000029b0     05a5          move    @match_time+020h,a5
         000029c0 00000020! 
     517 000029e0     2605          sll     16,a5
     518 000029f0     2e05          srl     16,a5
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   13

     519 00002a00     09c0          movi    100,a0
         00002a10     0064  
     520 00002a20     5e05          mpyu    a0,a5
     521 00002a30     2e05          srl     16,a5
     522 00002a40     4ca0          move    a5,a0
     523 00002a50     0d5f          calla   BINBCD
         00002a60 00000000! 
     524 00002a80     5480          or      a4,a0
     525 00002a90     0d5f          calla   BCDBIN
         00002aa0 00000000! 
     526                    
     527                    
     528                            ;new
     529 00002ac0     05a1          move    @round_end_time,a1
         00002ad0 00000000! 
     530 00002af0     05ae          move    @round_start_time,a14
         00002b00 00000000! 
     531 00002b20     45c1          sub     a14,a1                  ;ticks
     532 00002b30     09ce          movi    (100<<8)/55,a14         ;convert from 55ths to 100ths.
         00002b40     01d1  
     533 00002b50     5fc1          mpyu    a14,a1
     534 00002b60     2f01          srl     8,a1
     535                    
     536                    
     537 00002b70     0960          rets
     538                    
     539                    
     540                    
     541                    
     542 00002b80           howard_wins
     543 00002b80     05a0          MOVE    @SPEECH_STARTED,a0
         00002b90 000000d0- 
     544 00002bb0     0b40          CMPI    2,A0
         00002bc0     fffd  
     545 00002bd0     ca54          jreq    NO_SPEECH_COS_HOWRD_TALKIN
     546 00002be0     09e2          movi    NORMAL_WINNERS,a2
         00002bf0 00002e20' 
     547                    
     548 00002c10     0d5f          CALLA   is_final_match
         00002c20 00000000! 
     549 00002c40     c903          JRNC    NOT_LAST_MATCH
     550 00002c50     09e2          movi    SPECIAL_CONGRATS,A2
         00002c60 00002e50' 
     551                    
     552 00002c80           NOT_LAST_MATCH
     553 00002c80     1840          MOVK    2,A0
     554 00002c90     0d5f          CALLA   RNDRNG0
         00002ca0 00000000! 
     555 00002cc0     2480          SLL     4,A0
     556 00002cd0     4040          ADD     A2,A0
     557 00002ce0     8400          MOVE    *A0,A0
     558 00002cf0     0d5f          CALLA   ADD_VOICE
         00002d00 00000000! 
     559 00002d20     1840          movk    2,a0
     560 00002d30     0580          MOVE    a0,@SPEECH_STARTED
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   14

         00002d40 000000d0- 
     561 00002d60                   sleep   80
     562 00002db0     5600          clr     a0
     563 00002dc0     0580          MOVE    a0,@SPEECH_STARTED
         00002dd0 000000d0- 
     564 00002df0                   die
     565                    
     566 00002e20           NORMAL_WINNERS
     567 00002e20     01fe          .WORD   1FEH
     568 00002e30     0300          .WORD   L_SIGN_YOUR_NAME
     569 00002e40     01bb          .WORD   SIGN_HERE_PLEASE
     570                    
     571 00002e50           SPECIAL_CONGRATS
     572 00002e50     00f2          .WORD   CONGRATULATIONS
     573 00002e60     02ff          .WORD   L_CONGRATS
     574 00002e70     00f2          .WORD   CONGRATULATIONS
     575                    
     576                    
     577                    
     578 00002e80            SUBRP  call_wrestler_name
     579 00002e80                   SLEEPK  20              ;wait 1/3 sec before doing anything.
     580                    
     581 00002ec0           dgimwait        SLEEPK  1
     582 00002f00     05a0          MOVE    @SPEECH_STARTED,A0
         00002f10 000000d0- 
     583 00002f30     cbf8          JRNZ    dgimwait
     584 00002f40     07a1          MOVE    @NEXT_ANN_QUEUE,A1,L
         00002f50 00000000! 
     585 00002f70     07a2          MOVE    @CURRENT_ANN_QUEUE,A2,L
         00002f80 00000000! 
     586 00002fa0     4822          CMP     A1,A2
     587 00002fb0     cb16          JRNE    NO_SPEECH_COS_HOWRD_TALKIN
     588 00002fc0     1820          MOVK    1,A0
     589 00002fd0     0580          MOVE    A0,@SPEECH_STARTED
         00002fe0 000000d0- 
     590 00003000     8509          MOVE    *A8,A9
     591 00003010     24a9          SLL     5,A9
     592 00003020     0b29          ADDI    WHICH_SPEECH,A9
         00003030 00003150' 
     593 00003050     8520          MOVE    *A9,A0
     594 00003060     0d5f          CALLA   ADD_VOICE
         00003070 00000000! 
     595 00003090     b500          MOVE    *A8(010H),A0
         000030a0     0010  
     596 000030b0     0d5f          CALLA   PRCSLP
         000030c0 00000000! 
     597 000030e0     5600          CLR     A0
     598 000030f0     0580          MOVE    A0,@SPEECH_STARTED
         00003100 000000d0- 
     599 00003120           NO_SPEECH_COS_HOWRD_TALKIN
     600 00003120                   DIE
     601                    
     602 00003150           WHICH_SPEECH
     603 00003150     0131          .WORD   131H,70
     604 00003170     012d          .WORD   12DH,44
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   15

     605 00003190     012f          .WORD   12FH,54
     606 000031b0     0132          .WORD   132H,59
     607 000031d0     012c          .WORD   12CH,55
     608 000031f0     012e          .WORD   12EH,76
     609 00003210     012b          .WORD   12BH,54
     610 00003230     0000          .WORD   0,0
     611 00003250     0130          .WORD   130H,47
     612                    
     613 00003270            SUBR   buyin_select
     614                    
     615                    
     616                    
     617                    
     618                    
     619 00003270     09ce          movi    INWAITCONT,a14          ;set GAMSTATE
         00003280     0005  
     620 00003290     058e          move    a14,@GAMSTATE
         000032a0 00000000! 
     621                    
     622 000032c0            SUBR   select_screen
     623                    
     624                            ;clear royal_rumble at the start of every select screen
     625 000032c0     57ce          clr     a14
     626 000032d0     058e          move    a14,@royal_rumble
         000032e0 00000000! 
     627                    
     628 00003300     0d5f          calla   display_blank
         00003310 00000000! 
     629 00003330     5600          clr     a0
     630 00003340     0580          MOVE    A0,@SPEECH_STARTED
         00003350 000000d0- 
     631                    
     632 00003370     0d5f          calla   WIPEOUT                 ;kill any attract modes or old
         00003380 00000000! 
     633                                                            ;battles lying around.
     634 000033a0     09ce          movi    INSELECT,a14            ;set GAMSTATE
         000033b0     0002  
     635 000033c0     058e          move    a14,@GAMSTATE
         000033d0 00000000! 
     636 000033f0     09ce          movi    SELECT_PID,a14          ;set our PID
         00003400     0300  
     637 00003410     b1cd          move    a14,*a13(PROCID)
         00003420     0020  
     638                    
     639                     .if DEBUG
     640                    
     641                            move    @skip_select,a0
     642                            jrz     dgimnoskp
     643                    
     644                    
     645                            calla   display_unblank
     646                            movi    4,a0
     647                            move    a0,@index1
     648                            movi    8,a0
     649                            move    a0,@index2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   16

     650                    
     651                    
     652                            move    @skip_select,a0
     653                            jrp     dgimskp
     654                    
     655                            .ref    NUM_OPPS
     656                            movk    1,a0
     657                            move    a0,@NUM_OPPS
     658                    
     659                    dgimskp
     660                    
     661                            clr     a0
     662                            calla   get_but_val_cur
     663                            btst    PLAYER_BLOCK_BIT,a0
     664                            jrz     dgimno_block1
     665                            movk    1,a14
     666                            move    a14,@stay_down
     667                            andni   PLAYER_BLOCK_VAL,a0
     668                    dgimno_block1
     669                            X16     a0
     670                            addi    dgimselect_table,a0
     671                            move    *a0,a14
     672                            move    a14,@index1
     673                    
     674                            movi    1,a0
     675                            calla   get_but_val_cur
     676                            btst    PLAYER_BLOCK_BIT,a0
     677                            jrz     dgimno_block2
     678                            movk    1,a14
     679                            move    a14,@stay_down
     680                            andni   PLAYER_BLOCK_VAL,a0
     681                    dgimno_block2
     682                            X16     a0
     683                            addi    dgimselect_table,a0
     684                            move    *a0,a14
     685                            move    a14,@index2
     686                            RETP
     687                    
     688                            ;lookup table
     689                    dgimdf  equ     8       ;LEX
     690                    dgimselect_table
     691                            .word   dgimdf
     692                            .word   3               ;1      punch           - YOKO
     693                            .word   dgimdf,dgimdf
     694                            .word   0               ;4      spunch          - BRET
     695                            .word   8               ;5      punch + spunch  - LEX
     696                            .word   dgimdf,dgimdf
     697                            .word   1               ;8      kick            - RAZOR
     698                            .word   6               ;9      punch + kick    - DOINK
     699                            .word   dgimdf,dgimdf,dgimdf
     700                            .word   dgimdf,dgimdf,dgimdf
     701                            .word   4               ;16     skick           - SHAWN
     702                            .word   dgimdf,dgimdf,dgimdf
     703                            .word   5               ;20     spunch + skick  - BAM BAM
     704                            .word   dgimdf,dgimdf,dgimdf
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   17

     705                            .word   2               ;24     kick + skick    - TAKER
     706                            .word   dgimdf,dgimdf,dgimdf
     707                            .word   dgimdf,dgimdf,dgimdf,dgimdf
     708                    
     709                            BSSX    skip_select,    16
     710                    
     711                    dgimnoskp
     712                     .endif
     713                    
     714 00003430     18ab          MOVK    5,A11
     715 00003440     09c8          MOVI    32,A8
         00003450     0020  
     716 00003460                   CREATE  FADE_PID,FADE_MASTER_VOL
     717                    
     718 000034e0     5600          clr     a0
     719 000034f0     0580          move    a0,@blow_out
         00003500 000000c0- 
     720                    
     721 00003520     1820          movk    1,a0                    ;page flipping on
     722 00003530     0580          move    a0,@dpageflip
         00003540 00000000! 
     723                    
     724 00003560     09e0          movi    dgimplyrsel_mod,a0
         00003570 00003f30' 
     725 00003590     0780          move    a0,@BAKMODS,L
         000035a0 00000000! 
     726 000035c0     0d5f          calla   BGND_UD1                ;create objects for background
         000035d0 00000000! 
     727                    
     728                            ;play wrestlemania tune
     729                            .if MUSIC_ON
     730 000035f0     05a0          MOVE    @match_cnt,A0
         00003600 00000000! 
     731 00003620     cb07          JRNZ    NO_NEW_TUNE
     732 00003630                   CREATE0 wmania_tune
     733 000036a0           NO_NEW_TUNE
     734                            .endif
     735                    
     736 000036a0                   CREATE  CROUTON_PID,display_croutons
     737 00003720     0d5f          calla   start_credbox
         00003730 00000000! 
     738                    
     739 00003750     05ae          move    @PSTATUS2,a14
         00003760 00000000! 
     740 00003780     058e          move    a14,@active_flag
         00003790 00000090- 
     741                    
     742 000037b0     57ce          clr     a14
     743 000037c0     058e          move    a14,@time_out
         000037d0 00000080- 
     744                    
     745                            ;create the player cursors
     746 000037f0     574a          clr     a10
     747 00003800     05ae          move    @rr_loss,a14
         00003810 00000220- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   18

     748 00003830     ca03          jrz     dgimnot_rr
     749 00003840     058a          move    a10,@cursor_procs
         00003850 00000210- 
     750 00003870           dgimnot_rr
     751 00003870                   CREATE  PCURSOR_PID,player_cursor
     752                    
     753 000038f0     0780          move    a0,@kp_p1cursor,L
         00003900 000000a0- 
     754 00003920                   CREATE0 blink_rndper
     755                    
     756 00003990     182a          movk    1,a10
     757 000039a0                   CREATE  PCURSOR_PID,player_cursor
     758                    
     759                            ;wait for them to finish up
     760                    
     761 00003a20                   SLEEPK  1
     762                    
     763 00003a60     1820          movk    1,a0
     764 00003a70     0580          move    a0,@DISPLAYON
         00003a80 00000000! 
     765 00003aa0     0d5f          calla   display_unblank
         00003ab0 00000000! 
     766                    
     767 00003ad0           waitloop
     768 00003ad0                   SLEEPK  1
     769 00003b10     05ae          move    @are_we_waiting_f,a14
         00003b20 00000100- 
     770 00003b40     c604          jrle    no_we_are_not
     771 00003b50     142e          dec     a14
     772 00003b60     058e          move    a14,@are_we_waiting_f
         00003b70 00000100- 
     773 00003b90           no_we_are_not
     774                    
     775 00003b90     05ae          move    @active_flag,a14
         00003ba0 00000090- 
     776 00003bc0     cbf0          jrnz    waitloop
     777                    
     778 00003bd0     05ae          move    @OLD_PSTATUS2,a14
         00003be0 00000000! 
     779 00003c00     cbec          jrnz    waitloop
     780                    
     781                    
     782 00003c10     09c8          movi    30,a8
         00003c20     001e  
     783 00003c30           dgimfinal_waitloop
     784                    
     785 00003c30                   SLEEPK  1
     786                    
     787 00003c70     05ae          move    @active_flag,a14        ;don't quit if someone jumps in here
         00003c80 00000090- 
     788 00003ca0     cbe2          jrnz    waitloop
     789                    
     790 00003cb0     05a0          move    @blow_out,a0
         00003cc0 000000c0- 
     791 00003ce0     cb01          jrnz    dgimout
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   19

     792                    
     793 00003cf0     3da8          dsj     a8,dgimfinal_waitloop
     794                    
     795 00003d00           dgimout
     796 00003d00                   RETP
     797                    
     798                    
     799 00003d30            SUBRP  display_croutons
     800                    
     801                    
     802                    
     803 00003d30     05a0          move    @PSTATUS2,a0
         00003d40 00000000! 
     804                    
     805 00003d60     09e9          movi    crouton_pos_table,a9
         00003d70 000040d0' 
     806 00003d90     09ea          movi    dgimcrouton_pic_table,a10
         00003da0 00003fd0' 
     807 00003dc0     9520          move    *a9+,a0
     808 00003dd0           dgimcrouton_loop
     809 00003dd0     9521          move    *a9+,a1
     810                    
     811 00003de0     2600          sll     16,a0
     812 00003df0     2601          sll     16,a1
     813 00003e00     9742          move    *a10+,a2,L
     814 00003e10     09e3          movi    dgimcrutpic_z,a3
         00003e20 00000004  
     815 00003e40     09e4          movi    DMAWNZ,a4
         00003e50 00008002  
     816 00003e70     09c5          movi    CLSNEUT,a5
         00003e80     0000  
     817 00003e90     56c6          clr     a6
     818 00003ea0     56e7          clr     a7
     819                    
     820 00003eb0     0d5f          calla   BEGINOBJW
         00003ec0 00000000! 
     821                    
     822 00003ee0     9520          move    *a9+,a0
     823 00003ef0     cbed          jrnz    dgimcrouton_loop
     824                    
     825                    
     826 00003f00                   DIE
     827                    
     828                    
     829 00003f30           dgimplyrsel_mod
     830 00003f30 00000000!         .long   wwfselbkBMOD
     831 00003f50     ffd8          .word   -40,0
     832 00003f70 00000000!         .long   choiceBMOD
     833 00003f90     0003          .word   3,256
     834 00003fb0 00000000          .long   0
     835                    
     836              0001  dgimcrutplt_z   equ     1
     837              0002  hiplate_z       equ     2       ;oscillates from 2 to 3
     838              0004  dgimcrutpic_z   equ     4
     839              0005  hilite_z        equ     5
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   20

     840                    
     841              0001  dgimbaseshad_z  equ     1
     842              0002  dgimhishad_z    equ     2
     843              0003  dgimattplt_z    equ     3
     844              0003  dgimsidebar_z   equ     3
     845              0005  dgimnameshad_z  equ     5
     846              0007  dgimnamebar_z   equ     7
     847              0008  atttxt_z        equ     8
     848                    
     849              0009  name_z          equ     9
     850                    
     851              0001  mugshot_z       equ     1
     852                    
     853 00003fd0           dgimcrouton_pic_table
     854 00003fd0 00000000!         .long   CRUT_DK
     855 00003ff0 00000000!         .long   CRUT_RR
     856 00004010 00000000!         .long   CRUT_UN
     857 00004030 00000000!         .long   CRUT_YK
     858 00004050 00000000!         .long   CRUT_SM
     859 00004070 00000000!         .long   CRUT_BM
     860 00004090 00000000!         .long   CRUT_BH
     861 000040b0 00000000!         .long   CRUT_LX
     862                    
     863 000040d0           crouton_pos_table
     864 000040d0     00a4          .word   164,45
     865 000040f0     00cc          .word   204,45
     866                    
     867 00004110     00a4          .word   164,90
     868 00004130     00cc          .word   204,90
     869                    
     870 00004150     00a4          .word   164,135
     871 00004170     00cc          .word   204,135
     872                    
     873 00004190     00a4          .word   164,180
     874 000041b0     00cc          .word   204,180
     875                    
     876 000041d0     0000          .word   0
     877                    
     878                    
     879                    
     880 000041e0                   STRUCTPD
     881 000041e0                   LONG            xpmhHILITE                      ;UHL *hilite ring
     882                    
     883 000041e0                   LONG            xpmhHIPLATE             ;UHL *color crouton
     884                    
     885 000041e0                   LONG            xpmhNAME                        ;UHL *name obj (message *obj)
     886 000041e0                   WORD            xpmhRND_DEST            ;UHW target if in random mode
     887                    
     888 000041e0                   LONG            xpmhMUG1
     889 000041e0                   LONG            xpmhMUG2
     890 000041e0                   LONG            xpmhMUG3
     891 000041e0                   LONG            xpmhMUG4
     892 000041e0                   LONG            xpmhMUG5
     893 000041e0                   LONG            xpmhMUG6
     894 000041e0                   LONG            xpmhMUG7
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   21

     895 000041e0                   LONG            xpmhMUG8
     896                    
     897 000041e0                   LONG            xpmhATT1
     898 000041e0                   LONG            xpmhATT2
     899 000041e0                   LONG            xpmhATT3
     900 000041e0                   LONG            xpmhATT4
     901 000041e0                   WORD            xpmhCNTR                        ;Flashing cursor delay
     902                    
     903                    
     904              0000  xpmhPI_HILITE   equ     0               ;UHL hilite box TBL_ hdr
     905              0020  xpmhPI_HIPLATE  equ     20h             ;UHL hilite plate TBL_ hdr
     906              0040  xpmhPI_STARTPOS equ     40h             ;UHW starting pos (index)
     907              0050  xpmhPI_MUGPOS   equ     50h             ;UHL mugshot [y,x]
     908              0050  xpmhPI_MUGXPOS  equ     50h             ;UHW mugshot x
     909              0060  xpmhPI_MUGYPOS  equ     60h             ;UHW mugshot y
     910              0070  xpmhPI_MUGCTRL  equ     70h             ;UHW mugshot OCTRL
     911              0080  xpmhPI_STARTNAME        equ     80h             ;UHL starting name TBL_ hdr
     912              00a0  xpmhPI_ATTTXT   equ     0A0h            ;UHL atttribute text TBL_ hdr
     913              00c0  xpmhPI_INDEX    equ     0C0h            ;UHL write selection word here
     914              00e0  xpmhPI_MOVESOUND        equ     0E0h            ;UHW cursor move triple_sound
     915              00f0  xpmhPI_SELSOUND equ     0F0h            ;UHW select sound
     916                    
     917              0005  xpmhrnd_movespeed       equ     5               ;ticks between rndsel moves
     918                    
     919              000e  xpmhrnd_wander  equ     14              ;rnd moves before home-in begins
     920                    
     921 000041e0            SUBRP  player_cursor
     922                    
     923                            ;reg use
     924                            ;  a6 = ticks until another move is allowed (debounce)
     925                            ;  a6 = ticks until next move (random mode)
     926                            ;  a7 = moves until home-in (random mode)
     927                            ;  a9 = player info struct pointer
     928                            ; a10 = player number
     929                            ; a11 = position index (0-9)
     930                    
     931                            ;aim a9 at xpmhp?info
     932 000041e0     4d49          move    a10,a9
     933 000041f0                   X32     a9
     934 00004200     0b29          addi    xpmhinfo,a9
         00004210 0000ae70' 
     935 00004230     8729          move    *a9,a9,L
     936                    
     937                            ;initialize the index word to -1
     938 00004240     09ce          movi    -1,a14
         00004250     ffff  
     939 00004260     b720          move    *a9(xpmhPI_INDEX),a0,L
         00004270     00c0  
     940 00004280     81c0          move    a14,*a0,W
     941                    
     942                            ;initialize random dest to -1
     943 00004290     09ce          movi    -1,a14
         000042a0     ffff  
     944 000042b0     b1cd          move    a14,*a13(xpmhRND_DEST)
         000042c0     0160  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   22

     945                    
     946 000042d0     5600          clr     a0
     947 000042e0     b20d          move    a0,*a13(xpmhNAME),L
         000042f0     0140  
     948 00004300     1bc0          movk    30,a0
     949 00004310     b00d          move    a0,*a13(xpmhCNTR)
         00004320     02f0  
     950                            ;active?
     951 00004330     05ae          move    @PSTATUS2,a14
         00004340 00000000! 
     952 00004360     4b4e          btst    a10,a14
     953 00004370     cb00          jrnz    xpmhbegin_select
         00004380     0331  
     954                    
     955 00004390     05ae          move    @OLD_PSTATUS2,a14
         000043a0 00000000! 
     956 000043c0     4b4e          btst    a10,a14
     957 000043d0     ca00          jrz     xpmhnorm
         000043e0     016a  
     958                    
     959 000043f0     4d48          move    a10,a8
     960 00004400     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00004410     03f0  
     961 00004420                   JSRP    winstreak_check
     962 00004490     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         000044a0     0fc0  
     963                    
     964                            ;wait for the enter initials stuff to end
     965 000044b0           are_we_waiting
     966 000044b0     4d40          move    a10,a0
     967 000044c0     0b00          addi    HI_INPUT_PID,a0
         000044d0     0137  
     968 000044e0     09c1          movi    -1,a1
         000044f0     ffff  
     969 00004500     0d5f          calla   EXISTP
         00004510 00000000! 
     970 00004530     ca1d          JRZ     FINISHED_INPUTTING
     971 00004540                   SLEEPK  1
     972 00004580     09c0          movi    CYCPID,a0
         00004590     0110  
     973 000045a0     09c1          movi    -1,a1
         000045b0     ffff  
     974 000045c0     0d5f          calla   EXISTP
         000045d0 00000000! 
     975 000045f0     cbeb          jrnz    are_we_waiting
     976                    
     977 00004600     4d40          move    a10,a0
     978 00004610     0b00          addi    HI_INPUT_PID,a0
         00004620     0137  
     979 00004630     09c1          movi    -1,a1
         00004640     ffff  
     980 00004650     0d5f          calla   EXISTP
         00004660 00000000! 
     981 00004680     ca08          JRZ     FINISHED_INPUTTING
     982 00004690     098f          mmtm    sp,a10,a9,a8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   23

         000046a0     00e0  
     983 000046b0     0d5f          calla   do_that_cycle
         000046c0 00000000! 
     984 000046e0     09af          mmfm    sp,a10,a9,a8
         000046f0     0700  
     985 00004700     c0da          jruc    are_we_waiting
     986                    
     987 00004710           FINISHED_INPUTTING
     988 00004710     05ae          move    @auto_init,a14
         00004720 00000000! 
     989 00004740     ca0a          jrz     xpmhno_ai
     990 00004750     09e2          movi    auto_str,a2
         00004760 0000f740' 
     991 00004780     0d5f          calla   print_message
         00004790 00000000! 
     992 000047b0     57ce          clr     a14
     993 000047c0     058e          move    a14,@auto_init
         000047d0 00000000! 
     994 000047f0           xpmhno_ai
     995                    
     996 000047f0     0d5f          calla   show_bonus_icons
         00004800 00000000! 
     997                    
     998                            ;create the name text
     999 00004820     b720          move    *a9(xpmhPI_STARTNAME),a0,L
         00004830     0080  
    1000 00004840     0d5f          calla   BEGINOBJ_TBL
         00004850 00000000! 
    1001 00004870     b30d          move    a8,*a13(xpmhNAME),L
         00004880     0140  
    1002                    
    1003                    
    1004                    
    1005 00004890                   CREATE0 buyin_counter
    1006 00004900     0d3f          callr   buyin_text
         00004910     0862  
    1007                    
    1008                    
    1009 00004920           xpmhenough_money1
    1010 00004920     0d5f          calla   CR_CONTP
         00004930 00000000! 
    1011 00004950     c909          jrhs    xpmhenough_money2
    1012 00004960     b7a8          move    *a13(xpmhNAME),a8,L
         00004970     0140  
    1013 00004980     09e0          movi    WF_INSERT,a0
         00004990 00000000! 
    1014 000049b0     0d5f          calla   civanic
         000049c0 00000000! 
    1015 000049e0     c008          jruc    xpmhstart_waitloop1
    1016 000049f0           xpmhenough_money2
    1017 000049f0     b7a8          move    *a13(xpmhNAME),a8,L
         00004a00     0140  
    1018 00004a10     09e0          movi    WF_START,a0
         00004a20 00000000! 
    1019 00004a40     0d5f          calla   civanic
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   24

         00004a50 00000000! 
    1020                    
    1021 00004a70           xpmhstart_waitloop1
    1022 00004a70     05ae          move    @OLD_PSTATUS2,a14
         00004a80 00000000! 
    1023 00004aa0     4b4e          btst    a10,a14
    1024 00004ab0     cb00          jrnz    xpmhokz
         00004ac0     00dd  
    1025                    
    1026 00004ad0     05ae          move    @PSTATUS2,a14
         00004ae0 00000000! 
    1027 00004b00     4b4e          btst    a10,a14
    1028 00004b10     cb00          jrnz    xpmhokz
         00004b20     00d7  
    1029 00004b30     4d48          move    a10,a8
    1030 00004b40     0d5f          calla   clear_icon_total
         00004b50 00000000! 
    1031 00004b70     0d5f          calla   del_bonus_icons
         00004b80 00000000! 
    1032 00004ba0     05a0          move    @PSTATUS2,a0
         00004bb0 00000000! 
    1033 00004bd0     cb00          jrnz    xpmhstill
         00004be0     00ba  
    1034 00004bf0     05a0          move    @rr_loss,a0
         00004c00 00000220- 
    1035 00004c20     ca1c          jrz     do_game_over
    1036 00004c30     05a0          move    @cursor_procs,a0
         00004c40 00000210- 
    1037 00004c60     ca18          jrz     do_game_over
    1038 00004c70     4d40          move    a10,a0
    1039 00004c80     1020          addk    1,a0
    1040 00004c90     05ae          move    @active_flag,a14
         00004ca0 00000090- 
    1041 00004cc0     540e          or      a0,a14
    1042 00004cd0     058e          move    a14,@active_flag
         00004ce0 00000090- 
    1043 00004d00     c000          jruc    xpmhstill
         00004d10     00a7  
    1044                    
    1045 00004d20            SUBR   THIS_GAME_IS_BEATEN
    1046 00004d20     5600          CLR     A0
    1047 00004d30     0580          MOVE    A0,@PSTATUS
         00004d40 00000000! 
    1048                    
    1049 00004d60     09ce          movi    INGAMEOVER,a14          ;set GAMSTATE
         00004d70     0007  
    1050 00004d80     058e          move    a14,@GAMSTATE
         00004d90 00000000! 
    1051 00004db0     09ce          movi    GAMEOVER_PID,a14        ;set our PID
         00004dc0     0800  
    1052 00004dd0     b1cd          move    a14,*a13(PROCID)
         00004de0     0020  
    1053                    
    1054                    
    1055 00004df0            SUBR   do_game_over
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   25

    1056                    
    1057                            ;kill the ladder
    1058 00004df0     0d5f          calla   INIT_LADDER_TABLE
         00004e00 00000000! 
    1059                    
    1060 00004e20     57ce          clr     a14
    1061 00004e30     058e          move    a14,@rr_loss
         00004e40 00000220- 
    1062 00004e60     058e          move    a14,@PSTATUS
         00004e70 00000000! 
    1063                    
    1064 00004e90     09ce          movi    INGAMEOVER,a14          ;set GAMSTATE
         00004ea0     0007  
    1065 00004eb0     058e          move    a14,@GAMSTATE
         00004ec0 00000000! 
    1066                    
    1067 00004ee0     09ce          movi    GAMEOVER_PID,a14        ;set our PID
         00004ef0     0800  
    1068 00004f00     b1cd          move    a14,*a13(PROCID)
         00004f10     0020  
    1069                    
    1070 00004f20     0d5f          calla   display_blank
         00004f30 00000000! 
    1071 00004f50     0d5f          calla   WIPEOUT
         00004f60 00000000! 
    1072                    
    1073                            .ref    wsf14_ascii,GENERIC_DISPLAY
    1074                    
    1075 00004f80                   JSRP    GENERIC_DISPLAY
    1076                    
    1077 00004ff0     09e2          movi    LN1b_setup,a2
         00005000 00005600' 
    1078 00005020     0d5f          calla   setup_message
         00005030 00000000! 
    1079 00005050     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00005060     0702  
    1080 00005070     0580          move    a0,@mess_objid          ;OBJ ID's for text
         00005080 00000000! 
    1081 000050a0     09e4          movi    xpmhstr_game,a4
         000050b0 00005740' 
    1082 000050d0     0d5f          calla   print_string_C2
         000050e0 00000000! 
    1083                    
    1084 00005100     09e2          movi    LN2b_setup,a2
         00005110 000056a0' 
    1085 00005130     0d5f          calla   setup_message
         00005140 00000000! 
    1086 00005160     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00005170     0702  
    1087 00005180     0580          move    a0,@mess_objid          ;OBJ ID's for text
         00005190 00000000! 
    1088 000051b0     09e4          movi    xpmhstr_over,a4
         000051c0 00005768' 
    1089 000051e0     0d5f          calla   print_string_C2
         000051f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   26

    1090                    
    1091                    
    1092                    
    1093 00005210                   SLEEPK  1
    1094                    
    1095 00005250     09cb          MOVI    -1,A11
         00005260     ffff  
    1096 00005270     09c8          MOVI    100,A8
         00005280     0064  
    1097 00005290                   CREATE  FADE_PID,FADE_MASTER_VOL
    1098                    
    1099 00005310     0d5f          calla   display_unblank
         00005320 00000000! 
    1100 00005340                   SLEEP   TSEC*4
    1101 00005390     0d5f          calla   UNIT_CLR                ;CLEAR THE FACTIONS OF FRACTIONS
         000053a0 00000000! 
    1102                    
    1103 000053c0     09c0          movi    AMODE_PID,a0
         000053d0     0100  
    1104 000053e0     b00d          move    a0,*a13(PROCID)
         000053f0     0020  
    1105                    
    1106 00005400     5663          CLR     A3
    1107 00005410     0d5f          CALLA   SNDSND
         00005420 00000000! 
    1108                    
    1109 00005440     09c0          movi    ADJVOLUME,a0
         00005450     001c  
    1110 00005460     0d5f          calla   GET_ADJ
         00005470 00000000! 
    1111 00005490                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    1112 00005520     0d5f          calla   set_volume
         00005530 00000000! 
    1113                    
    1114 00005550     5708          clr     a8
    1115 00005560     0d5f          calla   clear_icon_total
         00005570 00000000! 
    1116 00005590     1828          movk    1,a8
    1117 000055a0     0d5f          calla   clear_icon_total
         000055b0 00000000! 
    1118                    
    1119 000055d0     c080          jauc    attract_mode
         000055e0 00000000! 
    1120                    
    1121 00005600           LN1b_setup
    1122 00005600                   JAM_STR wgsf24_ascii,6,0,200,128-41,WGSF_Y_P,0
    1123 000056a0           LN2b_setup
    1124 000056a0                   JAM_STR wgsf24_ascii,6,0,200,128,WGSF_Y_P,0
    1125 00005740           xpmhstr_game
    1126 00005740       47          .byte   "GAME",0
    1127 00005768           xpmhstr_over
    1128 00005768       4f          .byte   "OVER",0
    1129 00005790                   .even
    1130                    
    1131                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   27

    1132 00005790           xpmhstill
    1133 00005790     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000057a0     0704  
    1134 000057b0     4140          add     a10,a0
    1135 000057c0     0d5f          calla   obj_del1c
         000057d0 00000000! 
    1136 000057f0     05ae          move    @active_flag,a14        ;don't quit if someone jumps in here
         00005800 00000090- 
    1137 00005820     cb26          jrnz    xpmhnorm
    1138 00005830     1820          movk    1,a0
    1139 00005840     0580          move    a0,@blow_out
         00005850 000000c0- 
    1140                    
    1141 00005870                   DIE
    1142                    
    1143 000058a0           xpmhokz
    1144 000058a0                   SLEEPK  1
    1145                    
    1146 000058e0     0d3f          callr   xpmhblink
         000058f0     02a8  
    1147                    
    1148 00005900     05ae          move    @PSTATUS2,a14
         00005910 00000000! 
    1149 00005930     4b4e          btst    a10,a14
    1150 00005940     ca00          jrz     xpmhenough_money1
         00005950     fefc  
    1151                    
    1152                    
    1153 00005960     b500          move    *a8(OXPOS),a0
         00005970     0090  
    1154 00005980     0b80          andi    1ffh,a0
         00005990 fffffe00  
    1155 000059b0     b008          move    a0,*a8(OXPOS)
         000059c0     0090  
    1156                    
    1157 000059d0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000059e0     0704  
    1158 000059f0     4140          add     a10,a0
    1159 00005a00     0d5f          calla   obj_del1c
         00005a10 00000000! 
    1160                    
    1161 00005a30                   SLEEPK  1                       ;Fix pal glitch!
    1162                    
    1163 00005a70     c000          jruc    xpmhbegin_select
         00005a80     01c1  
    1164                    
    1165 00005a90           xpmhnorm
    1166                    
    1167 00005a90     b7a8          move    *a13(xpmhNAME),a8,L
         00005aa0     0140  
    1168 00005ab0     cb07          jrnz    no_need_to_create_name
    1169                    
    1170                            ;create the name text
    1171 00005ac0     b720          move    *a9(xpmhPI_STARTNAME),a0,L
         00005ad0     0080  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   28

    1172 00005ae0     0d5f          calla   BEGINOBJ_TBL
         00005af0 00000000! 
    1173 00005b10     b30d          move    a8,*a13(xpmhNAME),L
         00005b20     0140  
    1174 00005b30           no_need_to_create_name
    1175                    
    1176                    
    1177 00005b30     1a60          movk    ADJFREPL,a0             ;Are we in free play?
    1178 00005b40     0d5f          calla   GET_ADJ
         00005b50 00000000! 
    1179 00005b70     ca39          jrz     xpmhnot_freeply
    1180                    
    1181 00005b80     09e2          movi    xpmhln0_setup,a2
         00005b90 00006c10' 
    1182 00005bb0     4d4a          move    a10,a10
    1183 00005bc0     ca03          jrz     xpmhok2c
    1184 00005bd0     09e2          movi    xpmhln0_setupb,a2
         00005be0 00006cb0' 
    1185 00005c00     0d5f  xpmhok2c        calla   setup_message
         00005c10 00000000! 
    1186                    
    1187 00005c30     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00005c40     0704  
    1188 00005c50     4140          add     a10,a0
    1189 00005c60     0580          move    a0,@mess_objid
         00005c70 00000000! 
    1190                    
    1191 00005c90     09e4          movi    xpmhstr_text0,a4
         00005ca0 00007528' 
    1192 00005cc0     0d5f          calla   print_string_C2
         00005cd0 00000000! 
    1193                    
    1194                    
    1195                    
    1196 00005cf0     09e2          movi    xpmhln1_setup,a2
         00005d00 00006d50' 
    1197 00005d20     4d4a          move    a10,a10
    1198 00005d30     ca03          jrz     xpmhok
    1199 00005d40     09e2          movi    xpmhln1_setupb,a2
         00005d50 00006df0' 
    1200 00005d70     0d5f  xpmhok  calla   setup_message
         00005d80 00000000! 
    1201                    
    1202 00005da0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00005db0     0704  
    1203 00005dc0     4140          add     a10,a0
    1204 00005dd0     0580          move    a0,@mess_objid
         00005de0 00000000! 
    1205                    
    1206 00005e00     09e4          movi    xpmhstr_text,a4
         00005e10 000074d0' 
    1207 00005e30     0d5f          calla   print_string_C2
         00005e40 00000000! 
    1208                    
    1209 00005e60     09e2          movi    xpmhln2_setup,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   29

         00005e70 00006e90' 
    1210 00005e90     4d4a          move    a10,a10
    1211 00005ea0     ca00          jrz     xpmhok4
         00005eb0     0093  
    1212 00005ec0     09e2          movi    xpmhln2_setupb,a2
         00005ed0 00006f30' 
    1213 00005ef0     c000          jruc    xpmhok4
         00005f00     008e  
    1214                    
    1215 00005f10           xpmhnot_freeply
    1216 00005f10                   PUSH    a8
    1217 00005f20     1980          movk    ADJCSTRT,a0
    1218 00005f30     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         00005f40 00000000! 
    1219 00005f60     4c03          move    a0,a3
    1220 00005f70     0b40          cmpi    10,a0
         00005f80     fff5  
    1221 00005f90     c401          jrlt    xpmhmax
    1222 00005fa0     1920          movk    9,a0
    1223 00005fb0           xpmhmax
    1224 00005fb0     24a0          sll     5,a0
    1225 00005fc0     0b20          addi    digits_tbl,a0
         00005fd0 0000c870' 
    1226 00005ff0     8602          move    *a0,a2,L                ;* image
    1227                    
    1228 00006000     09e0          movi    [050,0],a0                      ;x pos
         00006010 00320000  
    1229 00006030     0b43          cmpi    1,a3
         00006040     fffe  
    1230 00006050     cb03          jrnz    xpmhnot1
    1231 00006060     09e0          movi    [054,0],a0                      ;x pos
         00006070 00360000  
    1232 00006090     4d4a  xpmhnot1        move    a10,a10
    1233 000060a0     ca09          jrz     xpmhzp1
    1234 000060b0     09e0          movi    [0122h,0],a0                    ;x pos
         000060c0 01220000  
    1235 000060e0     0b43          cmpi    1,a3
         000060f0     fffe  
    1236 00006100     cb03          jrnz    xpmhzp1
    1237 00006110     09e0          movi    [0126h,0],a0                    ;x pos
         00006120 01260000  
    1238 00006140           xpmhzp1
    1239 00006140     09e1          movi    [110,0],a1                      ;y pos
         00006150 006e0000  
    1240 00006170     09c3          movi    104+200,a3                      ;z pos
         00006180     0130  
    1241 00006190     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         000061a0 0000a002  
    1242 000061c0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         000061d0     0704  
    1243 000061e0     4145          add     a10,a5                          ;object ID
    1244 000061f0     56c6          clr     a6                              ;x vel
    1245 00006200     56e7          clr     a7                              ;y vel
    1246 00006210     09f0          movi    FNT9YEL_P,b0
         00006220 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   30

    1247 00006240     0d5f          calla   BEGINOBJP
         00006250 00000000! 
    1248 00006270                   PULL    a8
    1249                    
    1250 00006280     09e2          movi    xpmhln3_setup,a2
         00006290 00007250' 
    1251 000062b0     4d4a          move    a10,a10
    1252 000062c0     ca03          jrz     xpmhok2
    1253 000062d0     09e2          movi    xpmhln3_setupb,a2
         000062e0 000072f0' 
    1254 00006300     0d5f  xpmhok2 calla   setup_message
         00006310 00000000! 
    1255                    
    1256 00006330     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006340     0704  
    1257 00006350     4140          add     a10,a0
    1258 00006360     0580          move    a0,@mess_objid
         00006370 00000000! 
    1259                    
    1260 00006390     09e4          movi    xpmhstr_text3,a4
         000063a0 000075b8' 
    1261 000063c0     1980          movk    ADJCSTRT,a0
    1262 000063d0     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         000063e0 00000000! 
    1263 00006400     0b40          cmpi    1,a0
         00006410     fffe  
    1264 00006420     cb03          jrnz    xpmhnot1b
    1265 00006430     09e4          movi    xpmhstr_text3b,a4
         00006440 00007608' 
    1266 00006460           xpmhnot1b
    1267 00006460     0d5f          calla   print_string_C2
         00006470 00000000! 
    1268                    
    1269 00006490     09e2          movi    xpmhln4_setup,a2
         000064a0 00007390' 
    1270 000064c0     4d4a          move    a10,a10
    1271 000064d0     ca03          jrz     xpmhok2B
    1272 000064e0     09e2          movi    xpmhln4_setupb,a2
         000064f0 00007430' 
    1273 00006510     0d5f  xpmhok2B        calla   setup_message
         00006520 00000000! 
    1274                    
    1275 00006540     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006550     0704  
    1276 00006560     4140          add     a10,a0
    1277 00006570     0580          move    a0,@mess_objid
         00006580 00000000! 
    1278                    
    1279 000065a0     09e4          movi    xpmhstr_text4,a4
         000065b0 00007650' 
    1280 000065d0     0d5f          calla   print_string_C2
         000065e0 00000000! 
    1281                    
    1282                    
    1283 00006600     09e2          movi    xpmhln1_setupx,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   31

         00006610 00006fd0' 
    1284 00006630     4d4a          move    a10,a10
    1285 00006640     ca03          jrz     xpmhok3
    1286 00006650     09e2          movi    xpmhln1_setupxb,a2
         00006660 00007070' 
    1287 00006680     0d5f  xpmhok3 calla   setup_message
         00006690 00000000! 
    1288                    
    1289 000066b0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000066c0     0704  
    1290 000066d0     4140          add     a10,a0
    1291 000066e0     0580          move    a0,@mess_objid
         000066f0 00000000! 
    1292                    
    1293 00006710     09e4          movi    xpmhstr_text,a4
         00006720 000074d0' 
    1294 00006740     0d5f          calla   print_string_C2
         00006750 00000000! 
    1295                    
    1296 00006770     09e2          movi    xpmhln2_setupx,a2
         00006780 00007110' 
    1297 000067a0     4d4a          move    a10,a10
    1298 000067b0     ca03          jrz     xpmhok4
    1299 000067c0     09e2          movi    xpmhln2_setupxb,a2
         000067d0 000071b0' 
    1300 000067f0     0d5f  xpmhok4 calla   setup_message
         00006800 00000000! 
    1301                    
    1302 00006820     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006830     0704  
    1303 00006840     4140          add     a10,a0
    1304 00006850     0580          move    a0,@mess_objid
         00006860 00000000! 
    1305                    
    1306 00006880     09e4          movi    xpmhstr_text2,a4
         00006890 00007578' 
    1307 000068b0     0d5f          calla   print_string_C2
         000068c0 00000000! 
    1308                    
    1309                      
    1310 000068e0           xpmhenough_money
    1311 000068e0     0d5f          calla   CR_STRTP
         000068f0 00000000! 
    1312 00006910     c909          jrhs    xpmhenough_money3
    1313 00006920     b7a8          move    *a13(xpmhNAME),a8,L
         00006930     0140  
    1314 00006940     09e0          movi    WF_INSERT,a0
         00006950 00000000! 
    1315 00006970     0d5f          calla   civanic
         00006980 00000000! 
    1316 000069a0     c008          jruc    xpmhstart_waitloop
    1317 000069b0           xpmhenough_money3
    1318 000069b0     b7a8          move    *a13(xpmhNAME),a8,L
         000069c0     0140  
    1319 000069d0     09e0          movi    WF_START,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   32

         000069e0 00000000! 
    1320 00006a00     0d5f          calla   civanic
         00006a10 00000000! 
    1321                    
    1322                    
    1323 00006a30           xpmhstart_waitloop
    1324 00006a30                   SLEEPK  1
    1325                    
    1326 00006a70     0d3f          callr   xpmhblink
         00006a80     018f  
    1327                    
    1328 00006a90     05ae          move    @PSTATUS2,a14
         00006aa0 00000000! 
    1329 00006ac0     4b4e          btst    a10,a14
    1330 00006ad0     cae0          jrz     xpmhenough_money
    1331                    
    1332                    
    1333 00006ae0     b500          move    *a8(OXPOS),a0
         00006af0     0090  
    1334 00006b00     0b80          andi    1ffh,a0
         00006b10 fffffe00  
    1335 00006b30     b008          move    a0,*a8(OXPOS)
         00006b40     0090  
    1336                    
    1337 00006b50     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006b60     0704  
    1338 00006b70     4140          add     a10,a0
    1339 00006b80     0d5f          calla   obj_del1c
         00006b90 00000000! 
    1340                    
    1341 00006bb0                   SLEEPK  1                       ;Fix pal glitch!
    1342                    
    1343 00006bf0     c000          jruc    xpmhbegin_select
         00006c00     00a9  
    1344                    
    1345                    
    1346                    
    1347 00006c10           xpmhln0_setup
    1348 00006c10                   JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    1349 00006cb0           xpmhln0_setupb
    1350 00006cb0                   JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    1351                    
    1352 00006d50           xpmhln1_setup
    1353 00006d50                   JAM_STR font9_ascii,8,0,81,80,FNT9YEL_P,0
    1354 00006df0           xpmhln1_setupb
    1355 00006df0                   JAM_STR font9_ascii,8,0,321,80,FNT9YEL_P,0
    1356                    
    1357 00006e90           xpmhln2_setup
    1358 00006e90                   JAM_STR font9_ascii,8,0,81,95,FNT9YEL_P,0
    1359 00006f30           xpmhln2_setupb
    1360 00006f30                   JAM_STR font9_ascii,8,0,321,95,FNT9YEL_P,0
    1361                    
    1362 00006fd0           xpmhln1_setupx
    1363 00006fd0                   JAM_STR font9_ascii,8,0,81,60,FNT9YEL_P,0
    1364 00007070           xpmhln1_setupxb
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   33

    1365 00007070                   JAM_STR font9_ascii,8,0,321,60,FNT9YEL_P,0
    1366                    
    1367 00007110           xpmhln2_setupx
    1368 00007110                   JAM_STR font9_ascii,8,0,81,75,FNT9YEL_P,0
    1369 000071b0           xpmhln2_setupxb
    1370 000071b0                   JAM_STR font9_ascii,8,0,321,75,FNT9YEL_P,0
    1371                    
    1372                    
    1373 00007250           xpmhln3_setup
    1374 00007250                   JAM_STR font9_ascii,8,0,81,110,FNT9YEL_P,0
    1375 000072f0           xpmhln3_setupb
    1376 000072f0                   JAM_STR font9_ascii,8,0,321,110,FNT9YEL_P,0
    1377                    
    1378 00007390           xpmhln4_setup
    1379 00007390                   JAM_STR font9_ascii,8,0,81,125,FNT9YEL_P,0
    1380 00007430           xpmhln4_setupb
    1381 00007430                   JAM_STR font9_ascii,8,0,321,125,FNT9YEL_P,0
    1382                    
    1383 000074d0           xpmhstr_text
    1384 000074d0       43          .string "CHALLENGER",0
    1385 00007528           xpmhstr_text0
    1386 00007528       46          .string "FREE PLAY",0
    1387 00007578           xpmhstr_text2
    1388 00007578       4e          .string "NEEDED!",0
    1389 000075b8           xpmhstr_text3
    1390 000075b8       20          .string "  CREDITS",0
    1391 00007608           xpmhstr_text3b
    1392 00007608       20          .string "  CREDIT",0
    1393 00007650           xpmhstr_text4
    1394 00007650       54          .string "TO START",0
    1395 000076a0                   .even
    1396                    
    1397 000076a0           xpmhbegin_select
    1398 000076a0     05a0          MOVE    @no_pin_check,A0
         000076b0 00000000! 
    1399 000076d0     cb1f          JRNZ    are_we_waiting2
    1400 000076e0     0d5f          calla   is_final_match
         000076f0 00000000! 
    1401 00007710     c81b          jrc     are_we_waiting2
    1402                    
    1403 00007720     4d48          move    a10,a8
    1404 00007730     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00007740     03f0  
    1405 00007750                   JSRP    pin_speed_check
    1406 000077c0     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         000077d0     0fc0  
    1407                    
    1408 000077e0     4d40          move    a10,a0
    1409 000077f0     0b00          addi    HI_INPUT_PID,a0
         00007800     0137  
    1410 00007810     09c1          movi    -1,a1
         00007820     ffff  
    1411 00007830     0d5f          calla   EXISTP
         00007840 00000000! 
    1412 00007860     ca06          jrz     no_set_it_later
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   34

    1413 00007870     4d40          move    a10,a0
    1414 00007880     1020          inc     a0
    1415 00007890     03a0          neg     a0
    1416 000078a0     0580          move    a0,@are_we_waiting_f
         000078b0 00000100- 
    1417 000078d0           no_set_it_later
    1418                    
    1419                    
    1420 000078d0           are_we_waiting2
    1421 000078d0     4d40          move    a10,a0
    1422 000078e0     0b00          addi    HI_INPUT_PID,a0
         000078f0     0137  
    1423 00007900     09c1          movi    -1,a1
         00007910     ffff  
    1424 00007920     0d5f          calla   EXISTP
         00007930 00000000! 
    1425 00007950     ca1e          JRZ     FINISHED_INPUTTING2b
    1426 00007960                   sleep   1
    1427 000079b0     09c0          movi    CYCPID,a0
         000079c0     0110  
    1428 000079d0     09c1          movi    -1,a1
         000079e0     ffff  
    1429 000079f0     0d5f          calla   EXISTP
         00007a00 00000000! 
    1430 00007a20     cbea          jrnz    are_we_waiting2
    1431 00007a30     4d40          move    a10,a0
    1432 00007a40     0b00          addi    HI_INPUT_PID,a0
         00007a50     0137  
    1433 00007a60     09c1          movi    -1,a1
         00007a70     ffff  
    1434 00007a80     0d5f          calla   EXISTP
         00007a90 00000000! 
    1435 00007ab0     ca08          JRZ     FINISHED_INPUTTING2b
    1436 00007ac0     098f          mmtm    sp,a10,a9,a8
         00007ad0     00e0  
    1437 00007ae0     0d5f          calla   do_that_cycle
         00007af0 00000000! 
    1438 00007b10     09af          mmfm    sp,a10,a9,a8
         00007b20     0700  
    1439 00007b30     c0d9          jruc    are_we_waiting2
    1440                    
    1441 00007b40           FINISHED_INPUTTING2b
    1442 00007b40     05a0          move    @are_we_waiting_f,a0
         00007b50 00000100- 
    1443 00007b70     4d41          move    a10,a1
    1444 00007b80     1021          inc     a1
    1445 00007b90     03a1          neg     a1
    1446 00007ba0     4820          cmp     a1,a0
    1447 00007bb0     cb05          jrne    FINISHED_INPUTTING2
    1448 00007bc0     09c0          movi    60,a0
         00007bd0     003c  
    1449 00007be0     0580          move    a0,@are_we_waiting_f
         00007bf0 00000100- 
    1450                    
    1451 00007c10           FINISHED_INPUTTING2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   35

    1452                    
    1453 00007c10     09c0          MOVI    CLOCK_PID,A0
         00007c20     013a  
    1454 00007c30     09c1          movi    -1,a1
         00007c40     ffff  
    1455 00007c50     0d5f          CALLA   EXISTP
         00007c60 00000000! 
    1456 00007c80     cb12          JRNZ    CLOCK_ALREADY_TICKING
    1457                    
    1458 00007c90                   PUSH    A10
    1459 00007ca0                   CREATE  CLOCK_PID,select_clock
    1460 00007d20     4c0a          move    a0,a10
    1461 00007d30                   CREATE0 clock_digits
    1462 00007da0                   PULL    A10
    1463                    
    1464 00007db0           CLOCK_ALREADY_TICKING
    1465                    
    1466 00007db0     b7a8          move    *a13(xpmhNAME),a8,L
         00007dc0     0140  
    1467 00007dd0     cb07          jrnz    no_need_to_create
    1468                    
    1469                            ;create the name text
    1470 00007de0     b720          move    *a9(xpmhPI_STARTNAME),a0,L
         00007df0     0080  
    1471 00007e00     0d5f          calla   BEGINOBJ_TBL
         00007e10 00000000! 
    1472 00007e30     b30d          move    a8,*a13(xpmhNAME),L
         00007e40     0140  
    1473 00007e50           no_need_to_create
    1474                    
    1475 00007e50     05ae          move    @total_matches,a14
         00007e60 00000000! 
    1476 00007e80     cb18          jrnz    HOWARD_ALREADY_GOING
    1477 00007e90     05ae          move    @DONE_HOWARD,a14
         00007ea0 00000000! 
    1478 00007ec0     cb2a          jrnz    HOWARD_HAS_SPOKEN
    1479                    
    1480 00007ed0           GOOD_EVENING
    1481 00007ed0     09c0          movi    1Fbh,a0
         00007ee0     01fb  
    1482 00007ef0     0d5f          CALLA   ADD_VOICE
         00007f00 00000000! 
    1483 00007f20     09c0          movi    1Fch,a0
         00007f30     01fc  
    1484 00007f40     0d5f          CALLA   ADD_VOICE
         00007f50 00000000! 
    1485 00007f70     09c0          movi    1Fdh,a0
         00007f80     01fd  
    1486 00007f90     0d5f          CALLA   ADD_VOICE
         00007fa0 00000000! 
    1487                    
    1488 00007fc0     1820          movk    1,a0
    1489 00007fd0     0580          move    a0,@DONE_HOWARD
         00007fe0 00000000! 
    1490 00008000     c016          JRUC    HOWARD_HAS_SPOKEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   36

    1491                    
    1492 00008010           HOWARD_ALREADY_GOING
    1493 00008010     05ae          move    @DONE_HOWARD,a14
         00008020 00000000! 
    1494 00008040     cb12          jrnz    HOWARD_HAS_SPOKEN
    1495 00008050     09c0          MOVI    100,A0
         00008060     0064  
    1496 00008070     0d5f          CALLA   RNDPER
         00008080 00000000! 
    1497 000080a0     c20c          jrls    HOWARD_HAS_SPOKEN
    1498                    
    1499 000080b0     0be0          SUBI    50,A0
         000080c0     ffcd  
    1500 000080d0     cedf          JRN     GOOD_EVENING
    1501 000080e0     09c0          movi    1Ffh,a0
         000080f0     01ff  
    1502 00008100     0d5f          CALLA   ADD_VOICE
         00008110 00000000! 
    1503                    
    1504 00008130     1820          movk    1,a0
    1505 00008140     0580          move    a0,@DONE_HOWARD
         00008150 00000000! 
    1506 00008170           HOWARD_HAS_SPOKEN
    1507                    
    1508                            ;set our active bit if it's not already set
    1509 00008170     05ae          move    @active_flag,a14
         00008180 00000090- 
    1510 000081a0     4d40          move    a10,a0
    1511 000081b0     1020          inc     a0
    1512 000081c0     540e          or      a0,a14
    1513 000081d0     058e          move    a14,@active_flag
         000081e0 00000090- 
    1514                    
    1515                            ;initialize index
    1516 00008200     b52b          move    *a9(xpmhPI_STARTPOS),a11
         00008210     0040  
    1517                    
    1518                            ;initialize xpmhMUG?
    1519 00008220     1900          movk    8,a0
    1520 00008230     5621          clr     a1
    1521 00008240     4da2          move    a13,a2
    1522 00008250     0b02          addi    xpmhMUG1,a2
         00008260     0170  
    1523 00008270           xpmhinitloop
    1524 00008270     9222          move    a1,*a2+,L
    1525 00008280     3c40          dsj     a0,xpmhinitloop
    1526                    
    1527                    
    1528                            ;create our cursors
    1529 00008290     b720          move    *a9(xpmhPI_HILITE),a0,L
         000082a0     0000  
    1530 000082b0     0d5f          calla   BEGINOBJ_TBL
         000082c0 00000000! 
    1531 000082e0     b30d          move    a8,*a13(xpmhHILITE),L
         000082f0     0100  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   37

    1532                    
    1533 00008300     b720          move    *a9(xpmhPI_HIPLATE),a0,L
         00008310     0020  
    1534 00008320     0d5f          calla   BEGINOBJ_TBL
         00008330 00000000! 
    1535 00008350     b30d          move    a8,*a13(xpmhHIPLATE),L
         00008360     0120  
    1536                    
    1537 00008370     c01d          jruc    xpmhfirst_adjust
    1538                    
    1539 00008380           xpmhblink
    1540 00008380     b5a0          move    *a13(xpmhCNTR),a0
         00008390     02f0  
    1541 000083a0     1420          dec     a0
    1542 000083b0     b00d          move    a0,*a13(xpmhCNTR)
         000083c0     02f0  
    1543 000083d0     c10a          jrp     xpmhcont
    1544 000083e0     1ac0          movk    22,a0
    1545 000083f0     b00d          move    a0,*a13(xpmhCNTR)
         00008400     02f0  
    1546 00008410     b500          move    *a8(OXPOS),a0
         00008420     0090  
    1547 00008430     0bc0          xori    1000h,a0
         00008440 00001000  
    1548 00008460     b008          move    a0,*a8(OXPOS)
         00008470     0090  
    1549 00008480           xpmhcont
    1550 00008480     0960          rets
    1551                    
    1552                    
    1553                            .if     0
    1554                    
    1555                    
    1556                            PUSH    a8,a9,a10,a11
    1557                    
    1558                            move    a10,a10
    1559                            jrz     xpmhblue
    1560                    
    1561                            movi    [1,1],a8
    1562                            movi    CRHI_R_P,a9
    1563                            movi    redcyc_tbl,a10
    1564                            movk    4,a11
    1565                            CREATE  CYCPID,CYCLE_TABLE
    1566                            jruc    xpmhout
    1567                    
    1568                    xpmhblue
    1569                            movi    [1,1],a8
    1570                            movi    CRHI_B_P,a9
    1571                            movi    blucyc_tbl,a10
    1572                            movk    4,a11
    1573                            CREATE  CYCPID,CYCLE_TABLE
    1574                    
    1575                    xpmhout PULL    a8,a9,a10,a11
    1576                    
    1577                            jruc    xpmhfirst_adjust
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   38

    1578                    
    1579                    
    1580                    blucyc_tbl
    1581                            .word   0041fh
    1582                            .word   0001fh
    1583                            .word   0001fh
    1584                            .word   0001fh
    1585                            .word   0001fh
    1586                            .word   0001fh
    1587                            .word   0001fh
    1588                            .word   0001fh
    1589                            .word   0001fh
    1590                            .word   0001fh
    1591                            .word   0001fh
    1592                            .word   0001fh
    1593                            .word   0001fh
    1594                            .word   0001fh
    1595                            .word   0001fh
    1596                            .word   0001fh
    1597                            .word   0001fh
    1598                            .word   0081fh,00c1fh,0101fh,0141fh,0181fh
    1599                            .word   01c1fh,0201fh,0241fh,0281fh,02c1fh,0301fh,0341fh,0381fh
    1600                            .word   03c1fh,0401fh,0441fh,0481fh,04c1fh,0501fh,0541fh,0581fh
    1601                            .word   05c1fh,0601fh,0641fh,0681fh,06c1fh,0701fh
    1602                            .word   0741fh,0701fh,06c1fh,0681fh,0641fh,0601fh,05c1fh
    1603                            .word   0581fh,0541fh,0501fh,04c1fh,0481fh,0441fh,0401fh,03c1fh
    1604                            .word   0381fh,0341fh,0301fh,02c1fh,0281fh,0241fh,0201fh,01c1fh
    1605                            .word   0181fh,0141fh,0101fh,00c1fh,0081fh,0041fh
    1606                    
    1607                            .word   0041fh
    1608                            .word   0001fh
    1609                            .word   0001fh
    1610                            .word   0001fh
    1611                            .word   0001fh
    1612                            .word   0001fh
    1613                            .word   0001fh
    1614                            .word   0001fh
    1615                            .word   0001fh
    1616                            .word   0001fh
    1617                            .word   0001fh
    1618                            .word   0001fh
    1619                            .word   0001fh
    1620                            .word   0001fh
    1621                            .word   0001fh
    1622                            .word   0001fh
    1623                            .word   0001fh
    1624                            .word   0081fh,00c1fh,0101fh,0141fh,0181fh
    1625                            .word   01c1fh,0201fh,0241fh,0281fh,02c1fh,0301fh,0341fh,0381fh
    1626                            .word   03c1fh,0401fh,0441fh,0481fh,04c1fh,0501fh,0541fh,0581fh
    1627                            .word   05c1fh,0601fh,0641fh,0681fh,06c1fh,0701fh
    1628                            .word   0741fh,0701fh,06c1fh,0681fh,0641fh,0601fh,05c1fh
    1629                            .word   0581fh,0541fh,0501fh,04c1fh,0481fh,0441fh,0401fh,03c1fh
    1630                            .word   0381fh,0341fh,0301fh,02c1fh,0281fh,0241fh,0201fh,01c1fh
    1631                            .word   0181fh,0141fh,0101fh,00c1fh,0081fh,0041fh
    1632                            .word   -1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   39

    1633                    
    1634                    redcyc_tbl
    1635                            .word   07c20h
    1636                            .word   07c00h
    1637                            .word   07c00h
    1638                            .word   07c00h
    1639                            .word   07c00h
    1640                            .word   07c00h
    1641                            .word   07c00h
    1642                            .word   07c00h
    1643                            .word   07c00h
    1644                            .word   07c00h
    1645                            .word   07c00h
    1646                            .word   07c00h
    1647                            .word   07c00h
    1648                            .word   07c00h
    1649                            .word   07c00h
    1650                            .word   07c00h
    1651                            .word   07c00h
    1652                            .word   07c40h,07c60h,07c80h,07ca0h,07cc0h
    1653                            .word   07ce0h,07d00h,07d20h,07d40h,07d60h,07d80h,07da0h,07dc0h
    1654                            .word   07de0h,07e00h,07e20h,07e40h,07e60h,07e80h,07ea0h
    1655                            .word   07ec0h,07ee0h,07f00h,07f20h,07f40h,07f60h,07f80h
    1656                            .word   07fa0h,07f80h,07f60h,07f40h,07f20h,07f00h,07ee0h,07ec0h
    1657                            .word   07ea0h,07e80h,07e60h,07e40h,07e20h,07e00h,07de0h
    1658                            .word   07dc0h,07da0h,07d80h,07d60h,07d40h,07d20h,07d00h,07ce0h
    1659                            .word   07cc0h,07ca0h,07c80h,07c60h,07c40h,07c20h
    1660                    
    1661                            .word   07c20h
    1662                            .word   07c00h
    1663                            .word   07c00h
    1664                            .word   07c00h
    1665                            .word   07c00h
    1666                            .word   07c00h
    1667                            .word   07c00h
    1668                            .word   07c00h
    1669                            .word   07c00h
    1670                            .word   07c00h
    1671                            .word   07c00h
    1672                            .word   07c00h
    1673                            .word   07c00h
    1674                            .word   07c00h
    1675                            .word   07c00h
    1676                            .word   07c00h
    1677                            .word   07c00h
    1678                            .word   07c40h,07c60h,07c80h,07ca0h,07cc0h
    1679                            .word   07ce0h,07d00h,07d20h,07d40h,07d60h,07d80h,07da0h,07dc0h
    1680                            .word   07de0h,07e00h,07e20h,07e40h,07e60h,07e80h,07ea0h
    1681                            .word   07ec0h,07ee0h,07f00h,07f20h,07f40h,07f60h,07f80h
    1682                            .word   07fa0h,07f80h,07f60h,07f40h,07f20h,07f00h,07ee0h,07ec0h
    1683                            .word   07ea0h,07e80h,07e60h,07e40h,07e20h,07e00h,07de0h
    1684                            .word   07dc0h,07da0h,07d80h,07d60h,07d40h,07d20h,07d00h,07ce0h
    1685                            .word   07cc0h,07ca0h,07c80h,07c60h,07c40h,07c20h
    1686                            .word   -1
    1687                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   40

    1688                            .endif
    1689                    
    1690                    
    1691 00008490           xpmhadjust
    1692 00008490     b520          move    *a9(xpmhPI_MOVESOUND),a0
         000084a0     00e0  
    1693                    
    1694 000084b0     b5ae          move    *a13(xpmhRND_DEST),a14
         000084c0     0160  
    1695 000084d0     ce02          jrn     xpmhmove_sound_ok
    1696 000084e0     09c0          movi    0DDH,a0
         000084f0     00dd  
    1697 00008500           xpmhmove_sound_ok
    1698                    
    1699 00008500     0d5f          calla   triple_sound
         00008510 00000000! 
    1700 00008530     0d3f          callr   xpmherase_mugshot
         00008540     0219  
    1701 00008550           xpmhfirst_adjust
    1702 00008550     0d3f          callr   xpmhplace_cursor
         00008560     01df  
    1703 00008570     0d3f          callr   xpmhdraw_mugshot
         00008580     0223  
    1704 00008590     0d3f          callr   xpmhupdate_name
         000085a0     01fe  
    1705                    
    1706                            ;set a6 to debounce value if not rndsel, or to move time if rndsel
    1707 000085b0     b5ae          move    *a13(xpmhRND_DEST),a14
         000085c0     0160  
    1708 000085d0     cf06          jrnn    xpmhwaitloop
    1709 000085e0     1866          movk    3,a6
    1710                    
    1711 000085f0     5600          clr     a0
    1712 00008600     b008          move    a0,*a8(OCONST)          ;Clr color
         00008610     0160  
    1713 00008620     b00d          move    a0,*a13(xpmhCNTR)
         00008630     02f0  
    1714                    
    1715 00008640           xpmhwaitloop
    1716                    
    1717 00008640     0d3f          callr   xpmhplace_cursor
         00008650     01d0  
    1718                    
    1719                            ;flash the hilightes
    1720 00008660     b7a8          move    *a13(xpmhHIPLATE),a8,L
         00008670     0120  
    1721 00008680     b50e          move    *a8(OZPOS),a14
         00008690     00d0  
    1722 000086a0     0bce          xori    1,a14
         000086b0 00000001  
    1723 000086d0     b1c8          move    a14,*a8(OZPOS)
         000086e0     00d0  
    1724                    
    1725 000086f0     b7a8          move    *a13(xpmhHILITE),a8,L
         00008700     0100  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   41

    1726 00008710     b50e          move    *a8(OZPOS),a14
         00008720     00d0  
    1727 00008730     0bce          xori    1,a14
         00008740 00000001  
    1728 00008760     b1c8          move    a14,*a8(OZPOS)
         00008770     00d0  
    1729                    
    1730 00008780                   PUSHP   a6,a7
    1731 000087a0                   SLEEPK  1
    1732 000087e0                   PULLP   a6,a7
    1733                    
    1734                    
    1735 00008800     b5ae          move    *a13(xpmhCNTR),a14
         00008810     02f0  
    1736 00008820     142e          dec     a14
    1737 00008830     b1cd          move    a14,*a13(xpmhCNTR)
         00008840     02f0  
    1738 00008850     c110          jrp     xpmhnormz
    1739 00008860     190e          movk    8,a14
    1740 00008870     b1cd          move    a14,*a13(xpmhCNTR)
         00008880     02f0  
    1741                    
    1742 00008890                   PUSH    a6,a7,a9
    1743 000088b0     09c9          movi    0202h,a9
         000088c0     0202  
    1744 000088d0                   CREATE0 FLASHME
    1745                            .ref    FLASHME
    1746 00008940                   PULL    a6,a7,a9
    1747 00008960           xpmhnormz
    1748                    
    1749                            ;are we in random mode?
    1750 00008960     b5ae          move    *a13(xpmhRND_DEST),a14
         00008970     0160  
    1751 00008980     ce3f          jrn     xpmhnot_rndsel
    1752                    
    1753                            ;we're in random select
    1754 00008990     0d86          dsj     a6,xpmhwaitloop
         000089a0     ffc9  
    1755                    
    1756                            ;time to move again
    1757 000089b0     09c6          movi    xpmhrnd_movespeed,a6    ;set time to next move
         000089c0     0005  
    1758 000089d0     1427          dec     a7
    1759 000089e0     c115          jrp     xpmhmove_at_random
    1760                    
    1761                            ;move toward final destination
    1762                            ;if we're there, take it
    1763 000089f0     b5ae          move    *a13(xpmhRND_DEST),a14
         00008a00     0160  
    1764 00008a10     49cb          cmp     a14,a11
    1765 00008a20     ca00          jreq    xpmhbut_hit
         00008a30     010f  
    1766                    
    1767                            ;not there.  one time in three, move at random anyway
    1768 00008a40     1860          movk    3,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   42

    1769 00008a50     0d5f          calla   RNDRNG0
         00008a60 00000000! 
    1770 00008a80                   TEST    a0
    1771 00008a90     ca0a          jrz     xpmhmove_at_random
    1772                    
    1773                            ;if we're in the correct row, move sideways
    1774 00008aa0     b5ae          move    *a13(xpmhRND_DEST),a14
         00008ab0     0160  
    1775 00008ac0     576e          xor     a11,a14
    1776 00008ad0     2fee          srl     1,a14
    1777 00008ae0     ca0f          jrz     xpmhrnd_move_sideways
    1778                    
    1779                            ;okay, move toward the correct row
    1780 00008af0     b5ae          move    *a13(xpmhRND_DEST),a14
         00008b00     0160  
    1781 00008b10     496e          cmp     a11,a14
    1782 00008b20     c45f          jrlt    xpmhstick_up
    1783 00008b30     c056          jruc    xpmhstick_down
    1784                    
    1785 00008b40           xpmhmove_at_random
    1786                            ;move in a random direction, but only in legal directions
    1787 00008b40     1840          movk    2,a0
    1788 00008b50     0d5f          calla   RNDRNG0
         00008b60 00000000! 
    1789 00008b80     0b40          cmpi    2,a0
         00008b90     fffd  
    1790 00008ba0     ca07          jreq    xpmhrnd_move_up
    1791 00008bb0     0b40          cmpi    1,a0
         00008bc0     fffe  
    1792 00008bd0     ca0f          jreq    xpmhrnd_move_down
    1793                    
    1794                            ;move sideways by toggling bit zero in the index
    1795 00008be0           xpmhrnd_move_sideways
    1796 00008be0     0bcb          xori    1,a11
         00008bf0 00000001  
    1797 00008c10     c087          jruc    xpmhadjust
    1798                    
    1799 00008c20           xpmhrnd_move_up
    1800 00008c20     0b4b          cmpi    2,a11
         00008c30     fffd  
    1801 00008c40     c54d          jrge    xpmhstick_up
    1802                    
    1803                            ;moving up isn't legal.  move sideways or down
    1804 00008c50     09c0          movi    1,a0
         00008c60     0001  
    1805 00008c70     0d5f          calla   RNDRNG0
         00008c80 00000000! 
    1806 00008ca0                   TEST    a0
    1807 00008cb0     caf2          jrz     xpmhrnd_move_sideways
    1808 00008cc0     c03d          jruc    xpmhstick_down
    1809                    
    1810 00008cd0           xpmhrnd_move_down
    1811 00008cd0     0b4b          cmpi    5,a11
         00008ce0     fffa  
    1812 00008cf0     c63a          jrle    xpmhstick_down
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   43

    1813                    
    1814                            ;moving down isn't legal.  move sideways or up
    1815 00008d00     09c0          movi    1,a0
         00008d10     0001  
    1816 00008d20     0d5f          calla   RNDRNG0
         00008d30 00000000! 
    1817 00008d50                   TEST    a0
    1818 00008d60     cae7          jrz     xpmhrnd_move_sideways
    1819 00008d70     c03a          jruc    xpmhstick_up
    1820                    
    1821 00008d80           xpmhnot_rndsel
    1822                            ;if time is out, pick whoever we're on.
    1823 00008d80     05ae          move    @time_out,a14
         00008d90 00000080- 
    1824 00008db0     cb00          jrnz    xpmhbut_hit
         00008dc0     00d6  
    1825                    
    1826                            ;begin random select?
    1827 00008dd0     4d40          move    a10,a0
    1828 00008de0     0d5f          calla   get_start_cur
         00008df0 00000000! 
    1829 00008e10     ca0a          jrz     xpmhbutton_checks
    1830                    
    1831                            ;start is down.  check stick
    1832 00008e20     4d40          move    a10,a0
    1833 00008e30     0d5f          calla   get_stick_val_cur
         00008e40 00000000! 
    1834 00008e60     1fe0          btst    JOYUP,a0
    1835 00008e70     ca04          jrz     xpmhbutton_checks
    1836                    
    1837                            ;stick is up.  check position
    1838 00008e80     b52e          move    *a9(xpmhPI_STARTPOS),a14
         00008e90     0040  
    1839 00008ea0     496e          cmp     a11,a14
    1840 00008eb0     ca3a          jreq    xpmhbegin_random_select
    1841                    
    1842 00008ec0           xpmhbutton_checks
    1843 00008ec0     05ae          move    @are_we_waiting_f,a14
         00008ed0 00000100- 
    1844 00008ef0     ce01          jrn     no_worry_about_it
    1845 00008f00     cb07          jrnz    no_check_buts_yet
    1846 00008f10           no_worry_about_it
    1847                    
    1848                            ;button checks
    1849 00008f10     4d40          move    a10,a0
    1850 00008f20     0d5f          calla   get_but_val_down
         00008f30 00000000! 
    1851 00008f50                   TEST    a0
    1852 00008f60     cb00          jrnz    xpmhbut_hit
         00008f70     00bb  
    1853 00008f80           no_check_buts_yet
    1854                    
    1855 00008f80     1426          dec     a6
    1856 00008f90     c100          jrp     xpmhwaitloop
         00008fa0     ff69  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   44

    1857 00008fb0     56c6          clr     a6
    1858                    
    1859                            ;stick checks
    1860 00008fc0     4d40          move    a10,a0
    1861 00008fd0     0d5f          calla   get_stick_val_down
         00008fe0 00000000! 
    1862 00009000     1fc0          btst    JOYDN,a0
    1863 00009010     cb08          jrnz    xpmhstick_down
    1864 00009020     1fe0          btst    JOYUP,a0
    1865 00009030     cb0e          jrnz    xpmhstick_up
    1866 00009040     1fa0          btst    JOYLFT,a0
    1867 00009050     cb14          jrnz    xpmhstick_left
    1868 00009060     1f80          btst    JOYRGT,a0
    1869 00009070     cb18          jrnz    xpmhstick_right
    1870 00009080     c000          jruc    xpmhwaitloop
         00009090     ff5a  
    1871                    
    1872 000090a0           xpmhstick_down
    1873                            ;add 2 unless the index is 6 or 7
    1874 000090a0     0b4b          cmpi    6,a11
         000090b0     fff9  
    1875 000090c0     c500          jrge    xpmhwaitloop
         000090d0     ff56  
    1876 000090e0     0b0b          addi    2,a11
         000090f0     0002  
    1877 00009100     c000          jruc    xpmhadjust
         00009110     ff37  
    1878                    
    1879 00009120           xpmhstick_up
    1880                            ;sub 2 unless index is 0 or 1
    1881 00009120     0b4b          cmpi    2,a11
         00009130     fffd  
    1882 00009140     c400          jrlt    xpmhwaitloop
         00009150     ff4e  
    1883 00009160     0beb          subi    2,a11
         00009170     fffd  
    1884 00009180     c000          jruc    xpmhadjust
         00009190     ff2f  
    1885                    
    1886 000091a0           xpmhstick_left
    1887                            ;sub 1 unless index is even
    1888 000091a0     1feb          btst    0,a11
    1889 000091b0     ca00          jrz     xpmhwaitloop
         000091c0     ff47  
    1890 000091d0     142b          dec     a11
    1891 000091e0     c000          jruc    xpmhadjust
         000091f0     ff29  
    1892                    
    1893 00009200           xpmhstick_right
    1894                            ;add 1 unless index is odd
    1895 00009200     1feb          btst    0,a11
    1896 00009210     cb00          jrnz    xpmhwaitloop
         00009220     ff41  
    1897 00009230     102b          inc     a11
    1898 00009240     c000          jruc    xpmhadjust
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   45

         00009250     ff23  
    1899                    
    1900 00009260           xpmhbegin_random_select
    1901                    
    1902 00009260     09e2          movi    xpmhmessage_setup,a2
         00009270 00009980' 
    1903 00009290     4d4a          move    a10,a10
    1904 000092a0     ca03          jrz     xpmhp1m
    1905 000092b0     09e2          movi    xpmhmessage_setup2,a2
         000092c0 00009a20' 
    1906 000092e0           xpmhp1m
    1907 000092e0     0d5f          calla   setup_message
         000092f0 00000000! 
    1908                    
    1909 00009310     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00009320     0702  
    1910 00009330     4d4a          move    a10,a10
    1911 00009340     ca02          jrz     xpmhp1x
    1912 00009350     09c0          movi    CLSNEUT|TYPTEXT|SUBMES2,a0
         00009360     0703  
    1913 00009370           xpmhp1x
    1914 00009370     0580          move    a0,@mess_objid
         00009380 00000000! 
    1915                    
    1916 000093a0     09e4          movi    xpmhmessage_string,a4
         000093b0 00009ac0' 
    1917 000093d0     0d5f          calla   print_string_C2
         000093e0 00000000! 
    1918                    
    1919 00009400     09c0          movi    7,a0
         00009410     0007  
    1920 00009420     0d5f          calla   RNDRNG0
         00009430 00000000! 
    1921                    
    1922 00009450     b00d          move    a0,*a13(xpmhRND_DEST)
         00009460     0160  
    1923 00009470     09c6          movi    xpmhrnd_movespeed,a6
         00009480     0005  
    1924 00009490     09c7          movi    xpmhrnd_wander,a7
         000094a0     000e  
    1925 000094b0     c000          jruc    xpmhwaitloop
         000094c0     ff17  
    1926                    
    1927                            .ref    font9_ascii
    1928                            .ref    pal_getf,setup_message
    1929                            .ref    mess_objid,print_string_C2
    1930                    
    1931                    
    1932 000094d0           blink_rndper
    1933                    
    1934 000094d0     09e0          movi    FNT9RED_P,a0
         000094e0 00000000! 
    1935 00009500     0d5f          calla   pal_getf
         00009510 00000000! 
    1936 00009530     4c09          move    a0,a9
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   46

    1937                    
    1938 00009540     09e0          movi    FNT9WHT_P,a0
         00009550 00000000! 
    1939 00009570     0d5f          calla   pal_getf
         00009580 00000000! 
    1940                    
    1941 000095a0     09ee          movi    OBJLST,a14
         000095b0 00000000! 
    1942 000095d0           xpmhlpz
    1943 000095d0     87ce          move    *a14,a14,L
    1944 000095e0     ca0f          jrz     xpmhx
    1945 000095f0     b5c2          move    *a14(OPAL),a2
         00009600     0150  
    1946 00009610     4802          cmp     a0,a2
    1947 00009620     cbfa          jrne    xpmhlpz
    1948                    
    1949 00009630     b5c2          move    *a14(OID),a2
         00009640     0190  
    1950 00009650     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES1,a2
         00009660     f8fd  
    1951 00009670     ca03          jreq    xpmhlpdo
    1952 00009680     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES2,a2
         00009690     f8fc  
    1953 000096a0     cbf2          jrne    xpmhlpz
    1954 000096b0           xpmhlpdo
    1955 000096b0     b12e          move    a9,*a14(OPAL)
         000096c0     0150  
    1956 000096d0     c0ef          jruc    xpmhlpz
    1957                    
    1958 000096e0           xpmhx   SLEEPK  4
    1959                    
    1960 00009720     09e0          movi    FNT9RED_P,a0
         00009730 00000000! 
    1961 00009750     0d5f          calla   pal_getf
         00009760 00000000! 
    1962 00009780     4c09          move    a0,a9
    1963                    
    1964 00009790     09e0          movi    FNT9WHT_P,a0
         000097a0 00000000! 
    1965 000097c0     0d5f          calla   pal_getf
         000097d0 00000000! 
    1966                    
    1967 000097f0     09ee          movi    OBJLST,a14
         00009800 00000000! 
    1968 00009820           xpmhlp2
    1969 00009820     87ce          move    *a14,a14,L
    1970 00009830     ca0f          jrz     xpmhx2
    1971 00009840     b5c2          move    *a14(OPAL),a2
         00009850     0150  
    1972 00009860     4922          cmp     a9,a2
    1973 00009870     cbfa          jrne    xpmhlp2
    1974                    
    1975 00009880     b5c2          move    *a14(OID),a2
         00009890     0190  
    1976 000098a0     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES1,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   47

         000098b0     f8fd  
    1977 000098c0     ca03          jreq    xpmhlpdo2
    1978 000098d0     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES2,a2
         000098e0     f8fc  
    1979 000098f0     cbf2          jrne    xpmhlp2
    1980 00009900           xpmhlpdo2
    1981 00009900     b00e          move    a0,*a14(OPAL)
         00009910     0150  
    1982 00009920     c0ef          jruc    xpmhlp2
    1983                    
    1984 00009930           xpmhx2  SLEEPK  7
    1985                    
    1986 00009970     c0b5          jruc    blink_rndper
    1987                    
    1988                    
    1989 00009980           xpmhmessage_setup
    1990 00009980                   JAM_STR font9_ascii,5,0,79,15,FNT9WHT_P,0
    1991                    
    1992 00009a20           xpmhmessage_setup2
    1993 00009a20                   JAM_STR font9_ascii,5,0,321,15,FNT9WHT_P,0
    1994                    
    1995 00009ac0           xpmhmessage_string
    1996 00009ac0       43          .string "CALLA RNDPER",0
    1997                    
    1998 00009b30                   .even
    1999                    
    2000                    
    2001 00009b30           xpmhbut_hit
    2002 00009b30     09e1          movi    player_pal_pref,a1
         00009b40 00000120- 
    2003 00009b60     4d4a          move    a10,a10
    2004 00009b70     ca01          jrz     xpmhis_p1
    2005 00009b80     1201          addk    16,a1
    2006 00009b90           xpmhis_p1
    2007 00009b90     4d40          move    a10,a0
    2008 00009ba0     0d5f          calla   get_stick_val_cur
         00009bb0 00000000! 
    2009 00009bd0     ca11          jrz     xpmhno_pref
    2010 00009be0     4d40          move    a10,a0
    2011 00009bf0     0d5f          calla   get_but_val_cur
         00009c00 00000000! 
    2012 00009c20     ca0c          jrz     xpmhno_pref
    2013 00009c30     188e          movk    4,a14
    2014 00009c40     1fe0          btst    0,a0                    ; PUNCH
    2015 00009c50     cb0a          jrnz    xpmhpp_pref
    2016 00009c60     18ee          movk    7,a14
    2017 00009c70     1f60          btst    4,a0                    ; SKICK
    2018 00009c80     cb07          jrnz    xpmhpp_pref
    2019 00009c90     18ae          movk    5,a14
    2020 00009ca0     1fa0          btst    2,a0                    ; SPUNCH
    2021 00009cb0     cb04          jrnz    xpmhpp_pref
    2022 00009cc0     18ce          movk    6,a14
    2023 00009cd0     1f80          btst    3,a0                    ; KICK
    2024 00009ce0     cb01          jrnz    xpmhpp_pref
    2025 00009cf0           xpmhno_pref
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   48

    2026 00009cf0     57ce          clr     a14
    2027 00009d00           xpmhpp_pref
    2028 00009d00     81c1          move    a14,*a1
    2029                            ;they hit a button.  Stick 'em with the current guy.
    2030 00009d10     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00009d20     0702  
    2031 00009d30     4d4a          move    a10,a10
    2032 00009d40     ca02          jrz     xpmhp1c
    2033 00009d50     09c0          movi    CLSNEUT|TYPTEXT|SUBMES2,a0
         00009d60     0703  
    2034 00009d70           xpmhp1c
    2035 00009d70     0d5f          calla   obj_del1c
         00009d80 00000000! 
    2036                    
    2037 00009da0     b720          move    *a9(xpmhPI_INDEX),a0,L
         00009db0     00c0  
    2038                            ;rewire kludge
    2039 00009dc0     4d6e          move    a11,a14
    2040 00009dd0                   X16     a14
    2041 00009de0     0b2e          addi    scramble_table,a14
         00009df0 0000acb0' 
    2042 00009e10     85ce          move    *a14,a14,W
    2043 00009e20     81c0          move    a14,*a0
    2044                    
    2045 00009e30     4d41          move    a10,a1
    2046 00009e40     2481          sll     4,a1
    2047 00009e50     0b21          addi    which_player,a1
         00009e60 00000040- 
    2048 00009e80     81c1          move    a14,*a1
    2049                    
    2050                            ;say the name.
    2051 00009e90     09c1          MOVI    SEL_SPCH_PID1,A1
         00009ea0     0131  
    2052 00009eb0     4141          ADD     A10,A1
    2053 00009ec0     4c08          MOVE    A0,A8
    2054 00009ed0     09e7          MOVI    call_wrestler_name,A7
         00009ee0 00002e80' 
    2055 00009f00     0d5f          CALLA   GETPRC
         00009f10 00000000! 
    2056                    
    2057                            ;make a joyful noise unto the player
    2058 00009f30     b520          move    *a9(xpmhPI_SELSOUND),a0
         00009f40     00f0  
    2059 00009f50     0d5f          calla   triple_sound
         00009f60 00000000! 
    2060                    
    2061                            ;clear our bit in the active flag
    2062 00009f80     05a0          move    @active_flag,a0
         00009f90 00000090- 
    2063 00009fb0     4d4e          move    a10,a14
    2064 00009fc0     102e          inc     a14
    2065 00009fd0     53c0          andn    a14,a0
    2066 00009fe0     0580          move    a0,@active_flag
         00009ff0 00000090- 
    2067                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   49

    2068                            ;flash over the crouton
    2069                            ;synch!  begin flashing on an even PCNT
    2070 0000a010     05ae          move    @PCNT,a14
         0000a020 00000000! 
    2071 0000a040     1fee          btst    0,a14
    2072 0000a050     cb04          jrnz    xpmhsynch
    2073 0000a060                   SLEEPK  1
    2074                    
    2075 0000a0a0           xpmhsynch
    2076 0000a0a0     b7a8          move    *a13(xpmhHILITE),a8,L
         0000a0b0     0100  
    2077 0000a0c0     09c9          movi    TSEC/4,a9
         0000a0d0     000d  
    2078 0000a0e0           xpmhflashloop
    2079 0000a0e0     09ce          movi    0202h,a14
         0000a0f0     0202  
    2080 0000a100     b1c8          move    a14,*a8(OCONST)
         0000a110     0160  
    2081 0000a120     b50e          move    *a8(OCTRL),a14
         0000a130     00f0  
    2082 0000a140     0bce          xori    M_CONZER,a14
         0000a150 00000004  
    2083 0000a170     b1c8          move    a14,*a8(OCTRL)
         0000a180     00f0  
    2084 0000a190                   SLEEPK  2
    2085 0000a1d0     3e09          dsj     a9,xpmhflashloop
    2086                    
    2087 0000a1e0     b50e          move    *a8(OCTRL),a14
         0000a1f0     00f0  
    2088 0000a200     0b8e          andni   M_CONZER,a14
         0000a210 00000004  
    2089 0000a230     b1c8          move    a14,*a8(OCTRL)
         0000a240     00f0  
    2090                    
    2091 0000a250     09ce          movi    hilite_z,a14
         0000a260     0005  
    2092 0000a270     b1c8          move    a14,*a8(OZPOS)
         0000a280     00d0  
    2093                    
    2094 0000a290     b7a8          move    *a13(xpmhHIPLATE),a8,L
         0000a2a0     0120  
    2095 0000a2b0     09ce          movi    hiplate_z,a14
         0000a2c0     0002  
    2096 0000a2d0     b1c8          move    a14,*a8(OZPOS)
         0000a2e0     00d0  
    2097                            
    2098 0000a2f0           xpmhlp
    2099 0000a2f0                   SLEEPK  1
    2100 0000a330     0d3f          callr   xpmhplace_cursor
         0000a340     0001  
    2101 0000a350     c0f9          jruc    xpmhlp
    2102                            
    2103                    
    2104                    
    2105 0000a360            SUBRP  xpmhplace_cursor
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   50

    2106                    
    2107 0000a360                   PUSH    a2,a3,a7,a8
    2108                    
    2109 0000a380     4d61          move    a11,a1
    2110 0000a390                   X32     a1
    2111 0000a3a0     0b21          addi    crouton_pos_table,a1
         0000a3b0 000040d0' 
    2112 0000a3d0     9422          move    *a1+,a2,W
    2113 0000a3e0     8423          move    *a1,a3,W
    2114                    
    2115 0000a3f0     b7a7          move    *a13(xpmhHILITE),a7,L
         0000a400     0100  
    2116 0000a410     b7a8          move    *a13(xpmhHIPLATE),a8,L
         0000a420     0120  
    2117                    
    2118 0000a430     b048          move    a2,*a8(OXPOS)
         0000a440     0090  
    2119 0000a450     b068          move    a3,*a8(OYPOS)
         0000a460     00b0  
    2120                    
    2121 0000a470     4d4a          move    a10,a10
    2122 0000a480     ca09          jrz     xpmhp1
    2123 0000a490     07a8          move    @kp_p1cursor,a8,L
         0000a4a0 000000a0- 
    2124 0000a4c0     b508          move    *a8(PA11),a8
         0000a4d0     0060  
    2125 0000a4e0     490b          cmp     a8,a11
    2126 0000a4f0     cb02          jrnz    xpmhp1
    2127 0000a500     1042          addk    2,a2
    2128 0000a510     1043          addk    2,a3
    2129 0000a520           xpmhp1
    2130 0000a520     b047          move    a2,*a7(OXPOS)
         0000a530     0090  
    2131 0000a540     b067          move    a3,*a7(OYPOS)
         0000a550     00b0  
    2132                    
    2133 0000a560                   PULL    a2,a3,a7,a8
    2134 0000a580     0960          rets
    2135                    
    2136                    
    2137                    
    2138 0000a590            SUBRP  xpmhupdate_name
    2139                    
    2140 0000a590                   PUSH    a8,a11
    2141                    
    2142                            ;rewiring kludge
    2143 0000a5b0                   X16     a11
    2144 0000a5c0     0b2b          addi    scramble_table,a11
         0000a5d0 0000acb0' 
    2145 0000a5f0     856b          move    *a11,a11,W
    2146                    
    2147 0000a600     4d60          move    a11,a0
    2148 0000a610                   X32     a0
    2149 0000a620     0b20          addi    name_tbl,a0
         0000a630 0000c150' 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   51

    2150 0000a650     8600          move    *a0,a0,L
    2151 0000a660     b7a8          move    *a13(xpmhNAME),a8,L
         0000a670     0140  
    2152 0000a680     0d5f          calla   civanic
         0000a690 00000000! 
    2153                    
    2154 0000a6b0                   PULL    a8,a11
    2155                    
    2156 0000a6d0     0960          rets
    2157                    
    2158                    
    2159 0000a6e0            SUBRP  xpmherase_mugshot
    2160                    
    2161 0000a6e0                   PUSH    a5,a6,a8
    2162                    
    2163 0000a700     1906          movk    8,a6
    2164 0000a710     4da5          move    a13,a5
    2165 0000a720     0b05          addi    xpmhMUG1,a5
         0000a730     0170  
    2166 0000a740           xpmheraseloop
    2167 0000a740     96a0          move    *a5+,a0,L
    2168 0000a750     0d5f          calla   DELOBJ
         0000a760 00000000! 
    2169 0000a780     3ca6          dsj     a6,xpmheraseloop
    2170                    
    2171 0000a790                   PULL    a5,a6,a8
    2172                    
    2173 0000a7b0     0960          rets
    2174                    
    2175                    
    2176                    
    2177 0000a7c0            SUBRP  xpmhdraw_mugshot
    2178                    
    2179                            ;reg use
    2180                            ;a10 = PDATA pointer
    2181                            ;a11 = mug pointer
    2182                    
    2183 0000a7c0                   PUSH    a6,a7,a8,a10,a11
    2184                    
    2185                            ;rewiring kludge
    2186 0000a7e0                   X16     a11
    2187 0000a7f0     0b2b          addi    scramble_table,a11
         0000a800 0000acb0' 
    2188 0000a820     856b          move    *a11,a11,W
    2189                    
    2190 0000a830                   X32     a11
    2191 0000a840     0b2b          addi    wrestler_mugs,a11
         0000a850 0000b630' 
    2192 0000a870     876b          move    *a11,a11,L
    2193                    
    2194 0000a880     4daa          move    a13,a10
    2195 0000a890     0b0a          addi    xpmhMUG1,a10
         0000a8a0     0170  
    2196 0000a8b0     9762          move    *a11+,a2,L
    2197                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   52

    2198 0000a8c0           xpmhdrawloop
    2199 0000a8c0     b520          move    *a9(xpmhPI_MUGXPOS),a0
         0000a8d0     0050  
    2200 0000a8e0     b521          move    *a9(xpmhPI_MUGYPOS),a1
         0000a8f0     0060  
    2201 0000a900     2200          sla     16,a0
    2202 0000a910     2201          sla     16,a1
    2203 0000a920     09c3          movi    mugshot_z,a3
         0000a930     0001  
    2204 0000a940     b524          move    *a9(xpmhPI_MUGCTRL),a4
         0000a950     0070  
    2205 0000a960     09c5          movi    CLSNEUT,a5
         0000a970     0000  
    2206 0000a980     56c6          clr     a6
    2207 0000a990     56e7          clr     a7
    2208 0000a9a0     0d5f          calla   BEGINOBJW
         0000a9b0 00000000! 
    2209 0000a9d0     930a          move    a8,*a10+,L
    2210                            
    2211 0000a9e0     9762          move    *a11+,a2,L
    2212 0000a9f0     ca01          jrz     xpmhdone
    2213 0000aa00     c0eb          jruc    xpmhdrawloop
    2214                    
    2215 0000aa10           xpmhdone
    2216 0000aa10                   PULL    a6,a7,a8,a10,a11
    2217 0000aa30     0d5f          calla   show_bonus_icons
         0000aa40 00000000! 
    2218 0000aa60     0960          rets
    2219                    
    2220 0000aa70           wrestler_attributes
    2221 0000aa70     0004          .word   4,9,9,3 ;0      (Bret)
    2222 0000aab0     0007          .word   7,6,2,5 ;1      (Razor)
    2223 0000aaf0     0008          .word   8,4,7,6 ;2      (Taker)
    2224 0000ab30     0009          .word   9,2,4,6 ;3      (Yoko)
    2225 0000ab70     0003          .word   3,9,8,7 ;4      (Shawn)
    2226 0000abb0     0008          .word   8,6,5,3 ;5      (Bam Bam)
    2227 0000abf0     0004          .word   4,8,7,8 ;6      (Doink)
    2228 0000ac30     0009          .word   9,5,4,7 ;7      (Lex)
    2229 0000ac70     0009          .word   9,5,4,7 ;8      (Lex)
    2230                    
    2231 0000acb0           scramble_table  ;swap bret and doink on the select page
    2232 0000acb0     0006          .word   6
    2233 0000acc0     0001          .word   1,2,3,4,5
    2234 0000ad10     0000          .word   0
    2235 0000ad20     0008          .word   8               ;put lex in place of adam
    2236                    
    2237 0000ad30           attbars
    2238 0000ad30 00000000!         .long   ATTMTR_0,ATTMTR_1,ATTMTR_2,ATTMTR_3,ATTMTR_4
    2239 0000add0 00000000!         .long   ATTMTR_5,ATTMTR_6,ATTMTR_7,ATTMTR_8,ATTMTR_9
    2240                    
    2241 0000ae70           xpmhinfo
    2242 0000ae70 0000aeb0'         .long   xpmhp1info,xpmhp2info
    2243                    
    2244 0000aeb0           xpmhp1info
    2245 0000aeb0 0000b210'         .long   xpmhhi_b,xpmhplt_b                      ;hilite, crouton
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   53

    2246 0000aef0     0000          .word   0                               ;start index
    2247 0000af00     0014          .word   0+18+2,175                      ;mug position
    2248 0000af20     a102          .word   DMAWNZ|M_3D|M_SCRNREL           ;mug octrl
    2249 0000af30 0000b370'         .long   xpmhp1name,latttxt                      ;start name,att text
    2250 0000af70 00000060-         .long   index1                          ;report choice to
    2251 0000af90     00c8          .word   0c8h,0cbh                       ;cursor/select sounds
    2252                    
    2253 0000afb0           xpmhp2info
    2254 0000afb0 0000b2c0'         .long   xpmhhi_r,xpmhplt_r                      ;hilite, crouton
    2255 0000aff0     0001          .word   1                               ;start index
    2256 0000b000     017e          .word   400-18,175                      ;mug position
    2257 0000b020     a112          .word   DMAWNZ|M_3D|M_SCRNREL|M_FLIPH   ;mug octrl
    2258 0000b030 0000b420'         .long   xpmhp2name,ratttxt                      ;start name,att text
    2259 0000b070 00000070-         .long   index2                          ;report choice to
    2260 0000b090     00c7          .word   0c7h,0cch                       ;cursor/select sounds
    2261                    
    2262                    
    2263 0000b0b0     0000  xpmhplt_b       .word   0,0,hiplate_z                           ;X,Y,Z
    2264 0000b0e0 00000000!         .long   CRUTPLT_B                               ;IMG
    2265 0000b100     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2266 0000b110     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2267 0000b120 00000000          .long   0,0                                     ;XVEL, YVEL
    2268                    
    2269 0000b160     0000  xpmhplt_r       .word   0,0,hiplate_z+1                         ;X,Y,Z
    2270 0000b190 00000000!         .long   CRUTPLT_R                               ;IMG
    2271 0000b1b0     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2272 0000b1c0     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2273 0000b1d0 00000000          .long   0,0                                     ;XVEL, YVEL
    2274                    
    2275 0000b210     0000  xpmhhi_b        .word   0,0,hilite_z                            ;X,Y,Z
    2276 0000b240 00000000!         .long   CRUTHI_B                                ;IMG
    2277 0000b260     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2278 0000b270     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2279 0000b280 00000000          .long   0,0                                     ;XVEL, YVEL
    2280                    
    2281 0000b2c0     0000  xpmhhi_r        .word   0,0,hilite_z+1                          ;X,Y,Z
    2282 0000b2f0 00000000!         .long   CRUTHI_R                                ;IMG
    2283 0000b310     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2284 0000b320     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2285 0000b330 00000000          .long   0,0                                     ;XVEL, YVEL
    2286                    
    2287 0000b370     0051  xpmhp1name      .word   051H,184,name_z
    2288 0000b3a0 00000000!         .long   WF_INSERT
    2289 0000b3c0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2290 0000b3d0     0000          .word   CLSNEUT|TYPNEUT
    2291 0000b3e0 00000000          .long   0,0
    2292                    
    2293 0000b420     0142  xpmhp2name      .word   0142H,184,name_z
    2294 0000b450 00000000!         .long   WF_INSERT
    2295 0000b470     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2296 0000b480     0000          .word   CLSNEUT|TYPNEUT
    2297 0000b490 00000000          .long   0,0
    2298                    
    2299 0000b4d0     0012  latttxt .word   0+18,189,atttxt_z                       ;X, Y, Z
    2300 0000b500 00000000!         .long   ATT_TXT                                 ;IMG
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   54

    2301 0000b520     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2302 0000b530     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2303 0000b540 00000000          .long   0,0                                     ;XVEL, YVEL
    2304                    
    2305 0000b580     0102  ratttxt .word   400-18-124,189,atttxt_z                 ;X, Y, Z
    2306 0000b5b0 00000000!         .long   ATT_TXT                                 ;IMG
    2307 0000b5d0     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2308 0000b5e0     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2309 0000b5f0 00000000          .long   0,0                                     ;XVEL, YVEL
    2310                    
    2311                    
    2312 0000b630           wrestler_mugs
    2313 0000b630 0000b850'         .long   BHARTMUG
    2314 0000b650 0000b970'         .long   RAZORMUG
    2315 0000b670 0000ba90'         .long   UNDERMUG
    2316 0000b690 0000bbb0'         .long   YOKOMUG
    2317 0000b6b0 0000bcd0'         .long   MICHAELMUG
    2318 0000b6d0 0000bdf0'         .long   BAMBAMMUG
    2319 0000b6f0 0000bf10'         .long   DOINKMUG
    2320 0000b710 00000000          .long   0
    2321 0000b730 0000c030'         .long   LUGERMUG
    2322                    
    2323 0000b750           wrestler_mugs2
    2324 0000b750 0000b850'         .long   BHARTMUG
    2325 0000b770 0000b970'         .long   RAZORMUG
    2326 0000b790 0000ba90'         .long   UNDERMUG
    2327 0000b7b0 0000bbb0'         .long   YOKOMUG
    2328 0000b7d0 0000bcd0'         .long   MICHAELMUG
    2329 0000b7f0 0000bdf0'         .long   BAMBAMMUG
    2330 0000b810 0000bf10'         .long   DOINKMUG
    2331 0000b830 0000c030'         .long   LUGERMUG
    2332                    
    2333 0000b850           BHARTMUG
    2334 0000b850 00000000!         .long   BHMUG_A,BHMUG_B,BHMUG_C,BHMUG_D
    2335 0000b8d0 00000000!         .long   BHMUG_E,BHMUG_F,BHMUG_G,BHMUG_H,0
    2336 0000b970           RAZORMUG
    2337 0000b970 00000000!         .long   RRMUG_A,RRMUG_B,RRMUG_C,RRMUG_D
    2338 0000b9f0 00000000!         .long   RRMUG_E,RRMUG_F,RRMUG_G,RRMUG_H,0
    2339 0000ba90           UNDERMUG
    2340 0000ba90 00000000!         .long   UNMUG_A,UNMUG_B,UNMUG_C,UNMUG_D
    2341 0000bb10 00000000!         .long   UNMUG_E,UNMUG_F,UNMUG_G,UNMUG_H,0
    2342 0000bbb0           YOKOMUG
    2343 0000bbb0 00000000!         .long   YKMUG_A,YKMUG_B,YKMUG_C,YKMUG_D
    2344 0000bc30 00000000!         .long   YKMUG_E,YKMUG_F,YKMUG_G,YKMUG_H,0
    2345 0000bcd0           MICHAELMUG
    2346 0000bcd0 00000000!         .long   SMMUG_A,SMMUG_B,SMMUG_C,SMMUG_D
    2347 0000bd50 00000000!         .long   SMMUG_E,SMMUG_F,SMMUG_G,SMMUG_H,0
    2348 0000bdf0           BAMBAMMUG
    2349 0000bdf0 00000000!         .long   BMMUG_A,BMMUG_B,BMMUG_C,BMMUG_D
    2350 0000be70 00000000!         .long   BMMUG_E,BMMUG_F,BMMUG_G,BMMUG_H,0
    2351 0000bf10           DOINKMUG
    2352 0000bf10 00000000!         .long   DKMUG_A,DKMUG_B,DKMUG_C,DKMUG_D
    2353 0000bf90 00000000!         .long   DKMUG_E,DKMUG_F,DKMUG_G,DKMUG_H,0
    2354 0000c030           LUGERMUG
    2355 0000c030 00000000!         .long   LXMUG_A,LXMUG_B,LXMUG_C,LXMUG_D
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   55

    2356 0000c0b0 00000000!         .long   LXMUG_E,LXMUG_F,LXMUG_G,LXMUG_H,0
    2357                    
    2358 0000c150           name_tbl
    2359 0000c150 00000000!         .long   NAM_BRT,NAM_RZR,NAM_UND,NAM_YOK
    2360 0000c1d0 00000000!         .long   NAM_SHN2,NAM_BAM2,NAM_DNK,0,NAM_LEX
    2361                    
    2362                    
    2363 0000c270            SUBR   select_clock
    2364                    
    2365                            ;reg use
    2366                            ; a8 - current pstatus
    2367                            ; a9 - time remaining
    2368                    
    2369              031b  select_time     equ     TSEC*15
    2370                    
    2371 0000c270           xqszreset
    2372 0000c270     09c9          movi    select_time,a9
         0000c280     031b  
    2373 0000c290     05a8          move    @PSTATUS2,a8
         0000c2a0 00000000! 
    2374                    
    2375 0000c2c0           xqszwaitloop
    2376 0000c2c0                   SLEEPK  1
    2377 0000c300     05ae          move    @PSTATUS2,a14
         0000c310 00000000! 
    2378 0000c330     49c8          cmp     a14,a8
    2379 0000c340     cbf2          jrne    xqszreset                       ;new buyin.  reset
    2380                    
    2381 0000c350     3d49          dsj     a9,xqszwaitloop
    2382                    
    2383                    
    2384 0000c360     05a0          move    @OLD_PSTATUS2,a0
         0000c370 00000000! 
    2385 0000c390     cbed          jrnz    xqszreset
    2386                    
    2387 0000c3a0     182e          movk    1,a14
    2388 0000c3b0     058e          move    a14,@time_out
         0000c3c0 00000080- 
    2389                    
    2390 0000c3e0                   DIE
    2391                    
    2392 0000c410           clock_digits
    2393                    
    2394 0000c410     09e0          movi    [0cbh,0],a0                     ;x pos
         0000c420 00cb0000  
    2395 0000c440     09e1          movi    [232,0],a1                      ;y pos
         0000c450 00e80000  
    2396 0000c470     09e2          movi    FNT9_5,a2                       ;* image
         0000c480 00000000! 
    2397 0000c4a0     09c3          movi    104+200,a3                      ;z pos
         0000c4b0     0130  
    2398 0000c4c0     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000c4d0 0000a002  
    2399 0000c4f0     56a5          clr     a5                              ;object ID
    2400 0000c500     56c6          clr     a6                              ;x vel
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   56

    2401 0000c510     56e7          clr     a7                              ;y vel
    2402 0000c520     09f0          movi    FNT9WHT_P,b0
         0000c530 00000000! 
    2403 0000c550     0d5f          calla   BEGINOBJP
         0000c560 00000000! 
    2404 0000c580     188b          movk    4,a11
    2405 0000c590     0d3f  xqszloop0       callr   obj_off
         0000c5a0     0091  
    2406                    
    2407 0000c5b0           xqszloop        SLEEPK  1
    2408 0000c5f0     05a0          move    @time_out,a0
         0000c600 00000080- 
    2409 0000c620     cb80          janz    KILL_THIS_DIGIT
         0000c630 0000c820' 
    2410                    
    2411 0000c650     05a0          move    @OLD_PSTATUS2,a0
         0000c660 00000000! 
    2412 0000c680     cbf0          jrnz    xqszloop0
    2413                    
    2414 0000c690     b540          move    *a10(PA9),a0
         0000c6a0     00a0  
    2415 0000c6b0     2f40          srl     6,a0
    2416 0000c6c0     480b          cmp     a0,a11
    2417 0000c6d0     caed          jrz     xqszloop
    2418 0000c6e0     0b40          cmpi    6,a0
         0000c6f0     fff9  
    2419 0000c700     c5e8          jrge    xqszloop0
    2420                    
    2421 0000c710     4c0b          move    a0,a11
    2422 0000c720     24a0          sll     5,a0
    2423                    
    2424 0000c730     0b20          addi    digits_tbl,a0
         0000c740 0000c870' 
    2425 0000c760     8600          move    *a0,a0,L                ;* image
    2426                    
    2427 0000c770     b501          move    *a8(OCTRL),a1           ;DMA flags
         0000c780     00f0  
    2428 0000c790     0d5f          calla   change_image
         0000c7a0 00000000! 
    2429 0000c7c0     0d3f          callr   obj_on
         0000c7d0     0066  
    2430                    
    2431 0000c7e0     4d6e          move    a11,a14
    2432 0000c7f0     0d3f          callr   setup_clock_sound
         0000c800     0297  
    2433 0000c810     c0d9          jruc    xqszloop
    2434                    
    2435 0000c820           KILL_THIS_DIGIT
    2436 0000c820     0d3f          callr   obj_off
         0000c830     0068  
    2437 0000c840                   DIE
    2438                    
    2439 0000c870           digits_tbl
    2440 0000c870 00000000!         .long   FNT9_0,FNT9_1,FNT9_2,FNT9_3,FNT9_4
    2441 0000c910 00000000!         .long   FNT9_5,FNT9_6,FNT9_7,FNT9_8,FNT9_9
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   57

    2442                    
    2443                    
    2444 0000c9b0            SUBR   pregame_show
    2445                    
    2446                    
    2447                    
    2448                            
    2449                     .if DEBUG
    2450                            move    @skip_select,a0
    2451                            jrz     cjhvnoskp
    2452                    
    2453                            RETP
    2454                    cjhvnoskp
    2455                     .endif
    2456                    
    2457 0000c9b0     05a0          move    @PSTATUS2,a0
         0000c9c0 00000000! 
    2458 0000c9e0     0b40          cmpi    3,a0
         0000c9f0     fffc  
    2459 0000ca00     cb1e          jrnz    cjhvoneplyrgm
    2460                    
    2461                            .ref    question_type
    2462                            .if     RR_AWARD = 1
    2463 0000ca10     05ae          move    @royal_rumble,a14
         0000ca20 00000000! 
    2464 0000ca40     cb0c          jrnz    cjhvlast_was_royal
    2465                            .endif
    2466 0000ca50     182e          movk    1,a14
    2467 0000ca60     058e          move    a14,@question_type
         0000ca70 00000000! 
    2468 0000ca90                   JSRP    ask_belt_question
    2469                            .if     RR_AWARD = 1
    2470 0000cb00     c004          jruc    cjhvtype_set
    2471 0000cb10           cjhvlast_was_royal
    2472 0000cb10     57ce          clr     a14
    2473 0000cb20     058e          move    a14,@royal_rumble
         0000cb30 00000000! 
    2474 0000cb50           cjhvtype_set
    2475                            .endif
    2476                    
    2477 0000cb50                   JSRP    CLOSE_PROGRESS_SCREEN
    2478                    
    2479 0000cbc0                   RETP
    2480                    
    2481                    
    2482                    
    2483 0000cbf0           cjhvoneplyrgm
    2484                            .ref    belt_ask
    2485                            .ref    ask_belt_question
    2486                    
    2487 0000cbf0     05ae          move    @belt_ask,a14,W
         0000cc00 00000000! 
    2488 0000cc20     ca12          jrz     cjhvbelt_is_set
    2489 0000cc30     57ce          clr     a14
    2490 0000cc40     058e          move    a14,@question_type
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   58

         0000cc50 00000000! 
    2491 0000cc70                   JSRP    ask_belt_question
    2492                    
    2493 0000cce0     0d5f          calla   INIT_LADDER_TABLE
         0000ccf0 00000000! 
    2494 0000cd10     5708          clr     a8
    2495 0000cd20     0588          move    a8,@belt_ask
         0000cd30 00000000! 
    2496 0000cd50           cjhvbelt_is_set
    2497                    
    2498 0000cd50     1948          movk    10,a8
    2499 0000cd60     1849          movk    2,a9
    2500 0000cd70                   JSRP    CLOSE_SCREEN_LINE
    2501                    
    2502 0000cde0     0d5f          calla   SPECIAL_WIPEOUT
         0000cdf0 00000000! 
    2503 0000ce10     c080          JAUC    PUT_UP_PROGRESS
         0000ce20 00000000! 
    2504                    
    2505                    
    2506                    
    2507                    
    2508                    
    2509 0000ce40            SUBRP  obj_on
    2510 0000ce40     b500          move    *a8(OYPOS),a0
         0000ce50     00b0  
    2511 0000ce60     0b80          andni   400h,a0
         0000ce70 00000400  
    2512 0000ce90     b008          move    a0,*a8(OYPOS)
         0000cea0     00b0  
    2513 0000ceb0     0960          rets
    2514                    
    2515                    
    2516                    
    2517 0000cec0            SUBRP  obj_off
    2518 0000cec0     b500          move    *a8(OYPOS),a0
         0000ced0     00b0  
    2519 0000cee0     0ba0          ori     400h,a0
         0000cef0 00000400  
    2520 0000cf10     b008          move    a0,*a8(OYPOS)
         0000cf20     00b0  
    2521 0000cf30     0960          rets
    2522                    
    2523                    
    2524 0000cf40           buyin_text
    2525                    
    2526 0000cf40     1a60          movk    ADJFREPL,a0             ;Are we in free play?
    2527 0000cf50     0d5f          calla   GET_ADJ
         0000cf60 00000000! 
    2528 0000cf80     ca47          jrz     lqmxnot_freeply
    2529                    
    2530 0000cf90     09e2          movi    lqmxln0_setup,a2
         0000cfa0 0000dde0' 
    2531 0000cfc0     4d4a          move    a10,a10
    2532 0000cfd0     ca03          jrz     lqmxok2c
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   59

    2533 0000cfe0     09e2          movi    lqmxln0_setupb,a2
         0000cff0 0000de80' 
    2534 0000d010     0d5f  lqmxok2c        calla   setup_message
         0000d020 00000000! 
    2535                    
    2536 0000d040     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d050     0704  
    2537 0000d060     4140          add     a10,a0
    2538 0000d070     0580          move    a0,@mess_objid
         0000d080 00000000! 
    2539                    
    2540 0000d0a0     09e4          movi    lqmxstr_text0,a4
         0000d0b0 0000e6d8' 
    2541 0000d0d0     0d5f          calla   print_string_C2
         0000d0e0 00000000! 
    2542                    
    2543 0000d100     09e2          movi    lqmxln1_setup,a2
         0000d110 0000df20' 
    2544 0000d130     4d4a          move    a10,a10
    2545 0000d140     ca03          jrz     lqmxok
    2546 0000d150     09e2          movi    lqmxln1_setupb,a2
         0000d160 0000dfc0' 
    2547 0000d180     0d5f  lqmxok  calla   setup_message
         0000d190 00000000! 
    2548                    
    2549 0000d1b0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d1c0     0704  
    2550 0000d1d0     4140          add     a10,a0
    2551 0000d1e0     0580          move    a0,@mess_objid
         0000d1f0 00000000! 
    2552                    
    2553 0000d210     09e4          movi    lqmxstr_text,a4
         0000d220 0000e6a0' 
    2554 0000d240     0d5f          calla   print_string_C2
         0000d250 00000000! 
    2555                    
    2556 0000d270     09e2          movi    lqmxln2_setup,a2
         0000d280 0000e060' 
    2557 0000d2a0     4d4a          move    a10,a10
    2558 0000d2b0     ca00          jrz     lqmxok4
         0000d2c0     00a1  
    2559 0000d2d0     09e2          movi    lqmxln2_setupb,a2
         0000d2e0 0000e100' 
    2560 0000d300     0d5f          calla   setup_message
         0000d310 00000000! 
    2561                    
    2562 0000d330     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d340     0704  
    2563 0000d350     4140          add     a10,a0
    2564 0000d360     0580          move    a0,@mess_objid
         0000d370 00000000! 
    2565                    
    2566 0000d390     09e4          movi    lqmxstr_text2,a4
         0000d3a0 0000e728' 
    2567 0000d3c0     0d5f          calla   print_string_C2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   60

         0000d3d0 00000000! 
    2568                    
    2569 0000d3f0     0960          rets
    2570                    
    2571 0000d400           lqmxnot_freeply
    2572 0000d400                   PUSH    a8
    2573 0000d410     19a0          movk    ADJCCONT,a0
    2574 0000d420     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         0000d430 00000000! 
    2575 0000d450     4c03          move    a0,a3
    2576 0000d460     0b40          cmpi    10,a0
         0000d470     fff5  
    2577 0000d480     c401          jrlt    lqmxmax
    2578 0000d490     1920          movk    9,a0
    2579 0000d4a0           lqmxmax
    2580 0000d4a0     24a0          sll     5,a0
    2581 0000d4b0     0b20          addi    digits_tbl,a0
         0000d4c0 0000c870' 
    2582 0000d4e0     8602          move    *a0,a2,L                ;* image
    2583                    
    2584 0000d4f0     09e0          movi    [050,0],a0                      ;x pos
         0000d500 00320000  
    2585 0000d520     0b43          cmpi    1,a3
         0000d530     fffe  
    2586 0000d540     cb03          jrnz    lqmxnot1
    2587 0000d550     09e0          movi    [054,0],a0                      ;x pos
         0000d560 00360000  
    2588 0000d580     4d4a  lqmxnot1        move    a10,a10
    2589 0000d590     ca09          jrz     lqmxzp1
    2590 0000d5a0     09e0          movi    [0122h,0],a0                    ;x pos
         0000d5b0 01220000  
    2591 0000d5d0     0b43          cmpi    1,a3
         0000d5e0     fffe  
    2592 0000d5f0     cb03          jrnz    lqmxzp1
    2593 0000d600     09e0          movi    [0126h,0],a0                    ;x pos
         0000d610 01260000  
    2594 0000d630           lqmxzp1
    2595 0000d630     09e1          movi    [CREDIT_LINE_YPOS,0],a1         ;y pos
         0000d640 006e0000  
    2596 0000d660     09c3          movi    104+200,a3                      ;z pos
         0000d670     0130  
    2597 0000d680     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000d690 0000a002  
    2598 0000d6b0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         0000d6c0     0704  
    2599 0000d6d0     4145          add     a10,a5                          ;object ID
    2600 0000d6e0     56c6          clr     a6                              ;x vel
    2601 0000d6f0     56e7          clr     a7                              ;y vel
    2602 0000d700     09f0          movi    FNT9YEL_P,b0
         0000d710 00000000! 
    2603 0000d730     0d5f          calla   BEGINOBJP
         0000d740 00000000! 
    2604 0000d760                   PULL    a8
    2605                    
    2606 0000d770     09e2          movi    lqmxln3_setup,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   61

         0000d780 0000e420' 
    2607 0000d7a0     4d4a          move    a10,a10
    2608 0000d7b0     ca03          jrz     lqmxok2
    2609 0000d7c0     09e2          movi    lqmxln3_setupb,a2
         0000d7d0 0000e4c0' 
    2610 0000d7f0     0d5f  lqmxok2 calla   setup_message
         0000d800 00000000! 
    2611                    
    2612 0000d820     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d830     0704  
    2613 0000d840     4140          add     a10,a0
    2614 0000d850     0580          move    a0,@mess_objid
         0000d860 00000000! 
    2615                    
    2616 0000d880     09e4          movi    lqmxstr_text3,a4
         0000d890 0000e778' 
    2617 0000d8b0     19a0          movk    ADJCCONT,a0
    2618 0000d8c0     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         0000d8d0 00000000! 
    2619 0000d8f0     0b40          cmpi    1,a0
         0000d900     fffe  
    2620 0000d910     cb03          jrnz    lqmxnot1b
    2621 0000d920     09e4          movi    lqmxstr_text3b,a4
         0000d930 0000e7c8' 
    2622 0000d950           lqmxnot1b
    2623 0000d950     0d5f          calla   print_string_C2
         0000d960 00000000! 
    2624                    
    2625 0000d980     09e2          movi    lqmxln4_setup,a2
         0000d990 0000e560' 
    2626 0000d9b0     4d4a          move    a10,a10
    2627 0000d9c0     ca03          jrz     lqmxok2B
    2628 0000d9d0     09e2          movi    lqmxln4_setupb,a2
         0000d9e0 0000e600' 
    2629 0000da00     0d5f  lqmxok2B        calla   setup_message
         0000da10 00000000! 
    2630                    
    2631 0000da30     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000da40     0704  
    2632 0000da50     4140          add     a10,a0
    2633 0000da60     0580          move    a0,@mess_objid
         0000da70 00000000! 
    2634                    
    2635 0000da90     09e4          movi    lqmxstr_text4,a4
         0000daa0 0000e810' 
    2636 0000dac0     0d5f          calla   print_string_C2
         0000dad0 00000000! 
    2637                    
    2638                    
    2639 0000daf0     09e2          movi    lqmxln1_setupx,a2
         0000db00 0000e1a0' 
    2640 0000db20     4d4a          move    a10,a10
    2641 0000db30     ca03          jrz     lqmxok3
    2642 0000db40     09e2          movi    lqmxln1_setupxb,a2
         0000db50 0000e240' 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   62

    2643 0000db70     0d5f  lqmxok3 calla   setup_message
         0000db80 00000000! 
    2644                    
    2645 0000dba0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000dbb0     0704  
    2646 0000dbc0     4140          add     a10,a0
    2647 0000dbd0     0580          move    a0,@mess_objid
         0000dbe0 00000000! 
    2648                    
    2649 0000dc00     09e4          movi    lqmxstr_text,a4
         0000dc10 0000e6a0' 
    2650 0000dc30     0d5f          calla   print_string_C2
         0000dc40 00000000! 
    2651                    
    2652 0000dc60     09e2          movi    lqmxln2_setupx,a2
         0000dc70 0000e2e0' 
    2653 0000dc90     4d4a          move    a10,a10
    2654 0000dca0     ca03          jrz     lqmxok4
    2655 0000dcb0     09e2          movi    lqmxln2_setupxb,a2
         0000dcc0 0000e380' 
    2656 0000dce0     0d5f  lqmxok4 calla   setup_message
         0000dcf0 00000000! 
    2657                    
    2658 0000dd10     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000dd20     0704  
    2659 0000dd30     4140          add     a10,a0
    2660 0000dd40     0580          move    a0,@mess_objid
         0000dd50 00000000! 
    2661                    
    2662 0000dd70     09e4          movi    lqmxstr_text2,a4
         0000dd80 0000e728' 
    2663 0000dda0     0d5f          calla   print_string_C2
         0000ddb0 00000000! 
    2664                    
    2665 0000ddd0     0960          rets
    2666                    
    2667                            .if 1
    2668 0000dde0           lqmxln0_setup
    2669 0000dde0                   JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    2670 0000de80           lqmxln0_setupb
    2671 0000de80                   JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    2672                    
    2673 0000df20           lqmxln1_setup
    2674 0000df20                   JAM_STR font9_ascii,8,0,81,80,FNT9WHT_P,0
    2675 0000dfc0           lqmxln1_setupb
    2676 0000dfc0                   JAM_STR font9_ascii,8,0,321,80,FNT9WHT_P,0
    2677                    
    2678 0000e060           lqmxln2_setup
    2679 0000e060                   JAM_STR font9_ascii,8,0,81,95,FNT9WHT_P,0
    2680 0000e100           lqmxln2_setupb
    2681 0000e100                   JAM_STR font9_ascii,8,0,321,95,FNT9WHT_P,0
    2682                    
    2683 0000e1a0           lqmxln1_setupx
    2684 0000e1a0                   JAM_STR font9_ascii,8,0,81,60,FNT9WHT_P,0
    2685 0000e240           lqmxln1_setupxb
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   63

    2686 0000e240                   JAM_STR font9_ascii,8,0,321,60,FNT9WHT_P,0
    2687                    
    2688 0000e2e0           lqmxln2_setupx
    2689 0000e2e0                   JAM_STR font9_ascii,8,0,81,75,FNT9WHT_P,0
    2690 0000e380           lqmxln2_setupxb
    2691 0000e380                   JAM_STR font9_ascii,8,0,321,75,FNT9WHT_P,0
    2692                    
    2693                    
    2694 0000e420           lqmxln3_setup
    2695 0000e420                   JAM_STR font9_ascii,8,0,81,110,FNT9YEL_P,0
    2696 0000e4c0           lqmxln3_setupb
    2697 0000e4c0                   JAM_STR font9_ascii,8,0,321,110,FNT9YEL_P,0
    2698                    
    2699 0000e560           lqmxln4_setup
    2700 0000e560                   JAM_STR font9_ascii,8,0,81,125,FNT9YEL_P,0
    2701 0000e600           lqmxln4_setupb
    2702 0000e600                   JAM_STR font9_ascii,8,0,321,125,FNT9YEL_P,0
    2703                    
    2704                            .else
    2705                    
    2706                    lqmxln0_setup                                           ; FREE PLAY
    2707                            JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    2708                    lqmxln0_setupb
    2709                            JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    2710                    
    2711                    lqmxln1_setup                                           ; PLEASE
    2712                            JAM_STR font9_ascii,8,0,81,80,FNT9WHT_P,0
    2713                    lqmxln1_setupb
    2714                            JAM_STR font9_ascii,8,0,321,80,FNT9WHT_P,0
    2715                    
    2716                    lqmxln2_setup                                           ; DIGIT
    2717                            JAM_STR font9_ascii,8,0,81,95,FNT9WHT_P,0
    2718                    lqmxln2_setupb
    2719                            JAM_STR font9_ascii,8,0,321,95,FNT9WHT_P,0
    2720                    
    2721                    lqmxln1_setupx                                          ; PLEASE
    2722                            JAM_STR font9_ascii,8,0,81,PLEASE_YPOS,FNT9WHT_P,0
    2723                    lqmxln1_setupxb
    2724                            JAM_STR font9_ascii,8,0,321,PLEASE_YPOS,FNT9WHT_P,0
    2725                    
    2726                    lqmxln2_setupx                                          ; CONTINUE
    2727                            JAM_STR font9_ascii,8,0,81,CONTINUE_YPOS,FNT9WHT_P,0
    2728                    lqmxln2_setupxb
    2729                            JAM_STR font9_ascii,8,0,321,CONTINUE_YPOS,FNT9WHT_P,0
    2730                    
    2731                    
    2732                    lqmxln3_setup                                           ; CREDITS
    2733                            JAM_STR font9_ascii,8,0,81,CREDIT_LINE_YPOS,FNT9YEL_P,0
    2734                    lqmxln3_setupb
    2735                            JAM_STR font9_ascii,8,0,321,CREDIT_LINE_YPOS,FNT9YEL_P,0
    2736                    
    2737                    lqmxln4_setup                                           ; TO CONTINUE
    2738                            JAM_STR font9_ascii,8,0,81,TO_CONTINUE_YPOS,FNT9YEL_P,0
    2739                    lqmxln4_setupb
    2740                            JAM_STR font9_ascii,8,0,321,TO_CONTINUE_YPOS,FNT9YEL_P,0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   64

    2741                            .endif
    2742                    
    2743                    
    2744 0000e6a0           lqmxstr_text
    2745 0000e6a0       50          .string "PLEASE",0
    2746 0000e6d8           lqmxstr_text0
    2747 0000e6d8       46          .string "FREE PLAY",0
    2748 0000e728           lqmxstr_text2
    2749 0000e728       43          .string "CONTINUE!",0
    2750 0000e778           lqmxstr_text3
    2751 0000e778       20          .string "  CREDITS",0
    2752 0000e7c8           lqmxstr_text3b
    2753 0000e7c8       20          .string "  CREDIT",0
    2754 0000e810           lqmxstr_text4
    2755 0000e810       54          .string "TO CONTINUE",0
    2756 0000e870                   .even
    2757                    
    2758                    
    2759                    
    2760                            .ref    AUD1
    2761                            .ref    GET_CREDITS
    2762                            .ref    get_start_down
    2763                            .ref    get_but_val_cur
    2764                    
    2765              0009  lqmxcont_timer  .equ    9
    2766              0019  lqmxresets_allowed      .equ    25              ;People whack on button to reset
    2767                    
    2768 0000e870            SUBRP  buyin_counter
    2769                    
    2770 0000e870     05a0          move    @rr_loss,a0
         0000e880 00000220- 
    2771 0000e8a0     ca07          jrz     not_rr1
    2772 0000e8b0     05a0          move    @cursor_procs,a0
         0000e8c0 00000210- 
    2773 0000e8e0     1020          inc     a0
    2774 0000e8f0     0580          move    a0,@cursor_procs
         0000e900 00000210- 
    2775 0000e920           not_rr1
    2776                    
    2777 0000e920     b14d          move    a10,*a13(PDATA+16)      ;0 or 1
         0000e930     0110  
    2778                    
    2779 0000e940     09c0          movi    AUD_CONTOFF,a0          ;increment the offered audit
         0000e950     002c  
    2780 0000e960     0d5f          calla   AUD1
         0000e970 00000000! 
    2781                    
    2782 0000e990     09c7          movi    lqmxresets_allowed,a7
         0000e9a0     0019  
    2783                    
    2784 0000e9b0     c005          jruc    lqmxloop_start
    2785                    
    2786 0000e9c0           lqmxcoin_loop_reset
    2787 0000e9c0     09c7          movi    lqmxresets_allowed,a7
         0000e9d0     0019  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   65

    2788                    
    2789 0000e9e0           lqmxloop_reset
    2790 0000e9e0     0d5f          calla   DELOBJA8
         0000e9f0 00000000! 
    2791                    
    2792 0000ea10           lqmxloop_start
    2793 0000ea10     0d5f          calla   GET_CREDITS
         0000ea20 00000000! 
    2794 0000ea40     4c06          move    a0,a6
    2795                    
    2796 0000ea50                   PUSH    a6,a7
    2797 0000ea70     09e0          movi    [080,0],a0                      ;x pos
         0000ea80 00500000  
    2798 0000eaa0     b5aa          move    *a13(PDATA+16),a10
         0000eab0     0110  
    2799 0000eac0     4d4a          move    a10,a10
    2800 0000ead0     ca03          jrz     lqmxp1
    2801 0000eae0     09e0          movi    [0320,0],a0                     ;x pos
         0000eaf0 01400000  
    2802 0000eb10           lqmxp1
    2803 0000eb10     09e1          movi    [TIMER_YPOS,0],a1               ;y pos
         0000eb20 00d00000  
    2804 0000eb40     09e2          movi    FNT9_9,a2                       ;* image
         0000eb50 00000000! 
    2805 0000eb70     09c3          movi    104+200,a3                      ;z pos
         0000eb80     0130  
    2806 0000eb90     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000eba0 0000a002  
    2807 0000ebc0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         0000ebd0     0704  
    2808 0000ebe0     4145          add     a10,a5
    2809 0000ebf0     56c6          clr     a6                              ;x vel
    2810 0000ec00     56e7          clr     a7                              ;y vel
    2811 0000ec10     09f0          movi    FNT9WHT_P,b0
         0000ec20 00000000! 
    2812 0000ec40     0d5f          calla   BEGINOBJP
         0000ec50 00000000! 
    2813 0000ec70                   PULL    a6,a7
    2814                    
    2815 0000ec90     05a9          move    @PSTATUS2,a9
         0000eca0 00000000! 
    2816 0000ecc0     09ca          movi    TSEC*2,a10
         0000ecd0     006a  
    2817 0000ece0     09cb          movi    lqmxcont_timer,a11
         0000ecf0     0009  
    2818                    
    2819 0000ed00           lqmxloop
    2820 0000ed00                   PUSHP   a6,a7
    2821 0000ed20                   SLEEPK  1
    2822 0000ed60                   PULLP   a6,a7
    2823                    
    2824 0000ed80     05ae          move    @PSTATUS2,a14
         0000ed90 00000000! 
    2825 0000edb0     b5a0          move    *a13(PDATA+16),a0
         0000edc0     0110  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   66

    2826 0000edd0     4a0e          btst    a0,a14
    2827 0000ede0     cb47          jrne    lqmxbuyin
    2828                    
    2829 0000edf0     0d5f          calla   GET_CREDITS
         0000ee00 00000000! 
    2830 0000ee20     4806          cmp     a0,a6
    2831 0000ee30     cbb8          jrne    lqmxcoin_loop_reset
    2832                    
    2833 0000ee40     4ce7          move    a7,a7
    2834 0000ee50     ca11          jrz     lqmxskip_start_check
    2835                    
    2836 0000ee60     b5a0          move    *a13(PDATA+16),a0
         0000ee70     0110  
    2837 0000ee80     0d5f          calla   get_start_down
         0000ee90 00000000! 
    2838 0000eeb0     4c00          move    a0,a0
    2839 0000eec0     cb36          jrnz    lqmxstart_hit
    2840                    
    2841 0000eed0     b5a0          move    *a13(PDATA+16),a0
         0000eee0     0110  
    2842 0000eef0     0bc0          xori    1,a0
         0000ef00 00000001  
    2843 0000ef20     0d5f          calla   get_start_down
         0000ef30 00000000! 
    2844 0000ef50     4c00          move    a0,a0
    2845 0000ef60     cb2c          jrnz    lqmxstart_hit
    2846                    
    2847 0000ef70           lqmxskip_start_check
    2848                    
    2849                    
    2850                    
    2851 0000ef70     b5a0          move    *a13(PDATA+16),a0
         0000ef80     0110  
    2852 0000ef90     0d5f          calla   get_but_val_down
         0000efa0 00000000! 
    2853 0000efc0     4c00          move    a0,a0
    2854 0000efd0     cb20          jrnz    lqmxnew_button_press
    2855                    
    2856 0000efe0     b5a0          move    *a13(PDATA+16),a0
         0000eff0     0110  
    2857 0000f000     0d5f          calla   get_but_val_cur
         0000f010 00000000! 
    2858 0000f030     4c00          move    a0,a0
    2859 0000f040     cb1b          jrnz    lqmxold_button_press
    2860                    
    2861 0000f050     0d8a          dsj     a10,lqmxloop
         0000f060     ffc9  
    2862                    
    2863 0000f070           lqmxsec_elapsed
    2864 0000f070     142b          dec     a11
    2865 0000f080     ca44          jrz     lqmxtimeout
    2866 0000f090     09ca          movi    TSEC*2,a10
         0000f0a0     006a  
    2867                    
    2868 0000f0b0     4d6e          move    a11,a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   67

    2869 0000f0c0                   X32     a14
    2870 0000f0d0     0b2e          addi    digits_tbl,a14
         0000f0e0 0000c870' 
    2871 0000f100     87c0          move    *a14,a0,L
    2872 0000f110     0d5f          calla   civanic
         0000f120 00000000! 
    2873                    
    2874 0000f140     4d6e          move    a11,a14
    2875 0000f150     0d3f          callr   setup_clock_sound
         0000f160     0001  
    2876                    
    2877 0000f170     c0b8          jruc    lqmxloop
    2878                    
    2879 0000f180           setup_clock_sound
    2880 0000f180     09c0          movi    0AH,a0
         0000f190     000a  
    2881 0000f1a0     0d5f          calla   triple_sound
         0000f1b0 00000000! 
    2882 0000f1d0     0960          rets
    2883                    
    2884                    
    2885                    
    2886 0000f1e0           lqmxnew_button_press
    2887 0000f1e0     574a          clr     a10
    2888 0000f1f0     c0e7          jruc    lqmxsec_elapsed
    2889                    
    2890 0000f200           lqmxold_button_press
    2891 0000f200     168a          subk    20,a10
    2892 0000f210     c1ae          jrp     lqmxloop
    2893 0000f220     c0e4          jruc    lqmxsec_elapsed
    2894                    
    2895 0000f230           lqmxstart_hit
    2896 0000f230     1427          dec     a7
    2897 0000f240     c000          jruc    lqmxloop_reset
         0000f250     ff78  
    2898                    
    2899 0000f260           lqmxbuyin
    2900 0000f260     05ae          move    @rr_loss,a14
         0000f270 00000220- 
    2901 0000f290     ca19          jrz     lqmxno_rr_loss
    2902 0000f2a0     b5ae          move    *a13(PDATA+16),a14
         0000f2b0     0110  
    2903 0000f2c0     102e          addk    1,a14
    2904 0000f2d0     03ee          not     a14
    2905 0000f2e0     05a0          move    @OLD_PSTATUS2,a0
         0000f2f0 00000000! 
    2906 0000f310     51c0          and     a14,a0
    2907 0000f320     05ae          move    @cursor_procs,a14
         0000f330 00000210- 
    2908 0000f350     142e          dec     a14
    2909 0000f360     058e          move    a14,@cursor_procs
         0000f370 00000210- 
    2910 0000f390     4dce          move    a14,a14
    2911 0000f3a0     cb03          jrnz    lqmxno_cp
    2912 0000f3b0     058e          move    a14,@active_flag
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   68

         0000f3c0 00000090- 
    2913 0000f3e0     57ce  lqmxno_cp       clr     a14
    2914 0000f3f0     058e          move    a14,@rr_loss            ;don't care about this anymore
         0000f400 00000220- 
    2915 0000f420     c001          jruc    lqmxok2_1
    2916 0000f430           lqmxno_rr_loss
    2917 0000f430     5600          clr     a0      ; ORG
    2918 0000f440           lqmxok2_1
    2919 0000f440     0580          move    a0,@OLD_PSTATUS
         0000f450 00000000! 
    2920 0000f470     0580          move    a0,@blow_out
         0000f480 000000c0- 
    2921                    
    2922 0000f4a0                   DIE
    2923                    
    2924 0000f4d0           lqmxtimeout
    2925 0000f4d0     05ae          move    @rr_loss,a14
         0000f4e0 00000220- 
    2926 0000f500     ca10          jrz     lqmxno_rr_loss1
    2927 0000f510     b5ae          move    *a13(PDATA+16),a14
         0000f520     0110  
    2928 0000f530     102e          addk    1,a14
    2929 0000f540     03ee          not     a14
    2930 0000f550     05a0          move    @OLD_PSTATUS2,a0
         0000f560 00000000! 
    2931 0000f580     51c0          and     a14,a0
    2932 0000f590     05ae          move    @cursor_procs,a14
         0000f5a0 00000210- 
    2933 0000f5c0     142e          dec     a14
    2934 0000f5d0     058e          move    a14,@cursor_procs
         0000f5e0 00000210- 
    2935 0000f600     c001          jruc    lqmxok1
    2936 0000f610           lqmxno_rr_loss1
    2937 0000f610     5600          clr     a0      ;ORG
    2938 0000f620           lqmxok1
    2939 0000f620     0580          move    a0,@OLD_PSTATUS
         0000f630 00000000! 
    2940 0000f650     05a0          move    @rr_loss,a0
         0000f660 00000220- 
    2941 0000f680     ca04          jrz     lqmxdo_end
    2942 0000f690     4dce          move    a14,a14
    2943 0000f6a0     ca02          jrz     lqmxdo_end
    2944 0000f6b0     5600          clr     a0
    2945 0000f6c0     c001          jruc    lqmxset_it
    2946 0000f6d0           lqmxdo_end
    2947                    
    2948 0000f6d0     1820          movk    1,a0
    2949 0000f6e0           lqmxset_it
    2950 0000f6e0     0580          move    a0,@blow_out
         0000f6f0 000000c0- 
    2951                    
    2952 0000f710                   DIE
    2953                    
    2954 0000f740           auto_str
    2955 0000f740                   JAM_STR font9_ascii,10,0,200,19,FNT9WHT_P,print_string_C2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:54 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   69

    2956 0000f7e0       41          .string "AUTO INITIALS",0
    2957 0000f850                   .even
    2958                    
    2959                    
    2960                            .end

 No Errors,  No Warnings
