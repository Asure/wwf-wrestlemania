TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:     Jason Skiles
       4                    * Initiated:    1066, shortly after the Battle of Hastings
       5                    *
       6                    * COPYRIGHT (C) 1993 WILLIAMS ELECTRONICS GAMES, INC.
       7                    *
       8                    *.Last mod - 11/22/93 14:24
       9                    **************************************************************
      10                    
      11                            .file   "select.asm"
      13                            .width  132
      14                            .option b,d,l,t
      15                            .mnolist
      16                    
      17                    
      18                            .include        "mproc.equ"             ;Mproc equates
      19                            .include        "display.equ"           ;Display proc equates
      20                            .include        "gsp.equ"               ;Gsp asm equates
      21                            .include        "sys.equ"
      22                            .include        "game.equ"
      23                            .include        "audit.equ"
      24                            .include        "macros.h"
      25                            .include        "link.equ"
      26                            .include        "sound.h"
      27                            .include        "plyr.equ"
      28                            .INCLUDE        "SOUND.EQU"
      29                    
      30                            .include        "fontsimg.glo"
      31                            .include        "bgndtbl.glo"
      32                            .include        "imgtbl.glo"
      33                            .include        "miscimg.glo"
      34                            .include        "ropeimg.glo"
      35                    
      36                    *****************************************************************************
      37                    
      38                            .ref    current_round
      39                            .ref    DO_BEATEN_GAME
      40                    
      41                            .def    howard_wins,digits_tbl,calc_match_time_1
      42                            .def    num_wrestlers,wrestler_mugs
      43                    
      44                            .def    wrestler_attributes,attbars
      45                            .def    wrestler_mugs2,wrestler_audits
      46                    
      47                            .ref    ADD_VOICE,BAKMODS,BCDBIN,BEGINOBJ_TBL,BGND_UD1
      48                            .ref    BINBCD,change_image,CHECK_SCORE,civanic
      49                            .ref    CLOSE_PROGRESS_SCREEN,CLOSE_SCREEN_LINE,CR_STRTP
      50                            .ref    CURRENT_ANN_QUEUE,DONE_HOWARD,do_that_cycle,dpageflip
      51                            .ref    entered_inits,FADE_MASTER_VOL,FIND_LOW_TABLE_LEVEL
      52                            .ref    GET_ADJ,get_but_val_down,get_process_ptr,get_start_cur
      53                            .ref    get_stick_val_cur,get_stick_val_down,match_time
      54                            .ref    NEXT_ANN_QUEUE,no_pin_check,PCNT,pin_speed_check
      55                            .ref    PIN_SPEED_TAB,OLD_PSTATUS2,PSTATUS,PSTATUS2,PUT_UP_PROGRESS,RNDPER,RNDRNG0
      56                            .ref    SPECIAL_WIPEOUT,start_credbox
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    2

      57                            .ref    NEXT_IN_LADDER,INIT_LADDER_TABLE
      58                            .ref    NUM_OF_OPPS,CURRENT_LADDER,get_all_buttons_cur2
      59                            .ref    print_message,osgemd_ascii,is_final_match
      60                            .ref    UNIT_CLR,attract_mode,round_start_time,round_end_time
      61                            .REF    set_volume
      62                            .REF    belt_type
      63                    
      64                            .if DEBUG
      65                            .ref    stay_down
      66                            .endif
      67                    
      68                            .ref    total_matches
      69                            .ref    triple_sound,winstreak_check,WIPEOUT,wmania_tune
      70                            .ref    print_beaten
      71                            .ref    print_inter
      72                            .ref    GET_AUD
      73                            .ref    match_cnt
      74                            .ref    show_bonus_icons
      75                            .ref    clear_icon_total
      76                            .ref    del_bonus_icons
      77                    
      78                            .ref    wgsf24_ascii
      79                            .REF    royal_rumble
      80                            .REF    DO_TAG_GAME
      81                            .ref    print_tag
      82                            .ref    hscore_colcyc
      83                            .ref    hscore_colcyc2
      84                            .ref    font9_ascii,FNT9WHT_P,auto_init
      85                    
      86                    *****************************************************************************
      87                    
      88 00000000                   BSSX    MATCH_TIMERS,64
      89 00000000                   bssx    which_player,32
      90                    
      91 00000000                   BSSX    index1,         16      ;player 1 cursor position
      92 00000000                   BSSX    index2,         16      ;player 2 cursor position
      93 00000080                   .bss    time_out,       16      ;time out flag
      94 00000000                   BSSX    active_flag,    16      ;0:player 1 active, 1:player 2 active
      95                    
      96 000000a0                   .bss    kp_p1cursor,    32
      97 000000c0                   .bss    blow_out,       16      ;Flag for not delaying after no buyin
      98 000000d0                   .BSS    SPEECH_STARTED, 16
      99                    
     100                    
     101 00000000                   bssx    match_time_bcd,32
     102                    
     103 00000000                   bssx    are_we_waiting_f,32
     104                    ;       BSSX    player_pal_pref,116*2
     105 00000000                   BSSX    player_pal_pref,120*2
     106 00000210                   .BSS    TEMP_PSTATUS,16         ;AM check if it goes here. edit: it does!
     107 00000220                   .bss    cursor_procs,16
     108 00000000                   BSSX    rr_loss,16
     109                    *       .BSS    TEMP_PSTATUS,16
     110                    
     111                    *****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    3

     112                    
     113              0009  num_wrestlers   EQU     9
     114                    
     115 00000000     0032          .word   AUD_SNDERR4,AUD_SNDERR4,AUD_SNDERR4,AUD_SNDERR4
     116 00000040           wrestler_audits
     117 00000040     0033          .word   AUD_BHART,AUD_BHARTHW,AUD_BHARTC,AUD_BHARTCW
     118 00000080     0034          .word   AUD_RRAMO,AUD_RRAMOHW,AUD_RRAMOC,AUD_RRAMOCW
     119 000000c0     0035          .word   AUD_UNDER,AUD_UNDERHW,AUD_UNDERC,AUD_UNDERCW
     120 00000100     0036          .word   AUD_YOKO,AUD_YOKOHW,AUD_YOKOC,AUD_YOKOCW
     121 00000140     0037          .word   AUD_SMICH,AUD_SMICHHW,AUD_SMICHC,AUD_SMICHCW
     122 00000180     0038          .word   AUD_BBBIG,AUD_BBBIGHW,AUD_BBBIGC,AUD_BBBIGCW
     123 000001c0     0039          .word   AUD_DCLOW,AUD_DCLOWHW,AUD_DCLOWC,AUD_DCLOWCW
     124 00000200     0000          .word   0,0,0,0
     125 00000240     003b          .word   AUD_LLUGE,AUD_LLUGEHW,AUD_LLUGEC,AUD_LLUGECW
     126 00000280           wrestler_auditsX
     127                    
     128                    *****************************************************************************
     129                    
     130              002d  PLEASE_YPOS             .equ    45
     131              00ca  CONTINUE_YPOS           .equ    PLEASE_YPOS+157
     132              006e  CREDIT_LINE_YPOS        .equ    110
     133              00d0  TIMER_YPOS              .equ    208
     134              007d  TO_CONTINUE_YPOS        .equ    CREDIT_LINE_YPOS+15
     135                    
     136                    *****************************************************************************
     137                    
     138                            .ref    OLD_PSTATUS
     139                            .ref    CR_CONTP
     140                            .ref    GAMSTATE
     141                    ;       .ref    secret_damage
     142                    
     143                    *******************************
     144                    
     145 00000280                   STRUCTPD
     146 00000280                   LONG    cursorimg               ;UHL cursor *img
     147 00000280                   LONG    hiliteimg               ;UHL hilite letter *img
     148 00000280                   WORD    stick                   ;UHW stick to read
     149 00000280                   LONG    which_tab
     150 00000280                   LONG    which_entry
     151 00000280                   LONG    which_level
     152                    
     153 00000280            SUBR   GAME_BEATEN
     154                    
     155                            ;kill the ladder
     156 00000280     0d5f          calla   INIT_LADDER_TABLE
         00000290 00000000! 
     157                    
     158 000002b0     18c0          MOVK    INPARTY,A0
     159 000002c0     0580          MOVE    A0,@GAMSTATE
         000002d0 00000000! 
     160 000002f0     09c3          MOVI    998,A3
         00000300     03e6  
     161 00000310     0d5f          CALLA   SNDSND
         00000320 00000000! 
     162 00000340     09c0          movi    2,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    4

         00000350     0002  
     163 00000360     0d5f          calla   RNDRNG0
         00000370 00000000! 
     164 00000390     4c03          move    a0,a3
     165 000003a0     11e3          addk    0fh,a3
     166 000003b0     0d5f          calla   SNDSND
         000003c0 00000000! 
     167                    
     168 000003e0     18ab          MOVK    5,A11
     169 000003f0     09c8          MOVI    32,A8
         00000400     0020  
     170 00000410                   CREATE  FADE_PID,FADE_MASTER_VOL
     171                    
     172 00000490     0d5f          calla   WIPEOUT
         000004a0 00000000! 
     173 000004c0     1820          movk    1,a0                    ;page flipping on
     174 000004d0     0580          move    a0,@dpageflip
         000004e0 00000000! 
     175 00000500     0d5f          calla   start_credbox
         00000510 00000000! 
     176 00000530     09e0          movi    plyrsel_mod,a0
         00000540 00003f30' 
     177 00000560     0780          move    a0,@BAKMODS,L
         00000570 00000000! 
     178 00000590     0d5f          calla   BGND_UD1                ;create objects for background
         000005a0 00000000! 
     179 000005c0     57ce          clr     a14
     180 000005d0     058e          move    a14,@time_out
         000005e0 00000080- 
     181                    
     182 00000600                   CREATE  CROUTON_PID,display_croutons
     183                    
     184 00000680     05aa          MOVE    @royal_rumble,A10
         00000690 00000000! 
     185 000006b0     cb00          JRNZ    WE_PLAYED_A_TAG_TEAM
         000006c0     009e  
     186                    
     187 000006d0     05aa          move    @PSTATUS,A10
         000006e0 00000000! 
     188 00000700     2fea          srl     1,a10
     189 00000710     4d48          move    a10,a8
     190                    
     191 00000720     4d01          MOVE    a8,a1
     192 00000730     24a1          sll     5,a1
     193 00000740     4d02          move    a8,a2
     194 00000750     2482          sll     4,a2
     195 00000760     4041          add     a2,a1
     196 00000770     0b21          addi    entered_inits,a1
         00000780 00000000! 
     197 000007a0     5642          clr     a2
     198 000007b0     9241          move    a2,*a1+,L
     199 000007c0     8041          move    a2,*a1
     200                    
     201 000007d0                   push    a10
     202 000007e0     5621          clr     a1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    5

     203 000007f0     4d4a          move    a10,a10
     204 00000800     cb01          jrnz    which_playr_set
     205 00000810     1821          movk    1,a1
     206 00000820           which_playr_set
     207 00000820     4c2a          move    a1,a10
     208 00000830                   CREATE  PCURSOR_PID,player_cursor
     209                    
     210 000008b0                   pull    a10
     211 000008c0                   push    a10
     212                    
     213 000008d0                   JSRP    DO_BEATEN_GAME
     214 00000940                   pull    a10
     215                    
     216 00000950           are_we_waiting4
     217 00000950     4d40          move    a10,a0
     218 00000960     0b00          addi    HI_INPUT_PID,a0
         00000970     0137  
     219 00000980     09c1          movi    -1,a1
         00000990     ffff  
     220 000009a0     0d5f          calla   EXISTP
         000009b0 00000000! 
     221 000009d0     ca1e          JRZ     no_need_for_inputb
     222 000009e0                   sleep   1
     223 00000a30     09c0          movi    CYCPID,a0
         00000a40     0110  
     224 00000a50     09c1          movi    -1,a1
         00000a60     ffff  
     225 00000a70     0d5f          calla   EXISTP
         00000a80 00000000! 
     226 00000aa0     cbea          jrnz    are_we_waiting4
     227 00000ab0     4d40          move    a10,a0
     228 00000ac0     0b00          addi    HI_INPUT_PID,a0
         00000ad0     0137  
     229 00000ae0     09c1          movi    -1,a1
         00000af0     ffff  
     230 00000b00     0d5f          calla   EXISTP
         00000b10 00000000! 
     231 00000b30     ca08          JRZ     no_need_for_inputb
     232 00000b40     098f          mmtm    sp,a10,a9,a8
         00000b50     00e0  
     233 00000b60     0d5f          calla   do_that_cycle
         00000b70 00000000! 
     234 00000b90     09af          mmfm    sp,a10,a9,a8
         00000ba0     0700  
     235 00000bb0     c0d9          jruc    are_we_waiting4
     236                    
     237 00000bc0           no_need_for_inputb
     238                    
     239 00000bc0     0d5f          CALLA   WIPEOUT
         00000bd0 00000000! 
     240 00000bf0     1820          movk    1,a0                    ;page flipping on
     241 00000c00     0580          move    a0,@dpageflip
         00000c10 00000000! 
     242 00000c30     09e0          movi    hstd_mod,a0
         00000c40 00001790' 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    6

     243 00000c60     0780          move    a0,@BAKMODS,L
         00000c70 00000000! 
     244 00000c90     0d5f          CALLA   BGND_UD1                ;create objects for background
         00000ca0 00000000! 
     245                    
     246 00000cc0     09c0          movi    AUD_BEATEN,A0
         00000cd0     0059  
     247 00000ce0     05a1          MOVE    @belt_type,a1
         00000cf0 00000000! 
     248 00000d10     cb02          jrnz    got_right_audit
     249 00000d20     09c0          MOVI    AUD_INTER,A0
         00000d30     005a  
     250 00000d40           got_right_audit
     251 00000d40     0d5f          calla   GET_AUD
         00000d50 00000000! 
     252 00000d70     0be1          SUBI    1,A1
         00000d80     fffe  
     253 00000d90     0b41          CMPI    1,A1
         00000da0     fffe  
     254 00000db0     c501          JRGE    NO_PROBLEM
     255 00000dc0     1821          MOVK    1,A1
     256 00000dd0           NO_PROBLEM
     257 00000dd0     0b41          CMPI    48,A1
         00000de0     ffcf  
     258 00000df0     c602          JRLE    NO_PROBLEM2
     259 00000e00     09c1          MOVI    48,A1
         00000e10     0030  
     260 00000e20           NO_PROBLEM2
     261 00000e20     4c25          MOVE    A1,A5
     262                    
     263 00000e30     05a1          MOVE    @belt_type,a1
         00000e40 00000000! 
     264 00000e60     cb0f          jrnz    DISPLAY_RIGHT_TABLE
     265 00000e70                   JSRP    print_inter
     266                    
     267 00000ee0                   SLEEP   TSEC*7
     268 00000f30                   RETP
     269                    
     270 00000f60           DISPLAY_RIGHT_TABLE
     271 00000f60                   JSRP    print_beaten
     272 00000fd0     0d5f          calla   hscore_colcyc
         00000fe0 00000000! 
     273 00001000     0d5f          calla   hscore_colcyc2
         00001010 00000000! 
     274                    
     275 00001030                   SLEEP   TSEC*7
     276 00001080                   RETP
     277                    
     278 000010b0           WE_PLAYED_A_TAG_TEAM
     279                    
     280 000010b0     07a9          move    @MATCH_TIMERS,a9,L
         000010c0 00000000- 
     281 000010e0     c106          jrp     time_ok
     282 000010f0     07a9          move    @MATCH_TIMERS+20h,a9,L
         00001100 00000020- 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    7

     283 00001120     cb02          jrnz    time_ok
     284                    
     285                            .if DEBUG
     286                            LOCKUP  ;bogus timer value
     287                            .endif
     288 00001130     09c9          movi    12340,a9                ;123.4 seconds if the value is bogus
         00001140     3034  
     289 00001150           time_ok
     290                    
     291 00001150     574a          CLR     A10
     292 00001160     078a          MOVE    A10,@entered_inits,L
         00001170 00000000! 
     293 00001190     078a          MOVE    A10,@entered_inits+32,L
         000011a0 00000020! 
     294 000011c0     078a          MOVE    A10,@entered_inits+64,L
         000011d0 00000040! 
     295 000011f0     5708          clr     a8
     296                    
     297 00001200                   JSRP    DO_TAG_GAME
     298                    
     299 00001270     182a          MOVK    1,A10
     300 00001280     4d48          MOVE    A10,A8
     301 00001290                   JSRP    DO_TAG_GAME
     302                    
     303 00001300           are_we_waiting5
     304 00001300                   sleep   1
     305                    
     306 00001350     09c0          movi    CYCPID,a0
         00001360     0110  
     307 00001370     09c1          movi    -1,a1
         00001380     ffff  
     308 00001390     0d5f          calla   EXISTP
         000013a0 00000000! 
     309 000013c0     cb03          jrnz    are_we_waiting6
     310                    
     311 000013d0     0d5f          calla   do_that_cycle
         000013e0 00000000! 
     312 00001400           are_we_waiting6
     313 00001400     09c0          movi    HI_INPUT_PID,a0
         00001410     0137  
     314 00001420     09c1          movi    -1,a1
         00001430     ffff  
     315 00001440     0d5f          calla   EXISTP
         00001450 00000000! 
     316 00001470     cbe8          JRNZ    are_we_waiting5
     317 00001480     09c0          movi    HI_INPUT_PID+1,a0
         00001490     0138  
     318 000014a0     09c1          movi    -1,a1
         000014b0     ffff  
     319 000014c0     0d5f          calla   EXISTP
         000014d0 00000000! 
     320 000014f0     cbe0          JRNZ    are_we_waiting5
     321 00001500           no_need_for_inputc
     322                            .if RR_AWARD = 1
     323 00001500     05ae          move    @royal_rumble,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    8

         00001510 00000000! 
     324 00001530     cb22          jrnz    no_scores
     325                            .endif
     326                    
     327                    
     328 00001540     0d5f          CALLA   WIPEOUT
         00001550 00000000! 
     329 00001570     1820          movk    1,a0                    ;page flipping on
     330 00001580     0580          move    a0,@dpageflip
         00001590 00000000! 
     331 000015b0     09e0          movi    hstd_mod,a0
         000015c0 00001790' 
     332 000015e0     0780          move    a0,@BAKMODS,L
         000015f0 00000000! 
     333 00001610     0d5f          CALLA   BGND_UD1                ;create objects for background
         00001620 00000000! 
     334                    
     335 00001640                   JSRP    print_tag
     336                    
     337 000016b0     0d5f          calla   hscore_colcyc
         000016c0 00000000! 
     338 000016e0     0d5f          calla   hscore_colcyc2
         000016f0 00000000! 
     339                    
     340 00001710                   SLEEP   TSEC*7
     341                    
     342                            .if RR_AWARD = 1
     343 00001760           no_scores
     344                            .endif
     345                    
     346 00001760                   RETP
     347                    
     348                    
     349 00001790           hstd_mod
     350 00001790 00000000!         .long   slateBMOD
     351 000017b0     0000          .word   0,0
     352 000017d0 00000000          .long   0
     353                    
     354                    ******************************************************************************
     355                    
     356 000017f0            SUBR   pin_speed_in_case
     357 000017f0     05c0          MOVE    @PSTATUS,@TEMP_PSTATUS
         00001800 00000000! 
         00001820 00000210- 
     358                    
     359 00001840     05ae          move    @total_matches,a14
         00001850 00000000! 
     360 00001870     ca00          jrz     no_need_for_input
         00001880     00af  
     361 00001890     05ae          move    @current_round,a14
         000018a0 00000000! 
     362 000018c0     0b4e          cmpi    3,a14
         000018d0     fffc  
     363 000018e0     ca00          jreq    no_need_for_input
         000018f0     00a8  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE    9

     364                    
     365 00001900     0d5f          calla   is_final_match
         00001910 00000000! 
     366 00001930     c800          jrc     no_need_for_input
         00001940     00a3  
     367 00001950     09ce          movi    INSELECT,a14
         00001960     0002  
     368 00001970     058e          move    a14,@GAMSTATE
         00001980 00000000! 
     369                    
     370 000019a0     4d48          move    a10,a8
     371                    
     372 000019b0     4d01          move    a8,A1
     373 000019c0     0d5f          CALLA   get_process_ptr
         000019d0 00000000! 
     374 000019f0     4d00          MOVE    A8,A0
     375 00001a00     24a0          SLL     5,A0
     376 00001a10     0b20          ADDI    MATCH_TIMERS,A0
         00001a20 00000000- 
     377 00001a40     8600          move    *a0,A0,L
     378 00001a50     09eb          movi    FIND_LOW_TABLE_LEVEL,a11
         00001a60 00000000! 
     379 00001a80     b36d          move    a11,*a13(which_level),L
         00001a90     0190  
     380 00001aa0     5663          clr     a3
     381 00001ab0     09e8          MOVI    PIN_SPEED_TAB,A8
         00001ac0 00000000! 
     382 00001ae0     0d5f          calla   CHECK_SCORE
         00001af0 00000000! 
     383                    
     384 00001b10     ca00          jrz     no_need_for_input
         00001b20     0085  
     385 00001b30     4d41          move    a10,A1
     386 00001b40     24a1          sll     5,a1
     387                    
     388 00001b50     4d42          MOVE    A10,A2
     389 00001b60     2482          SLL     4,A2
     390 00001b70     4041          ADD     A2,A1
     391 00001b80     0b21          addi    entered_inits,a1
         00001b90 00000000! 
     392 00001bb0     8621          move    *a1,a1,L
     393 00001bc0     cb48          jrnz    no_display_anything
     394                    
     395                    
     396 00001bd0     09c3          MOVI    998,A3
         00001be0     03e6  
     397 00001bf0     0d5f          CALLA   SNDSND
         00001c00 00000000! 
     398 00001c20     09c0          movi    2,a0
         00001c30     0002  
     399 00001c40     0d5f          calla   RNDRNG0
         00001c50 00000000! 
     400 00001c70     4c03          move    a0,a3
     401 00001c80     11e3          addk    0fh,a3
     402 00001c90     0d5f          calla   SNDSND
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   10

         00001ca0 00000000! 
     403                    
     404 00001cc0     18ab          MOVK    5,A11
     405 00001cd0     09c8          MOVI    32,A8
         00001ce0     0020  
     406 00001cf0                   CREATE  FADE_PID,FADE_MASTER_VOL
     407                    
     408 00001d70     0d5f          calla   WIPEOUT
         00001d80 00000000! 
     409 00001da0     1820          movk    1,a0                    ;page flipping on
     410 00001db0     0580          move    a0,@dpageflip
         00001dc0 00000000! 
     411 00001de0     0d5f          calla   start_credbox
         00001df0 00000000! 
     412 00001e10     09e0          movi    plyrsel_mod,a0
         00001e20 00003f30' 
     413 00001e40     0780          move    a0,@BAKMODS,L
         00001e50 00000000! 
     414 00001e70     0d5f          calla   BGND_UD1                ;create objects for background
         00001e80 00000000! 
     415 00001ea0     57ce          clr     a14
     416 00001eb0     058e          move    a14,@time_out
         00001ec0 00000080- 
     417                    
     418 00001ee0                   CREATE  CROUTON_PID,display_croutons
     419                    
     420 00001f60                   push    a10
     421 00001f70     5621          clr     a1
     422 00001f80     4d4a          move    a10,a10
     423 00001f90     cb01          jrnz    which_play_set
     424 00001fa0     1821          movk    1,a1
     425 00001fb0           which_play_set
     426 00001fb0     4c2a          move    a1,a10
     427 00001fc0                   CREATE  PCURSOR_PID,player_cursor
     428                    
     429 00002040                   pull    a10
     430 00002050           no_display_anything
     431                    
     432 00002050     4d48          move    a10,a8
     433 00002060     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00002070     03f0  
     434 00002080                   jsrp    pin_speed_check
     435 000020f0     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         00002100     0fc0  
     436                    
     437 00002110           are_we_waiting3
     438 00002110     4d40          move    a10,a0
     439 00002120     0b00          addi    HI_INPUT_PID,a0
         00002130     0137  
     440 00002140     09c1          movi    -1,a1
         00002150     ffff  
     441 00002160     0d5f          calla   EXISTP
         00002170 00000000! 
     442 00002190     ca1e          JRZ     no_need_for_input
     443 000021a0                   sleep   1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   11

     444 000021f0     09c0          movi    CYCPID,a0
         00002200     0110  
     445 00002210     09c1          movi    -1,a1
         00002220     ffff  
     446 00002230     0d5f          calla   EXISTP
         00002240 00000000! 
     447 00002260     cbea          jrnz    are_we_waiting3
     448 00002270     4d40          move    a10,a0
     449 00002280     0b00          addi    HI_INPUT_PID,a0
         00002290     0137  
     450 000022a0     09c1          movi    -1,a1
         000022b0     ffff  
     451 000022c0     0d5f          calla   EXISTP
         000022d0 00000000! 
     452 000022f0     ca08          JRZ     no_need_for_input
     453 00002300     098f          mmtm    sp,a10,a9,a8
         00002310     00e0  
     454 00002320     0d5f          calla   do_that_cycle
         00002330 00000000! 
     455 00002350     09af          mmfm    sp,a10,a9,a8
         00002360     0700  
     456 00002370     c0d9          jruc    are_we_waiting3
     457                    
     458 00002380           no_need_for_input
     459 00002380     05ae          MOVE    @TEMP_PSTATUS,A14
         00002390 00000210- 
     460 000023b0     05a1          MOVE    @PSTATUS,A1
         000023c0 00000000! 
     461 000023e0     482e          CMP     A1,A14
     462 000023f0     ca28          JREQ    NORMAL_EXIT     
     463                    
     464 00002400     57ce          clr     a14
     465 00002410     058e          move    a14,@time_out
         00002420 00000080- 
     466                    
     467                            ;a10 is already set up with side we are on 0 or 1
     468 00002440                   CREATE  PCURSOR_PID,player_cursor
     469 000024c0     102a          inc     a10
     470 000024d0     05ae          move    @active_flag,a14
         000024e0 00000090- 
     471 00002500     554e          or      a10,a14
     472 00002510     058e          move    a14,@active_flag
         00002520 00000090- 
     473                    
     474                    
     475 00002540     09c0          MOVI    CLOCK_PID,A0
         00002550     013a  
     476 00002560     09c1          movi    -1,a1
         00002570     ffff  
     477 00002580     0d5f          CALLA   EXISTP
         00002590 00000000! 
     478 000025b0     ca00          jrz     waitloop
         000025c0     0150  
     479                    
     480 000025d0     09ee          movi    select_time,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   12

         000025e0 0000031b  
     481 00002600     b1c0          move    a14,*a0(PA9)
         00002610     00a0  
     482 00002620     57ce          clr     a14
     483 00002630     058e          move    a14,@OLD_PSTATUS
         00002640 00000000! 
     484                            
     485 00002660     c000          JRUC    waitloop
         00002670     0145  
     486                    
     487 00002680           NORMAL_EXIT
     488 00002680                   RETP
     489                    
     490 000026b0           calc_match_time_1
     491 000026b0     0d3f          callr   work_out_match_time
         000026c0     0026  
     492                    ;       movi    10000,a1
     493                    ;       sub     a0,a1
     494 000026d0     c01a          JRUC    STORE_MATCH_TIME
     495                    
     496                            .def    calc_match_time_2
     497 000026e0           calc_match_time_2
     498 000026e0     0d3f          callr   work_out_match_time
         000026f0     0023  
     499                    ;       movi    10000,a1
     500                    ;       sub     a0,a1
     501 00002700     b540          MOVE    *A10(PLYRNUM),A0
         00002710     0580  
     502 00002720     0b40          CMPI    2,A0
         00002730     fffd  
     503 00002740     c51d          JRGE    NO_POINT_ITS_A_DRONE
     504 00002750     24a0          SLL     5,A0
     505 00002760     0b20          ADDI    MATCH_TIMERS,A0
         00002770 00000000- 
     506 00002790     8600          MOVE    *A0,A0,L
     507 000027a0     4020          add     a1,a0
     508 000027b0     0b60          cmpi    50000,a0
         000027c0 ffff3caf  
     509 000027e0     c507          jrge    no_bother_pin_speed_check
     510 000027f0     4c00          MOVE    A0,A0
     511 00002800     ce05          JRN     no_bother_pin_speed_check
     512 00002810     0d5f          calla   BINBCD
         00002820 00000000! 
     513 00002840     4c01          move    a0,a1
     514 00002850     c002          JRUC    STORE_MATCH_TIME
     515 00002860           no_bother_pin_speed_check
     516 00002860     09c1          movi    -1,a1
         00002870     ffff  
     517 00002880           STORE_MATCH_TIME
     518 00002880     b540          MOVE    *A10(PLYR_SIDE),A0
         00002890     05b0  
     519 000028a0     0b40          CMPI    2,A0
         000028b0     fffd  
     520 000028c0     c505          JRGE    NO_POINT_ITS_A_DRONE
     521 000028d0     24a0          SLL     5,A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   13

     522 000028e0     0b20          ADDI    MATCH_TIMERS,A0
         000028f0 00000000- 
     523 00002910     8220          MOVE    A1,*A0,L
     524 00002920           NO_POINT_ITS_A_DRONE
     525 00002920     0960          rets
     526                    
     527                    
     528                    ******************************************************************************
     529                    *
     530                    * Return match time in a0, format is kinda funny.  Return 100 - time elapsed
     531                    * in BCD, 0xIIFF format, where II is the integer part and FF is the fractional.
     532                    * Then convert this back to hex from BCD.
     533                    
     534 00002930            SUBRP  work_out_match_time
     535                    
     536                            ;old
     537 00002930     07a4          move    @match_time,a4,L
         00002940 00000000! 
     538 00002960     4c81          move    a4,a1
     539 00002970     2f04          srl     8,a4
     540 00002980     2701          sll     24,a1
     541 00002990     2e81          srl     12,a1
     542 000029a0     5424          or      a1,a4
     543                    
     544 000029b0     05a5          move    @match_time+020h,a5
         000029c0 00000020! 
     545 000029e0     2605          sll     16,a5
     546 000029f0     2e05          srl     16,a5
     547 00002a00     09c0          movi    100,a0
         00002a10     0064  
     548 00002a20     5e05          mpyu    a0,a5
     549 00002a30     2e05          srl     16,a5
     550 00002a40     4ca0          move    a5,a0
     551 00002a50     0d5f          calla   BINBCD
         00002a60 00000000! 
     552 00002a80     5480          or      a4,a0
     553 00002a90     0d5f          calla   BCDBIN
         00002aa0 00000000! 
     554                    
     555                    
     556                            ;new
     557 00002ac0     05a1          move    @round_end_time,a1
         00002ad0 00000000! 
     558 00002af0     05ae          move    @round_start_time,a14
         00002b00 00000000! 
     559 00002b20     45c1          sub     a14,a1                  ;ticks
     560 00002b30     09ce          movi    (100<<8)/55,a14         ;convert from 55ths to 100ths.
         00002b40     01d1  
     561 00002b50     5fc1          mpyu    a14,a1
     562 00002b60     2f01          srl     8,a1
     563                    
     564                    ;       movi    10000,a0
     565                    ;       sub     a1,a0
     566                    ;       calla   BINBCD
     567                    ;       calla   BCDBIN
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   14

     568                    
     569 00002b70     0960          rets
     570                    
     571                    
     572                    ***********
     573                    
     574                    
     575 00002b80           howard_wins
     576 00002b80     05a0          MOVE    @SPEECH_STARTED,a0
         00002b90 000000d0- 
     577 00002bb0     0b40          CMPI    2,A0
         00002bc0     fffd  
     578 00002bd0     ca54          jreq    NO_SPEECH_COS_HOWRD_TALKIN
     579 00002be0     09e2          movi    NORMAL_WINNERS,a2
         00002bf0 00002e20' 
     580                    
     581 00002c10     0d5f          CALLA   is_final_match
         00002c20 00000000! 
     582 00002c40     c903          JRNC    NOT_LAST_MATCH
     583 00002c50     09e2          movi    SPECIAL_CONGRATS,A2
         00002c60 00002e50' 
     584                    
     585 00002c80           NOT_LAST_MATCH
     586 00002c80     1840          MOVK    2,A0
     587 00002c90     0d5f          CALLA   RNDRNG0
         00002ca0 00000000! 
     588 00002cc0     2480          SLL     4,A0
     589 00002cd0     4040          ADD     A2,A0
     590 00002ce0     8400          MOVE    *A0,A0
     591 00002cf0     0d5f          CALLA   ADD_VOICE
         00002d00 00000000! 
     592 00002d20     1840          movk    2,a0
     593 00002d30     0580          MOVE    a0,@SPEECH_STARTED
         00002d40 000000d0- 
     594 00002d60                   sleep   80
     595 00002db0     5600          clr     a0
     596 00002dc0     0580          MOVE    a0,@SPEECH_STARTED
         00002dd0 000000d0- 
     597 00002df0                   die
     598                    
     599 00002e20           NORMAL_WINNERS
     600 00002e20     01fe          .WORD   1FEH
     601 00002e30     0300          .WORD   L_SIGN_YOUR_NAME
     602 00002e40     01bb          .WORD   SIGN_HERE_PLEASE
     603                    
     604 00002e50           SPECIAL_CONGRATS
     605 00002e50     00f2          .WORD   CONGRATULATIONS
     606 00002e60     02ff          .WORD   L_CONGRATS
     607 00002e70     00f2          .WORD   CONGRATULATIONS
     608                    
     609                    
     610                    
     611 00002e80            SUBRP  call_wrestler_name
     612 00002e80                   SLEEPK  20              ;wait 1/3 sec before doing anything.
     613                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   15

     614 00002ec0           wait    SLEEPK  1
     615 00002f00     05a0          MOVE    @SPEECH_STARTED,A0
         00002f10 000000d0- 
     616 00002f30     cbf8          JRNZ    wait
     617 00002f40     07a1          MOVE    @NEXT_ANN_QUEUE,A1,L
         00002f50 00000000! 
     618 00002f70     07a2          MOVE    @CURRENT_ANN_QUEUE,A2,L
         00002f80 00000000! 
     619 00002fa0     4822          CMP     A1,A2
     620 00002fb0     cb16          JRNE    NO_SPEECH_COS_HOWRD_TALKIN
     621 00002fc0     1820          MOVK    1,A0
     622 00002fd0     0580          MOVE    A0,@SPEECH_STARTED
         00002fe0 000000d0- 
     623 00003000     8509          MOVE    *A8,A9
     624 00003010     24a9          SLL     5,A9
     625 00003020     0b29          ADDI    WHICH_SPEECH,A9
         00003030 00003150' 
     626 00003050     8520          MOVE    *A9,A0
     627 00003060     0d5f          CALLA   ADD_VOICE
         00003070 00000000! 
     628 00003090     b500          MOVE    *A8(010H),A0
         000030a0     0010  
     629 000030b0     0d5f          CALLA   PRCSLP
         000030c0 00000000! 
     630 000030e0     5600          CLR     A0
     631 000030f0     0580          MOVE    A0,@SPEECH_STARTED
         00003100 000000d0- 
     632 00003120           NO_SPEECH_COS_HOWRD_TALKIN
     633 00003120                   DIE
     634                    
     635                    ;Bret
     636                    ;Razor
     637                    ;Taker
     638                    ;Yoko
     639                    ;Shawn
     640                    ;Bam Bam
     641                    ;Doink
     642                    ;spare
     643                    ;Lex
     644 00003150           WHICH_SPEECH
     645 00003150     0131          .WORD   131H,70
     646 00003170     012d          .WORD   12DH,44
     647 00003190     012f          .WORD   12FH,54
     648 000031b0     0132          .WORD   132H,59
     649 000031d0     012c          .WORD   12CH,55
     650 000031f0     012e          .WORD   12EH,76
     651 00003210     012b          .WORD   12BH,54
     652 00003230     0000          .WORD   0,0
     653 00003250     0130          .WORD   130H,47
     654                    
     655 00003270            SUBR   buyin_select
     656                    
     657                    ;This turns on the player select background, etc.
     658                    
     659                    ;If this is a one player game, then display standard challenger needed
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   16

     660                    ;message on the correct side.  Then display a please continue message
     661                    ;on the other side, along with a buyin timer.
     662                    
     663                    ;If this is a two player game, turn on the cursor, etc. for the winning
     664                    ;player.  Then display a please continue message on the other side, along
     665                    ;with a buyin timer.
     666                    
     667                    ;If a player chooses to let his buyin timer expire, then check to see if
     668                    ;he had achieved a high score.  If so, display the initials on his side
     669                    ;and let him pick.  The other player (or none) will stay in limbo.
     670                    
     671 00003270     09ce          movi    INWAITCONT,a14          ;set GAMSTATE
         00003280     0005  
     672 00003290     058e          move    a14,@GAMSTATE
         000032a0 00000000! 
     673                    
     674 000032c0            SUBR   select_screen
     675                    
     676                            ;clear royal_rumble at the start of every select screen
     677 000032c0     57ce          clr     a14
     678 000032d0     058e          move    a14,@royal_rumble
         000032e0 00000000! 
     679                    
     680 00003300     0d5f          calla   display_blank
         00003310 00000000! 
     681 00003330     5600          clr     a0
     682                    ;       move    a0,@secret_damage
     683 00003340     0580          MOVE    A0,@SPEECH_STARTED
         00003350 000000d0- 
     684                    
     685 00003370     0d5f          calla   WIPEOUT                 ;kill any attract modes or old
         00003380 00000000! 
     686                                                            ;battles lying around.
     687 000033a0     09ce          movi    INSELECT,a14            ;set GAMSTATE
         000033b0     0002  
     688 000033c0     058e          move    a14,@GAMSTATE
         000033d0 00000000! 
     689 000033f0     09ce          movi    SELECT_PID,a14          ;set our PID
         00003400     0300  
     690 00003410     b1cd          move    a14,*a13(PROCID)
         00003420     0020  
     691                    
     692                     .if DEBUG
     693                    ;Temp, stuff @index1,2 for testing wrestlers.
     694                    
     695                            move    @skip_select,a0
     696                            jrz     noskp
     697                    
     698                    ;0      (Bret)
     699                    ;1      (Razor)
     700                    ;2      (Taker)
     701                    ;3      (Yoko)
     702                    ;4      (Shawn)
     703                    ;5      (Bam Bam)
     704                    ;6      (Doink)
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   17

     705                    ;7      spare
     706                    ;8      (Lex)
     707                    
     708                            calla   display_unblank
     709                            movi    4,a0
     710                            move    a0,@index1
     711                            movi    8,a0
     712                            move    a0,@index2
     713                    
     714                    ;       MOVK    1,A0
     715                    ;       .ref    BONUS_POWER
     716                    ;       MOVE    A0,@BONUS_POWER
     717                    
     718                            move    @skip_select,a0
     719                            jrp     skp
     720                    
     721                            .ref    NUM_OPPS
     722                            movk    1,a0
     723                            move    a0,@NUM_OPPS
     724                    
     725                    skp
     726                    ;       RETP
     727                    
     728                            clr     a0
     729                            calla   get_but_val_cur
     730                            btst    PLAYER_BLOCK_BIT,a0
     731                            jrz     no_block1
     732                            movk    1,a14
     733                            move    a14,@stay_down
     734                            andni   PLAYER_BLOCK_VAL,a0
     735                    no_block1
     736                            X16     a0
     737                            addi    select_table,a0
     738                            move    *a0,a14
     739                            move    a14,@index1
     740                    
     741                            movi    1,a0
     742                            calla   get_but_val_cur
     743                            btst    PLAYER_BLOCK_BIT,a0
     744                            jrz     no_block2
     745                            movk    1,a14
     746                            move    a14,@stay_down
     747                            andni   PLAYER_BLOCK_VAL,a0
     748                    no_block2
     749                            X16     a0
     750                            addi    select_table,a0
     751                            move    *a0,a14
     752                            move    a14,@index2
     753                            RETP
     754                    
     755                            ;lookup table
     756                    df      equ     8       ;LEX
     757                    select_table
     758                            .word   df
     759                            .word   3               ;1      punch           - YOKO
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   18

     760                            .word   df,df
     761                            .word   0               ;4      spunch          - BRET
     762                            .word   8               ;5      punch + spunch  - LEX
     763                            .word   df,df
     764                            .word   1               ;8      kick            - RAZOR
     765                            .word   6               ;9      punch + kick    - DOINK
     766                            .word   df,df,df
     767                            .word   df,df,df
     768                            .word   4               ;16     skick           - SHAWN
     769                            .word   df,df,df
     770                            .word   5               ;20     spunch + skick  - BAM BAM
     771                            .word   df,df,df
     772                            .word   2               ;24     kick + skick    - TAKER
     773                            .word   df,df,df
     774                            .word   df,df,df,df
     775                    
     776                            BSSX    skip_select,    16
     777                    
     778                    noskp
     779                     .endif
     780                    
     781 00003430     18ab          MOVK    5,A11
     782 00003440     09c8          MOVI    32,A8
         00003450     0020  
     783 00003460                   CREATE  FADE_PID,FADE_MASTER_VOL
     784                    
     785 000034e0     5600          clr     a0
     786 000034f0     0580          move    a0,@blow_out
         00003500 000000c0- 
     787                    
     788 00003520     1820          movk    1,a0                    ;page flipping on
     789 00003530     0580          move    a0,@dpageflip
         00003540 00000000! 
     790                    
     791 00003560     09e0          movi    plyrsel_mod,a0
         00003570 00003f30' 
     792 00003590     0780          move    a0,@BAKMODS,L
         000035a0 00000000! 
     793 000035c0     0d5f          calla   BGND_UD1                ;create objects for background
         000035d0 00000000! 
     794                    
     795                            ;play wrestlemania tune
     796                            .if MUSIC_ON
     797 000035f0     05a0          MOVE    @match_cnt,A0
         00003600 00000000! 
     798 00003620     cb07          JRNZ    NO_NEW_TUNE
     799 00003630                   CREATE0 wmania_tune
     800 000036a0           NO_NEW_TUNE
     801                            .endif
     802                    
     803 000036a0                   CREATE  CROUTON_PID,display_croutons
     804 00003720     0d5f          calla   start_credbox
         00003730 00000000! 
     805                    
     806                    ;Initialize flags
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   19

     807 00003750     05ae          move    @PSTATUS,a14
         00003760 00000000! 
     808 00003780     058e          move    a14,@active_flag
         00003790 00000090- 
     809                    
     810 000037b0     57ce          clr     a14
     811 000037c0     058e          move    a14,@time_out
         000037d0 00000080- 
     812                    
     813                            ;create the player cursors
     814 000037f0     574a          clr     a10
     815 00003800     05ae          move    @rr_loss,a14
         00003810 00000230- 
     816 00003830     ca03          jrz     not_rr
     817 00003840     058a          move    a10,@cursor_procs
         00003850 00000220- 
     818 00003870           not_rr
     819 00003870                   CREATE  PCURSOR_PID,player_cursor
     820                    
     821 000038f0     0780          move    a0,@kp_p1cursor,L
         00003900 000000a0- 
     822 00003920                   CREATE0 blink_rndper
     823                    
     824 00003990     182a          movk    1,a10
     825 000039a0                   CREATE  PCURSOR_PID,player_cursor
     826                    
     827                            ;wait for them to finish up
     828                    
     829 00003a20                   SLEEPK  1
     830                    
     831 00003a60     1820          movk    1,a0
     832 00003a70     0580          move    a0,@DISPLAYON
         00003a80 00000000! 
     833 00003aa0     0d5f          calla   display_unblank
         00003ab0 00000000! 
     834                    
     835 00003ad0           waitloop
     836 00003ad0                   SLEEPK  1
     837 00003b10     05ae          move    @are_we_waiting_f,a14
         00003b20 00000100- 
     838 00003b40     c604          jrle    no_we_are_not
     839                    ;       jrz     no_we_are_not
     840                    ;       jrn     no_we_are_not
     841 00003b50     142e          dec     a14
     842 00003b60     058e          move    a14,@are_we_waiting_f
         00003b70 00000100- 
     843 00003b90           no_we_are_not
     844                    
     845 00003b90     05ae          move    @active_flag,a14
         00003ba0 00000090- 
     846 00003bc0     cbf0          jrnz    waitloop
     847                    
     848 00003bd0     05ae          move    @OLD_PSTATUS,a14
         00003be0 00000000! 
     849 00003c00     cbec          jrnz    waitloop
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   20

     850                    
     851                    
     852                    ;Players have chosen their guys.  wait a sec, then bail
     853 00003c10     09c8          movi    30,a8
         00003c20     001e  
     854 00003c30           final_waitloop
     855                    
     856 00003c30                   SLEEPK  1
     857                    
     858 00003c70     05ae          move    @active_flag,a14        ;don't quit if someone jumps in here
         00003c80 00000090- 
     859 00003ca0     cbe2          jrnz    waitloop
     860                    
     861 00003cb0     05a0          move    @blow_out,a0
         00003cc0 000000c0- 
     862 00003ce0     cb01          jrnz    out
     863                    
     864 00003cf0     3da8          dsj     a8,final_waitloop
     865                    
     866 00003d00           out
     867 00003d00                   RETP
     868                    
     869                    
     870 00003d30            SUBRP  display_croutons
     871                    
     872                    ;Why is this a process?
     873                    
     874                    ;Draw the croutons and their associated pix
     875                    
     876 00003d30     05a0          move    @PSTATUS,a0
         00003d40 00000000! 
     877                    ;       jrnz    gocrut
     878                    ;       SLEEPK  1
     879                    ;       jruc    display_croutons
     880                    ;gocrut
     881                    
     882 00003d60     09e9          movi    crouton_pos_table,a9
         00003d70 000040d0' 
     883 00003d90     09ea          movi    crouton_pic_table,a10
         00003da0 00003fd0' 
     884 00003dc0     9520          move    *a9+,a0
     885 00003dd0           crouton_loop
     886 00003dd0     9521          move    *a9+,a1
     887                    
     888 00003de0     2600          sll     16,a0
     889 00003df0     2601          sll     16,a1
     890 00003e00     9742          move    *a10+,a2,L
     891 00003e10     09e3          movi    crutpic_z,a3
         00003e20 00000004  
     892 00003e40     09e4          movi    DMAWNZ,a4
         00003e50 00008002  
     893 00003e70     09c5          movi    CLSNEUT,a5
         00003e80     0000  
     894 00003e90     56c6          clr     a6
     895 00003ea0     56e7          clr     a7
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   21

     896                    
     897 00003eb0     0d5f          calla   BEGINOBJW
         00003ec0 00000000! 
     898                    
     899 00003ee0     9520          move    *a9+,a0
     900 00003ef0     cbed          jrnz    crouton_loop
     901                    
     902                    ;       CREATE0 select_clock
     903                    ;       move    a0,a10
     904                    ;       CREATE0 clock_digits
     905                    
     906 00003f00                   DIE
     907                    
     908                    
     909 00003f30           plyrsel_mod
     910 00003f30 00000000!         .long   wwfselbkBMOD
     911 00003f50     ffd8          .word   -40,0
     912 00003f70 00000000!         .long   choiceBMOD
     913 00003f90     0003          .word   3,256
     914 00003fb0 00000000          .long   0
     915                    
     916              0001  crutplt_z       equ     1
     917              0002  hiplate_z       equ     2       ;oscillates from 2 to 3
     918              0004  crutpic_z       equ     4
     919              0005  hilite_z        equ     5
     920                    
     921              0001  baseshad_z      equ     1
     922              0002  hishad_z        equ     2
     923              0003  attplt_z        equ     3
     924              0003  sidebar_z       equ     3
     925              0005  nameshad_z      equ     5
     926              0007  namebar_z       equ     7
     927              0008  atttxt_z        equ     8
     928                    
     929              0009  name_z          equ     9
     930                    
     931              0001  mugshot_z       equ     1
     932                    
     933 00003fd0           crouton_pic_table
     934 00003fd0 00000000!         .long   CRUT_DK
     935 00003ff0 00000000!         .long   CRUT_RR
     936 00004010 00000000!         .long   CRUT_UN
     937 00004030 00000000!         .long   CRUT_YK
     938 00004050 00000000!         .long   CRUT_SM
     939 00004070 00000000!         .long   CRUT_BM
     940 00004090 00000000!         .long   CRUT_BH
     941 000040b0 00000000!         .long   CRUT_LX
     942                    
     943 000040d0           crouton_pos_table
     944 000040d0     00a4          .word   164,45
     945 000040f0     00cc          .word   204,45
     946                    
     947 00004110     00a4          .word   164,90
     948 00004130     00cc          .word   204,90
     949                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   22

     950 00004150     00a4          .word   164,135
     951 00004170     00cc          .word   204,135
     952                    
     953 00004190     00a4          .word   164,180
     954 000041b0     00cc          .word   204,180
     955                    
     956 000041d0     0000          .word   0
     957                    
     958                    
     959                    *****************************************************************************
     960                    * Process that handles player selection for one player.
     961                    * 0a10H = player (0 or 1)
     962                    
     963 000041e0                   STRUCTPD
     964 000041e0                   LONG            HILITE                  ;UHL *hilite ring
     965                    
     966 000041e0                   LONG            HIPLATE         ;UHL *color crouton
     967                    
     968 000041e0                   LONG            NAME                    ;UHL *name obj (message *obj)
     969 000041e0                   WORD            RND_DEST                ;UHW target if in random mode
     970                    
     971 000041e0                   LONG            MUG1
     972 000041e0                   LONG            MUG2
     973 000041e0                   LONG            MUG3
     974 000041e0                   LONG            MUG4
     975 000041e0                   LONG            MUG5
     976 000041e0                   LONG            MUG6
     977 000041e0                   LONG            MUG7
     978 000041e0                   LONG            MUG8
     979                    
     980 000041e0                   LONG            ATT1
     981 000041e0                   LONG            ATT2
     982 000041e0                   LONG            ATT3
     983 000041e0                   LONG            ATT4
     984 000041e0                   WORD            CNTR                    ;Flashing cursor delay
     985                    
     986                    
     987                    ;player info struct
     988              0000  PI_HILITE       equ     0               ;UHL hilite box TBL_ hdr
     989              0020  PI_HIPLATE      equ     20h             ;UHL hilite plate TBL_ hdr
     990              0040  PI_STARTPOS     equ     40h             ;UHW starting pos (index)
     991              0050  PI_MUGPOS       equ     50h             ;UHL mugshot [y,x]
     992              0050  PI_MUGXPOS      equ     50h             ;UHW mugshot x
     993              0060  PI_MUGYPOS      equ     60h             ;UHW mugshot y
     994              0070  PI_MUGCTRL      equ     70h             ;UHW mugshot OCTRL
     995              0080  PI_STARTNAME    equ     80h             ;UHL starting name TBL_ hdr
     996              00a0  PI_ATTTXT       equ     0A0h            ;UHL atttribute text TBL_ hdr
     997              00c0  PI_INDEX        equ     0C0h            ;UHL write selection word here
     998              00e0  PI_MOVESOUND    equ     0E0h            ;UHW cursor move triple_sound
     999              00f0  PI_SELSOUND     equ     0F0h            ;UHW select sound
    1000                    
    1001              0005  rnd_movespeed   equ     5               ;ticks between rndsel moves
    1002                    
    1003              000e  rnd_wander      equ     14              ;rnd moves before home-in begins
    1004                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   23

    1005 000041e0            SUBRP  player_cursor
    1006                    
    1007                            ;reg use
    1008                            ;  a6 = ticks until another move is allowed (debounce)
    1009                            ;  a6 = ticks until next move (random mode)
    1010                            ;  a7 = moves until home-in (random mode)
    1011                            ;  a9 = player info struct pointer
    1012                            ; a10 = player number
    1013                            ; a11 = position index (0-9)
    1014                    
    1015                            ;aim a9 at p?info
    1016 000041e0     4d49          move    a10,a9
    1017 000041f0                   X32     a9
    1018 00004200     0b29          addi    info,a9
         00004210 0000ae70' 
    1019 00004230     8729          move    *a9,a9,L
    1020                    
    1021                            ;initialize the index word to -1
    1022 00004240     09ce          movi    -1,a14
         00004250     ffff  
    1023 00004260     b720          move    *a9(PI_INDEX),a0,L
         00004270     00c0  
    1024 00004280     81c0          move    a14,*a0,W
    1025                    
    1026                            ;initialize random dest to -1
    1027 00004290     09ce          movi    -1,a14
         000042a0     ffff  
    1028 000042b0     b1cd          move    a14,*a13(RND_DEST)
         000042c0     0160  
    1029                    
    1030 000042d0     5600          clr     a0
    1031 000042e0     b20d          move    a0,*a13(NAME),L
         000042f0     0140  
    1032 00004300     1bc0          movk    30,a0
    1033 00004310     b00d          move    a0,*a13(CNTR)
         00004320     02f0  
    1034                            ;active?
    1035 00004330     05ae          move    @PSTATUS,a14
         00004340 00000000! 
    1036 00004360     4b4e          btst    a10,a14
    1037 00004370     cb00          jrnz    begin_select
         00004380     0331  
    1038                    
    1039 00004390     05ae          move    @OLD_PSTATUS,a14
         000043a0 00000000! 
    1040 000043c0     4b4e          btst    a10,a14
    1041 000043d0     ca00          jrz     norm
         000043e0     016a  
    1042                    
    1043                    ;This guy lost his last match:
    1044                    ;did this guy get a high win streak ? 
    1045 000043f0     4d48          move    a10,a8
    1046 00004400     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00004410     03f0  
    1047 00004420                   JSRP    winstreak_check
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   24

    1048 00004490     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
         000044a0     0fc0  
    1049                    ;       .ref    wrestler_number
    1050                    ;       .ref    process_ptrs
    1051                    ;
    1052                    ;       PUSH    a9
    1053                    ;       movi    process_ptrs,a9
    1054                    ;find_loop
    1055                    ;       move    *a9(PLYRNUM),a0
    1056                    ;       cmp     a10,a0
    1057                    ;       jrz     found
    1058                    ;       addi    32,a9
    1059                    ;       jruc    find_loop
    1060                    ;found
    1061                    ;       move    *a9(WRESTLERNUM),a0,W
    1062                    ;       move    a0,@wrestler_number,L
    1063                    ;       PULL    a9
    1064                    
    1065                            ;wait for the enter initials stuff to end
    1066 000044b0           are_we_waiting
    1067 000044b0     4d40          move    a10,a0
    1068 000044c0     0b00          addi    HI_INPUT_PID,a0
         000044d0     0137  
    1069 000044e0     09c1          movi    -1,a1
         000044f0     ffff  
    1070 00004500     0d5f          calla   EXISTP
         00004510 00000000! 
    1071 00004530     ca1d          JRZ     FINISHED_INPUTTING
    1072 00004540                   SLEEPK  1
    1073 00004580     09c0          movi    CYCPID,a0
         00004590     0110  
    1074 000045a0     09c1          movi    -1,a1
         000045b0     ffff  
    1075 000045c0     0d5f          calla   EXISTP
         000045d0 00000000! 
    1076 000045f0     cbeb          jrnz    are_we_waiting
    1077                    
    1078 00004600     4d40          move    a10,a0
    1079 00004610     0b00          addi    HI_INPUT_PID,a0
         00004620     0137  
    1080 00004630     09c1          movi    -1,a1
         00004640     ffff  
    1081 00004650     0d5f          calla   EXISTP
         00004660 00000000! 
    1082 00004680     ca08          JRZ     FINISHED_INPUTTING
    1083 00004690     098f          mmtm    sp,a10,a9,a8
         000046a0     00e0  
    1084 000046b0     0d5f          calla   do_that_cycle
         000046c0 00000000! 
    1085 000046e0     09af          mmfm    sp,a10,a9,a8
         000046f0     0700  
    1086 00004700     c0da          jruc    are_we_waiting
    1087                    
    1088 00004710           FINISHED_INPUTTING
    1089 00004710     05ae          move    @auto_init,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   25

         00004720 00000000! 
    1090 00004740     ca0a          jrz     no_ai
    1091 00004750     09e2          movi    auto_str,a2
         00004760 0000f740' 
    1092 00004780     0d5f          calla   print_message
         00004790 00000000! 
    1093 000047b0     57ce          clr     a14
    1094 000047c0     058e          move    a14,@auto_init
         000047d0 00000000! 
    1095 000047f0           no_ai
    1096                    
    1097 000047f0     0d5f          calla   show_bonus_icons
         00004800 00000000! 
    1098                    
    1099                            ;create the name text
    1100 00004820     b720          move    *a9(PI_STARTNAME),a0,L
         00004830     0080  
    1101 00004840     0d5f          calla   BEGINOBJ_TBL
         00004850 00000000! 
    1102 00004870     b30d          move    a8,*a13(NAME),L
         00004880     0140  
    1103                    
    1104                    ;Display please continue message
    1105                    ;Display price to continue
    1106                    ;Turn on continue timer at bottom of screen (Attribute area)
    1107                    
    1108                    ;Wait for him to make a decision
    1109                    ;If he continues, turn on cursor, etc.
    1110                    ;If he does not continue, start the other players time out for
    1111                    ;player selection (If other plyr is present)
    1112                    
    1113 00004890                   CREATE0 buyin_counter
    1114 00004900     0d3f          callr   buyin_text
         00004910     0862  
    1115                    
    1116                    ;Inactive.  wait for buyin
    1117                    ;Display the insert coin/press start message
    1118                    
    1119 00004920           enough_money1
    1120 00004920     0d5f          calla   CR_CONTP
         00004930 00000000! 
    1121 00004950     c909          jrhs    enough_money2
    1122                    ;There's not enough money.  flash 'insert coins' message and wait
    1123 00004960     b7a8          move    *a13(NAME),a8,L
         00004970     0140  
    1124 00004980     09e0          movi    WF_INSERT,a0
         00004990 00000000! 
    1125 000049b0     0d5f          calla   civanic
         000049c0 00000000! 
    1126 000049e0     c008          jruc    start_waitloop1
    1127 000049f0           enough_money2
    1128                    ;There's enough money.  flash 'press start' message and wait
    1129 000049f0     b7a8          move    *a13(NAME),a8,L
         00004a00     0140  
    1130 00004a10     09e0          movi    WF_START,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   26

         00004a20 00000000! 
    1131 00004a40     0d5f          calla   civanic
         00004a50 00000000! 
    1132                    
    1133 00004a70           start_waitloop1
    1134 00004a70     05ae          move    @OLD_PSTATUS,a14
         00004a80 00000000! 
    1135 00004aa0     4b4e          btst    a10,a14
    1136 00004ab0     cb00          jrnz    okz
         00004ac0     00dd  
    1137                    
    1138 00004ad0     05ae          move    @PSTATUS,a14
         00004ae0 00000000! 
    1139 00004b00     4b4e          btst    a10,a14
    1140 00004b10     cb00          jrnz    okz
         00004b20     00d7  
    1141                    ;Timer has run out on this player
    1142 00004b30     4d48          move    a10,a8
    1143 00004b40     0d5f          calla   clear_icon_total
         00004b50 00000000! 
    1144 00004b70     0d5f          calla   del_bonus_icons
         00004b80 00000000! 
    1145 00004ba0     05a0          move    @PSTATUS,a0
         00004bb0 00000000! 
    1146 00004bd0     cb00          jrnz    still
         00004be0     00ba  
    1147 00004bf0     05a0          move    @rr_loss,a0
         00004c00 00000230- 
    1148 00004c20     ca1c          jrz     do_game_over
    1149 00004c30     05a0          move    @cursor_procs,a0
         00004c40 00000220- 
    1150 00004c60     ca18          jrz     do_game_over
    1151 00004c70     4d40          move    a10,a0
    1152 00004c80     1020          addk    1,a0
    1153 00004c90     05ae          move    @active_flag,a14
         00004ca0 00000090- 
    1154 00004cc0     540e          or      a0,a14
    1155 00004cd0     058e          move    a14,@active_flag
         00004ce0 00000090- 
    1156 00004d00     c000          jruc    still
         00004d10     00a7  
    1157                    ;       jruc    do_game_over
    1158                    
    1159                    ;Goto game over.
    1160 00004d20            SUBR   THIS_GAME_IS_BEATEN
    1161 00004d20     5600          CLR     A0
    1162 00004d30     0580          MOVE    A0,@PSTATUS
         00004d40 00000000! 
    1163                    
    1164 00004d60     09ce          movi    INGAMEOVER,a14          ;set GAMSTATE
         00004d70     0007  
    1165 00004d80     058e          move    a14,@GAMSTATE
         00004d90 00000000! 
    1166 00004db0     09ce          movi    GAMEOVER_PID,a14        ;set our PID
         00004dc0     0800  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   27

    1167 00004dd0     b1cd          move    a14,*a13(PROCID)
         00004de0     0020  
    1168                    
    1169                    ;       ;put up the sneak preview screen
    1170                    ;       calla   display_blank
    1171                    ;       calla   WIPEOUT
    1172                    ;       movk    1,a0                    ;page flipping on
    1173                    ;       move    a0,@dpageflip
    1174                    ;       movi    hstd_mod,a0
    1175                    ;       move    a0,@BAKMODS,L
    1176                    ;       CALLA   BGND_UD1                ;create objects for background
    1177                    ;
    1178                    ;       movi    win1_msg,a2
    1179                    ;       calla   print_message
    1180                    ;
    1181                    ;       movi    win2_msg,a2
    1182                    ;       calla   print_message
    1183                    ;
    1184                    ;       movi    win3_msg,a2
    1185                    ;       calla   print_message
    1186                    ;
    1187                    ;       calla   display_unblank
    1188                    ;
    1189                    ;       SLEEP   TSEC*10
    1190                    
    1191 00004df0            SUBR   do_game_over
    1192                    
    1193                            ;kill the ladder
    1194 00004df0     0d5f          calla   INIT_LADDER_TABLE
         00004e00 00000000! 
    1195                    
    1196 00004e20     57ce          clr     a14
    1197 00004e30     058e          move    a14,@rr_loss
         00004e40 00000230- 
    1198 00004e60     058e          move    a14,@PSTATUS
         00004e70 00000000! 
    1199                    
    1200 00004e90     09ce          movi    INGAMEOVER,a14          ;set GAMSTATE
         00004ea0     0007  
    1201 00004eb0     058e          move    a14,@GAMSTATE
         00004ec0 00000000! 
    1202                    
    1203 00004ee0     09ce          movi    GAMEOVER_PID,a14        ;set our PID
         00004ef0     0800  
    1204 00004f00     b1cd          move    a14,*a13(PROCID)
         00004f10     0020  
    1205                    
    1206 00004f20     0d5f          calla   display_blank
         00004f30 00000000! 
    1207 00004f50     0d5f          calla   WIPEOUT
         00004f60 00000000! 
    1208                    
    1209                            .ref    wsf14_ascii,GENERIC_DISPLAY
    1210                    
    1211 00004f80                   JSRP    GENERIC_DISPLAY
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   28

    1212                    
    1213 00004ff0     09e2          movi    LN1b_setup,a2
         00005000 00005600' 
    1214 00005020     0d5f          calla   setup_message
         00005030 00000000! 
    1215 00005050     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00005060     0702  
    1216 00005070     0580          move    a0,@mess_objid          ;OBJ ID's for text
         00005080 00000000! 
    1217 000050a0     09e4          movi    str_game,a4
         000050b0 00005740' 
    1218 000050d0     0d5f          calla   print_string_C2
         000050e0 00000000! 
    1219                    
    1220 00005100     09e2          movi    LN2b_setup,a2
         00005110 000056a0' 
    1221 00005130     0d5f          calla   setup_message
         00005140 00000000! 
    1222 00005160     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00005170     0702  
    1223 00005180     0580          move    a0,@mess_objid          ;OBJ ID's for text
         00005190 00000000! 
    1224 000051b0     09e4          movi    str_over,a4
         000051c0 00005768' 
    1225 000051e0     0d5f          calla   print_string_C2
         000051f0 00000000! 
    1226                    
    1227                    ;       .ref    show_wrestler_end_story
    1228                    
    1229                    ;       movi    0,a1
    1230                    ;       clr     a0
    1231                    ;       calla   show_wrestler_end_story
    1232                    ;       SLEEP   TSEC*5
    1233                    
    1234 00005210                   SLEEPK  1
    1235                    
    1236 00005250     09cb          MOVI    -1,A11
         00005260     ffff  
    1237 00005270     09c8          MOVI    100,A8
         00005280     0064  
    1238 00005290                   CREATE  FADE_PID,FADE_MASTER_VOL
    1239                    
    1240 00005310     0d5f          calla   display_unblank
         00005320 00000000! 
    1241 00005340                   SLEEP   TSEC*4
    1242 00005390     0d5f          calla   UNIT_CLR                ;CLEAR THE FACTIONS OF FRACTIONS
         000053a0 00000000! 
    1243                    
    1244 000053c0     09c0          movi    AMODE_PID,a0
         000053d0     0100  
    1245 000053e0     b00d          move    a0,*a13(PROCID)
         000053f0     0020  
    1246                    
    1247 00005400     5663          CLR     A3
    1248 00005410     0d5f          CALLA   SNDSND
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   29

         00005420 00000000! 
    1249                    
    1250 00005440     09c0          movi    ADJVOLUME,a0
         00005450     001c  
    1251 00005460     0d5f          calla   GET_ADJ
         00005470 00000000! 
    1252 00005490                   BADCHK  a0,0,255,28             ;reg, lo, hi, val if bad
    1253 00005520     0d5f          calla   set_volume
         00005530 00000000! 
    1254                    
    1255 00005550     5708          clr     a8
    1256 00005560     0d5f          calla   clear_icon_total
         00005570 00000000! 
    1257 00005590     1828          movk    1,a8
    1258 000055a0     0d5f          calla   clear_icon_total
         000055b0 00000000! 
    1259                    
    1260 000055d0     c080          jauc    attract_mode
         000055e0 00000000! 
    1261                    
    1262 00005600           LN1b_setup
    1263 00005600                   JAM_STR wgsf24_ascii,6,0,200,128-41,WGSF_Y_P,0
    1264 000056a0           LN2b_setup
    1265 000056a0                   JAM_STR wgsf24_ascii,6,0,200,128,WGSF_Y_P,0
    1266 00005740           str_game
    1267 00005740       47          .byte   "GAME",0
    1268 00005768           str_over
    1269 00005768       4f          .byte   "OVER",0
    1270 00005790                   .even
    1271                    
    1272                    ;win1_msg
    1273                    ;       JAM_STR osgemd_ascii,10,0,200,50,GOLD,print_string_C2
    1274                    ;       .byte   "THANK YOU FOR PLAYING",0,0
    1275                    ;       .even
    1276                    ;
    1277                    ;win2_msg
    1278                    ;       JAM_STR osgemd_ascii,10,0,200,90,GOLD,print_string_C2
    1279                    ;       .byte   "THIS SNEAK PREVIEW",0,0
    1280                    ;       .even
    1281                    ;
    1282                    ;win3_msg
    1283                    ;       JAM_STR osgemd_ascii,10,0,200,130,GOLD,print_string_C2
    1284                    ;       .byte   "OF WRESTLEMANIA BY MIDWAY",0,0
    1285                    ;       .even
    1286                    
    1287 00005790           still
    1288                    ;Other player is in game
    1289 00005790     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000057a0     0704  
    1290 000057b0     4140          add     a10,a0
    1291 000057c0     0d5f          calla   obj_del1c
         000057d0 00000000! 
    1292                    ;If other player has already picked his wrestler, just blow out of here
    1293                    ;otherwise, goto challenger needed screen stuff...
    1294 000057f0     05ae          move    @active_flag,a14        ;don't quit if someone jumps in here
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   30

         00005800 00000090- 
    1295 00005820     cb26          jrnz    norm
    1296                    ;Tell buyin_select proc to wake up and exit!
    1297 00005830     1820          movk    1,a0
    1298 00005840     0580          move    a0,@blow_out
         00005850 000000c0- 
    1299                    
    1300 00005870                   DIE
    1301                    
    1302 000058a0           okz
    1303 000058a0                   SLEEPK  1
    1304                    
    1305 000058e0     0d3f          callr   blink
         000058f0     02a8  
    1306                    
    1307 00005900     05ae          move    @PSTATUS,a14
         00005910 00000000! 
    1308 00005930     4b4e          btst    a10,a14
    1309 00005940     ca00          jrz     enough_money1
         00005950     fefc  
    1310                    
    1311                    ;       jrz     start_waitloop1
    1312                    
    1313 00005960     b500          move    *a8(OXPOS),a0
         00005970     0090  
    1314 00005980     0b80          andi    1ffh,a0
         00005990 fffffe00  
    1315 000059b0     b008          move    a0,*a8(OXPOS)
         000059c0     0090  
    1316                    
    1317 000059d0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000059e0     0704  
    1318 000059f0     4140          add     a10,a0
    1319 00005a00     0d5f          calla   obj_del1c
         00005a10 00000000! 
    1320                    
    1321 00005a30                   SLEEPK  1                       ;Fix pal glitch!
    1322                    
    1323 00005a70     c000          jruc    begin_select
         00005a80     01c1  
    1324                    
    1325 00005a90           norm
    1326                    
    1327 00005a90     b7a8          move    *a13(NAME),a8,L
         00005aa0     0140  
    1328 00005ab0     cb07          jrnz    no_need_to_create_name
    1329                    
    1330                            ;create the name text
    1331 00005ac0     b720          move    *a9(PI_STARTNAME),a0,L
         00005ad0     0080  
    1332 00005ae0     0d5f          calla   BEGINOBJ_TBL
         00005af0 00000000! 
    1333 00005b10     b30d          move    a8,*a13(NAME),L
         00005b20     0140  
    1334 00005b30           no_need_to_create_name
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   31

    1335                    
    1336                    ;Place a message which reads:
    1337                    ;Challenger needed!
    1338                    ;x credits to start
    1339                    ;Unless we are in freeplay!  Then
    1340                    ;just display challenger needed centered
    1341                    ;in the box!
    1342                    
    1343 00005b30     1a60          movk    ADJFREPL,a0             ;Are we in free play?
    1344 00005b40     0d5f          calla   GET_ADJ
         00005b50 00000000! 
    1345 00005b70     ca39          jrz     not_freeply
    1346                    
    1347                    ;Print free play
    1348 00005b80     09e2          movi    ln0_setup,a2
         00005b90 00006c10' 
    1349 00005bb0     4d4a          move    a10,a10
    1350 00005bc0     ca03          jrz     ok2c
    1351 00005bd0     09e2          movi    ln0_setupb,a2
         00005be0 00006cb0' 
    1352 00005c00     0d5f  ok2c    calla   setup_message
         00005c10 00000000! 
    1353                    
    1354 00005c30     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00005c40     0704  
    1355 00005c50     4140          add     a10,a0
    1356 00005c60     0580          move    a0,@mess_objid
         00005c70 00000000! 
    1357                    
    1358 00005c90     09e4          movi    str_text0,a4
         00005ca0 00007528' 
    1359 00005cc0     0d5f          calla   print_string_C2
         00005cd0 00000000! 
    1360                    
    1361                    
    1362                    
    1363                    ;Print centered "challenger needed" message
    1364 00005cf0     09e2          movi    ln1_setup,a2
         00005d00 00006d50' 
    1365 00005d20     4d4a          move    a10,a10
    1366 00005d30     ca03          jrz     ok
    1367 00005d40     09e2          movi    ln1_setupb,a2
         00005d50 00006df0' 
    1368 00005d70     0d5f  ok      calla   setup_message
         00005d80 00000000! 
    1369                    
    1370 00005da0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00005db0     0704  
    1371 00005dc0     4140          add     a10,a0
    1372 00005dd0     0580          move    a0,@mess_objid
         00005de0 00000000! 
    1373                    
    1374 00005e00     09e4          movi    str_text,a4
         00005e10 000074d0' 
    1375 00005e30     0d5f          calla   print_string_C2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   32

         00005e40 00000000! 
    1376                    
    1377 00005e60     09e2          movi    ln2_setup,a2
         00005e70 00006e90' 
    1378 00005e90     4d4a          move    a10,a10
    1379 00005ea0     ca00          jrz     ok4
         00005eb0     0093  
    1380 00005ec0     09e2          movi    ln2_setupb,a2
         00005ed0 00006f30' 
    1381 00005ef0     c000          jruc    ok4
         00005f00     008e  
    1382                    
    1383 00005f10           not_freeply
    1384                    ;Print how many credits to start
    1385 00005f10                   PUSH    a8
    1386 00005f20     1980          movk    ADJCSTRT,a0
    1387 00005f30     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         00005f40 00000000! 
    1388 00005f60     4c03          move    a0,a3
    1389 00005f70     0b40          cmpi    10,a0
         00005f80     fff5  
    1390 00005f90     c401          jrlt    max
    1391 00005fa0     1920          movk    9,a0
    1392 00005fb0           max
    1393 00005fb0     24a0          sll     5,a0
    1394 00005fc0     0b20          addi    digits_tbl,a0
         00005fd0 0000c870' 
    1395 00005ff0     8602          move    *a0,a2,L                ;* image
    1396                    
    1397 00006000     09e0          movi    [050,0],a0                      ;x pos
         00006010 00320000  
    1398 00006030     0b43          cmpi    1,a3
         00006040     fffe  
    1399 00006050     cb03          jrnz    not1
    1400 00006060     09e0          movi    [054,0],a0                      ;x pos
         00006070 00360000  
    1401 00006090     4d4a  not1    move    a10,a10
    1402 000060a0     ca09          jrz     zp1
    1403 000060b0     09e0          movi    [0122h,0],a0                    ;x pos
         000060c0 01220000  
    1404 000060e0     0b43          cmpi    1,a3
         000060f0     fffe  
    1405 00006100     cb03          jrnz    zp1
    1406 00006110     09e0          movi    [0126h,0],a0                    ;x pos
         00006120 01260000  
    1407 00006140           zp1
    1408 00006140     09e1          movi    [110,0],a1                      ;y pos
         00006150 006e0000  
    1409 00006170     09c3          movi    104+200,a3                      ;z pos
         00006180     0130  
    1410 00006190     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         000061a0 0000a002  
    1411 000061c0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         000061d0     0704  
    1412 000061e0     4145          add     a10,a5                          ;object ID
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   33

    1413 000061f0     56c6          clr     a6                              ;x vel
    1414 00006200     56e7          clr     a7                              ;y vel
    1415 00006210     09f0          movi    FNT9YEL_P,b0
         00006220 00000000! 
    1416 00006240     0d5f          calla   BEGINOBJP
         00006250 00000000! 
    1417 00006270                   PULL    a8
    1418                    
    1419 00006280     09e2          movi    ln3_setup,a2
         00006290 00007250' 
    1420 000062b0     4d4a          move    a10,a10
    1421 000062c0     ca03          jrz     ok2
    1422 000062d0     09e2          movi    ln3_setupb,a2
         000062e0 000072f0' 
    1423 00006300     0d5f  ok2     calla   setup_message
         00006310 00000000! 
    1424                    
    1425 00006330     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006340     0704  
    1426 00006350     4140          add     a10,a0
    1427 00006360     0580          move    a0,@mess_objid
         00006370 00000000! 
    1428                    
    1429 00006390     09e4          movi    str_text3,a4
         000063a0 000075b8' 
    1430 000063c0     1980          movk    ADJCSTRT,a0
    1431 000063d0     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         000063e0 00000000! 
    1432 00006400     0b40          cmpi    1,a0
         00006410     fffe  
    1433 00006420     cb03          jrnz    not1b
    1434 00006430     09e4          movi    str_text3b,a4
         00006440 00007608' 
    1435 00006460           not1b
    1436 00006460     0d5f          calla   print_string_C2
         00006470 00000000! 
    1437                    
    1438 00006490     09e2          movi    ln4_setup,a2
         000064a0 00007390' 
    1439 000064c0     4d4a          move    a10,a10
    1440 000064d0     ca03          jrz     ok2B
    1441 000064e0     09e2          movi    ln4_setupb,a2
         000064f0 00007430' 
    1442 00006510     0d5f  ok2B    calla   setup_message
         00006520 00000000! 
    1443                    
    1444 00006540     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006550     0704  
    1445 00006560     4140          add     a10,a0
    1446 00006570     0580          move    a0,@mess_objid
         00006580 00000000! 
    1447                    
    1448 000065a0     09e4          movi    str_text4,a4
         000065b0 00007650' 
    1449 000065d0     0d5f          calla   print_string_C2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   34

         000065e0 00000000! 
    1450                    
    1451                    
    1452                    ;Print "challenger needed" message
    1453 00006600     09e2          movi    ln1_setupx,a2
         00006610 00006fd0' 
    1454 00006630     4d4a          move    a10,a10
    1455 00006640     ca03          jrz     ok3
    1456 00006650     09e2          movi    ln1_setupxb,a2
         00006660 00007070' 
    1457 00006680     0d5f  ok3     calla   setup_message
         00006690 00000000! 
    1458                    
    1459 000066b0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         000066c0     0704  
    1460 000066d0     4140          add     a10,a0
    1461 000066e0     0580          move    a0,@mess_objid
         000066f0 00000000! 
    1462                    
    1463 00006710     09e4          movi    str_text,a4
         00006720 000074d0' 
    1464 00006740     0d5f          calla   print_string_C2
         00006750 00000000! 
    1465                    
    1466 00006770     09e2          movi    ln2_setupx,a2
         00006780 00007110' 
    1467 000067a0     4d4a          move    a10,a10
    1468 000067b0     ca03          jrz     ok4
    1469 000067c0     09e2          movi    ln2_setupxb,a2
         000067d0 000071b0' 
    1470 000067f0     0d5f  ok4     calla   setup_message
         00006800 00000000! 
    1471                    
    1472 00006820     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006830     0704  
    1473 00006840     4140          add     a10,a0
    1474 00006850     0580          move    a0,@mess_objid
         00006860 00000000! 
    1475                    
    1476 00006880     09e4          movi    str_text2,a4
         00006890 00007578' 
    1477 000068b0     0d5f          calla   print_string_C2
         000068c0 00000000! 
    1478                    
    1479                    ;Inactive.  wait for buyin
    1480                    ;Create the insert coin/press start message
    1481                      
    1482 000068e0           enough_money
    1483 000068e0     0d5f          calla   CR_STRTP
         000068f0 00000000! 
    1484 00006910     c909          jrhs    enough_money3
    1485                    ;There's not enough money.  flash 'insert coins' message and wait
    1486 00006920     b7a8          move    *a13(NAME),a8,L
         00006930     0140  
    1487 00006940     09e0          movi    WF_INSERT,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   35

         00006950 00000000! 
    1488 00006970     0d5f          calla   civanic
         00006980 00000000! 
    1489 000069a0     c008          jruc    start_waitloop
    1490 000069b0           enough_money3
    1491                    ;There's enough money.  flash 'press start' message and wait
    1492 000069b0     b7a8          move    *a13(NAME),a8,L
         000069c0     0140  
    1493 000069d0     09e0          movi    WF_START,a0
         000069e0 00000000! 
    1494 00006a00     0d5f          calla   civanic
         00006a10 00000000! 
    1495                    
    1496                    
    1497 00006a30           start_waitloop
    1498 00006a30                   SLEEPK  1
    1499                    
    1500 00006a70     0d3f          callr   blink
         00006a80     018f  
    1501                    
    1502 00006a90     05ae          move    @PSTATUS,a14
         00006aa0 00000000! 
    1503 00006ac0     4b4e          btst    a10,a14
    1504 00006ad0     cae0          jrz     enough_money
    1505                    
    1506                    ;       jrz     start_waitloop
    1507                    
    1508 00006ae0     b500          move    *a8(OXPOS),a0
         00006af0     0090  
    1509 00006b00     0b80          andi    1ffh,a0
         00006b10 fffffe00  
    1510 00006b30     b008          move    a0,*a8(OXPOS)
         00006b40     0090  
    1511                    
    1512 00006b50     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         00006b60     0704  
    1513 00006b70     4140          add     a10,a0
    1514 00006b80     0d5f          calla   obj_del1c
         00006b90 00000000! 
    1515                    
    1516 00006bb0                   SLEEPK  1                       ;Fix pal glitch!
    1517                    
    1518 00006bf0     c000          jruc    begin_select
         00006c00     00a9  
    1519                    
    1520                    
    1521                    
    1522 00006c10           ln0_setup
    1523 00006c10                   JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    1524 00006cb0           ln0_setupb
    1525 00006cb0                   JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    1526                    
    1527 00006d50           ln1_setup
    1528 00006d50                   JAM_STR font9_ascii,8,0,81,80,FNT9YEL_P,0
    1529 00006df0           ln1_setupb
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   36

    1530 00006df0                   JAM_STR font9_ascii,8,0,321,80,FNT9YEL_P,0
    1531                    
    1532 00006e90           ln2_setup
    1533 00006e90                   JAM_STR font9_ascii,8,0,81,95,FNT9YEL_P,0
    1534 00006f30           ln2_setupb
    1535 00006f30                   JAM_STR font9_ascii,8,0,321,95,FNT9YEL_P,0
    1536                    
    1537 00006fd0           ln1_setupx
    1538 00006fd0                   JAM_STR font9_ascii,8,0,81,60,FNT9YEL_P,0
    1539 00007070           ln1_setupxb
    1540 00007070                   JAM_STR font9_ascii,8,0,321,60,FNT9YEL_P,0
    1541                    
    1542 00007110           ln2_setupx
    1543 00007110                   JAM_STR font9_ascii,8,0,81,75,FNT9YEL_P,0
    1544 000071b0           ln2_setupxb
    1545 000071b0                   JAM_STR font9_ascii,8,0,321,75,FNT9YEL_P,0
    1546                    
    1547                    
    1548 00007250           ln3_setup
    1549 00007250                   JAM_STR font9_ascii,8,0,81,110,FNT9YEL_P,0
    1550 000072f0           ln3_setupb
    1551 000072f0                   JAM_STR font9_ascii,8,0,321,110,FNT9YEL_P,0
    1552                    
    1553 00007390           ln4_setup
    1554 00007390                   JAM_STR font9_ascii,8,0,81,125,FNT9YEL_P,0
    1555 00007430           ln4_setupb
    1556 00007430                   JAM_STR font9_ascii,8,0,321,125,FNT9YEL_P,0
    1557                    
    1558 000074d0           str_text
    1559 000074d0       43          .string "CHALLENGER",0
    1560 00007528           str_text0
    1561 00007528       46          .string "FREE PLAY",0
    1562 00007578           str_text2
    1563 00007578       4e          .string "NEEDED!",0
    1564 000075b8           str_text3
    1565 000075b8       20          .string "  CREDITS",0
    1566 00007608           str_text3b
    1567 00007608       20          .string "  CREDIT",0
    1568 00007650           str_text4
    1569 00007650       54          .string "TO START",0
    1570 000076a0                   .even
    1571                    
    1572 000076a0           begin_select
    1573 000076a0     05a0          MOVE    @no_pin_check,A0
         000076b0 00000000! 
    1574 000076d0     cb1f          JRNZ    are_we_waiting2
    1575 000076e0     0d5f          calla   is_final_match
         000076f0 00000000! 
    1576 00007710     c81b          jrc     are_we_waiting2
    1577                    
    1578 00007720     4d48          move    a10,a8
    1579 00007730     098f          mmtm    sp,a6,a7,a8,a9,a10,a11
         00007740     03f0  
    1580 00007750                   JSRP    pin_speed_check
    1581 000077c0     09af          mmfm    sp,a6,a7,a8,a9,a10,a11
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   37

         000077d0     0fc0  
    1582                    
    1583 000077e0     4d40          move    a10,a0
    1584 000077f0     0b00          addi    HI_INPUT_PID,a0
         00007800     0137  
    1585 00007810     09c1          movi    -1,a1
         00007820     ffff  
    1586 00007830     0d5f          calla   EXISTP
         00007840 00000000! 
    1587 00007860     ca06          jrz     no_set_it_later
    1588 00007870     4d40          move    a10,a0
    1589 00007880     1020          inc     a0
    1590 00007890     03a0          neg     a0
    1591 000078a0     0580          move    a0,@are_we_waiting_f
         000078b0 00000100- 
    1592 000078d0           no_set_it_later
    1593                    
    1594                    ;       move    @PSTATUS,A0
    1595                    ;       CMPI    3,A0
    1596                    ;       JREQ    are_we_waiting2
    1597                    ;
    1598                    ;       movi    60,a0
    1599                    ;       move    a0,@are_we_waiting_f
    1600                    
    1601 000078d0           are_we_waiting2
    1602 000078d0     4d40          move    a10,a0
    1603 000078e0     0b00          addi    HI_INPUT_PID,a0
         000078f0     0137  
    1604 00007900     09c1          movi    -1,a1
         00007910     ffff  
    1605 00007920     0d5f          calla   EXISTP
         00007930 00000000! 
    1606 00007950     ca1e          JRZ     FINISHED_INPUTTING2b
    1607 00007960                   sleep   1
    1608 000079b0     09c0          movi    CYCPID,a0
         000079c0     0110  
    1609 000079d0     09c1          movi    -1,a1
         000079e0     ffff  
    1610 000079f0     0d5f          calla   EXISTP
         00007a00 00000000! 
    1611 00007a20     cbea          jrnz    are_we_waiting2
    1612 00007a30     4d40          move    a10,a0
    1613 00007a40     0b00          addi    HI_INPUT_PID,a0
         00007a50     0137  
    1614 00007a60     09c1          movi    -1,a1
         00007a70     ffff  
    1615 00007a80     0d5f          calla   EXISTP
         00007a90 00000000! 
    1616 00007ab0     ca08          JRZ     FINISHED_INPUTTING2b
    1617 00007ac0     098f          mmtm    sp,a10,a9,a8
         00007ad0     00e0  
    1618 00007ae0     0d5f          calla   do_that_cycle
         00007af0 00000000! 
    1619 00007b10     09af          mmfm    sp,a10,a9,a8
         00007b20     0700  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   38

    1620 00007b30     c0d9          jruc    are_we_waiting2
    1621                    
    1622 00007b40           FINISHED_INPUTTING2b
    1623 00007b40     05a0          move    @are_we_waiting_f,a0
         00007b50 00000100- 
    1624 00007b70     4d41          move    a10,a1
    1625 00007b80     1021          inc     a1
    1626 00007b90     03a1          neg     a1
    1627 00007ba0     4820          cmp     a1,a0
    1628 00007bb0     cb05          jrne    FINISHED_INPUTTING2
    1629 00007bc0     09c0          movi    60,a0
         00007bd0     003c  
    1630 00007be0     0580          move    a0,@are_we_waiting_f
         00007bf0 00000100- 
    1631                    
    1632 00007c10           FINISHED_INPUTTING2
    1633                    
    1634 00007c10     09c0          MOVI    CLOCK_PID,A0
         00007c20     013a  
    1635 00007c30     09c1          movi    -1,a1
         00007c40     ffff  
    1636 00007c50     0d5f          CALLA   EXISTP
         00007c60 00000000! 
    1637 00007c80     cb12          JRNZ    CLOCK_ALREADY_TICKING
    1638                    
    1639 00007c90                   PUSH    A10
    1640 00007ca0                   CREATE  CLOCK_PID,select_clock
    1641 00007d20     4c0a          move    a0,a10
    1642 00007d30                   CREATE0 clock_digits
    1643 00007da0                   PULL    A10
    1644                    
    1645 00007db0           CLOCK_ALREADY_TICKING
    1646                    
    1647 00007db0     b7a8          move    *a13(NAME),a8,L
         00007dc0     0140  
    1648 00007dd0     cb07          jrnz    no_need_to_create
    1649                    
    1650                            ;create the name text
    1651 00007de0     b720          move    *a9(PI_STARTNAME),a0,L
         00007df0     0080  
    1652 00007e00     0d5f          calla   BEGINOBJ_TBL
         00007e10 00000000! 
    1653 00007e30     b30d          move    a8,*a13(NAME),L
         00007e40     0140  
    1654 00007e50           no_need_to_create
    1655                    
    1656 00007e50     05ae          move    @total_matches,a14
         00007e60 00000000! 
    1657 00007e80     cb18          jrnz    HOWARD_ALREADY_GOING
    1658 00007e90     05ae          move    @DONE_HOWARD,a14
         00007ea0 00000000! 
    1659 00007ec0     cb2a          jrnz    HOWARD_HAS_SPOKEN
    1660                    
    1661 00007ed0           GOOD_EVENING
    1662 00007ed0     09c0          movi    1Fbh,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   39

         00007ee0     01fb  
    1663 00007ef0     0d5f          CALLA   ADD_VOICE
         00007f00 00000000! 
    1664 00007f20     09c0          movi    1Fch,a0
         00007f30     01fc  
    1665 00007f40     0d5f          CALLA   ADD_VOICE
         00007f50 00000000! 
    1666 00007f70     09c0          movi    1Fdh,a0
         00007f80     01fd  
    1667 00007f90     0d5f          CALLA   ADD_VOICE
         00007fa0 00000000! 
    1668                    
    1669 00007fc0     1820          movk    1,a0
    1670 00007fd0     0580          move    a0,@DONE_HOWARD
         00007fe0 00000000! 
    1671 00008000     c016          JRUC    HOWARD_HAS_SPOKEN
    1672                    
    1673 00008010           HOWARD_ALREADY_GOING
    1674 00008010     05ae          move    @DONE_HOWARD,a14
         00008020 00000000! 
    1675 00008040     cb12          jrnz    HOWARD_HAS_SPOKEN
    1676 00008050     09c0          MOVI    100,A0
         00008060     0064  
    1677 00008070     0d5f          CALLA   RNDPER
         00008080 00000000! 
    1678 000080a0     c20c          jrls    HOWARD_HAS_SPOKEN
    1679                    
    1680 000080b0     0be0          SUBI    50,A0
         000080c0     ffcd  
    1681 000080d0     cedf          JRN     GOOD_EVENING
    1682 000080e0     09c0          movi    1Ffh,a0
         000080f0     01ff  
    1683 00008100     0d5f          CALLA   ADD_VOICE
         00008110 00000000! 
    1684                    
    1685 00008130     1820          movk    1,a0
    1686 00008140     0580          move    a0,@DONE_HOWARD
         00008150 00000000! 
    1687 00008170           HOWARD_HAS_SPOKEN
    1688                    
    1689                            ;set our active bit if it's not already set
    1690 00008170     05ae          move    @active_flag,a14
         00008180 00000090- 
    1691 000081a0     4d40          move    a10,a0
    1692 000081b0     1020          inc     a0
    1693 000081c0     540e          or      a0,a14
    1694 000081d0     058e          move    a14,@active_flag
         000081e0 00000090- 
    1695                    
    1696                            ;initialize index
    1697 00008200     b52b          move    *a9(PI_STARTPOS),a11
         00008210     0040  
    1698                    
    1699                            ;initialize MUG?
    1700 00008220     1900          movk    8,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   40

    1701 00008230     5621          clr     a1
    1702 00008240     4da2          move    a13,a2
    1703 00008250     0b02          addi    MUG1,a2
         00008260     0170  
    1704 00008270           initloop
    1705 00008270     9222          move    a1,*a2+,L
    1706 00008280     3c40          dsj     a0,initloop
    1707                    
    1708                    ;       ;create our attrib text
    1709                    ;       move    *a9(PI_ATTTXT),a0,L
    1710                    ;       calla   BEGINOBJ_TBL
    1711                    ;       move    *a8(OXVAL),a0,L
    1712                    ;       move    *a8(OYVAL),a1,L
    1713                    ;
    1714                    ;       ;create the att bars
    1715                    ;       addi    [63,0],a0
    1716                    ;       addi    [12,0],a1
    1717                    ;       movi    ATTMTR_0,a2
    1718                    ;       movi    atttxt_z,a3
    1719                    ;       movi    DMAWNZ,a4
    1720                    ;       movi    CLSNEUT,a5
    1721                    ;       clr     a6
    1722                    ;       clr     a7
    1723                    ;
    1724                    ;       PUSH    a10,a11
    1725                    ;
    1726                    ;       movi    4,a10                   ;bar count
    1727                    ;       move    a13,a11
    1728                    ;       addi    ATT1,a11
    1729                    ;
    1730                    ;abc_loop
    1731                    ;       PUSH    a0,a1,a2,a3,a4,a5,a6,a7
    1732                    ;       calla   BEGINOBJ
    1733                    ;       PULL    a0,a1,a2,a3,a4,a5,a6,a7
    1734                    ;       move    a8,*a11+,L
    1735                    ;       addi    [8,0],a1
    1736                    ;       dsj     a10,abc_loop
    1737                    ;       PULL    a10,a11
    1738                    
    1739                            ;create our cursors
    1740 00008290     b720          move    *a9(PI_HILITE),a0,L
         000082a0     0000  
    1741 000082b0     0d5f          calla   BEGINOBJ_TBL
         000082c0 00000000! 
    1742 000082e0     b30d          move    a8,*a13(HILITE),L
         000082f0     0100  
    1743                    
    1744 00008300     b720          move    *a9(PI_HIPLATE),a0,L
         00008310     0020  
    1745 00008320     0d5f          calla   BEGINOBJ_TBL
         00008330 00000000! 
    1746 00008350     b30d          move    a8,*a13(HIPLATE),L
         00008360     0120  
    1747                    
    1748 00008370     c01d          jruc    first_adjust
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   41

    1749                    
    1750 00008380           blink
    1751 00008380     b5a0          move    *a13(CNTR),a0
         00008390     02f0  
    1752 000083a0     1420          dec     a0
    1753 000083b0     b00d          move    a0,*a13(CNTR)
         000083c0     02f0  
    1754 000083d0     c10a          jrp     cont
    1755 000083e0     1ac0          movk    22,a0
    1756 000083f0     b00d          move    a0,*a13(CNTR)
         00008400     02f0  
    1757 00008410     b500          move    *a8(OXPOS),a0
         00008420     0090  
    1758 00008430     0bc0          xori    1000h,a0
         00008440 00001000  
    1759 00008460     b008          move    a0,*a8(OXPOS)
         00008470     0090  
    1760 00008480           cont
    1761 00008480     0960          rets
    1762                    
    1763                    
    1764                            .if     0
    1765                    
    1766                    ;Color cycle cursors...
    1767                    ;Good example for future cycles....
    1768                    
    1769                            PUSH    a8,a9,a10,a11
    1770                    
    1771                            move    a10,a10
    1772                            jrz     blue
    1773                    
    1774                            movi    [1,1],a8
    1775                            movi    CRHI_R_P,a9
    1776                            movi    redcyc_tbl,a10
    1777                            movk    4,a11
    1778                            CREATE  CYCPID,CYCLE_TABLE
    1779                            jruc    out
    1780                    
    1781                    blue
    1782                            movi    [1,1],a8
    1783                            movi    CRHI_B_P,a9
    1784                            movi    blucyc_tbl,a10
    1785                            movk    4,a11
    1786                            CREATE  CYCPID,CYCLE_TABLE
    1787                    
    1788                    out     PULL    a8,a9,a10,a11
    1789                    
    1790                            jruc    first_adjust
    1791                    
    1792                    
    1793                    blucyc_tbl
    1794                            .word   0041fh
    1795                            .word   0001fh
    1796                            .word   0001fh
    1797                            .word   0001fh
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   42

    1798                            .word   0001fh
    1799                            .word   0001fh
    1800                            .word   0001fh
    1801                            .word   0001fh
    1802                            .word   0001fh
    1803                            .word   0001fh
    1804                            .word   0001fh
    1805                            .word   0001fh
    1806                            .word   0001fh
    1807                            .word   0001fh
    1808                            .word   0001fh
    1809                            .word   0001fh
    1810                            .word   0001fh
    1811                            .word   0081fh,00c1fh,0101fh,0141fh,0181fh
    1812                            .word   01c1fh,0201fh,0241fh,0281fh,02c1fh,0301fh,0341fh,0381fh
    1813                            .word   03c1fh,0401fh,0441fh,0481fh,04c1fh,0501fh,0541fh,0581fh
    1814                            .word   05c1fh,0601fh,0641fh,0681fh,06c1fh,0701fh
    1815                            .word   0741fh,0701fh,06c1fh,0681fh,0641fh,0601fh,05c1fh
    1816                            .word   0581fh,0541fh,0501fh,04c1fh,0481fh,0441fh,0401fh,03c1fh
    1817                            .word   0381fh,0341fh,0301fh,02c1fh,0281fh,0241fh,0201fh,01c1fh
    1818                            .word   0181fh,0141fh,0101fh,00c1fh,0081fh,0041fh
    1819                    
    1820                            .word   0041fh
    1821                            .word   0001fh
    1822                            .word   0001fh
    1823                            .word   0001fh
    1824                            .word   0001fh
    1825                            .word   0001fh
    1826                            .word   0001fh
    1827                            .word   0001fh
    1828                            .word   0001fh
    1829                            .word   0001fh
    1830                            .word   0001fh
    1831                            .word   0001fh
    1832                            .word   0001fh
    1833                            .word   0001fh
    1834                            .word   0001fh
    1835                            .word   0001fh
    1836                            .word   0001fh
    1837                            .word   0081fh,00c1fh,0101fh,0141fh,0181fh
    1838                            .word   01c1fh,0201fh,0241fh,0281fh,02c1fh,0301fh,0341fh,0381fh
    1839                            .word   03c1fh,0401fh,0441fh,0481fh,04c1fh,0501fh,0541fh,0581fh
    1840                            .word   05c1fh,0601fh,0641fh,0681fh,06c1fh,0701fh
    1841                            .word   0741fh,0701fh,06c1fh,0681fh,0641fh,0601fh,05c1fh
    1842                            .word   0581fh,0541fh,0501fh,04c1fh,0481fh,0441fh,0401fh,03c1fh
    1843                            .word   0381fh,0341fh,0301fh,02c1fh,0281fh,0241fh,0201fh,01c1fh
    1844                            .word   0181fh,0141fh,0101fh,00c1fh,0081fh,0041fh
    1845                            .word   -1
    1846                    
    1847                    redcyc_tbl
    1848                            .word   07c20h
    1849                            .word   07c00h
    1850                            .word   07c00h
    1851                            .word   07c00h
    1852                            .word   07c00h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   43

    1853                            .word   07c00h
    1854                            .word   07c00h
    1855                            .word   07c00h
    1856                            .word   07c00h
    1857                            .word   07c00h
    1858                            .word   07c00h
    1859                            .word   07c00h
    1860                            .word   07c00h
    1861                            .word   07c00h
    1862                            .word   07c00h
    1863                            .word   07c00h
    1864                            .word   07c00h
    1865                            .word   07c40h,07c60h,07c80h,07ca0h,07cc0h
    1866                            .word   07ce0h,07d00h,07d20h,07d40h,07d60h,07d80h,07da0h,07dc0h
    1867                            .word   07de0h,07e00h,07e20h,07e40h,07e60h,07e80h,07ea0h
    1868                            .word   07ec0h,07ee0h,07f00h,07f20h,07f40h,07f60h,07f80h
    1869                            .word   07fa0h,07f80h,07f60h,07f40h,07f20h,07f00h,07ee0h,07ec0h
    1870                            .word   07ea0h,07e80h,07e60h,07e40h,07e20h,07e00h,07de0h
    1871                            .word   07dc0h,07da0h,07d80h,07d60h,07d40h,07d20h,07d00h,07ce0h
    1872                            .word   07cc0h,07ca0h,07c80h,07c60h,07c40h,07c20h
    1873                    
    1874                            .word   07c20h
    1875                            .word   07c00h
    1876                            .word   07c00h
    1877                            .word   07c00h
    1878                            .word   07c00h
    1879                            .word   07c00h
    1880                            .word   07c00h
    1881                            .word   07c00h
    1882                            .word   07c00h
    1883                            .word   07c00h
    1884                            .word   07c00h
    1885                            .word   07c00h
    1886                            .word   07c00h
    1887                            .word   07c00h
    1888                            .word   07c00h
    1889                            .word   07c00h
    1890                            .word   07c00h
    1891                            .word   07c40h,07c60h,07c80h,07ca0h,07cc0h
    1892                            .word   07ce0h,07d00h,07d20h,07d40h,07d60h,07d80h,07da0h,07dc0h
    1893                            .word   07de0h,07e00h,07e20h,07e40h,07e60h,07e80h,07ea0h
    1894                            .word   07ec0h,07ee0h,07f00h,07f20h,07f40h,07f60h,07f80h
    1895                            .word   07fa0h,07f80h,07f60h,07f40h,07f20h,07f00h,07ee0h,07ec0h
    1896                            .word   07ea0h,07e80h,07e60h,07e40h,07e20h,07e00h,07de0h
    1897                            .word   07dc0h,07da0h,07d80h,07d60h,07d40h,07d20h,07d00h,07ce0h
    1898                            .word   07cc0h,07ca0h,07c80h,07c60h,07c40h,07c20h
    1899                            .word   -1
    1900                    
    1901                            .endif
    1902                    
    1903                    
    1904 00008490           adjust
    1905 00008490     b520          move    *a9(PI_MOVESOUND),a0
         000084a0     00e0  
    1906                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   44

    1907 000084b0     b5ae          move    *a13(RND_DEST),a14
         000084c0     0160  
    1908 000084d0     ce02          jrn     move_sound_ok
    1909 000084e0     09c0          movi    0DDH,a0
         000084f0     00dd  
    1910 00008500           move_sound_ok
    1911                    
    1912 00008500     0d5f          calla   triple_sound
         00008510 00000000! 
    1913 00008530     0d3f          callr   erase_mugshot
         00008540     0219  
    1914 00008550           first_adjust
    1915 00008550     0d3f          callr   place_cursor
         00008560     01df  
    1916 00008570     0d3f          callr   draw_mugshot
         00008580     0223  
    1917 00008590     0d3f          callr   update_name
         000085a0     01fe  
    1918                    ;       callr   update_attbars
    1919                    
    1920                            ;set a6 to debounce value if not rndsel, or to move time if rndsel
    1921 000085b0     b5ae          move    *a13(RND_DEST),a14
         000085c0     0160  
    1922 000085d0     cf06          jrnn    waitloopzz
    1923 000085e0     1866          movk    3,a6
    1924                    
    1925 000085f0     5600          clr     a0
    1926 00008600     b008          move    a0,*a8(OCONST)          ;Clr color
         00008610     0160  
    1927 00008620     b00d          move    a0,*a13(CNTR)
         00008630     02f0  
    1928                    
    1929 00008640           waitloopzz
    1930                    
    1931 00008640     0d3f          callr   place_cursor
         00008650     01d0  
    1932                    
    1933                            ;flash the hilightes
    1934 00008660     b7a8          move    *a13(HIPLATE),a8,L
         00008670     0120  
    1935 00008680     b50e          move    *a8(OZPOS),a14
         00008690     00d0  
    1936 000086a0     0bce          xori    1,a14
         000086b0 00000001  
    1937 000086d0     b1c8          move    a14,*a8(OZPOS)
         000086e0     00d0  
    1938                    
    1939 000086f0     b7a8          move    *a13(HILITE),a8,L
         00008700     0100  
    1940 00008710     b50e          move    *a8(OZPOS),a14
         00008720     00d0  
    1941 00008730     0bce          xori    1,a14
         00008740 00000001  
    1942 00008760     b1c8          move    a14,*a8(OZPOS)
         00008770     00d0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   45

    1943                    
    1944 00008780                   PUSHP   a6,a7
    1945 000087a0                   SLEEPK  1
    1946 000087e0                   PULLP   a6,a7
    1947                    
    1948                    ;Flash cursors white
    1949                    
    1950 00008800     b5ae          move    *a13(CNTR),a14
         00008810     02f0  
    1951 00008820     142e          dec     a14
    1952 00008830     b1cd          move    a14,*a13(CNTR)
         00008840     02f0  
    1953 00008850     c110          jrp     normz
    1954 00008860     190e          movk    8,a14
    1955 00008870     b1cd          move    a14,*a13(CNTR)
         00008880     02f0  
    1956                    
    1957 00008890                   PUSH    a6,a7,a9
    1958 000088b0     09c9          movi    0202h,a9
         000088c0     0202  
    1959 000088d0                   CREATE0 FLASHME
    1960                            .ref    FLASHME
    1961 00008940                   PULL    a6,a7,a9
    1962 00008960           normz
    1963                    
    1964                            ;are we in random mode?
    1965 00008960     b5ae          move    *a13(RND_DEST),a14
         00008970     0160  
    1966 00008980     ce3f          jrn     not_rndsel
    1967                    
    1968                            ;we're in random select
    1969 00008990     0d86          dsj     a6,waitloop
         000089a0     fb12  
    1970                    
    1971                            ;time to move again
    1972 000089b0     09c6          movi    rnd_movespeed,a6        ;set time to next move
         000089c0     0005  
    1973 000089d0     1427          dec     a7
    1974 000089e0     c115          jrp     move_at_random
    1975                    
    1976                            ;move toward final destination
    1977                            ;if we're there, take it
    1978 000089f0     b5ae          move    *a13(RND_DEST),a14
         00008a00     0160  
    1979 00008a10     49cb          cmp     a14,a11
    1980 00008a20     ca00          jreq    but_hit
         00008a30     010f  
    1981                    
    1982                            ;not there.  one time in three, move at random anyway
    1983 00008a40     1860          movk    3,a0
    1984 00008a50     0d5f          calla   RNDRNG0
         00008a60 00000000! 
    1985 00008a80                   TEST    a0
    1986 00008a90     ca0a          jrz     move_at_random
    1987                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   46

    1988                            ;if we're in the correct row, move sideways
    1989 00008aa0     b5ae          move    *a13(RND_DEST),a14
         00008ab0     0160  
    1990 00008ac0     576e          xor     a11,a14
    1991 00008ad0     2fee          srl     1,a14
    1992 00008ae0     ca0f          jrz     rnd_move_sideways
    1993                    
    1994                            ;okay, move toward the correct row
    1995 00008af0     b5ae          move    *a13(RND_DEST),a14
         00008b00     0160  
    1996 00008b10     496e          cmp     a11,a14
    1997 00008b20     c45f          jrlt    stick_up
    1998 00008b30     c056          jruc    stick_down
    1999                    
    2000 00008b40           move_at_random
    2001                            ;move in a random direction, but only in legal directions
    2002 00008b40     1840          movk    2,a0
    2003 00008b50     0d5f          calla   RNDRNG0
         00008b60 00000000! 
    2004 00008b80     0b40          cmpi    2,a0
         00008b90     fffd  
    2005 00008ba0     ca07          jreq    rnd_move_up
    2006 00008bb0     0b40          cmpi    1,a0
         00008bc0     fffe  
    2007 00008bd0     ca0f          jreq    rnd_move_down
    2008                    
    2009                            ;move sideways by toggling bit zero in the index
    2010 00008be0           rnd_move_sideways
    2011 00008be0     0bcb          xori    1,a11
         00008bf0 00000001  
    2012 00008c10     c087          jruc    adjust
    2013                    
    2014 00008c20           rnd_move_up
    2015 00008c20     0b4b          cmpi    2,a11
         00008c30     fffd  
    2016 00008c40     c54d          jrge    stick_up
    2017                    
    2018                            ;moving up isn't legal.  move sideways or down
    2019 00008c50     09c0          movi    1,a0
         00008c60     0001  
    2020 00008c70     0d5f          calla   RNDRNG0
         00008c80 00000000! 
    2021 00008ca0                   TEST    a0
    2022 00008cb0     caf2          jrz     rnd_move_sideways
    2023 00008cc0     c03d          jruc    stick_down
    2024                    
    2025 00008cd0           rnd_move_down
    2026 00008cd0     0b4b          cmpi    5,a11
         00008ce0     fffa  
    2027 00008cf0     c63a          jrle    stick_down
    2028                    
    2029                            ;moving down isn't legal.  move sideways or up
    2030 00008d00     09c0          movi    1,a0
         00008d10     0001  
    2031 00008d20     0d5f          calla   RNDRNG0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   47

         00008d30 00000000! 
    2032 00008d50                   TEST    a0
    2033 00008d60     cae7          jrz     rnd_move_sideways
    2034 00008d70     c03a          jruc    stick_up
    2035                    
    2036 00008d80           not_rndsel
    2037                            ;if time is out, pick whoever we're on.
    2038 00008d80     05ae          move    @time_out,a14
         00008d90 00000080- 
    2039 00008db0     cb00          jrnz    but_hit
         00008dc0     00d6  
    2040                    
    2041                            ;begin random select?
    2042 00008dd0     4d40          move    a10,a0
    2043 00008de0     0d5f          calla   get_start_cur
         00008df0 00000000! 
    2044 00008e10     ca0a          jrz     button_checks
    2045                    
    2046                            ;start is down.  check stick
    2047 00008e20     4d40          move    a10,a0
    2048 00008e30     0d5f          calla   get_stick_val_cur
         00008e40 00000000! 
    2049 00008e60     1fe0          btst    JOYUP,a0
    2050 00008e70     ca04          jrz     button_checks
    2051                    
    2052                            ;stick is up.  check position
    2053 00008e80     b52e          move    *a9(PI_STARTPOS),a14
         00008e90     0040  
    2054 00008ea0     496e          cmp     a11,a14
    2055 00008eb0     ca3a          jreq    begin_random_select
    2056                    
    2057 00008ec0           button_checks
    2058 00008ec0     05ae          move    @are_we_waiting_f,a14
         00008ed0 00000100- 
    2059 00008ef0     ce01          jrn     no_worry_about_it
    2060 00008f00     cb07          jrnz    no_check_buts_yet
    2061 00008f10           no_worry_about_it
    2062                    
    2063                            ;button checks
    2064 00008f10     4d40          move    a10,a0
    2065 00008f20     0d5f          calla   get_but_val_down
         00008f30 00000000! 
    2066 00008f50                   TEST    a0
    2067 00008f60     cb00          jrnz    but_hit
         00008f70     00bb  
    2068 00008f80           no_check_buts_yet
    2069                    
    2070 00008f80     1426          dec     a6
    2071 00008f90     c100          jrp     waitloop
         00008fa0     fab2  
    2072 00008fb0     56c6          clr     a6
    2073                    
    2074                            ;stick checks
    2075 00008fc0     4d40          move    a10,a0
    2076 00008fd0     0d5f          calla   get_stick_val_down
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   48

         00008fe0 00000000! 
    2077 00009000     1fc0          btst    JOYDN,a0
    2078 00009010     cb08          jrnz    stick_down
    2079 00009020     1fe0          btst    JOYUP,a0
    2080 00009030     cb0e          jrnz    stick_up
    2081 00009040     1fa0          btst    JOYLFT,a0
    2082 00009050     cb14          jrnz    stick_left
    2083 00009060     1f80          btst    JOYRGT,a0
    2084 00009070     cb18          jrnz    stick_right
    2085 00009080     c000          jruc    waitloop
         00009090     faa3  
    2086                    
    2087 000090a0           stick_down
    2088                            ;add 2 unless the index is 6 or 7
    2089 000090a0     0b4b          cmpi    6,a11
         000090b0     fff9  
    2090 000090c0     c500          jrge    waitloop
         000090d0     fa9f  
    2091 000090e0     0b0b          addi    2,a11
         000090f0     0002  
    2092 00009100     c000          jruc    adjust
         00009110     ff37  
    2093                    
    2094 00009120           stick_up
    2095                            ;sub 2 unless index is 0 or 1
    2096 00009120     0b4b          cmpi    2,a11
         00009130     fffd  
    2097 00009140     c400          jrlt    waitloop
         00009150     fa97  
    2098 00009160     0beb          subi    2,a11
         00009170     fffd  
    2099 00009180     c000          jruc    adjust
         00009190     ff2f  
    2100                    
    2101 000091a0           stick_left
    2102                            ;sub 1 unless index is even
    2103 000091a0     1feb          btst    0,a11
    2104 000091b0     ca00          jrz     waitloop
         000091c0     fa90  
    2105 000091d0     142b          dec     a11
    2106 000091e0     c000          jruc    adjust
         000091f0     ff29  
    2107                    
    2108 00009200           stick_right
    2109                            ;add 1 unless index is odd
    2110 00009200     1feb          btst    0,a11
    2111 00009210     cb00          jrnz    waitloop
         00009220     fa8a  
    2112 00009230     102b          inc     a11
    2113 00009240     c000          jruc    adjust
         00009250     ff23  
    2114                    
    2115 00009260           begin_random_select
    2116                    
    2117                    ;Print text message
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   49

    2118 00009260     09e2          movi    message_setup,a2
         00009270 00009980' 
    2119 00009290     4d4a          move    a10,a10
    2120 000092a0     ca03          jrz     p1m
    2121 000092b0     09e2          movi    message_setup2,a2
         000092c0 00009a20' 
    2122 000092e0           p1m
    2123 000092e0     0d5f          calla   setup_message
         000092f0 00000000! 
    2124                    
    2125 00009310     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00009320     0702  
    2126 00009330     4d4a          move    a10,a10
    2127 00009340     ca02          jrz     p1x
    2128 00009350     09c0          movi    CLSNEUT|TYPTEXT|SUBMES2,a0
         00009360     0703  
    2129 00009370           p1x
    2130 00009370     0580          move    a0,@mess_objid
         00009380 00000000! 
    2131                    
    2132 000093a0     09e4          movi    message_string,a4
         000093b0 00009ac0' 
    2133 000093d0     0d5f          calla   print_string_C2
         000093e0 00000000! 
    2134                    
    2135 00009400     09c0          movi    7,a0
         00009410     0007  
    2136 00009420     0d5f          calla   RNDRNG0
         00009430 00000000! 
    2137                    
    2138 00009450     b00d          move    a0,*a13(RND_DEST)
         00009460     0160  
    2139 00009470     09c6          movi    rnd_movespeed,a6
         00009480     0005  
    2140 00009490     09c7          movi    rnd_wander,a7
         000094a0     000e  
    2141 000094b0     c000          jruc    waitloop
         000094c0     fa60  
    2142                    
    2143                            .ref    font9_ascii
    2144                            .ref    pal_getf,setup_message
    2145                            .ref    mess_objid,print_string_C2
    2146                    
    2147                    
    2148 000094d0           blink_rndper
    2149                    
    2150 000094d0     09e0          movi    FNT9RED_P,a0
         000094e0 00000000! 
    2151 00009500     0d5f          calla   pal_getf
         00009510 00000000! 
    2152 00009530     4c09          move    a0,a9
    2153                    
    2154 00009540     09e0          movi    FNT9WHT_P,a0
         00009550 00000000! 
    2155 00009570     0d5f          calla   pal_getf
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   50

         00009580 00000000! 
    2156                    
    2157 000095a0     09ee          movi    OBJLST,a14
         000095b0 00000000! 
    2158 000095d0           lpz
    2159 000095d0     87ce          move    *a14,a14,L
    2160 000095e0     ca0f          jrz     x
    2161 000095f0     b5c2          move    *a14(OPAL),a2
         00009600     0150  
    2162 00009610     4802          cmp     a0,a2
    2163 00009620     cbfa          jrne    lpz
    2164                    
    2165 00009630     b5c2          move    *a14(OID),a2
         00009640     0190  
    2166 00009650     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES1,a2
         00009660     f8fd  
    2167 00009670     ca03          jreq    lpdo
    2168 00009680     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES2,a2
         00009690     f8fc  
    2169 000096a0     cbf2          jrne    lpz
    2170 000096b0           lpdo
    2171 000096b0     b12e          move    a9,*a14(OPAL)
         000096c0     0150  
    2172 000096d0     c0ef          jruc    lpz
    2173                    
    2174 000096e0           x       SLEEPK  4
    2175                    
    2176 00009720     09e0          movi    FNT9RED_P,a0
         00009730 00000000! 
    2177 00009750     0d5f          calla   pal_getf
         00009760 00000000! 
    2178 00009780     4c09          move    a0,a9
    2179                    
    2180 00009790     09e0          movi    FNT9WHT_P,a0
         000097a0 00000000! 
    2181 000097c0     0d5f          calla   pal_getf
         000097d0 00000000! 
    2182                    
    2183 000097f0     09ee          movi    OBJLST,a14
         00009800 00000000! 
    2184 00009820           lp2
    2185 00009820     87ce          move    *a14,a14,L
    2186 00009830     ca0f          jrz     x2
    2187 00009840     b5c2          move    *a14(OPAL),a2
         00009850     0150  
    2188 00009860     4922          cmp     a9,a2
    2189 00009870     cbfa          jrne    lp2
    2190                    
    2191 00009880     b5c2          move    *a14(OID),a2
         00009890     0190  
    2192 000098a0     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES1,a2
         000098b0     f8fd  
    2193 000098c0     ca03          jreq    lpdo2
    2194 000098d0     0b42          cmpi    CLSNEUT|TYPTEXT|SUBMES2,a2
         000098e0     f8fc  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   51

    2195 000098f0     cbf2          jrne    lp2
    2196 00009900           lpdo2
    2197 00009900     b00e          move    a0,*a14(OPAL)
         00009910     0150  
    2198 00009920     c0ef          jruc    lp2
    2199                    
    2200 00009930           x2      SLEEPK  7
    2201                    
    2202 00009970     c0b5          jruc    blink_rndper
    2203                    
    2204                    
    2205 00009980           message_setup
    2206 00009980                   JAM_STR font9_ascii,5,0,79,15,FNT9WHT_P,0
    2207                    
    2208 00009a20           message_setup2
    2209 00009a20                   JAM_STR font9_ascii,5,0,321,15,FNT9WHT_P,0
    2210                    
    2211 00009ac0           message_string
    2212 00009ac0       43          .string "CALLA RNDPER",0
    2213                    
    2214 00009b30                   .even
    2215                    
    2216                    
    2217 00009b30           but_hit
    2218 00009b30     09e1          movi    player_pal_pref,a1
         00009b40 00000120- 
    2219 00009b60     4d4a          move    a10,a10
    2220 00009b70     ca01          jrz     is_p1
    2221 00009b80     1201          addk    16,a1
    2222 00009b90           is_p1
    2223 00009b90     4d40          move    a10,a0
    2224 00009ba0     0d5f          calla   get_stick_val_cur
         00009bb0 00000000! 
    2225 00009bd0     ca11          jrz     no_pref
    2226 00009be0     4d40          move    a10,a0
    2227 00009bf0     0d5f          calla   get_but_val_cur
         00009c00 00000000! 
    2228 00009c20     ca0c          jrz     no_pref
    2229 00009c30     188e          movk    4,a14
    2230 00009c40     1fe0          btst    0,a0                    ; PUNCH
    2231 00009c50     cb0a          jrnz    pp_pref
    2232 00009c60     18ee          movk    7,a14
    2233 00009c70     1f60          btst    4,a0                    ; SKICK
    2234 00009c80     cb07          jrnz    pp_pref
    2235 00009c90     18ae          movk    5,a14
    2236 00009ca0     1fa0          btst    2,a0                    ; SPUNCH
    2237 00009cb0     cb04          jrnz    pp_pref
    2238 00009cc0     18ce          movk    6,a14
    2239 00009cd0     1f80          btst    3,a0                    ; KICK
    2240 00009ce0     cb01          jrnz    pp_pref
    2241 00009cf0           no_pref
    2242 00009cf0     57ce          clr     a14
    2243 00009d00           pp_pref
    2244 00009d00     81c1          move    a14,*a1
    2245                            ;they hit a button.  Stick 'em with the current guy.
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   52

    2246                    ;Erase rndper message for this player
    2247 00009d10     09c0          movi    CLSNEUT|TYPTEXT|SUBMES1,a0
         00009d20     0702  
    2248 00009d30     4d4a          move    a10,a10
    2249 00009d40     ca02          jrz     p1c
    2250 00009d50     09c0          movi    CLSNEUT|TYPTEXT|SUBMES2,a0
         00009d60     0703  
    2251 00009d70           p1c
    2252 00009d70     0d5f          calla   obj_del1c
         00009d80 00000000! 
    2253                    
    2254 00009da0     b720          move    *a9(PI_INDEX),a0,L
         00009db0     00c0  
    2255                            ;rewire kludge
    2256 00009dc0     4d6e          move    a11,a14
    2257 00009dd0                   X16     a14
    2258 00009de0     0b2e          addi    scramble_table,a14
         00009df0 0000acb0' 
    2259 00009e10     85ce          move    *a14,a14,W
    2260 00009e20     81c0          move    a14,*a0
    2261                    
    2262 00009e30     4d41          move    a10,a1
    2263 00009e40     2481          sll     4,a1
    2264 00009e50     0b21          addi    which_player,a1
         00009e60 00000040- 
    2265 00009e80     81c1          move    a14,*a1
    2266                    
    2267                            ;say the name.
    2268 00009e90     09c1          MOVI    SEL_SPCH_PID1,A1
         00009ea0     0131  
    2269 00009eb0     4141          ADD     A10,A1
    2270 00009ec0     4c08          MOVE    A0,A8
    2271 00009ed0     09e7          MOVI    call_wrestler_name,A7
         00009ee0 00002e80' 
    2272 00009f00     0d5f          CALLA   GETPRC
         00009f10 00000000! 
    2273                    
    2274                            ;make a joyful noise unto the player
    2275 00009f30     b520          move    *a9(PI_SELSOUND),a0
         00009f40     00f0  
    2276 00009f50     0d5f          calla   triple_sound
         00009f60 00000000! 
    2277                    
    2278                            ;clear our bit in the active flag
    2279 00009f80     05a0          move    @active_flag,a0
         00009f90 00000090- 
    2280 00009fb0     4d4e          move    a10,a14
    2281 00009fc0     102e          inc     a14
    2282 00009fd0     53c0          andn    a14,a0
    2283 00009fe0     0580          move    a0,@active_flag
         00009ff0 00000090- 
    2284                    
    2285                            ;flash over the crouton
    2286                            ;synch!  begin flashing on an even PCNT
    2287 0000a010     05ae          move    @PCNT,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   53

         0000a020 00000000! 
    2288 0000a040     1fee          btst    0,a14
    2289 0000a050     cb04          jrnz    synch
    2290 0000a060                   SLEEPK  1
    2291                    
    2292 0000a0a0           synch
    2293 0000a0a0     b7a8          move    *a13(HILITE),a8,L
         0000a0b0     0100  
    2294 0000a0c0     09c9          movi    TSEC/4,a9
         0000a0d0     000d  
    2295 0000a0e0           flashloop
    2296 0000a0e0     09ce          movi    0202h,a14
         0000a0f0     0202  
    2297 0000a100     b1c8          move    a14,*a8(OCONST)
         0000a110     0160  
    2298 0000a120     b50e          move    *a8(OCTRL),a14
         0000a130     00f0  
    2299 0000a140     0bce          xori    M_CONZER,a14
         0000a150 00000004  
    2300 0000a170     b1c8          move    a14,*a8(OCTRL)
         0000a180     00f0  
    2301 0000a190                   SLEEPK  2
    2302 0000a1d0     3e09          dsj     a9,flashloop
    2303                    
    2304 0000a1e0     b50e          move    *a8(OCTRL),a14
         0000a1f0     00f0  
    2305 0000a200     0b8e          andni   M_CONZER,a14
         0000a210 00000004  
    2306 0000a230     b1c8          move    a14,*a8(OCTRL)
         0000a240     00f0  
    2307                    
    2308 0000a250     09ce          movi    hilite_z,a14
         0000a260     0005  
    2309 0000a270     b1c8          move    a14,*a8(OZPOS)
         0000a280     00d0  
    2310                    
    2311 0000a290     b7a8          move    *a13(HIPLATE),a8,L
         0000a2a0     0120  
    2312 0000a2b0     09ce          movi    hiplate_z,a14
         0000a2c0     0002  
    2313 0000a2d0     b1c8          move    a14,*a8(OZPOS)
         0000a2e0     00d0  
    2314                            
    2315 0000a2f0           lp
    2316 0000a2f0                   SLEEPK  1
    2317 0000a330     0d3f          callr   place_cursor
         0000a340     0001  
    2318 0000a350     c0f9          jruc    lp
    2319                            
    2320                    
    2321                    ********
    2322                    * moves cursor to the current index position
    2323                    
    2324 0000a360            SUBRP  place_cursor
    2325                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   54

    2326 0000a360                   PUSH    a2,a3,a7,a8
    2327                    
    2328 0000a380     4d61          move    a11,a1
    2329 0000a390                   X32     a1
    2330 0000a3a0     0b21          addi    crouton_pos_table,a1
         0000a3b0 000040d0' 
    2331 0000a3d0     9422          move    *a1+,a2,W
    2332 0000a3e0     8423          move    *a1,a3,W
    2333                    
    2334 0000a3f0     b7a7          move    *a13(HILITE),a7,L
         0000a400     0100  
    2335 0000a410     b7a8          move    *a13(HIPLATE),a8,L
         0000a420     0120  
    2336                    
    2337 0000a430     b048          move    a2,*a8(OXPOS)
         0000a440     0090  
    2338 0000a450     b068          move    a3,*a8(OYPOS)
         0000a460     00b0  
    2339                    
    2340 0000a470     4d4a          move    a10,a10
    2341 0000a480     ca09          jrz     p1
    2342 0000a490     07a8          move    @kp_p1cursor,a8,L
         0000a4a0 000000a0- 
    2343 0000a4c0     b508          move    *a8(PA11),a8
         0000a4d0     0060  
    2344 0000a4e0     490b          cmp     a8,a11
    2345 0000a4f0     cb02          jrnz    p1
    2346 0000a500     1042          addk    2,a2
    2347 0000a510     1043          addk    2,a3
    2348 0000a520           p1
    2349 0000a520     b047          move    a2,*a7(OXPOS)
         0000a530     0090  
    2350 0000a540     b067          move    a3,*a7(OYPOS)
         0000a550     00b0  
    2351                    
    2352 0000a560                   PULL    a2,a3,a7,a8
    2353 0000a580     0960          rets
    2354                    
    2355                    
    2356                    ********
    2357                    * updates the name text
    2358                    
    2359 0000a590            SUBRP  update_name
    2360                    
    2361 0000a590                   PUSH    a8,a11
    2362                    
    2363                            ;rewiring kludge
    2364 0000a5b0                   X16     a11
    2365 0000a5c0     0b2b          addi    scramble_table,a11
         0000a5d0 0000acb0' 
    2366 0000a5f0     856b          move    *a11,a11,W
    2367                    
    2368 0000a600     4d60          move    a11,a0
    2369 0000a610                   X32     a0
    2370 0000a620     0b20          addi    name_tbl,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   55

         0000a630 0000c150' 
    2371 0000a650     8600          move    *a0,a0,L
    2372 0000a660     b7a8          move    *a13(NAME),a8,L
         0000a670     0140  
    2373 0000a680     0d5f          calla   civanic
         0000a690 00000000! 
    2374                    
    2375 0000a6b0                   PULL    a8,a11
    2376                    
    2377 0000a6d0     0960          rets
    2378                    
    2379                    ********
    2380                    * erases current mugshot
    2381                    
    2382 0000a6e0            SUBRP  erase_mugshot
    2383                    
    2384 0000a6e0                   PUSH    a5,a6,a8
    2385                    
    2386 0000a700     1906          movk    8,a6
    2387 0000a710     4da5          move    a13,a5
    2388 0000a720     0b05          addi    MUG1,a5
         0000a730     0170  
    2389 0000a740           eraseloop
    2390 0000a740     96a0          move    *a5+,a0,L
    2391 0000a750     0d5f          calla   DELOBJ
         0000a760 00000000! 
    2392 0000a780     3ca6          dsj     a6,eraseloop
    2393                    
    2394 0000a790                   PULL    a5,a6,a8
    2395                    
    2396 0000a7b0     0960          rets
    2397                    
    2398                    
    2399                    ********
    2400                    * draws a new mugshot
    2401                    
    2402 0000a7c0            SUBRP  draw_mugshot
    2403                    
    2404                            ;reg use
    2405                            ;a10 = PDATA pointer
    2406                            ;a11 = mug pointer
    2407                    
    2408 0000a7c0                   PUSH    a6,a7,a8,a10,a11
    2409                    
    2410                            ;rewiring kludge
    2411 0000a7e0                   X16     a11
    2412 0000a7f0     0b2b          addi    scramble_table,a11
         0000a800 0000acb0' 
    2413 0000a820     856b          move    *a11,a11,W
    2414                    
    2415 0000a830                   X32     a11
    2416 0000a840     0b2b          addi    wrestler_mugs,a11
         0000a850 0000b630' 
    2417 0000a870     876b          move    *a11,a11,L
    2418                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   56

    2419 0000a880     4daa          move    a13,a10
    2420 0000a890     0b0a          addi    MUG1,a10
         0000a8a0     0170  
    2421 0000a8b0     9762          move    *a11+,a2,L
    2422                    
    2423 0000a8c0           drawloop
    2424 0000a8c0     b520          move    *a9(PI_MUGXPOS),a0
         0000a8d0     0050  
    2425 0000a8e0     b521          move    *a9(PI_MUGYPOS),a1
         0000a8f0     0060  
    2426 0000a900     2200          sla     16,a0
    2427 0000a910     2201          sla     16,a1
    2428 0000a920     09c3          movi    mugshot_z,a3
         0000a930     0001  
    2429 0000a940     b524          move    *a9(PI_MUGCTRL),a4
         0000a950     0070  
    2430 0000a960     09c5          movi    CLSNEUT,a5
         0000a970     0000  
    2431 0000a980     56c6          clr     a6
    2432 0000a990     56e7          clr     a7
    2433 0000a9a0     0d5f          calla   BEGINOBJW
         0000a9b0 00000000! 
    2434 0000a9d0     930a          move    a8,*a10+,L
    2435                            
    2436 0000a9e0     9762          move    *a11+,a2,L
    2437 0000a9f0     ca01          jrz     done
    2438 0000aa00     c0eb          jruc    drawloop
    2439                    
    2440 0000aa10           done
    2441 0000aa10                   PULL    a6,a7,a8,a10,a11
    2442 0000aa30     0d5f          calla   show_bonus_icons
         0000aa40 00000000! 
    2443 0000aa60     0960          rets
    2444                    
    2445                    ;
    2446                    ;********
    2447                    ;* updates the attribute bars
    2448                    ;
    2449                    ; SUBRP update_attbars
    2450                    ;
    2451                    ;       PUSH    a7,a10,a11
    2452                    ;
    2453                    ;
    2454                    ;       ;rewiring kludge
    2455                    ;       X16     a11
    2456                    ;       addi    scramble_table,a11
    2457                    ;       move    *a11,a11,W
    2458                    ;
    2459                    ;       move    a11,a10
    2460                    ;       X64     a10
    2461                    ;       addi    wrestler_attributes,a10
    2462                    ;       move    a13,a11
    2463                    ;       addi    ATT1,a11
    2464                    ;
    2465                    ;       movi    4,a7
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   57

    2466                    ;ualoop
    2467                    ;       move    *a10+,a0,W
    2468                    ;       X32     a0
    2469                    ;       addi    attbars,a0
    2470                    ;       move    *a0,a0,L
    2471                    ;       move    *a11+,a8,L
    2472                    ;       calla   civanic
    2473                    ;       dsj     a7,ualoop
    2474                    ;
    2475                    ;       PULL    a7,a10,a11
    2476                    ;       rets
    2477                    ;
    2478 0000aa70           wrestler_attributes
    2479                    ;Power, speed, agility, recovery
    2480 0000aa70     0004          .word   4,9,9,3 ;0      (Bret)
    2481 0000aab0     0007          .word   7,6,2,5 ;1      (Razor)
    2482 0000aaf0     0008          .word   8,4,7,6 ;2      (Taker)
    2483 0000ab30     0009          .word   9,2,4,6 ;3      (Yoko)
    2484 0000ab70     0003          .word   3,9,8,7 ;4      (Shawn)
    2485 0000abb0     0008          .word   8,6,5,3 ;5      (Bam Bam)
    2486 0000abf0     0004          .word   4,8,7,8 ;6      (Doink)
    2487 0000ac30     0009          .word   9,5,4,7 ;7      (Lex)
    2488 0000ac70     0009          .word   9,5,4,7 ;8      (Lex)
    2489                    
    2490 0000acb0           scramble_table  ;swap bret and doink on the select page
    2491 0000acb0     0006          .word   6
    2492 0000acc0     0001          .word   1,2,3,4,5
    2493 0000ad10     0000          .word   0
    2494 0000ad20     0008          .word   8               ;put lex in place of adam
    2495                    
    2496 0000ad30           attbars
    2497 0000ad30 00000000!         .long   ATTMTR_0,ATTMTR_1,ATTMTR_2,ATTMTR_3,ATTMTR_4
    2498 0000add0 00000000!         .long   ATTMTR_5,ATTMTR_6,ATTMTR_7,ATTMTR_8,ATTMTR_9
    2499                    
    2500 0000ae70           info
    2501 0000ae70 0000aeb0'         .long   p1info,p2info
    2502                    
    2503 0000aeb0           p1info
    2504 0000aeb0 0000b210'         .long   hi_b,plt_b                      ;hilite, crouton
    2505 0000aef0     0000          .word   0                               ;start index
    2506 0000af00     0014          .word   0+18+2,175                      ;mug position
    2507 0000af20     a102          .word   DMAWNZ|M_3D|M_SCRNREL           ;mug octrl
    2508 0000af30 0000b370'         .long   p1name,latttxt                  ;start name,att text
    2509 0000af70 00000060-         .long   index1                          ;report choice to
    2510 0000af90     00c8          .word   0c8h,0cbh                       ;cursor/select sounds
    2511                    
    2512 0000afb0           p2info
    2513 0000afb0 0000b2c0'         .long   hi_r,plt_r                      ;hilite, crouton
    2514 0000aff0     0001          .word   1                               ;start index
    2515 0000b000     017e          .word   400-18,175                      ;mug position
    2516 0000b020     a112          .word   DMAWNZ|M_3D|M_SCRNREL|M_FLIPH   ;mug octrl
    2517 0000b030 0000b420'         .long   p2name,ratttxt                  ;start name,att text
    2518 0000b070 00000070-         .long   index2                          ;report choice to
    2519 0000b090     00c7          .word   0c7h,0cch                       ;cursor/select sounds
    2520                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   58

    2521                    
    2522 0000b0b0     0000  plt_b   .word   0,0,hiplate_z                           ;X,Y,Z
    2523 0000b0e0 00000000!         .long   CRUTPLT_B                               ;IMG
    2524 0000b100     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2525 0000b110     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2526 0000b120 00000000          .long   0,0                                     ;XVEL, YVEL
    2527                    
    2528 0000b160     0000  plt_r   .word   0,0,hiplate_z+1                         ;X,Y,Z
    2529 0000b190 00000000!         .long   CRUTPLT_R                               ;IMG
    2530 0000b1b0     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2531 0000b1c0     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2532 0000b1d0 00000000          .long   0,0                                     ;XVEL, YVEL
    2533                    
    2534 0000b210     0000  hi_b    .word   0,0,hilite_z                            ;X,Y,Z
    2535 0000b240 00000000!         .long   CRUTHI_B                                ;IMG
    2536 0000b260     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2537 0000b270     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2538 0000b280 00000000          .long   0,0                                     ;XVEL, YVEL
    2539                    
    2540 0000b2c0     0000  hi_r    .word   0,0,hilite_z+1                          ;X,Y,Z
    2541 0000b2f0 00000000!         .long   CRUTHI_R                                ;IMG
    2542 0000b310     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2543 0000b320     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2544 0000b330 00000000          .long   0,0                                     ;XVEL, YVEL
    2545                    
    2546 0000b370     0051  p1name  .word   051H,184,name_z
    2547 0000b3a0 00000000!         .long   WF_INSERT
    2548 0000b3c0     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2549 0000b3d0     0000          .word   CLSNEUT|TYPNEUT
    2550 0000b3e0 00000000          .long   0,0
    2551                    
    2552 0000b420     0142  p2name  .word   0142H,184,name_z
    2553 0000b450 00000000!         .long   WF_INSERT
    2554 0000b470     a102          .word   DMAWNZ|M_3D|M_SCRNREL
    2555 0000b480     0000          .word   CLSNEUT|TYPNEUT
    2556 0000b490 00000000          .long   0,0
    2557                    
    2558 0000b4d0     0012  latttxt .word   0+18,189,atttxt_z                       ;X, Y, Z
    2559 0000b500 00000000!         .long   ATT_TXT                                 ;IMG
    2560 0000b520     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2561 0000b530     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2562 0000b540 00000000          .long   0,0                                     ;XVEL, YVEL
    2563                    
    2564 0000b580     0102  ratttxt .word   400-18-124,189,atttxt_z                 ;X, Y, Z
    2565 0000b5b0 00000000!         .long   ATT_TXT                                 ;IMG
    2566 0000b5d0     a102          .word   DMAWNZ|M_3D|M_SCRNREL                   ;CTRL
    2567 0000b5e0     0000          .word   CLSNEUT|TYPNEUT                         ;OID
    2568 0000b5f0 00000000          .long   0,0                                     ;XVEL, YVEL
    2569                    
    2570                    ;Mugshot stuff
    2571                    
    2572 0000b630           wrestler_mugs
    2573 0000b630 0000b850'         .long   BHARTMUG
    2574 0000b650 0000b970'         .long   RAZORMUG
    2575 0000b670 0000ba90'         .long   UNDERMUG
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   59

    2576 0000b690 0000bbb0'         .long   YOKOMUG
    2577 0000b6b0 0000bcd0'         .long   MICHAELMUG
    2578 0000b6d0 0000bdf0'         .long   BAMBAMMUG
    2579 0000b6f0 0000bf10'         .long   DOINKMUG
    2580 0000b710 00000000          .long   0
    2581 0000b730 0000c030'         .long   LUGERMUG
    2582                    
    2583 0000b750           wrestler_mugs2
    2584 0000b750 0000b850'         .long   BHARTMUG
    2585 0000b770 0000b970'         .long   RAZORMUG
    2586 0000b790 0000ba90'         .long   UNDERMUG
    2587 0000b7b0 0000bbb0'         .long   YOKOMUG
    2588 0000b7d0 0000bcd0'         .long   MICHAELMUG
    2589 0000b7f0 0000bdf0'         .long   BAMBAMMUG
    2590 0000b810 0000bf10'         .long   DOINKMUG
    2591                    ;       .long   ADAMMUG
    2592 0000b830 0000c030'         .long   LUGERMUG
    2593                    
    2594 0000b850           BHARTMUG
    2595 0000b850 00000000!         .long   BHMUG_A,BHMUG_B,BHMUG_C,BHMUG_D
    2596 0000b8d0 00000000!         .long   BHMUG_E,BHMUG_F,BHMUG_G,BHMUG_H,0
    2597 0000b970           RAZORMUG
    2598 0000b970 00000000!         .long   RRMUG_A,RRMUG_B,RRMUG_C,RRMUG_D
    2599 0000b9f0 00000000!         .long   RRMUG_E,RRMUG_F,RRMUG_G,RRMUG_H,0
    2600 0000ba90           UNDERMUG
    2601 0000ba90 00000000!         .long   UNMUG_A,UNMUG_B,UNMUG_C,UNMUG_D
    2602 0000bb10 00000000!         .long   UNMUG_E,UNMUG_F,UNMUG_G,UNMUG_H,0
    2603 0000bbb0           YOKOMUG
    2604 0000bbb0 00000000!         .long   YKMUG_A,YKMUG_B,YKMUG_C,YKMUG_D
    2605 0000bc30 00000000!         .long   YKMUG_E,YKMUG_F,YKMUG_G,YKMUG_H,0
    2606 0000bcd0           MICHAELMUG
    2607 0000bcd0 00000000!         .long   SMMUG_A,SMMUG_B,SMMUG_C,SMMUG_D
    2608 0000bd50 00000000!         .long   SMMUG_E,SMMUG_F,SMMUG_G,SMMUG_H,0
    2609 0000bdf0           BAMBAMMUG
    2610 0000bdf0 00000000!         .long   BMMUG_A,BMMUG_B,BMMUG_C,BMMUG_D
    2611 0000be70 00000000!         .long   BMMUG_E,BMMUG_F,BMMUG_G,BMMUG_H,0
    2612 0000bf10           DOINKMUG
    2613 0000bf10 00000000!         .long   DKMUG_A,DKMUG_B,DKMUG_C,DKMUG_D
    2614 0000bf90 00000000!         .long   DKMUG_E,DKMUG_F,DKMUG_G,DKMUG_H,0
    2615 0000c030           LUGERMUG
    2616 0000c030 00000000!         .long   LXMUG_A,LXMUG_B,LXMUG_C,LXMUG_D
    2617 0000c0b0 00000000!         .long   LXMUG_E,LXMUG_F,LXMUG_G,LXMUG_H,0
    2618                    
    2619 0000c150           name_tbl
    2620 0000c150 00000000!         .long   NAM_BRT,NAM_RZR,NAM_UND,NAM_YOK
    2621 0000c1d0 00000000!         .long   NAM_SHN2,NAM_BAM2,NAM_DNK,0,NAM_LEX
    2622                    
    2623                    *****************************************************************************
    2624                    * Player select clock - sets time_out when it runs out of time
    2625                    *
    2626                    
    2627 0000c270            SUBR   select_clock
    2628                    
    2629                            ;reg use
    2630                            ; a8 - current pstatus
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   60

    2631                            ; a9 - time remaining
    2632                    
    2633              031b  select_time     equ     TSEC*15
    2634                    
    2635 0000c270           iehnreset
    2636 0000c270     09c9          movi    select_time,a9
         0000c280     031b  
    2637 0000c290     05a8          move    @PSTATUS,a8
         0000c2a0 00000000! 
    2638                    
    2639 0000c2c0           iehnwaitloop
    2640 0000c2c0                   SLEEPK  1
    2641 0000c300     05ae          move    @PSTATUS,a14
         0000c310 00000000! 
    2642 0000c330     49c8          cmp     a14,a8
    2643 0000c340     cbf2          jrne    iehnreset                       ;new buyin.  reset
    2644                    
    2645 0000c350     3d49          dsj     a9,iehnwaitloop
    2646                    
    2647                    ;If other player is still thinking about buying in or is
    2648                    ;still entering his initials, then go to iehnreset
    2649                    
    2650 0000c360     05a0          move    @OLD_PSTATUS,a0
         0000c370 00000000! 
    2651 0000c390     cbed          jrnz    iehnreset
    2652                    
    2653 0000c3a0     182e          movk    1,a14
    2654 0000c3b0     058e          move    a14,@time_out
         0000c3c0 00000080- 
    2655                    
    2656 0000c3e0                   DIE
    2657                    
    2658 0000c410           clock_digits
    2659                    ;When player select time gets down to 5 seconds, display it...
    2660                    ;a10=select_clock *PROC
    2661                    
    2662 0000c410     09e0          movi    [0cbh,0],a0                     ;x pos
         0000c420 00cb0000  
    2663 0000c440     09e1          movi    [232,0],a1                      ;y pos
         0000c450 00e80000  
    2664 0000c470     09e2          movi    FNT9_5,a2                       ;* image
         0000c480 00000000! 
    2665 0000c4a0     09c3          movi    104+200,a3                      ;z pos
         0000c4b0     0130  
    2666 0000c4c0     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000c4d0 0000a002  
    2667 0000c4f0     56a5          clr     a5                              ;object ID
    2668 0000c500     56c6          clr     a6                              ;x vel
    2669 0000c510     56e7          clr     a7                              ;y vel
    2670 0000c520     09f0          movi    FNT9WHT_P,b0
         0000c530 00000000! 
    2671 0000c550     0d5f          calla   BEGINOBJP
         0000c560 00000000! 
    2672 0000c580     188b          movk    4,a11
    2673 0000c590     0d3f  iehnloop0       callr   obj_off
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   61

         0000c5a0     0091  
    2674                    
    2675 0000c5b0           iehnloop        SLEEPK  1
    2676 0000c5f0     05a0          move    @time_out,a0
         0000c600 00000080- 
    2677 0000c620     cb80          janz    KILL_THIS_DIGIT
         0000c630 0000c820' 
    2678                    
    2679 0000c650     05a0          move    @OLD_PSTATUS,a0
         0000c660 00000000! 
    2680 0000c680     cbf0          jrnz    iehnloop0
    2681                    
    2682 0000c690     b540          move    *a10(PA9),a0
         0000c6a0     00a0  
    2683 0000c6b0     2f40          srl     6,a0
    2684 0000c6c0     480b          cmp     a0,a11
    2685 0000c6d0     caed          jrz     iehnloop
    2686 0000c6e0     0b40          cmpi    6,a0
         0000c6f0     fff9  
    2687 0000c700     c5e8          jrge    iehnloop0
    2688                    
    2689                    ;New digit time 
    2690 0000c710     4c0b          move    a0,a11
    2691 0000c720     24a0          sll     5,a0
    2692                    
    2693 0000c730     0b20          addi    digits_tbl,a0
         0000c740 0000c870' 
    2694 0000c760     8600          move    *a0,a0,L                ;* image
    2695                    
    2696 0000c770     b501          move    *a8(OCTRL),a1           ;DMA flags
         0000c780     00f0  
    2697 0000c790     0d5f          calla   change_image
         0000c7a0 00000000! 
    2698 0000c7c0     0d3f          callr   obj_on
         0000c7d0     0066  
    2699                    
    2700 0000c7e0     4d6e          move    a11,a14
    2701 0000c7f0     0d3f          callr   setup_clock_sound
         0000c800     0297  
    2702 0000c810     c0d9          jruc    iehnloop
    2703                    
    2704 0000c820           KILL_THIS_DIGIT
    2705 0000c820     0d3f          callr   obj_off
         0000c830     0068  
    2706 0000c840                   DIE
    2707                    
    2708 0000c870           digits_tbl
    2709 0000c870 00000000!         .long   FNT9_0,FNT9_1,FNT9_2,FNT9_3,FNT9_4
    2710 0000c910 00000000!         .long   FNT9_5,FNT9_6,FNT9_7,FNT9_8,FNT9_9
    2711                    
    2712                    *****************************************************************************
    2713                    * One player ladder of progression
    2714                    *
    2715                    
    2716 0000c9b0            SUBR   pregame_show
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   62

    2717                    
    2718                    
    2719                    ;This will be the ladder type screen, showing the 1 player
    2720                    ;game progression.  Chooses the CPU opponent.
    2721                    
    2722                    ;Show 1 player game ladder of progression
    2723                    ;Scroll horizontally to the next challenger
    2724                            
    2725                     .if DEBUG
    2726                            move    @skip_select,a0
    2727                            jrz     nwysnoskp
    2728                    
    2729                            RETP
    2730                    nwysnoskp
    2731                     .endif
    2732                    
    2733 0000c9b0     05a0          move    @PSTATUS,a0
         0000c9c0 00000000! 
    2734 0000c9e0     0b40          cmpi    3,a0
         0000c9f0     fffc  
    2735 0000ca00     cb1e          jrnz    nwysoneplyrgm
    2736                    
    2737                            .ref    question_type
    2738                            .if     RR_AWARD = 1
    2739 0000ca10     05ae          move    @royal_rumble,a14
         0000ca20 00000000! 
    2740 0000ca40     cb0c          jrnz    nwyslast_was_royal
    2741                            .endif
    2742 0000ca50     182e          movk    1,a14
    2743 0000ca60     058e          move    a14,@question_type
         0000ca70 00000000! 
    2744 0000ca90                   JSRP    ask_belt_question
    2745                            .if     RR_AWARD = 1
    2746 0000cb00     c004          jruc    nwystype_set
    2747 0000cb10           nwyslast_was_royal
    2748 0000cb10     57ce          clr     a14
    2749 0000cb20     058e          move    a14,@royal_rumble
         0000cb30 00000000! 
    2750 0000cb50           nwystype_set
    2751                            .endif
    2752                    
    2753 0000cb50                   JSRP    CLOSE_PROGRESS_SCREEN
    2754                    
    2755 0000cbc0                   RETP
    2756                    
    2757                    ;0      (Bret)
    2758                    ;1      (Razor)
    2759                    ;2      (Taker)
    2760                    ;3      (Yoko)
    2761                    ;4      (Shawn)
    2762                    ;5      (Bam Bam)
    2763                    ;6      (Doink)
    2764                    ;7      spare
    2765                    ;8      (Lex)
    2766                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   63

    2767                    
    2768 0000cbf0           nwysoneplyrgm
    2769                            .ref    belt_ask
    2770                            .ref    ask_belt_question
    2771                    
    2772 0000cbf0     05ae          move    @belt_ask,a14,W
         0000cc00 00000000! 
    2773 0000cc20     ca12          jrz     nwysbelt_is_set
    2774 0000cc30     57ce          clr     a14
    2775 0000cc40     058e          move    a14,@question_type
         0000cc50 00000000! 
    2776 0000cc70                   JSRP    ask_belt_question
    2777                    
    2778 0000cce0     0d5f          calla   INIT_LADDER_TABLE
         0000ccf0 00000000! 
    2779 0000cd10     5708          clr     a8
    2780 0000cd20     0588          move    a8,@belt_ask
         0000cd30 00000000! 
    2781 0000cd50           nwysbelt_is_set
    2782                    
    2783                    ;       movk    15,a8
    2784                    ;       movk    4,a9
    2785 0000cd50     1948          movk    10,a8
    2786 0000cd60     1849          movk    2,a9
    2787 0000cd70                   JSRP    CLOSE_SCREEN_LINE
    2788                    
    2789 0000cde0     0d5f          calla   SPECIAL_WIPEOUT
         0000cdf0 00000000! 
    2790 0000ce10     c080          JAUC    PUT_UP_PROGRESS
         0000ce20 00000000! 
    2791                    
    2792                    ;AVOID_PREGAME
    2793                    ;       MOVE    @CURRENT_LADDER,A10,L
    2794                    ;       CALLA   NEXT_IN_LADDER
    2795                    ;       CALLA   NUM_OF_OPPS
    2796                    ;       JSRP    CLOSE_PROGRESS_SCREEN
    2797                    ;       RETP
    2798                    
    2799                    ;Can we remove this?
    2800                    ;       .ref    osgemd_ascii
    2801                    ;nwysln1_setup
    2802                    ;       JAM_STR osgemd_ascii,8,0,200,80,BLUE,0
    2803                    ;
    2804                    ;nwysln2_setup
    2805                    ;       JAM_STR osgemd_ascii,8,0,200,110,BLUE,0
    2806                    ;
    2807                    ;nwysstr_text
    2808                    ;       .string "SINGLE PLAYER GAME",0
    2809                    ;nwysstr_text2
    2810                    ;       .string "LADDER OF PROGRESSION",0
    2811                    ;       .even
    2812                    ;
    2813                    ;nwysladder_mod
    2814                    ;       .long   slateBMOD               ;wrestler select map
    2815                    ;       .word   0,0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   64

    2816                    ;       .long   0
    2817                    
    2818                    
    2819                    *****************************************************************************
    2820                    *
    2821                    * INPUT:        a8 = * object
    2822                    *-----------------------------------------------------------------------------
    2823                    
    2824 0000ce40            SUBRP  obj_on
    2825 0000ce40     b500          move    *a8(OYPOS),a0
         0000ce50     00b0  
    2826 0000ce60     0b80          andni   400h,a0
         0000ce70 00000400  
    2827 0000ce90     b008          move    a0,*a8(OYPOS)
         0000cea0     00b0  
    2828 0000ceb0     0960          rets
    2829                    
    2830                    
    2831                    *****************************************************************************
    2832                    *
    2833                    * INPUT:        a8 = * object
    2834                    *-----------------------------------------------------------------------------
    2835                    
    2836 0000cec0            SUBRP  obj_off
    2837 0000cec0     b500          move    *a8(OYPOS),a0
         0000ced0     00b0  
    2838 0000cee0     0ba0          ori     400h,a0
         0000cef0 00000400  
    2839 0000cf10     b008          move    a0,*a8(OYPOS)
         0000cf20     00b0  
    2840 0000cf30     0960          rets
    2841                    
    2842                    ******************************************************************************
    2843                    
    2844 0000cf40           buyin_text
    2845                    
    2846 0000cf40     1a60          movk    ADJFREPL,a0             ;Are we in free play?
    2847 0000cf50     0d5f          calla   GET_ADJ
         0000cf60 00000000! 
    2848 0000cf80     ca47          jrz     kincnot_freeply
    2849                    
    2850                    ;Print free play
    2851 0000cf90     09e2          movi    kincln0_setup,a2
         0000cfa0 0000dde0' 
    2852 0000cfc0     4d4a          move    a10,a10
    2853 0000cfd0     ca03          jrz     kincok2c
    2854 0000cfe0     09e2          movi    kincln0_setupb,a2
         0000cff0 0000de80' 
    2855 0000d010     0d5f  kincok2c        calla   setup_message
         0000d020 00000000! 
    2856                    
    2857 0000d040     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d050     0704  
    2858 0000d060     4140          add     a10,a0
    2859 0000d070     0580          move    a0,@mess_objid
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   65

         0000d080 00000000! 
    2860                    
    2861 0000d0a0     09e4          movi    kincstr_text0,a4
         0000d0b0 0000e6d8' 
    2862 0000d0d0     0d5f          calla   print_string_C2
         0000d0e0 00000000! 
    2863                    
    2864                    ;Print centered "PLEASE CONTINUE" message
    2865 0000d100     09e2          movi    kincln1_setup,a2
         0000d110 0000df20' 
    2866 0000d130     4d4a          move    a10,a10
    2867 0000d140     ca03          jrz     kincok
    2868 0000d150     09e2          movi    kincln1_setupb,a2
         0000d160 0000dfc0' 
    2869 0000d180     0d5f  kincok  calla   setup_message
         0000d190 00000000! 
    2870                    
    2871 0000d1b0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d1c0     0704  
    2872 0000d1d0     4140          add     a10,a0
    2873 0000d1e0     0580          move    a0,@mess_objid
         0000d1f0 00000000! 
    2874                    
    2875 0000d210     09e4          movi    kincstr_text,a4
         0000d220 0000e6a0' 
    2876 0000d240     0d5f          calla   print_string_C2
         0000d250 00000000! 
    2877                    
    2878 0000d270     09e2          movi    kincln2_setup,a2
         0000d280 0000e060' 
    2879 0000d2a0     4d4a          move    a10,a10
    2880 0000d2b0     ca00          jrz     kincok4
         0000d2c0     00a1  
    2881 0000d2d0     09e2          movi    kincln2_setupb,a2
         0000d2e0 0000e100' 
    2882 0000d300     0d5f          calla   setup_message
         0000d310 00000000! 
    2883                    
    2884 0000d330     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d340     0704  
    2885 0000d350     4140          add     a10,a0
    2886 0000d360     0580          move    a0,@mess_objid
         0000d370 00000000! 
    2887                    
    2888 0000d390     09e4          movi    kincstr_text2,a4
         0000d3a0 0000e728' 
    2889 0000d3c0     0d5f          calla   print_string_C2
         0000d3d0 00000000! 
    2890                    
    2891 0000d3f0     0960          rets
    2892                    
    2893 0000d400           kincnot_freeply
    2894                    ;Print how many credits to start
    2895 0000d400                   PUSH    a8
    2896 0000d410     19a0          movk    ADJCCONT,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   66

    2897 0000d420     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         0000d430 00000000! 
    2898 0000d450     4c03          move    a0,a3
    2899 0000d460     0b40          cmpi    10,a0
         0000d470     fff5  
    2900 0000d480     c401          jrlt    kincmax
    2901 0000d490     1920          movk    9,a0
    2902 0000d4a0           kincmax
    2903 0000d4a0     24a0          sll     5,a0
    2904 0000d4b0     0b20          addi    digits_tbl,a0
         0000d4c0 0000c870' 
    2905 0000d4e0     8602          move    *a0,a2,L                ;* image
    2906                    
    2907 0000d4f0     09e0          movi    [050,0],a0                      ;x pos
         0000d500 00320000  
    2908 0000d520     0b43          cmpi    1,a3
         0000d530     fffe  
    2909 0000d540     cb03          jrnz    kincnot1
    2910 0000d550     09e0          movi    [054,0],a0                      ;x pos
         0000d560 00360000  
    2911 0000d580     4d4a  kincnot1        move    a10,a10
    2912 0000d590     ca09          jrz     kinczp1
    2913 0000d5a0     09e0          movi    [0122h,0],a0                    ;x pos
         0000d5b0 01220000  
    2914 0000d5d0     0b43          cmpi    1,a3
         0000d5e0     fffe  
    2915 0000d5f0     cb03          jrnz    kinczp1
    2916 0000d600     09e0          movi    [0126h,0],a0                    ;x pos
         0000d610 01260000  
    2917 0000d630           kinczp1
    2918 0000d630     09e1          movi    [CREDIT_LINE_YPOS,0],a1         ;y pos
         0000d640 006e0000  
    2919 0000d660     09c3          movi    104+200,a3                      ;z pos
         0000d670     0130  
    2920 0000d680     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000d690 0000a002  
    2921 0000d6b0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         0000d6c0     0704  
    2922 0000d6d0     4145          add     a10,a5                          ;object ID
    2923 0000d6e0     56c6          clr     a6                              ;x vel
    2924 0000d6f0     56e7          clr     a7                              ;y vel
    2925 0000d700     09f0          movi    FNT9YEL_P,b0
         0000d710 00000000! 
    2926 0000d730     0d5f          calla   BEGINOBJP
         0000d740 00000000! 
    2927 0000d760                   PULL    a8
    2928                    
    2929 0000d770     09e2          movi    kincln3_setup,a2
         0000d780 0000e420' 
    2930 0000d7a0     4d4a          move    a10,a10
    2931 0000d7b0     ca03          jrz     kincok2
    2932 0000d7c0     09e2          movi    kincln3_setupb,a2
         0000d7d0 0000e4c0' 
    2933 0000d7f0     0d5f  kincok2 calla   setup_message
         0000d800 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   67

    2934                    
    2935 0000d820     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000d830     0704  
    2936 0000d840     4140          add     a10,a0
    2937 0000d850     0580          move    a0,@mess_objid
         0000d860 00000000! 
    2938                    
    2939 0000d880     09e4          movi    kincstr_text3,a4
         0000d890 0000e778' 
    2940 0000d8b0     19a0          movk    ADJCCONT,a0
    2941 0000d8c0     0d5f          calla   GET_ADJ                 ;GET NUMBER NEEDED
         0000d8d0 00000000! 
    2942 0000d8f0     0b40          cmpi    1,a0
         0000d900     fffe  
    2943 0000d910     cb03          jrnz    kincnot1b
    2944 0000d920     09e4          movi    kincstr_text3b,a4
         0000d930 0000e7c8' 
    2945 0000d950           kincnot1b
    2946 0000d950     0d5f          calla   print_string_C2
         0000d960 00000000! 
    2947                    
    2948 0000d980     09e2          movi    kincln4_setup,a2
         0000d990 0000e560' 
    2949 0000d9b0     4d4a          move    a10,a10
    2950 0000d9c0     ca03          jrz     kincok2B
    2951 0000d9d0     09e2          movi    kincln4_setupb,a2
         0000d9e0 0000e600' 
    2952 0000da00     0d5f  kincok2B        calla   setup_message
         0000da10 00000000! 
    2953                    
    2954 0000da30     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000da40     0704  
    2955 0000da50     4140          add     a10,a0
    2956 0000da60     0580          move    a0,@mess_objid
         0000da70 00000000! 
    2957                    
    2958 0000da90     09e4          movi    kincstr_text4,a4
         0000daa0 0000e810' 
    2959 0000dac0     0d5f          calla   print_string_C2
         0000dad0 00000000! 
    2960                    
    2961                    
    2962                    ;Print "challenger needed" message
    2963 0000daf0     09e2          movi    kincln1_setupx,a2
         0000db00 0000e1a0' 
    2964 0000db20     4d4a          move    a10,a10
    2965 0000db30     ca03          jrz     kincok3
    2966 0000db40     09e2          movi    kincln1_setupxb,a2
         0000db50 0000e240' 
    2967 0000db70     0d5f  kincok3 calla   setup_message
         0000db80 00000000! 
    2968                    
    2969 0000dba0     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000dbb0     0704  
    2970 0000dbc0     4140          add     a10,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   68

    2971 0000dbd0     0580          move    a0,@mess_objid
         0000dbe0 00000000! 
    2972                    
    2973 0000dc00     09e4          movi    kincstr_text,a4
         0000dc10 0000e6a0' 
    2974 0000dc30     0d5f          calla   print_string_C2
         0000dc40 00000000! 
    2975                    
    2976 0000dc60     09e2          movi    kincln2_setupx,a2
         0000dc70 0000e2e0' 
    2977 0000dc90     4d4a          move    a10,a10
    2978 0000dca0     ca03          jrz     kincok4
    2979 0000dcb0     09e2          movi    kincln2_setupxb,a2
         0000dcc0 0000e380' 
    2980 0000dce0     0d5f  kincok4 calla   setup_message
         0000dcf0 00000000! 
    2981                    
    2982 0000dd10     09c0          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a0
         0000dd20     0704  
    2983 0000dd30     4140          add     a10,a0
    2984 0000dd40     0580          move    a0,@mess_objid
         0000dd50 00000000! 
    2985                    
    2986 0000dd70     09e4          movi    kincstr_text2,a4
         0000dd80 0000e728' 
    2987 0000dda0     0d5f          calla   print_string_C2
         0000ddb0 00000000! 
    2988                    
    2989 0000ddd0     0960          rets
    2990                    
    2991                            .if 1
    2992 0000dde0           kincln0_setup
    2993 0000dde0                   JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    2994 0000de80           kincln0_setupb
    2995 0000de80                   JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    2996                    
    2997 0000df20           kincln1_setup
    2998 0000df20                   JAM_STR font9_ascii,8,0,81,80,FNT9WHT_P,0
    2999 0000dfc0           kincln1_setupb
    3000 0000dfc0                   JAM_STR font9_ascii,8,0,321,80,FNT9WHT_P,0
    3001                    
    3002 0000e060           kincln2_setup
    3003 0000e060                   JAM_STR font9_ascii,8,0,81,95,FNT9WHT_P,0
    3004 0000e100           kincln2_setupb
    3005 0000e100                   JAM_STR font9_ascii,8,0,321,95,FNT9WHT_P,0
    3006                    
    3007 0000e1a0           kincln1_setupx
    3008 0000e1a0                   JAM_STR font9_ascii,8,0,81,60,FNT9WHT_P,0
    3009 0000e240           kincln1_setupxb
    3010 0000e240                   JAM_STR font9_ascii,8,0,321,60,FNT9WHT_P,0
    3011                    
    3012 0000e2e0           kincln2_setupx
    3013 0000e2e0                   JAM_STR font9_ascii,8,0,81,75,FNT9WHT_P,0
    3014 0000e380           kincln2_setupxb
    3015 0000e380                   JAM_STR font9_ascii,8,0,321,75,FNT9WHT_P,0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   69

    3016                    
    3017                    
    3018 0000e420           kincln3_setup
    3019 0000e420                   JAM_STR font9_ascii,8,0,81,110,FNT9YEL_P,0
    3020 0000e4c0           kincln3_setupb
    3021 0000e4c0                   JAM_STR font9_ascii,8,0,321,110,FNT9YEL_P,0
    3022                    
    3023 0000e560           kincln4_setup
    3024 0000e560                   JAM_STR font9_ascii,8,0,81,125,FNT9YEL_P,0
    3025 0000e600           kincln4_setupb
    3026 0000e600                   JAM_STR font9_ascii,8,0,321,125,FNT9YEL_P,0
    3027                    
    3028                            .else
    3029                    
    3030                    kincln0_setup                                           ; FREE PLAY
    3031                            JAM_STR font9_ascii,8,0,81,120,FNT9YEL_P,0
    3032                    kincln0_setupb
    3033                            JAM_STR font9_ascii,8,0,321,120,FNT9YEL_P,0
    3034                    
    3035                    kincln1_setup                                           ; PLEASE
    3036                            JAM_STR font9_ascii,8,0,81,80,FNT9WHT_P,0
    3037                    kincln1_setupb
    3038                            JAM_STR font9_ascii,8,0,321,80,FNT9WHT_P,0
    3039                    
    3040                    kincln2_setup                                           ; DIGIT
    3041                            JAM_STR font9_ascii,8,0,81,95,FNT9WHT_P,0
    3042                    kincln2_setupb
    3043                            JAM_STR font9_ascii,8,0,321,95,FNT9WHT_P,0
    3044                    
    3045                    kincln1_setupx                                          ; PLEASE
    3046                            JAM_STR font9_ascii,8,0,81,PLEASE_YPOS,FNT9WHT_P,0
    3047                    kincln1_setupxb
    3048                            JAM_STR font9_ascii,8,0,321,PLEASE_YPOS,FNT9WHT_P,0
    3049                    
    3050                    kincln2_setupx                                          ; CONTINUE
    3051                            JAM_STR font9_ascii,8,0,81,CONTINUE_YPOS,FNT9WHT_P,0
    3052                    kincln2_setupxb
    3053                            JAM_STR font9_ascii,8,0,321,CONTINUE_YPOS,FNT9WHT_P,0
    3054                    
    3055                    
    3056                    kincln3_setup                                           ; CREDITS
    3057                            JAM_STR font9_ascii,8,0,81,CREDIT_LINE_YPOS,FNT9YEL_P,0
    3058                    kincln3_setupb
    3059                            JAM_STR font9_ascii,8,0,321,CREDIT_LINE_YPOS,FNT9YEL_P,0
    3060                    
    3061                    kincln4_setup                                           ; TO CONTINUE
    3062                            JAM_STR font9_ascii,8,0,81,TO_CONTINUE_YPOS,FNT9YEL_P,0
    3063                    kincln4_setupb
    3064                            JAM_STR font9_ascii,8,0,321,TO_CONTINUE_YPOS,FNT9YEL_P,0
    3065                            .endif
    3066                    
    3067                    
    3068 0000e6a0           kincstr_text
    3069 0000e6a0       50          .string "PLEASE",0
    3070 0000e6d8           kincstr_text0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   70

    3071 0000e6d8       46          .string "FREE PLAY",0
    3072 0000e728           kincstr_text2
    3073 0000e728       43          .string "CONTINUE!",0
    3074 0000e778           kincstr_text3
    3075 0000e778       20          .string "  CREDITS",0
    3076 0000e7c8           kincstr_text3b
    3077 0000e7c8       20          .string "  CREDIT",0
    3078 0000e810           kincstr_text4
    3079 0000e810       54          .string "TO CONTINUE",0
    3080 0000e870                   .even
    3081                    
    3082                    
    3083                    ******************************************************************************
    3084                    
    3085                            .ref    AUD1
    3086                            .ref    GET_CREDITS
    3087                            .ref    get_start_down
    3088                            .ref    get_but_val_cur
    3089                    
    3090              0009  kinccont_timer  .equ    9
    3091              0019  kincresets_allowed      .equ    25              ;People whack on button to reset
    3092                    
    3093 0000e870            SUBRP  buyin_counter
    3094                    
    3095 0000e870     05a0          move    @rr_loss,a0
         0000e880 00000230- 
    3096 0000e8a0     ca07          jrz     not_rr1
    3097 0000e8b0     05a0          move    @cursor_procs,a0
         0000e8c0 00000220- 
    3098 0000e8e0     1020          inc     a0
    3099 0000e8f0     0580          move    a0,@cursor_procs
         0000e900 00000220- 
    3100 0000e920           not_rr1
    3101                    
    3102 0000e920     b14d          move    a10,*a13(PDATA+16)      ;0 or 1
         0000e930     0110  
    3103                    
    3104 0000e940     09c0          movi    AUD_CONTOFF,a0          ;increment the offered audit
         0000e950     002c  
    3105 0000e960     0d5f          calla   AUD1
         0000e970 00000000! 
    3106                    
    3107 0000e990     09c7          movi    kincresets_allowed,a7
         0000e9a0     0019  
    3108                    
    3109 0000e9b0     c005          jruc    kincloop_start
    3110                    
    3111 0000e9c0           kinccoin_loop_reset
    3112 0000e9c0     09c7          movi    kincresets_allowed,a7
         0000e9d0     0019  
    3113                    
    3114 0000e9e0           kincloop_reset
    3115 0000e9e0     0d5f          calla   DELOBJA8
         0000e9f0 00000000! 
    3116                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   71

    3117 0000ea10           kincloop_start
    3118 0000ea10     0d5f          calla   GET_CREDITS
         0000ea20 00000000! 
    3119 0000ea40     4c06          move    a0,a6
    3120                    
    3121 0000ea50                   PUSH    a6,a7
    3122 0000ea70     09e0          movi    [080,0],a0                      ;x pos
         0000ea80 00500000  
    3123 0000eaa0     b5aa          move    *a13(PDATA+16),a10
         0000eab0     0110  
    3124 0000eac0     4d4a          move    a10,a10
    3125 0000ead0     ca03          jrz     kincp1
    3126 0000eae0     09e0          movi    [0320,0],a0                     ;x pos
         0000eaf0 01400000  
    3127 0000eb10           kincp1
    3128 0000eb10     09e1          movi    [TIMER_YPOS,0],a1               ;y pos
         0000eb20 00d00000  
    3129 0000eb40     09e2          movi    FNT9_9,a2                       ;* image
         0000eb50 00000000! 
    3130 0000eb70     09c3          movi    104+200,a3                      ;z pos
         0000eb80     0130  
    3131 0000eb90     09e4          movi    DMAWNZ|M_SCRNREL,a4             ;DMA flags
         0000eba0 0000a002  
    3132 0000ebc0     09c5          movi    CLSNEUT|TYPTEXT|SUBOVRHED,a5
         0000ebd0     0704  
    3133 0000ebe0     4145          add     a10,a5
    3134 0000ebf0     56c6          clr     a6                              ;x vel
    3135 0000ec00     56e7          clr     a7                              ;y vel
    3136 0000ec10     09f0          movi    FNT9WHT_P,b0
         0000ec20 00000000! 
    3137 0000ec40     0d5f          calla   BEGINOBJP
         0000ec50 00000000! 
    3138 0000ec70                   PULL    a6,a7
    3139                    
    3140 0000ec90     05a9          move    @PSTATUS,a9
         0000eca0 00000000! 
    3141 0000ecc0     09ca          movi    TSEC*2,a10
         0000ecd0     006a  
    3142 0000ece0     09cb          movi    kinccont_timer,a11
         0000ecf0     0009  
    3143                    
    3144 0000ed00           kincloop
    3145 0000ed00                   PUSHP   a6,a7
    3146 0000ed20                   SLEEPK  1
    3147 0000ed60                   PULLP   a6,a7
    3148                    
    3149                    ;Buyin check
    3150 0000ed80     05ae          move    @PSTATUS,a14
         0000ed90 00000000! 
    3151 0000edb0     b5a0          move    *a13(PDATA+16),a0
         0000edc0     0110  
    3152 0000edd0     4a0e          btst    a0,a14
    3153 0000ede0     cb47          jrne    kincbuyin
    3154                    
    3155                    ;More credits check
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   72

    3156 0000edf0     0d5f          calla   GET_CREDITS
         0000ee00 00000000! 
    3157 0000ee20     4806          cmp     a0,a6
    3158 0000ee30     cbb8          jrne    kinccoin_loop_reset
    3159                    
    3160                    ;Start button check
    3161 0000ee40     4ce7          move    a7,a7
    3162 0000ee50     ca11          jrz     kincskip_start_check
    3163                    
    3164                    ;Any player who hits his start will reset buyin timer!
    3165 0000ee60     b5a0          move    *a13(PDATA+16),a0
         0000ee70     0110  
    3166 0000ee80     0d5f          calla   get_start_down
         0000ee90 00000000! 
    3167 0000eeb0     4c00          move    a0,a0
    3168 0000eec0     cb36          jrnz    kincstart_hit
    3169                    
    3170 0000eed0     b5a0          move    *a13(PDATA+16),a0
         0000eee0     0110  
    3171 0000eef0     0bc0          xori    1,a0
         0000ef00 00000001  
    3172 0000ef20     0d5f          calla   get_start_down
         0000ef30 00000000! 
    3173 0000ef50     4c00          move    a0,a0
    3174 0000ef60     cb2c          jrnz    kincstart_hit
    3175                    
    3176 0000ef70           kincskip_start_check
    3177                    
    3178                    ;Regular button check
    3179                    
    3180                    ;Make these button presses player specific!
    3181                    
    3182 0000ef70     b5a0          move    *a13(PDATA+16),a0
         0000ef80     0110  
    3183 0000ef90     0d5f          calla   get_but_val_down
         0000efa0 00000000! 
    3184 0000efc0     4c00          move    a0,a0
    3185 0000efd0     cb20          jrnz    kincnew_button_press
    3186                    
    3187 0000efe0     b5a0          move    *a13(PDATA+16),a0
         0000eff0     0110  
    3188 0000f000     0d5f          calla   get_but_val_cur
         0000f010 00000000! 
    3189 0000f030     4c00          move    a0,a0
    3190 0000f040     cb1b          jrnz    kincold_button_press
    3191                    
    3192                    ;No buttons down
    3193 0000f050     0d8a          dsj     a10,kincloop
         0000f060     ffc9  
    3194                    
    3195 0000f070           kincsec_elapsed
    3196                    ;A second has elapsed.
    3197 0000f070     142b          dec     a11
    3198 0000f080     ca44          jrz     kinctimeout
    3199 0000f090     09ca          movi    TSEC*2,a10
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   73

         0000f0a0     006a  
    3200                    
    3201 0000f0b0     4d6e          move    a11,a14
    3202 0000f0c0                   X32     a14
    3203 0000f0d0     0b2e          addi    digits_tbl,a14
         0000f0e0 0000c870' 
    3204 0000f100     87c0          move    *a14,a0,L
    3205 0000f110     0d5f          calla   civanic
         0000f120 00000000! 
    3206                    
    3207 0000f140     4d6e          move    a11,a14
    3208 0000f150     0d3f          callr   setup_clock_sound
         0000f160     0001  
    3209                    
    3210 0000f170     c0b8          jruc    kincloop
    3211                    
    3212 0000f180           setup_clock_sound
    3213                    ;       x16     a14
    3214                    ;       addi    which_tick_tock,a14
    3215                    ;       move    *a14,a0
    3216                    ;       CREATE0 do_next_tick
    3217                    ;       movi    0B7H,a0
    3218 0000f180     09c0          movi    0AH,a0
         0000f190     000a  
    3219 0000f1a0     0d5f          calla   triple_sound
         0000f1b0 00000000! 
    3220 0000f1d0     0960          rets
    3221                    
    3222                    ;do_next_tick
    3223                    ;       SLEEP   12
    3224                    ;       MOVI    0B8H,A0
    3225                    ;       CALLA   triple_sound
    3226                    ;       DIE
    3227                    
    3228                    ;which_tick_tock
    3229                    ;       .word   0b7h,0b8h,0b7h,0b8h
    3230                    ;       .word   0b7h,0b8h,0b7h,0b8h
    3231                    ;       .word   0b7h,0b8h,0b7h,0b8h
    3232                    
    3233 0000f1e0           kincnew_button_press
    3234                    ;New press.  skip a digit
    3235 0000f1e0     574a          clr     a10
    3236 0000f1f0     c0e7          jruc    kincsec_elapsed
    3237                    
    3238 0000f200           kincold_button_press
    3239                    ;Button being held.  Run clock at triple rate
    3240 0000f200     168a          subk    20,a10
    3241 0000f210     c1ae          jrp     kincloop
    3242 0000f220     c0e4          jruc    kincsec_elapsed
    3243                    
    3244 0000f230           kincstart_hit
    3245                    ;A PSTATUS-active player has hit a start button.
    3246 0000f230     1427          dec     a7
    3247 0000f240     c000          jruc    kincloop_reset
         0000f250     ff78  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   74

    3248                    
    3249 0000f260           kincbuyin
    3250                    ;Someone has bought in.
    3251                    ;ALREADY DONE ELSE WHERE
    3252                    ;       movi    AUD_CONTTAKN,a0         ;inc the conts taken audit
    3253                    ;       calla   AUD1
    3254 0000f260     05ae          move    @rr_loss,a14
         0000f270 00000230- 
    3255 0000f290     ca19          jrz     kincno_rr_loss
    3256 0000f2a0     b5ae          move    *a13(PDATA+16),a14
         0000f2b0     0110  
    3257 0000f2c0     102e          addk    1,a14
    3258 0000f2d0     03ee          not     a14
    3259 0000f2e0     05a0          move    @OLD_PSTATUS,a0
         0000f2f0 00000000! 
    3260 0000f310     51c0          and     a14,a0
    3261 0000f320     05ae          move    @cursor_procs,a14
         0000f330 00000220- 
    3262 0000f350     142e          dec     a14
    3263 0000f360     058e          move    a14,@cursor_procs
         0000f370 00000220- 
    3264 0000f390     4dce          move    a14,a14
    3265 0000f3a0     cb03          jrnz    kincno_cp
    3266 0000f3b0     058e          move    a14,@active_flag
         0000f3c0 00000090- 
    3267 0000f3e0     57ce  kincno_cp       clr     a14
    3268 0000f3f0     058e          move    a14,@rr_loss            ;don't care about this anymore
         0000f400 00000230- 
    3269 0000f420     c001          jruc    kincok2_1
    3270 0000f430           kincno_rr_loss
    3271 0000f430     5600          clr     a0      ; ORG
    3272 0000f440           kincok2_1
    3273 0000f440     0580          move    a0,@OLD_PSTATUS
         0000f450 00000000! 
    3274 0000f470     0580          move    a0,@blow_out
         0000f480 000000c0- 
    3275                    
    3276 0000f4a0                   DIE
    3277                    
    3278 0000f4d0           kinctimeout
    3279                    ;Time ran out!
    3280                    ;If the other player has not bought in, then goto game over
    3281                    ;If the other player is active, and has already chosen his fighter, then
    3282                    ;immediately go into the match
    3283                    ;If he hasn't chosen his fighter, replot the text messages to now read
    3284                    ;Challenger needed, Insert x coins to start (The player blew his opportunity
    3285                    ;to continue the game at the potentially lower price!)
    3286                    ;
    3287 0000f4d0     05ae          move    @rr_loss,a14
         0000f4e0 00000230- 
    3288 0000f500     ca10          jrz     kincno_rr_loss1
    3289 0000f510     b5ae          move    *a13(PDATA+16),a14
         0000f520     0110  
    3290 0000f530     102e          addk    1,a14
    3291 0000f540     03ee          not     a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:34 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

wrestling selection screens                                          PAGE   75

    3292 0000f550     05a0          move    @OLD_PSTATUS,a0
         0000f560 00000000! 
    3293 0000f580     51c0          and     a14,a0
    3294 0000f590     05ae          move    @cursor_procs,a14
         0000f5a0 00000220- 
    3295 0000f5c0     142e          dec     a14
    3296 0000f5d0     058e          move    a14,@cursor_procs
         0000f5e0 00000220- 
    3297 0000f600     c001          jruc    kincok1
    3298 0000f610           kincno_rr_loss1
    3299 0000f610     5600          clr     a0      ;ORG
    3300 0000f620           kincok1
    3301 0000f620     0580          move    a0,@OLD_PSTATUS
         0000f630 00000000! 
    3302 0000f650     05a0          move    @rr_loss,a0
         0000f660 00000230- 
    3303 0000f680     ca04          jrz     kincdo_end
    3304 0000f690     4dce          move    a14,a14
    3305 0000f6a0     ca02          jrz     kincdo_end
    3306 0000f6b0     5600          clr     a0
    3307 0000f6c0     c001          jruc    kincset_it
    3308 0000f6d0           kincdo_end
    3309                    
    3310 0000f6d0     1820          movk    1,a0
    3311 0000f6e0           kincset_it
    3312 0000f6e0     0580          move    a0,@blow_out
         0000f6f0 000000c0- 
    3313                    
    3314 0000f710                   DIE
    3315                    
    3316 0000f740           auto_str
    3317 0000f740                   JAM_STR font9_ascii,10,0,200,19,FNT9WHT_P,print_string_C2
    3318 0000f7e0       41          .string "AUTO INITIALS",0
    3319 0000f850                   .even
    3320                    
    3321                    ******************************************************************************
    3322                    
    3323                            .end

 No Errors,  No Warnings
