

	.file	"doink.asm"
	.title	"doink specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"




	.ref	DO_REVERSAL,DO_REVERSAL_MESS,FIND_AND_KILL_ENDLESS
	.ref	ADD_IF_SILENT,JUMP_ROPES,CLIMB_ROPES
	.ref	check_dizzy
	.ref	create_damage_points

	.ref	set_getup_time
	.ref	get_punch_dtime
	.ref	get_rope_x
	.ref	tally_damage,clear_damage_log
	.ref	inc_getup_time

	.ref	change_anim1,change_anim1a
	.ref	change_anim2,change_anim2a
	.ref	process_ptrs
	.ref	keep_attached
	.ref	get_opp_plyrmode
	.ref	wres_collis_off
	.ref	convert_facing
	.ref	check_secret_moves
	.ref	change_walk_anim
	.ref	set_rotate_anim
	.ref	execute_walk
	.ref	bounce_off_ropes
	.ref	climb_turnbuckle

	;from CROWD.ASM
	.ref	crowd_cheer

	;from DCSSOUND.ASM
	.ref	triple_sound

	;from WRESTLE.ASM
	.ref	calc_line_x
	.ref	face_each_other
	.ref	slide_offscr
	.ref	BONUS_MESS


	.ref	dnk_3_pile_driver_anim
	.ref	dnk_2_push2_anim
	.ref	start_run_anim

	.ref	dnk_4_earslap_anim
	.ref	dnk_2_earslap_anim
	.ref	dnk_4_slap_anim
	.ref	dnk_2_slap_anim
	.ref	dnk_head_hit_dizzy_anim
	.ref	dnk_knockdwn_anim
	.ref	dnk_4_hammer_anim

	.ref	wres_slave_anim
	.ref	dnk_zip_anim

	.ref	dnk_stand2_anim,dnk_stand8_anim
	.ref	dnk_stand4_anim,dnk_stand6_anim
	.ref	dnk_torso2_anim,dnk_torso8_anim
	.ref	dnk_torso4_anim,dnk_torso6_anim

	.ref	dnk_2_to_4_turn_anim,dnk_8_to_6_turn_anim	;stand
	.ref	dnk_4_to_2_turn_anim,dnk_6_to_8_turn_anim
	.ref	dnk_4_to_6_turn_anim,dnk_6_to_4_turn_anim
	.ref	dnk_2_to_8_turn_anim,dnk_8_to_2_turn_anim
	.ref	dnk_4_to_8_turn_anim,dnk_6_to_2_turn_anim
	.ref	dnk_2_to_6_turn_anim,dnk_8_to_4_turn_anim

	.ref	dnk_2_to_4_turn2_anim,dnk_8_to_6_turn2_anim	;torso
	.ref	dnk_4_to_2_turn2_anim,dnk_6_to_8_turn2_anim
	.ref	dnk_4_to_6_turn2_anim,dnk_6_to_4_turn2_anim
	.ref	dnk_2_to_8_turn2_anim,dnk_8_to_2_turn2_anim
	.ref	dnk_4_to_8_turn2_anim,dnk_6_to_2_turn2_anim
	.ref	dnk_2_to_6_turn2_anim,dnk_8_to_4_turn2_anim

	.ref	dnk_walk1_f2_anim,dnk_walk2_f2_anim,dnk_walk4_f2_anim
	.ref	dnk_walk5_f2_anim,dnk_walk6_f2_anim,dnk_walk8_f2_anim

	.ref	dnk_walk1_f4_anim,dnk_walk2_f4_anim,dnk_walk4_f4_anim
	.ref	dnk_walk5_f4_anim,dnk_walk6_f4_anim,dnk_walk8_f4_anim

	.ref	dnk_2_punch_anim,dnk_4_punch_anim
	.ref	dnk_2_buzz_anim,dnk_4_buzz_anim
	.ref	dnk_2_buzz2_anim,dnk_4_buzz2_anim

	.ref	dnk_2_butt_anim,dnk_4_butt_anim
	.REF	dnk_combo_uppercut_to_head_anim
	.ref	dnk_4_combo_kick_anim
	.REF	CHECK_COMBO_GO

	.ref	dnk_2_kick_anim,dnk_4_kick_anim
	.ref	dnk_2_spin_kick_anim,dnk_4_spin_kick_anim
	.ref	dnk_2_knee_anim,dnk_4_knee_anim

	.ref	dnk_2_box_anim,dnk_4_box_anim

	.ref	dnk_run_anim,dnk_run2_anim

	.ref	dnk_4_blbowdrop_anim

 	.ref	dnk_2_lbowdrop_anim,dnk_4_lbowdrop_anim
	.ref	dnk_2_grabfling_anim
	.ref	dnk_4_grabfling_anim

	.ref	dnk_heldoh_anim

	.ref	dnk_diveofftb_anim

	.ref	dnk_fly_cline_anim
	.ref	dnk_flying_kick_anim

	.ref	dnk_4_head_hit2_anim

	.ref	dnk_2_head_hit2_anim
	.ref	dnk_4_head_hit_anim,dnk_head_hit3_anim
	.ref	dnk_2_head_hit_anim,dnk_head_hit2_anim
	.ref	dnk_fall_back_anim
	.ref	dnk_2_faceup_getup_anim
	.ref	dnk_4_faceup_getup_anim

	.ref	dnk_4_losebal_dizzy_anim

	.ref	dnk_hitonground_anim
	.ref	dnk_4_stomp_anim,dnk_2_stomp_anim
	.ref	dnk_4_bstomp_anim

	.ref	dnk_climb_up_anim,dnk_climb_down_anim
	.ref	dnk_4_block_anim,dnk_2_block_anim
	.ref	dnk_2_hitblock_anim,dnk_4_hitblock_anim
	.ref	dnk_2_hiptoss_anim,dnk_4_hiptoss_anim
	.ref	dnk_2_hiptoss2_anim,dnk_4_hiptoss2_anim
	.ref	dnk_4_push_anim,dnk_2_push_anim
	.ref	dnk_4_bigboot_anim,dnk_2_bigboot_anim
	.ref	dnk_4_losebal_anim
	.ref	dnk_dizzy_anim
	.ref	dnk_2_pin_anim
	.ref	dnk_4_pin_anim
	.ref	dnk_climbthru_side_anim,dnk_climbthru_bot_anim
	.ref	dnk_climbthru_top_anim,dnk_climbin_bot_anim
	.ref	dnk_climbin_top_anim,dnk_climbin_side_anim

	.ref	dnk_belly_anim
	.ref	ck_ignore  		;Ignore button press?

	.ref 	dnk_pkup_chair_anim

	.ref	dnk_3_knee_to_head_anim
	.ref	dnk_3_knees_to_head_anim
	.ref	dnk_uppercut_to_head_anim
	.ref	dnk_uppercuts_to_head_anim
	.ref	dnk_get_buzz_anim

	.ref	dnk_3_head_hold2_anim
	.ref	dnk_3_head_hold_anim




doink_secret_moves


	.long	oukpcharge_buzz
	.long	oukpearslap
	.long	oukpgrab_fling
	.long	oukphammer
	.long	oukphip_toss
	.long	oukpneck_grab
	.long	oukpboxing_pnch
	.long	0



 SUBR	dnk_smove_table
	.long	dnk_hdhold_slam
	.long	dnk_hdhold_pile
	.long	dnk_hdhold_combo1
	.long	dnk_hdhold_combo2
	.long	dnk_hdhold_buzz
	.long	dnk_hdhold_anti_combo
	.long	dnk_grab_toss_air
	.long	dnk_walk_fast
	.long	0


oukpcharge_buzz
	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	oukpno_punch



	move	*a13(PLYRNUM),a0
	calla	get_punch_dtime
	cmpi	100,a0			;> min?
	jrlt	oukpno_punch

	callr	oukpscrt_buzz
	setc
	rets

oukpno_punch
	clrc
	rets


oukpscrt_buzz

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	oukpout
	cmpi	MODE_HEADHOLD,a0
	jrz	oukpout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	oukpout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_RUNNING,a0
	jrz	oukpleapbuzz

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	oukpnorm

oukpleapbuzz
	FACE24	dnk,buzz2_anim
	calla	change_anim1a
	rets
oukpnorm
	FACE24	dnk,buzz_anim
	calla	change_anim1a
	rets
oukpok
	movi	dnk_4_buzz_anim,a0
	calla	change_anim1a
	rets

oukpboxing_pnch
	.word	B_PUNCH,		J_ALL
	.word	B_PUNCH,		J_ALL
	.word	B_PUNCH,		J_ALL
	.word	B_PUNCH,		J_ALL
	.word	B_PUNCH,		J_ALL
	.word	B_PUNCH,		J_ALL
	.word	B_PUNCH,		J_ALL
	.word	8000h | 60		;max
	.long	scrt_glove

scrt_glove
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	oukpout
	cmpi	MODE_DEAD,a0
	jrz	oukpout
	cmpi	MODE_HEADHELD,a0
	jrz	oukpout

	MOVE	*A13(COMBO_COUNT),A0
	JRNZ	oukpout

	FACE24	dnk,box_anim
	calla	change_anim1a
	WRSND	W_DOINK,SPUNCH_T1,SPUNCH_T2

	rets

oukphammer
	.word	B_SKICK,			J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32 		;max
	.long	scrt_hammer

scrt_hammer
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	oukpout

	movi	dnk_4_hammer_anim,a0
	calla	change_anim1a

	rets


oukpearslap
	.word	B_PUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_DOWN_TOWARD,		J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 50 		;max
	.long	oukpscrt_earslap

oukpscrt_earslap
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	oukpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	oukpout
	cmpi	MODE_DEAD,a0
	jrz	oukpout
	cmpi	MODE_HEADHELD,a0
	jrz	oukpout

	movi	dnk_4_earslap_anim,a0
	calla	change_anim1a
	rets


oukpneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32		;max
	.long	oukpscrt_neck

oukpscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	oukpout
	cmpi	MODE_DEAD,a0
	jrz	oukpout
	cmpi	MODE_HEADHELD,a0
	jrz	oukpout

	move	*a13(CLOSEST_XDIST),a1
	cmpi	70,a1
	jrgt	oukpstd_grab

	movi	dnk_3_head_hold2_anim,a0
	calla	change_anim1a
	rets

oukpstd_grab
	movi	dnk_3_head_hold_anim,a0
	calla	change_anim1a
	rets


oukpgrab_fling
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	oukpscrt_grabfling

oukpscrt_grabfling


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	oukpyes
	cmpi	MODE_RUNNING,a0
	jrnz	oukpnope
oukpyes
	FACE24	dnk,hiptoss_anim
	calla	change_anim1a

	WRSND	W_DOINK,HIPTOSS_T1,PUNCH_T2
	rets

oukpnope
	calla	get_opp_plyrmode
	cmpi	MODE_HEADHELD,a0
	jrz	oukpout
	cmpi	MODE_ONGROUND,a0
	jrz	oukpout
	cmpi	MODE_DEAD,a0
	jrz	oukpout

	FACE24	dnk,grabfling_anim
	calla	change_anim1a

	WRSND	W_DOINK,GRABFLING_T1,PUNCH_T2
	rets


oukphip_toss
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	oukpscrt_hiptoss

oukpscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oukpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	oukpout
	cmpi	MODE_BLOCK,a0
	jrz	oukpout
	cmpi	MODE_DEAD,a0
	jrz	oukpout
	cmpi	MODE_HEADHELD,a0
	jrz	oukpout
	cmpi	MODE_INAIR,a0
	jrz	oukpdoit
	cmpi	MODE_INAIR2,a0
	jrz	oukpdoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	68h,a0
	jrgt	oukpout

oukpdoit
	FACE24	dnk,hiptoss_anim
	calla	change_anim1a

	WRSND	W_DOINK,HIPTOSS_T1,PUNCH_T2

oukpout	rets

dnk_hdhold_slam

nxvjTIMEOUT	.equ	60

nxvjlp0
	SLEEPK	1
nxvjlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	nxvjcont
	cmpi	MODE_HEADHELD,a0
	jrnz	nxvjlp0
nxvjcont
	clr	a11

	WAITSWITCH_DWN	J_UP,0,nxvjlp

	movi	nxvjTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,nxvjlp
	WAITSWITCH_DWN	J_DOWN,0,nxvjlp
	WAITSWITCH_DWN	B_SKICK,J_DOWN_AWAY|J_DOWN_TOWARD,nxvjlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	nxvjslam
	cmpi	MODE_HEADHELD,a0
	jrnz	nxvjlp0


	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	nxvjlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	jruc	nxvjis_reversal

nxvjslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	nxvjlp0				;ignore

	movk	1,a10
	CREATE0	BONUS_MESS

nxvjis_reversal
	move	*a8(ATTACH_PROC),a14,L
	movk	15,a0
	move	a0,*a14(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	.ref	dnk_3_head_slam_anim
	movi	dnk_3_head_slam_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEP	60

	jruc	nxvjlp

dnk_hdhold_pile

xcjeTIMEOUT	.equ	60

xcjelp0
	SLEEPK	1
xcjelp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	xcjecont
	cmpi	MODE_HEADHELD,a0
	jrnz	xcjelp0
xcjecont
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,xcjelp

	movi	xcjeTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,xcjelp
	WAITSWITCH_DWN	J_TOWARD,0,xcjelp
	WAITSWITCH_DWN	B_SPUNCH,0,xcjelp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	xcjeslam
	cmpi	MODE_HEADHELD,a0
	jrnz	xcjelp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	xcjelp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	jruc	xcjeis_reversal

xcjeslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	xcjelp0				;ignore

	movk	6,A10			;Pile driver
	CREATE0	BONUS_MESS

xcjeis_reversal
	move	*a8(ATTACH_PROC),a14,L
	movk	15,a0
	move	a0,*a14(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
	movi	dnk_3_pile_driver_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEP	60

	jruc	xcjelp

dnk_hdhold_anti_combo
efscTIMEOUT	.equ	80

efsclp0
	SLEEPK	1
efsclp

	clr	a11

	WAITSWITCH_DWN	J_UP,0,efsclp

	movi	efscTIMEOUT,a11

	WAITSWITCH_DWN	J_UP_TOWARD,0,efsclp
	WAITSWITCH_DWN	J_TOWARD,0,efsclp
	WAITSWITCH_DWN	J_DOWN_TOWARD,0,efsclp
	WAITSWITCH_DWN	J_DOWN,0,efsclp
	WAITSWITCH_DWN	J_DOWN_AWAY,0,efsclp
	WAITSWITCH_DWN	J_AWAY,0,efsclp
	WAITSWITCH_DWN	J_UP_AWAY,0,efsclp
	WAITSWITCH_DWN	J_UP,0,efsclp
	WAITSWITCH_DWN	B_SPUNCH,0,efsclp

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(COMBO_COUNT),a0
	jrz	efsclp0

	move	*a8(ANTI_COMBO_TIME),a0		;Time stamp
	.ref	PCNT
	move	@PCNT,a14
	sub	a0,a14
	abs	a14
	cmpi	80,a14
	jrge	efsclp0

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	clr	a0
	move	a0,*a8(IMMOBILIZE_TIME)

	move	*a8(ATTACH_PROC),a14,L
	movk	15,a0
	move	a0,*a14(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	dnk_3_pile_driver_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEP	60

	jruc	efsclp


dnk_hdhold_combo1

wzxtTIMEOUT	.equ	60

wzxtlp0
	SLEEPK	1
wzxtlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wzxtcont
	cmpi	MODE_HEADHELD,a0
	jrnz	wzxtlp0
wzxtcont
	calla	CHECK_COMBO_GO
	jrlt	wzxtlp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,wzxtlp

	movi	wzxtTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,wzxtlp
	WAITSWITCH_DWN	B_SPUNCH,J_DOWN_TOWARD|J_UP_TOWARD,wzxtlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wzxtslam
	cmpi	MODE_HEADHELD,a0
	jrnz	wzxtlp0


wzxtslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wzxtlp0				;ignore


	CALLA	FIND_AND_KILL_ENDLESS

	movi	dnk_combo_uppercut_to_head_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEP	60

	jruc	wzxtlp


dnk_hdhold_combo2

tgauTIMEOUT	.equ	60

tgaulp0
	SLEEPK	1
tgaulp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	tgaucont
	cmpi	MODE_HEADHELD,a0
	jrnz	tgaulp0
tgaucont
	calla	CHECK_COMBO_GO
	jrlt	tgaulp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,tgaulp

	movi	tgauTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,tgaulp
	WAITSWITCH_DWN	B_SKICK,J_DOWN_TOWARD|J_UP_TOWARD,tgaulp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	tgauslam
	cmpi	MODE_HEADHELD,a0
	jrnz	tgaulp0


tgauslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	tgaulp0				;ignore

	CALLA	FIND_AND_KILL_ENDLESS

	movi	dnk_4_combo_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEP	60

	jruc	tgaulp


dnk_grab_toss_air

tjzbTIMEOUT	.equ	40

tjzblp0
	SLEEPK	1
tjzblp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,tjzblp

	movi	tjzbTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,tjzblp
	WAITSWITCH_DWN	B_PUNCH,J_DOWN_AWAY|J_UP_AWAY,tjzblp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tjzblp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	tjzblp0

	PUSH	a13
	move	a8,a13
	calla	get_opp_plyrmode
	PULL	a13
	cmpi	MODE_ONGROUND,a0
	jrz	tjzblp
	cmpi	MODE_DEAD,a0
	jrz	tjzblp
	cmpi	MODE_INAIR,a0
	jrz	tjzbdoit2
	cmpi	MODE_INAIR2,a0
	jrz	tjzbdoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	tjzbdoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	6ch,a0
	jrgt	tjzblp

	FACE24	dnk,hiptoss_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_DOINK,GRABFLING_T1,PUNCH_T2

	SLEEP	60
	jruc	tjzblp

tjzbdoit2	FACE24	dnk,hiptoss2_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_DOINK,GRABFLING_T1,PUNCH_T2

	SLEEP	60

	jruc	tjzblp



dnk_walk_fast

atemTIMEOUT	.equ	61

atemlp0
	SLEEPK	1
atemlp
	move	*a8(WALK_FAST),a0
	jrnz	atemlp0
	move	*a8(PLYRMODE),a0
	cmpi	MODE_NORMAL,a0
	jrnz	atemlp0

	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,atemlp

	movi	atemTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN_AWAY,0,atemlp
	WAITSWITCH_DWN	J_DOWN,0,atemlp
	WAITSWITCH_DWN	J_DOWN_TOWARD,0,atemlp
	WAITSWITCH_DWN	J_TOWARD,0,atemlp
	WAITSWITCH_DWN	J_UP_TOWARD,0,atemlp
	WAITSWITCH_DWN	J_UP,0,atemlp
	WAITSWITCH_DWN	J_UP_AWAY,0,atemlp


	move	*a8(PLYRMODE),a0
	cmpi	MODE_NORMAL,a0
	jrnz	atemlp0

	movi	30000h,a0
	move	a0,*a8(OBJ_YVEL),L

	movi	15*60,a0
	move	a0,*a8(WALK_FAST)

	movi	211h,a0
	.ref	ADD_VOICE
	calla	ADD_VOICE

	movi	0101h,a14
	move	a14,*a8(OBJ_CONST)
	move	*a8(OBJ_CONTROL),a14
	andni	01111b,a14
	ori	M_CONNON,a14
	move	a14,*a8(OBJ_CONTROL)

	SLEEPK	3
 
	move	*a8(OBJ_CONTROL),a14
	andni	01111b,a14
	ori	DMAWNZ,a14
	move	a14,*a8(OBJ_CONTROL)

	SLEEPK	3

	movi	0101h,a14
	move	a14,*a8(OBJ_CONST)
	move	*a8(OBJ_CONTROL),a14
	andni	01111b,a14
	ori	M_CONNON,a14
	move	a14,*a8(OBJ_CONTROL)

	SLEEPK	3

	move	*a8(OBJ_CONTROL),a14
	andni	01111b,a14
	ori	DMAWNZ,a14
	move	a14,*a8(OBJ_CONTROL)

	SLEEP	30

	movi	0b2h,a0			;Honk
	calla	triple_sound

	SLEEPK	18

	movi	0b2h,a0			;Honk
	calla	triple_sound

	SLEEPK	18

	movi	0b2h,a0			;Honk
	calla	triple_sound

atemtag	SLEEPK	5
	move	*a8(WALK_FAST),a0
	jrnz	atemtag

	movi	0101h,a14
	move	a14,*a8(OBJ_CONST)
	move	*a8(OBJ_CONTROL),a14
	andni	01111b,a14
	ori	M_CONNON,a14
	move	a14,*a8(OBJ_CONTROL)

	SLEEPK	3

	move	*a8(OBJ_CONTROL),a14
	andni	01111b,a14
	ori	DMAWNZ,a14
	move	a14,*a8(OBJ_CONTROL)

	DIE


dnk_hdhold_buzz

bdjmTIMEOUT	.equ	60

bdjmlp0
	SLEEPK	1
bdjmlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	bdjmcont
	cmpi	MODE_HEADHELD,a0
	jrnz	bdjmlp0
bdjmcont
	clr	a11

	WAITSWITCH_DWN	J_DOWN_AWAY,0,bdjmlp

	movi	bdjmTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,bdjmlp
	WAITSWITCH_DWN	J_DOWN_TOWARD,0,bdjmlp
	WAITSWITCH_DWN	J_TOWARD,0,bdjmlp
	WAITSWITCH_DWN	B_PUNCH,J_UP_TOWARD|J_DOWN_TOWARD,bdjmlp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	bdjmlp0

	CALLA	FIND_AND_KILL_ENDLESS
	movi	dnk_4_buzz_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEP	120

	jruc	bdjmlp


 SUBR	doink_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	umsup1
	movi	dnk_stand4_anim,a0
	calla	change_anim1a

	movi	dnk_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE0	do_taunt
	PULL	a10

	rets

umsup1
	movi	dnk_stand2_anim,a0
	calla	change_anim1a

	movi	dnk_torso2_anim,a0
	calla	change_anim2a

	rets

 SUBR	do_taunt

	SLEEP	60
	.ref	HALT
	move	@HALT,a0
	jaz	SUCIDE

	move	*a10(BUT_VAL_DOWN),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrnz	umsutag

	movi	250,a0
	.ref	RNDPER
	calla	RNDPER
	jals	SUCIDE

	.ref	current_round
	move	@current_round,a0
	cmpi	1,a0
	jrz	umsutag
	move	*a10(PLYRNUM),a0
	cmpi	2,a0
	jalt	SUCIDE
umsutag	PUSH	a13
	move	a10,a13
	move	*a13(WRESTLERNUM),a0
	X32	a0
	addi	umsutaunt_t,a0
	move	*a0,a0,L

	calla	change_anim1a
	PULL	a13
 
	DIE

	.ref	hrt_4_taunt_anim,rzr_4_taunt_anim,und_4_taunt_anim
	.ref	yok_4_taunt_anim,shn_4_taunt_anim,bam_4_taunt_anim
	.ref	lex_4_taunt_anim
	.ref	dnk_4_taunt_anim

umsutaunt_t
	.long	hrt_4_taunt_anim			;0 Bret Hart
	.long	rzr_4_taunt_anim			;1 Razor Ramon
	.long	und_4_taunt_anim			;2 Undertaker
	.long	yok_4_taunt_anim			;3 Yokozuna
	.long	shn_4_taunt_anim			;4 Shawn Michaels
	.long	bam_4_taunt_anim			;5 Bam Bam
	.long	dnk_4_taunt_anim			;6 Doink
	.long	0		  			;7 spare
	.long	lex_4_taunt_anim			;8 Lex Luger
	.long	0		  			;9 Referee


 SUBR	move_doink


	movi	doink_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	lxssmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

lxssmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_normal	;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	.ref	mode_choking
	.long	mode_choking		;25


mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	pyoeno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	pyoenope
	movi	dnk_fall_back_anim,a0
	calla	change_anim1a

	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

pyoenope

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	pyoeopp_not_dead

	move	*a13(BUT_VAL_CUR),a0
	jrz	pyoeopp_not_dead

	move	*a13(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	pyoeopp_not_dead
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	50h,a0
	jrgt	pyoeopp_not_dead

	move	*a13(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a1,L

	move	*a1(OBJ_YPOS),a0,L
	move	*a1(GROUND_Y),a14
	sll	16,a14
	cmp	a14,a0
	jrgt	pyoeopp_notgnd



	move	*a13(ATTACH_PROC),a1,L
	jrz	pyoedone
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jrz	pyoeopp_not_dead
pyoedone

	FACE24	dnk,pin_anim
	calla	change_anim1a

	rets

pyoeopp_notgnd
pyoeopp_not_dead

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	pyoeimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	pyoenblk			;1 for down transitions
	callr	pyoeblock			;& 1 for current buttons
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
pyoenblk

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	pyoeaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	pyoeno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	pyoeno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

pyoeimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
pyoeno_climb
	calla	execute_walk

pyoeno_interrupt
	rets

pyoeaction_table

	.long	pyoez					;0
	.long	pyoepunch					;1
	.long	pyoeblock					;2
	.long	pyoez					;3
	.long	pyoesuper_punch				;4
	.long	pyoesuper_punch,pyoez,pyoez			;5-7
	.long	pyoekick					;8
	.long	punchkick,pyoez,pyoez,pyoekick,pyoez,pyoez,pyoez		;9-15
	.long	pyoesuper_kick				;16
	.long	pyoez,pyoez,pyoez,pyoegraboh,pyoez,pyoez,pyoez		;17-23
	.long	pyoekick,pyoez,pyoez,pyoez,pyoez,pyoez,pyoez,pyoez		;24-31


pyoez		;0

	rets


pyoepunch		;1
	JJXM_INIT
	JJXM	NORMAL,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;0
	JJXM	RUNNING,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;1
	JJXM	INAIR,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;2
	JJXM	ATTACHED,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;3
	JJXM	ONGROUND,	120,120,pyoepunch_lbowdrop,pyoepunch_punch	;4
	JJXM	BOUNCING,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;1
	JJXM	ONTURNBKL,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;6
	JJXM	BLOCK,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;7
	JJXM	DIZZY,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;8
	JJXM	DEAD,		 96,112,pyoepunch_lbowdrop,pyoepunch_punch	;9
	JJXM	OPPOVERHEAD,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;10
	JJXM	CLIMBTURNBKL,		pyoepunch_punch			;11
	JJXM	WAITANIM,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;12
	JJXM	GRAPPLE,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;13
	JJXM	MASTER,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;14
	JJXM	SLAVE, 		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;15
	JJXM	HEADHOLD,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;16
	JJXM	HEADHELD,	 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;19
	JJXM	PUPPET,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;20
	JJXM	INAIR2,		 50, 45,pyoepunch_hdbutt,pyoepunch_punch	;21
	JJXM_END

pyoepunch_rets
	rets

pyoepunch_punch
std_punch

	FACE24	dnk,punch_anim
	calla	change_anim1a

	WRSND	W_DOINK,PUNCH_T1,PUNCH_T2

	rets

pyoepunch_hdbutt

	FACE24	dnk,butt_anim
	calla	change_anim1a

	WRSND	W_DOINK,HDBUTT_T1,HDBUTT_T2

	rets

pyoepunch_lbowdrop

	FACE24	dnk,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_DOINK,LBOWDROP_T1,LBOWDROP_T2

	rets

pyoeblock		;2
std_block
	FACE24	dnk,block_anim
	calla	change_anim1

	rets


pyoesuper_punch	;4
	JJXM_INIT
	JJXM	NORMAL,		 85, 55,pyoespunch_special,pyoespunch_slap	;0
	JJXM	RUNNING,	 85, 55,pyoespunch_special,pyoespunch_slap	;1
	JJXM	INAIR,		 85, 55,pyoespunch_special,pyoespunch_slap	;2
	JJXM	ATTACHED,	 85, 55,pyoespunch_special,pyoespunch_slap	;3
	JJXM	ONGROUND,	 136,112,pyoespunch_lbowdrop,std_punch	;4
	JJXM	BOUNCING,	 85, 55,pyoespunch_special,pyoespunch_slap	;1
	JJXM	ONTURNBKL,	 	pyoespunch_slap			;6
	JJXM	BLOCK,		 85, 55,pyoespunch_special,pyoespunch_slap	;7
	JJXM	DIZZY,		 85, 55,pyoespunch_special,pyoespunch_slap	;8
	JJXM	DEAD,		 96,112,pyoespunch_lbowdrop,std_punch	;9
	JJXM	OPPOVERHEAD,	 85, 55,pyoespunch_special,pyoespunch_slap	;10
	JJXM	CLIMBTURNBKL,		std_punch			;11
	JJXM	WAITANIM,	 85, 55,pyoespunch_special,pyoespunch_slap	;12
	JJXM	GRAPPLE,	 85, 55,pyoespunch_special,pyoespunch_slap	;13
	JJXM	MASTER,		 85, 55,pyoespunch_special,pyoespunch_slap	;14
	JJXM	SLAVE, 		 85, 55,pyoespunch_special,pyoespunch_slap	;15
	JJXM	HEADHOLD,	 85, 55,pyoespunch_special,pyoespunch_slap	;16
	JJXM	HEADHELD,		do_pile				;19
	JJXM	PUPPET,		 85, 55,pyoespunch_special,pyoespunch_slap	;20
	JJXM	INAIR2,		 85, 55,pyoespunch_special,pyoespunch_slap	;21
	JJXM_END

pyoespunch_rets
	rets

pyoespunch_slap

	FACE24	dnk,slap_anim
	calla	change_anim1a

	WRSND	W_DOINK,SPUNCH_T1,SPUNCH_T2

	rets


pyoespunch_special

	move	*a13(CLOSEST_XDIST),a1
	cmpi	50,a1
	jrgt	std_punch

	FACE24	dnk,butt_anim
	calla	change_anim1

	WRSND	W_DOINK,HDBUTT_T1,HDBUTT_T2

	rets

pyoespunch_lbowdrop
	.ref	dnk_2_hair_pickup_anim
	.ref	dnk_4_hair_pickup_anim


	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	pyoeno


	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	pyoeno


	FACE24	dnk,hair_pickup_anim
	calla	change_anim1
	WRSND	W_DOINK,LBOWDROP_T1,LBOWDROP_T2
	rets

pyoeno	FACE24	dnk,lbowdrop_anim
	calla	change_anim1
	WRSND	W_DOINK,LBOWDROP_T1,LBOWDROP_T2
	rets


pyoekick		;8
	JJXM_INIT
	JJXM	NORMAL,		 50, 92,pyoekick_knee,pyoekick_kick		;0
	JJXM	RUNNING,	 	pyoeskick_bigboot			;1
	JJXM	INAIR,		 50, 92,pyoekick_knee,pyoekick_kick		;2
	JJXM	ATTACHED,	 50, 92,pyoekick_knee,pyoekick_kick		;3
	JJXM	ONGROUND,	120,120,pyoekick_stomp,pyoekick_kick		;4
	JJXM	BOUNCING,	 	pyoeskick_bigboot			;1
	JJXM	ONTURNBKL,	 	pyoekick_kick			;6
	JJXM	BLOCK,		 50, 92,pyoekick_knee,pyoekick_kick		;7
	JJXM	DIZZY,		 50, 92,pyoekick_knee,pyoekick_kick		;8
	JJXM	DEAD,		 96,112,pyoekick_stomp,pyoekick_kick		;9
	JJXM	OPPOVERHEAD,	 50, 92,pyoekick_knee,pyoekick_kick		;10
	JJXM	CLIMBTURNBKL,	 	pyoekick_kick			;11
	JJXM	WAITANIM,	 50, 92,pyoekick_knee,pyoekick_kick		;12
	JJXM	GRAPPLE,	 50, 92,pyoekick_knee,pyoekick_kick		;13
	JJXM	MASTER,		 50, 92,pyoekick_knee,pyoekick_kick		;14
	JJXM	SLAVE, 		 50, 92,pyoekick_knee,pyoekick_kick		;15
	JJXM	HEADHOLD,	 50, 92,pyoekick_knee,pyoekick_kick		;16
	JJXM	HEADHELD,	 50, 92,pyoekick_knee,pyoekick_kick		;19
	JJXM	PUPPET,		 50, 92,pyoekick_knee,pyoekick_kick		;20
	JJXM	INAIR2,		 50, 92,pyoekick_knee,pyoekick_kick		;21
	JJXM_END


pyoekick_kick
std_kick

	FACE24	dnk,kick_anim
	calla	change_anim1a

	WRSND	W_DOINK,KICK_T1,KICK_T2

	rets

pyoekick_knee

	FACE24	dnk,knee_anim
	calla	change_anim1a

	WRSND	W_DOINK,KICK_T1,KICK_T2

	rets

pyoekick_stomp

	FACE24	dnk,stomp_anim
	calla	change_anim1a

	WRSND	W_DOINK,KICK_T1,KICK_T2

	rets


punchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets

pyoesuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,		 60, 60,pyoeskick_special,pyoeskick_kick	;0
	JJXM	RUNNING,	 	pyoeskick_bigboot			;1
	JJXM	INAIR,		 60, 60,pyoeskick_special,pyoeskick_kick	;2
	JJXM	ATTACHED,	 60, 60,pyoeskick_special,pyoeskick_kick	;3
	JJXM	ONGROUND,	144,160,pyoeskick_stomp,std_kick		;4
	JJXM	BOUNCING,	 	pyoeskick_bigboot			;5
	JJXM	ONTURNBKL,	 60, 96,pyoeskick_kick,std_kick		;6
	JJXM	BLOCK,		 60, 60,pyoeskick_special,pyoeskick_kick	;7
	JJXM	DIZZY,		 60, 60,pyoeskick_special,pyoeskick_kick	;8
	JJXM	DEAD,		144,160,pyoeskick_stomp,std_kick		;9
	JJXM	OPPOVERHEAD,	 60, 60,pyoeskick_special,pyoeskick_kick	;10
	JJXM	CLIMBTURNBKL,	 60, 96,pyoeskick_kick,std_kick		;11
	JJXM	WAITANIM,	 60, 62,pyoeskick_special,pyoeskick_kick	;12
	JJXM	GRAPPLE,	 60, 62,pyoeskick_special,pyoeskick_kick	;13
	JJXM	MASTER,		 60, 62,pyoeskick_special,pyoeskick_kick	;14
	JJXM	SLAVE, 		 60, 62,pyoeskick_special,pyoeskick_kick	;15
	JJXM	HEADHOLD,	 60, 62,pyoeskick_special,pyoeskick_kick	;16
	JJXM	HEADHELD,	 	std_kick
	JJXM	PUPPET,		 60, 62,pyoeskick_special,pyoeskick_kick	;20
	JJXM	INAIR2,		 60, 60,pyoeskick_special,pyoeskick_kick	;21
	JJXM_END

pyoeskick_kick

	FACE24	dnk,spin_kick_anim
	calla	change_anim1a

	WRSND	W_DOINK,FLYKICK_T1,FLYKICK_T2
	rets

pyoeskick_special
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrz	pyoecont2

	FACE24	dnk,knee_anim
	calla	change_anim1

	WRSND	W_DOINK,GRABHOLD_T1,GRABHOLD_T2
	rets

pyoecont2
	.ref	dnk_4_knee_fall_anim
	movi	dnk_4_knee_fall_anim,a0
	calla	change_anim1

	WRSND	W_DOINK,GRABHOLD_T1,GRABHOLD_T2
	rets


pyoeskick_stomp

	FACE24	dnk,stomp_anim
	calla	change_anim1a

	WRSND	W_DOINK,KICK_T1,KICK_T2

	rets

pyoeskick_bigboot	;we can probably get away with just a pyoe4 big boot

	FACE24	dnk,bigboot_anim
	calla	change_anim1a

	WRSND	W_DOINK,FLYKICK_T1,FLYKICK_T2

	rets



pyoegraboh		;8

	rets


lsazXRUN_VAL	equ	64000h		;50000h
lsazXRUN2_VAL	equ	88000h
lsazZDRIFT_VAL	equ	28000h		;20000h

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	lsazno_vel

	calla	bounce_off_ropes

	movi	lsazXRUN_VAL,a0

	move	*a13(WALK_FAST),a14
	jrz	lsazno
	movi	lsazXRUN2_VAL,a0
lsazno

	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	lsazpos
	neg	a0
lsazpos
	move	a0,*a13(OBJ_XVEL),L

lsazno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	lsazout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	lsazno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	lsazcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

lsazcontinue_run
lsazno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-lsazZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	lsazsetvel

	movi	lsazZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	lsazsetvel

	clr	a1
lsazsetvel
	move	a1,*a13(OBJ_ZVEL),L


	move	*a13(DELAY_BUTNS),a0
	jrnz	lsazout_of_control


	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	lsazaction_table,a0
	move	*a0,a0,L
	call	a0
lsazout_of_control
	rets

lsazaction_table
	.long	lsazz					;0
	.long	lsazpunch					;1
	.long	lsazblock					;2
	.long	lsazz					;3
	.long	lsazsuper_punch				;4
	.long	lsazsuper_punch,lsazz,lsazz			;5-7
	.long	lsazkick					;8
	.long	punchkick,lsazz,lsazz,lsazkick,lsazz,lsazz,lsazz		;9-15
	.long	lsazsuper_kick				;16
	.long	lsazz,lsazz,lsazz,lsazgraboh,lsazz,lsazz,lsazz		;17-23
	.long	lsazkick,lsazz,lsazz,lsazz,lsazz,lsazz,lsazz,lsazz		;24-31



lsazz
	rets


lsazpunch		;1
lsazsuper_punch	;4
	JJXM_INIT
	JJXM	NORMAL,			lsazpunch_clothesline		;0
	JJXM	RUNNING,		lsazpunch_clothesline		;1
	JJXM	INAIR,			lsazpunch_clothesline		;2
	JJXM	ATTACHED,		lsazpunch_clothesline		;3
	JJXM	ONGROUND,	176,176,lsazpunch_bellyflop,lsazpunch_lbowdrop ;4
	JJXM	BOUNCING,		lsazpunch_clothesline		;5	
	JJXM	ONTURNBKL,		lsazpunch_clothesline		;6
	JJXM	BLOCK,			lsazpunch_clothesline		;7
	JJXM	DIZZY,			lsazpunch_clothesline		;8
	JJXM	DEAD,		176,176,lsazpunch_bellyflop,lsazpunch_lbowdrop ;9
	JJXM	OPPOVERHEAD,		lsazpunch_clothesline		;10
	JJXM	CLIMBTURNBKL,		lsazpunch_clothesline		;11
	JJXM	WAITANIM,	 	lsazpunch_clothesline		;12
	JJXM	GRAPPLE,	 	lsazpunch_clothesline		;13
	JJXM	MASTER,		 	lsazpunch_clothesline		;14
	JJXM	SLAVE, 		 	lsazpunch_clothesline		;15
	JJXM	HEADHOLD,	 	lsazpunch_clothesline		;16
	JJXM	HEADHELD,	 	lsazpunch_clothesline		;19
	JJXM	PUPPET,		 	lsazpunch_clothesline		;20
	JJXM	INAIR2,			lsazpunch_clothesline		;21
	JJXM_END


lsazpunch_clothesline

	move	*a13(MOVE_DIR),a1
	btst	MOVE_LEFT_BIT,a1
	jrnz	lsazlft
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID+70h,a0
	jrlt	lsazok


	rets

lsazlft

	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID-70h,a0
	jrgt	lsazok


	rets
lsazok
	move	*a13(MOVE_DIR),a1
	move	*a13(NEW_FACING_DIR),a0	;Current facing dir (9,10,6,5 only)
	sll	5,a0
	addi	lsazmv_tbl,a0
	move	*a0,a0,L
	btst	a0,a1
	jrz	lsazyes


	rets
lsazyes

	movi	dnk_fly_cline_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	WRSND	W_DOINK,FLYKICK_T1,FLYKICK_T2

	rets

lsazmv_tbl	.long	0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
	.long	0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT

lsazpunch_lbowdrop
lsazpunch_bellyflop

	movi	dnk_belly_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	WRSND	W_DOINK,FLYKICK_T1,FLYKICK_T2

	rets


lsazblock		;2
	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block

lsazgraboh
lsazkick		;8
lsazsuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,			lsazkick_flyingkick		;0
	JJXM	RUNNING,		lsazkick_flyingkick		;1
	JJXM	INAIR,			lsazkick_flyingkick		;2
	JJXM	ATTACHED,		lsazkick_flyingkick		;3
	JJXM	ONGROUND,	176,176,lsazkick_runstomp,lsazkick_runstomp	;4
	JJXM	BOUNCING,		lsazkick_flyingkick		;5
	JJXM	ONTURNBKL,		lsazkick_flyingkick		;6
	JJXM	BLOCK,			lsazkick_flyingkick		;7
	JJXM	DIZZY,			lsazkick_flyingkick		;8
	JJXM	DEAD,		176,176,lsazkick_runstomp,lsazkick_runstomp	;9
	JJXM	OPPOVERHEAD,		lsazkick_flyingkick		;10
	JJXM	CLIMBTURNBKL,		lsazkick_flyingkick		;11
	JJXM	WAITANIM,	 	lsazkick_flyingkick		;12
	JJXM	GRAPPLE,	 	lsazkick_flyingkick		;13
	JJXM	MASTER,		 	lsazkick_flyingkick		;14
	JJXM	SLAVE, 		 	lsazkick_flyingkick		;15
	JJXM	HEADHOLD,	 	lsazkick_flyingkick		;16
	JJXM	HEADHELD,	 	lsazkick_flyingkick		;19
	JJXM	PUPPET,		 	lsazkick_flyingkick		;20
	JJXM	INAIR2,			lsazkick_flyingkick		;21
	JJXM_END

lsazkick_flyingkick

	calla	ck_ignore
	jrc	lsazz


	movi	dnk_flying_kick_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_DOINK,FLYKICK_T1,FLYKICK_T2

	rets

lsazkick_runstomp
	movi	dnk_belly_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	WRSND	W_DOINK,FLYKICK_T1,FLYKICK_T2

	rets



mode_inair	;2

	rets


mode_attached	;3

	calla	keep_attached
	jrnz	pwucstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

pwucstill_attached

	rets


mode_onground	;4

	rets



mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	sldvnot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	dnk_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING


sldvnot_ended
	rets


mode_onturnbkl	;6


	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	hykuno_climbdown

	;this is so an attack isn't turned into a climbdown
	; in those 5-10 ticks before MODE_INAIR2 is set...
	move	*a13(ANIBASE),a14,L
	cmpi	dnk_climb_up_anim,a14
	jrne	hykuno_climbdown

	movi	dnk_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

hykuno_interrupt
	rets

hykuno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	hykuz

	X32	a0
	addi	hykuaction_table,a0
	move	*a0,a0,L
	call	a0

	MOVE	*A13(PLYRNUM),A5
	movi	JUMP_ROPES,a2
	MOVI	1000,A0
	calla	ADD_IF_SILENT
	movi	IDIOT_COUNT,a2
	move	a2,*a13(JUMPIN_COUNT)
	rets



hykuaction_table
	.long	hykuz					;0
	.long	hykupunch					;1
	.long	hykublock					;2
	.long	hykuz					;3
	.long	hykusuper_punch				;4
	.long	hykusuper_punch,hykuz,hykuz			;5-7
	.long	hykukick					;8
	.long	hykupunchkick,hykuz,hykuz,hykukick,hykuz,hykuz,hykuz		;9-15
	.long	hykusuper_kick				;16
	.long	hykuz,hykuz,hykuz,hykugraboh,hykuz,hykuz,hykuz		;17-23
	.long	hykukick,hykuz,hykuz,hykuz,hykuz,hykuz,hykuz,hykuz		;24-31

hykuz
	rets

hykupunch		;1
hykupunchkick	;1
hykublock		;2

	movi	dnk_4_blbowdrop_anim,a0		;Buckle
	calla	change_anim1a
	rets



hykusuper_punch	;4


hykugraboh		;1

     	movi	dnk_diveofftb_anim,a0
	calla	change_anim1a
	rets

hykukick		;8
hykusuper_kick	;16

	movi	dnk_4_bstomp_anim,a0		;Buckle
	calla	change_anim1a
	rets


mode_block	;7

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	fjkgno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	fjkgset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	fjkgaction_table,a0
	move	*a0,a0,L
	call	a0

fjkgno_interrupt
	rets

fjkgset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

fjkgaction_table
	.long	fjkgz,fjkgpunchblock,fjkgz	;0-2
	.long	fjkgpunchblock		;3
	.long	fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz	;4-10
	.long	fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz	;11-17
	.long	fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz	;18-24
	.long	fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz,fjkgz	;25-31

fjkgz
	rets

fjkgpunchblock	;3


	SETMODE	NORMAL

	FACE24  dnk,push_anim
	calla	change_anim1a

	WRSND	W_DOINK,PUSH_T1,PUSH_T2

	rets


mode_dizzy	;8

	move	*a13(GETUP_TIME),a0
	jrnz	rnlsstill_going

	calla	clear_damage_log

	clr	a0
	move	a0,*a13(STARS_FLAG)

	SETMODE	NORMAL

rnlsstill_going
	rets

mode_dead	;9

	rets


mode_oppoverhead ;10

	rets


mode_climbturnbkl	;11

	rets



mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	bdtenot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

bdtenot_ended
	rets



mode_grapple	;13

	rets


mode_master	;14

	.ref	master_keep_attached
	calla	master_keep_attached	;keep slave attached to me

	rets


mode_slave	;15
	rets


mode_headhold	;16

	move	*a13(ATTACH_PROC),a10,L
	jrz	thvaexit

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	thvano_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	thvaaction_table,a0
	move	*a0,a0,L
	call	a0

thvano_interrupt
	rets

thvaexit
	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	thvaright
	movk	MOVE_DOWN_LEFT,a1
thvaright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

thvaaction_table
	.long	thvaz					;0
	.long	thvapunch					;1
	.long	thvablock					;2
	.long	thvaz					;3
	.long	thvasuper_punch				;4
	.long	thvasuper_punch,thvaz,thvaz			;5-7
	.long	thvakick					;8
	.long	thvapunchkick,thvaz,thvaz,thvakick,thvaz,thvaz,thvaz		;9-15
	.long	thvasuper_kick				;16
	.long	thvaz,thvaz,thvaz,thvagraboh,thvaz,thvaz,thvaz		;17-23
	.long	thvakick,thvaz,thvaz,thvaz,thvaz,thvaz,thvaz,thvaz		;24-31


thvablock
thvaz		;0
	rets


thvapunch		;1
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	thvatag
	movi	dnk_uppercuts_to_head_anim,a0
	calla	change_anim1a
	rets

thvatag	movi	dnk_uppercut_to_head_anim,a0
	calla	change_anim1a
	rets

thvasuper_punch	;4

do_pile
	move	*a13(USR_VAR2),a0
	jrz	thvaz

	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	thvapunch

	movi	dnk_3_pile_driver_anim,a0
	calla	change_anim1a
	rets

thvapunchkick
thvagraboh
thvakick
	CALLA	FIND_AND_KILL_ENDLESS
	movi	dnk_3_knee_to_head_anim,a0
	calla	change_anim1a
	rets

thvasuper_kick	;16
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	thvaz

	CALLA	FIND_AND_KILL_ENDLESS
	movi	dnk_3_knees_to_head_anim,a0
	calla	change_anim1a
	rets



mode_headheld	;19

	move	*a13(ATTACH_PROC),a0,L
	jrnz	jygano_luck

	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	jygano_luck


	.ref	dnk_3_head_held_stand_anim
	movi	dnk_3_head_held_stand_anim,a0
	calla	change_anim1a

jygano_luck
	rets

mode_puppet	;20
	rets

mode_chokehold	;24
	rets

 SUBR	mode_inair2	;21


cmtpZDRIFT2_VAL	equ	58000h
cmtpXDRIFT_VAL	equ	30000h

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-cmtpZDRIFT2_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	cmtpsetvel

	movi	cmtpZDRIFT2_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	cmtpsetvel

	clr	a1
cmtpsetvel

	move	*a13(OBJ_ZPOS),a14,L
	add	a1,a14
	move	a14,*a13(OBJ_ZPOS),L


	clr	a1

	movi	-cmtpXDRIFT_VAL,a1
	btst	PLAYER_LEFT_BIT,a0
	jrnz	cmtpsetvel2

	movi	cmtpXDRIFT_VAL,a1
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	cmtpsetvel2

	clr	a1
cmtpsetvel2

	move	*a13(OBJ_XPOS),a14,L
	add	a1,a14
	move	a14,*a13(OBJ_XPOS),L

	rets



ljswVEL	equ	30000h		;38000h	;30000h
ljswDVEL	equ	21f0eh		;27978h	;21f0eh


 SUBR dnk_velocity_table


	.long	0,	-ljswVEL	;0 UP

	.long	ljswDVEL,	-ljswDVEL	;1 UP-RIGHT

	.long	ljswVEL,	0	;2 RIGHT

	.long	ljswDVEL,	ljswDVEL	;3 DOWN-RIGHT

	.long	0,	ljswVEL	;4 DOWN

	.long	-ljswDVEL,	ljswDVEL	;5 DOWN-LEFT

	.long	-ljswVEL,	0	;6 LEFT

	.long	-ljswDVEL,	-ljswDVEL	;7 UP-LEFT



 SUBR dnk_rotate_anims_table
	.long	dnk_stand2_anim		;new = up right
	.long	dnk_2_to_4_turn_anim	;    = down right
	.long	dnk_2_to_6_turn_anim	;    = down left ***
	.long	dnk_2_to_8_turn_anim	;    = up left

	.long	dnk_4_to_2_turn_anim	;new = up right
	.long	dnk_stand4_anim		;    = down right
	.long	dnk_4_to_6_turn_anim	;    = down left
	.long	dnk_4_to_8_turn_anim	;    = up left ***

	.long	dnk_6_to_2_turn_anim	;new = up right ***
	.long	dnk_6_to_4_turn_anim	;    = down right
	.long	dnk_stand6_anim		;    = down left
	.long	dnk_6_to_8_turn_anim	;    = up left

	.long	dnk_8_to_2_turn_anim	;new = up right
	.long	dnk_8_to_4_turn_anim	;    = down right ***
	.long	dnk_8_to_6_turn_anim	;    = down left
	.long	dnk_stand8_anim		;    = up left


 SUBR dnk_leg_anims_table
	.long	dnk_walk1_f2_anim	;1 (UP)
	.long	dnk_walk1_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk1_f4_anim	;3 (RIGHT)
	.long	dnk_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk1_f4_anim	;5 (DOWN)
	.long	dnk_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk1_f2_anim	;7 (LEFT)
	.long	dnk_walk1_f2_anim	;8 (UP-LEFT)

	.long	dnk_walk2_f2_anim	;1 (UP)
	.long	dnk_walk2_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk2_f2_anim	;3 (RIGHT)
	.long	dnk_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk8_f4_anim	;5 (DOWN)
	.long	dnk_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk4_f2_anim	;7 (LEFT)
	.long	dnk_walk4_f2_anim	;8 (UP-LEFT)

	.long	dnk_walk2_f2_anim	;1 (UP)
	.long	dnk_walk2_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk2_f2_anim	;3 (RIGHT)
	.long	dnk_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk4_f4_anim	;5 (DOWN)
	.long	dnk_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk6_f2_anim	;7 (LEFT)
	.long	dnk_walk6_f2_anim	;8 (UP-LEFT)


	.long	dnk_walk2_f2_anim	;1 (UP)
	.long	dnk_walk8_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk4_f4_anim	;3 (RIGHT)
	.long	dnk_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk2_f4_anim	;5 (DOWN)
	.long	dnk_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk2_f2_anim	;7 (LEFT)
	.long	dnk_walk6_f2_anim	;8 (UP-LEFT)

	.long	dnk_walk5_f2_anim	;1 (UP)
	.long	dnk_walk5_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk5_f4_anim	;3 (RIGHT)
	.long	dnk_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk5_f4_anim	;5 (DOWN)
	.long	dnk_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk5_f2_anim	;7 (LEFT)
	.long	dnk_walk5_f2_anim	;8 (UP-LEFT)

	.long	dnk_walk2_f2_anim	;1 (UP)
	.long	dnk_walk6_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk2_f2_anim	;3 (RIGHT)
	.long	dnk_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk2_f4_anim	;5 (DOWN)
	.long	dnk_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk2_f2_anim	;7 (LEFT)
	.long	dnk_walk8_f2_anim	;8 (UP-LEFT)

	.long	dnk_walk2_f2_anim	;1 (UP)
	.long	dnk_walk6_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk6_f2_anim	;3 (RIGHT)
	.long	dnk_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk4_f4_anim	;5 (DOWN)
	.long	dnk_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk2_f2_anim	;7 (LEFT)
	.long	dnk_walk2_f2_anim	;8 (UP-LEFT)

	.long	dnk_walk2_f2_anim	;1 (UP)
	.long	dnk_walk4_f2_anim	;2 (UP_RIGHT)
	.long	dnk_walk6_f2_anim	;3 (RIGHT)
	.long	dnk_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	dnk_walk6_f4_anim	;5 (DOWN)
	.long	dnk_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	dnk_walk2_f2_anim	;7 (LEFT)
	.long	dnk_walk2_f2_anim	;8 (UP-LEFT)


 SUBR dnk_torso_anims_table
	.long	dnk_torso2_anim		;new = up right
	.long	dnk_2_to_4_turn2_anim	;    = down right
	.long	dnk_2_to_6_turn2_anim	;    = down left ***
	.long	dnk_2_to_8_turn2_anim	;    = up left

	.long	dnk_4_to_2_turn2_anim	;new = up right
	.long	dnk_torso4_anim		;    = down right
	.long	dnk_4_to_6_turn2_anim	;    = down left
	.long	dnk_4_to_8_turn2_anim	;    = up left ***

	.long	dnk_6_to_2_turn2_anim	;new = up right ***
	.long	dnk_6_to_4_turn2_anim	;    = down right
	.long	dnk_torso6_anim		;    = down left
	.long	dnk_6_to_8_turn2_anim	;    = up left

	.long	dnk_8_to_2_turn2_anim	;new = up right
	.long	dnk_8_to_4_turn2_anim	;    = down right ***
	.long	dnk_8_to_6_turn2_anim	;    = down left
	.long	dnk_torso8_anim		;    = up left



	.end

