
	.file	"lex.asm"
	.title	"Lex Luger specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"



	.ref	change_anim1a,change_anim2a,master_keep_attached
	.ref	do_taunt,CLIMB_ROPES,bounce_off_ropes,mode_inair2
	.ref	check_secret_moves,mode_choking,DO_REVERSAL_MESS
	.ref	ck_ignore,climb_turnbuckle,execute_walk,PCNT
	.ref	get_opp_plyrmode,ADD_IF_SILENT,DO_REVERSAL,mode_puppet
	.ref	process_ptrs,keep_attached,change_anim1,JUMP_ROPES
	.ref	FIND_AND_KILL_ENDLESS,BONUS_MESS
	.ref	CHECK_COMBO_GO,ck_teammate_pin,raisearm_check
	.ref	BLOCK_WOOSH,drone_change_back,mode_dead,get_opp_process
	.ref	lex_combo_punch_anim,can_pin,round_award
	.ref	lex_combo_kick_anim,set_raisearm_bit
	.ref	blocking_off,std_taunt,std_walk_fast
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_LEX_FINISHES
	.ref	lex_finish1_move
	.if NUM_LEX_FINISHES > 1
	.ref	lex_finish2_move
	.endif
	.endif


	.ref	start_run_anim

	.ref	lex_4_block_anim

	.ref	lex_stand2_anim,lex_stand8_anim
	.ref	lex_stand4_anim,lex_stand6_anim
	.ref	lex_torso2_anim,lex_torso8_anim
	.ref	lex_torso4_anim,lex_torso6_anim

	.ref	lex_2_to_4_turn_anim,lex_8_to_6_turn_anim	;stand
	.ref	lex_4_to_2_turn_anim,lex_6_to_8_turn_anim
	.ref	lex_4_to_6_turn_anim,lex_6_to_4_turn_anim
	.ref	lex_2_to_8_turn_anim,lex_8_to_2_turn_anim
	.ref	lex_4_to_8_turn_anim,lex_6_to_2_turn_anim
	.ref	lex_2_to_6_turn_anim,lex_8_to_4_turn_anim

	.ref	lex_2_to_4_turn2_anim,lex_8_to_6_turn2_anim	;torso
	.ref	lex_4_to_2_turn2_anim,lex_6_to_8_turn2_anim
	.ref	lex_4_to_6_turn2_anim,lex_6_to_4_turn2_anim
	.ref	lex_2_to_8_turn2_anim,lex_8_to_2_turn2_anim
	.ref	lex_4_to_8_turn2_anim,lex_6_to_2_turn2_anim
	.ref	lex_2_to_6_turn2_anim,lex_8_to_4_turn2_anim

	.ref	lex_walk1_f2_anim,lex_walk2_f2_anim,lex_walk4_f2_anim
	.ref	lex_walk5_f2_anim,lex_walk6_f2_anim,lex_walk8_f2_anim

	.ref	lex_walk1_f4_anim,lex_walk2_f4_anim,lex_walk4_f4_anim
	.ref	lex_walk5_f4_anim,lex_walk6_f4_anim,lex_walk8_f4_anim

	.ref	lex_run2_anim,lex_hiptoss2_anim

	.ref	lex_2_punch_anim,lex_4_punch_anim
	.ref	lex_2_kick_anim,lex_4_kick_anim

	.ref	lex_2_butt_anim,lex_4_butt_anim
	.ref	lex_4_knee_anim
	.ref	lex_2_stomp_anim,lex_4_stomp_anim

	.ref	lex_2_raise_arm_anim,lex_4_raise_arm_anim

	.ref	lex_3_clobber_anim

	.ref	lex_4_push_anim

	.ref	lex_4_grabfling_anim

	.ref	lex_fall_back_anim

	.ref	lex_flying_kick_anim

	.ref	lex_2_ground_punch_anim,lex_4_ground_punch_anim
	.ref	lex_flying_ground_punch_anim,lex_climb_down_anim
	.ref	lex_buckle_leap_anim,lex_climb_up_anim
	.ref	lex_backbreaker_anim,lex_ohslam_anim

	.ref	lex_3_head_held_stand_anim,lex_2_hair_pickup_anim
	.ref	lex_3_knee_to_head_anim
	.ref	lex_4_hair_pickup_anim,lex_2_grabfling_anim
	.ref	lex_3_head_hold2_anim
	.ref	lex_3_head_hold_anim

	.ref	lex_vsuplex_anim,lex_super_kick_anim
	.ref	lex_4_knee_fall_anim,lex_4_graboh_anim
	.ref	lex_hiptoss_anim,lex_4_bigboot_anim
	.ref	lex_slamdown_anim

	.ref	lex_2_pin_anim,lex_4_pin_anim
	.ref	lex_2_clobber_anim,lex_4_clobber_anim

	.ref	lex_sliding_elbow_anim
	.ref	lex_knees_to_head_anim
	.ref	lex_grab2elbow_anim




lex_secret_moves
	.long	nhcpcharge_clobber
	.long	nhcpneck_grab
	.long	nhcpgrab_fling
	.long	nhcphip_toss
	.long	nhcpgrab_fling2
	.long	nhcphip_toss2
	.long	nhcpsliding_elbow
	.long	nhcphammer
	.long	0


 SUBR	lex_smove_table
	.long	lex_hdhold_pile
	.long	lex_hdhold_elbow_face
	.long	lex_hdhold_graboh
	.long	lex_grab_toss_air
	.long	lex_hdhold_combo1
	.long	lex_hdhold_combo2
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_LEX_FINISHES
	.long	lex_finish_move1
	.endif
	.if NUM_LEX_FINISHES > 1
	.long	lex_finish_move2
	.endif
	.long	0

nhcpcharge_clobber
	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	nhcpno_punch


	move	*a13(PLYRNUM),a0
	.ref	get_punch_dtime
	calla	get_punch_dtime
	cmpi	100,a0			;> min?
	jrlt	nhcpno_punch

	callr	nhcpscrt_clbr
	setc
	rets

nhcpno_punch
	clrc
	rets


nhcpscrt_clbr

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	nhcpout
	cmpi	MODE_HEADHOLD,a0
	jrz	nhcpout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout


	WRSND	W_LUGER,HDBUTT_T1,HDBUTT_T2
	FACE24	lex,clobber_anim
	calla	change_anim1

	rets

nhcphammer
	.word	B_SKICK,			J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32 		;max
	.long	scrt_hammer

scrt_hammer
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	nhcpout
	cmpi	MODE_OPPOVERHEAD,a0
	jreq	nhcpout

	.ref	lex_hammer_anim
	movi	lex_hammer_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,HIPTOSS_T1,PUNCH_T2

	rets

nhcpneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 30		;max
	.long	nhcpscrt_neck

nhcpscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	nhcpout
	cmpi	MODE_DEAD,a0
	jrz	nhcpout
	cmpi	MODE_HEADHELD,a0
	jrz	nhcpout
	cmpi	MODE_ATTACHED,a0
	jrz	nhcpout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	nhcpok2

	.ref	lex_3_fake_hold_anim
	movi	lex_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

nhcpok2
	move	*a13(CLOSEST_XDIST),a1
	cmpi	90,a1
	jrgt	nhcpstd_grab

	movi	lex_3_head_hold2_anim,a0
	calla	change_anim1a
nhcpout	rets

nhcpstd_grab
	movi	lex_3_head_hold_anim,a0
	calla	change_anim1a
	rets


nhcpgrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	nhcpscrt_grabfling2

nhcphip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	nhcpscrt_grabfling2

nhcpscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	nhcpyes
	cmpi	MODE_RUNNING,a0
	jrz	nhcpyes
	rets

nhcpgrab_fling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	nhcpscrt_grabfling

nhcpscrt_grabfling


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	nhcpyes
	cmpi	MODE_RUNNING,a0
	jrnz	nhcpnope
nhcpyes
	movi	lex_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,HIPTOSS_T1,PUNCH_T2
	rets

nhcpnope
	calla	get_opp_plyrmode
	cmpi	MODE_HEADHELD,a0
	jrz	nhcpout
	cmpi	MODE_ONGROUND,a0
	jrz	nhcpout
	cmpi	MODE_DEAD,a0
	jrz	nhcpout
	cmpi	MODE_ATTACHED,a0
	jrz	nhcpout


	FACE24	lex,grabfling_anim
	calla	change_anim1a

	WRSND	W_LUGER,GRABFLING_T1,PUNCH_T2
	rets

nhcphip_toss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	nhcpscrt_hiptoss

nhcpscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	nhcpout
	cmpi	MODE_DEAD,a0
	jrz	nhcpout
	cmpi	MODE_HEADHELD,a0
	jrz	nhcpout
	cmpi	MODE_INAIR,a0
	jrz	nhcpdoit
	cmpi	MODE_INAIR2,a0
	jrz	nhcpdoit
	cmpi	MODE_ATTACHED,a0
	jrz	nhcpout

	move	*a13(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	nhcpout

nhcpdoit
 	movi	lex_hiptoss_anim,a0
	calla	change_anim1a

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	WRSND	W_LUGER,GRABFLING_T1,PUNCH_T2

	rets

nhcpsliding_elbow
	.word	B_PUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 30		;max
	.long	nhcpscrt_elbow

nhcpscrt_elbow
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nhcpout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_OPPOVERHEAD,a0
	jreq	nhcpout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	nhcpout
	cmpi	MODE_DEAD,a0
	jrz	nhcpout

	;we can do this from a headhold, so...
	calla	FIND_AND_KILL_ENDLESS

 	movi	lex_sliding_elbow_anim,a0
	calla	change_anim1a

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	WRSND	W_LUGER,UPRCUT_T1,UPRCUT_T2

	rets

	.if NUM_LEX_FINISHES
 SUBRP	lex_finish_move1

wpzzTIMEOUT	.equ	TSEC

wpzzend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		wpzzend_wait			; br = no

wpzzreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,wpzzreset
	movi		wpzzTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,wpzzreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,wpzzreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,wpzzreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,wpzzreset

	movi		lex_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_LEX_FINISHES > 1
 SUBRP	lex_finish_move2

cradTIMEOUT	.equ	TSEC

cradend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		cradend_wait			; br = no

cradreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,cradreset
	movi		cradTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,cradreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,cradreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,cradreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,cradreset

	movi		lex_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif


 SUBRP	lex_hdhold_pile

gddcTIMEOUT	.equ	60

gddclp0
	SLEEPK	1
gddclp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	gddccont
	cmpi	MODE_HEADHELD,a0
	jrnz	gddclp0

gddccont
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,gddclp

	movi	gddcTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,gddclp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,gddclp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	gddcslam
	cmpi	MODE_HEADHELD,a0
	jrnz	gddclp0
	move	*a8(I_WILL_DIE),A14
	jrnz	gddclp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	gddclp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	gddcis_reversal

gddcslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	gddclp0				;ignore

	movi	42,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

gddcis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	lex_vsuplex_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2

	SLEEPK	20

	jruc	gddclp

 SUBRP	lex_hdhold_elbow_face

fillTIMEOUT	.equ	60

filllp0
	SLEEPK	1
filllp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	fillcont
	cmpi	MODE_HEADHELD,a0
	jrnz	filllp0

fillcont
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,filllp

	movi	fillTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,filllp
	WAITSWITCH_DWN	B_SKICK,J_ALL,filllp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	fillslam
	cmpi	MODE_HEADHELD,a0
	jrnz	filllp0
	move	*a8(I_WILL_DIE),A14
	jrnz	filllp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	filllp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L

	.ref	lex_grab2elbow_rev_anim

	movi	lex_grab2elbow_rev_anim,a1
	jruc	fillis_reversal

fillslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	filllp0				;ignore

	movk	6,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L


	movi	lex_grab2elbow_anim,a1
fillis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	move	a1,*a8(SPECIAL_MOVE_ADDR),L
	CALLA	FIND_AND_KILL_ENDLESS

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2

	SLEEPK	20
	jruc	filllp

lex_grab_toss_air

usnbTIMEOUT	.equ	40

usnblp0
	SLEEPK	1
usnblp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,usnblp

	movi	usnbTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,usnblp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,usnblp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	usnblp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	usnblp0

	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
	cmpi	MODE_ONGROUND,a0
	jrz	usnblp
	cmpi	MODE_DEAD,a0
	jrz	usnblp
	cmpi	MODE_INAIR,a0
	jrz	usnbdoit2
	cmpi	MODE_INAIR2,a0
	jrz	usnbdoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	usnbdoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	6ch,a0
	jrgt	usnblp

	movi	lex_hiptoss_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_LUGER,GRABFLING_T1,PUNCH_T2

	SLEEPK	20
	jruc	usnblp

usnbdoit2
	movi	lex_hiptoss2_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_LUGER,GRABFLING_T1,PUNCH_T2

	SLEEPK	20

	jruc	usnblp

lex_hdhold_graboh

lbzqTIMEOUT	.equ	60

lbzqlp0
	SLEEPK	1
lbzqlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lbzqcont0
	cmpi	MODE_HEADHELD,a0
	jrnz	lbzqlp0
lbzqcont0
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,lbzqlp

	movi	lbzqTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,lbzqlp
	WAITSWITCH_DWN	B_KICK,J_ALL,lbzqlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lbzqdograb
	cmpi	MODE_HEADHELD,a0
	jrnz	lbzqlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	lbzqlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lbzqlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	lbzqis_reversal

lbzqdograb
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lbzqlp0				;ignore


	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

lbzqis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	lex_4_graboh_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_LUGER,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	lbzqlp

lex_hdhold_combo1

bfujTIMEOUT	.equ	60

bfujlp0
	SLEEPK	1
bfujlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	bfujlp0
	calla	CHECK_COMBO_GO
	jrlt	bfujlp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,bfujlp

	movi	bfujTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,bfujlp
	WAITSWITCH_DWN	B_SKICK,J_ALL,bfujlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	bfujslam
	cmpi	MODE_HEADHELD,a0
	jrnz	bfujlp0

bfujslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	bfujlp0				;ignore


	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_combo_punch_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_LUGER,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	bfujlp

lex_hdhold_combo2

duitTIMEOUT	.equ	60

duitlp0
	SLEEPK	1
duitlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	duitlp0
	calla	CHECK_COMBO_GO
	jrlt	duitlp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,duitlp

	movi	duitTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,duitlp
	WAITSWITCH_DWN	B_KICK,J_ALL,duitlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	duitslam
	cmpi	MODE_HEADHELD,a0
	jrnz	duitlp0

duitslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	duitlp0				;ignore


	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_combo_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_LUGER,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	duitlp


 SUBR	lex_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	rjaop1
	movi	lex_stand4_anim,a0
	calla	change_anim1a

	movi	lex_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

rjaop1
	movi	lex_stand2_anim,a0
	calla	change_anim1a

	movi	lex_torso2_anim,a0
	calla	change_anim2a

	rets



 SUBR	move_lex



	movi	lex_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	qpblmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

qpblmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal		;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal		;22
	.long	mode_normal		;23
	.long	mode_chokehold		;24
	.long	mode_choking		;25


mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tgcmno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	tgcmnope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	tgcmnope
	movi	lex_fall_back_anim,a0
	calla	change_anim1a

	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

tgcmnope

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	tgcmopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	tgcmopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	tgcmno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	tgcmno_pin_yet
tgcmno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	tgcmraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	tgcmraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	tgcmno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	tgcmopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	lex,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

tgcmraisearm
	FACE24	lex,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

tgcmtoo_far_to_pin
tgcmopp_notgnd
tgcmopp_not_dead
tgcmno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	tgcmimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	tgcmnblk			;1 for down transitions
	callr	tgcmblock			;& 1 for current buttons
	jrc	tgcmnblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
tgcmnblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	tgcmpunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	tgcmaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tgcmno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	tgcmno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

tgcmimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
tgcmno_climb
	calla	execute_walk

tgcmno_interrupt
	rets

tgcmaction_table
	.long	tgcmz,tgcmpunch,tgcmblock,tgcmblock			;0-3
	.long	tgcmsuper_punch,tgcmsuper_punch,tgcmblock,tgcmblock	;4-7
	.long	tgcmkick,tgcmpunchkick,tgcmblock,tgcmblock		;8-11
	.long	tgcmsuper_punch,tgcmpunchkick,tgcmblock,tgcmblock	;12-15
	.long	tgcmsuper_kick,tgcmsuper_kick,tgcmblock,tgcmblock	;16-19
	.long	tgcmgraboh,tgcmgraboh,tgcmblock,tgcmblock		;20-23
	.long	tgcmsuper_kick,tgcmpunchkick,tgcmblock,tgcmblock	;24-27
	.long	tgcmgraboh,tgcmgraboh,tgcmblock,tgcmblock		;28-31

tgcmz
	rets


tgcmpunch		;1

	JJXM_INIT
	JJXM	NORMAL,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;0
	JJXM	RUNNING,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;1
	JJXM	INAIR,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;2
	JJXM	ATTACHED,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;3
	JJXM	ONGROUND,	160,140,tgcmpunch_lbowdrop,tgcmpunch_punch	;4
	JJXM	BOUNCING,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;1
	JJXM	ONTURNBKL,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;6
	JJXM	BLOCK,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;7
	JJXM	DIZZY,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;8
	JJXM	DEAD,		160,140,tgcmpunch_lbowdrop,tgcmpunch_punch	;9
	JJXM	OPPOVERHEAD,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;10
	JJXM	CLIMBTURNBKL,		tgcmpunch_punch			;11
	JJXM	WAITANIM,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;12
	JJXM	GRAPPLE,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;13
	JJXM	MASTER,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;14
	JJXM	SLAVE, 		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;15
	JJXM	HEADHOLD,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;16
	JJXM	HEADHELD,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;19
	JJXM	CHOKEHOLD,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;16
	JJXM	PUPPET,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;20
	JJXM	PUPPET2,	 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;20
	JJXM	INAIR2,		 40, 45,tgcmpunch_hdbutt,tgcmpunch_punch	;21
	JJXM_END

tgcmpunch_punch
std_punch
	FACE24	lex,punch_anim
	calla	change_anim1a
	WRSND	W_LUGER,PUNCH_T1,PUNCH_T2
	rets

tgcmpunch_hdbutt
	FACE24	lex,butt_anim
	calla	change_anim1a
	WRSND	W_LUGER,HDBUTT_T1,HDBUTT_T2
	rets

tgcmpunch_lbowdrop
	FACE24	lex,ground_punch_anim
	calla	change_anim1a
	WRSND	W_LUGER,LBOWDROP_T1,LBOWDROP_T2
	rets


tgcmblock		;2
std_block
	move	@blocking_off,a0
	jrnz	tgcmno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	lex_4_block_anim,a0
	calla	change_anim1

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

tgcmno_blocking
	setc
	rets


tgcmsuper_punch	;4
	JJXM_INIT
	JJXM	NORMAL,		 70, 45,tgcmspunch_special,tgcmspunch_slap	;0
	JJXM	RUNNING,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;1
	JJXM	INAIR,		 40, 45,tgcmspunch_special,tgcmspunch_slap	;2
	JJXM	ATTACHED,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;3
	JJXM	ONGROUND,	160,140,tgcmspunch_lbowdrop,std_punch	;4
	JJXM	BOUNCING,	110, 45,tgcmspunch_special,tgcmspunch_slap	;5
	JJXM	ONTURNBKL,	 	tgcmspunch_slap			;6
	JJXM	BLOCK,		 70, 45,tgcmspunch_special,tgcmspunch_slap	;7
	JJXM	DIZZY,		 40, 45,tgcmspunch_special,tgcmspunch_slap	;8
	JJXM	DEAD,		160,140,tgcmspunch_lbowdrop,std_punch	;9
	JJXM	OPPOVERHEAD,	110, 35,tgcmspunch_special,tgcmspunch_slap	;10
	JJXM	CLIMBTURNBKL,		std_punch			;11
	JJXM	WAITANIM,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;12
	JJXM	GRAPPLE,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;13
	JJXM	MASTER,		 40, 45,tgcmspunch_special,tgcmspunch_slap	;14
	JJXM	SLAVE, 		 40, 45,tgcmspunch_special,tgcmspunch_slap	;15
	JJXM	HEADHOLD,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;16
	JJXM	HEADHELD,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;19
	JJXM	CHOKEHOLD,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;16
	JJXM	PUPPET,		 40, 45,tgcmspunch_special,tgcmspunch_slap	;20
	JJXM	PUPPET2,	 40, 45,tgcmspunch_special,tgcmspunch_slap	;20
	JJXM	INAIR2,		 40, 45,tgcmspunch_special,tgcmspunch_slap	;21
	JJXM_END

tgcmspunch_rets
	rets

tgcmspunch_slap
	movi	lex_3_clobber_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,PUNCH_T1,PUNCH_T2
	rets

tgcmspunch_special

	move	*a13(CLOSEST_XDIST),a1
	cmpi	55,a1
	jrgt	std_punch

	.ref	lex_2_butts_anim
	.ref	lex_4_butts_anim

	FACE24	lex,butts_anim
	calla	change_anim1

	WRSND	W_LUGER,HDBUTT_T1,HDBUTT_T2

	rets

tgcmspunch_lbowdrop

	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	tgcmno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	tgcmno


	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	tgcmno


	FACE24	lex,hair_pickup_anim
	calla	change_anim1
	WRSND	W_LUGER,LBOWDROP_T1,LBOWDROP_T2
	rets

tgcmno
	FACE24	lex,ground_punch_anim
	calla	change_anim1
	WRSND	W_LUGER,LBOWDROP_T1,LBOWDROP_T2
	rets


tgcmkick		;8


	JJXM_INIT
	JJXM	NORMAL,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	BLOCK,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	DIZZY,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	ONGROUND,	160,140,tgcmkick_stomp,tgcmkick_kick
	JJXM	RUNNING, 	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	BOUNCING, 	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	ONTURNBKL,	 	tgcmkick_kick
	JJXM	CLIMBTURNBKL,	 	tgcmkick_kick
	JJXM	INAIR,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	ATTACHED,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	DEAD,		160,140,tgcmkick_stomp,tgcmkick_kick
	JJXM	OPPOVERHEAD,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	WAITANIM,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	GRAPPLE,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	MASTER,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	SLAVE,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	HEADHOLD,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	HEADHELD,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	CHOKEHOLD,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	PUPPET,		 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	PUPPET2,	 60, 50,tgcmkick_knee,tgcmkick_kick
	JJXM	INAIR2,		 	tgcmkick_TB
	JJXM_END

tgcmkick_TB

	.ref	lex_kick_TB_anim
	movi	lex_kick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,KICK_T1,KICK_T2
	rets
tgcmkick_kick
std_kick

	FACE24	lex,kick_anim
	calla	change_anim1a

	WRSND	W_LUGER,KICK_T1,KICK_T2
	rets

tgcmkick_knee
std_knee

	movi	lex_4_knee_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,KICK_T1,KICK_T2
	rets

tgcmkick_stomp
std_stomp

	FACE24	lex,stomp_anim
	calla	change_anim1a

	WRSND	W_LUGER,KICK_T1,KICK_T2

	rets



tgcmpunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets


tgcmsuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,		 60, 60,tgcmskick_special,tgcmskick_kick	;0
	JJXM	RUNNING,	 	tgcmskick_bigboot			;1
	JJXM	INAIR,		 60, 60,tgcmskick_special,tgcmskick_kick	;2
	JJXM	ATTACHED,	 60, 60,tgcmskick_special,tgcmskick_kick	;3
	JJXM	ONGROUND,	160,140,std_stomp,std_kick		;4
	JJXM	BOUNCING,	 	tgcmskick_bigboot			;5
	JJXM	ONTURNBKL,	 60, 96,tgcmskick_kick,std_kick		;6
	JJXM	BLOCK,		 60, 60,tgcmskick_special,tgcmskick_kick	;7
	JJXM	DIZZY,		 60, 60,tgcmskick_special,tgcmskick_kick	;8
	JJXM	DEAD,		160,140,std_stomp,std_kick		;9
	JJXM	OPPOVERHEAD,	 60, 60,tgcmskick_special,tgcmskick_kick	;10
	JJXM	CLIMBTURNBKL,	 60, 96,tgcmskick_kick,std_kick		;11
	JJXM	WAITANIM,	 60, 62,tgcmskick_special,tgcmskick_kick	;12
	JJXM	GRAPPLE,	 60, 62,tgcmskick_special,tgcmskick_kick	;13
	JJXM	MASTER,		 60, 62,tgcmskick_special,tgcmskick_kick	;14
	JJXM	SLAVE, 		 60, 62,tgcmskick_special,tgcmskick_kick	;15
	JJXM	HEADHOLD,	 60, 62,tgcmskick_special,tgcmskick_kick	;16
	JJXM	HEADHELD,	 	std_kick
	JJXM	CHOKEHOLD,	 60, 62,tgcmskick_special,tgcmskick_kick	;16
	JJXM	PUPPET,		 60, 62,tgcmskick_special,tgcmskick_kick	;20
	JJXM	PUPPET2,	 60, 62,tgcmskick_special,tgcmskick_kick	;20
	JJXM	INAIR2,		 	tgcmkick_TB
	JJXM_END

tgcmskick_kick
	movi	lex_super_kick_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2
	rets


tgcmskick_special
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrz	tgcmcont2

	movi	lex_4_knee_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,KICK_T1,KICK_T2

	rets

tgcmcont2
	movi	lex_4_knee_fall_anim,a0
	calla	change_anim1

	WRSND	W_LUGER,GRABHOLD_T1,GRABHOLD_T2
	rets

tgcmskick_bigboot	;we can probably get away with just a tgcm4 big boot

	movi	lex_4_bigboot_anim,a0		;*****
	calla	change_anim1a

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2

	rets

tgcmgraboh		;20

	movi	lex_4_graboh_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,GRABHOLD_T1,GRABHOLD_T2

	rets



dazkXRUN_VAL	equ	LEX_XRUN
dazkZDRIFT_VAL	equ	LEX_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	dazkno_vel

	calla	bounce_off_ropes

	movi	dazkXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	dazkpos
	neg	a0
dazkpos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

dazkno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	dazkout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	dazkno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	dazkcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

dazkcontinue_run
dazkno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-dazkZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	dazksetvel

	movi	dazkZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	dazksetvel

	clr	a1
dazksetvel
	move	a1,*a13(OBJ_ZVEL),L

	move	*a13(DELAY_BUTNS),a0
	jrnz	dazkout_of_control

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	dazkaction_table,a0
	move	*a0,a0,L
	call	a0
dazkout_of_control
	rets

dazkaction_table
	.long	dazkz,dazkpunch,dazkblock,dazkblock			;0-3
	.long	dazksuper_punch,dazksuper_punch,dazkblock,dazkblock	;4-7
	.long	dazkkick,dazkpunchkick,dazkblock,dazkblock		;8-11
	.long	dazksuper_punch,dazkpunchkick,dazkblock,dazkblock	;12-15
	.long	dazksuper_kick,dazksuper_kick,dazkblock,dazkblock	;16-19
	.long	dazkgraboh,dazkgraboh,dazkblock,dazkblock		;20-23
	.long	dazksuper_kick,dazkpunchkick,dazkblock,dazkblock	;24-27
	.long	dazkgraboh,dazkgraboh,dazkblock,dazkblock		;28-31

dazkz
	rets


dazkpunch		;1
dazksuper_punch	;4
dazkpunchkick
dazkgraboh
	JJXM_INIT
	JJXM	NORMAL,			dazkpunch_clothesline
	JJXM	BLOCK,			dazkpunch_clothesline
	JJXM	DIZZY,			dazkpunch_clothesline
	JJXM	ONGROUND,	176,176,dazkpunch_bellyflop,dazkpunch_rets
	JJXM	RUNNING,		dazkpunch_clothesline
	JJXM	BOUNCING,		dazkpunch_clothesline
	JJXM	ONTURNBKL,		dazkpunch_clothesline
	JJXM	CLIMBTURNBKL,		dazkpunch_clothesline
	JJXM	INAIR,			dazkpunch_clothesline
	JJXM	ATTACHED,		dazkpunch_clothesline
	JJXM	ONGROUND,	176,176,dazkpunch_bellyflop,dazkpunch_rets
	JJXM	OPPOVERHEAD,		dazkpunch_clothesline
	JJXM	WAITANIM,		dazkpunch_clothesline
	JJXM	GRAPPLE,		dazkpunch_clothesline
	JJXM	MASTER,			dazkpunch_clothesline
	JJXM	SLAVE,			dazkpunch_clothesline
	JJXM	HEADHOLD,		dazkpunch_clothesline
	JJXM	HEADHELD,		dazkpunch_clothesline
	JJXM	CHOKEHOLD,		dazkpunch_clothesline
	JJXM	PUPPET,			dazkpunch_clothesline
	JJXM	PUPPET2,		dazkpunch_clothesline
	JJXM	INAIR2,			dazkpunch_clothesline
	JJXM_END

dazkpunch_rets
	rets

dazkpunch_clothesline
	;HACK!!!
	jruc	dazkkick_flyingkick

	rets

dazkpunch_bellyflop
attack_bellyflop

	movi	lex_flying_ground_punch_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2
	rets


dazkblock		;2

	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block
	rets

dazkkick		;8
dazksuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,			dazkkick_flyingkick
	JJXM	BLOCK,			dazkkick_flyingkick
	JJXM	DIZZY,			dazkkick_flyingkick
	JJXM	ONGROUND,	176,176,attack_bellyflop,dazkkick_rets
	JJXM	RUNNING,		dazkkick_flyingkick
	JJXM	BOUNCING,		dazkkick_flyingkick
	JJXM	ONTURNBKL,		dazkkick_flyingkick
	JJXM	CLIMBTURNBKL,		dazkkick_flyingkick
	JJXM	INAIR,			dazkkick_flyingkick
	JJXM	ATTACHED,		dazkkick_flyingkick
	JJXM	DEAD,		176,176,attack_bellyflop,dazkkick_rets
	JJXM	OPPOVERHEAD,		dazkkick_flyingkick
	JJXM	WAITANIM,		dazkkick_flyingkick
	JJXM	GRAPPLE,		dazkkick_flyingkick
	JJXM	MASTER,			dazkkick_flyingkick
	JJXM	SLAVE,			dazkkick_flyingkick
	JJXM	HEADHOLD,		dazkkick_flyingkick
	JJXM	HEADHELD,		dazkkick_flyingkick
	JJXM	CHOKEHOLD,		dazkkick_flyingkick
	JJXM	PUPPET,			dazkkick_flyingkick
	JJXM	PUPPET2,		dazkkick_flyingkick
	JJXM	INAIR2,			dazkkick_flyingkick
	JJXM_END

dazkkick_rets
	rets

dazkkick_flyingkick

	calla	ck_ignore
	jrc	dazkz

	SETMODE	INAIR

	movi	lex_flying_kick_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2

	rets



mode_inair	;2

	rets


mode_attached	;3

	calla	keep_attached
	jrnz	drmhstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

drmhstill_attached
	rets


mode_onground	;4

	rets



mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	emrinot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	lex_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING


emrinot_ended
	rets


mode_onturnbkl	;6


	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	dptyno_climbdown

	movi	lex_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

dptyno_interrupt
	rets

dptyno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	dptyz

	X32	a0
	addi	dptyaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets



dptyaction_table
	.long	dptyz,dptypunch,dptyblock,dptyblock			;0-3
	.long	dptysuper_punch,dptysuper_punch,dptyblock,dptyblock	;4-7
	.long	dptykick,dptypunchkick,dptyblock,dptyblock		;8-11
	.long	dptysuper_punch,dptypunchkick,dptyblock,dptyblock	;12-15
	.long	dptysuper_kick,dptysuper_kick,dptyblock,dptyblock	;16-19
	.long	dptygraboh,dptygraboh,dptyblock,dptyblock		;20-23
	.long	dptysuper_kick,dptypunchkick,dptyblock,dptyblock	;24-27
	.long	dptygraboh,dptygraboh,dptyblock,dptyblock		;28-31


dptyz
dptyblock
	rets

dptypunch		;1
dptysuper_punch	;4
dptypunchkick	;5
dptykick		;8
dptysuper_kick	;16
dptygraboh		;20

	SETMODE	INAIR

	movi	lex_buckle_leap_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2
	rets


mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	hvwano

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	hvwano
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	hvwano
	cmpi	45,a0
	jrlt	hvwano
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	hvwapunchblock

hvwano
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	hvwano_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	hvwaset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	hvwaaction_table,a0
	move	*a0,a0,L
	call	a0

hvwano_interrupt
	rets

hvwaset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

hvwaaction_table
	.long	hvwaz,hvwapunchblock,hvwaz	;0-2
	.long	hvwapunchblock		;3
	.long	hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz	;4-10
	.long	hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz	;11-17
	.long	hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz	;18-24
	.long	hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz,hvwaz	;25-31

hvwaz
	rets

hvwapunchblock	;3


	SETMODE	NORMAL

	movi	lex_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,PUSH_T1,PUSH_T2

	rets



mode_dizzy	;8

	rets


mode_oppoverhead ;10

	move	*a13(ATTACH_PROC),a2,L		;proc attached to
	jrz	ajexnot_attached
	move	*a2(ATTACH_PROC),a0,L
	jrnz	ajexstill_attached

ajexnot_attached

	move	*a13(ANIMODE),a0		;* remove this????
	btst	MODE_UNINT_BIT,a0		;*
	jrnz	ajexno_interrupt			;*

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	CALLA	FIND_AND_KILL_ENDLESS
	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

	rets

ajexstill_attached
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ajexno_interrupt

	move	*a13(FACING_DIR),a0
	andni	MOVE_UP,a0
	ori	MOVE_DOWN,a0
	move	a0,*a13(FACING_DIR)
	move	a0,*a13(NEW_FACING_DIR)

	move	*a13(STICK_VAL_CUR),a0
	jrz	ajexstand

	move	a0,*a13(MOVE_DIR)
	calla	execute_walk

	.ref	lex_holdoh_anim
	movi	lex_holdoh_anim,a0
	.ref	change_anim2
	calla	change_anim2
 	jruc	ajexck_butns
ajexstand
	clr	a0
	move	a0,*a13(MOVE_DIR)
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	.ref	lex_stndholdoh_anim
	movi	lex_stndholdoh_anim,a0
	calla	change_anim1

ajexck_butns

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	ajexaction_table,a0
	move	*a0,a0,L
	call	a0

ajexno_interrupt
	rets

ajexaction_table
	.long	ajexz,ajexpunch,ajexblock,ajexblock			;0-3
	.long	ajexsuper_punch,ajexsuper_punch,ajexblock,ajexblock	;4-7
	.long	ajexkick,ajexpunchkick,ajexblock,ajexblock		;8-11
	.long	ajexsuper_punch,ajexpunchkick,ajexblock,ajexblock	;12-15
	.long	ajexsuper_kick,ajexsuper_kick,ajexblock,ajexblock	;16-19
	.long	ajexgraboh,ajexgraboh,ajexblock,ajexblock		;20-23
	.long	ajexsuper_kick,ajexpunchkick,ajexblock,ajexblock	;24-27
	.long	ajexgraboh,ajexgraboh,ajexblock,ajexblock		;28-31


ajexz
	rets

ajexpunch		;1
ajexpunchkick
ajexblock		;2
ajexkick		;8


	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_ohslam_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,PUNCH_T1,PUNCH_T2

	rets

ajexsuper_punch	;4
ajexgraboh

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_UP_BIT,a0
	jrz	ajexpunch

	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_slamdown_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,PUNCH_T1,PUNCH_T2

	rets

ajexsuper_kick	;16

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_UP_BIT,a0
	jrz	ajexpunch

	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_backbreaker_anim,a0
	calla	change_anim1a

	WRSND	W_LUGER,HIPTOSS_T1,PUNCH_T2

	rets


mode_climbturnbkl	;11

	rets



mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	pjaonot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

pjaonot_ended
	rets



mode_grapple	;13

	rets



mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets


mode_slave	;15
	rets


mode_headhold	;16

	.ref	bozo_check
	calla	bozo_check
	jrnc	scqyfail

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2

	movi	lex_vsuplex_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	scqytag
	movi	lex_4_graboh_anim,a0
scqytag	calla	change_anim1a

	rets

scqyfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	scqyexit


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	scqyno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	scqyaction_table,a0
	move	*a0,a0,L
	call	a0

scqyno_interrupt
	rets

scqyexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	scqyright
	movk	MOVE_DOWN_LEFT,a1
scqyright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

scqyaction_table
	.long	scqyz,scqypunch,scqyblock,scqyblock			;0-3
	.long	scqysuper_punch,scqysuper_punch,scqyblock,scqyblock	;4-7
	.long	scqykick,scqypunchkick,scqyblock,scqyblock		;8-11
	.long	scqysuper_punch,scqypunchkick,scqyblock,scqyblock	;12-15
	.long	scqysuper_kick,scqysuper_kick,scqyblock,scqyblock	;16-19
	.long	scqygraboh,scqygraboh,scqyblock,scqyblock		;20-23
	.long	scqysuper_kick,scqypunchkick,scqyblock,scqyblock	;24-27
	.long	scqygraboh,scqygraboh,scqyblock,scqyblock		;28-31


scqyblock
scqygraboh
scqyz		;0
	rets


scqypunch		;1
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	scqytag2
	WRSND	W_LUGER,KICK_T1,KICK_T2

	.ref	lex_4_knee2_anim
	movi	lex_4_knee2_anim,a0
	calla	change_anim1a
	rets

scqytag2
	WRSND	W_LUGER,KICK_T1,KICK_T2
	movi	lex_4_knee2_anim,a0
	calla	change_anim1a
	rets

scqysuper_punch	;4
	rets

scqypunchkick
scqykick
	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_3_knee_to_head_anim,a0
	calla	change_anim1a
	WRSND	W_LUGER,KICK_T1,KICK_T2
	rets

scqysuper_kick	;16
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	scqykick

	CALLA	FIND_AND_KILL_ENDLESS
	movi	lex_knees_to_head_anim,a0
	calla	change_anim1a
	WRSND	W_LUGER,KICK_T1,KICK_T2
	rets


mode_puppet2	;17

	rets


mode_headheld	;19
	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking


	calla	bozo_check
	jrnc	zlzjfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_LUGER,FLYKICK_T1,FLYKICK_T2

	movi	lex_vsuplex_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	zlzjtag
zlzjtag	calla	change_anim1a

	rets
zlzjfail
	move	*a13(ATTACH_PROC),a0,L
	jrnz	zlzjno_luck

	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	zlzjno_luck


	movi	lex_3_head_held_stand_anim,a0
	calla	change_anim1a

zlzjno_luck
	rets

mode_chokehold	;24
	rets


fdzjVEL	equ	3a000h		;38000h	;30000h
fdzjDVEL	equ	31000h		;27978h	;21f0eh


 SUBR lex_velocity_table


	.long	0,	-fdzjVEL	;0 UP

	.long	fdzjDVEL,	-fdzjDVEL	;1 UP-RIGHT

	.long	fdzjVEL,	0	;2 RIGHT

	.long	fdzjDVEL,	fdzjDVEL	;3 DOWN-RIGHT

	.long	0,	fdzjVEL	;4 DOWN

	.long	-fdzjDVEL,	fdzjDVEL	;5 DOWN-LEFT

	.long	-fdzjVEL,	0	;6 LEFT

	.long	-fdzjDVEL,	-fdzjDVEL	;7 UP-LEFT



 SUBR lex_rotate_anims_table
	.long	lex_stand2_anim		;new = up right
	.long	lex_2_to_4_turn_anim	;    = down right
	.long	lex_2_to_6_turn_anim	;    = down left
	.long	lex_2_to_8_turn_anim	;    = up left

	.long	lex_4_to_2_turn_anim	;new = up right
	.long	lex_stand4_anim		;    = down right
	.long	lex_4_to_6_turn_anim	;    = down left
	.long	lex_4_to_8_turn_anim	;    = up left

	.long	lex_6_to_2_turn_anim	;new = up right
	.long	lex_6_to_4_turn_anim	;    = down right
	.long	lex_stand6_anim		;    = down left
	.long	lex_6_to_8_turn_anim	;    = up left

	.long	lex_8_to_2_turn_anim	;new = up right
	.long	lex_8_to_4_turn_anim	;    = down right
	.long	lex_8_to_6_turn_anim	;    = down left
	.long	lex_stand8_anim		;    = up left


 SUBR lex_leg_anims_table
	.long	lex_walk1_f2_anim	;1 (UP)
	.long	lex_walk1_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk1_f4_anim	;3 (RIGHT)
	.long	lex_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk1_f4_anim	;5 (DOWN)
	.long	lex_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk1_f2_anim	;7 (LEFT)
	.long	lex_walk1_f2_anim	;8 (UP-LEFT)

	.long	lex_walk2_f2_anim	;1 (UP)
	.long	lex_walk2_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk2_f2_anim	;3 (RIGHT)
	.long	lex_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk8_f4_anim	;5 (DOWN)
	.long	lex_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk4_f2_anim	;7 (LEFT)
	.long	lex_walk4_f2_anim	;8 (UP-LEFT)

	.long	lex_walk2_f2_anim	;1 (UP)
	.long	lex_walk2_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk2_f2_anim	;3 (RIGHT)
	.long	lex_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk4_f4_anim	;5 (DOWN)
	.long	lex_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk6_f2_anim	;7 (LEFT)
	.long	lex_walk6_f2_anim	;8 (UP-LEFT)


	.long	lex_walk2_f2_anim	;1 (UP)
	.long	lex_walk8_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk4_f4_anim	;3 (RIGHT)
	.long	lex_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk2_f4_anim	;5 (DOWN)
	.long	lex_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk2_f2_anim	;7 (LEFT)
	.long	lex_walk6_f2_anim	;8 (UP-LEFT)

	.long	lex_walk5_f2_anim	;1 (UP)
	.long	lex_walk5_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk5_f4_anim	;3 (RIGHT)
	.long	lex_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk5_f4_anim	;5 (DOWN)
	.long	lex_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk5_f2_anim	;7 (LEFT)
	.long	lex_walk5_f2_anim	;8 (UP-LEFT)

	.long	lex_walk2_f2_anim	;1 (UP)
	.long	lex_walk6_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk2_f2_anim	;3 (RIGHT)
	.long	lex_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk2_f4_anim	;5 (DOWN)
	.long	lex_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk2_f2_anim	;7 (LEFT)
	.long	lex_walk8_f2_anim	;8 (UP-LEFT)

	.long	lex_walk2_f2_anim	;1 (UP)
	.long	lex_walk6_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk6_f2_anim	;3 (RIGHT)
	.long	lex_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk4_f4_anim	;5 (DOWN)
	.long	lex_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk2_f2_anim	;7 (LEFT)
	.long	lex_walk2_f2_anim	;8 (UP-LEFT)

	.long	lex_walk2_f2_anim	;1 (UP)
	.long	lex_walk4_f2_anim	;2 (UP_RIGHT)
	.long	lex_walk6_f2_anim	;3 (RIGHT)
	.long	lex_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	lex_walk6_f4_anim	;5 (DOWN)
	.long	lex_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	lex_walk2_f2_anim	;7 (LEFT)
	.long	lex_walk2_f2_anim	;8 (UP-LEFT)


 SUBR lex_torso_anims_table
	.long	lex_torso2_anim		;new = up right
	.long	lex_2_to_4_turn2_anim	;    = down right
	.long	lex_2_to_6_turn2_anim	;    = down left
	.long	lex_2_to_8_turn2_anim	;    = up left

	.long	lex_4_to_2_turn2_anim	;new = up right
	.long	lex_torso4_anim		;    = down right
	.long	lex_4_to_6_turn2_anim	;    = down left
	.long	lex_4_to_8_turn2_anim	;    = up left

	.long	lex_6_to_2_turn2_anim	;new = up right
	.long	lex_6_to_4_turn2_anim	;    = down right
	.long	lex_torso6_anim		;    = down left
	.long	lex_6_to_8_turn2_anim	;    = up left

	.long	lex_8_to_2_turn2_anim	;new = up right
	.long	lex_8_to_4_turn2_anim	;    = down right
	.long	lex_8_to_6_turn2_anim	;    = down left
	.long	lex_torso8_anim		;    = up left



	.end

