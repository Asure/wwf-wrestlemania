**************************************************************
*
* Software:		Jamie Rivett
* Initiated:		5/17/94
*
* COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
*
**************************************************************

	.file	"bam.asm"
	.title	"Bam Bam Bigelo specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"


******************************************************************************
* EXTERNAL REFERENCES

	.ref	get_punch_dtime,ck_teammate_pin,raisearm_check
	.ref	can_pin,round_award,set_raisearm_bit
	.ref	change_anim1,change_anim1a
	.ref	change_anim2,change_anim2a
	.ref	keep_attached,drone_change_back,std_walk_fast,std_taunt
	.ref	get_opp_plyrmode,mode_dead,get_opp_process
	.ref	check_secret_moves,process_ptrs,master_keep_attached
	.ref	mode_choking,do_taunt,execute_walk,bounce_off_ropes
	.ref	climb_turnbuckle,ck_ignore,CLIMB_ROPES
	.ref	JUMP_ROPES,ADD_IF_SILENT,FIND_AND_KILL_ENDLESS
	.ref	DO_REVERSAL,PCNT,DO_REVERSAL_MESS,CHECK_COMBO_GO
	.ref	BONUS_MESS,BLOCK_WOOSH
	.ref	blocking_off
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_BAM_FINISHES
	.ref	bam_finish1_move
	.if NUM_BAM_FINISHES > 1
	.ref	bam_finish2_move
	.endif
	.endif

******************************************************************************
* ANIMATION SEQUENCES

	.ref	wres_slave_anim
	.ref	bam_zip_anim
	.ref	start_run_anim

	.ref	bam_stand2_anim,bam_stand8_anim
	.ref	bam_stand4_anim,bam_stand6_anim
	.ref	bam_torso2_anim,bam_torso8_anim
	.ref	bam_torso4_anim,bam_torso6_anim
	.ref	bam_pogo_anim
	.ref	bam_3_hiptoss_anim

	.ref	bam_2_to_4_turn_anim,bam_8_to_6_turn_anim	;stand
	.ref	bam_4_to_2_turn_anim,bam_6_to_8_turn_anim
	.ref	bam_4_to_6_turn_anim,bam_6_to_4_turn_anim
	.ref	bam_2_to_8_turn_anim,bam_8_to_2_turn_anim
	.ref	bam_4_to_8_turn_anim,bam_6_to_2_turn_anim
	.ref	bam_2_to_6_turn_anim,bam_8_to_4_turn_anim

	.ref	bam_2_to_4_turn2_anim,bam_8_to_6_turn2_anim	;torso
	.ref	bam_4_to_2_turn2_anim,bam_6_to_8_turn2_anim
	.ref	bam_4_to_6_turn2_anim,bam_6_to_4_turn2_anim
	.ref	bam_2_to_8_turn2_anim,bam_8_to_2_turn2_anim
	.ref	bam_4_to_8_turn2_anim,bam_6_to_2_turn2_anim
	.ref	bam_2_to_6_turn2_anim,bam_8_to_4_turn2_anim

	.ref	bam_walk1_f2_anim,bam_walk2_f2_anim,bam_walk4_f2_anim
	.ref	bam_walk5_f2_anim,bam_walk6_f2_anim,bam_walk8_f2_anim

	.ref	bam_walk1_f4_anim,bam_walk2_f4_anim,bam_walk4_f4_anim
	.ref	bam_walk5_f4_anim,bam_walk6_f4_anim,bam_walk8_f4_anim

	.ref	bam_4_fpunch_anim
	.ref	bam_2_fpunch_anim
	.ref	bam_4_block_anim
	.ref	bam_2_butts_anim,bam_4_butts_anim

	.ref	bam_run2_anim

	.ref	bam_2_head_hit_anim,bam_4_head_hit_anim
	.ref	bam_2_head_hit2_anim,bam_4_head_hit2_anim
	.ref	bam_2_body_hit_anim,bam_4_body_hit_anim

	.ref	bam_2_punch_anim,bam_4_punch_anim
	.ref	bam_2_kick_anim,bam_4_kick_anim
	.ref	bam_flying_kick_anim

	.ref	bam_2_body_hit_anim,bam_4_body_hit_anim
	.ref	bam_hitonground_anim

	.ref	bam_2_butt_anim,bam_4_butt_anim
	.ref	bam_2_knee_anim,bam_4_knee_anim
;	.ref	bam_4_bigboot_anim

	.ref	bam_head_hit2_anim,bam_head_hit_dizzy_anim
	.ref	bam_2_stomp_anim,bam_4_stomp_anim

	.ref	bam_4_push_anim
	.ref	bam_4_losebal_anim

	.ref	bam_2_grabfling_anim
	.ref	bam_4_grabfling_anim

	.ref	bam_fall_back_anim,bam_knees_anim

	.ref	bam_2_faceup_getup_anim
	.ref	bam_4_faceup_getup_anim

	.ref	bam_2_lbowdrop_anim,bam_4_lbowdrop_anim

	.ref	bam_4_jumpkick_anim

;	.ref	bam_running_headbutt
	.ref	bam_3_pile_driver_anim

	.ref	bam_4_graboh_anim,bam_heldoh_anim
	.ref	bam_2_graboh_anim
	.ref	bam_holdoh_anim
	.ref	bam_stndholdoh_anim

	.ref	bam_backbreaker_anim

	.ref	mode_inair2,mode_puppet
	.ref	bam_2_pin_anim
	.ref	bam_4_pin_anim

	.ref	bam_3_butt_drop_anim

	.ref	bam_climb_up_anim,bam_climb_down_anim,bam_bellyflop_anim
	.ref	bam_combo_knees_anim,bam_combo_punch_anim
	.ref	bam_2_raise_arm_anim,bam_4_raise_arm_anim

	.ref	bam_neckbreaker2_anim,bam_slamdwn_anim
	.ref	bam_4_superkick_anim,bam_3_hiptoss2_anim
	.ref	bam_neckbreaker_run_anim
	.ref	bam_fly_cline_anim,bam_4_slap_anim
	.ref	bam_neckbreaker_anim,bam_2_hair_pickup_anim
	.ref	bam_2_superkick_anim,bam_2_slap_anim
	.ref	bam_3_head_hold2_anim,bam_3_head_held_stand_anim
	.ref	bam_3_head_hold_anim
	.ref	bam_4_hair_pickup_anim
	.ref	bam_2_napalm_anim,bam_4_napalm_anim

******************************************************************************
* SYMBOLS DEFINED IN THIS FILE

******************************************************************************
* EQUATES FOR THIS FILE

*****************************************************************************

bam_secret_moves
;Button held down moves need to be first entry
	.long	fyqfirepnch	;must have this one

	.long	fyqneck_grab
	.long	fyqgrab_fling
	.long	fyqhip_toss
	.long	fyqgrab_fling2
	.long	fyqhip_toss2
	.long	fyqjumpkick
	.long	fyqgrab_fling2
	.long	fyqhip_toss2
	.long	fyqnapalm
	.long	0

******************************************************************************
*
* SPECIAL MOVE PROCESSES - Secret moves
*
;a8=process of wrestler

 SUBR	bam_smove_table
	.long	bam_charge_neckbreaker
	.long	bam_hdhold_combo1
	.long	bam_hdhold_pile
	.long	bam_hdhold_pogo
	.long	bam_hdhold_combo2
;	.long	bam_hdhold_anti_combo
	.long	bam_grab_toss_air
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_BAM_FINISHES
	.long	bam_finish_move1
	.endif
	.if NUM_BAM_FINISHES > 1
	.long	bam_finish_move2
	.endif
	.long	0

;	.long	bam_hdhold_graboh
;	.long	bam_hdhold_neckbreaker

*******************************************************************************

fyqjumpkick
	.word	B_SKICK,		J_ALL
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 32		;max
	.long	fyqscrt_flykick

fyqscrt_flykick
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	fyqout
	cmpi	MODE_DEAD,a0
	jrz	fyqout
	cmpi	MODE_HEADHELD,a0
	jrz	fyqout
	cmpi	MODE_ATTACHED,a0
	jrz	fyqout

	movi	bam_4_jumpkick_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

*******************************************************************************

fyqneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32		;max
	.long	fyqscrt_neck

fyqscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	fyqout
	cmpi	MODE_DEAD,a0
	jrz	fyqout
	cmpi	MODE_HEADHELD,a0
	jrz	fyqout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	fyqout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	fyqok2

;This head grab is too close (in terms of time) to most recent grab
	.ref	bam_3_fake_hold_anim
	movi	bam_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

fyqok2
	move	*a13(CLOSEST_XDIST),a1
	cmpi	100,a1
	jrgt	fyqstd_grab

	movi	bam_3_head_hold2_anim,a0
	calla	change_anim1a

	rets

fyqstd_grab
	movi	bam_3_head_hold_anim,a0
	calla	change_anim1a

	rets

*******************************************************************************

fyqnapalm
	.word	B_PUNCH,		J_ALL
	.word	J_DOWN,			J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 50 		;max
	.long	fyqscrt_napalm

fyqscrt_napalm
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	fyqout

	;only if opponent is on the ground (and not dead!)
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrne	fyqout

	;smart-target him (don't wanna hit standing guys)
	move	*a13(STATUS_FLAGS),a14,L
	ori	M_SMART_ATTACK,a14
	move	a14,*a13(STATUS_FLAGS),L
	calla	get_opp_process
	move	a0,*a13(SMART_TARGET),L

	FACE24	bam,napalm_anim
	calla	change_anim1a

	;do some sound here

	rets

*******************************************************************************

fyqhip_toss
;	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	fyqscrt_hiptoss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	fyqscrt_hiptoss

fyqscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	fyqout
;	cmpi	MODE_BLOCK,a0
;	jrz	fyqout
	cmpi	MODE_DEAD,a0
	jrz	fyqout
	cmpi	MODE_HEADHELD,a0
	jrz	fyqout
	cmpi	MODE_INAIR,a0
	jrz	fyqdoit
	cmpi	MODE_INAIR2,a0
	jrz	fyqdoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	80h,a0
	jrgt	fyqout

fyqdoit
	movi	bam_3_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets

*******************************************************************************

fyqgrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	fyqscrt_grabfling2

fyqhip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	fyqscrt_grabfling2

fyqscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	fyqyes
	cmpi	MODE_RUNNING,a0
	jrz	fyqyes
	rets

*******************************************************************************

fyqgrab_fling
;	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	fyqscrt_grabfling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	fyqscrt_grabfling

fyqscrt_grabfling

;Make this miss, rotate to missed opponent,
;and stay rotated to flung opponent, also make
;this work from both angles!

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	fyqyes
	cmpi	MODE_RUNNING,a0
	jrnz	fyqnope
fyqyes
	movi	bam_3_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets
fyqnope
;Don't fling when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	fyqout
	cmpi	MODE_HEADHELD,a0
	jrz	fyqout
	cmpi	MODE_ONGROUND,a0
	jrz	fyqout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	fyqout

;	move	*a13(LAST_FLING_ATTEMPT),a14,L
;	move	@PCNT,a0,L
;	sub	a14,a0
;	cmpi	3*60,a0
;	jrge	fyqok2a
;
;	FACE24	bam,slap_anim
;	calla	change_anim1a
;
;	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2
;	rets
;
;fyqok2a
;	move	@PCNT,a14,L			;use 32-bit PCNT!
;	move	a14,*a13(LAST_FLING_ATTEMPT),L

	FACE24	bam,grabfling_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,GRABFLING_T1,PUNCH_T2

	rets


*******************************************************************************

fyqfirepnch

	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	fyqno_punch

	move	*a13(PLYRNUM),a0
	calla	get_punch_dtime
	cmpi	85,a0			;> min?
	jrlt	fyqno_punch

	callr	fyqscrt_firepnch
	setc
	rets

fyqno_punch
	clrc
	rets


fyqscrt_firepnch

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	fyqout
	cmpi	MODE_HEADHOLD,a0
	jrz	fyqout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	fyqout

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	fyqout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	fyqout

fyqok
	FACE24	bam,fpunch_anim
	calla	change_anim1a
	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2
fyqout
	rets

	.if NUM_BAM_FINISHES
******************************************************************************
 SUBRP	bam_finish_move1

fjwTIMEOUT	.equ	TSEC

fjwend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		fjwend_wait			; br = no

fjwreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,fjwreset
	movi		fjwTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,fjwreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,fjwreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,fjwreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,fjwreset

	movi		bam_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_BAM_FINISHES > 1
******************************************************************************
 SUBRP	bam_finish_move2

qpuTIMEOUT	.equ	TSEC

qpuend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		qpuend_wait			; br = no

qpureset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,qpureset
	movi		qpuTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,qpureset
	WAITSWITCH_DWN	J_RIGHT,J_UP,qpureset
	WAITSWITCH_DWN	J_RIGHT,J_UP,qpureset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,qpureset

	movi		bam_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif


*****************************************************************************

bam_hdhold_pogo

sgvTIMEOUT	.equ	60

sgvlp0
	SLEEPK	1
sgvlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	sgvcont
	cmpi	MODE_HEADHELD,a0
	jrnz	sgvlp0
sgvcont
	clr	a11

;	WAITSWITCH_DWN	J_UP,0,sgvlp
	WAITSWITCH_DWN	J_DOWN,0,sgvlp

	movi	sgvTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,sgvlp
	WAITSWITCH_DWN	B_SKICK,J_ALL,sgvlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	sgvslam
	cmpi	MODE_HEADHELD,a0
	jrnz	sgvlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	sgvlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	sgvlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	sgvis_reversal

sgvslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	sgvlp0				;ignore
	movk	31,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

sgvis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	bam_pogo_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	sgvlp

*******************************************************************************

;	STRUCTPD
;	WORD		ntgCHARGE_TIME	;UDW
ntgCHARGE_TIME	.equ	SM_USRW1

bam_charge_neckbreaker

ntgstart_over
	clr	a14
	move	a14,*a13(ntgCHARGE_TIME),W
ntgloop1
	SLEEPK	1

	move	*a13(ntgCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(ntgCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_SPUNCH_BIT,a0
	jrz	ntgp1

	jruc	ntgloop1

ntgp1

;no longer holding button
	move	*a13(ntgCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	ntgstart_over

;Success!  Check for the UNINT bit, then queue it up.
	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	ntgstart_over

	move	*a8(GETUP_TIME),a0
	jrnz	ntgstart_over

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	ntgstart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	ntgstart_over
	cmpi	MODE_ONGROUND,a0
	jrz	ntgstart_over
	cmpi	MODE_DEAD,a0
	jrz	ntgstart_over

	movi	bam_neckbreaker2_anim,a14

	move	*a8(PLYRMODE),a0
	cmpi	MODE_RUNNING,a0
	jrnz	ntgcont

	movi	bam_neckbreaker_run_anim,a14

ntgcont
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEP	TSEC*3
	jruc	ntgstart_over
	
;*****************************************************************************
;bam_hdhold_neckbreaker
;
;ntgTIMEOUT	.equ	60
;
;ntglp0
;	SLEEPK	1
;ntglp
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHOLD,a0
;	jrz	ntgcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	ntglp0
;ntgcont
;	clr	a11
;
;	WAITSWITCH_DWN	B_SPUNCH,0,ntglp
;
;	movi	ntgTIMEOUT,a11
;
;	WAITSWITCH_DWN	B_SKICK,0,ntglp
;	WAITSWITCH_DWN	B_SPUNCH,0,ntglp
;	WAITSWITCH_DWN	B_SKICK,0,ntglp
;
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHELD,a0
;	jrnz	ntgslam
;	move	*a8(I_WILL_DIE),A14
;	jrnz	ntglp0
;
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	ntglp0				;ignore
;
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	;target WHOHITME -- don't hit anyone else
;	SMRTTGT	a8,WHOHITME
;
;	;immobilize WHOHITME
;	move	*a8(WHOHITME),a0,L
;	jruc	ntgis_reversal
;
;ntgslam
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	ntglp0				;ignore
;
;	movk	4,a10
;	CREATE	MESSAGE_PID,BONUS_MESS
;
;	;target WHOIHIT -- don't hit anyone else
;	SMRTTGT	a8,WHOIHIT
;
;	;immobilize WHOIHIT
;	move	*a8(WHOIHIT),a0,L
;
;ntgis_reversal
;	movk	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;
;	CALLA	FIND_AND_KILL_ENDLESS
;
;	movi	bam_neckbreaker_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	SLEEPK	20
;
;	jruc	ntglp
;
;*****************************************************************************
;bam_hdhold_graboh
;
;ntgTIMEOUT	.equ	60
;
;ntglp0
;	SLEEPK	1
;ntglp
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHOLD,a0
;	jrz	ntgcont0
;	cmpi	MODE_HEADHELD,a0
;	jrnz	ntglp0
;ntgcont0
;	clr	a11
;
;	WAITSWITCH_DWN	J_DOWN,0,ntglp
;
;	movi	ntgTIMEOUT,a11
;
;	WAITSWITCH_DWN	J_DOWN_TOWARD,0,ntglp
;	WAITSWITCH_DWN	J_TOWARD,0,ntglp
;	WAITSWITCH_DWN	B_KICK,J_ALL,ntglp
;
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHOLD,a0
;	jrz	ntgdograb
;	cmpi	MODE_HEADHELD,a0
;	jrnz	ntglp0
;	move	*a8(I_WILL_DIE),A14
;	jrnz	ntglp0
;
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	ntglp0				;ignore
;
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	;target WHOHITME -- don't hit anyone else
;	SMRTTGT	a8,WHOHITME
;
;	;immobilize WHOHITME
;	move	*a8(WHOHITME),a0,L
;	jruc	ntgis_reversal
;
;ntgdograb
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	ntglp0				;ignore
;
;	movk	6,a10
;	CREATE	MESSAGE_PID,BONUS_MESS
;
;	;target WHOIHIT -- don't hit anyone else
;	SMRTTGT	a8,WHOIHIT
;
;	;immobilize WHOIHIT
;	move	*a8(WHOIHIT),a0,L
;
;ntgis_reversal
;	movk	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;
;	CALLA	FIND_AND_KILL_ENDLESS
;
;	movi	bam_4_graboh_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	SLEEPK	20
;
;	jruc	ntglp
;
*****************************************************************************
bam_hdhold_pile

grlTIMEOUT	.equ	60

grllp0
	SLEEPK	1
grllp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	grlcont
	cmpi	MODE_HEADHELD,a0
	jrnz	grllp0
grlcont
	clr	a11

;	WAITSWITCH_DWN	J_AWAY,0,grllp
	WAITSWITCH_DWN	J_TOWARD,0,grllp

	movi	grlTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,grllp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,grllp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	grlslam
	cmpi	MODE_HEADHELD,a0
	jrnz	grllp0
	move	*a8(I_WILL_DIE),A14
	jrnz	grllp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	grllp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	grlis_reversal

grlslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	grllp0				;ignore

	movk	7,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

grlis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_3_pile_driver_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	grllp

*******************************************************************************
*
bam_hdhold_combo1

grlTIMEOUT	.equ	60

grllp0
	SLEEPK	1
grllp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	grllp0
;	jrz	grlcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	grllp0
;grlcont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	grllp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,grllp

	movi	grlTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,grllp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,grllp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	grlslam
	cmpi	MODE_HEADHELD,a0
	jrnz	grllp0


grlslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	grllp0				;ignore

;Start combo rules here
;	move	*a8(ATTACH_PROC),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)

	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_combo_knees_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	grllp

;*******************************************************************************
;*
;bam_hdhold_anti_combo
;
;grlTIMEOUT	.equ	80
;
;grllp0
;	SLEEPK	1
;grllp
;;Is my opponent in combo mode?
;;	move	*a8(IMMOBILIZE_TIME),a14
;;	jrz	grllp0
;;	move	*a8(CLOSEST_NUM),a0
;;	X32	a0
;;	addi	process_ptrs,a0
;;	move	*a0,a0,L
;;	move	*a0(COMBO_COUNT),a0
;;	jrz	grllp0
;
;	clr	a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,grllp
;
;	movi	grlTIMEOUT,a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,grllp
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,grllp
;
;;Is my opponent in combo mode?
;	move	*a8(CLOSEST_NUM),a0
;	X32	a0
;	addi	process_ptrs,a0
;	move	*a0,a0,L
;	move	*a0(COMBO_COUNT),a0
;	jrz	grllp0
;
;	move	*a8(ANTI_COMBO_TIME),a0		;Time stamp
;	move	@PCNT,a14
;	sub	a0,a14
;	abs	a14
;	cmpi	80,a14
;	jrge	grllp0
;	move	*a8(I_WILL_DIE),A14
;	jrnz	grllp0
;
;;Combo breaker message!
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	clr	a0
;	move	a0,*a8(IMMOBILIZE_TIME)
;
;	move	*a8(WHOHITME),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)
;
;	;target WHOHITME
;	SMRTTGT	a8,WHOHITME
;
;	CALLA	FIND_AND_KILL_ENDLESS
;	movi	bam_3_pile_driver_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	SLEEPK	20
;
;	jruc	grllp
;
*******************************************************************************
*
bam_hdhold_combo2

grlTIMEOUT	.equ	60

grllp0
	SLEEPK	1
grllp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	grllp0
;	jrz	grlcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	grllp0
;grlcont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	grllp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,grllp

	movi	grlTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,grllp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,grllp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	grlslam
	cmpi	MODE_HEADHELD,a0
	jrnz	grllp0

grlslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	grllp0				;ignore

;Start combo rules here
;	move	*a8(ATTACH_PROC),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)

	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_combo_punch_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	grllp


*******************************************************************************
*

bam_grab_toss_air

grlTIMEOUT	.equ	40

grllp0
	SLEEPK	1
grllp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,grllp

	movi	grlTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,grllp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,grllp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	grllp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	grllp0

;Don't do it when he is on ground
	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
;Don't do it when he is on ground
	cmpi	MODE_ONGROUND,a0
	jrz	grllp
	cmpi	MODE_DEAD,a0
	jrz	grllp
	cmpi	MODE_INAIR,a0
	jrz	grldoit2
	cmpi	MODE_INAIR2,a0
	jrz	grldoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	grldoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	68h,a0
	jrgt	grllp

	movi	bam_3_hiptoss_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	grllp

grldoit2	movi	bam_3_hiptoss2_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	grllp

*****************************************************************************

 SUBR	bam_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	yepp1
;Plyr 2
	movi	bam_stand4_anim,a0
	calla	change_anim1a

	movi	bam_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

yepp1
	movi	bam_stand2_anim,a0
	calla	change_anim1a

	movi	bam_torso2_anim,a0
	calla	change_anim2a

	rets


*****************************************************************************
*
* BAM BAM CONTROL CODE
*
* a13 = * bam process

 SUBR	move_bam

	movi	bam_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	kcomode_table,a0
	move	*a0,a0,L
	call	a0
	rets

kcomode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	.long	mode_choking		;25


*****************************************************************************

mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	etpno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	etpnope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	etpnope
;Player has died amidst a combo...
;Knock me down.
	movi	bam_fall_back_anim,a0
	calla	change_anim1a

;Zero health bar
	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

etpnope

;Perhaps we need to interrupt any sequence when a wrestler has won?

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	etpopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	etpopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	etpno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	etpno_pin_yet
etpno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	etpraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	etpraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	etpno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	etpopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	bam,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

etpraisearm
	FACE24	bam,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

etptoo_far_to_pin
etpopp_notgnd
etpopp_not_dead
etpno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	etpimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	etpnblk			;1 for down transitions
	callr	etpblock			;& 1 for current buttons
	jrc	etpnblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
etpnblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	etppunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	etpaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	etpno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	etpno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

etpimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
etpno_climb
	calla	execute_walk

etpno_interrupt
	rets

etpaction_table
	.long	etpz,etppunch,etpblock,etpblock			;0-3
	.long	etpsuper_punch,etpsuper_punch,etpblock,etpblock	;4-7
	.long	etpkick,etppunchkick,etpblock,etpblock		;8-11
	.long	etpsuper_punch,etppunchkick,etpblock,etpblock	;12-15
	.long	etpsuper_kick,etpsuper_kick,etpblock,etpblock	;16-19
	.long	etpgraboh,etpgraboh,etpblock,etpblock		;20-23
	.long	etpsuper_kick,etppunchkick,etpblock,etpblock	;24-27
	.long	etpgraboh,etpgraboh,etpblock,etpblock		;28-31

************
etpz		;0

	rets


************
etppunch		;1
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	headbutt
* dizzy			"		"
* normal	>		normal punch
* dizzy			"		"
*
* onground	< 120  120	elbow drop
* onground	>		normal punch
*
* running			hiptoss
* bouncing			nothing
*
* onturnbkl	<  60   96	yank down
* onturnbkl	>		normal punch
* climbturnbkl			normal punch
*
	JJXM_INIT
	JJXM	NORMAL,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	DIZZY,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	BLOCK,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	ONGROUND,	160,140,etppunch_lbowdrop,etppunch_punch
	JJXM	RUNNING, 	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	BOUNCING,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	ONTURNBKL,		etppunch_punch
	JJXM	CLIMBTURNBKL,		etppunch_punch
	JJXM	INAIR,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	ATTACHED,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	DEAD,		160,140,etppunch_lbowdrop,etppunch_punch
	JJXM	OPPOVERHEAD,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	WAITANIM,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	GRAPPLE,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	MASTER,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	SLAVE,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	HEADHOLD,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	HEADHELD,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	CHOKEHOLD,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	PUPPET,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	PUPPET2,	 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM	INAIR2,		 50, 45,etppunch_hdbutt,etppunch_punch
	JJXM_END


*****
etppunch_rets
	rets

*****
etppunch_punch
std_punch

	FACE24	bam,punch_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,PUNCH_T1,PUNCH_T2
	rets

*****
etppunch_hdbutt

	FACE24	bam,butt_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,HDBUTT_T1,HDBUTT_T2
	rets

*****
etppunch_lbowdrop

	FACE24	bam,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,LBOWDROP_T1,LBOWDROP_T2
	rets

*****

	rets

************
etpblock		;2
std_block
	move	@blocking_off,a0
	jrnz	etpno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	bam_4_block_anim,a0
	calla	change_anim1

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

etpno_blocking
	setc
	rets


************
etpsuper_punch	;4
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	close in super move
* dizzy			"		"
* normal	>		jumping punch move
* dizzy			"		"
*
* onground	< 120  120	super elbow drop
* onground	>		normal punch
*
* running			hip toss
* bouncing			nothing
*
* onturnbkl	<  60   96	yank down
* onturnbkl	>		normal punch
* climbturnbkl			normal punch
*
	JJXM_INIT
	JJXM	NORMAL,		 90, 55,etpspunch_special,etpspunch_jump
	JJXM	DIZZY,		 90, 55,etpspunch_special,etpspunch_jump
	JJXM	BLOCK,		 90, 55,etpspunch_special,etpspunch_jump
	JJXM	ONGROUND,	160,140,etpspunch_lbowdrop,std_punch
	JJXM	RUNNING, 	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	BOUNCING,	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	ONTURNBKL,		etpspunch_jump
	JJXM	CLIMBTURNBKL,		std_punch
	JJXM	INAIR,		 90, 55,etpspunch_special,etpspunch_jump
	JJXM	ATTACHED,	 85, 55,etpspunch_special,etpspunch_jump
	JJXM	DEAD,		 160,140,etpspunch_lbowdrop,std_punch
	JJXM	OPPOVERHEAD,	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	WAITANIM,	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	GRAPPLE,	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	MASTER,		 90, 55,etpspunch_special,etpspunch_jump
	JJXM	SLAVE,		 90, 55,etpspunch_special,etpspunch_jump
	JJXM	HEADHOLD,	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	HEADHELD,		do_pile				;19
	JJXM	CHOKEHOLD,	 90, 55,etpspunch_special,etpspunch_jump
	JJXM	PUPPET,		 90, 45,etpspunch_special,etpspunch_jump
	JJXM	PUPPET2,	 90, 45,etpspunch_special,etpspunch_jump
	JJXM	INAIR2,		 90, 45,etpspunch_special,etpspunch_jump
	JJXM_END

etpspunch_rets
	rets

*****
etpspunch_jump
;jumping punch attack
	FACE24	bam,slap_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2

	rets

*****
etpspunch_special
;If stick is toward opponent, then do head hold
;	move	*a13(STICK_VAL_CUR),a0
;	move	*a13(NEW_FACING_DIR),a1
;	andi	0ch,a1
;	cmp	a0,a1
;
;	jrz	etpcont

	move	*a13(CLOSEST_XDIST),a1
	cmpi	55,a1
	jrgt	etpspunch_jump
;	jruc	etphdbutt
;etpcont
;
;	movi	bam_3_head_hold2_anim,a0
;	calla	change_anim1a
;
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	rets
;etphdbutt
	FACE24	bam,butts_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,HDBUTT_T1,HDBUTT_T2
	rets

*****
etpspunch_lbowdrop
 
;If near opponents head, and facing down, do the hair grab!
;Allow hair grab from below!

;	move	*a13(FACING_DIR),a14
;	btst	MOVE_DOWN_BIT,a14
;	jrz	etpno

	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	etpno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	etpno

;At head or feet!

	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	etpno

;At head!  Do hair pickup.

	FACE24	bam,hair_pickup_anim
	calla	change_anim1
	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

etpno
	FACE24	bam,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2

	rets


************
etpkick		;8
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	knee
* dizzy			"		"
* normal	>		normal kick
* dizzy			"		"
*
* onground	< 120  120	stomp
* onground	>		normal kick
*
* running			normal kick
* bouncing			normal kick
*
* onturnbkl			normal kick
* climbturnbkl			normal kick
*
	JJXM_INIT
	JJXM	NORMAL,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	DIZZY,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	BLOCK,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	ONGROUND,	160,140,etpkick_stomp,etpkick_kick
	JJXM	RUNNING,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	BOUNCING,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	ONTURNBKL,	 	etpkick_kick
	JJXM	CLIMBTURNBKL,	 	etpkick_kick
	JJXM	INAIR,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	ATTACHED,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	DEAD,		160,140,etpkick_stomp,etpkick_kick
	JJXM	OPPOVERHEAD,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	WAITANIM,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	GRAPPLE,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	MASTER,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	SLAVE,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	HEADHOLD,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	HEADHELD,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	CHOKEHOLD,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	PUPPET,		 60, 92,etpkick_knee,etpkick_kick
	JJXM	PUPPET2,	 60, 92,etpkick_knee,etpkick_kick
	JJXM	INAIR2,		 	etpkick_TB
	JJXM_END


*****
etpkick_TB

	.ref	bam_kick_TB_anim
	movi	bam_kick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

*****
etpkick_kick
std_kick

	FACE24	bam,kick_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

*****
etpkick_knee
std_knee

	FACE24	bam,knee_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

*****
etpkick_stomp
attack_stomp

	FACE24	bam,stomp_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2

	rets


************
etppunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets

************
etpsuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  60   60	close in super move
* dizzy			"		"
* normal	>		jumping kick move
* dizzy			"		"
*
* onground	< 120  120	super stomp
* onground	>		normal kick
*
* running			big boot
* bouncing			big boot
*
* onturnbkl	<  60   96	jumping kick move
* climbturnbkl		"		"
* onturnbkl	>		normal kick
* climbturnbkl		"		"
*
	JJXM_INIT
	JJXM	NORMAL,		 60, 60,etpskick_special,etpskick_kick
	JJXM	DIZZY,		 60, 60,etpskick_special,etpskick_kick
	JJXM	BLOCK,		 60, 60,etpskick_special,etpskick_kick
	JJXM	ONGROUND,	160,140,attack_stomp,std_kick
	JJXM	RUNNING,	 60, 60,etpskick_special,etpskick_kick
	JJXM	BOUNCING,	 60, 60,etpskick_special,etpskick_kick
	JJXM	ONTURNBKL,	 60, 96,etpskick_kick,std_kick
	JJXM	CLIMBTURNBKL,	 60, 96,etpskick_kick,std_kick
	JJXM	INAIR,		 60, 60,etpskick_special,etpskick_kick
	JJXM	ATTACHED,	 60, 60,etpskick_special,etpskick_kick
	JJXM	DEAD,		160,140,attack_stomp,std_kick
	JJXM	OPPOVERHEAD,	 60, 60,etpskick_special,etpskick_kick
	JJXM	WAITANIM,	 60, 60,etpskick_special,etpskick_kick
	JJXM	GRAPPLE,	 60, 60,etpskick_special,etpskick_kick
	JJXM	MASTER,		 60, 60,etpskick_special,etpskick_kick
	JJXM	SLAVE,		 60, 60,etpskick_special,etpskick_kick
	JJXM	HEADHOLD,	 60, 60,etpskick_special,etpskick_kick
	JJXM	HEADHELD,	 60, 60,etpskick_special,etpskick_kick
	JJXM	CHOKEHOLD,	 60, 60,etpskick_special,etpskick_kick
	JJXM	PUPPET,		 60, 60,etpskick_special,etpskick_kick
	JJXM	PUPPET2,	 60, 60,etpskick_special,etpskick_kick
	JJXM	INAIR2,		 	etpkick_TB
	JJXM_END

*****
etpskick_special
etpskick_kick

;Jumping karate kick
	FACE24	bam,superkick_anim
	calla	change_anim1a

;	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2

	rets

*****
;etpskick_bigboot
;
;	movi	bam_4_bigboot_anim,a0
;	calla	change_anim1a
;
;	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
;
;	rets


************
etpgraboh		;8

;Both super buttons at the same time!

	movi	bam_4_graboh_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	rets


*****************************************************************************
*
* RUNNING (if GETUP_TIME > 0 then player is out of control)
*

mxgXRUN_VAL	equ	BAM_XRUN
mxgZDRIFT_VAL	equ	BAM_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	mxgno_vel

	calla	bounce_off_ropes

	movi	mxgXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	mxgpos
	neg	a0
mxgpos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

mxgno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	mxgout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	mxgno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	mxgcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

mxgcontinue_run
mxgno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-mxgZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	mxgsetvel

	movi	mxgZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	mxgsetvel

	clr	a1
mxgsetvel
	move	a1,*a13(OBJ_ZVEL),L

;Delay reading buttons after just getting out of an out of control run
;so a mistaken move isn't fired off
	move	*a13(DELAY_BUTNS),a0
	jrnz	mxgout_of_control


	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	mxgaction_table,a0
	move	*a0,a0,L
	call	a0
mxgout_of_control
	rets

mxgaction_table
	.long	mxgz,mxgpunch,mxgblock,mxgblock			;0-3
	.long	mxgsuper_punch,mxgsuper_punch,mxgblock,mxgblock	;4-7
	.long	mxgkick,mxgpunchkick,mxgblock,mxgblock		;8-11
	.long	mxgsuper_punch,mxgpunchkick,mxgblock,mxgblock	;12-15
	.long	mxgsuper_kick,mxgsuper_kick,mxgblock,mxgblock	;16-19
	.long	mxggraboh,mxggraboh,mxgblock,mxgblock		;20-23
	.long	mxgsuper_kick,mxgpunchkick,mxgblock,mxgblock	;24-27
	.long	mxggraboh,mxggraboh,mxgblock,mxgblock		;28-31

************
mxgz
	rets


************
mxgpunch		;1
mxgsuper_punch	;4
mxgpunchkick
mxggraboh
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal			flying clothesline
* dizzy					"
*
* onground	< 176 176 	belly flop
* onground	>		nothing
*
* running			flying clothesline
* bouncing			flying clothesline
*
* onturnbkl			flying clothesline
* climbturnbkl			flying clothesline
*
	JJXM_INIT
	JJXM	NORMAL,			mxgpunch_clothesline
	JJXM	DIZZY,			mxgpunch_clothesline
	JJXM	BLOCK,			mxgpunch_clothesline
	JJXM	ONGROUND,	176,176,mxgpunch_bellyflop,mxgpunch_rets
	JJXM	RUNNING,		mxgpunch_clothesline
	JJXM	BOUNCING,		mxgpunch_clothesline
	JJXM	ONTURNBKL,		mxgpunch_clothesline
	JJXM	CLIMBTURNBKL,		mxgpunch_clothesline
	JJXM	INAIR,			mxgpunch_clothesline
	JJXM	ATTACHED,		mxgpunch_clothesline
	JJXM	DEAD,		176,176,mxgpunch_bellyflop,mxgpunch_rets
	JJXM	OPPOVERHEAD,		mxgpunch_clothesline
	JJXM	WAITANIM,		mxgpunch_clothesline
	JJXM	GRAPPLE,		mxgpunch_clothesline
	JJXM	MASTER,			mxgpunch_clothesline
	JJXM	SLAVE,			mxgpunch_clothesline
	JJXM	HEADHOLD,		mxgpunch_clothesline
	JJXM	HEADHELD,		mxgpunch_clothesline
	JJXM	CHOKEHOLD,		mxgpunch_clothesline
	JJXM	PUPPET,			mxgpunch_clothesline
	JJXM	PUPPET2,		mxgpunch_clothesline
	JJXM	INAIR2,			mxgpunch_clothesline
	JJXM_END


mxgpunch_rets
	rets

*****
mxgpunch_clothesline
;Only allow clothesline if near center of ring, and running toward opponent
	move	*a13(MOVE_DIR),a1
	btst	MOVE_LEFT_BIT,a1
	jrnz	mxglft
;Moving right
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID+70h,a0
	jrlt	mxgok

;	LOCKUP

	rets

mxglft
;Moving left
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID-70h,a0
	jrgt	mxgok

;	LOCKUP

	rets
mxgok
	move	*a13(MOVE_DIR),a1
	move	*a13(NEW_FACING_DIR),a0	;Current facing dir (9,10,6,5 only)
	sll	5,a0
	addi	mxgmv_tbl,a0
	move	*a0,a0,L
	btst	a0,a1
	jrz	mxgyes

;	LOCKUP

	rets
mxgyes

;Will lunge toward opponent
;Is facing opponent - nt running away from him!
	movi	bam_fly_cline_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

mxgmv_tbl	.long	0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
	.long	0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT


*****
mxgpunch_bellyflop
attack_bellyflop

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	movi	bam_3_butt_drop_anim,a0
	calla	change_anim1a
	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
	rets

************
mxgblock		;2
	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block

************
mxgkick		;8
mxgsuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal			flying kick
* dizzy					"
*
* onground	< 176 176	running stomp
* onground	>		nothing
*
* running			flying kick
* bouncing			flying kick
*
* onturnbkl			flying kick
* climbturnbkl			flying kick
*
	JJXM_INIT
	JJXM	NORMAL,			mxgkick_flyingkick
	JJXM	DIZZY,			mxgkick_flyingkick
	JJXM	BLOCK,			mxgkick_flyingkick
	JJXM	ONGROUND,	176,176,attack_bellyflop,mxgkick_rets
	JJXM	RUNNING,		mxgkick_flyingkick
	JJXM	BOUNCING,		mxgkick_flyingkick
	JJXM	ONTURNBKL,		mxgkick_flyingkick
	JJXM	CLIMBTURNBKL,		mxgkick_flyingkick
	JJXM	INAIR,			mxgkick_flyingkick
	JJXM	ATTACHED,		mxgkick_flyingkick
	JJXM	DEAD,		176,176,attack_bellyflop,mxgkick_rets
	JJXM	OPPOVERHEAD,		mxgkick_flyingkick
	JJXM	WAITANIM,		mxgkick_flyingkick
	JJXM	GRAPPLE,		mxgkick_flyingkick
	JJXM	MASTER,			mxgkick_flyingkick
	JJXM	SLAVE,			mxgkick_flyingkick
	JJXM	HEADHOLD,		mxgkick_flyingkick
	JJXM	HEADHELD,		mxgkick_flyingkick
	JJXM	CHOKEHOLD,		mxgkick_flyingkick
	JJXM	PUPPET,			mxgkick_flyingkick
	JJXM	PUPPET2,		mxgkick_flyingkick
	JJXM	INAIR2,			mxgkick_flyingkick
	JJXM_END


mxgkick_rets
	rets

*****
mxgkick_flyingkick

	calla	ck_ignore
	jrc	mxgz

	movi	bam_flying_kick_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

;*****
;mxgkick_runstomp
;
;	rets

*****************************************************************************
*

mode_inair	;2

	rets

*****************************************************************************
*

mode_attached	;3

	calla	keep_attached
	jrnz	mkdstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

mkdstill_attached
	rets


*****************************************************************************
*

mode_onground	;4

	rets

*****************************************************************************
*
* bouncing off ropes while running

mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	ipbnot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	bam_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING

;	clr	a0
;	move	a0,*a13(GETUP_TIME)	;in control

ipbnot_ended
	rets


*****************************************************************************
*
* STANDING ON TOP OF TURNBUCKLE

mode_onturnbkl	;6

;	;check unint
;	move	*a13(ANIMODE),a14
;	btst	MODE_UNINT_BIT,a14
;	jrnz	nygno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	nygno_climbdown

	movi	bam_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

nygno_interrupt
	rets

nygno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	nygz

	X32	a0
	addi	nygaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets


;For standing on top of turnbuckles

nygaction_table
	.long	nygz,nygpunch,nygblock,nygblock			;0-3
	.long	nygsuper_punch,nygsuper_punch,nygblock,nygblock	;4-7
	.long	nygkick,nygpunchkick,nygblock,nygblock		;8-11
	.long	nygsuper_punch,nygpunchkick,nygblock,nygblock	;12-15
	.long	nygsuper_kick,nygsuper_kick,nygblock,nygblock	;16-19
	.long	nyggraboh,nyggraboh,nygblock,nygblock		;20-23
	.long	nygsuper_kick,nygpunchkick,nygblock,nygblock	;24-27
	.long	nyggraboh,nyggraboh,nygblock,nygblock		;28-31

************
nygz
	rets

************
nygpunch		;1
nygblock		;2
nygsuper_punch	;4
nygkick		;8
nygsuper_kick	;16
nyggraboh
nygpunchkick

	SETMODE	INAIR

	movi	bam_bellyflop_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,TURNDIVE_T1,TURNDIVE_T2

	rets

*****************************************************************************
* blocking

mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	fuxno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	fuxno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	fuxno
	cmpi	45,a0
	jrlt	fuxno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	fuxpunchblock

fuxno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	fuxno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	fuxset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	fuxaction_table,a0
	move	*a0,a0,L
	call	a0

fuxno_interrupt
	rets

fuxset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

fuxaction_table
	.long	fuxz,fuxpunchblock,fuxz	;0-2
	.long	fuxpunchblock		;3
	.long	fuxz,fuxz,fuxz,fuxz,fuxz,fuxz,fuxz	;4-10
	.long	fuxz,fuxz,fuxz,fuxz,fuxz,fuxz,fuxz	;11-17
	.long	fuxz,fuxz,fuxz,fuxz,fuxz,fuxz,fuxz	;18-24
	.long	fuxz,fuxz,fuxz,fuxz,fuxz,fuxz,fuxz	;25-31

************
fuxz
	rets

************
fuxpunchblock	;3
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* all				push
*

;This push has no collisions set!

	SETMODE	NORMAL

	movi	bam_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,PUSH_T1,PUSH_T2

	rets

*****************************************************************************
* doink with zero health

mode_dizzy	;8

;	move	*a13(GETUP_TIME),a0
;	jrnz	dspstill_going
;
;	calla	clear_damage_log
;
;	clr	a0
;	move	a0,*a13(STARS_FLAG)
;
;	SETMODE	NORMAL
;
;dspstill_going
	rets




*****************************************************************************
* opponent held overhead

mode_oppoverhead ;10

	move	*a13(ATTACH_PROC),a2,L		;proc attached to
	jrz	smbnot_attached
	move	*a2(ATTACH_PROC),a0,L
	jrnz	smbstill_attached

smbnot_attached

	move	*a13(ANIMODE),a0		;* remove this????
	btst	MODE_UNINT_BIT,a0		;*
	jrnz	smbno_interrupt			;*

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	CALLA	FIND_AND_KILL_ENDLESS
	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

	rets

smbstill_attached
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	smbno_interrupt

	move	*a13(FACING_DIR),a0
	andni	MOVE_UP,a0
	ori	MOVE_DOWN,a0
	move	a0,*a13(FACING_DIR)
	move	a0,*a13(NEW_FACING_DIR)

	move	*a13(STICK_VAL_CUR),a0
	jrz	smbstand

	move	a0,*a13(MOVE_DIR)
	calla	execute_walk

	movi	bam_holdoh_anim,a0
	calla	change_anim2
 	jruc	smbck_butns
smbstand
	clr	a0
	move	a0,*a13(MOVE_DIR)
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	movi	bam_stndholdoh_anim,a0
	calla	change_anim1

smbck_butns

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	smbaction_table,a0
	move	*a0,a0,L
	call	a0

smbno_interrupt
	rets

smbaction_table
	.long	smbz,smbpunch,smbblock,smbblock			;0-3
	.long	smbsuper_punch,smbsuper_punch,smbblock,smbblock	;4-7
	.long	smbkick,smbpunchkick,smbblock,smbblock		;8-11
	.long	smbsuper_punch,smbpunchkick,smbblock,smbblock	;12-15
	.long	smbsuper_kick,smbsuper_kick,smbblock,smbblock	;16-19
	.long	smbgraboh,smbgraboh,smbblock,smbblock		;20-23
	.long	smbsuper_kick,smbpunchkick,smbblock,smbblock	;24-27
	.long	smbgraboh,smbgraboh,smbblock,smbblock		;28-31

************
smbz
	rets

************
smbpunch		;1
smbblock		;2
smbsuper_punch	;4
smbkick		;8
smbpunchkick	;9

;	move	*a13(STICK_VAL_CUR),a0
;	btst	PLAYER_DOWN_BIT,a0
;	jrz	smbz

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_slamdwn_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,PUNCH_T1,PUNCH_T2

	rets

smbsuper_kick	;16
smbgraboh		;20

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	smbkick

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_backbreaker_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets

*****************************************************************************
*
* CLIMBING UP OR DOWN THE TURNBUCKLE

mode_climbturnbkl	;11

	rets

*****************************************************************************

mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	wjqnot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

wjqnot_ended
	rets


*****************************************************************************

mode_grapple	;13

	rets
;
;	move	*a13(GETUP_TIME),a0
;	jrnz	qwtstill_going
;
;;now get move off
;;if opponents meter almost zero then break apart
;
;	calla	break_lockup
;	rets
;
;
;qwtstill_going
;	calla	lineup_grapple
;	rets


*****************************************************************************

mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets

*****************************************************************************

mode_slave	;15
	rets

*****************************************************************************

mode_headhold	;16

;Bozo power move
	.ref	bozo_check
	calla	bozo_check
	jrnc	wzxfail

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	movi	bam_pogo_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	wzxtag
	movi	bam_neckbreaker_anim,a0
wzxtag	calla	change_anim1a

	rets

wzxfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	wzxexit

;	move	*a13(ATTACH_PROC),a10,L
;	jrz	wzxexit

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	wzxno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	wzxaction_table,a0
	move	*a0,a0,L
	call	a0

wzxno_interrupt
	rets

wzxexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	wzxright
	movk	MOVE_DOWN_LEFT,a1
wzxright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

wzxaction_table
	.long	wzxz,wzxpunch,wzxblock,wzxblock			;0-3
	.long	wzxsuper_punch,wzxsuper_punch,wzxblock,wzxblock	;4-7
	.long	wzxkick,wzxpunchkick,wzxblock,wzxblock		;8-11
	.long	wzxsuper_punch,wzxpunchkick,wzxblock,wzxblock	;12-15
	.long	wzxsuper_kick,wzxsuper_kick,wzxblock,wzxblock	;16-19
	.long	wzxgraboh,wzxgraboh,wzxblock,wzxblock		;20-23
	.long	wzxsuper_kick,wzxpunchkick,wzxblock,wzxblock	;24-27
	.long	wzxgraboh,wzxgraboh,wzxblock,wzxblock		;28-31


************
wzxblock
wzxgraboh
wzxz		;0
	rets

************
wzxpunch		;1

	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	.ref	bam_4_knee2_anim
	movi	bam_4_knee2_anim,a0
	calla	change_anim1a
	rets

************
wzxsuper_punch	;4

	rets

************
do_pile
	CALLA	FIND_AND_KILL_ENDLESS
;This flag is only set if bam bam has done repeated kicks!
	move	*a13(USR_VAR2),a0
	jrz	wzxz

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	wzxpunch

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
	movi	bam_3_pile_driver_anim,a0
	calla	change_anim1a
	rets

wzxpunchkick
wzxkick

;	move	*a13(STICK_VAL_CUR),a0
;	btst	PLAYER_DOWN_BIT,a0
;	jrz	wzxknee
;
;	move	*a13(STICK_REL_CUR),a0
;	btst	MOVE_TOWARD_BIT,a0
;	jrz	wzxknee
;
;	.ref	bam_hdbutts_anim
;	movi	bam_hdbutts_anim,a0
;	calla	change_anim1a
;	rets
;
;wzxknee
	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	movi	bam_4_knee2_anim,a0
	calla	change_anim1a
	rets

wzxsuper_kick	;16
;If stick is toward opponent, then do quick knees
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	wzxz

;Quick knees
	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	movi	bam_knees_anim,a0
	calla	change_anim1a
	rets

*****************************************************************************
mode_puppet2	;17

;	;check for the head-grab breaker
;	move	*a13(BUT_VAL_DOWN),a0
;	btst	PLAYER_KICK_BIT,a0
;	jrz	pbyout
;
;	;check the time - must do it within 20 ticks
;	move	*a13(HEAD_GRAB_TIME),a14
;	move	@PCNT,a0
;	sub	a14,a0
;	cmpi	KICK_OUT,a0
;	jrgt	pbyout
;
;	move	*a13(PLYR_TYPE),a14
;	cmpi	PTYPE_DRONE,a14
;	jrz	pbyout
;     
;	;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
;	move	*a13(ATTACH_PROC),a0,L
;	clr	a14
;	move	a14,*a13(ATTACH_PROC),L
;	move	a14,*a0(ATTACH_PROC),L
;	movi	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;	SETMODE	NORMAL
;	jruc	std_knee
;
;pbyout
	rets

*****************************************************************************
mode_headheld	;19
	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking

;Bozo reversal
	calla	bozo_check
	jrnc	inyfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	movi	bam_pogo_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	inytag
	movi	bam_neckbreaker_anim,a0
inytag	calla	change_anim1a

	rets
inyfail

;He may have let me go by hitting his block butn!
	move	*a13(ATTACH_PROC),a0,L
	jrnz	inyno_luck

;Make sure this guy is on ground
	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	inyno_luck

;hit_gnd

	movi	bam_3_head_held_stand_anim,a0
	calla	change_anim1a

inyno_luck
	rets

*****************************************************************************
mode_chokehold	;24
	rets

*****************************************************************************

;wcdVEL	equ	30000h		;38000h	;30000h
;wcdDVEL	equ	21f0eh		;27978h	;21f0eh
;wcdVEL	equ	38000h		;38000h	;30000h
;wcdDVEL	equ	30000h		;27978h	;21f0eh
wcdVEL	equ	3a000h		;38000h	;30000h
wcdDVEL	equ	31000h		;27978h	;21f0eh


 SUBR bam_velocity_table

;		X,	Z

	.long	0,	-wcdVEL	;0 UP

	.long	wcdDVEL,	-wcdDVEL	;1 UP-RIGHT

	.long	wcdVEL,	0	;2 RIGHT

	.long	wcdDVEL,	wcdDVEL	;3 DOWN-RIGHT

	.long	0,	wcdVEL	;4 DOWN

	.long	-wcdDVEL,	wcdDVEL	;5 DOWN-LEFT

	.long	-wcdVEL,	0	;6 LEFT

	.long	-wcdDVEL,	-wcdDVEL	;7 UP-LEFT


*****************************************************************************

 SUBR bam_rotate_anims_table
; old = up right
	.long	bam_stand2_anim		;new = up right
	.long	bam_2_to_4_turn_anim	;    = down right
	.long	bam_2_to_6_turn_anim	;    = down left ***
	.long	bam_2_to_8_turn_anim	;    = up left

; old = down right
	.long	bam_4_to_2_turn_anim	;new = up right
	.long	bam_stand4_anim		;    = down right
	.long	bam_4_to_6_turn_anim	;    = down left
	.long	bam_4_to_8_turn_anim	;    = up left ***

; old = down left
	.long	bam_6_to_2_turn_anim	;new = up right ***
	.long	bam_6_to_4_turn_anim	;    = down right
	.long	bam_stand6_anim		;    = down left
	.long	bam_6_to_8_turn_anim	;    = up left

; old = up left
	.long	bam_8_to_2_turn_anim	;new = up right
	.long	bam_8_to_4_turn_anim	;    = down right ***
	.long	bam_8_to_6_turn_anim	;    = down left
	.long	bam_stand8_anim		;    = up left


 SUBR bam_leg_anims_table
;  MOVE
;(ugh1 - UP)				FACING
	.long	bam_walk1_f2_anim	;1 (UP)
	.long	bam_walk1_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk1_f4_anim	;3 (RIGHT)
	.long	bam_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk1_f4_anim	;5 (DOWN)
	.long	bam_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk1_f2_anim	;7 (LEFT)
	.long	bam_walk1_f2_anim	;8 (UP-LEFT)

;(ugh2 - UP-RIGHT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk2_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk8_f4_anim	;5 (DOWN)
	.long	bam_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk4_f2_anim	;7 (LEFT)
	.long	bam_walk4_f2_anim	;8 (UP-LEFT)

;(ugh3 - RIGHT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk2_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk4_f4_anim	;5 (DOWN)
	.long	bam_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk6_f2_anim	;7 (LEFT)
	.long	bam_walk6_f2_anim	;8 (UP-LEFT)


;(ugh4 - DOWN-RIGHT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk8_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk4_f4_anim	;3 (RIGHT)
	.long	bam_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk2_f4_anim	;5 (DOWN)
	.long	bam_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk6_f2_anim	;8 (UP-LEFT)

;(ugh5 - DOWN)
	.long	bam_walk5_f2_anim	;1 (UP)
	.long	bam_walk5_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk5_f4_anim	;3 (RIGHT)
	.long	bam_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk5_f4_anim	;5 (DOWN)
	.long	bam_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk5_f2_anim	;7 (LEFT)
	.long	bam_walk5_f2_anim	;8 (UP-LEFT)

;(ugh6 - DOWN-LEFT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk6_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk2_f4_anim	;5 (DOWN)
	.long	bam_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk8_f2_anim	;8 (UP-LEFT)

;(ugh7 - LEFT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk6_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk6_f2_anim	;3 (RIGHT)
	.long	bam_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk4_f4_anim	;5 (DOWN)
	.long	bam_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk2_f2_anim	;8 (UP-LEFT)

;(ugh8 - UP-LEFT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk4_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk6_f2_anim	;3 (RIGHT)
	.long	bam_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk6_f4_anim	;5 (DOWN)
	.long	bam_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk2_f2_anim	;8 (UP-LEFT)


 SUBR bam_torso_anims_table
; old = up right
	.long	bam_torso2_anim		;new = up right
	.long	bam_2_to_4_turn2_anim	;    = down right
	.long	bam_2_to_6_turn2_anim	;    = down left ***
	.long	bam_2_to_8_turn2_anim	;    = up left

; old = down right
	.long	bam_4_to_2_turn2_anim	;new = up right
	.long	bam_torso4_anim		;    = down right
	.long	bam_4_to_6_turn2_anim	;    = down left
	.long	bam_4_to_8_turn2_anim	;    = up left ***

; old = down left
	.long	bam_6_to_2_turn2_anim	;new = up right ***
	.long	bam_6_to_4_turn2_anim	;    = down right
	.long	bam_torso6_anim		;    = down left
	.long	bam_6_to_8_turn2_anim	;    = up left

; old = up left
	.long	bam_8_to_2_turn2_anim	;new = up right
	.long	bam_8_to_4_turn2_anim	;    = down right ***
	.long	bam_8_to_6_turn2_anim	;    = down left
	.long	bam_torso8_anim		;    = up left


******************************************************************************

	.end

