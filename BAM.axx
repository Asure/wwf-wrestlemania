
	.file	"bam.asm"
	.title	"Bam Bam Bigelo specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"



	.ref	get_punch_dtime,ck_teammate_pin,raisearm_check
	.ref	can_pin,round_award,set_raisearm_bit
	.ref	change_anim1,change_anim1a
	.ref	change_anim2,change_anim2a
	.ref	keep_attached,drone_change_back,std_walk_fast,std_taunt
	.ref	get_opp_plyrmode,mode_dead,get_opp_process
	.ref	check_secret_moves,process_ptrs,master_keep_attached
	.ref	mode_choking,do_taunt,execute_walk,bounce_off_ropes
	.ref	climb_turnbuckle,ck_ignore,CLIMB_ROPES
	.ref	JUMP_ROPES,ADD_IF_SILENT,FIND_AND_KILL_ENDLESS
	.ref	DO_REVERSAL,PCNT,DO_REVERSAL_MESS,CHECK_COMBO_GO
	.ref	BONUS_MESS,BLOCK_WOOSH
	.ref	blocking_off
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_BAM_FINISHES
	.ref	bam_finish1_move
	.if NUM_BAM_FINISHES > 1
	.ref	bam_finish2_move
	.endif
	.endif


	.ref	wres_slave_anim
	.ref	bam_zip_anim
	.ref	start_run_anim

	.ref	bam_stand2_anim,bam_stand8_anim
	.ref	bam_stand4_anim,bam_stand6_anim
	.ref	bam_torso2_anim,bam_torso8_anim
	.ref	bam_torso4_anim,bam_torso6_anim
	.ref	bam_pogo_anim
	.ref	bam_3_hiptoss_anim

	.ref	bam_2_to_4_turn_anim,bam_8_to_6_turn_anim	;stand
	.ref	bam_4_to_2_turn_anim,bam_6_to_8_turn_anim
	.ref	bam_4_to_6_turn_anim,bam_6_to_4_turn_anim
	.ref	bam_2_to_8_turn_anim,bam_8_to_2_turn_anim
	.ref	bam_4_to_8_turn_anim,bam_6_to_2_turn_anim
	.ref	bam_2_to_6_turn_anim,bam_8_to_4_turn_anim

	.ref	bam_2_to_4_turn2_anim,bam_8_to_6_turn2_anim	;torso
	.ref	bam_4_to_2_turn2_anim,bam_6_to_8_turn2_anim
	.ref	bam_4_to_6_turn2_anim,bam_6_to_4_turn2_anim
	.ref	bam_2_to_8_turn2_anim,bam_8_to_2_turn2_anim
	.ref	bam_4_to_8_turn2_anim,bam_6_to_2_turn2_anim
	.ref	bam_2_to_6_turn2_anim,bam_8_to_4_turn2_anim

	.ref	bam_walk1_f2_anim,bam_walk2_f2_anim,bam_walk4_f2_anim
	.ref	bam_walk5_f2_anim,bam_walk6_f2_anim,bam_walk8_f2_anim

	.ref	bam_walk1_f4_anim,bam_walk2_f4_anim,bam_walk4_f4_anim
	.ref	bam_walk5_f4_anim,bam_walk6_f4_anim,bam_walk8_f4_anim

	.ref	bam_4_fpunch_anim
	.ref	bam_2_fpunch_anim
	.ref	bam_4_block_anim
	.ref	bam_2_butts_anim,bam_4_butts_anim

	.ref	bam_run2_anim

	.ref	bam_2_head_hit_anim,bam_4_head_hit_anim
	.ref	bam_2_head_hit2_anim,bam_4_head_hit2_anim
	.ref	bam_2_body_hit_anim,bam_4_body_hit_anim

	.ref	bam_2_punch_anim,bam_4_punch_anim
	.ref	bam_2_kick_anim,bam_4_kick_anim
	.ref	bam_flying_kick_anim

	.ref	bam_2_body_hit_anim,bam_4_body_hit_anim
	.ref	bam_hitonground_anim

	.ref	bam_2_butt_anim,bam_4_butt_anim
	.ref	bam_2_knee_anim,bam_4_knee_anim

	.ref	bam_head_hit2_anim,bam_head_hit_dizzy_anim
	.ref	bam_2_stomp_anim,bam_4_stomp_anim

	.ref	bam_4_push_anim
	.ref	bam_4_losebal_anim

	.ref	bam_2_grabfling_anim
	.ref	bam_4_grabfling_anim

	.ref	bam_fall_back_anim,bam_knees_anim

	.ref	bam_2_faceup_getup_anim
	.ref	bam_4_faceup_getup_anim

	.ref	bam_2_lbowdrop_anim,bam_4_lbowdrop_anim

	.ref	bam_4_jumpkick_anim

	.ref	bam_3_pile_driver_anim

	.ref	bam_4_graboh_anim,bam_heldoh_anim
	.ref	bam_2_graboh_anim
	.ref	bam_holdoh_anim
	.ref	bam_stndholdoh_anim

	.ref	bam_backbreaker_anim

	.ref	mode_inair2,mode_puppet
	.ref	bam_2_pin_anim
	.ref	bam_4_pin_anim

	.ref	bam_3_butt_drop_anim

	.ref	bam_climb_up_anim,bam_climb_down_anim,bam_bellyflop_anim
	.ref	bam_combo_knees_anim,bam_combo_punch_anim
	.ref	bam_2_raise_arm_anim,bam_4_raise_arm_anim

	.ref	bam_neckbreaker2_anim,bam_slamdwn_anim
	.ref	bam_4_superkick_anim,bam_3_hiptoss2_anim
	.ref	bam_neckbreaker_run_anim
	.ref	bam_fly_cline_anim,bam_4_slap_anim
	.ref	bam_neckbreaker_anim,bam_2_hair_pickup_anim
	.ref	bam_2_superkick_anim,bam_2_slap_anim
	.ref	bam_3_head_hold2_anim,bam_3_head_held_stand_anim
	.ref	bam_3_head_hold_anim
	.ref	bam_4_hair_pickup_anim
	.ref	bam_2_napalm_anim,bam_4_napalm_anim




bam_secret_moves
	.long	ediifirepnch	;must have this one

	.long	ediineck_grab
	.long	ediigrab_fling
	.long	ediihip_toss
	.long	ediigrab_fling2
	.long	ediihip_toss2
	.long	ediijumpkick
	.long	ediigrab_fling2
	.long	ediihip_toss2
	.long	ediinapalm
	.long	0


 SUBR	bam_smove_table
	.long	bam_charge_neckbreaker
	.long	bam_hdhold_combo1
	.long	bam_hdhold_pile
	.long	bam_hdhold_pogo
	.long	bam_hdhold_combo2
	.long	bam_grab_toss_air
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_BAM_FINISHES
	.long	bam_finish_move1
	.endif
	.if NUM_BAM_FINISHES > 1
	.long	bam_finish_move2
	.endif
	.long	0



ediijumpkick
	.word	B_SKICK,		J_ALL
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 32		;max
	.long	ediiscrt_flykick

ediiscrt_flykick
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ediiout
	cmpi	MODE_DEAD,a0
	jrz	ediiout
	cmpi	MODE_HEADHELD,a0
	jrz	ediiout
	cmpi	MODE_ATTACHED,a0
	jrz	ediiout

	movi	bam_4_jumpkick_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets


ediineck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32		;max
	.long	ediiscrt_neck

ediiscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ediiout
	cmpi	MODE_DEAD,a0
	jrz	ediiout
	cmpi	MODE_HEADHELD,a0
	jrz	ediiout
	cmpi	MODE_ATTACHED,a0
	jrz	ediiout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	ediiok2

	.ref	bam_3_fake_hold_anim
	movi	bam_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

ediiok2
	move	*a13(CLOSEST_XDIST),a1
	cmpi	100,a1
	jrgt	ediistd_grab

	movi	bam_3_head_hold2_anim,a0
	calla	change_anim1a

	rets

ediistd_grab
	movi	bam_3_head_hold_anim,a0
	calla	change_anim1a

	rets


ediinapalm
	.word	B_PUNCH,		J_ALL
	.word	J_DOWN,			J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 50 		;max
	.long	ediiscrt_napalm

ediiscrt_napalm
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	ediiout

	;only if opponent is on the ground (and not dead!)
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrne	ediiout

	;smart-target him (don't wanna hit standing guys)
	move	*a13(STATUS_FLAGS),a14,L
	ori	M_SMART_ATTACK,a14
	move	a14,*a13(STATUS_FLAGS),L
	calla	get_opp_process
	move	a0,*a13(SMART_TARGET),L

	FACE24	bam,napalm_anim
	calla	change_anim1a

	;do some sound here

	rets


ediihip_toss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	ediiscrt_hiptoss

ediiscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ediiout
	cmpi	MODE_DEAD,a0
	jrz	ediiout
	cmpi	MODE_HEADHELD,a0
	jrz	ediiout
	cmpi	MODE_INAIR,a0
	jrz	ediidoit
	cmpi	MODE_INAIR2,a0
	jrz	ediidoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	80h,a0
	jrgt	ediiout

ediidoit
	movi	bam_3_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets


ediigrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	ediiscrt_grabfling2

ediihip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	ediiscrt_grabfling2

ediiscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	ediiyes
	cmpi	MODE_RUNNING,a0
	jrz	ediiyes
	rets


ediigrab_fling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	ediiscrt_grabfling

ediiscrt_grabfling


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	ediiyes
	cmpi	MODE_RUNNING,a0
	jrnz	ediinope
ediiyes
	movi	bam_3_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets
ediinope
	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	ediiout
	cmpi	MODE_HEADHELD,a0
	jrz	ediiout
	cmpi	MODE_ONGROUND,a0
	jrz	ediiout
	cmpi	MODE_ATTACHED,a0
	jrz	ediiout


	FACE24	bam,grabfling_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,GRABFLING_T1,PUNCH_T2

	rets



ediifirepnch

	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	ediino_punch

	move	*a13(PLYRNUM),a0
	calla	get_punch_dtime
	cmpi	85,a0			;> min?
	jrlt	ediino_punch

	callr	ediiscrt_firepnch
	setc
	rets

ediino_punch
	clrc
	rets


ediiscrt_firepnch

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	ediiout
	cmpi	MODE_HEADHOLD,a0
	jrz	ediiout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ediiout

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	ediiout
	cmpi	MODE_ATTACHED,a0
	jrz	ediiout

ediiok
	FACE24	bam,fpunch_anim
	calla	change_anim1a
	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2
ediiout
	rets

	.if NUM_BAM_FINISHES
 SUBRP	bam_finish_move1

qkvlTIMEOUT	.equ	TSEC

qkvlend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		qkvlend_wait			; br = no

qkvlreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,qkvlreset
	movi		qkvlTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,qkvlreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,qkvlreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,qkvlreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,qkvlreset

	movi		bam_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_BAM_FINISHES > 1
 SUBRP	bam_finish_move2

adfwTIMEOUT	.equ	TSEC

adfwend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		adfwend_wait			; br = no

adfwreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,adfwreset
	movi		adfwTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,adfwreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,adfwreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,adfwreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,adfwreset

	movi		bam_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif



bam_hdhold_pogo

bbavTIMEOUT	.equ	60

bbavlp0
	SLEEPK	1
bbavlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	bbavcont
	cmpi	MODE_HEADHELD,a0
	jrnz	bbavlp0
bbavcont
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,bbavlp

	movi	bbavTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,bbavlp
	WAITSWITCH_DWN	B_SKICK,J_ALL,bbavlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	bbavslam
	cmpi	MODE_HEADHELD,a0
	jrnz	bbavlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	bbavlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	bbavlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	bbavis_reversal

bbavslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	bbavlp0				;ignore
	movk	31,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

bbavis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	bam_pogo_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	bbavlp


bmuhCHARGE_TIME	.equ	SM_USRW1

bam_charge_neckbreaker

bmuhstart_over
	clr	a14
	move	a14,*a13(bmuhCHARGE_TIME),W
bmuhloop1
	SLEEPK	1

	move	*a13(bmuhCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(bmuhCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_SPUNCH_BIT,a0
	jrz	bmuhp1

	jruc	bmuhloop1

bmuhp1

	move	*a13(bmuhCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	bmuhstart_over

	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	bmuhstart_over

	move	*a8(GETUP_TIME),a0
	jrnz	bmuhstart_over

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	bmuhstart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	bmuhstart_over
	cmpi	MODE_ONGROUND,a0
	jrz	bmuhstart_over
	cmpi	MODE_DEAD,a0
	jrz	bmuhstart_over

	movi	bam_neckbreaker2_anim,a14

	move	*a8(PLYRMODE),a0
	cmpi	MODE_RUNNING,a0
	jrnz	bmuhcont

	movi	bam_neckbreaker_run_anim,a14

bmuhcont
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEP	TSEC*3
	jruc	bmuhstart_over
	
bam_hdhold_pile

omsqTIMEOUT	.equ	60

omsqlp0
	SLEEPK	1
omsqlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	omsqcont
	cmpi	MODE_HEADHELD,a0
	jrnz	omsqlp0
omsqcont
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,omsqlp

	movi	omsqTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,omsqlp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,omsqlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	omsqslam
	cmpi	MODE_HEADHELD,a0
	jrnz	omsqlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	omsqlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	omsqlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	omsqis_reversal

omsqslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	omsqlp0				;ignore

	movk	7,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

omsqis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_3_pile_driver_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	omsqlp

bam_hdhold_combo1

ltjaTIMEOUT	.equ	60

ltjalp0
	SLEEPK	1
ltjalp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	ltjalp0
	calla	CHECK_COMBO_GO
	jrlt	ltjalp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,ltjalp

	movi	ltjaTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,ltjalp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,ltjalp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	ltjaslam
	cmpi	MODE_HEADHELD,a0
	jrnz	ltjalp0


ltjaslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	ltjalp0				;ignore


	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_combo_knees_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	ltjalp

bam_hdhold_combo2

lmtaTIMEOUT	.equ	60

lmtalp0
	SLEEPK	1
lmtalp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	lmtalp0
	calla	CHECK_COMBO_GO
	jrlt	lmtalp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,lmtalp

	movi	lmtaTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,lmtalp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,lmtalp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lmtaslam
	cmpi	MODE_HEADHELD,a0
	jrnz	lmtalp0

lmtaslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lmtalp0				;ignore


	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_combo_punch_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	lmtalp



bam_grab_toss_air

mrhpTIMEOUT	.equ	40

mrhplp0
	SLEEPK	1
mrhplp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,mrhplp

	movi	mrhpTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,mrhplp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,mrhplp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	mrhplp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	mrhplp0

	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
	cmpi	MODE_ONGROUND,a0
	jrz	mrhplp
	cmpi	MODE_DEAD,a0
	jrz	mrhplp
	cmpi	MODE_INAIR,a0
	jrz	mrhpdoit2
	cmpi	MODE_INAIR2,a0
	jrz	mrhpdoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	mrhpdoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	68h,a0
	jrgt	mrhplp

	movi	bam_3_hiptoss_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	mrhplp

mrhpdoit2	movi	bam_3_hiptoss2_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	mrhplp


 SUBR	bam_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	ujhcp1
	movi	bam_stand4_anim,a0
	calla	change_anim1a

	movi	bam_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

ujhcp1
	movi	bam_stand2_anim,a0
	calla	change_anim1a

	movi	bam_torso2_anim,a0
	calla	change_anim2a

	rets



 SUBR	move_bam

	movi	bam_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	svutmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

svutmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	.long	mode_choking		;25



mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	yhkuno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	yhkunope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	yhkunope
	movi	bam_fall_back_anim,a0
	calla	change_anim1a

	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

yhkunope


	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	yhkuopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	yhkuopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	yhkuno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	yhkuno_pin_yet
yhkuno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	yhkuraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	yhkuraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	yhkuno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	yhkuopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	bam,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

yhkuraisearm
	FACE24	bam,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

yhkutoo_far_to_pin
yhkuopp_notgnd
yhkuopp_not_dead
yhkuno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	yhkuimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	yhkunblk			;1 for down transitions
	callr	yhkublock			;& 1 for current buttons
	jrc	yhkunblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
yhkunblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	yhkupunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	yhkuaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	yhkuno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	yhkuno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

yhkuimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
yhkuno_climb
	calla	execute_walk

yhkuno_interrupt
	rets

yhkuaction_table
	.long	yhkuz,yhkupunch,yhkublock,yhkublock			;0-3
	.long	yhkusuper_punch,yhkusuper_punch,yhkublock,yhkublock	;4-7
	.long	yhkukick,yhkupunchkick,yhkublock,yhkublock		;8-11
	.long	yhkusuper_punch,yhkupunchkick,yhkublock,yhkublock	;12-15
	.long	yhkusuper_kick,yhkusuper_kick,yhkublock,yhkublock	;16-19
	.long	yhkugraboh,yhkugraboh,yhkublock,yhkublock		;20-23
	.long	yhkusuper_kick,yhkupunchkick,yhkublock,yhkublock	;24-27
	.long	yhkugraboh,yhkugraboh,yhkublock,yhkublock		;28-31

yhkuz		;0

	rets


yhkupunch		;1
	JJXM_INIT
	JJXM	NORMAL,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	DIZZY,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	BLOCK,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	ONGROUND,	160,140,yhkupunch_lbowdrop,yhkupunch_punch
	JJXM	RUNNING, 	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	BOUNCING,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	ONTURNBKL,		yhkupunch_punch
	JJXM	CLIMBTURNBKL,		yhkupunch_punch
	JJXM	INAIR,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	ATTACHED,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	DEAD,		160,140,yhkupunch_lbowdrop,yhkupunch_punch
	JJXM	OPPOVERHEAD,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	WAITANIM,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	GRAPPLE,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	MASTER,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	SLAVE,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	HEADHOLD,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	HEADHELD,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	CHOKEHOLD,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	PUPPET,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	PUPPET2,	 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM	INAIR2,		 50, 45,yhkupunch_hdbutt,yhkupunch_punch
	JJXM_END


yhkupunch_rets
	rets

yhkupunch_punch
std_punch

	FACE24	bam,punch_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,PUNCH_T1,PUNCH_T2
	rets

yhkupunch_hdbutt

	FACE24	bam,butt_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,HDBUTT_T1,HDBUTT_T2
	rets

yhkupunch_lbowdrop

	FACE24	bam,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,LBOWDROP_T1,LBOWDROP_T2
	rets


	rets

yhkublock		;2
std_block
	move	@blocking_off,a0
	jrnz	yhkuno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	bam_4_block_anim,a0
	calla	change_anim1

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

yhkuno_blocking
	setc
	rets


yhkusuper_punch	;4
	JJXM_INIT
	JJXM	NORMAL,		 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	DIZZY,		 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	BLOCK,		 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	ONGROUND,	160,140,yhkuspunch_lbowdrop,std_punch
	JJXM	RUNNING, 	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	BOUNCING,	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	ONTURNBKL,		yhkuspunch_jump
	JJXM	CLIMBTURNBKL,		std_punch
	JJXM	INAIR,		 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	ATTACHED,	 85, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	DEAD,		 160,140,yhkuspunch_lbowdrop,std_punch
	JJXM	OPPOVERHEAD,	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	WAITANIM,	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	GRAPPLE,	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	MASTER,		 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	SLAVE,		 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	HEADHOLD,	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	HEADHELD,		do_pile				;19
	JJXM	CHOKEHOLD,	 90, 55,yhkuspunch_special,yhkuspunch_jump
	JJXM	PUPPET,		 90, 45,yhkuspunch_special,yhkuspunch_jump
	JJXM	PUPPET2,	 90, 45,yhkuspunch_special,yhkuspunch_jump
	JJXM	INAIR2,		 90, 45,yhkuspunch_special,yhkuspunch_jump
	JJXM_END

yhkuspunch_rets
	rets

yhkuspunch_jump
	FACE24	bam,slap_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2

	rets

yhkuspunch_special

	move	*a13(CLOSEST_XDIST),a1
	cmpi	55,a1
	jrgt	yhkuspunch_jump
	FACE24	bam,butts_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,HDBUTT_T1,HDBUTT_T2
	rets

yhkuspunch_lbowdrop
 


	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	yhkuno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	yhkuno


	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	yhkuno


	FACE24	bam,hair_pickup_anim
	calla	change_anim1
	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

yhkuno
	FACE24	bam,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2

	rets


yhkukick		;8
	JJXM_INIT
	JJXM	NORMAL,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	DIZZY,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	BLOCK,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	ONGROUND,	160,140,yhkukick_stomp,yhkukick_kick
	JJXM	RUNNING,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	BOUNCING,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	ONTURNBKL,	 	yhkukick_kick
	JJXM	CLIMBTURNBKL,	 	yhkukick_kick
	JJXM	INAIR,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	ATTACHED,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	DEAD,		160,140,yhkukick_stomp,yhkukick_kick
	JJXM	OPPOVERHEAD,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	WAITANIM,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	GRAPPLE,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	MASTER,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	SLAVE,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	HEADHOLD,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	HEADHELD,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	CHOKEHOLD,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	PUPPET,		 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	PUPPET2,	 60, 92,yhkukick_knee,yhkukick_kick
	JJXM	INAIR2,		 	yhkukick_TB
	JJXM_END


yhkukick_TB

	.ref	bam_kick_TB_anim
	movi	bam_kick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

yhkukick_kick
std_kick

	FACE24	bam,kick_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

yhkukick_knee
std_knee

	FACE24	bam,knee_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

yhkukick_stomp
attack_stomp

	FACE24	bam,stomp_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2

	rets


yhkupunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets

yhkusuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	DIZZY,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	BLOCK,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	ONGROUND,	160,140,attack_stomp,std_kick
	JJXM	RUNNING,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	BOUNCING,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	ONTURNBKL,	 60, 96,yhkuskick_kick,std_kick
	JJXM	CLIMBTURNBKL,	 60, 96,yhkuskick_kick,std_kick
	JJXM	INAIR,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	ATTACHED,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	DEAD,		160,140,attack_stomp,std_kick
	JJXM	OPPOVERHEAD,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	WAITANIM,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	GRAPPLE,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	MASTER,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	SLAVE,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	HEADHOLD,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	HEADHELD,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	CHOKEHOLD,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	PUPPET,		 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	PUPPET2,	 60, 60,yhkuskick_special,yhkuskick_kick
	JJXM	INAIR2,		 	yhkukick_TB
	JJXM_END

yhkuskick_special
yhkuskick_kick

	FACE24	bam,superkick_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2

	rets



yhkugraboh		;8


	movi	bam_4_graboh_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	rets



zcqaXRUN_VAL	equ	BAM_XRUN
zcqaZDRIFT_VAL	equ	BAM_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	zcqano_vel

	calla	bounce_off_ropes

	movi	zcqaXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	zcqapos
	neg	a0
zcqapos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

zcqano_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	zcqaout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	zcqano_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	zcqacontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

zcqacontinue_run
zcqano_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-zcqaZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	zcqasetvel

	movi	zcqaZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	zcqasetvel

	clr	a1
zcqasetvel
	move	a1,*a13(OBJ_ZVEL),L

	move	*a13(DELAY_BUTNS),a0
	jrnz	zcqaout_of_control


	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	zcqaaction_table,a0
	move	*a0,a0,L
	call	a0
zcqaout_of_control
	rets

zcqaaction_table
	.long	zcqaz,zcqapunch,zcqablock,zcqablock			;0-3
	.long	zcqasuper_punch,zcqasuper_punch,zcqablock,zcqablock	;4-7
	.long	zcqakick,zcqapunchkick,zcqablock,zcqablock		;8-11
	.long	zcqasuper_punch,zcqapunchkick,zcqablock,zcqablock	;12-15
	.long	zcqasuper_kick,zcqasuper_kick,zcqablock,zcqablock	;16-19
	.long	zcqagraboh,zcqagraboh,zcqablock,zcqablock		;20-23
	.long	zcqasuper_kick,zcqapunchkick,zcqablock,zcqablock	;24-27
	.long	zcqagraboh,zcqagraboh,zcqablock,zcqablock		;28-31

zcqaz
	rets


zcqapunch		;1
zcqasuper_punch	;4
zcqapunchkick
zcqagraboh
	JJXM_INIT
	JJXM	NORMAL,			zcqapunch_clothesline
	JJXM	DIZZY,			zcqapunch_clothesline
	JJXM	BLOCK,			zcqapunch_clothesline
	JJXM	ONGROUND,	176,176,zcqapunch_bellyflop,zcqapunch_rets
	JJXM	RUNNING,		zcqapunch_clothesline
	JJXM	BOUNCING,		zcqapunch_clothesline
	JJXM	ONTURNBKL,		zcqapunch_clothesline
	JJXM	CLIMBTURNBKL,		zcqapunch_clothesline
	JJXM	INAIR,			zcqapunch_clothesline
	JJXM	ATTACHED,		zcqapunch_clothesline
	JJXM	DEAD,		176,176,zcqapunch_bellyflop,zcqapunch_rets
	JJXM	OPPOVERHEAD,		zcqapunch_clothesline
	JJXM	WAITANIM,		zcqapunch_clothesline
	JJXM	GRAPPLE,		zcqapunch_clothesline
	JJXM	MASTER,			zcqapunch_clothesline
	JJXM	SLAVE,			zcqapunch_clothesline
	JJXM	HEADHOLD,		zcqapunch_clothesline
	JJXM	HEADHELD,		zcqapunch_clothesline
	JJXM	CHOKEHOLD,		zcqapunch_clothesline
	JJXM	PUPPET,			zcqapunch_clothesline
	JJXM	PUPPET2,		zcqapunch_clothesline
	JJXM	INAIR2,			zcqapunch_clothesline
	JJXM_END


zcqapunch_rets
	rets

zcqapunch_clothesline
	move	*a13(MOVE_DIR),a1
	btst	MOVE_LEFT_BIT,a1
	jrnz	zcqalft
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID+70h,a0
	jrlt	zcqaok


	rets

zcqalft
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID-70h,a0
	jrgt	zcqaok


	rets
zcqaok
	move	*a13(MOVE_DIR),a1
	move	*a13(NEW_FACING_DIR),a0	;Current facing dir (9,10,6,5 only)
	sll	5,a0
	addi	zcqamv_tbl,a0
	move	*a0,a0,L
	btst	a0,a1
	jrz	zcqayes


	rets
zcqayes

	movi	bam_fly_cline_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

zcqamv_tbl	.long	0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
	.long	0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT


zcqapunch_bellyflop
attack_bellyflop

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	movi	bam_3_butt_drop_anim,a0
	calla	change_anim1a
	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
	rets

zcqablock		;2
	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block

zcqakick		;8
zcqasuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,			zcqakick_flyingkick
	JJXM	DIZZY,			zcqakick_flyingkick
	JJXM	BLOCK,			zcqakick_flyingkick
	JJXM	ONGROUND,	176,176,attack_bellyflop,zcqakick_rets
	JJXM	RUNNING,		zcqakick_flyingkick
	JJXM	BOUNCING,		zcqakick_flyingkick
	JJXM	ONTURNBKL,		zcqakick_flyingkick
	JJXM	CLIMBTURNBKL,		zcqakick_flyingkick
	JJXM	INAIR,			zcqakick_flyingkick
	JJXM	ATTACHED,		zcqakick_flyingkick
	JJXM	DEAD,		176,176,attack_bellyflop,zcqakick_rets
	JJXM	OPPOVERHEAD,		zcqakick_flyingkick
	JJXM	WAITANIM,		zcqakick_flyingkick
	JJXM	GRAPPLE,		zcqakick_flyingkick
	JJXM	MASTER,			zcqakick_flyingkick
	JJXM	SLAVE,			zcqakick_flyingkick
	JJXM	HEADHOLD,		zcqakick_flyingkick
	JJXM	HEADHELD,		zcqakick_flyingkick
	JJXM	CHOKEHOLD,		zcqakick_flyingkick
	JJXM	PUPPET,			zcqakick_flyingkick
	JJXM	PUPPET2,		zcqakick_flyingkick
	JJXM	INAIR2,			zcqakick_flyingkick
	JJXM_END


zcqakick_rets
	rets

zcqakick_flyingkick

	calla	ck_ignore
	jrc	zcqaz

	movi	bam_flying_kick_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets



mode_inair	;2

	rets


mode_attached	;3

	calla	keep_attached
	jrnz	hmowstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

hmowstill_attached
	rets



mode_onground	;4

	rets


mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	oqhinot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	bam_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING


oqhinot_ended
	rets



mode_onturnbkl	;6


	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	inrqno_climbdown

	movi	bam_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

inrqno_interrupt
	rets

inrqno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	inrqz

	X32	a0
	addi	inrqaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets



inrqaction_table
	.long	inrqz,inrqpunch,inrqblock,inrqblock			;0-3
	.long	inrqsuper_punch,inrqsuper_punch,inrqblock,inrqblock	;4-7
	.long	inrqkick,inrqpunchkick,inrqblock,inrqblock		;8-11
	.long	inrqsuper_punch,inrqpunchkick,inrqblock,inrqblock	;12-15
	.long	inrqsuper_kick,inrqsuper_kick,inrqblock,inrqblock	;16-19
	.long	inrqgraboh,inrqgraboh,inrqblock,inrqblock		;20-23
	.long	inrqsuper_kick,inrqpunchkick,inrqblock,inrqblock	;24-27
	.long	inrqgraboh,inrqgraboh,inrqblock,inrqblock		;28-31

inrqz
	rets

inrqpunch		;1
inrqblock		;2
inrqsuper_punch	;4
inrqkick		;8
inrqsuper_kick	;16
inrqgraboh
inrqpunchkick

	SETMODE	INAIR

	movi	bam_bellyflop_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,TURNDIVE_T1,TURNDIVE_T2

	rets


mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	dbkcno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	dbkcno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	dbkcno
	cmpi	45,a0
	jrlt	dbkcno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	dbkcpunchblock

dbkcno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	dbkcno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	dbkcset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	dbkcaction_table,a0
	move	*a0,a0,L
	call	a0

dbkcno_interrupt
	rets

dbkcset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

dbkcaction_table
	.long	dbkcz,dbkcpunchblock,dbkcz	;0-2
	.long	dbkcpunchblock		;3
	.long	dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz	;4-10
	.long	dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz	;11-17
	.long	dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz	;18-24
	.long	dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz,dbkcz	;25-31

dbkcz
	rets

dbkcpunchblock	;3


	SETMODE	NORMAL

	movi	bam_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,PUSH_T1,PUSH_T2

	rets


mode_dizzy	;8

	rets





mode_oppoverhead ;10

	move	*a13(ATTACH_PROC),a2,L		;proc attached to
	jrz	mqgznot_attached
	move	*a2(ATTACH_PROC),a0,L
	jrnz	mqgzstill_attached

mqgznot_attached

	move	*a13(ANIMODE),a0		;* remove this????
	btst	MODE_UNINT_BIT,a0		;*
	jrnz	mqgzno_interrupt			;*

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	CALLA	FIND_AND_KILL_ENDLESS
	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

	rets

mqgzstill_attached
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	mqgzno_interrupt

	move	*a13(FACING_DIR),a0
	andni	MOVE_UP,a0
	ori	MOVE_DOWN,a0
	move	a0,*a13(FACING_DIR)
	move	a0,*a13(NEW_FACING_DIR)

	move	*a13(STICK_VAL_CUR),a0
	jrz	mqgzstand

	move	a0,*a13(MOVE_DIR)
	calla	execute_walk

	movi	bam_holdoh_anim,a0
	calla	change_anim2
 	jruc	mqgzck_butns
mqgzstand
	clr	a0
	move	a0,*a13(MOVE_DIR)
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	movi	bam_stndholdoh_anim,a0
	calla	change_anim1

mqgzck_butns

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	mqgzaction_table,a0
	move	*a0,a0,L
	call	a0

mqgzno_interrupt
	rets

mqgzaction_table
	.long	mqgzz,mqgzpunch,mqgzblock,mqgzblock			;0-3
	.long	mqgzsuper_punch,mqgzsuper_punch,mqgzblock,mqgzblock	;4-7
	.long	mqgzkick,mqgzpunchkick,mqgzblock,mqgzblock		;8-11
	.long	mqgzsuper_punch,mqgzpunchkick,mqgzblock,mqgzblock	;12-15
	.long	mqgzsuper_kick,mqgzsuper_kick,mqgzblock,mqgzblock	;16-19
	.long	mqgzgraboh,mqgzgraboh,mqgzblock,mqgzblock		;20-23
	.long	mqgzsuper_kick,mqgzpunchkick,mqgzblock,mqgzblock	;24-27
	.long	mqgzgraboh,mqgzgraboh,mqgzblock,mqgzblock		;28-31

mqgzz
	rets

mqgzpunch		;1
mqgzblock		;2
mqgzsuper_punch	;4
mqgzkick		;8
mqgzpunchkick	;9


	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_slamdwn_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,PUNCH_T1,PUNCH_T2

	rets

mqgzsuper_kick	;16
mqgzgraboh		;20

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	mqgzkick

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_backbreaker_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets


mode_climbturnbkl	;11

	rets


mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	nahfnot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

nahfnot_ended
	rets



mode_grapple	;13

	rets



mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets


mode_slave	;15
	rets


mode_headhold	;16

	.ref	bozo_check
	calla	bozo_check
	jrnc	espdfail

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	movi	bam_pogo_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	espdtag
	movi	bam_neckbreaker_anim,a0
espdtag	calla	change_anim1a

	rets

espdfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	espdexit


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	espdno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	espdaction_table,a0
	move	*a0,a0,L
	call	a0

espdno_interrupt
	rets

espdexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	espdright
	movk	MOVE_DOWN_LEFT,a1
espdright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

espdaction_table
	.long	espdz,espdpunch,espdblock,espdblock			;0-3
	.long	espdsuper_punch,espdsuper_punch,espdblock,espdblock	;4-7
	.long	espdkick,espdpunchkick,espdblock,espdblock		;8-11
	.long	espdsuper_punch,espdpunchkick,espdblock,espdblock	;12-15
	.long	espdsuper_kick,espdsuper_kick,espdblock,espdblock	;16-19
	.long	espdgraboh,espdgraboh,espdblock,espdblock		;20-23
	.long	espdsuper_kick,espdpunchkick,espdblock,espdblock	;24-27
	.long	espdgraboh,espdgraboh,espdblock,espdblock		;28-31


espdblock
espdgraboh
espdz		;0
	rets

espdpunch		;1

	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	.ref	bam_4_knee2_anim
	movi	bam_4_knee2_anim,a0
	calla	change_anim1a
	rets

espdsuper_punch	;4

	rets

do_pile
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(USR_VAR2),a0
	jrz	espdz

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	espdpunch

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
	movi	bam_3_pile_driver_anim,a0
	calla	change_anim1a
	rets

espdpunchkick
espdkick

	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	movi	bam_4_knee2_anim,a0
	calla	change_anim1a
	rets

espdsuper_kick	;16
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	espdz

	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	movi	bam_knees_anim,a0
	calla	change_anim1a
	rets

mode_puppet2	;17

	rets

mode_headheld	;19
	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking

	calla	bozo_check
	jrnc	ucmkfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	movi	bam_pogo_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	ucmktag
	movi	bam_neckbreaker_anim,a0
ucmktag	calla	change_anim1a

	rets
ucmkfail

	move	*a13(ATTACH_PROC),a0,L
	jrnz	ucmkno_luck

	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	ucmkno_luck


	movi	bam_3_head_held_stand_anim,a0
	calla	change_anim1a

ucmkno_luck
	rets

mode_chokehold	;24
	rets


getpVEL	equ	3a000h		;38000h	;30000h
getpDVEL	equ	31000h		;27978h	;21f0eh


 SUBR bam_velocity_table


	.long	0,	-getpVEL	;0 UP

	.long	getpDVEL,	-getpDVEL	;1 UP-RIGHT

	.long	getpVEL,	0	;2 RIGHT

	.long	getpDVEL,	getpDVEL	;3 DOWN-RIGHT

	.long	0,	getpVEL	;4 DOWN

	.long	-getpDVEL,	getpDVEL	;5 DOWN-LEFT

	.long	-getpVEL,	0	;6 LEFT

	.long	-getpDVEL,	-getpDVEL	;7 UP-LEFT



 SUBR bam_rotate_anims_table
	.long	bam_stand2_anim		;new = up right
	.long	bam_2_to_4_turn_anim	;    = down right
	.long	bam_2_to_6_turn_anim	;    = down left ***
	.long	bam_2_to_8_turn_anim	;    = up left

	.long	bam_4_to_2_turn_anim	;new = up right
	.long	bam_stand4_anim		;    = down right
	.long	bam_4_to_6_turn_anim	;    = down left
	.long	bam_4_to_8_turn_anim	;    = up left ***

	.long	bam_6_to_2_turn_anim	;new = up right ***
	.long	bam_6_to_4_turn_anim	;    = down right
	.long	bam_stand6_anim		;    = down left
	.long	bam_6_to_8_turn_anim	;    = up left

	.long	bam_8_to_2_turn_anim	;new = up right
	.long	bam_8_to_4_turn_anim	;    = down right ***
	.long	bam_8_to_6_turn_anim	;    = down left
	.long	bam_stand8_anim		;    = up left


 SUBR bam_leg_anims_table
	.long	bam_walk1_f2_anim	;1 (UP)
	.long	bam_walk1_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk1_f4_anim	;3 (RIGHT)
	.long	bam_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk1_f4_anim	;5 (DOWN)
	.long	bam_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk1_f2_anim	;7 (LEFT)
	.long	bam_walk1_f2_anim	;8 (UP-LEFT)

	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk2_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk8_f4_anim	;5 (DOWN)
	.long	bam_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk4_f2_anim	;7 (LEFT)
	.long	bam_walk4_f2_anim	;8 (UP-LEFT)

	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk2_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk4_f4_anim	;5 (DOWN)
	.long	bam_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk6_f2_anim	;7 (LEFT)
	.long	bam_walk6_f2_anim	;8 (UP-LEFT)


	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk8_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk4_f4_anim	;3 (RIGHT)
	.long	bam_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk2_f4_anim	;5 (DOWN)
	.long	bam_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk6_f2_anim	;8 (UP-LEFT)

	.long	bam_walk5_f2_anim	;1 (UP)
	.long	bam_walk5_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk5_f4_anim	;3 (RIGHT)
	.long	bam_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk5_f4_anim	;5 (DOWN)
	.long	bam_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk5_f2_anim	;7 (LEFT)
	.long	bam_walk5_f2_anim	;8 (UP-LEFT)

	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk6_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk2_f4_anim	;5 (DOWN)
	.long	bam_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk8_f2_anim	;8 (UP-LEFT)

	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk6_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk6_f2_anim	;3 (RIGHT)
	.long	bam_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk4_f4_anim	;5 (DOWN)
	.long	bam_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk2_f2_anim	;8 (UP-LEFT)

	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk4_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk6_f2_anim	;3 (RIGHT)
	.long	bam_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk6_f4_anim	;5 (DOWN)
	.long	bam_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk2_f2_anim	;8 (UP-LEFT)


 SUBR bam_torso_anims_table
	.long	bam_torso2_anim		;new = up right
	.long	bam_2_to_4_turn2_anim	;    = down right
	.long	bam_2_to_6_turn2_anim	;    = down left ***
	.long	bam_2_to_8_turn2_anim	;    = up left

	.long	bam_4_to_2_turn2_anim	;new = up right
	.long	bam_torso4_anim		;    = down right
	.long	bam_4_to_6_turn2_anim	;    = down left
	.long	bam_4_to_8_turn2_anim	;    = up left ***

	.long	bam_6_to_2_turn2_anim	;new = up right ***
	.long	bam_6_to_4_turn2_anim	;    = down right
	.long	bam_torso6_anim		;    = down left
	.long	bam_6_to_8_turn2_anim	;    = up left

	.long	bam_8_to_2_turn2_anim	;new = up right
	.long	bam_8_to_4_turn2_anim	;    = down right ***
	.long	bam_8_to_6_turn2_anim	;    = down left
	.long	bam_torso8_anim		;    = up left



	.end

