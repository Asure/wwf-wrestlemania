**************************************************************
*
* Software:		Jamie Rivett
* Initiated:		5/17/94
*
* COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
*
**************************************************************

	.file	"bam.asm"
	.title	"Bam Bam Bigelo specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"


******************************************************************************
* EXTERNAL REFERENCES

	.ref	get_punch_dtime,ck_teammate_pin,raisearm_check
	.ref	can_pin,round_award,set_raisearm_bit
	.ref	change_anim1,change_anim1a
	.ref	change_anim2,change_anim2a
	.ref	keep_attached,drone_change_back,std_walk_fast,std_taunt
	.ref	get_opp_plyrmode,mode_dead,get_opp_process
	.ref	check_secret_moves,process_ptrs,master_keep_attached
	.ref	mode_choking,do_taunt,execute_walk,bounce_off_ropes
	.ref	climb_turnbuckle,ck_ignore,CLIMB_ROPES
	.ref	JUMP_ROPES,ADD_IF_SILENT,FIND_AND_KILL_ENDLESS
	.ref	DO_REVERSAL,PCNT,DO_REVERSAL_MESS,CHECK_COMBO_GO
	.ref	BONUS_MESS,BLOCK_WOOSH
	.ref	blocking_off
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_BAM_FINISHES
	.ref	bam_finish1_move
	.if NUM_BAM_FINISHES > 1
	.ref	bam_finish2_move
	.endif
	.endif

******************************************************************************
* ANIMATION SEQUENCES

	.ref	wres_slave_anim
	.ref	bam_zip_anim
	.ref	start_run_anim

	.ref	bam_stand2_anim,bam_stand8_anim
	.ref	bam_stand4_anim,bam_stand6_anim
	.ref	bam_torso2_anim,bam_torso8_anim
	.ref	bam_torso4_anim,bam_torso6_anim
	.ref	bam_pogo_anim
	.ref	bam_3_hiptoss_anim

	.ref	bam_2_to_4_turn_anim,bam_8_to_6_turn_anim	;stand
	.ref	bam_4_to_2_turn_anim,bam_6_to_8_turn_anim
	.ref	bam_4_to_6_turn_anim,bam_6_to_4_turn_anim
	.ref	bam_2_to_8_turn_anim,bam_8_to_2_turn_anim
	.ref	bam_4_to_8_turn_anim,bam_6_to_2_turn_anim
	.ref	bam_2_to_6_turn_anim,bam_8_to_4_turn_anim

	.ref	bam_2_to_4_turn2_anim,bam_8_to_6_turn2_anim	;torso
	.ref	bam_4_to_2_turn2_anim,bam_6_to_8_turn2_anim
	.ref	bam_4_to_6_turn2_anim,bam_6_to_4_turn2_anim
	.ref	bam_2_to_8_turn2_anim,bam_8_to_2_turn2_anim
	.ref	bam_4_to_8_turn2_anim,bam_6_to_2_turn2_anim
	.ref	bam_2_to_6_turn2_anim,bam_8_to_4_turn2_anim

	.ref	bam_walk1_f2_anim,bam_walk2_f2_anim,bam_walk4_f2_anim
	.ref	bam_walk5_f2_anim,bam_walk6_f2_anim,bam_walk8_f2_anim

	.ref	bam_walk1_f4_anim,bam_walk2_f4_anim,bam_walk4_f4_anim
	.ref	bam_walk5_f4_anim,bam_walk6_f4_anim,bam_walk8_f4_anim

	.ref	bam_4_fpunch_anim
	.ref	bam_2_fpunch_anim
	.ref	bam_4_block_anim
	.ref	bam_2_butts_anim,bam_4_butts_anim

	.ref	bam_run2_anim

	.ref	bam_2_head_hit_anim,bam_4_head_hit_anim
	.ref	bam_2_head_hit2_anim,bam_4_head_hit2_anim
	.ref	bam_2_body_hit_anim,bam_4_body_hit_anim

	.ref	bam_2_punch_anim,bam_4_punch_anim
	.ref	bam_2_kick_anim,bam_4_kick_anim
	.ref	bam_flying_kick_anim

	.ref	bam_2_body_hit_anim,bam_4_body_hit_anim
	.ref	bam_hitonground_anim

	.ref	bam_2_butt_anim,bam_4_butt_anim
	.ref	bam_2_knee_anim,bam_4_knee_anim
;	.ref	bam_4_bigboot_anim

	.ref	bam_head_hit2_anim,bam_head_hit_dizzy_anim
	.ref	bam_2_stomp_anim,bam_4_stomp_anim

	.ref	bam_4_push_anim
	.ref	bam_4_losebal_anim

	.ref	bam_2_grabfling_anim
	.ref	bam_4_grabfling_anim

	.ref	bam_fall_back_anim,bam_knees_anim

	.ref	bam_2_faceup_getup_anim
	.ref	bam_4_faceup_getup_anim

	.ref	bam_2_lbowdrop_anim,bam_4_lbowdrop_anim

	.ref	bam_4_jumpkick_anim

;	.ref	bam_running_headbutt
	.ref	bam_3_pile_driver_anim

	.ref	bam_4_graboh_anim,bam_heldoh_anim
	.ref	bam_2_graboh_anim
	.ref	bam_holdoh_anim
	.ref	bam_stndholdoh_anim

	.ref	bam_backbreaker_anim

	.ref	mode_inair2,mode_puppet
	.ref	bam_2_pin_anim
	.ref	bam_4_pin_anim

	.ref	bam_3_butt_drop_anim

	.ref	bam_climb_up_anim,bam_climb_down_anim,bam_bellyflop_anim
	.ref	bam_combo_knees_anim,bam_combo_punch_anim
	.ref	bam_2_raise_arm_anim,bam_4_raise_arm_anim

	.ref	bam_neckbreaker2_anim,bam_slamdwn_anim
	.ref	bam_4_superkick_anim,bam_3_hiptoss2_anim
	.ref	bam_neckbreaker_run_anim
	.ref	bam_fly_cline_anim,bam_4_slap_anim
	.ref	bam_neckbreaker_anim,bam_2_hair_pickup_anim
	.ref	bam_2_superkick_anim,bam_2_slap_anim
	.ref	bam_3_head_hold2_anim,bam_3_head_held_stand_anim
	.ref	bam_3_head_hold_anim
	.ref	bam_4_hair_pickup_anim
	.ref	bam_2_napalm_anim,bam_4_napalm_anim

******************************************************************************
* SYMBOLS DEFINED IN THIS FILE

******************************************************************************
* EQUATES FOR THIS FILE

*****************************************************************************

bam_secret_moves
;Button held down moves need to be first entry
	.long	tcglfirepnch	;must have this one

	.long	tcglneck_grab
	.long	tcglgrab_fling
	.long	tcglhip_toss
	.long	tcglgrab_fling2
	.long	tcglhip_toss2
	.long	tcgljumpkick
	.long	tcglgrab_fling2
	.long	tcglhip_toss2
	.long	tcglnapalm
	.long	0

******************************************************************************
*
* SPECIAL MOVE PROCESSES - Secret moves
*
;a8=process of wrestler

 SUBR	bam_smove_table
	.long	bam_charge_neckbreaker
	.long	bam_hdhold_combo1
	.long	bam_hdhold_pile
	.long	bam_hdhold_pogo
	.long	bam_hdhold_combo2
;	.long	bam_hdhold_anti_combo
	.long	bam_grab_toss_air
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_BAM_FINISHES
	.long	bam_finish_move1
	.endif
	.if NUM_BAM_FINISHES > 1
	.long	bam_finish_move2
	.endif
	.long	0

;	.long	bam_hdhold_graboh
;	.long	bam_hdhold_neckbreaker

*******************************************************************************

tcgljumpkick
	.word	B_SKICK,		J_ALL
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 32		;max
	.long	tcglscrt_flykick

tcglscrt_flykick
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	tcglout
	cmpi	MODE_DEAD,a0
	jrz	tcglout
	cmpi	MODE_HEADHELD,a0
	jrz	tcglout
	cmpi	MODE_ATTACHED,a0
	jrz	tcglout

	movi	bam_4_jumpkick_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

*******************************************************************************

tcglneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32		;max
	.long	tcglscrt_neck

tcglscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	tcglout
	cmpi	MODE_DEAD,a0
	jrz	tcglout
	cmpi	MODE_HEADHELD,a0
	jrz	tcglout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	tcglout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	tcglok2

;This head grab is too close (in terms of time) to most recent grab
	.ref	bam_3_fake_hold_anim
	movi	bam_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

tcglok2
	move	*a13(CLOSEST_XDIST),a1
	cmpi	100,a1
	jrgt	tcglstd_grab

	movi	bam_3_head_hold2_anim,a0
	calla	change_anim1a

	rets

tcglstd_grab
	movi	bam_3_head_hold_anim,a0
	calla	change_anim1a

	rets

*******************************************************************************

tcglnapalm
	.word	B_PUNCH,		J_ALL
	.word	J_DOWN,			J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 50 		;max
	.long	tcglscrt_napalm

tcglscrt_napalm
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	tcglout

	;only if opponent is on the ground (and not dead!)
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrne	tcglout

	;smart-target him (don't wanna hit standing guys)
	move	*a13(STATUS_FLAGS),a14,L
	ori	M_SMART_ATTACK,a14
	move	a14,*a13(STATUS_FLAGS),L
	calla	get_opp_process
	move	a0,*a13(SMART_TARGET),L

	FACE24	bam,napalm_anim
	calla	change_anim1a

	;do some sound here

	rets

*******************************************************************************

tcglhip_toss
;	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	tcglscrt_hiptoss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	tcglscrt_hiptoss

tcglscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

;Don't do it when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	tcglout
;	cmpi	MODE_BLOCK,a0
;	jrz	tcglout
	cmpi	MODE_DEAD,a0
	jrz	tcglout
	cmpi	MODE_HEADHELD,a0
	jrz	tcglout
	cmpi	MODE_INAIR,a0
	jrz	tcgldoit
	cmpi	MODE_INAIR2,a0
	jrz	tcgldoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	80h,a0
	jrgt	tcglout

tcgldoit
	movi	bam_3_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets

*******************************************************************************

tcglgrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	tcglscrt_grabfling2

tcglhip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	tcglscrt_grabfling2

tcglscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	tcglyes
	cmpi	MODE_RUNNING,a0
	jrz	tcglyes
	rets

*******************************************************************************

tcglgrab_fling
;	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
;	.word	8000h | 10		;max
;	.long	tcglscrt_grabfling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	tcglscrt_grabfling

tcglscrt_grabfling

;Make this miss, rotate to missed opponent,
;and stay rotated to flung opponent, also make
;this work from both angles!

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

;If opponent is running, do a hip toss
	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	tcglyes
	cmpi	MODE_RUNNING,a0
	jrnz	tcglnope
tcglyes
	movi	bam_3_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets
tcglnope
;Don't fling when he is on ground
	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	tcglout
	cmpi	MODE_HEADHELD,a0
	jrz	tcglout
	cmpi	MODE_ONGROUND,a0
	jrz	tcglout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	tcglout

;	move	*a13(LAST_FLING_ATTEMPT),a14,L
;	move	@PCNT,a0,L
;	sub	a14,a0
;	cmpi	3*60,a0
;	jrge	tcglok2a
;
;	FACE24	bam,slap_anim
;	calla	change_anim1a
;
;	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2
;	rets
;
;tcglok2a
;	move	@PCNT,a14,L			;use 32-bit PCNT!
;	move	a14,*a13(LAST_FLING_ATTEMPT),L

	FACE24	bam,grabfling_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,GRABFLING_T1,PUNCH_T2

	rets


*******************************************************************************

tcglfirepnch

	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	tcglno_punch

	move	*a13(PLYRNUM),a0
	calla	get_punch_dtime
	cmpi	85,a0			;> min?
	jrlt	tcglno_punch

	callr	tcglscrt_firepnch
	setc
	rets

tcglno_punch
	clrc
	rets


tcglscrt_firepnch

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	tcglout
	cmpi	MODE_HEADHOLD,a0
	jrz	tcglout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tcglout

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrz	tcglout
;Mode held overhead!
	cmpi	MODE_ATTACHED,a0
	jrz	tcglout

tcglok
	FACE24	bam,fpunch_anim
	calla	change_anim1a
	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2
tcglout
	rets

	.if NUM_BAM_FINISHES
******************************************************************************
 SUBRP	bam_finish_move1

tyipTIMEOUT	.equ	TSEC

tyipend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		tyipend_wait			; br = no

tyipreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,tyipreset
	movi		tyipTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,tyipreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,tyipreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,tyipreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,tyipreset

	movi		bam_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_BAM_FINISHES > 1
******************************************************************************
 SUBRP	bam_finish_move2

obncTIMEOUT	.equ	TSEC

obncend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		obncend_wait			; br = no

obncreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,obncreset
	movi		obncTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,obncreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,obncreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,obncreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,obncreset

	movi		bam_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif


*****************************************************************************

bam_hdhold_pogo

fgaoTIMEOUT	.equ	60

fgaolp0
	SLEEPK	1
fgaolp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	fgaocont
	cmpi	MODE_HEADHELD,a0
	jrnz	fgaolp0
fgaocont
	clr	a11

;	WAITSWITCH_DWN	J_UP,0,fgaolp
	WAITSWITCH_DWN	J_DOWN,0,fgaolp

	movi	fgaoTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,fgaolp
	WAITSWITCH_DWN	B_SKICK,J_ALL,fgaolp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	fgaoslam
	cmpi	MODE_HEADHELD,a0
	jrnz	fgaolp0
	move	*a8(I_WILL_DIE),A14
	jrnz	fgaolp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	fgaolp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	fgaois_reversal

fgaoslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	fgaolp0				;ignore
	movk	31,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

fgaois_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	bam_pogo_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	fgaolp

*******************************************************************************

;	STRUCTPD
;	WORD		dcidCHARGE_TIME	;UDW
dcidCHARGE_TIME	.equ	SM_USRW1

bam_charge_neckbreaker

dcidstart_over
	clr	a14
	move	a14,*a13(dcidCHARGE_TIME),W
dcidloop1
	SLEEPK	1

	move	*a13(dcidCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(dcidCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_SPUNCH_BIT,a0
	jrz	dcidp1

	jruc	dcidloop1

dcidp1

;no longer holding button
	move	*a13(dcidCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	dcidstart_over

;Success!  Check for the UNINT bit, then queue it up.
	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	dcidstart_over

	move	*a8(GETUP_TIME),a0
	jrnz	dcidstart_over

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	dcidstart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	dcidstart_over
	cmpi	MODE_ONGROUND,a0
	jrz	dcidstart_over
	cmpi	MODE_DEAD,a0
	jrz	dcidstart_over

	movi	bam_neckbreaker2_anim,a14

	move	*a8(PLYRMODE),a0
	cmpi	MODE_RUNNING,a0
	jrnz	dcidcont

	movi	bam_neckbreaker_run_anim,a14

dcidcont
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEP	TSEC*3
	jruc	dcidstart_over
	
;*****************************************************************************
;bam_hdhold_neckbreaker
;
;dcidTIMEOUT	.equ	60
;
;dcidlp0
;	SLEEPK	1
;dcidlp
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHOLD,a0
;	jrz	dcidcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	dcidlp0
;dcidcont
;	clr	a11
;
;	WAITSWITCH_DWN	B_SPUNCH,0,dcidlp
;
;	movi	dcidTIMEOUT,a11
;
;	WAITSWITCH_DWN	B_SKICK,0,dcidlp
;	WAITSWITCH_DWN	B_SPUNCH,0,dcidlp
;	WAITSWITCH_DWN	B_SKICK,0,dcidlp
;
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHELD,a0
;	jrnz	dcidslam
;	move	*a8(I_WILL_DIE),A14
;	jrnz	dcidlp0
;
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	dcidlp0				;ignore
;
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	;target WHOHITME -- don't hit anyone else
;	SMRTTGT	a8,WHOHITME
;
;	;immobilize WHOHITME
;	move	*a8(WHOHITME),a0,L
;	jruc	dcidis_reversal
;
;dcidslam
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	dcidlp0				;ignore
;
;	movk	4,a10
;	CREATE	MESSAGE_PID,BONUS_MESS
;
;	;target WHOIHIT -- don't hit anyone else
;	SMRTTGT	a8,WHOIHIT
;
;	;immobilize WHOIHIT
;	move	*a8(WHOIHIT),a0,L
;
;dcidis_reversal
;	movk	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;
;	CALLA	FIND_AND_KILL_ENDLESS
;
;	movi	bam_neckbreaker_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	SLEEPK	20
;
;	jruc	dcidlp
;
;*****************************************************************************
;bam_hdhold_graboh
;
;dcidTIMEOUT	.equ	60
;
;dcidlp0
;	SLEEPK	1
;dcidlp
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHOLD,a0
;	jrz	dcidcont0
;	cmpi	MODE_HEADHELD,a0
;	jrnz	dcidlp0
;dcidcont0
;	clr	a11
;
;	WAITSWITCH_DWN	J_DOWN,0,dcidlp
;
;	movi	dcidTIMEOUT,a11
;
;	WAITSWITCH_DWN	J_DOWN_TOWARD,0,dcidlp
;	WAITSWITCH_DWN	J_TOWARD,0,dcidlp
;	WAITSWITCH_DWN	B_KICK,J_ALL,dcidlp
;
;	move	*a8(PLYRMODE),a0
;	cmpi	MODE_HEADHOLD,a0
;	jrz	dciddograb
;	cmpi	MODE_HEADHELD,a0
;	jrnz	dcidlp0
;	move	*a8(I_WILL_DIE),A14
;	jrnz	dcidlp0
;
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	dcidlp0				;ignore
;
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	;target WHOHITME -- don't hit anyone else
;	SMRTTGT	a8,WHOHITME
;
;	;immobilize WHOHITME
;	move	*a8(WHOHITME),a0,L
;	jruc	dcidis_reversal
;
;dciddograb
;	move	*a8(IMMOBILIZE_TIME),a14
;	jrnz	dcidlp0				;ignore
;
;	movk	6,a10
;	CREATE	MESSAGE_PID,BONUS_MESS
;
;	;target WHOIHIT -- don't hit anyone else
;	SMRTTGT	a8,WHOIHIT
;
;	;immobilize WHOIHIT
;	move	*a8(WHOIHIT),a0,L
;
;dcidis_reversal
;	movk	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;
;	CALLA	FIND_AND_KILL_ENDLESS
;
;	movi	bam_4_graboh_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	SLEEPK	20
;
;	jruc	dcidlp
;
*****************************************************************************
bam_hdhold_pile

wfsyTIMEOUT	.equ	60

wfsylp0
	SLEEPK	1
wfsylp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wfsycont
	cmpi	MODE_HEADHELD,a0
	jrnz	wfsylp0
wfsycont
	clr	a11

;	WAITSWITCH_DWN	J_AWAY,0,wfsylp
	WAITSWITCH_DWN	J_TOWARD,0,wfsylp

	movi	wfsyTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,wfsylp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,wfsylp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wfsyslam
	cmpi	MODE_HEADHELD,a0
	jrnz	wfsylp0
	move	*a8(I_WILL_DIE),A14
	jrnz	wfsylp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wfsylp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	wfsyis_reversal

wfsyslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wfsylp0				;ignore

	movk	7,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

wfsyis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_3_pile_driver_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	wfsylp

*******************************************************************************
*
bam_hdhold_combo1

rtgiTIMEOUT	.equ	60

rtgilp0
	SLEEPK	1
rtgilp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	rtgilp0
;	jrz	rtgicont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	rtgilp0
;rtgicont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	rtgilp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,rtgilp

	movi	rtgiTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,rtgilp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,rtgilp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	rtgislam
	cmpi	MODE_HEADHELD,a0
	jrnz	rtgilp0


rtgislam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	rtgilp0				;ignore

;Start combo rules here
;	move	*a8(ATTACH_PROC),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)

	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_combo_knees_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	rtgilp

;*******************************************************************************
;*
;bam_hdhold_anti_combo
;
;rtgiTIMEOUT	.equ	80
;
;rtgilp0
;	SLEEPK	1
;rtgilp
;;Is my opponent in combo mode?
;;	move	*a8(IMMOBILIZE_TIME),a14
;;	jrz	rtgilp0
;;	move	*a8(CLOSEST_NUM),a0
;;	X32	a0
;;	addi	process_ptrs,a0
;;	move	*a0,a0,L
;;	move	*a0(COMBO_COUNT),a0
;;	jrz	rtgilp0
;
;	clr	a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,rtgilp
;
;	movi	rtgiTIMEOUT,a11
;
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,rtgilp
;	WAITSWITCH_DWN	B_SPUNCH,J_ALL,rtgilp
;
;;Is my opponent in combo mode?
;	move	*a8(CLOSEST_NUM),a0
;	X32	a0
;	addi	process_ptrs,a0
;	move	*a0,a0,L
;	move	*a0(COMBO_COUNT),a0
;	jrz	rtgilp0
;
;	move	*a8(ANTI_COMBO_TIME),a0		;Time stamp
;	move	@PCNT,a14
;	sub	a0,a14
;	abs	a14
;	cmpi	80,a14
;	jrge	rtgilp0
;	move	*a8(I_WILL_DIE),A14
;	jrnz	rtgilp0
;
;;Combo breaker message!
;	CALLA	DO_REVERSAL
;	CALLA	DO_REVERSAL_MESS
;
;	clr	a0
;	move	a0,*a8(IMMOBILIZE_TIME)
;
;	move	*a8(WHOHITME),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)
;
;	;target WHOHITME
;	SMRTTGT	a8,WHOHITME
;
;	CALLA	FIND_AND_KILL_ENDLESS
;	movi	bam_3_pile_driver_anim,a14
;	move	a14,*a8(SPECIAL_MOVE_ADDR),L
;
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	SLEEPK	20
;
;	jruc	rtgilp
;
*******************************************************************************
*
bam_hdhold_combo2

kgkgTIMEOUT	.equ	60

kgkglp0
	SLEEPK	1
kgkglp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	kgkglp0
;	jrz	kgkgcont
;	cmpi	MODE_HEADHELD,a0
;	jrnz	kgkglp0
;kgkgcont
;In combo mode?
	calla	CHECK_COMBO_GO
	jrlt	kgkglp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,kgkglp

	movi	kgkgTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,kgkglp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,kgkglp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	kgkgslam
	cmpi	MODE_HEADHELD,a0
	jrnz	kgkglp0

kgkgslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	kgkglp0				;ignore

;Start combo rules here
;	move	*a8(ATTACH_PROC),a14,L
;	movk	15,a0
;	move	a0,*a14(IMMOBILIZE_TIME)

	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_combo_punch_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2

	SLEEPK	20

	jruc	kgkglp


*******************************************************************************
*

bam_grab_toss_air

qdpoTIMEOUT	.equ	40

qdpolp0
	SLEEPK	1
qdpolp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,qdpolp

	movi	qdpoTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,qdpolp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,qdpolp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	qdpolp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	qdpolp0

;Don't do it when he is on ground
	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
;Don't do it when he is on ground
	cmpi	MODE_ONGROUND,a0
	jrz	qdpolp
	cmpi	MODE_DEAD,a0
	jrz	qdpolp
	cmpi	MODE_INAIR,a0
	jrz	qdpodoit2
	cmpi	MODE_INAIR2,a0
	jrz	qdpodoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	qdpodoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	68h,a0
	jrgt	qdpolp

	movi	bam_3_hiptoss_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	qdpolp

qdpodoit2	movi	bam_3_hiptoss2_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	qdpolp

*****************************************************************************

 SUBR	bam_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	dagfp1
;Plyr 2
	movi	bam_stand4_anim,a0
	calla	change_anim1a

	movi	bam_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

dagfp1
	movi	bam_stand2_anim,a0
	calla	change_anim1a

	movi	bam_torso2_anim,a0
	calla	change_anim2a

	rets


*****************************************************************************
*
* BAM BAM CONTROL CODE
*
* a13 = * bam process

 SUBR	move_bam

	movi	bam_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	eimpmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

eimpmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	.long	mode_choking		;25


*****************************************************************************

mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	owvkno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	owvknope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	owvknope
;Player has died amidst a combo...
;Knock me down.
	movi	bam_fall_back_anim,a0
	calla	change_anim1a

;Zero health bar
	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

owvknope

;Perhaps we need to interrupt any sequence when a wrestler has won?

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	owvkopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	owvkopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	owvkno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	owvkno_pin_yet
owvkno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	owvkraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	owvkraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	owvkno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	owvkopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	bam,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

owvkraisearm
	FACE24	bam,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

owvktoo_far_to_pin
owvkopp_notgnd
owvkopp_not_dead
owvkno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	owvkimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	owvknblk			;1 for down transitions
	callr	owvkblock			;& 1 for current buttons
	jrc	owvknblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
owvknblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	owvkpunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	owvkaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	owvkno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	owvkno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

owvkimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
owvkno_climb
	calla	execute_walk

owvkno_interrupt
	rets

owvkaction_table
	.long	owvkz,owvkpunch,owvkblock,owvkblock			;0-3
	.long	owvksuper_punch,owvksuper_punch,owvkblock,owvkblock	;4-7
	.long	owvkkick,owvkpunchkick,owvkblock,owvkblock		;8-11
	.long	owvksuper_punch,owvkpunchkick,owvkblock,owvkblock	;12-15
	.long	owvksuper_kick,owvksuper_kick,owvkblock,owvkblock	;16-19
	.long	owvkgraboh,owvkgraboh,owvkblock,owvkblock		;20-23
	.long	owvksuper_kick,owvkpunchkick,owvkblock,owvkblock	;24-27
	.long	owvkgraboh,owvkgraboh,owvkblock,owvkblock		;28-31

************
owvkz		;0

	rets


************
owvkpunch		;1
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	headbutt
* dizzy			"		"
* normal	>		normal punch
* dizzy			"		"
*
* onground	< 120  120	elbow drop
* onground	>		normal punch
*
* running			hiptoss
* bouncing			nothing
*
* onturnbkl	<  60   96	yank down
* onturnbkl	>		normal punch
* climbturnbkl			normal punch
*
	JJXM_INIT
	JJXM	NORMAL,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	DIZZY,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	BLOCK,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	ONGROUND,	160,140,owvkpunch_lbowdrop,owvkpunch_punch
	JJXM	RUNNING, 	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	BOUNCING,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	ONTURNBKL,		owvkpunch_punch
	JJXM	CLIMBTURNBKL,		owvkpunch_punch
	JJXM	INAIR,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	ATTACHED,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	DEAD,		160,140,owvkpunch_lbowdrop,owvkpunch_punch
	JJXM	OPPOVERHEAD,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	WAITANIM,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	GRAPPLE,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	MASTER,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	SLAVE,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	HEADHOLD,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	HEADHELD,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	CHOKEHOLD,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	PUPPET,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	PUPPET2,	 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM	INAIR2,		 50, 45,owvkpunch_hdbutt,owvkpunch_punch
	JJXM_END


*****
owvkpunch_rets
	rets

*****
owvkpunch_punch
std_punch

	FACE24	bam,punch_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,PUNCH_T1,PUNCH_T2
	rets

*****
owvkpunch_hdbutt

	FACE24	bam,butt_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,HDBUTT_T1,HDBUTT_T2
	rets

*****
owvkpunch_lbowdrop

	FACE24	bam,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,LBOWDROP_T1,LBOWDROP_T2
	rets

*****

	rets

************
owvkblock		;2
std_block
	move	@blocking_off,a0
	jrnz	owvkno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	bam_4_block_anim,a0
	calla	change_anim1

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

owvkno_blocking
	setc
	rets


************
owvksuper_punch	;4
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	close in super move
* dizzy			"		"
* normal	>		jumping punch move
* dizzy			"		"
*
* onground	< 120  120	super elbow drop
* onground	>		normal punch
*
* running			hip toss
* bouncing			nothing
*
* onturnbkl	<  60   96	yank down
* onturnbkl	>		normal punch
* climbturnbkl			normal punch
*
	JJXM_INIT
	JJXM	NORMAL,		 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	DIZZY,		 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	BLOCK,		 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	ONGROUND,	160,140,owvkspunch_lbowdrop,std_punch
	JJXM	RUNNING, 	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	BOUNCING,	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	ONTURNBKL,		owvkspunch_jump
	JJXM	CLIMBTURNBKL,		std_punch
	JJXM	INAIR,		 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	ATTACHED,	 85, 55,owvkspunch_special,owvkspunch_jump
	JJXM	DEAD,		 160,140,owvkspunch_lbowdrop,std_punch
	JJXM	OPPOVERHEAD,	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	WAITANIM,	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	GRAPPLE,	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	MASTER,		 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	SLAVE,		 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	HEADHOLD,	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	HEADHELD,		do_pile				;19
	JJXM	CHOKEHOLD,	 90, 55,owvkspunch_special,owvkspunch_jump
	JJXM	PUPPET,		 90, 45,owvkspunch_special,owvkspunch_jump
	JJXM	PUPPET2,	 90, 45,owvkspunch_special,owvkspunch_jump
	JJXM	INAIR2,		 90, 45,owvkspunch_special,owvkspunch_jump
	JJXM_END

owvkspunch_rets
	rets

*****
owvkspunch_jump
;jumping punch attack
	FACE24	bam,slap_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2

	rets

*****
owvkspunch_special
;If stick is toward opponent, then do head hold
;	move	*a13(STICK_VAL_CUR),a0
;	move	*a13(NEW_FACING_DIR),a1
;	andi	0ch,a1
;	cmp	a0,a1
;
;	jrz	owvkcont

	move	*a13(CLOSEST_XDIST),a1
	cmpi	55,a1
	jrgt	owvkspunch_jump
;	jruc	owvkhdbutt
;owvkcont
;
;	movi	bam_3_head_hold2_anim,a0
;	calla	change_anim1a
;
;	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
;
;	rets
;owvkhdbutt
	FACE24	bam,butts_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,HDBUTT_T1,HDBUTT_T2
	rets

*****
owvkspunch_lbowdrop
 
;If near opponents head, and facing down, do the hair grab!
;Allow hair grab from below!

;	move	*a13(FACING_DIR),a14
;	btst	MOVE_DOWN_BIT,a14
;	jrz	owvkno

	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	owvkno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	owvkno

;At head or feet!

	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	owvkno

;At head!  Do hair pickup.

	FACE24	bam,hair_pickup_anim
	calla	change_anim1
	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

owvkno
	FACE24	bam,lbowdrop_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2

	rets


************
owvkkick		;8
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  50   92	knee
* dizzy			"		"
* normal	>		normal kick
* dizzy			"		"
*
* onground	< 120  120	stomp
* onground	>		normal kick
*
* running			normal kick
* bouncing			normal kick
*
* onturnbkl			normal kick
* climbturnbkl			normal kick
*
	JJXM_INIT
	JJXM	NORMAL,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	DIZZY,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	BLOCK,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	ONGROUND,	160,140,owvkkick_stomp,owvkkick_kick
	JJXM	RUNNING,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	BOUNCING,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	ONTURNBKL,	 	owvkkick_kick
	JJXM	CLIMBTURNBKL,	 	owvkkick_kick
	JJXM	INAIR,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	ATTACHED,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	DEAD,		160,140,owvkkick_stomp,owvkkick_kick
	JJXM	OPPOVERHEAD,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	WAITANIM,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	GRAPPLE,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	MASTER,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	SLAVE,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	HEADHOLD,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	HEADHELD,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	CHOKEHOLD,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	PUPPET,		 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	PUPPET2,	 60, 92,owvkkick_knee,owvkkick_kick
	JJXM	INAIR2,		 	owvkkick_TB
	JJXM_END


*****
owvkkick_TB

	.ref	bam_kick_TB_anim
	movi	bam_kick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

*****
owvkkick_kick
std_kick

	FACE24	bam,kick_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

*****
owvkkick_knee
std_knee

	FACE24	bam,knee_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2
	rets

*****
owvkkick_stomp
attack_stomp

	FACE24	bam,stomp_anim
	calla	change_anim1a

	WRSND	W_BAMBAM,KICK_T1,KICK_T2

	rets


************
owvkpunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets

************
owvksuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal	<  60   60	close in super move
* dizzy			"		"
* normal	>		jumping kick move
* dizzy			"		"
*
* onground	< 120  120	super stomp
* onground	>		normal kick
*
* running			big boot
* bouncing			big boot
*
* onturnbkl	<  60   96	jumping kick move
* climbturnbkl		"		"
* onturnbkl	>		normal kick
* climbturnbkl		"		"
*
	JJXM_INIT
	JJXM	NORMAL,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	DIZZY,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	BLOCK,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	ONGROUND,	160,140,attack_stomp,std_kick
	JJXM	RUNNING,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	BOUNCING,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	ONTURNBKL,	 60, 96,owvkskick_kick,std_kick
	JJXM	CLIMBTURNBKL,	 60, 96,owvkskick_kick,std_kick
	JJXM	INAIR,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	ATTACHED,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	DEAD,		160,140,attack_stomp,std_kick
	JJXM	OPPOVERHEAD,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	WAITANIM,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	GRAPPLE,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	MASTER,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	SLAVE,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	HEADHOLD,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	HEADHELD,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	CHOKEHOLD,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	PUPPET,		 60, 60,owvkskick_special,owvkskick_kick
	JJXM	PUPPET2,	 60, 60,owvkskick_special,owvkskick_kick
	JJXM	INAIR2,		 	owvkkick_TB
	JJXM_END

*****
owvkskick_special
owvkskick_kick

;Jumping karate kick
	FACE24	bam,superkick_anim
	calla	change_anim1a

;	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
	WRSND	W_BAMBAM,SPUNCH_T1,SPUNCH_T2

	rets

*****
;owvkskick_bigboot
;
;	movi	bam_4_bigboot_anim,a0
;	calla	change_anim1a
;
;	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
;
;	rets


************
owvkgraboh		;8

;Both super buttons at the same time!

	movi	bam_4_graboh_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	rets


*****************************************************************************
*
* RUNNING (if GETUP_TIME > 0 then player is out of control)
*

whrkXRUN_VAL	equ	BAM_XRUN
whrkZDRIFT_VAL	equ	BAM_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	whrkno_vel

	calla	bounce_off_ropes

	movi	whrkXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	whrkpos
	neg	a0
whrkpos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

whrkno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	whrkout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	whrkno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	whrkcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

whrkcontinue_run
whrkno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-whrkZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	whrksetvel

	movi	whrkZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	whrksetvel

	clr	a1
whrksetvel
	move	a1,*a13(OBJ_ZVEL),L

;Delay reading buttons after just getting out of an out of control run
;so a mistaken move isn't fired off
	move	*a13(DELAY_BUTNS),a0
	jrnz	whrkout_of_control


	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	whrkaction_table,a0
	move	*a0,a0,L
	call	a0
whrkout_of_control
	rets

whrkaction_table
	.long	whrkz,whrkpunch,whrkblock,whrkblock			;0-3
	.long	whrksuper_punch,whrksuper_punch,whrkblock,whrkblock	;4-7
	.long	whrkkick,whrkpunchkick,whrkblock,whrkblock		;8-11
	.long	whrksuper_punch,whrkpunchkick,whrkblock,whrkblock	;12-15
	.long	whrksuper_kick,whrksuper_kick,whrkblock,whrkblock	;16-19
	.long	whrkgraboh,whrkgraboh,whrkblock,whrkblock		;20-23
	.long	whrksuper_kick,whrkpunchkick,whrkblock,whrkblock	;24-27
	.long	whrkgraboh,whrkgraboh,whrkblock,whrkblock		;28-31

************
whrkz
	rets


************
whrkpunch		;1
whrksuper_punch	;4
whrkpunchkick
whrkgraboh
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal			flying clothesline
* dizzy					"
*
* onground	< 176 176 	belly flop
* onground	>		nothing
*
* running			flying clothesline
* bouncing			flying clothesline
*
* onturnbkl			flying clothesline
* climbturnbkl			flying clothesline
*
	JJXM_INIT
	JJXM	NORMAL,			whrkpunch_clothesline
	JJXM	DIZZY,			whrkpunch_clothesline
	JJXM	BLOCK,			whrkpunch_clothesline
	JJXM	ONGROUND,	176,176,whrkpunch_bellyflop,whrkpunch_rets
	JJXM	RUNNING,		whrkpunch_clothesline
	JJXM	BOUNCING,		whrkpunch_clothesline
	JJXM	ONTURNBKL,		whrkpunch_clothesline
	JJXM	CLIMBTURNBKL,		whrkpunch_clothesline
	JJXM	INAIR,			whrkpunch_clothesline
	JJXM	ATTACHED,		whrkpunch_clothesline
	JJXM	DEAD,		176,176,whrkpunch_bellyflop,whrkpunch_rets
	JJXM	OPPOVERHEAD,		whrkpunch_clothesline
	JJXM	WAITANIM,		whrkpunch_clothesline
	JJXM	GRAPPLE,		whrkpunch_clothesline
	JJXM	MASTER,			whrkpunch_clothesline
	JJXM	SLAVE,			whrkpunch_clothesline
	JJXM	HEADHOLD,		whrkpunch_clothesline
	JJXM	HEADHELD,		whrkpunch_clothesline
	JJXM	CHOKEHOLD,		whrkpunch_clothesline
	JJXM	PUPPET,			whrkpunch_clothesline
	JJXM	PUPPET2,		whrkpunch_clothesline
	JJXM	INAIR2,			whrkpunch_clothesline
	JJXM_END


whrkpunch_rets
	rets

*****
whrkpunch_clothesline
;Only allow clothesline if near center of ring, and running toward opponent
	move	*a13(MOVE_DIR),a1
	btst	MOVE_LEFT_BIT,a1
	jrnz	whrklft
;Moving right
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID+70h,a0
	jrlt	whrkok

;	LOCKUP

	rets

whrklft
;Moving left
	
	move	*a13(OBJ_XPOSINT),a0
	cmpi	RING_X_MID-70h,a0
	jrgt	whrkok

;	LOCKUP

	rets
whrkok
	move	*a13(MOVE_DIR),a1
	move	*a13(NEW_FACING_DIR),a0	;Current facing dir (9,10,6,5 only)
	sll	5,a0
	addi	whrkmv_tbl,a0
	move	*a0,a0,L
	btst	a0,a1
	jrz	whrkyes

;	LOCKUP

	rets
whrkyes

;Will lunge toward opponent
;Is facing opponent - nt running away from him!
	movi	bam_fly_cline_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

whrkmv_tbl	.long	0,0,0,0,0,MOVE_RIGHT_BIT,MOVE_RIGHT_BIT
	.long	0,0,MOVE_LEFT_BIT,MOVE_LEFT_BIT


*****
whrkpunch_bellyflop
attack_bellyflop

	SETMODE	INAIR

	clr	a0
	move	a0,*a13(RUN_TIME)

	movi	bam_3_butt_drop_anim,a0
	calla	change_anim1a
	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2
	rets

************
whrkblock		;2
	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block

************
whrkkick		;8
whrksuper_kick	;16
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* normal			flying kick
* dizzy					"
*
* onground	< 176 176	running stomp
* onground	>		nothing
*
* running			flying kick
* bouncing			flying kick
*
* onturnbkl			flying kick
* climbturnbkl			flying kick
*
	JJXM_INIT
	JJXM	NORMAL,			whrkkick_flyingkick
	JJXM	DIZZY,			whrkkick_flyingkick
	JJXM	BLOCK,			whrkkick_flyingkick
	JJXM	ONGROUND,	176,176,attack_bellyflop,whrkkick_rets
	JJXM	RUNNING,		whrkkick_flyingkick
	JJXM	BOUNCING,		whrkkick_flyingkick
	JJXM	ONTURNBKL,		whrkkick_flyingkick
	JJXM	CLIMBTURNBKL,		whrkkick_flyingkick
	JJXM	INAIR,			whrkkick_flyingkick
	JJXM	ATTACHED,		whrkkick_flyingkick
	JJXM	DEAD,		176,176,attack_bellyflop,whrkkick_rets
	JJXM	OPPOVERHEAD,		whrkkick_flyingkick
	JJXM	WAITANIM,		whrkkick_flyingkick
	JJXM	GRAPPLE,		whrkkick_flyingkick
	JJXM	MASTER,			whrkkick_flyingkick
	JJXM	SLAVE,			whrkkick_flyingkick
	JJXM	HEADHOLD,		whrkkick_flyingkick
	JJXM	HEADHELD,		whrkkick_flyingkick
	JJXM	CHOKEHOLD,		whrkkick_flyingkick
	JJXM	PUPPET,			whrkkick_flyingkick
	JJXM	PUPPET2,		whrkkick_flyingkick
	JJXM	INAIR2,			whrkkick_flyingkick
	JJXM_END


whrkkick_rets
	rets

*****
whrkkick_flyingkick

	calla	ck_ignore
	jrc	whrkz

	movi	bam_flying_kick_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_BAMBAM,FLYKICK_T1,FLYKICK_T2

	rets

;*****
;whrkkick_runstomp
;
;	rets

*****************************************************************************
*

mode_inair	;2

	rets

*****************************************************************************
*

mode_attached	;3

	calla	keep_attached
	jrnz	equhstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

equhstill_attached
	rets


*****************************************************************************
*

mode_onground	;4

	rets

*****************************************************************************
*
* bouncing off ropes while running

mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	vbnmnot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	bam_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING

;	clr	a0
;	move	a0,*a13(GETUP_TIME)	;in control

vbnmnot_ended
	rets


*****************************************************************************
*
* STANDING ON TOP OF TURNBUCKLE

mode_onturnbkl	;6

;	;check unint
;	move	*a13(ANIMODE),a14
;	btst	MODE_UNINT_BIT,a14
;	jrnz	oipfno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	oipfno_climbdown

	movi	bam_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

oipfno_interrupt
	rets

oipfno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	oipfz

	X32	a0
	addi	oipfaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets


;For standing on top of turnbuckles

oipfaction_table
	.long	oipfz,oipfpunch,oipfblock,oipfblock			;0-3
	.long	oipfsuper_punch,oipfsuper_punch,oipfblock,oipfblock	;4-7
	.long	oipfkick,oipfpunchkick,oipfblock,oipfblock		;8-11
	.long	oipfsuper_punch,oipfpunchkick,oipfblock,oipfblock	;12-15
	.long	oipfsuper_kick,oipfsuper_kick,oipfblock,oipfblock	;16-19
	.long	oipfgraboh,oipfgraboh,oipfblock,oipfblock		;20-23
	.long	oipfsuper_kick,oipfpunchkick,oipfblock,oipfblock	;24-27
	.long	oipfgraboh,oipfgraboh,oipfblock,oipfblock		;28-31

************
oipfz
	rets

************
oipfpunch		;1
oipfblock		;2
oipfsuper_punch	;4
oipfkick		;8
oipfsuper_kick	;16
oipfgraboh
oipfpunchkick

	SETMODE	INAIR

	movi	bam_bellyflop_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,TURNDIVE_T1,TURNDIVE_T2

	rets

*****************************************************************************
* blocking

mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	cimcno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	cimcno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	cimcno
	cmpi	45,a0
	jrlt	cimcno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	cimcpunchblock

cimcno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	cimcno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	cimcset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	cimcaction_table,a0
	move	*a0,a0,L
	call	a0

cimcno_interrupt
	rets

cimcset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

cimcaction_table
	.long	cimcz,cimcpunchblock,cimcz	;0-2
	.long	cimcpunchblock		;3
	.long	cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz	;4-10
	.long	cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz	;11-17
	.long	cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz	;18-24
	.long	cimcz,cimcz,cimcz,cimcz,cimcz,cimcz,cimcz	;25-31

************
cimcz
	rets

************
cimcpunchblock	;3
*
* MODE		   DX  DZ	ACTION
* ----------------------------------------------------
* all				push
*

;This push has no collisions set!

	SETMODE	NORMAL

	movi	bam_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,PUSH_T1,PUSH_T2

	rets

*****************************************************************************
* doink with zero health

mode_dizzy	;8

;	move	*a13(GETUP_TIME),a0
;	jrnz	cardstill_going
;
;	calla	clear_damage_log
;
;	clr	a0
;	move	a0,*a13(STARS_FLAG)
;
;	SETMODE	NORMAL
;
;cardstill_going
	rets




*****************************************************************************
* opponent held overhead

mode_oppoverhead ;10

	move	*a13(ATTACH_PROC),a2,L		;proc attached to
	jrz	motnnot_attached
	move	*a2(ATTACH_PROC),a0,L
	jrnz	motnstill_attached

motnnot_attached

	move	*a13(ANIMODE),a0		;* remove this????
	btst	MODE_UNINT_BIT,a0		;*
	jrnz	motnno_interrupt			;*

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	CALLA	FIND_AND_KILL_ENDLESS
	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

	rets

motnstill_attached
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	motnno_interrupt

	move	*a13(FACING_DIR),a0
	andni	MOVE_UP,a0
	ori	MOVE_DOWN,a0
	move	a0,*a13(FACING_DIR)
	move	a0,*a13(NEW_FACING_DIR)

	move	*a13(STICK_VAL_CUR),a0
	jrz	motnstand

	move	a0,*a13(MOVE_DIR)
	calla	execute_walk

	movi	bam_holdoh_anim,a0
	calla	change_anim2
 	jruc	motnck_butns
motnstand
	clr	a0
	move	a0,*a13(MOVE_DIR)
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	movi	bam_stndholdoh_anim,a0
	calla	change_anim1

motnck_butns

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	motnaction_table,a0
	move	*a0,a0,L
	call	a0

motnno_interrupt
	rets

motnaction_table
	.long	motnz,motnpunch,motnblock,motnblock			;0-3
	.long	motnsuper_punch,motnsuper_punch,motnblock,motnblock	;4-7
	.long	motnkick,motnpunchkick,motnblock,motnblock		;8-11
	.long	motnsuper_punch,motnpunchkick,motnblock,motnblock	;12-15
	.long	motnsuper_kick,motnsuper_kick,motnblock,motnblock	;16-19
	.long	motngraboh,motngraboh,motnblock,motnblock		;20-23
	.long	motnsuper_kick,motnpunchkick,motnblock,motnblock	;24-27
	.long	motngraboh,motngraboh,motnblock,motnblock		;28-31

************
motnz
	rets

************
motnpunch		;1
motnblock		;2
motnsuper_punch	;4
motnkick		;8
motnpunchkick	;9

;	move	*a13(STICK_VAL_CUR),a0
;	btst	PLAYER_DOWN_BIT,a0
;	jrz	motnz

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_slamdwn_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,PUNCH_T1,PUNCH_T2

	rets

motnsuper_kick	;16
motngraboh		;20

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	motnkick

	CALLA	FIND_AND_KILL_ENDLESS
	movi	bam_backbreaker_anim,a0
	calla	change_anim1a

	WRSND	W_BAMBAM,HIPTOSS_T1,PUNCH_T2

	rets

*****************************************************************************
*
* CLIMBING UP OR DOWN THE TURNBUCKLE

mode_climbturnbkl	;11

	rets

*****************************************************************************

mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	dlgjnot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

dlgjnot_ended
	rets


*****************************************************************************

mode_grapple	;13

	rets
;
;	move	*a13(GETUP_TIME),a0
;	jrnz	reovstill_going
;
;;now get move off
;;if opponents meter almost zero then break apart
;
;	calla	break_lockup
;	rets
;
;
;reovstill_going
;	calla	lineup_grapple
;	rets


*****************************************************************************

mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets

*****************************************************************************

mode_slave	;15
	rets

*****************************************************************************

mode_headhold	;16

;Bozo power move
	.ref	bozo_check
	calla	bozo_check
	jrnc	rkvdfail

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	movi	bam_pogo_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	rkvdtag
	movi	bam_neckbreaker_anim,a0
rkvdtag	calla	change_anim1a

	rets

rkvdfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	rkvdexit

;	move	*a13(ATTACH_PROC),a10,L
;	jrz	rkvdexit

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	rkvdno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	rkvdaction_table,a0
	move	*a0,a0,L
	call	a0

rkvdno_interrupt
	rets

rkvdexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	rkvdright
	movk	MOVE_DOWN_LEFT,a1
rkvdright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

rkvdaction_table
	.long	rkvdz,rkvdpunch,rkvdblock,rkvdblock			;0-3
	.long	rkvdsuper_punch,rkvdsuper_punch,rkvdblock,rkvdblock	;4-7
	.long	rkvdkick,rkvdpunchkick,rkvdblock,rkvdblock		;8-11
	.long	rkvdsuper_punch,rkvdpunchkick,rkvdblock,rkvdblock	;12-15
	.long	rkvdsuper_kick,rkvdsuper_kick,rkvdblock,rkvdblock	;16-19
	.long	rkvdgraboh,rkvdgraboh,rkvdblock,rkvdblock		;20-23
	.long	rkvdsuper_kick,rkvdpunchkick,rkvdblock,rkvdblock	;24-27
	.long	rkvdgraboh,rkvdgraboh,rkvdblock,rkvdblock		;28-31


************
rkvdblock
rkvdgraboh
rkvdz		;0
	rets

************
rkvdpunch		;1

	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	.ref	bam_4_knee2_anim
	movi	bam_4_knee2_anim,a0
	calla	change_anim1a
	rets

************
rkvdsuper_punch	;4

	rets

************
do_pile
	CALLA	FIND_AND_KILL_ENDLESS
;This flag is only set if bam bam has done repeated kicks!
	move	*a13(USR_VAR2),a0
	jrz	rkvdz

	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	rkvdpunch

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2
	movi	bam_3_pile_driver_anim,a0
	calla	change_anim1a
	rets

rkvdpunchkick
rkvdkick

;	move	*a13(STICK_VAL_CUR),a0
;	btst	PLAYER_DOWN_BIT,a0
;	jrz	rkvdknee
;
;	move	*a13(STICK_REL_CUR),a0
;	btst	MOVE_TOWARD_BIT,a0
;	jrz	rkvdknee
;
;	.ref	bam_hdbutts_anim
;	movi	bam_hdbutts_anim,a0
;	calla	change_anim1a
;	rets
;
;rkvdknee
	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	movi	bam_4_knee2_anim,a0
	calla	change_anim1a
	rets

rkvdsuper_kick	;16
;If stick is toward opponent, then do quick knees
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	rkvdz

;Quick knees
	CALLA	FIND_AND_KILL_ENDLESS
	WRSND	W_BAMBAM,UPRCUT_T1,UPRCUT_T2
	movi	bam_knees_anim,a0
	calla	change_anim1a
	rets

*****************************************************************************
mode_puppet2	;17

;	;check for the head-grab breaker
;	move	*a13(BUT_VAL_DOWN),a0
;	btst	PLAYER_KICK_BIT,a0
;	jrz	ufmhout
;
;	;check the time - must do it within 20 ticks
;	move	*a13(HEAD_GRAB_TIME),a14
;	move	@PCNT,a0
;	sub	a14,a0
;	cmpi	KICK_OUT,a0
;	jrgt	ufmhout
;
;	move	*a13(PLYR_TYPE),a14
;	cmpi	PTYPE_DRONE,a14
;	jrz	ufmhout
;     
;	;okay, waste 'im. - detach, setmode, immobilize, and launch the knee
;	move	*a13(ATTACH_PROC),a0,L
;	clr	a14
;	move	a14,*a13(ATTACH_PROC),L
;	move	a14,*a0(ATTACH_PROC),L
;	movi	15,a14
;	move	a14,*a0(IMMOBILIZE_TIME)
;	SETMODE	NORMAL
;	jruc	std_knee
;
;ufmhout
	rets

*****************************************************************************
mode_headheld	;19
	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking

;Bozo reversal
	calla	bozo_check
	jrnc	vqwtfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_BAMBAM,GRABHOLD_T1,GRABHOLD_T2

	movi	bam_pogo_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	vqwttag
	movi	bam_neckbreaker_anim,a0
vqwttag	calla	change_anim1a

	rets
vqwtfail

;He may have let me go by hitting his block butn!
	move	*a13(ATTACH_PROC),a0,L
	jrnz	vqwtno_luck

;Make sure this guy is on ground
	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	vqwtno_luck

;hit_gnd

	movi	bam_3_head_held_stand_anim,a0
	calla	change_anim1a

vqwtno_luck
	rets

*****************************************************************************
mode_chokehold	;24
	rets

*****************************************************************************

;mwsuVEL	equ	30000h		;38000h	;30000h
;mwsuDVEL	equ	21f0eh		;27978h	;21f0eh
;mwsuVEL	equ	38000h		;38000h	;30000h
;mwsuDVEL	equ	30000h		;27978h	;21f0eh
mwsuVEL	equ	3a000h		;38000h	;30000h
mwsuDVEL	equ	31000h		;27978h	;21f0eh


 SUBR bam_velocity_table

;		X,	Z

	.long	0,	-mwsuVEL	;0 UP

	.long	mwsuDVEL,	-mwsuDVEL	;1 UP-RIGHT

	.long	mwsuVEL,	0	;2 RIGHT

	.long	mwsuDVEL,	mwsuDVEL	;3 DOWN-RIGHT

	.long	0,	mwsuVEL	;4 DOWN

	.long	-mwsuDVEL,	mwsuDVEL	;5 DOWN-LEFT

	.long	-mwsuVEL,	0	;6 LEFT

	.long	-mwsuDVEL,	-mwsuDVEL	;7 UP-LEFT


*****************************************************************************

 SUBR bam_rotate_anims_table
; old = up right
	.long	bam_stand2_anim		;new = up right
	.long	bam_2_to_4_turn_anim	;    = down right
	.long	bam_2_to_6_turn_anim	;    = down left ***
	.long	bam_2_to_8_turn_anim	;    = up left

; old = down right
	.long	bam_4_to_2_turn_anim	;new = up right
	.long	bam_stand4_anim		;    = down right
	.long	bam_4_to_6_turn_anim	;    = down left
	.long	bam_4_to_8_turn_anim	;    = up left ***

; old = down left
	.long	bam_6_to_2_turn_anim	;new = up right ***
	.long	bam_6_to_4_turn_anim	;    = down right
	.long	bam_stand6_anim		;    = down left
	.long	bam_6_to_8_turn_anim	;    = up left

; old = up left
	.long	bam_8_to_2_turn_anim	;new = up right
	.long	bam_8_to_4_turn_anim	;    = down right ***
	.long	bam_8_to_6_turn_anim	;    = down left
	.long	bam_stand8_anim		;    = up left


 SUBR bam_leg_anims_table
;  MOVE
;(eska1 - UP)				FACING
	.long	bam_walk1_f2_anim	;1 (UP)
	.long	bam_walk1_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk1_f4_anim	;3 (RIGHT)
	.long	bam_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk1_f4_anim	;5 (DOWN)
	.long	bam_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk1_f2_anim	;7 (LEFT)
	.long	bam_walk1_f2_anim	;8 (UP-LEFT)

;(eska2 - UP-RIGHT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk2_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk8_f4_anim	;5 (DOWN)
	.long	bam_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk4_f2_anim	;7 (LEFT)
	.long	bam_walk4_f2_anim	;8 (UP-LEFT)

;(eska3 - RIGHT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk2_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk4_f4_anim	;5 (DOWN)
	.long	bam_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk6_f2_anim	;7 (LEFT)
	.long	bam_walk6_f2_anim	;8 (UP-LEFT)


;(eska4 - DOWN-RIGHT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk8_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk4_f4_anim	;3 (RIGHT)
	.long	bam_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk2_f4_anim	;5 (DOWN)
	.long	bam_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk6_f2_anim	;8 (UP-LEFT)

;(eska5 - DOWN)
	.long	bam_walk5_f2_anim	;1 (UP)
	.long	bam_walk5_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk5_f4_anim	;3 (RIGHT)
	.long	bam_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk5_f4_anim	;5 (DOWN)
	.long	bam_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk5_f2_anim	;7 (LEFT)
	.long	bam_walk5_f2_anim	;8 (UP-LEFT)

;(eska6 - DOWN-LEFT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk6_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk2_f2_anim	;3 (RIGHT)
	.long	bam_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk2_f4_anim	;5 (DOWN)
	.long	bam_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk8_f2_anim	;8 (UP-LEFT)

;(eska7 - LEFT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk6_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk6_f2_anim	;3 (RIGHT)
	.long	bam_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk4_f4_anim	;5 (DOWN)
	.long	bam_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk2_f2_anim	;8 (UP-LEFT)

;(eska8 - UP-LEFT)
	.long	bam_walk2_f2_anim	;1 (UP)
	.long	bam_walk4_f2_anim	;2 (UP_RIGHT)
	.long	bam_walk6_f2_anim	;3 (RIGHT)
	.long	bam_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	bam_walk6_f4_anim	;5 (DOWN)
	.long	bam_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	bam_walk2_f2_anim	;7 (LEFT)
	.long	bam_walk2_f2_anim	;8 (UP-LEFT)


 SUBR bam_torso_anims_table
; old = up right
	.long	bam_torso2_anim		;new = up right
	.long	bam_2_to_4_turn2_anim	;    = down right
	.long	bam_2_to_6_turn2_anim	;    = down left ***
	.long	bam_2_to_8_turn2_anim	;    = up left

; old = down right
	.long	bam_4_to_2_turn2_anim	;new = up right
	.long	bam_torso4_anim		;    = down right
	.long	bam_4_to_6_turn2_anim	;    = down left
	.long	bam_4_to_8_turn2_anim	;    = up left ***

; old = down left
	.long	bam_6_to_2_turn2_anim	;new = up right ***
	.long	bam_6_to_4_turn2_anim	;    = down right
	.long	bam_torso6_anim		;    = down left
	.long	bam_6_to_8_turn2_anim	;    = up left

; old = up left
	.long	bam_8_to_2_turn2_anim	;new = up right
	.long	bam_8_to_4_turn2_anim	;    = down right ***
	.long	bam_8_to_6_turn2_anim	;    = down left
	.long	bam_torso8_anim		;    = up left


******************************************************************************

	.end

