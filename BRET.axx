
	.file	"bret.asm"
	.title	"Bret Hart specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"jjxm.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"damage.equ"



	.ref	ADD_IF_SILENT,bounce_off_ropes,change_anim1,change_anim1a
	.ref	change_anim2a,check_secret_moves
	.ref	CLIMB_ROPES,climb_turnbuckle,do_taunt,execute_walk
	.ref	get_opp_plyrmode,JUMP_ROPES,PCNT,mode_dead,get_opp_process
	.ref	keep_attached,master_keep_attached,mode_choking
	.ref	mode_inair2,process_ptrs,ck_ignore,mode_puppet
	.ref	DO_REVERSAL,DO_REVERSAL_MESS,can_pin
	.ref	FIND_AND_KILL_ENDLESS,ck_teammate_pin,raisearm_check
	.ref	CHECK_COMBO_GO,drone_change_back,set_raisearm_bit
	.ref	hrt_combo_punch_anim,hrt_combo_kick_anim
	.ref	BLOCK_WOOSH,get_powerp_dtime,round_award
	.ref	blocking_off,std_taunt,std_walk_fast
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_BRET_FINISHES
	.ref	hrt_finish1_move
	.if NUM_BRET_FINISHES > 1
	.ref	hrt_finish2_move
	.endif
	.endif


	.ref	hrt_3_face_driver2_anim
	.ref	wres_slave_anim,hrt_zip_anim,start_run_anim

	.ref	hrt_4_block_anim

	.ref	hrt_stand2_anim,hrt_stand8_anim
	.ref	hrt_stand4_anim,hrt_stand6_anim
	.ref	hrt_torso2_anim,hrt_torso8_anim
	.ref	hrt_torso4_anim,hrt_torso6_anim

	.ref	hrt_2_to_4_turn_anim,hrt_8_to_6_turn_anim	;stand
	.ref	hrt_4_to_2_turn_anim,hrt_6_to_8_turn_anim
	.ref	hrt_4_to_6_turn_anim,hrt_6_to_4_turn_anim
	.ref	hrt_2_to_8_turn_anim,hrt_8_to_2_turn_anim
	.ref	hrt_4_to_8_turn_anim,hrt_6_to_2_turn_anim
	.ref	hrt_2_to_6_turn_anim,hrt_8_to_4_turn_anim

	.ref	hrt_2_to_4_turn2_anim,hrt_8_to_6_turn2_anim	;torso
	.ref	hrt_4_to_2_turn2_anim,hrt_6_to_8_turn2_anim
	.ref	hrt_4_to_6_turn2_anim,hrt_6_to_4_turn2_anim
	.ref	hrt_2_to_8_turn2_anim,hrt_8_to_2_turn2_anim
	.ref	hrt_4_to_8_turn2_anim,hrt_6_to_2_turn2_anim
	.ref	hrt_2_to_6_turn2_anim,hrt_8_to_4_turn2_anim

	.ref	hrt_walk1_f2_anim,hrt_walk2_f2_anim,hrt_walk4_f2_anim
	.ref	hrt_walk5_f2_anim,hrt_walk6_f2_anim,hrt_walk8_f2_anim

	.ref	hrt_walk1_f4_anim,hrt_walk2_f4_anim,hrt_walk4_f4_anim
	.ref	hrt_walk5_f4_anim,hrt_walk6_f4_anim,hrt_walk8_f4_anim

	.ref	hrt_run2_anim,hrt_flying_kick_anim
	.ref	hrt_2_punch_anim,hrt_4_punch_anim
	.ref	hrt_2_kick_anim,hrt_4_kick_anim

	.ref	hrt_hitonground_anim,hrt_hitonground_facedown_anim

	.ref	hrt_2_butt_anim,hrt_4_butt_anim
	.ref	hrt_2_knee_anim,hrt_4_knee_anim

	.ref	hrt_2_stomp_anim,hrt_4_stomp_anim
	.ref	hrt_4_jump_kick_anim
	.ref	hrt_4_push_anim
	.ref	hrt_4_grabfling_anim,hrt_hiptoss_anim,hrt_hiptoss2_anim
	.ref	hrt_2_grabfling_anim
	.ref	hrt_faceup_getup_anim,hrt_facedown_getup_anim
	.ref	hrt_heldoh_anim
	.ref	hrt_pogo_anim
	.ref	hrt_2_ground_punch_anim,hrt_4_ground_punch_anim
	.ref	hrt_running_ground_punch_anim
	.ref	hrt_climb_down_anim,hrt_tbukl_leap_anim
	.ref	hrt_climb_up_anim,hrt_hh_2_ddt_anim
	.ref	hrt_running_ddt_anim
	.ref	hrt_2_hair_pickup_anim,hrt_2_pin_anim
	.ref	hrt_3_head_held_stand_anim
	.ref	hrt_4_hair_pickup_anim
	.ref	hrt_3_head_hold2_anim,hrt_4_knee_fall_anim
	.ref	hrt_3_head_hold_anim
	.ref	hrt_4_pin_anim,hrt_fall_back_anim

	.ref	hrt_4_uppercut_anim
	.ref	hrt_2_raise_arm_anim,hrt_4_raise_arm_anim

	.ref	hrt_2_super_punch2_anim
	.ref	hrt_4_super_punch2_anim
	.ref	hrt_4_super_punch_anim
	.ref	hrt_2_super_kick_anim,hrt_4_super_kick_anim
	.ref	hrt_3_pile_driver_anim,hrt_rake_face_anim

	.ref	hrt_knees_to_head_anim,hrt_uppercuts_to_head_anim
	.ref	hrt_roll_uppercut_anim,hrt_4_knee_to_head_anim
	.ref	hrt_2_shooter_anim,hrt_4_shooter_anim


	.ref	hrt_2_butts_anim,hrt_4_butts_anim

	.ref	DAM_MULT,BONUS_MESS




bret_secret_moves
	.long	ytkecharge_ddt
	.long	ytkeneck_grab
	.long	ytkegrab_fling
	.long	ytkehip_toss
	.long	ytkegrab_fling2
	.long	ytkehip_toss2
	.long	ytkeface_rake
	.long	ytkejump_kick
	.long	ytkesupercut
	.long	0


 SUBR	hrt_smove_table
	.long	hrt_charge_flying_kick
	.long	hrt_charge_face_rake
	.long	hrt_hdhold_pile
	.long	hrt_hdhold_ddt
	.long	hrt_hdhold_faceslam
	.long	hrt_grab_toss_air
	.long	hrt_roll_uppercut
	.long	hrt_hdhold_combo1
	.long	hrt_hdhold_combo2
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_BRET_FINISHES
	.long	hrt_finish_move1
	.endif
	.if NUM_BRET_FINISHES > 1
	.long	hrt_finish_move2
	.endif
	.long	0


ytkesupercut
	.word	B_PUNCH,		J_ALL
	.word	J_DOWN,			J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 16		;max
	.long	ytkescrt_cut

ytkescrt_cut
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ytkeout
	cmpi	MODE_DEAD,a0
	jrz	ytkeout
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout
	cmpi	MODE_ATTACHED,a0
	jrz	ytkeout

	movi	hrt_4_super_punch_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,PUNCH_T1,PUNCH_T2

	rets


ytkejump_kick
	.word	B_SKICK,		J_ALL
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 32		;max
	.long	ytkescrt_flykick

ytkescrt_flykick
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ytkeout
	cmpi	MODE_DEAD,a0
	jrz	ytkeout
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout
	cmpi	MODE_ATTACHED,a0
	jrz	ytkeout

	movi	hrt_4_jump_kick_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2

	rets

ytkecharge_ddt
	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_SPUNCH_BIT,a0
	jrz	ytkeno_punch



	move	*a13(PLYRNUM),a0
	calla	get_powerp_dtime
	cmpi	100,a0			;> min?
	jrlt	ytkeno_punch

	callr	ytkescrt_ddt
	setc
	rets

ytkeno_punch
	clrc
	rets


ytkescrt_ddt

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout
	cmpi	MODE_HEADHOLD,a0
	jrz	ytkeout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode

	move	*a13(PLYRMODE),a0
	cmpi	MODE_RUNNING,a0
	jrz	ytkeleapddt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	ytkenorm

ytkeleapddt
	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2
	movi	hrt_running_ddt_anim,a0
	calla	change_anim1a
	rets
ytkenorm
	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2
	movi	hrt_hh_2_ddt_anim,a0
	calla	change_anim1a
	rets


ytkeneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32		;max
	.long	ytkescrt_neck

ytkescrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ytkeout
	cmpi	MODE_DEAD,a0
	jrz	ytkeout
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	ytkeok2

	.ref	hrt_3_fake_hold_anim
	movi	hrt_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

ytkeok2
	move	*a13(CLOSEST_XDIST),a1
	cmpi	90,a1
	jrgt	ytkestd_grab

	movi	hrt_3_head_hold2_anim,a0
	calla	change_anim1a
ytkeout	rets

ytkestd_grab
	movi	hrt_3_head_hold_anim,a0
	calla	change_anim1a
	rets


ytkegrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	ytkescrt_grabfling2

ytkehip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	ytkescrt_grabfling2

ytkescrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	ytkeyes
	cmpi	MODE_RUNNING,a0
	jrz	ytkeyes
	rets

ytkegrab_fling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	ytkescrt_grabfling

ytkescrt_grabfling


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	ytkeyes
	cmpi	MODE_RUNNING,a0
	jrnz	ytkenope
ytkeyes
  	movi	hrt_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,GRABFLING_T1,PUNCH_T2
	rets

ytkenope
	calla	get_opp_plyrmode
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout
	cmpi	MODE_ONGROUND,a0
	jrz	ytkeout
	cmpi	MODE_DEAD,a0
	jrz	ytkeout


	FACE24	hrt,grabfling_anim
	calla	change_anim1a

	WRSND	W_BRET,GRABFLING_T1,PUNCH_T2
	rets

ytkehip_toss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	ytkescrt_hiptoss

ytkescrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ytkeout
	cmpi	MODE_DEAD,a0
	jrz	ytkeout
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout
	cmpi	MODE_INAIR,a0
	jrz	ytkedoit
	cmpi	MODE_INAIR2,a0
	jrz	ytkedoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	ytkeout

ytkedoit
	movi	hrt_hiptoss_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,HIPTOSS_T1,PUNCH_T2
	rets

ytkeface_rake
	.word	B_PUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_DOWN_TOWARD,		J_REAL_LR
	.word	J_DOWN,			J_REAL_LR
	.word	8000h | 30 		;max
	.long	ytkescrt_facerake

ytkescrt_facerake
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	ytkeout

	move	*a13(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jrz	ytkeout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	ytkeout
	cmpi	MODE_DEAD,a0
	jrz	ytkeout
	cmpi	MODE_HEADHELD,a0
	jrz	ytkeout


	WRSND	W_BRET,UPRCUT_T1,UPRCUT_T2

	movi	hrt_rake_face_anim,a0
	calla	change_anim1a
	rets


yflaCHARGE_TIME	.equ	SM_USRW1	;

hrt_charge_flying_kick

yflastart_over
	clr	a14
	move	a14,*a13(yflaCHARGE_TIME),W
yflaloop1
	SLEEPK	1

	move	*a13(yflaCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(yflaCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_SKICK_BIT,a0
	jrz	yflap1

	jruc	yflaloop1

yflap1

	move	*a13(yflaCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	yflastart_over

	move	*a8(GETUP_TIME),a0
	jrnz	yflastart_over
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	yflastart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	yflastart_over
	cmpi	MODE_ONGROUND,a0
	jrz	yflastart_over
	cmpi	MODE_DEAD,a0
	jrz	yflastart_over

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_ONGROUND,a0
	jrz	yflastart_over
	cmpi	MODE_DEAD,a0
	jrz	yflastart_over

	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	yflastart_over

	.ref	ck_ignore_a8
	calla	ck_ignore_a8
	jrc	yflastart_over

	movi	hrt_flying_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2

	SETMODE	INAIR

	jruc	yflastart_over
	


qwbyCHARGE_TIME	.equ	SM_USRW1	;

hrt_charge_face_rake

qwbystart_over
	clr	a14
	move	a14,*a13(qwbyCHARGE_TIME),W
qwbyloop1
	SLEEPK	1

	move	*a13(qwbyCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(qwbyCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	qwbyp1

	jruc	qwbyloop1

qwbyp1

	move	*a13(qwbyCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	qwbystart_over

	move	*a8(GETUP_TIME),a0
	jrnz	qwbystart_over
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	qwbystart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	qwbystart_over
	cmpi	MODE_ONGROUND,a0
	jrz	qwbystart_over
	cmpi	MODE_DEAD,a0
	jrz	qwbystart_over

	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	qwbystart_over

	movi	hrt_rake_face_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BRET,UPRCUT_T1,UPRCUT_T2

	jruc	qwbystart_over

	.if NUM_BRET_FINISHES
 SUBRP	hrt_finish_move1

lnkpTIMEOUT	.equ	TSEC

lnkpend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		lnkpend_wait			; br = no

lnkpreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,lnkpreset
	movi		lnkpTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,lnkpreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,lnkpreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,lnkpreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,lnkpreset

	movi		hrt_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_BRET_FINISHES > 1
 SUBRP	hrt_finish_move2

xstjTIMEOUT	.equ	TSEC

xstjend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		xstjend_wait			; br = no

xstjreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,xstjreset
	movi		xstjTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,xstjreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,xstjreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,xstjreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,xstjreset

	movi		hrt_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif


 SUBRP	hrt_roll_uppercut

cefmTIMEOUT	.equ	TSEC

cefmreset
	SLEEPK	1

	clr	a11

	WAITSWITCH_DWN	J_DOWN,		0,		cefmreset

	movi	cefmTIMEOUT,a11


	;this should make it nice and lenient...
	WAITSWITCH_DWN	J_TOWARD,J_UP|J_DOWN,cefmreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,	cefmreset

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	cefmreset

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	cefmreset				;ignore
    
	move	*a8(PLYRMODE),a0
	cmpi	MODE_ONTURNBKL,a0
	jreq	cefmreset
	cmpi	MODE_HEADHOLD,a0
	jreq	cefmreset
	cmpi	MODE_HEADHELD,a0
	jreq	cefmreset

	WRSND	W_BRET,GRABFLING_T1,GRABFLING_T2

	movi	hrt_roll_uppercut_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	clr	a0
	move	a0,*a8(RUN_TIME)


	jruc	cefmreset

hrt_hdhold_combo1

jnxyTIMEOUT	.equ	60

jnxylp0
	SLEEPK	1
jnxylp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	jnxylp0
	calla	CHECK_COMBO_GO
	jrlt	jnxylp0


	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,jnxylp

	movi	jnxyTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,jnxylp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,jnxylp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	jnxyslam
	cmpi	MODE_HEADHELD,a0
	jrnz	jnxylp0


jnxyslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	jnxylp0				;ignore


	;Target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	hrt_combo_punch_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	jnxylp

hrt_hdhold_combo2

gbtgTIMEOUT	.equ	60

gbtglp0
	SLEEPK	1
gbtglp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	gbtglp0
	calla	CHECK_COMBO_GO
	jrlt	gbtglp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,gbtglp

	movi	gbtgTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,gbtglp
	WAITSWITCH_DWN	B_SKICK,J_DOWN_TOWARD|J_UP_TOWARD,gbtglp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	gbtgslam
	cmpi	MODE_HEADHELD,a0
	jrnz	gbtglp0

gbtgslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	gbtglp0				;ignore


	;Target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	hrt_combo_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	gbtglp


hrt_hdhold_pile

wxmdTIMEOUT	.equ	60

wxmdlp0
	SLEEPK	1
wxmdlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wxmdcont
	cmpi	MODE_HEADHELD,a0
	jrnz	wxmdlp0

wxmdcont
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,wxmdlp

	movi	wxmdTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,wxmdlp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,wxmdlp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	wxmdslam
	cmpi	MODE_HEADHELD,a0
	jrnz	wxmdlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	wxmdlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wxmdlp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	wxmdis_reversal

wxmdslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	wxmdlp0				;ignore

	movi	35,A10			;Pile driver
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

wxmdis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	WRSND	W_BRET,GRABFLING_T1,GRABFLING_T2

	movi	hrt_3_pile_driver_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	wxmdlp

 SUBRP	hrt_hdhold_ddt

xtluTIMEOUT	.equ	60

xtlulp0
	SLEEPK	1
xtlulp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	xtlucont
	cmpi	MODE_HEADHELD,a0
	jrnz	xtlulp0

xtlucont
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,xtlulp

	movi	xtluTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,xtlulp
	WAITSWITCH_DWN	B_SKICK,J_ALL,xtlulp
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	xtluslam
	cmpi	MODE_HEADHELD,a0
	jrnz	xtlulp0
	move	*a8(I_WILL_DIE),A14
	jrnz	xtlulp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	xtlulp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	xtluis_reversal

xtluslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	xtlulp0				;ignore

	movk	16,A10			;Pile driver
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

xtluis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	hrt_hh_2_ddt_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	xtlulp

 SUBRP	hrt_hdhold_faceslam

oubeTIMEOUT	.equ	60

oubelp0
	SLEEPK	1
oubelp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	oubecont
	cmpi	MODE_HEADHELD,a0
	jrnz	oubelp0

oubecont
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,oubelp

	movi	oubeTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,oubelp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,oubelp
	
	
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	oubeslam
	cmpi	MODE_HEADHELD,a0
	jrnz	oubelp0
	move	*a8(I_WILL_DIE),A14
	jrnz	oubelp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	oubelp0				;ignore

	calla	DO_REVERSAL
	calla	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	oubeis_reversal

oubeslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	oubelp0				;ignore

	movk	20,A10			;Pile driver
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

oubeis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	hrt_3_face_driver2_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	oubelp

 SUBRP	hrt_grab_toss_air

dkytTIMEOUT	.equ	40

dkytlp0
	SLEEPK	1
dkytlp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,dkytlp

	movi	dkytTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,dkytlp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,dkytlp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	dkytlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	dkytlp0

	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
	cmpi	MODE_ONGROUND,a0
	jrz	dkytlp
	cmpi	MODE_DEAD,a0
	jrz	dkytlp
	cmpi	MODE_INAIR,a0
	jrz	dkytdoit2
	cmpi	MODE_INAIR2,a0
	jrz	dkytdoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	dkytdoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	dkytlp

	movi	hrt_hiptoss_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BRET,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20
	jruc	dkytlp

dkytdoit2	movi	hrt_hiptoss2_anim,a0
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_BRET,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20

	jruc	dkytlp




 SUBR	bret_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	whjjp1
	movi	hrt_stand4_anim,a0
	calla	change_anim1a

	movi	hrt_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

whjjp1
	movi	hrt_stand2_anim,a0
	calla	change_anim1a

	movi	hrt_torso2_anim,a0
	calla	change_anim2a

	rets



 SUBR	move_bret


	movi	bret_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	lpfemode_table,a0
	move	*a0,a0,L
	call	a0
	rets

lpfemode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	.long	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal		;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal		;22
	.long	mode_normal		;23
	.long	mode_chokehold		;24
	.long	mode_choking		;25


mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	limpno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	limpnope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	limpnope
	movi	hrt_fall_back_anim,a0
	calla	change_anim1a

	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

limpnope
	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	limpopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	limpopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	limpno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	limpno_pin_yet
limpno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	limpraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	limpraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	limpno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	limpopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	hrt,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

limpraisearm
	FACE24	hrt,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

limptoo_far_to_pin
limpopp_notgnd
limpopp_not_dead
limpno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	limpimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	limpnblk			;1 for down transitions
	callr	limpblock			;& 1 for current buttons
	jrc	limpnblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
limpnblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	limppunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	limpaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	limpno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	limpno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

limpimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
limpno_climb
	calla	execute_walk

limpno_interrupt
	rets

limpaction_table
	.long	limpz,limppunch,limpblock,limpblock			;0-3
	.long	limpsuper_punch,limpsuper_punch,limpblock,limpblock	;4-7
	.long	limpkick,limppunchkick,limpblock,limpblock		;8-11
	.long	limpsuper_punch,limppunchkick,limpblock,limpblock	;12-15
	.long	limpsuper_kick,limpsuper_kick,limpblock,limpblock	;16-19
	.long	limpgraboh,limpgraboh,limpblock,limpblock		;20-23
	.long	limpsuper_kick,limppunchkick,limpblock,limpblock	;24-27
	.long	limpgraboh,limpgraboh,limpblock,limpblock		;28-31

limpz		;0

	rets


limppunch		;1
	JJXM_INIT
	JJXM	NORMAL,		 50, 45,limppunch_hdbutt,limppunch_punch	;0
	JJXM	RUNNING,	 50, 45,limppunch_hdbutt,limppunch_punch	;1
	JJXM	INAIR,		 50, 45,limppunch_hdbutt,limppunch_punch	;2
	JJXM	ATTACHED,	 50, 45,limppunch_hdbutt,limppunch_punch	;3
	JJXM	ONGROUND,	160,140,limppunch_lbowdrop,limppunch_punch	;4
	JJXM	BOUNCING,	 50, 45,limppunch_hdbutt,limppunch_punch	;1
	JJXM	ONTURNBKL,	 50, 45,limppunch_hdbutt,limppunch_punch	;6
	JJXM	BLOCK,		 50, 45,limppunch_hdbutt,limppunch_punch	;7
	JJXM	DIZZY,		 50, 45,limppunch_hdbutt,limppunch_punch	;8
	JJXM	DEAD,		160,140,limppunch_lbowdrop,limppunch_punch	;9
	JJXM	OPPOVERHEAD,	 50, 45,limppunch_hdbutt,limppunch_punch	;10
	JJXM	CLIMBTURNBKL,		limppunch_punch			;11
	JJXM	WAITANIM,	 50, 45,limppunch_hdbutt,limppunch_punch	;12
	JJXM	GRAPPLE,	 50, 45,limppunch_hdbutt,limppunch_punch	;13
	JJXM	MASTER,		 50, 45,limppunch_hdbutt,limppunch_punch	;14
	JJXM	SLAVE, 		 50, 45,limppunch_hdbutt,limppunch_punch	;15
	JJXM	HEADHOLD,	 50, 45,limppunch_hdbutt,limppunch_punch	;16
	JJXM	HEADHELD,	 50, 45,limppunch_hdbutt,limppunch_punch	;19
	JJXM	CHOKEHOLD,	 50, 45,limppunch_hdbutt,limppunch_punch	;16
	JJXM	PUPPET,		 50, 45,limppunch_hdbutt,limppunch_punch	;20
	JJXM	PUPPET2,	 50, 45,limppunch_hdbutt,limppunch_punch	;20
	JJXM	INAIR2,		 50, 45,limppunch_hdbutt,limppunch_punch	;21
	JJXM_END

limppunch_rets
	rets

limppunch_punch
std_punch

	FACE24	hrt,punch_anim
	calla	change_anim1a

	WRSND	W_BRET,PUNCH_T1,PUNCH_T2
	rets

limppunch_hdbutt

	FACE24	hrt,butt_anim
	calla	change_anim1a

	WRSND	W_BRET,HDBUTT_T1,HDBUTT_T2
	rets

limppunch_lbowdrop

	FACE24	hrt,ground_punch_anim
	calla	change_anim1a

	WRSND	W_BRET,LBOWDROP_T1,LBOWDROP_T2
	rets


limpblock		;2
std_block

	move	@blocking_off,a0
	jrnz	limpno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	hrt_4_block_anim,a0
	calla	change_anim1

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

limpno_blocking
	setc
	rets


limpsuper_punch	;4
	JJXM_INIT
	JJXM	NORMAL,		 70, 45,limpspunch_special,limpspunch_slap	;0
	JJXM	RUNNING,	 70, 45,limpspunch_special,limpspunch_slap	;1
	JJXM	INAIR,		 70, 45,limpspunch_special,limpspunch_slap	;2
	JJXM	ATTACHED,	 70, 45,limpspunch_special,limpspunch_slap	;3
	JJXM	ONGROUND,	160,140,limpspunch_lbowdrop,std_punch	;4
	JJXM	BOUNCING,	 70, 45,limpspunch_special,limpspunch_slap	;1
	JJXM	ONTURNBKL,	 	limpspunch_slap			;6
	JJXM	BLOCK,		 70, 45,limpspunch_special,limpspunch_slap	;7
	JJXM	DIZZY,		 70, 45,limpspunch_special,limpspunch_slap	;8
	JJXM	DEAD,		160,140,limpspunch_lbowdrop,std_punch	;9
	JJXM	OPPOVERHEAD,	 70, 45,limpspunch_special,limpspunch_slap	;10
	JJXM	CLIMBTURNBKL,		std_punch			;11
	JJXM	WAITANIM,	 70, 45,limpspunch_special,limpspunch_slap	;12
	JJXM	GRAPPLE,	 70, 45,limpspunch_special,limpspunch_slap	;13
	JJXM	MASTER,		 70, 45,limpspunch_special,limpspunch_slap	;14
	JJXM	SLAVE, 		 70, 45,limpspunch_special,limpspunch_slap	;15
	JJXM	HEADHOLD,	 70, 45,limpspunch_special,limpspunch_slap	;16
	JJXM	HEADHELD,		limpz	;do_pile		;19
	JJXM	CHOKEHOLD,	 70, 45,limpspunch_special,limpspunch_slap	;16
	JJXM	PUPPET,		 70, 45,limpspunch_special,limpspunch_slap	;20
	JJXM	PUPPET2,	 70, 45,limpspunch_special,limpspunch_slap	;20
	JJXM	INAIR2,		 70, 45,limpspunch_special,limpspunch_slap	;21
	JJXM_END

limpspunch_special
	move	*a13(STICK_VAL_CUR),a0
	btst	MOVE_DOWN_BIT,a0
	jrnz	limpuppercut

	move	*a13(CLOSEST_XDIST),a1
	cmpi	55,a1
	jrgt	std_punch

	FACE24	hrt,butts_anim
	calla	change_anim1

	WRSND	W_BRET,HDBUTT_T1,HDBUTT_T2

	rets

limpuppercut

	movi	hrt_4_uppercut_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,UPRCUT_T1,UPRCUT_T2

	rets

limpspunch_lbowdrop



	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	limpno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	30h,a1	;28
 	jrlt	limpno


	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	limpfeet


	FACE24	hrt,hair_pickup_anim
	calla	change_anim1

	WRSND	W_BRET,LBOWDROP_T1,LBOWDROP_T2
    
	rets

limpfeet
	cmpi	40h,a1	;28
 	jrlt	limpno

	FACE24	hrt,shooter_anim
	calla	change_anim1a
	WRSND	W_BRET,LBOWDROP_T1,LBOWDROP_T2
	rets

limpno
	FACE24	hrt,ground_punch_anim
	calla	change_anim1

	WRSND	W_BRET,LBOWDROP_T1,LBOWDROP_T2
	rets

limpspunch_slap

	FACE24	hrt,super_punch2_anim
	calla	change_anim1a

	WRSND	W_BRET,PUNCH_T1,PUNCH_T2

	rets

limpkick		;8
	JJXM_INIT
	JJXM	NORMAL,		 50, 92,limpkick_knee,limpkick_kick		;0
	JJXM	RUNNING,	 50, 92,limpkick_knee,limpkick_kick		;0
	JJXM	INAIR,		 50, 92,limpkick_knee,limpkick_kick		;2
	JJXM	ATTACHED,	 50, 92,limpkick_knee,limpkick_kick		;3
	JJXM	ONGROUND,	160,140,limpkick_stomp,limpkick_kick		;4
	JJXM	BOUNCING,	 50, 92,limpkick_knee,limpkick_kick		;0
	JJXM	ONTURNBKL,	 	limpkick_kick			;6
	JJXM	BLOCK,		 50, 92,limpkick_knee,limpkick_kick		;7
	JJXM	DIZZY,		 50, 92,limpkick_knee,limpkick_kick		;8
	JJXM	DEAD,		160,140,limpkick_stomp,limpkick_kick		;9
	JJXM	OPPOVERHEAD,	 50, 92,limpkick_knee,limpkick_kick		;10
	JJXM	CLIMBTURNBKL,	 	limpkick_kick			;11
	JJXM	WAITANIM,	 50, 92,limpkick_knee,limpkick_kick		;12
	JJXM	GRAPPLE,	 50, 92,limpkick_knee,limpkick_kick		;13
	JJXM	MASTER,		 50, 92,limpkick_knee,limpkick_kick		;14
	JJXM	SLAVE, 		 50, 92,limpkick_knee,limpkick_kick		;15
	JJXM	HEADHOLD,	 50, 92,limpkick_knee,limpkick_kick		;16
	JJXM	HEADHELD,	 50, 92,limpkick_knee,limpkick_kick		;19
	JJXM	CHOKEHOLD,	 50, 92,limpkick_knee,limpkick_kick		;16
	JJXM	PUPPET,		 50, 92,limpkick_knee,limpkick_kick		;20
	JJXM	PUPPET2,	 50, 92,limpkick_knee,limpkick_kick		;20
	JJXM	INAIR2,		 	limpkick_TB			;21
	JJXM_END

limpkick_TB
	.ref	hrt_kick_TB_anim
	movi	hrt_kick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,KICK_T1,KICK_T2
	rets

limpkick_kick
std_kick

	FACE24	hrt,kick_anim
	calla	change_anim1a

	WRSND	W_BRET,KICK_T1,KICK_T2
	rets

limpkick_knee
std_knee

	FACE24	hrt,knee_anim
	calla	change_anim1a

	WRSND	W_BRET,KICK_T1,KICK_T2
	rets

limpkick_stomp
std_stomp

	FACE24	hrt,stomp_anim
	calla	change_anim1a

	WRSND	W_BRET,KICK_T1,KICK_T2

	rets

limppunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets

limpsuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,		 60, 60,limpskick_special,limpskick_kick	;0
	JJXM	RUNNING,	 60, 60,limpskick_special,limpskick_kick	;0
	JJXM	INAIR,		 60, 60,limpskick_special,limpskick_kick	;2
	JJXM	ATTACHED,	 60, 60,limpskick_special,limpskick_kick	;3
	JJXM	ONGROUND,	160,140,std_stomp,std_kick		;4
	JJXM	BOUNCING,	 60, 60,limpskick_special,limpskick_kick	;0
	JJXM	ONTURNBKL,	 60, 96,limpskick_kick,std_kick		;6
	JJXM	BLOCK,		 60, 60,limpskick_special,limpskick_kick	;7
	JJXM	DIZZY,		 60, 60,limpskick_special,limpskick_kick	;8
	JJXM	DEAD,		160,140,std_stomp,std_kick		;9
	JJXM	OPPOVERHEAD,	 60, 60,limpskick_special,limpskick_kick	;10
	JJXM	CLIMBTURNBKL,	 60, 96,limpskick_kick,std_kick		;11
	JJXM	WAITANIM,	 60, 62,limpskick_special,limpskick_kick	;12
	JJXM	GRAPPLE,	 60, 62,limpskick_special,limpskick_kick	;13
	JJXM	MASTER,		 60, 62,limpskick_special,limpskick_kick	;14
	JJXM	SLAVE, 		 60, 62,limpskick_special,limpskick_kick	;15
	JJXM	HEADHOLD,	 60, 62,limpskick_special,limpskick_kick	;16
	JJXM	HEADHELD,	 	std_kick
	JJXM	CHOKEHOLD,	 60, 62,limpskick_special,limpskick_kick	;16
	JJXM	PUPPET,		 60, 62,limpskick_special,limpskick_kick	;20
	JJXM	PUPPET2,	 60, 62,limpskick_special,limpskick_kick	;20
	JJXM	INAIR2,		 	limpkick_TB			;21
	JJXM_END

limpgraboh
limpskick_kick

	FACE24	hrt,super_kick_anim
	calla	change_anim1a

	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2
	rets

limpskick_special
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	std_knee

	movi	hrt_4_knee_fall_anim,a0
	calla	change_anim1

	WRSND	W_BRET,KICK_T1,KICK_T2
	rets




hugfXRUN_VAL	equ	HRT_XRUN
hugfXRUN2_VAL	equ	HRT_XRUN2
hugfZDRIFT_VAL	equ	HRT_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	hugfno_vel

	calla	bounce_off_ropes

	movi	hugfXRUN_VAL,a0

	move	*a13(WALK_FAST),a14
	jrz	hugfno
	movi	hugfXRUN2_VAL,a0
hugfno
	move	@hyper_speed_on,a14
	sll	a14,a0

	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	hugfpos
	neg	a0
hugfpos
	move	a0,*a13(OBJ_XVEL),L

hugfno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	hugfout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	hugfno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	hugfcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

hugfcontinue_run
hugfno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-hugfZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	hugfsetvel

	movi	hugfZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	hugfsetvel

	clr	a1
hugfsetvel
	move	a1,*a13(OBJ_ZVEL),L

	move	*a13(DELAY_BUTNS),a0
	jrnz	hugfout_of_control




	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	hugfaction_table,a0
	move	*a0,a0,L
	call	a0
hugfout_of_control
	rets

hugfaction_table
	.long	hugfz,hugfpunch,hugfblock,hugfblock			;0-3
	.long	hugfsuper_punch,hugfsuper_punch,hugfblock,hugfblock	;4-7
	.long	hugfkick,hugfpunchkick,hugfblock,hugfblock		;8-11
	.long	hugfsuper_punch,hugfpunchkick,hugfblock,hugfblock	;12-15
	.long	hugfsuper_kick,hugfsuper_kick,hugfblock,hugfblock	;16-19
	.long	hugfgraboh,hugfgraboh,hugfblock,hugfblock		;20-23
	.long	hugfsuper_kick,hugfpunchkick,hugfblock,hugfblock	;24-27
	.long	hugfgraboh,hugfgraboh,hugfblock,hugfblock		;28-31


hugfz
	rets


hugfpunch		;1
hugfsuper_punch	;4
hugfpunchkick
hugfgraboh
	JJXM_INIT
	JJXM	NORMAL,			hugfpunch_clothesline		;0
	JJXM	RUNNING,		hugfpunch_clothesline		;1
	JJXM	INAIR,			hugfpunch_clothesline		;2
	JJXM	ATTACHED,		hugfpunch_clothesline		;3
	JJXM	ONGROUND,		hugfpunch_bellyflop		;4
	JJXM	BOUNCING,		hugfpunch_clothesline		;5	
	JJXM	ONTURNBKL,		hugfpunch_clothesline		;6
	JJXM	BLOCK,			hugfpunch_clothesline		;7
	JJXM	DIZZY,			hugfpunch_clothesline		;8
	JJXM	DEAD,			hugfpunch_bellyflop		;9
	JJXM	OPPOVERHEAD,		hugfpunch_clothesline		;10
	JJXM	CLIMBTURNBKL,		hugfpunch_clothesline		;11
	JJXM	WAITANIM,	 	hugfpunch_clothesline		;12
	JJXM	GRAPPLE,	 	hugfpunch_clothesline		;13
	JJXM	MASTER,		 	hugfpunch_clothesline		;14
	JJXM	SLAVE, 		 	hugfpunch_clothesline		;15
	JJXM	HEADHOLD,	 	hugfpunch_clothesline		;16
	JJXM	HEADHELD,	 	hugfpunch_clothesline		;19
	JJXM	CHOKEHOLD,	 	hugfpunch_clothesline		;16
	JJXM	PUPPET,		 	hugfpunch_clothesline		;20
	JJXM	PUPPET2,	 	hugfpunch_clothesline		;20
	JJXM	INAIR2,			hugfpunch_clothesline		;21
	JJXM_END


hugfpunch_rets
	rets

hugfpunch_clothesline

	;don't do it if you're running away from your opponent.
	move	*a13(FACING_DIR),a0
	move	*a13(NEW_FACING_DIR),a1
	and	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	jrz	hugfz


	movi	hrt_running_ddt_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2

	rets

hugfpunch_bellyflop
std_bellyflop

	;don't do it if you're running away from your opponent.
	move	*a13(FACING_DIR),a0
	move	*a13(NEW_FACING_DIR),a1
	and	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	jrz	hugfz

	movi	hrt_running_ground_punch_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2

	rets

hugfblock		;2

	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block

hugfkick		;8
hugfsuper_kick	;16
	JJXM_INIT
	JJXM	NORMAL,			hugfkick_flyingkick
	JJXM	BLOCK,			hugfkick_flyingkick
	JJXM	DIZZY,			hugfkick_flyingkick
	JJXM	ONGROUND,		std_bellyflop
	JJXM	RUNNING,		hugfkick_flyingkick
	JJXM	BOUNCING,		hugfkick_flyingkick
	JJXM	ONTURNBKL,		hugfkick_flyingkick
	JJXM	CLIMBTURNBKL,		hugfkick_flyingkick
	JJXM	INAIR,			hugfkick_flyingkick
	JJXM	ATTACHED,		hugfkick_flyingkick
	JJXM	DEAD,			std_bellyflop
	JJXM	OPPOVERHEAD,		hugfkick_flyingkick
	JJXM	WAITANIM,		hugfkick_flyingkick
	JJXM	GRAPPLE,		hugfkick_flyingkick
	JJXM	MASTER,			hugfkick_flyingkick
	JJXM	SLAVE,			hugfkick_flyingkick
	JJXM	HEADHOLD,		hugfkick_flyingkick
	JJXM	HEADHELD,		hugfkick_flyingkick
	JJXM	CHOKEHOLD,		hugfkick_flyingkick
	JJXM	PUPPET,			hugfkick_flyingkick
	JJXM	PUPPET2,		hugfkick_flyingkick
	JJXM	INAIR2,			hugfkick_flyingkick
	JJXM_END

hugfkick_rets
	rets

hugfkick_flyingkick

	calla	ck_ignore
	jrc	hugfz

	movi	hrt_flying_kick_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_BRET,FLYKICK_T1,FLYKICK_T2

	rets



mode_inair	;2

	rets


mode_attached	;3

	calla	keep_attached
	jrnz	seoustill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

seoustill_attached
	rets


mode_onground	;4

	rets



mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	maxwnot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	hrt_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING


maxwnot_ended
	rets


mode_onturnbkl	;6


	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	yucgno_climbdown

	movi	hrt_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

yucgno_interrupt
	rets

yucgno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	yucgz

	X32	a0
	addi	yucgaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets



yucgaction_table
	.long	yucgz,yucgpunch,yucgblock,yucgblock			;0-3
	.long	yucgsuper_punch,yucgsuper_punch,yucgblock,yucgblock	;4-7
	.long	yucgkick,yucgpunchkick,yucgblock,yucgblock		;8-11
	.long	yucgsuper_punch,yucgpunchkick,yucgblock,yucgblock	;12-15
	.long	yucgsuper_kick,yucgsuper_kick,yucgblock,yucgblock	;16-19
	.long	yucggraboh,yucggraboh,yucgblock,yucgblock		;20-23
	.long	yucgsuper_kick,yucgpunchkick,yucgblock,yucgblock	;24-27
	.long	yucggraboh,yucggraboh,yucgblock,yucgblock		;28-31


yucgz
	rets

yucgpunch		;1
yucgblock		;2
yucgsuper_punch	;4
yucgkick		;8
yucgsuper_kick	;16
yucggraboh
yucgpunchkick

	SETMODE	INAIR

	WRSND	W_BRET,TURNDIVE_T1,TURNDIVE_T2

	movi	hrt_tbukl_leap_anim,a0
	calla	change_anim1a

	rets


mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	nlkjno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	nlkjno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	nlkjno
	cmpi	45,a0
	jrlt	nlkjno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	nlkjpunchblock

nlkjno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	nlkjno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	nlkjset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	nlkjaction_table,a0
	move	*a0,a0,L
	call	a0

nlkjno_interrupt
	rets

nlkjset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

nlkjaction_table
	.long	nlkjz,nlkjpunchblock,nlkjz	;0-2
	.long	nlkjpunchblock		;3
	.long	nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz	;4-10
	.long	nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz	;11-17
	.long	nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz	;18-24
	.long	nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz,nlkjz	;25-31

nlkjz
	rets

nlkjpunchblock	;3


	SETMODE	NORMAL

	movi	hrt_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,PUSH_T1,PUSH_T2

	rets



mode_dizzy	;8

	rets


mode_oppoverhead ;10
	rets


mode_climbturnbkl	;11

	rets



mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	fgobnot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

fgobnot_ended
	rets



mode_grapple	;13

	rets


mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets


mode_slave	;15
	rets


mode_headhold	;16

	.ref	bozo_check
	calla	bozo_check
	jrnc	tsiqfail

	WRSND	W_BRET,GRABFLING_T1,GRABFLING_T2

	movi	hrt_3_pile_driver_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	tsiqtag
	movi	hrt_hh_2_ddt_anim,a0
tsiqtag	calla	change_anim1a

	rets

tsiqfail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	tsiqexit


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	tsiqno_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	tsiqaction_table,a0
	move	*a0,a0,L
	call	a0

tsiqno_interrupt
	rets

tsiqexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	tsiqright
	movk	MOVE_DOWN_LEFT,a1
tsiqright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

tsiqaction_table
	.long	tsiqz,tsiqpunch,tsiqblock,tsiqblock			;0-3
	.long	tsiqsuper_punch,tsiqsuper_punch,tsiqblock,tsiqblock	;4-7
	.long	tsiqkick,tsiqpunchkick,tsiqblock,tsiqblock		;8-11
	.long	tsiqsuper_punch,tsiqpunchkick,tsiqblock,tsiqblock	;12-15
	.long	tsiqsuper_kick,tsiqsuper_kick,tsiqblock,tsiqblock	;16-19
	.long	tsiqgraboh,tsiqgraboh,tsiqblock,tsiqblock		;20-23
	.long	tsiqsuper_kick,tsiqpunchkick,tsiqblock,tsiqblock	;24-27
	.long	tsiqgraboh,tsiqgraboh,tsiqblock,tsiqblock		;28-31



tsiqblock
tsiqgraboh
tsiqz		;0
	rets

tsiqpunch		;1

	CALLA	FIND_AND_KILL_ENDLESS

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	tsiqknee

	WRSND	W_BRET,UPRCUT_T1,UPRCUT,T2

	movi	hrt_uppercuts_to_head_anim,a0
	calla	change_anim1a
	rets

tsiqsuper_punch	;4
	CALLA	FIND_AND_KILL_ENDLESS

	move	*a13(STICK_VAL_CUR),a0
	btst	MOVE_DOWN_BIT,a0
	jrz	tsiqsuper_kick

	SPCDMG	D_UPRCUT/2,15

	movi	hrt_4_uppercut_anim,a0
	calla	change_anim1a

	WRSND	W_BRET,UPRCUT_T1,UPRCUT,T2

	rets


tsiqkick		;8

	CALLA	FIND_AND_KILL_ENDLESS

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	tsiqknee

	WRSND	W_BRET,UPRCUT_T1,UPRCUT,T2

	movi	hrt_knees_to_head_anim,a0
	calla	change_anim1a
	rets

tsiqpunchkick	;9
tsiqknee
	CALLA	FIND_AND_KILL_ENDLESS

	movi	hrt_4_knee_to_head_anim,a0
	calla	change_anim1a
	WRSND	W_BRET,KICK_T1,KICK_T2
	rets

tsiqsuper_kick	;16
	rets


mode_puppet2	;17

	rets

mode_headheld	;19
	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking


	calla	bozo_check
	jrnc	whnxfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_BRET,GRABFLING_T1,GRABFLING_T2

	movi	hrt_3_pile_driver_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	whnxtag
	movi	hrt_hh_2_ddt_anim,a0
whnxtag	calla	change_anim1a

	rets
whnxfail

	move	*a13(ATTACH_PROC),a0,L
	jrnz	whnxno_luck

	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	whnxno_luck


	movi	hrt_3_head_held_stand_anim,a0
	calla	change_anim1a

whnxno_luck
	rets

mode_chokehold	;24
	rets


euzkVEL	equ	3a000h		;38000h	;30000h
euzkDVEL	equ	31000h		;27978h	;21f0eh


 SUBR hrt_velocity_table


	.long	0,	-euzkVEL	;0 UP

	.long	euzkDVEL,	-euzkDVEL	;1 UP-RIGHT

	.long	euzkVEL,	0	;2 RIGHT

	.long	euzkDVEL,	euzkDVEL	;3 DOWN-RIGHT

	.long	0,	euzkVEL	;4 DOWN

	.long	-euzkDVEL,	euzkDVEL	;5 DOWN-LEFT

	.long	-euzkVEL,	0	;6 LEFT

	.long	-euzkDVEL,	-euzkDVEL	;7 UP-LEFT



 SUBR hrt_rotate_anims_table
	.long	hrt_stand2_anim		;new = up right
	.long	hrt_2_to_4_turn_anim	;    = down right
	.long	hrt_2_to_6_turn_anim	;    = down left ***
	.long	hrt_2_to_8_turn_anim	;    = up left

	.long	hrt_4_to_2_turn_anim	;new = up right
	.long	hrt_stand4_anim		;    = down right
	.long	hrt_4_to_6_turn_anim	;    = down left
	.long	hrt_4_to_8_turn_anim	;    = up left ***

	.long	hrt_6_to_2_turn_anim	;new = up right ***
	.long	hrt_6_to_4_turn_anim	;    = down right
	.long	hrt_stand6_anim		;    = down left
	.long	hrt_6_to_8_turn_anim	;    = up left

	.long	hrt_8_to_2_turn_anim	;new = up right
	.long	hrt_8_to_4_turn_anim	;    = down right ***
	.long	hrt_8_to_6_turn_anim	;    = down left
	.long	hrt_stand8_anim		;    = up left


 SUBR hrt_leg_anims_table
	.long	hrt_walk1_f2_anim	;1 (UP)
	.long	hrt_walk1_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk1_f4_anim	;3 (RIGHT)
	.long	hrt_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk1_f4_anim	;5 (DOWN)
	.long	hrt_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk1_f2_anim	;7 (LEFT)
	.long	hrt_walk1_f2_anim	;8 (UP-LEFT)

	.long	hrt_walk2_f2_anim	;1 (UP)
	.long	hrt_walk2_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk2_f2_anim	;3 (RIGHT)
	.long	hrt_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk8_f4_anim	;5 (DOWN)
	.long	hrt_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk4_f2_anim	;7 (LEFT)
	.long	hrt_walk4_f2_anim	;8 (UP-LEFT)

	.long	hrt_walk2_f2_anim	;1 (UP)
	.long	hrt_walk2_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk2_f2_anim	;3 (RIGHT)
	.long	hrt_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk4_f4_anim	;5 (DOWN)
	.long	hrt_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk6_f2_anim	;7 (LEFT)
	.long	hrt_walk6_f2_anim	;8 (UP-LEFT)


	.long	hrt_walk2_f2_anim	;1 (UP)
	.long	hrt_walk8_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk4_f4_anim	;3 (RIGHT)
	.long	hrt_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk2_f4_anim	;5 (DOWN)
	.long	hrt_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk2_f2_anim	;7 (LEFT)
	.long	hrt_walk6_f2_anim	;8 (UP-LEFT)

	.long	hrt_walk5_f2_anim	;1 (UP)
	.long	hrt_walk5_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk5_f4_anim	;3 (RIGHT)
	.long	hrt_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk5_f4_anim	;5 (DOWN)
	.long	hrt_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk5_f2_anim	;7 (LEFT)
	.long	hrt_walk5_f2_anim	;8 (UP-LEFT)

	.long	hrt_walk2_f2_anim	;1 (UP)
	.long	hrt_walk6_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk2_f2_anim	;3 (RIGHT)
	.long	hrt_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk2_f4_anim	;5 (DOWN)
	.long	hrt_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk2_f2_anim	;7 (LEFT)
	.long	hrt_walk8_f2_anim	;8 (UP-LEFT)

	.long	hrt_walk2_f2_anim	;1 (UP)
	.long	hrt_walk6_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk6_f2_anim	;3 (RIGHT)
	.long	hrt_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk4_f4_anim	;5 (DOWN)
	.long	hrt_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk2_f2_anim	;7 (LEFT)
	.long	hrt_walk2_f2_anim	;8 (UP-LEFT)

	.long	hrt_walk2_f2_anim	;1 (UP)
	.long	hrt_walk4_f2_anim	;2 (UP_RIGHT)
	.long	hrt_walk6_f2_anim	;3 (RIGHT)
	.long	hrt_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	hrt_walk6_f4_anim	;5 (DOWN)
	.long	hrt_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	hrt_walk2_f2_anim	;7 (LEFT)
	.long	hrt_walk2_f2_anim	;8 (UP-LEFT)


 SUBR hrt_torso_anims_table
	.long	hrt_torso2_anim		;new = up right
	.long	hrt_2_to_4_turn2_anim	;    = down right
	.long	hrt_2_to_6_turn2_anim	;    = down left ***
	.long	hrt_2_to_8_turn2_anim	;    = up left

	.long	hrt_4_to_2_turn2_anim	;new = up right
	.long	hrt_torso4_anim		;    = down right
	.long	hrt_4_to_6_turn2_anim	;    = down left
	.long	hrt_4_to_8_turn2_anim	;    = up left ***

	.long	hrt_6_to_2_turn2_anim	;new = up right ***
	.long	hrt_6_to_4_turn2_anim	;    = down right
	.long	hrt_torso6_anim		;    = down left
	.long	hrt_6_to_8_turn2_anim	;    = up left

	.long	hrt_8_to_2_turn2_anim	;new = up right
	.long	hrt_8_to_4_turn2_anim	;    = down right ***
	.long	hrt_8_to_6_turn2_anim	;    = down left
	.long	hrt_torso8_anim		;    = up left



	.end

