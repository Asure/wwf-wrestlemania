TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "razor.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "macros.h"
      10                            .include        "jjxm.h"
      11                            .include        "mproc.equ"             ;Mproc equates
      12                            .include        "display.equ"           ;Display proc equates
      13                            .include        "gsp.equ"               ;Gsp asm equates
      14                            .include        "sys.equ"
      15                            .include        "game.equ"
      16                            .include        "plyr.equ"
      17                            .include        "anim.equ"
      18                            .include        "audit.equ"
      19                            .include        "sound.h"
      20                            .include        "ring.equ"
      21                            .include        "lifebar.h"
      22                            .include        "damage.equ"
      23                    
      24                    
      25                    
      26                            .ref    change_anim1a,change_anim2a,do_taunt,bounce_off_ropes
      27                            .ref    check_secret_moves,master_keep_attached,ck_ignore
      28                            .ref    climb_turnbuckle,execute_walk,get_opp_plyrmode,mode_inair2
      29                            .ref    process_ptrs,keep_attached,FIND_AND_KILL_ENDLESS
      30                            .ref    change_anim1,JUMP_ROPES,PCNT
      31                            .ref    DO_REVERSAL,DO_REVERSAL_MESS,CHECK_COMBO_GO
      32                            .ref    ADD_IF_SILENT,CLIMB_ROPES,can_pin
      33                            .ref    get_opp_process,round_award,set_raisearm_bit
      34                            .ref    BONUS_MESS,ck_teammate_pin,raisearm_check
      35                            .ref    BLOCK_WOOSH,drone_change_back
      36                            .ref    blocking_off,std_taunt,std_walk_fast
      37                            .ref    hyper_speed_on
      38                            .ref    in_finish_move
      39                            .ref    p1rounds,p2rounds
      40                            .if NUM_RAZOR_FINISHES
      41                            .ref    rzr_finish1_move
      42                            .if NUM_RAZOR_FINISHES > 1
      43                            .ref    rzr_finish2_move
      44                            .endif
      45                            .endif
      46                    
      47                    
      48                            .ref    rzr_run2_anim
      49                    
      50                            .ref    start_run_anim
      51                    
      52                            .ref    rzr_3_head_hold2_anim
      53                            .ref    rzr_3_head_hold_anim
      54                    
      55                            .ref    rzr_stand2_anim,rzr_stand8_anim
      56                            .ref    rzr_stand4_anim,rzr_stand6_anim
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    2

      57                            .ref    rzr_torso2_anim,rzr_torso8_anim
      58                            .ref    rzr_torso4_anim,rzr_torso6_anim
      59                    
      60                            .ref    rzr_2_to_4_turn_anim,rzr_8_to_6_turn_anim       ;stand
      61                            .ref    rzr_4_to_2_turn_anim,rzr_6_to_8_turn_anim
      62                            .ref    rzr_4_to_6_turn_anim,rzr_6_to_4_turn_anim
      63                            .ref    rzr_2_to_8_turn_anim,rzr_8_to_2_turn_anim
      64                            .ref    rzr_4_to_8_turn_anim,rzr_6_to_2_turn_anim
      65                            .ref    rzr_2_to_6_turn_anim,rzr_8_to_4_turn_anim
      66                    
      67                            .ref    rzr_2_to_4_turn2_anim,rzr_8_to_6_turn2_anim     ;torso
      68                            .ref    rzr_4_to_2_turn2_anim,rzr_6_to_8_turn2_anim
      69                            .ref    rzr_4_to_6_turn2_anim,rzr_6_to_4_turn2_anim
      70                            .ref    rzr_2_to_8_turn2_anim,rzr_8_to_2_turn2_anim
      71                            .ref    rzr_4_to_8_turn2_anim,rzr_6_to_2_turn2_anim
      72                            .ref    rzr_2_to_6_turn2_anim,rzr_8_to_4_turn2_anim
      73                    
      74                            .ref    rzr_walk1_f2_anim,rzr_walk2_f2_anim,rzr_walk4_f2_anim
      75                            .ref    rzr_walk5_f2_anim,rzr_walk6_f2_anim,rzr_walk8_f2_anim
      76                    
      77                            .ref    rzr_walk1_f4_anim,rzr_walk2_f4_anim,rzr_walk4_f4_anim
      78                            .ref    rzr_3_head_held_stand_anim
      79                            .ref    rzr_walk5_f4_anim,rzr_walk6_f4_anim,rzr_walk8_f4_anim
      80                    
      81                            .ref    rzr_2_punch_anim,rzr_4_punch_anim
      82                            .ref    rzr_2_pin_anim,rzr_4_pin_anim
      83                            .ref    rzr_4_uprcut_anim
      84                            .ref    rzr_2_butt_anim,rzr_4_butt_anim
      85                            .ref    rzr_2_kick_anim,rzr_4_kick_anim
      86                            .ref    rzr_2_super_kick_anim,rzr_4_super_kick_anim
      87                            .ref    rzr_2_knee_anim,rzr_4_knee_anim
      88                            .ref    rzr_flying_kick_anim
      89                            .ref    rzr_2_ground_punch_anim,rzr_4_ground_punch_anim
      90                            .ref    rzr_2_stomp_anim,rzr_4_stomp_anim
      91                            .ref    rzr_2_grabfling_anim,rzr_4_grabfling_anim
      92                            .ref    rzr_2_hair_pickup_anim,rzr_4_hair_pickup_anim
      93                    
      94                            .ref    rzr_4_push_anim
      95                            .ref    rzr_4_bigboot_anim
      96                            .ref    rzr_climb_down_anim,rzr_climb_up_anim
      97                    
      98                            .ref    rzr_2_block_anim,rzr_4_block_anim
      99                            .ref    rzr_2_hiptoss_anim,rzr_4_hiptoss_anim
     100                            .ref    rzr_2_hiptoss2_anim,rzr_4_hiptoss2_anim
     101                            .ref    rzr_flying_elbow_anim
     102                            .ref    rzr_3_uslash_anim,rzr_3_dslash_anim
     103                            .ref    rzr_dslashes_to_head_anim,rzr_dslash_to_head_anim
     104                            .ref    rzr_uslashes_to_head_anim,rzr_uslash_to_head_anim
     105                            .ref    rzr_rugshake_anim
     106                            .ref    rzr_tbukl_elbow_anim,rzr_3_pile_driver_anim
     107                            .ref    rzr_repeat_slash_anim
     108                            .ref    rzr_4_knee_fall_anim
     109                    
     110                            .ref    rzr_combo_punch_anim,rzr_combo_kick_anim
     111                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    3

     112                            .ref    rzr_2_raise_arm_anim,rzr_4_raise_arm_anim
     113                    
     114                            .ref    rzr_rugshake2_anim
     115                            .ref    rzr_fall_back_anim,rzr_razors_edge_anim
     116                    
     117                    
     118                    
     119                    
     120 00000000           razor_secret_moves
     121                    
     122 00000000 00000260'         .long   tvnicharge_flying_kick  ;must have this one
     123 00000020 00000920'         .long   tvnineck_grab
     124 00000040 00001240'         .long   tvnigrab_fling
     125 00000060 00001960'         .long   tvnihip_toss
     126 00000080 000010c0'         .long   tvnigrab_fling2
     127 000000a0 00001110'         .long   tvnihip_toss2
     128 000000c0 00000d20'         .long   tvnidown_slash
     129 000000e0 00000000          .long   0
     130                    
     131                    
     132 00000100            SUBR   rzr_smove_table
     133 00000100 00001e20'         .long   rzr_charge_slashes
     134 00000120 00003730'         .long   rzr_hdhold_pile
     135 00000140 00004c30'         .long   rzr_hdhold_combo1
     136 00000160 00002bd0'         .long   rzr_hdhold_edge
     137 00000180 00004280'         .long   rzr_hdhold_rug
     138 000001a0 00005910'         .long   rzr_grab_toss_air
     139 000001c0 000052a0'         .long   rzr_hdhold_combo2
     140 000001e0 00000000!         .long   std_walk_fast
     141 00000200 00000000!         .long   std_taunt
     142 00000220 00002200'         .long   rzr_sliding_rug
     143                    
     144                            .if NUM_RAZOR_FINISHES
     145                            .long   rzr_finish_move1
     146                            .endif
     147                            .if NUM_RAZOR_FINISHES > 1
     148                            .long   rzr_finish_move2
     149                            .endif
     150 00000240 00000000          .long   0
     151                    
     152                    
     153                    
     154 00000260           tvnicharge_flying_kick
     155 00000260     b5a0          move    *a13(BUT_VAL_UP),a0
         00000270     0bb0  
     156 00000280     1f60          btst    PLAYER_SKICK_BIT,a0
     157 00000290     ca0c          jrz     tvnino_kick
     158                    
     159 000002a0     b5a0          move    *a13(PLYRNUM),a0
         000002b0     0580  
     160                            .ref    get_powerk_dtime
     161 000002c0     0d5f          calla   get_powerk_dtime
         000002d0 00000000! 
     162 000002f0     0b40          cmpi    85,a0                   ;> min?
         00000300     ffaa  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    4

     163 00000310     c404          jrlt    tvnino_kick
     164                    
     165 00000320     0d3f          callr   tvniscrt_kick
         00000330     0004  
     166 00000340     0de0          setc
     167 00000350     0960          rets
     168                    
     169 00000360           tvnino_kick
     170 00000360     0320          clrc
     171 00000370     0960          rets
     172                    
     173 00000380           tvniscrt_kick
     174                    
     175 00000380     b5a0          move    *a13(PLYRMODE),a0
         00000390     05c0  
     176 000003a0     0b40          cmpi    MODE_HEADHELD,a0
         000003b0     ffec  
     177 000003c0     ca00          jrz     tvniout
         000003d0     0157  
     178 000003e0     0b40          cmpi    MODE_HEADHOLD,a0
         000003f0     ffef  
     179 00000400     ca00          jrz     tvniout
         00000410     0153  
     180 00000420     b5a0          move    *a13(GETUP_TIME),a0
         00000430     0460  
     181 00000440     cb00          jrnz    tvniout
         00000450     014f  
     182 00000460     0b40          cmpi    MODE_ONGROUND,a0
         00000470     fffb  
     183 00000480     ca00          jrz     tvniout
         00000490     014b  
     184 000004a0     0b40          cmpi    MODE_DEAD,a0
         000004b0     fff6  
     185 000004c0     ca00          jrz     tvniout
         000004d0     0147  
     186                    
     187 000004e0     b5a0          move    *a13(ANIMODE),a0
         000004f0     0660  
     188 00000500     1fa0          btst    MODE_UNINT_BIT,a0
     189 00000510     cb00          jrnz    tvniout
         00000520     0142  
     190                    
     191                            .ref    ck_ignore
     192 00000530     0d5f          calla   ck_ignore
         00000540 00000000! 
     193 00000560     c800          jrc     tvniout
         00000570     013d  
     194                    
     195 00000580     0d5f          calla   get_opp_plyrmode
         00000590 00000000! 
     196 000005b0     0b40          cmpi    MODE_ONGROUND,a0
         000005c0     fffb  
     197 000005d0     ca00          jrz     tvniout
         000005e0     0136  
     198 000005f0     0b40          cmpi    MODE_DEAD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    5

         00000600     fff6  
     199 00000610     ca00          jrz     tvniout
         00000620     0132  
     200                    
     201 00000630                   SETMODE INAIR
     202                    
     203 000006e0     1820          movk    1,a0                    ;Ensure leap at
     204 000006f0     b208          move    a0,*a8(OBJ_XVEL),L
         00000700     02d0  
     205                    
     206 00000710     09e0          movi    rzr_flying_kick_anim,a0
         00000720 00000000! 
     207 00000740     0d5f          calla   change_anim1a
         00000750 00000000! 
     208                    
     209 00000770                   WRSND   W_RAZOR,FLYKICK_T1,FLYKICK_T2
     210                    
     211 00000910     0960          rets
     212                    
     213                    
     214 00000920           tvnineck_grab
     215 00000920     0040          .word   B_SPUNCH,               J_REAL_LR | J_TOWARD | J_AWAY | J_UP
     216 00000940     0008          .word   J_TOWARD,               J_REAL_LR
     217 00000960     0008          .word   J_TOWARD,               J_REAL_LR
     218 00000980     801e          .word   8000h | 30              ;max
     219 00000990 000009b0'         .long   tvniscrt_neck
     220                    
     221 000009b0           tvniscrt_neck
     222 000009b0     b5a0          move    *a13(ANIMODE),a0
         000009c0     0660  
     223 000009d0     1fa0          btst    MODE_UNINT_BIT,a0
     224 000009e0     cb00          jrnz    tvniout
         000009f0     00f5  
     225                    
     226 00000a00     0d5f          calla   get_opp_plyrmode
         00000a10 00000000! 
     227 00000a30     0b40          cmpi    MODE_ONGROUND,a0
         00000a40     fffb  
     228 00000a50     ca00          jrz     tvniout
         00000a60     00ee  
     229 00000a70     0b40          cmpi    MODE_DEAD,a0
         00000a80     fff6  
     230 00000a90     ca00          jrz     tvniout
         00000aa0     00ea  
     231 00000ab0     0b40          cmpi    MODE_HEADHELD,a0
         00000ac0     ffec  
     232 00000ad0     ca00          jrz     tvniout
         00000ae0     00e6  
     233                    
     234 00000af0     b7ae          move    *a13(LAST_HEADHOLD),a14,L
         00000b00     0cd0  
     235 00000b10     07a0          move    @PCNT,a0,L
         00000b20 00000000! 
     236 00000b40     45c0          sub     a14,a0
     237 00000b50     0b40          cmpi    2*60,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    6

         00000b60     ff87  
     238 00000b70     c507          jrge    tvniok2
     239                    
     240                            .ref    rzr_3_fake_hold_anim
     241 00000b80     09e0          movi    rzr_3_fake_hold_anim,a0
         00000b90 00000000! 
     242 00000bb0     0d5f          calla   change_anim1a
         00000bc0 00000000! 
     243 00000be0     0960          rets
     244                    
     245 00000bf0           tvniok2
     246 00000bf0     b5a1          move    *a13(CLOSEST_XDIST),a1
         00000c00     0370  
     247 00000c10     0b41          cmpi    85,a1
         00000c20     ffaa  
     248 00000c30     c707          jrgt    tvnistd_grab
     249                    
     250 00000c40     09e0          movi    rzr_3_head_hold2_anim,a0
         00000c50 00000000! 
     251 00000c70     0d5f          calla   change_anim1a
         00000c80 00000000! 
     252 00000ca0     0960          rets
     253                    
     254 00000cb0           tvnistd_grab
     255 00000cb0     09e0          movi    rzr_3_head_hold_anim,a0
         00000cc0 00000000! 
     256 00000ce0     0d5f          calla   change_anim1a
         00000cf0 00000000! 
     257 00000d10     0960          rets
     258                    
     259 00000d20           tvnidown_slash
     260 00000d20     0010          .word   B_PUNCH,                J_ALL
     261 00000d40     0008          .word   J_TOWARD,               J_REAL_LR
     262 00000d60     000a          .word   J_DOWN|J_TOWARD,        J_REAL_LR
     263 00000d80     0002          .word   J_DOWN,                 J_REAL_LR
     264 00000da0     8032          .word   8000h | 50              ;max
     265 00000db0 00000dd0'         .long   tvnidslash
     266                    
     267 00000dd0           tvnidslash
     268 00000dd0     b5a0          move    *a13(ANIMODE),a0
         00000de0     0660  
     269 00000df0     1fa0          btst    MODE_UNINT_BIT,a0
     270 00000e00     cb00          jrnz    tvniout
         00000e10     00b3  
     271                    
     272                            ;check opp mode
     273 00000e20     0d5f          calla   get_opp_plyrmode
         00000e30 00000000! 
     274 00000e50     0b40          cmpi    MODE_DEAD,a0
         00000e60     fff6  
     275 00000e70     ca00          jreq    tvniout
         00000e80     00ac  
     276                    
     277                            ;don't do it unless you're in mode_normal, running, or headhold
     278 00000e90     b5a0          move    *a13(PLYRMODE),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    7

         00000ea0     05c0  
     279 00000eb0     0b40          cmpi    MODE_NORMAL,a0
         00000ec0     ffff  
     280 00000ed0     ca0a          jreq    tvnislash
     281 00000ee0     0b40          cmpi    MODE_RUNNING,a0
         00000ef0     fffe  
     282 00000f00     ca04          jreq    tvnirunslash
     283 00000f10     0b40          cmpi    MODE_HEADHOLD,a0
         00000f20     ffef  
     284 00000f30     ca04          jreq    tvnislash
     285 00000f40     c016          jruc    tvniz
     286                    
     287 00000f50           tvnirunslash
     288                            ;don't interrupt an OCRUN
     289 00000f50     b5ae          move    *a13(GETUP_TIME),a14
         00000f60     0460  
     290 00000f70     cb13          jrnz    tvniz
     291 00000f80           tvnislash
     292 00000f80                   WRSND   W_RAZOR,KICK_T2
     293 00001050     09e0          movi    rzr_3_dslash_anim,a0
         00001060 00000000! 
     294 00001080     0d5f          calla   change_anim1a
         00001090 00000000! 
     295 000010b0     0960  tvniz   rets
     296                    
     297                    
     298 000010c0           tvnigrab_fling2
     299 000010c0     0044          .word   B_SPUNCH | J_AWAY,      J_REAL_LR | J_UP | J_DOWN
     300 000010e0     800a          .word   8000h | 10              ;max
     301 000010f0 00001160'         .long   tvniscrt_grabfling2
     302                    
     303 00001110           tvnihip_toss2
     304 00001110     0014          .word   B_PUNCH | J_AWAY,       J_REAL_LR | J_UP | J_DOWN
     305 00001130     800a          .word   8000h | 10              ;max
     306 00001140 00001160'         .long   tvniscrt_grabfling2
     307                    
     308 00001160           tvniscrt_grabfling2
     309 00001160     b5a0          move    *a13(ANIMODE),a0
         00001170     0660  
     310 00001180     1fa0          btst    MODE_UNINT_BIT,a0
     311 00001190     cb7b          jrnz    tvniout
     312                    
     313 000011a0     0d5f          calla   get_opp_plyrmode
         000011b0 00000000! 
     314 000011d0     0b40          cmpi    MODE_BOUNCING,a0
         000011e0     fffa  
     315 000011f0     ca1a          jrz     tvniyes
     316 00001200     0b40          cmpi    MODE_RUNNING,a0
         00001210     fffe  
     317 00001220     ca17          jrz     tvniyes
     318 00001230     0960          rets
     319                    
     320 00001240           tvnigrab_fling
     321                    
     322 00001240     0040          .word   B_SPUNCH,               J_ALL
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    8

     323 00001260     0004          .word   J_AWAY,         J_REAL_LR
     324 00001280     0004          .word   J_AWAY,         J_REAL_LR
     325 000012a0     8020          .word   8000h | 32              ;max
     326 000012b0 000012d0'         .long   tvniscrt_grabfling
     327                    
     328 000012d0           tvniscrt_grabfling
     329                    
     330                    
     331 000012d0     b5a0          move    *a13(ANIMODE),a0
         000012e0     0660  
     332 000012f0     1fa0          btst    MODE_UNINT_BIT,a0
     333 00001300     cb64          jrnz    tvniout
     334                    
     335 00001310     0d5f          calla   get_opp_plyrmode
         00001320 00000000! 
     336 00001340     0b40          cmpi    MODE_BOUNCING,a0
         00001350     fffa  
     337 00001360     ca03          jrz     tvniyes
     338 00001370     0b40          cmpi    MODE_RUNNING,a0
         00001380     fffe  
     339 00001390     cb28          jrnz    tvninope
     340 000013a0           tvniyes
     341 000013a0                   FACE24  rzr,hiptoss_anim
     342 00001440     0d5f          calla   change_anim1a
         00001450 00000000! 
     343                    
     344 00001470                   WRSND   W_RAZOR,GRABFLING_T1,PUNCH_T2
     345 00001610     0960          rets
     346                    
     347 00001620           tvninope
     348 00001620     0d5f          calla   get_opp_plyrmode
         00001630 00000000! 
     349 00001650     0b40          cmpi    MODE_HEADHELD,a0
         00001660     ffec  
     350 00001670     ca2d          jrz     tvniout
     351 00001680     0b40          cmpi    MODE_ONGROUND,a0
         00001690     fffb  
     352 000016a0     ca2a          jrz     tvniout
     353 000016b0     0b40          cmpi    MODE_DEAD,a0
         000016c0     fff6  
     354 000016d0     ca27          jrz     tvniout
     355                    
     356                    
     357 000016e0                   FACE24  rzr,grabfling_anim
     358 00001780     0d5f          calla   change_anim1a
         00001790 00000000! 
     359                    
     360 000017b0                   WRSND   W_RAZOR,GRABFLING_T1,PUNCH_T2
     361 00001950     0960  tvniout rets
     362                    
     363                    
     364 00001960           tvnihip_toss
     365                    
     366 00001960     0010          .word   B_PUNCH,                J_ALL
     367 00001980     0004          .word   J_AWAY,         J_REAL_LR
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE    9

     368 000019a0     0004          .word   J_AWAY,         J_REAL_LR
     369 000019c0     8020          .word   8000h | 32              ;max
     370 000019d0 000019f0'         .long   tvniscrt_hiptoss
     371                    
     372                    
     373 000019f0           tvniscrt_hiptoss
     374 000019f0     b5a0          move    *a13(ANIMODE),a0
         00001a00     0660  
     375 00001a10     1fa0          btst    MODE_UNINT_BIT,a0
     376 00001a20     cbf2          jrnz    tvniout
     377                    
     378 00001a30     0d5f          calla   get_opp_plyrmode
         00001a40 00000000! 
     379 00001a60     0b40          cmpi    MODE_ONGROUND,a0
         00001a70     fffb  
     380 00001a80     caec          jrz     tvniout
     381 00001a90     0b40          cmpi    MODE_DEAD,a0
         00001aa0     fff6  
     382 00001ab0     cae9          jrz     tvniout
     383 00001ac0     0b40          cmpi    MODE_HEADHELD,a0
         00001ad0     ffec  
     384 00001ae0     cae6          jrz     tvniout
     385 00001af0     0b40          cmpi    MODE_INAIR,a0
         00001b00     fffd  
     386 00001b10     ca08          jrz     tvnidoit
     387 00001b20     0b40          cmpi    MODE_INAIR2,a0
         00001b30     ffea  
     388 00001b40     ca05          jrz     tvnidoit
     389                    
     390 00001b50     b5a0          move    *a13(CLOSEST_DIST),a0
         00001b60     0360  
     391 00001b70     0b40          cmpi    70h,a0
         00001b80     ff8f  
     392 00001b90     c7db          jrgt    tvniout
     393                    
     394 00001ba0           tvnidoit
     395 00001ba0                   FACE24  rzr,hiptoss_anim
     396 00001c40     0d5f          calla   change_anim1a
         00001c50 00000000! 
     397                    
     398 00001c70                   WRSND   W_RAZOR,GRABFLING_T1,PUNCH_T2
     399 00001e10     0960          rets
     400                    
     401                            .if NUM_RAZOR_FINISHES
     402                     SUBRP  rzr_finish_move1
     403                    
     404                    faylTIMEOUT     .equ    TSEC
     405                    
     406                    faylend_wait
     407                            SLEEP           TSEC/4
     408                            move            @p1rounds,a0                    ; Get player 1 rounds
     409                            move            @p2rounds,a1                    ; Get player 2 rounds
     410                            or              a1,a0                           ; Put em together
     411                            cmpi            2,a0                            ; Anybody got 2?
     412                            jrlt            faylend_wait                    ; br = no
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   10

     413                    
     414                    faylreset
     415                            clr             a11
     416                            move            a11,@in_finish_move
     417                            SLEEPK          1
     418                            WAITSWITCH_DWN  J_UP,0,faylreset
     419                            movi            faylTIMEOUT,a11
     420                            move            a11,@in_finish_move
     421                            WAITSWITCH_DWN  J_DOWN,0,faylreset
     422                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,faylreset
     423                            WAITSWITCH_DWN  J_TOWARD,J_DOWN|J_UP,faylreset
     424                            WAITSWITCH_DWN  B_PUNCH,J_ALL,faylreset
     425                    
     426                            movi            rzr_finish1_move,a0
     427                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     428                            DIE
     429                            .endif
     430                            
     431                    
     432                            .if NUM_RAZOR_FINISHES > 1
     433                     SUBRP  rzr_finish_move2
     434                    
     435                    bogoTIMEOUT     .equ    TSEC
     436                    
     437                    bogoend_wait
     438                            SLEEP           TSEC/4
     439                            move            @p1rounds,a0                    ; Get player 1 rounds
     440                            move            @p2rounds,a1                    ; Get player 2 rounds
     441                            or              a1,a0                           ; Put em together
     442                            cmpi            2,a0                            ; Anybody got 2?
     443                            jrlt            bogoend_wait                    ; br = no
     444                    
     445                    bogoreset
     446                            clr             a11
     447                            move            a11,@in_finish_move
     448                            SLEEPK          1
     449                            WAITSWITCH_DWN  J_UP,0,bogoreset
     450                            movi            bogoTIMEOUT,a11
     451                            move            a11,@in_finish_move
     452                            WAITSWITCH_DWN  J_UP,0,bogoreset
     453                            WAITSWITCH_DWN  J_RIGHT,J_UP,bogoreset
     454                            WAITSWITCH_DWN  J_RIGHT,J_UP,bogoreset
     455                            WAITSWITCH_DWN  B_SPUNCH,J_ALL,bogoreset
     456                    
     457                            movi            rzr_finish2_move,a0
     458                            move            a0,*a8(SPECIAL_MOVE_ADDR),L
     459                            DIE
     460                            .endif
     461                    
     462                    
     463                    
     464              0160  xpkgCHARGE_TIME .equ    SM_USRW1
     465                    
     466 00001e20           rzr_charge_slashes
     467                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   11

     468 00001e20           xpkgstart_over
     469 00001e20     57ce          clr     a14
     470 00001e30     b1cd          move    a14,*a13(xpkgCHARGE_TIME),W
         00001e40     0160  
     471 00001e50           xpkgloop1
     472 00001e50                   SLEEPK  1
     473                    
     474 00001e90     b5ae          move    *a13(xpkgCHARGE_TIME),a14,W
         00001ea0     0160  
     475 00001eb0     102e          inc     a14
     476 00001ec0     b1cd          move    a14,*a13(xpkgCHARGE_TIME),W
         00001ed0     0160  
     477                    
     478 00001ee0     b500          move    *a8(BUT_VAL_CUR),a0
         00001ef0     0b90  
     479 00001f00     1fe0          btst    PLAYER_PUNCH_BIT,a0
     480 00001f10     ca01          jrz     xpkgp1
     481                    
     482 00001f20     c0f2          jruc    xpkgloop1
     483                    
     484 00001f30           xpkgp1
     485                    
     486 00001f30     b5ae          move    *a13(xpkgCHARGE_TIME),a14
         00001f40     0160  
     487 00001f50     0b4e          cmpi    100,a14
         00001f60     ff9b  
     488 00001f70     c4ea          jrlt    xpkgstart_over
     489                    
     490 00001f80     b50e          move    *a8(ANIMODE),a14
         00001f90     0660  
     491 00001fa0     1fae          btst    MODE_UNINT_BIT,a14
     492 00001fb0     cbe6          jrnz    xpkgstart_over
     493                    
     494 00001fc0     b500          move    *a8(GETUP_TIME),a0
         00001fd0     0460  
     495 00001fe0     cbe3          jrnz    xpkgstart_over
     496                    
     497 00001ff0     b500          move    *a8(PLYRMODE),a0
         00002000     05c0  
     498 00002010     0b40          cmpi    MODE_HEADHELD,a0
         00002020     ffec  
     499 00002030     cade          jrz     xpkgstart_over
     500 00002040     0b40          cmpi    MODE_HEADHOLD,a0
         00002050     ffef  
     501 00002060     cadb          jrz     xpkgstart_over
     502 00002070     0b40          cmpi    MODE_ONGROUND,a0
         00002080     fffb  
     503 00002090     cad8          jrz     xpkgstart_over
     504 000020a0     0b40          cmpi    MODE_DEAD,a0
         000020b0     fff6  
     505 000020c0     cad5          jrz     xpkgstart_over
     506                    
     507 000020d0     09ee          movi    rzr_repeat_slash_anim,a14
         000020e0 00000000! 
     508 00002100     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   12

         00002110     0930  
     509 00002120                   WRSND   W_RAZOR,KICK_T2
     510                    
     511 000021f0     c0c2          jruc    xpkgstart_over
     512                    
     513                    
     514 00002200           rzr_sliding_rug
     515                    
     516              003c  hnvdTIMEOUT     .equ    60
     517                    
     518 00002200           hnvdlp0
     519 00002200                   SLEEPK  1
     520 00002240           hnvdlp
     521 00002240     576b          clr     a11
     522                    
     523 00002250                   WAITSWITCH_DWN  J_TOWARD,0,hnvdlp
     524                    
     525 000023b0     09cb          movi    hnvdTIMEOUT,a11
         000023c0     003c  
     526                    
     527 000023d0                   WAITSWITCH_DWN  J_TOWARD,0,hnvdlp
     528 00002530                   WAITSWITCH_DWN  B_KICK,J_ALL,hnvdlp
     529                    
     530 00002690     b500          move    *a8(PLYRMODE),a0
         000026a0     05c0  
     531 000026b0     0b40          cmpi    MODE_HEADHELD,a0
         000026c0     ffec  
     532 000026d0     cab2          jrz     hnvdlp0
     533 000026e0     0b40          cmpi    MODE_HEADHOLD,a0
         000026f0     ffef  
     534 00002700     caaf          jrz     hnvdlp0
     535 00002710     0b40          cmpi    MODE_ONGROUND,a0
         00002720     fffb  
     536 00002730     caac          jrz     hnvdlp0
     537 00002740     0b40          cmpi    MODE_DEAD,a0
         00002750     fff6  
     538 00002760     caa9          jrz     hnvdlp0
     539                    
     540 00002770     b500          move    *a8(ANIMODE),a0
         00002780     0660  
     541 00002790     1fa0          btst    MODE_UNINT_BIT,a0
     542 000027a0     cba5          jrnz    hnvdlp0
     543                    
     544 000027b0     b500          move    *a8(GETUP_TIME),a0
         000027c0     0460  
     545 000027d0     cba2          jrnz    hnvdlp0
     546                    
     547                    
     548 000027e0                   SWAP    a8,a13
     549 00002810     0d5f          calla   get_opp_plyrmode
         00002820 00000000! 
     550 00002840                   SWAP    a8,a13
     551 00002870     0b40          cmpi    MODE_DEAD,a0
         00002880     fff6  
     552 00002890     ca9a          jrz     hnvdlp
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   13

     553                    
     554 000028a0                   SWAP    a8,a13
     555 000028d0     0d5f          calla   ck_ignore
         000028e0 00000000! 
     556 00002900     c904          jrnc    hnvdnorm
     557 00002910                   SWAP    a8,a13
     558 00002940     c08f          jruc    hnvdlp
     559 00002950           hnvdnorm        
     560 00002950                   SWAP    a8,a13
     561                    
     562 00002980                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
     563                            .ref    rzr_sliding_rug_anim
     564 00002b20     09ee          movi    rzr_sliding_rug_anim,a14
         00002b30 00000000! 
     565 00002b50     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00002b60     0930  
     566                    
     567 00002b70                   SLEEPK  20
     568                    
     569 00002bb0     c000          jruc    hnvdlp
         00002bc0     ff67  
     570                    
     571 00002bd0           rzr_hdhold_edge
     572                    
     573              003c  iembTIMEOUT     .equ    60
     574                    
     575 00002bd0           iemblp0
     576 00002bd0                   SLEEPK  1
     577 00002c10           iemblp
     578 00002c10     b500          move    *a8(PLYRMODE),a0
         00002c20     05c0  
     579 00002c30     0b40          cmpi    MODE_HEADHOLD,a0
         00002c40     ffef  
     580 00002c50     ca03          jrz     iembcont
     581 00002c60     0b40          cmpi    MODE_HEADHELD,a0
         00002c70     ffec  
     582 00002c80     cbf4          jrnz    iemblp0
     583                    
     584 00002c90           iembcont
     585 00002c90     576b          clr     a11
     586                    
     587 00002ca0                   WAITSWITCH_DWN  J_TOWARD,0,iemblp
     588                    
     589 00002e00     09cb          movi    iembTIMEOUT,a11
         00002e10     003c  
     590                    
     591 00002e20                   WAITSWITCH_DWN  J_TOWARD,0,iemblp
     592 00002f80                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,iemblp
     593                            
     594 000030e0     b500          move    *a8(PLYRMODE),a0
         000030f0     05c0  
     595 00003100     0b40          cmpi    MODE_HEADHOLD,a0
         00003110     ffef  
     596 00003120     ca1c          jrz     iembslam
     597 00003130     0b40          cmpi    MODE_HEADHELD,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   14

         00003140     ffec  
     598 00003150     cba7          jrnz    iemblp0
     599 00003160     b50e          move    *a8(I_WILL_DIE),A14
         00003170     0b30  
     600 00003180     cba4          jrnz    iemblp0
     601                    
     602 00003190     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000031a0     0ae0  
     603 000031b0     cba1          jrnz    iemblp0                         ;ignore
     604                    
     605 000031c0     0d5f          calla   DO_REVERSAL
         000031d0 00000000! 
     606 000031f0     0d5f          calla   DO_REVERSAL_MESS
         00003200 00000000! 
     607                    
     608                            ;target WHOHITME -- don't hit anyone else
     609 00003220                   SMRTTGT a8,WHOHITME
     610                    
     611                            ;immobilize WHOHITME
     612 000032c0     b700          move    *a8(WHOHITME),a0,L
         000032d0     04e0  
     613 000032e0     c019          jruc    iembis_reversal
     614                    
     615 000032f0           iembslam
     616 000032f0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003300     0ae0  
     617 00003310     cb8b          jrnz    iemblp0                         ;ignore
     618                    
     619 00003320     09ca          movi    33,a10
         00003330     0021  
     620 00003340                   CREATE  MESSAGE_PID,BONUS_MESS
     621                    
     622                            ;target WHOIHIT -- don't hit anyone else
     623 000033c0                   SMRTTGT a8,WHOIHIT
     624                    
     625                            ;immobilize WHOIHIT
     626 00003460     b700          move    *a8(WHOIHIT),a0,L
         00003470     0500  
     627                    
     628 00003480           iembis_reversal
     629 00003480     19ee          movk    15,a14
     630 00003490     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         000034a0     0ae0  
     631                    
     632 000034b0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000034c0 00000000! 
     633                    
     634 000034e0     09ee          movi    rzr_razors_edge_anim,a14
         000034f0 00000000! 
     635 00003510     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00003520     0930  
     636 00003530                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
     637                    
     638 000036d0                   SLEEPK  20
     639                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   15

     640 00003710     c000          jruc    iemblp
         00003720     ff4e  
     641                    
     642 00003730           rzr_hdhold_pile
     643                    
     644              003c  lgcbTIMEOUT     .equ    60
     645                    
     646 00003730           lgcblp0
     647 00003730                   SLEEPK  1
     648 00003770           lgcblp
     649 00003770     b500          move    *a8(PLYRMODE),a0
         00003780     05c0  
     650 00003790     0b40          cmpi    MODE_HEADHOLD,a0
         000037a0     ffef  
     651 000037b0     ca03          jrz     lgcbcont
     652 000037c0     0b40          cmpi    MODE_HEADHELD,a0
         000037d0     ffec  
     653 000037e0     cbf4          jrnz    lgcblp0
     654                    
     655 000037f0           lgcbcont
     656 000037f0     576b          clr     a11
     657                    
     658 00003800                   WAITSWITCH_DWN  J_DOWN,0,lgcblp
     659                    
     660 00003960     09cb          movi    lgcbTIMEOUT,a11
         00003970     003c  
     661                    
     662 00003980                   WAITSWITCH_DWN  J_DOWN,0,lgcblp
     663 00003ae0                   WAITSWITCH_DWN  B_SKICK,J_ALL,lgcblp
     664                            
     665 00003c40     b500          move    *a8(PLYRMODE),a0
         00003c50     05c0  
     666 00003c60     0b40          cmpi    MODE_HEADHOLD,a0
         00003c70     ffef  
     667 00003c80     ca1c          jrz     lgcbslam
     668 00003c90     0b40          cmpi    MODE_HEADHELD,a0
         00003ca0     ffec  
     669 00003cb0     cba7          jrnz    lgcblp0
     670 00003cc0     b50e          move    *a8(I_WILL_DIE),A14
         00003cd0     0b30  
     671 00003ce0     cba4          jrnz    lgcblp0
     672                    
     673 00003cf0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003d00     0ae0  
     674 00003d10     cba1          jrnz    lgcblp0                         ;ignore
     675                    
     676 00003d20     0d5f          calla   DO_REVERSAL
         00003d30 00000000! 
     677 00003d50     0d5f          calla   DO_REVERSAL_MESS
         00003d60 00000000! 
     678                    
     679                            ;target WHOHITME -- don't hit anyone else
     680 00003d80                   SMRTTGT a8,WHOHITME
     681                    
     682                            ;immobilize WHOHITME
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   16

     683 00003e20     b700          move    *a8(WHOHITME),a0,L
         00003e30     04e0  
     684 00003e40     c018          jruc    lgcbis_reversal
     685                    
     686 00003e50           lgcbslam
     687 00003e50     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00003e60     0ae0  
     688 00003e70     cb8b          jrnz    lgcblp0                         ;ignore
     689                    
     690 00003e80     18ea          movk    7,a10
     691 00003e90                   CREATE  MESSAGE_PID,BONUS_MESS
     692                    
     693                            ;target WHOIHIT -- don't hit anyone else
     694 00003f10                   SMRTTGT a8,WHOIHIT
     695                    
     696                            ;immobilize WHOIHIT
     697 00003fb0     b700          move    *a8(WHOIHIT),a0,L
         00003fc0     0500  
     698                    
     699 00003fd0           lgcbis_reversal
     700 00003fd0     19ee          movk    15,a14
     701 00003fe0     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00003ff0     0ae0  
     702                    
     703 00004000     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004010 00000000! 
     704 00004030     09ee          movi    rzr_3_pile_driver_anim,a14
         00004040 00000000! 
     705 00004060     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004070     0930  
     706 00004080                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
     707                    
     708 00004220                   SLEEPK  20
     709                    
     710 00004260     c000          jruc    lgcblp
         00004270     ff4f  
     711                    
     712 00004280           rzr_hdhold_rug
     713                    
     714              003c  pfnsTIMEOUT     .equ    60
     715                    
     716 00004280           pfnslp0
     717 00004280                   SLEEPK  1
     718 000042c0           pfnslp
     719 000042c0     b500          move    *a8(PLYRMODE),a0
         000042d0     05c0  
     720 000042e0     0b40          cmpi    MODE_HEADHOLD,a0
         000042f0     ffef  
     721 00004300     ca03          jrz     pfnscont
     722 00004310     0b40          cmpi    MODE_HEADHELD,a0
         00004320     ffec  
     723 00004330     cbf4          jrnz    pfnslp0
     724                    
     725 00004340           pfnscont
     726 00004340     576b          clr     a11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   17

     727                    
     728 00004350                   WAITSWITCH_DWN  J_DOWN,0,pfnslp
     729                    
     730 000044b0     09cb          movi    pfnsTIMEOUT,a11
         000044c0     003c  
     731                    
     732 000044d0                   WAITSWITCH_DWN  J_DOWN,0,pfnslp
     733 00004630                   WAITSWITCH_DWN  B_KICK,J_ALL,pfnslp
     734                            
     735 00004790     b500          move    *a8(PLYRMODE),a0
         000047a0     05c0  
     736 000047b0     0b40          cmpi    MODE_HEADHOLD,a0
         000047c0     ffef  
     737 000047d0     ca1c          jrz     pfnsslam
     738 000047e0     0b40          cmpi    MODE_HEADHELD,a0
         000047f0     ffec  
     739 00004800     cba7          jrnz    pfnslp0
     740 00004810     b50e          move    *a8(I_WILL_DIE),A14
         00004820     0b30  
     741 00004830     cba4          jrnz    pfnslp0
     742                    
     743 00004840     b50e          move    *a8(IMMOBILIZE_TIME),a14
         00004850     0ae0  
     744 00004860     cba1          jrnz    pfnslp0                         ;ignore
     745                    
     746 00004870     0d5f          calla   DO_REVERSAL
         00004880 00000000! 
     747 000048a0     0d5f          calla   DO_REVERSAL_MESS
         000048b0 00000000! 
     748                    
     749                            ;target WHOHITME -- don't hit anyone else
     750 000048d0                   SMRTTGT a8,WHOHITME
     751                    
     752                            ;immobilize WHOHITME
     753 00004970     b700          move    *a8(WHOHITME),a0,L
         00004980     04e0  
     754 00004990     c018          jruc    pfnsis_reversal
     755                    
     756 000049a0           pfnsslam
     757 000049a0     b50e          move    *a8(IMMOBILIZE_TIME),a14
         000049b0     0ae0  
     758 000049c0     cb8b          jrnz    pfnslp0                         ;ignore
     759                    
     760 000049d0     18ca          movk    6,a10
     761 000049e0                   CREATE  MESSAGE_PID,BONUS_MESS
     762                    
     763                            ;target WHOIHIT -- don't hit anyone else
     764 00004a60                   SMRTTGT a8,WHOIHIT
     765                    
     766                            ;immobilize WHOIHIT
     767 00004b00     b700          move    *a8(WHOIHIT),a0,L
         00004b10     0500  
     768                    
     769 00004b20           pfnsis_reversal
     770 00004b20     19ee          movk    15,a14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   18

     771 00004b30     b1c0          move    a14,*a0(IMMOBILIZE_TIME)
         00004b40     0ae0  
     772                    
     773 00004b50     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00004b60 00000000! 
     774                    
     775 00004b80     09ee          movi    rzr_rugshake2_anim,a14
         00004b90 00000000! 
     776 00004bb0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00004bc0     0930  
     777                    
     778 00004bd0                   SLEEPK  20
     779                    
     780 00004c10     c000          jruc    pfnslp
         00004c20     ff69  
     781                    
     782 00004c30           rzr_hdhold_combo1
     783                    
     784              003c  xqfrTIMEOUT     .equ    60
     785                    
     786 00004c30           xqfrlp0
     787 00004c30                   SLEEPK  1
     788 00004c70           xqfrlp
     789 00004c70     b500          move    *a8(PLYRMODE),a0
         00004c80     05c0  
     790 00004c90     0b40          cmpi    MODE_HEADHOLD,a0
         00004ca0     ffef  
     791 00004cb0     cbf7          jrnz    xqfrlp0
     792 00004cc0     0d5f          calla   CHECK_COMBO_GO
         00004cd0 00000000! 
     793 00004cf0     c4f3          jrlt    xqfrlp0
     794                    
     795                    
     796 00004d00     576b          clr     a11
     797                    
     798 00004d10                   WAITSWITCH_DWN  J_TOWARD,0,xqfrlp
     799                    
     800 00004e70     09cb          movi    xqfrTIMEOUT,a11
         00004e80     003c  
     801                    
     802 00004e90                   WAITSWITCH_DWN  J_TOWARD,0,xqfrlp
     803 00004ff0                   WAITSWITCH_DWN  B_SPUNCH,J_ALL,xqfrlp
     804                    
     805 00005150     b500          move    *a8(PLYRMODE),a0
         00005160     05c0  
     806 00005170     0b40          cmpi    MODE_HEADHOLD,a0
         00005180     ffef  
     807 00005190     ca03          jrz     xqfrslam
     808 000051a0     0b40          cmpi    MODE_HEADHELD,a0
         000051b0     ffec  
     809 000051c0     cba6          jrnz    xqfrlp0
     810                    
     811 000051d0           xqfrslam
     812 000051d0     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000051e0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   19

     813 00005200     09ee          movi    rzr_combo_punch_anim,a14
         00005210 00000000! 
     814 00005230     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         00005240     0930  
     815                    
     816 00005250                   SLEEPK  20
     817                    
     818 00005290     c09d          jruc    xqfrlp
     819                    
     820                    
     821 000052a0           rzr_hdhold_combo2
     822                    
     823              003c  zkvmTIMEOUT     .equ    60
     824                    
     825 000052a0           zkvmlp0
     826 000052a0                   SLEEPK  1
     827 000052e0           zkvmlp
     828 000052e0     b500          move    *a8(PLYRMODE),a0
         000052f0     05c0  
     829 00005300     0b40          cmpi    MODE_HEADHOLD,a0
         00005310     ffef  
     830 00005320     cbf7          jrnz    zkvmlp0
     831 00005330     0d5f          calla   CHECK_COMBO_GO
         00005340 00000000! 
     832 00005360     c4f3          jrlt    zkvmlp0
     833                    
     834 00005370     576b          clr     a11
     835                    
     836 00005380                   WAITSWITCH_DWN  J_TOWARD,0,zkvmlp
     837                    
     838 000054e0     09cb          movi    zkvmTIMEOUT,a11
         000054f0     003c  
     839                    
     840 00005500                   WAITSWITCH_DWN  J_TOWARD,0,zkvmlp
     841 00005660                   WAITSWITCH_DWN  B_KICK,J_ALL,zkvmlp
     842                    
     843 000057c0     b500          move    *a8(PLYRMODE),a0
         000057d0     05c0  
     844 000057e0     0b40          cmpi    MODE_HEADHOLD,a0
         000057f0     ffef  
     845 00005800     ca03          jrz     zkvmslam
     846 00005810     0b40          cmpi    MODE_HEADHELD,a0
         00005820     ffec  
     847 00005830     cba6          jrnz    zkvmlp0
     848                    
     849 00005840           zkvmslam
     850 00005840     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005850 00000000! 
     851 00005870     09ee          movi    rzr_combo_kick_anim,a14
         00005880 00000000! 
     852 000058a0     b3c8          move    a14,*a8(SPECIAL_MOVE_ADDR),L
         000058b0     0930  
     853                    
     854 000058c0                   SLEEPK  20
     855                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   20

     856 00005900     c09d          jruc    zkvmlp
     857                    
     858 00005910           rzr_grab_toss_air
     859                    
     860              0028  trjhTIMEOUT     .equ    40
     861                    
     862 00005910           trjhlp0
     863 00005910                   SLEEPK  1
     864 00005950           trjhlp
     865 00005950     576b          clr     a11
     866                    
     867 00005960                   WAITSWITCH_DWN  J_AWAY,0,trjhlp
     868                    
     869 00005ac0     09cb          movi    trjhTIMEOUT,a11
         00005ad0     0028  
     870                    
     871 00005ae0                   WAITSWITCH_DWN  J_AWAY,0,trjhlp
     872 00005c40                   WAITSWITCH_DWN  B_PUNCH,J_ALL,trjhlp
     873                    
     874 00005da0     b500          move    *a8(ANIMODE),a0
         00005db0     0660  
     875 00005dc0     1fa0          btst    MODE_UNINT_BIT,a0
     876 00005dd0     cbb7          jrnz    trjhlp
     877                    
     878 00005de0     b500          move    *a8(PLYRMODE),a0
         00005df0     05c0  
     879 00005e00     0b40          cmpi    MODE_HEADHOLD,a0
         00005e10     ffef  
     880 00005e20     caae          jreq    trjhlp0
     881                    
     882 00005e30                   SWAP    a8,a13
     883 00005e60     0d5f          calla   get_opp_plyrmode
         00005e70 00000000! 
     884 00005e90                   SWAP    a8,a13
     885 00005ec0     0b40          cmpi    MODE_ONGROUND,a0
         00005ed0     fffb  
     886 00005ee0     caa6          jrz     trjhlp
     887 00005ef0     0b40          cmpi    MODE_DEAD,a0
         00005f00     fff6  
     888 00005f10     caa3          jrz     trjhlp
     889 00005f20     0b40          cmpi    MODE_INAIR,a0
         00005f30     fffd  
     890 00005f40     ca43          jrz     trjhdoit2
     891 00005f50     0b40          cmpi    MODE_INAIR2,a0
         00005f60     ffea  
     892 00005f70     ca40          jrz     trjhdoit2
     893                    
     894 00005f80     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00005f90 00000000! 
     895 00005fb0     b500          move    *a8(CLOSEST_NUM),a0
         00005fc0     03a0  
     896 00005fd0                   X32     a0
     897 00005fe0     0b20          addi    process_ptrs,a0
         00005ff0 00000000! 
     898 00006010     8600          move    *a0,a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   21

     899 00006020     b400          move    *a0(ATTACK_TYPE),a0
         00006030     05e0  
     900 00006040     0b40          cmpi    AT_LEAPING,a0
         00006050     ffc6  
     901 00006060     ca31          jrz     trjhdoit2
     902                    
     903 00006070     b500          move    *a8(CLOSEST_DIST),a0
         00006080     0360  
     904 00006090     0b40          cmpi    68h,a0
         000060a0     ff97  
     905 000060b0     c789          jrgt    trjhlp
     906                    
     907 000060c0                   FACE24  rzr,hiptoss_anim
     908 00006160     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00006170     0930  
     909                    
     910 00006180                   WRSND   W_RAZOR,GRABFLING_T1,PUNCH_T2
     911                    
     912 00006320                   SLEEPK  20
     913 00006360     c000          jruc    trjhlp
         00006370     ff5d  
     914                    
     915 00006380           trjhdoit2
     916 00006380                   FACE24  rzr,hiptoss2_anim
     917 00006420     b208          move    a0,*a8(SPECIAL_MOVE_ADDR),L
         00006430     0930  
     918                    
     919 00006440                   WRSND   W_RAZOR,GRABFLING_T1,PUNCH_T2
     920                    
     921 000065e0                   SLEEPK  20
     922                    
     923 00006620     c000          jruc    trjhlp
         00006630     ff31  
     924                    
     925                    
     926                    
     927 00006640            SUBR   razor_ani_init
     928                    
     929 00006640     b5a0          move    *a13(FACING_DIR),a0
         00006650     04c0  
     930 00006660     1f80          btst    PLAYER_RIGHT_BIT,a0
     931 00006670     cb18          jrnz    hldtp1
     932 00006680     09e0          movi    rzr_stand4_anim,a0
         00006690 00000000! 
     933 000066b0     0d5f          calla   change_anim1a
         000066c0 00000000! 
     934                    
     935 000066e0     09e0          movi    rzr_torso4_anim,a0
         000066f0 00000000! 
     936 00006710     0d5f          calla   change_anim2a
         00006720 00000000! 
     937                    
     938 00006740                   PUSH    a10
     939 00006750     4daa          move    a13,a10
     940 00006760                   CREATE  TAUNT_PID,do_taunt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   22

     941 000067e0                   PULL    a10
     942                    
     943 000067f0     0960          rets
     944                    
     945 00006800           hldtp1
     946 00006800     09e0          movi    rzr_stand2_anim,a0
         00006810 00000000! 
     947 00006830     0d5f          calla   change_anim1a
         00006840 00000000! 
     948                    
     949 00006860     09e0          movi    rzr_torso2_anim,a0
         00006870 00000000! 
     950 00006890     0d5f          calla   change_anim2a
         000068a0 00000000! 
     951                    
     952 000068c0     0960          rets
     953                    
     954                    
     955                    
     956 000068d0            SUBR   move_razor
     957                    
     958                    
     959 000068d0     09eb          movi    razor_secret_moves,a11
         000068e0 00000000' 
     960 00006900     0d5f          calla   check_secret_moves
         00006910 00000000! 
     961                    
     962 00006930     b5a0          move    *a13(PLYRMODE),a0
         00006940     05c0  
     963 00006950     24a0          sll     5,a0                    ;x 32
     964 00006960     0b20          addi    oprcmode_table,a0
         00006970 000069c0' 
     965 00006990     8600          move    *a0,a0,L
     966 000069a0     0920          call    a0
     967 000069b0     0960          rets
     968                    
     969 000069c0           oprcmode_table
     970 000069c0 00006d00'         .long   mode_normal             ;0
     971 000069e0 0000ec00'         .long   mode_running            ;1
     972 00006a00 00010fb0'         .long   mode_inair              ;2
     973 00006a20 00010fc0'         .long   mode_attached           ;3
     974 00006a40 00011130'         .long   mode_onground           ;4
     975 00006a60 00011140'         .long   mode_bouncing           ;5
     976 00006a80 000113e0'         .long   mode_onturnbkl          ;6
     977 00006aa0 00011d80'         .long   mode_block              ;7
     978 00006ac0 00012800'         .long   mode_dizzy              ;8
     979 00006ae0                   REFLONG mode_dead               ;9
     980 00006b00 00012810'         .long   mode_oppoverhead        ;10
     981 00006b20 00012820'         .long   mode_climbturnbkl       ;11
     982 00006b40 00012830'         .long   mode_waitanim           ;12
     983 00006b60 000128b0'         .long   mode_grapple            ;13
     984 00006b80 000128c0'         .long   mode_master             ;14
     985 00006ba0 00012900'         .long   mode_slave              ;15
     986 00006bc0 00012910'         .long   mode_headhold           ;16
     987 00006be0 00013dd0'         .long   mode_puppet2            ;17
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   23

     988 00006c00 00006d00'         .long   mode_normal     ;18
     989 00006c20 00013de0'         .long   mode_headheld           ;19
     990 00006c40                   REFLONG mode_puppet             ;20
     991 00006c60 00000000!         .long   mode_inair2             ;21
     992 00006c80 00006d00'         .long   mode_normal     ;22
     993 00006ca0 00006d00'         .long   mode_normal     ;23
     994 00006cc0 000142a0'         .long   mode_chokehold          ;24
     995 00006ce0                   REFLONG mode_choking            ;25
     996                    
     997                    
     998 00006d00           mode_normal     ;0
     999                    
    1000 00006d00     b5a0          move    *a13(ANIMODE),a0
         00006d10     0660  
    1001 00006d20     1fa0          btst    MODE_UNINT_BIT,a0
    1002 00006d30     cb00          jrnz    liadno_interrupt
         00006d40     00b0  
    1003                    
    1004 00006d50     b5a0          move    *a13(I_WILL_DIE),a0
         00006d60     0b30  
    1005 00006d70     ca1f          jrz     liadnope
    1006 00006d80     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00006d90     0ae0  
    1007 00006da0     cb1c          jrnz    liadnope
    1008 00006db0     09e0          movi    rzr_fall_back_anim,a0
         00006dc0 00000000! 
    1009 00006de0     0d5f          calla   change_anim1a
         00006df0 00000000! 
    1010                    
    1011 00006e10     09c0          movi    -10,a0
         00006e20     fff6  
    1012 00006e30     b5a1          move    *a13(PLYRNUM),a1
         00006e40     0580  
    1013 00006e50     0d5f          calla   adjust_health
         00006e60 00000000! 
    1014                    
    1015 00006e80                   SETMODE DEAD
    1016                    
    1017 00006f30     5600          clr     a0
    1018 00006f40     b00d          move    a0,*a13(I_WILL_DIE)
         00006f50     0b30  
    1019                    
    1020 00006f60     0960          rets
    1021                    
    1022 00006f70           liadnope
    1023                    
    1024 00006f70     0d5f          calla   get_opp_plyrmode
         00006f80 00000000! 
    1025 00006fa0     0b40          cmpi    MODE_DEAD,a0
         00006fb0     fff6  
    1026 00006fc0     cb49          jrne    liadopp_not_dead
    1027                    
    1028                            ;if closest is a zombie, skip pin section.
    1029 00006fd0     0d5f          calla   get_opp_process
         00006fe0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   24

    1030 00007000     b40e          move    *a0(STATUS_FLAGS),a14
         00007010     0b50  
    1031 00007020     1f8e          btst    B_ZOMBIE,a14
    1032 00007030     cb42          jrnz    liadopp_not_dead
    1033                            
    1034                            ;all opponents are dead.  Check for pins/raisearms
    1035                    
    1036                            ;if we're attached to someone, don't interrupt it.
    1037 00007040     b7a1          move    *a13(ATTACH_PROC),a1,L
         00007050     03e0  
    1038 00007060     ca04          jrz     liadno_attch
    1039 00007070     b622          move    *a1(ATTACH_PROC),a2,L
         00007080     03e0  
    1040 00007090     484d          cmp     a2,a13
    1041 000070a0     ca3b          jreq    liadno_pin_yet
    1042 000070b0           liadno_attch
    1043                    
    1044                            ;if a teammate has pinned, raise yer arm.
    1045 000070b0     0d5f          calla   ck_teammate_pin 
         000070c0 00000000! 
    1046 000070e0     c823          jrc     liadraisearm
    1047                    
    1048                            ;nobody has pinned.  if we're outside or all our opponents are
    1049                            ; outside, do a raisearm.
    1050 000070f0     0d5f          calla   raisearm_check
         00007100 00000000! 
    1051 00007120     c81f          jrc     liadraisearm
    1052                    
    1053                            ;we're inside with a pinnable opponent.  any button pins.
    1054 00007130     b5a0          move    *a13(BUT_VAL_CUR),a0
         00007140     0b90  
    1055 00007150     ca30          jrz     liadno_pin_yet
    1056                    
    1057                            ;we have a press -- make sure opponent is on the ground
    1058 00007160     0d5f          calla   can_pin
         00007170 00000000! 
    1059 00007190     c92c          jrnc    liadopp_notgnd
    1060                    
    1061                            ;opponent is on the ground.  pin him.
    1062 000071a0                   FACE24  rzr,pin_anim
    1063 00007240     0d5f          calla   change_anim1a
         00007250 00000000! 
    1064                    
    1065                            ;set the 'I did a pin' flag.
    1066 00007270     b5ae          move    *a13(STATUS_FLAGS),a14
         00007280     0b50  
    1067 00007290     0bae          ori     M_DID_PIN,a14
         000072a0 00000002  
    1068 000072c0     b1cd          move    a14,*a13(STATUS_FLAGS)
         000072d0     0b50  
    1069                    
    1070                            ;if we're a temp drone for auto-pin purposes, turn back into
    1071                            ; a normal player here.
    1072 000072e0     0d5f          calla   drone_change_back
         000072f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   25

    1073                    
    1074 00007310     0960          rets
    1075                    
    1076 00007320           liadraisearm
    1077 00007320                   FACE24  rzr,raise_arm_anim
    1078 000073c0     0d5f          calla   change_anim1a
         000073d0 00000000! 
    1079 000073f0     0d5f          calla   set_raisearm_bit
         00007400 00000000! 
    1080                    
    1081                            ;if we're a temp drone for auto-pin purposes, turn back into
    1082                            ; a normal player here.
    1083 00007420     0d5f          calla   drone_change_back
         00007430 00000000! 
    1084                    
    1085 00007450     0960          rets
    1086                    
    1087 00007460           liadtoo_far_to_pin
    1088 00007460           liadopp_notgnd
    1089 00007460           liadopp_not_dead
    1090 00007460           liadno_pin_yet
    1091                    
    1092 00007460     b5a0          move    *a13(IMMOBILIZE_TIME),a0
         00007470     0ae0  
    1093 00007480     cb36          jrnz    liadimmobilized
    1094                    
    1095 00007490     b5a0          move    *a13(BUT_VAL_CUR),a0
         000074a0     0b90  
    1096 000074b0     1fc0          btst    PLAYER_BLOCK_BIT,a0     ;maybe have to action tables?
    1097 000074c0     ca07          jrz     liadnblk                        ;1 for down transitions
    1098 000074d0     0d3f          callr   liadblock                       ;& 1 for current buttons
         000074e0     01e5  
    1099 000074f0     c804          jrc     liadnblk
    1100 00007500     5600          clr     a0
    1101 00007510     b00d          move    a0,*a13(ATTACK_TYPE)
         00007520     05e0  
    1102 00007530     0960          rets
    1103 00007540           liadnblk
    1104 00007540     b5a0          move    *a13(BUT_VAL_CUR),a0
         00007550     0b90  
    1105 00007560     0b80          andi    011111b,a0
         00007570 ffffffe0  
    1106 00007590     0b40          cmpi    PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
         000075a0     fff6  
    1107 000075b0     ca00          jrz     liadpunchkick
         000075c0     075c  
    1108                    
    1109 000075d0     b5a0          move    *a13(BUT_VAL_DOWN),a0
         000075e0     0ba0  
    1110 000075f0     0b80          andi    011111b,a0
         00007600 ffffffe0  
    1111 00007620                   X32     a0
    1112 00007630     0b20          addi    liadaction_table,a0
         00007640 00007860' 
    1113 00007660     8600          move    *a0,a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   26

    1114 00007670     0920          call    a0
    1115                    
    1116 00007680     b5a0          move    *a13(ANIMODE),a0
         00007690     0660  
    1117 000076a0     1fa0          btst    MODE_UNINT_BIT,a0
    1118 000076b0     cb19          jrnz    liadno_interrupt
    1119                    
    1120                    
    1121 000076c0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000076d0     0bc0  
    1122 000076e0     b00d          move    a0,*a13(MOVE_DIR)
         000076f0     04b0  
    1123 00007700     0d5f          calla   climb_turnbuckle
         00007710 00000000! 
    1124 00007730     c90e          jrnc    liadno_climb
    1125 00007740     b5a5          move    *a13(WRESTLERNUM),A5
         00007750     0590  
    1126 00007760     09e2          MOVI    CLIMB_ROPES,A2
         00007770 00000000! 
    1127 00007790     09c0          MOVI    1000,A0
         000077a0     03e8  
    1128 000077b0     0d5f          CALLA   ADD_IF_SILENT
         000077c0 00000000! 
    1129 000077e0     0960          rets
    1130                    
    1131 000077f0           liadimmobilized
    1132 000077f0     57ce          clr     a14
    1133 00007800     b1cd          move    a14,*a13(MOVE_DIR)
         00007810     04b0  
    1134 00007820           liadno_climb
    1135 00007820     0d5f          calla   execute_walk
         00007830 00000000! 
    1136                    
    1137 00007850           liadno_interrupt
    1138 00007850     0960          rets
    1139                    
    1140 00007860           liadaction_table
    1141 00007860 00007c60'         .long   liadz,liadpunch,liadblock,liadblock                     ;0-3
    1142 000078e0 00009590'         .long   liadsuper_punch,liadsuper_punch,liadblock,liadblock     ;4-7
    1143 00007960 0000b7a0'         .long   liadkick,liadpunchkick,liadblock,liadblock              ;8-11
    1144 000079e0 00009590'         .long   liadsuper_punch,liadpunchkick,liadblock,liadblock       ;12-15
    1145 00007a60 0000d0a0'         .long   liadsuper_kick,liadsuper_kick,liadblock,liadblock       ;16-19
    1146 00007ae0 00009590'         .long   liadgraboh,liadgraboh,liadblock,liadblock               ;20-23
    1147 00007b60 0000d0a0'         .long   liadsuper_kick,liadpunchkick,liadblock,liadblock        ;24-27
    1148 00007be0 00009590'         .long   liadgraboh,liadgraboh,liadblock,liadblock               ;28-31
    1149                    
    1150                    
    1151 00007c60           liadz
    1152 00007c60     0960          rets
    1153                    
    1154                    
    1155 00007c70           liadpunch               ;1
    1156                    
    1157 00007c70                   JJXM_INIT
    1158 00007ce0                   JJXM    NORMAL,          44, 45,liadpunch_hdbutt,liadpunch_punch
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   27

    1159 00007db0                   JJXM    DIZZY,           44, 45,liadpunch_hdbutt,liadpunch_punch
    1160 00007e80                   JJXM    BLOCK,           44, 45,liadpunch_hdbutt,liadpunch_punch
    1161 00007f50                   JJXM    ONGROUND,       160,140,liadpunch_lbdrop,liadpunch_punch
    1162 00008020                   JJXM    RUNNING,         44, 45,liadpunch_hdbutt,liadpunch_punch
    1163 000080f0                   JJXM    BOUNCING,        44, 45,liadpunch_hdbutt,liadpunch_punch
    1164 000081c0                   JJXM    ONTURNBKL,              liadpunch_punch
    1165 00008210                   JJXM    CLIMBTURNBKL,           liadpunch_punch
    1166 00008260                   JJXM    INAIR,           44, 45,liadpunch_hdbutt,liadpunch_punch
    1167 00008330                   JJXM    ATTACHED,        44, 45,liadpunch_hdbutt,liadpunch_punch
    1168 000083f0                   JJXM    DEAD,           160,140,liadpunch_lbdrop,liadpunch_punch
    1169 000084a0                   JJXM    OPPOVERHEAD,     44, 45,liadpunch_hdbutt,liadpunch_punch
    1170 00008550                   JJXM    WAITANIM,        44, 45,liadpunch_hdbutt,liadpunch_punch
    1171 00008600                   JJXM    GRAPPLE,         44, 45,liadpunch_hdbutt,liadpunch_punch
    1172 000086a0                   JJXM    MASTER,          44, 45,liadpunch_hdbutt,liadpunch_punch
    1173 00008740                   JJXM    SLAVE,           44, 45,liadpunch_hdbutt,liadpunch_punch
    1174 000087e0                   JJXM    HEADHOLD,        44, 45,liadpunch_hdbutt,liadpunch_punch
    1175 00008880                   JJXM    HEADHELD,        44, 45,liadpunch_hdbutt,liadpunch_punch
    1176 00008920                   JJXM    CHOKEHOLD,       44, 45,liadpunch_hdbutt,liadpunch_punch
    1177 000089c0                   JJXM    PUPPET,          44, 45,liadpunch_hdbutt,liadpunch_punch
    1178 00008a60                   JJXM    PUPPET2,         44, 45,liadpunch_hdbutt,liadpunch_punch
    1179 00008b00                   JJXM    INAIR2,          44, 45,liadpunch_hdbutt,liadpunch_punch
    1180 00008ba0                   JJXM_END
    1181                    
    1182 00008bc0           liadpunch_punch
    1183 00008bc0           std_punch
    1184                    
    1185 00008bc0                   FACE24  rzr,punch_anim
    1186 00008c60     0d5f          calla   change_anim1a
         00008c70 00000000! 
    1187                    
    1188 00008c90                   WRSND   W_RAZOR,PUNCH_T1,PUNCH_T2
    1189                    
    1190 00008e30     0960          rets
    1191                    
    1192 00008e40           liadpunch_hdbutt
    1193                    
    1194 00008e40                   FACE24  rzr,butt_anim
    1195 00008ee0     0d5f          calla   change_anim1a
         00008ef0 00000000! 
    1196                    
    1197 00008f10                   WRSND   W_RAZOR,HDBUTT_T1,HDBUTT_T2
    1198 000090b0     0960          rets
    1199                    
    1200 000090c0           liadpunch_lbdrop
    1201                    
    1202 000090c0                   FACE24  rzr,ground_punch_anim
    1203 00009160     0d5f          calla   change_anim1a
         00009170 00000000! 
    1204                    
    1205 00009190                   WRSND   W_RAZOR,LBOWDROP_T1,LBOWDROP_T2
    1206 00009330     0960          rets
    1207                    
    1208                    
    1209 00009340           liadblock               ;2
    1210                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   28

    1211 00009340           std_block
    1212 00009340     05a0          move    @blocking_off,a0
         00009350 00000000! 
    1213 00009370     cb1f          jrnz    liadno_blocking
    1214                    
    1215 00009380                   RND_AWARD       a13,BLOCKS_AWD
    1216                    
    1217 00009420                   FACE24  rzr,block_anim
    1218 000094c0     0d5f          calla   change_anim1a
         000094d0 00000000! 
    1219                    
    1220 000094f0     0d5f          calla   BLOCK_WOOSH
         00009500 00000000! 
    1221                    
    1222 00009520     5600          clr     a0
    1223 00009530     b00d          move    a0,*a13(BLOCK_TIME)
         00009540     0d30  
    1224 00009550     0320          clrc
    1225 00009560     0960          rets
    1226                    
    1227 00009570           liadno_blocking
    1228 00009570     0de0          setc
    1229 00009580     0960          rets
    1230                    
    1231                    
    1232 00009590           liadsuper_punch ;4
    1233 00009590           liadgraboh
    1234                    
    1235 00009590                   JJXM_INIT
    1236 00009600                   JJXM    NORMAL,          85, 45,liadspunch_close,liadspunch_far
    1237 000096d0                   JJXM    DIZZY,           85, 45,liadspunch_close,liadspunch_far
    1238 000097a0                   JJXM    BLOCK,           85, 45,liadspunch_close,liadspunch_far
    1239 00009870                   JJXM    ONGROUND,       160,140,liadspunch_lbowdrop,std_punch
    1240 00009940                   JJXM    DEAD,           160,140,liadspunch_lbowdrop,std_punch
    1241 00009a10                   JJXM    RUNNING,                liadspunch_downslash
    1242 00009a60                   JJXM    BOUNCING,               liadspunch_downslash
    1243 00009ab0                   JJXM    ONTURNBKL,       85, 45,liadspunch_close,liadspunch_far
    1244 00009b80                   JJXM    CLIMBTURNBKL,    85, 45,liadspunch_close,liadspunch_far
    1245 00009c50                   JJXM    INAIR,                  liadspunch_downslash
    1246 00009ca0                   JJXM    ATTACHED,        85, 45,liadspunch_close,liadspunch_far
    1247 00009d70                   JJXM    OPPOVERHEAD,     85, 45,liadspunch_close,liadspunch_far
    1248 00009e40                   JJXM    WAITANIM,        85, 45,liadspunch_close,liadspunch_far
    1249 00009f10                   JJXM    GRAPPLE,         85, 45,liadspunch_close,liadspunch_far
    1250 00009fe0                   JJXM    MASTER,          85, 45,liadspunch_close,liadspunch_far
    1251 0000a0b0                   JJXM    SLAVE,           85, 45,liadspunch_close,liadspunch_far
    1252 0000a180                   JJXM    HEADHOLD,        85, 45,liadspunch_close,liadspunch_far
    1253 0000a250                   JJXM    HEADHELD,        85, 45,liadspunch_close,liadspunch_far
    1254 0000a320                   JJXM    CHOKEHOLD,       85, 45,liadspunch_close,liadspunch_far
    1255 0000a3f0                   JJXM    PUPPET,          85, 45,liadspunch_close,liadspunch_far
    1256 0000a4c0                   JJXM    PUPPET2,         85, 45,liadspunch_close,liadspunch_far
    1257 0000a590                   JJXM    INAIR2,                 liadspunch_downslash
    1258 0000a5e0                   JJXM_END
    1259                    
    1260                    
    1261 0000a600           liadspunch_lbowdrop
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   29

    1262                    
    1263                    
    1264 0000a600     b5a3          move    *a13(CLOSEST_NUM),a3
         0000a610     03a0  
    1265 0000a620                   X32     a3
    1266                    
    1267 0000a630     0b23          addi    process_ptrs,a3
         0000a640 00000000! 
    1268 0000a660     8663          move    *a3,a3,L
    1269 0000a670     b462          move    *a3(PLYRMODE),a2
         0000a680     05c0  
    1270 0000a690     0b42          cmpi    MODE_DEAD,a2
         0000a6a0     fff6  
    1271 0000a6b0     ca51          jrz     liadno
    1272 0000a6c0     b7a1          move    *a13(OBJ_XPOS),a1,L 
         0000a6d0     0100  
    1273 0000a6e0     b662          move    *a3(OBJ_XPOS),a2,L
         0000a6f0     0100  
    1274 0000a700     4441          sub     a2,a1
    1275 0000a710     0381          abs     a1
    1276 0000a720     2e01          srl     16,a1
    1277 0000a730     0b41          cmpi    30h,a1  ;28
         0000a740     ffcf  
    1278 0000a750     c447          jrlt    liadno
    1279                    
    1280                    
    1281 0000a760     b46e          move    *a3(OBJ_CONTROL),a14
         0000a770     0780  
    1282 0000a780     0b8e          andi    M_FLIPH,a14
         0000a790 ffffffef  
    1283 0000a7b0     b5a0          move    *a13(OBJ_CONTROL),a0
         0000a7c0     0780  
    1284 0000a7d0     0b80          andi    M_FLIPH,a0
         0000a7e0 ffffffef  
    1285 0000a800     480e          cmp     a0,a14
    1286 0000a810     ca28          jrz     liadfeet
    1287                    
    1288                    
    1289 0000a820                   FACE24  rzr,hair_pickup_anim
    1290 0000a8c0     0d5f          calla   change_anim1
         0000a8d0 00000000! 
    1291 0000a8f0                   WRSND   W_RAZOR,LBOWDROP_T1,LBOWDROP_T2
    1292 0000aa90     0960          rets
    1293                    
    1294 0000aaa0           liadfeet
    1295 0000aaa0     0b41          cmpi    40h,a1  ;28
         0000aab0     ffbf  
    1296 0000aac0     c410          jrlt    liadno
    1297                    
    1298                            ;smart-target the intended victim
    1299 0000aad0     b5ae          move    *a13(STATUS_FLAGS),a14
         0000aae0     0b50  
    1300 0000aaf0     0bae          ori     M_SMART_ATTACK,a14
         0000ab00 00000010  
    1301 0000ab20     b1cd          move    a14,*a13(STATUS_FLAGS)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   30

         0000ab30     0b50  
    1302 0000ab40     b26d          move    a3,*a13(SMART_TARGET),L
         0000ab50     0ca0  
    1303                    
    1304 0000ab60     09e0          movi    rzr_rugshake_anim,a0
         0000ab70 00000000! 
    1305 0000ab90     0d5f          calla   change_anim1a
         0000aba0 00000000! 
    1306 0000abc0     0960          rets
    1307                    
    1308 0000abd0           liadno
    1309 0000abd0                   FACE24  rzr,ground_punch_anim
    1310 0000ac70     0d5f          calla   change_anim1a
         0000ac80 00000000! 
    1311                    
    1312 0000aca0                   WRSND   W_RAZOR,LBOWDROP_T1,LBOWDROP_T2
    1313 0000ae40     0960          rets
    1314                    
    1315 0000ae50           liadspunch_close
    1316 0000ae50     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000ae60     0bc0  
    1317 0000ae70     1fc0          btst    MOVE_DOWN_BIT,a0
    1318 0000ae80     cb2e          jrnz    liadck_up
    1319                    
    1320 0000ae90     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000aea0     0370  
    1321 0000aeb0     0b41          cmpi    65,a1
         0000aec0     ffbe  
    1322 0000aed0     c700          jrgt    std_punch
         0000aee0     fdcd  
    1323                            .ref    rzr_2_pummel_anim
    1324                            .ref    rzr_4_pummel_anim
    1325                    
    1326 0000aef0                   FACE24  rzr,pummel_anim
    1327 0000af90     0d5f          calla   change_anim1
         0000afa0 00000000! 
    1328 0000afc0                   WRSND   W_RAZOR,HDBUTT_T1,HDBUTT_T2
    1329 0000b160     0960          rets
    1330                    
    1331 0000b170           liadck_up
    1332 0000b170     09e0          movi    rzr_4_uprcut_anim,a0
         0000b180 00000000! 
    1333 0000b1a0     0d5f          calla   change_anim1a
         0000b1b0 00000000! 
    1334 0000b1d0                   WRSND   W_RAZOR,UPRCUT_T1,UPRCUT_T2
    1335 0000b370     0960          rets
    1336                    
    1337 0000b380           liadspunch_far
    1338 0000b380                   WRSND   W_RAZOR,UPRCUT_T1,UPRCUT_T2
    1339 0000b520     09e0          movi    rzr_3_uslash_anim,a0
         0000b530 00000000! 
    1340 0000b550     0d5f          calla   change_anim1a
         0000b560 00000000! 
    1341 0000b580     0960          rets
    1342                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   31

    1343 0000b590           liadspunch_downslash
    1344 0000b590                   WRSND   W_RAZOR,UPRCUT_T1,UPRCUT_T2
    1345 0000b730     09e0          movi    rzr_3_dslash_anim,a0
         0000b740 00000000! 
    1346 0000b760     0d5f          calla   change_anim1a
         0000b770 00000000! 
    1347 0000b790     0960          rets
    1348                    
    1349 0000b7a0           liadkick                ;8
    1350                    
    1351 0000b7a0                   JJXM_INIT
    1352 0000b810                   JJXM    NORMAL,          70, 50,liadkick_knee,liadkick_kick
    1353 0000b8e0                   JJXM    DIZZY,           70, 50,liadkick_knee,liadkick_kick
    1354 0000b9b0                   JJXM    BLOCK,           70, 50,liadkick_knee,liadkick_kick
    1355 0000ba80                   JJXM    ONGROUND,       160,140,liadkick_stomp,liadkick_kick
    1356 0000bb50                   JJXM    RUNNING,         70, 50,liadkick_knee,liadkick_kick
    1357 0000bc20                   JJXM    BOUNCING,        70, 50,liadkick_knee,liadkick_kick
    1358 0000bcf0                   JJXM    ONTURNBKL,              liadkick_kick
    1359 0000bd40                   JJXM    CLIMBTURNBKL,           liadkick_kick
    1360 0000bd90                   JJXM    INAIR,           70, 50,liadkick_knee,liadkick_kick
    1361 0000be60                   JJXM    ATTACHED,        70, 50,liadkick_knee,liadkick_kick
    1362 0000bf30                   JJXM    DEAD,           160,140,liadkick_stomp,liadkick_kick
    1363 0000c000                   JJXM    OPPOVERHEAD,     70, 50,liadkick_knee,liadkick_kick
    1364 0000c0d0                   JJXM    WAITANIM,        70, 50,liadkick_knee,liadkick_kick
    1365 0000c180                   JJXM    GRAPPLE,         70, 50,liadkick_knee,liadkick_kick
    1366 0000c230                   JJXM    MASTER,          70, 50,liadkick_knee,liadkick_kick
    1367 0000c2e0                   JJXM    SLAVE,           70, 50,liadkick_knee,liadkick_kick
    1368 0000c390                   JJXM    HEADHOLD,        70, 50,liadkick_knee,liadkick_kick
    1369 0000c430                   JJXM    HEADHELD,        70, 50,liadkick_knee,liadkick_kick
    1370 0000c4d0                   JJXM    CHOKEHOLD,       70, 50,liadkick_knee,liadkick_kick
    1371 0000c570                   JJXM    PUPPET,          70, 50,liadkick_knee,liadkick_kick
    1372 0000c610                   JJXM    PUPPET2,         70, 50,liadkick_knee,liadkick_kick
    1373 0000c6b0                   JJXM    INAIR2,                 liadkick_TB
    1374 0000c6f0                   JJXM_END
    1375                    
    1376 0000c710           liadkick_TB
    1377                            .ref    rzr_kick_TB_anim
    1378 0000c710     09e0          movi    rzr_kick_TB_anim,a0
         0000c720 00000000! 
    1379 0000c740     0d5f          calla   change_anim1a
         0000c750 00000000! 
    1380                    
    1381 0000c770                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    1382 0000c910     0960          rets
    1383                    
    1384 0000c920           liadkick_kick
    1385 0000c920           std_kick
    1386                    
    1387 0000c920                   FACE24  rzr,kick_anim
    1388 0000c9c0     0d5f          calla   change_anim1a
         0000c9d0 00000000! 
    1389                    
    1390 0000c9f0                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    1391 0000cb90     0960          rets
    1392                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   32

    1393 0000cba0           liadkick_knee
    1394 0000cba0           std_knee
    1395                    
    1396 0000cba0                   FACE24  rzr,knee_anim
    1397 0000cc40     0d5f          calla   change_anim1a
         0000cc50 00000000! 
    1398                    
    1399 0000cc70                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    1400 0000ce10     0960          rets
    1401                    
    1402 0000ce20           liadkick_stomp
    1403                    
    1404 0000ce20                   FACE24  rzr,stomp_anim
    1405 0000cec0     0d5f          calla   change_anim1a
         0000ced0 00000000! 
    1406                    
    1407 0000cef0                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    1408 0000d090     0960          rets
    1409                    
    1410                    
    1411 0000d0a0           liadsuper_kick  ;16
    1412 0000d0a0                   JJXM_INIT
    1413 0000d110                   JJXM    NORMAL,          70, 60,liadskick_special,liadskick_kick        ;0
    1414 0000d1e0                   JJXM    RUNNING,                liadskick_bigboot                       ;1
    1415 0000d230                   JJXM    INAIR,           70, 60,liadskick_special,liadskick_kick        ;2
    1416 0000d300                   JJXM    ATTACHED,        70, 60,liadskick_special,liadskick_kick        ;3
    1417 0000d3d0                   JJXM    ONGROUND,       160,140,liadskick_stomp,std_kick                ;4
    1418 0000d4a0                   JJXM    BOUNCING,               liadskick_bigboot                       ;5
    1419 0000d4f0                   JJXM    ONTURNBKL,       70, 96,liadskick_kick,std_kick         ;6
    1420 0000d5c0                   JJXM    BLOCK,           70, 60,liadskick_special,liadskick_kick        ;7
    1421 0000d690                   JJXM    DIZZY,           70, 60,liadskick_special,liadskick_kick        ;8
    1422 0000d760                   JJXM    DEAD,           160,140,liadskick_stomp,std_kick                ;9
    1423 0000d830                   JJXM    OPPOVERHEAD,     70, 60,liadskick_special,liadskick_kick        ;10
    1424 0000d8e0                   JJXM    CLIMBTURNBKL,    70, 96,liadskick_kick,std_kick         ;11
    1425 0000d9a0                   JJXM    WAITANIM,        70, 62,liadskick_special,liadskick_kick        ;12
    1426 0000da40                   JJXM    GRAPPLE,         70, 62,liadskick_special,liadskick_kick        ;13
    1427 0000dae0                   JJXM    MASTER,          70, 62,liadskick_special,liadskick_kick        ;14
    1428 0000db80                   JJXM    SLAVE,           70, 62,liadskick_special,liadskick_kick        ;15
    1429 0000dc20                   JJXM    HEADHOLD,        70, 62,liadskick_special,liadskick_kick        ;16
    1430 0000dcc0                   JJXM    HEADHELD,               std_kick
    1431 0000dd10                   JJXM    CHOKEHOLD,       70, 62,liadskick_special,liadskick_kick        ;16
    1432 0000ddb0                   JJXM    PUPPET,          70, 62,liadskick_special,liadskick_kick        ;20
    1433 0000de50                   JJXM    PUPPET2,         70, 62,liadskick_special,liadskick_kick        ;20
    1434 0000def0                   JJXM    INAIR2,                 liadkick_TB
    1435 0000df40                   JJXM_END
    1436                    
    1437 0000df60           liadskick_kick
    1438 0000df60                   FACE24  rzr,super_kick_anim
    1439 0000e000     0d5f          calla   change_anim1a
         0000e010 00000000! 
    1440                    
    1441 0000e030                   WRSND   W_RAZOR,FLYKICK_T1,FLYKICK_T2
    1442 0000e1d0     0960          rets
    1443                    
    1444                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   33

    1445 0000e1e0           liadskick_special
    1446                    
    1447 0000e1e0     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000e1f0     0bc0  
    1448 0000e200     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000e210     04d0  
    1449 0000e220     0b81          andi    0ch,a1
         0000e230 fffffff3  
    1450 0000e250     4801          cmp     a0,a1
    1451 0000e260     ca28          jrz     liadsuper_knee
    1452                    
    1453 0000e270                   FACE24  rzr,knee_anim
    1454 0000e310     0d5f          calla   change_anim1a
         0000e320 00000000! 
    1455                    
    1456 0000e340                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    1457                    
    1458 0000e4e0     0960          rets
    1459                    
    1460 0000e4f0           liadsuper_knee
    1461 0000e4f0     09e0          movi    rzr_4_knee_fall_anim,a0
         0000e500 00000000! 
    1462 0000e520     0d5f          calla   change_anim1
         0000e530 00000000! 
    1463                    
    1464 0000e550                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
    1465 0000e6f0     0960          rets
    1466                    
    1467 0000e700           liadskick_stomp
    1468                    
    1469 0000e700                   FACE24  rzr,stomp_anim
    1470 0000e7a0     0d5f          calla   change_anim1a
         0000e7b0 00000000! 
    1471                    
    1472 0000e7d0                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    1473                    
    1474 0000e970     0960          rets
    1475                    
    1476 0000e980           liadskick_bigboot
    1477                    
    1478 0000e980     09e0          movi    rzr_4_bigboot_anim,a0           ;*****
         0000e990 00000000! 
    1479 0000e9b0     0d5f          calla   change_anim1a
         0000e9c0 00000000! 
    1480                    
    1481 0000e9e0                   WRSND   W_RAZOR,FLYKICK_T1,FLYKICK_T2
    1482                    
    1483 0000eb80     0960          rets
    1484                    
    1485                    
    1486 0000eb90           liadpunchkick   ;9
    1487                    
    1488 0000eb90     09e0          movi    start_run_anim,a0
         0000eba0 00000000! 
    1489 0000ebc0     0d5f          calla   change_anim1a
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   34

         0000ebd0 00000000! 
    1490                    
    1491 0000ebf0     0960          rets
    1492                    
    1493                    
    1494                    
    1495                    
    1496          00060000  viidXRUN_VAL    equ     RZR_XRUN
    1497          00020000  viidZDRIFT_VAL  equ     RZR_ZDRIFT
    1498                    
    1499 0000ec00           mode_running
    1500                    
    1501 0000ec00     b5a0          move    *a13(RUN_TIME),a0               ;Used for flying kick
         0000ec10     07b0  
    1502 0000ec20     1020          addk    1,a0
    1503 0000ec30     b00d          move    a0,*a13(RUN_TIME)
         0000ec40     07b0  
    1504                    
    1505 0000ec50     b5a0          move    *a13(USR_VAR1),a0
         0000ec60     0850  
    1506 0000ec70     cb11          jrnz    viidno_vel
    1507                    
    1508 0000ec80     0d5f          calla   bounce_off_ropes
         0000ec90 00000000! 
    1509                    
    1510 0000ecb0     09e0          movi    viidXRUN_VAL,a0
         0000ecc0 00060000  
    1511 0000ece0     b5ae          move    *a13(MOVE_DIR),a14
         0000ecf0     04b0  
    1512 0000ed00     1f8e          btst    PLAYER_RIGHT_BIT,a14
    1513 0000ed10     cb01          jrnz    viidpos
    1514 0000ed20     03a0          neg     a0
    1515 0000ed30           viidpos
    1516 0000ed30     05ae          move    @hyper_speed_on,a14
         0000ed40 00000000! 
    1517 0000ed60     63c0          sll     a14,a0
    1518 0000ed70     b20d          move    a0,*a13(OBJ_XVEL),L
         0000ed80     02d0  
    1519                    
    1520 0000ed90           viidno_vel
    1521                    
    1522 0000ed90     b5a0          move    *a13(GETUP_TIME),a0             ;delay b4 gaining control
         0000eda0     0460  
    1523 0000edb0     cb38          jrnz    viidout_of_control
    1524                    
    1525 0000edc0     b5a0          move    *a13(ANIMODE),a0
         0000edd0     0660  
    1526 0000ede0     1fa0          btst    MODE_UNINT_BIT,a0
    1527 0000edf0     cb16          jrnz    viidno_interrupt
    1528                    
    1529 0000ee00     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000ee10     0bc0  
    1530 0000ee20     b5a1          move    *a13(MOVE_DIR),a1
         0000ee30     04b0  
    1531 0000ee40     5401          or      a0,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   35

    1532 0000ee50     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         0000ee60 fffffff3  
    1533 0000ee80     0b41          cmpi    MOVE_LEFT|MOVE_RIGHT,a1
         0000ee90     fff3  
    1534 0000eea0     cb0b          jrne    viidcontinue_run
    1535                    
    1536                            ;braking with stick.  abort run.
    1537                    
    1538 0000eeb0                   SETMODE NORMAL
    1539                    
    1540 0000ef60           viidcontinue_run
    1541 0000ef60           viidno_interrupt
    1542                    
    1543 0000ef60     b5a0          move    *a13(STICK_VAL_CUR),a0
         0000ef70     0bc0  
    1544 0000ef80     5621          clr     a1
    1545                    
    1546 0000ef90     09e1          movi    -viidZDRIFT_VAL,a1
         0000efa0 fffe0000  
    1547 0000efc0     1fe0          btst    PLAYER_UP_BIT,a0
    1548 0000efd0     cb06          jrnz    viidsetvel
    1549                    
    1550 0000efe0     09e1          movi    viidZDRIFT_VAL,a1
         0000eff0 00020000  
    1551 0000f010     1fc0          btst    PLAYER_DOWN_BIT,a0
    1552 0000f020     cb01          jrnz    viidsetvel
    1553                    
    1554 0000f030     5621          clr     a1
    1555 0000f040           viidsetvel
    1556 0000f040     b22d          move    a1,*a13(OBJ_ZVEL),L
         0000f050     0310  
    1557                    
    1558                    
    1559 0000f060     b5a0          move    *a13(DELAY_BUTNS),a0
         0000f070     0ab0  
    1560 0000f080     cb0b          jrnz    viidout_of_control
    1561                    
    1562                    
    1563 0000f090     b5a0          move    *a13(BUT_VAL_DOWN),a0
         0000f0a0     0ba0  
    1564 0000f0b0     0b80          andi    011111b,a0
         0000f0c0 ffffffe0  
    1565 0000f0e0                   X32     a0
    1566 0000f0f0     0b20          addi    viidaction_table,a0
         0000f100 0000f150' 
    1567 0000f120     8600          move    *a0,a0,L
    1568 0000f130     0920          call    a0
    1569 0000f140           viidout_of_control
    1570 0000f140     0960          rets
    1571                    
    1572 0000f150           viidaction_table
    1573 0000f150 0000f550'         .long   viidz,viidpunch,viidblock,viidblock                     ;0-3
    1574 0000f1d0 0000f680'         .long   viidsuper_punch,viidsuper_punch,viidblock,viidblock     ;4-7
    1575 0000f250 00010680'         .long   viidkick,viidpunchkick,viidblock,viidblock              ;8-11
    1576 0000f2d0 0000f680'         .long   viidsuper_punch,viidpunchkick,viidblock,viidblock       ;12-15
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   36

    1577 0000f350 00010680'         .long   viidsuper_kick,viidsuper_kick,viidblock,viidblock       ;16-19
    1578 0000f3d0 0000f680'         .long   viidgraboh,viidgraboh,viidblock,viidblock               ;20-23
    1579 0000f450 00010680'         .long   viidsuper_kick,viidpunchkick,viidblock,viidblock        ;24-27
    1580 0000f4d0 0000f680'         .long   viidgraboh,viidgraboh,viidblock,viidblock               ;28-31
    1581                    
    1582                    
    1583                    
    1584                    
    1585 0000f550           viidz
    1586 0000f550     0960          rets
    1587                    
    1588                    
    1589 0000f560           viidblock               ;2
    1590 0000f560     b7a0          move    *a13(OBJ_XVEL),a0,L
         0000f570     02d0  
    1591 0000f580     2be0          sra     1,a0
    1592 0000f590     b20d          move    a0,*a13(OBJ_XVEL),L
         0000f5a0     02d0  
    1593 0000f5b0                   SETMODE NORMAL
    1594 0000f660     c000          jruc    std_block
         0000f670     f9cc  
    1595                    
    1596                    
    1597 0000f680           viidpunch               ;1
    1598 0000f680           viidsuper_punch ;4
    1599 0000f680           viidpunchkick
    1600 0000f680           viidgraboh
    1601                    
    1602 0000f680                   JJXM_INIT
    1603 0000f6f0                   JJXM    NORMAL,                 viidpunch_clothesline
    1604 0000f730                   JJXM    BLOCK,                  viidpunch_clothesline
    1605 0000f770                   JJXM    DIZZY,                  viidpunch_clothesline
    1606 0000f7b0                   JJXM    ONGROUND,       176,176,viidpunch_flyelbow,viidpunch_rets
    1607 0000f880                   JJXM    RUNNING,                viidpunch_clothesline
    1608 0000f8c0                   JJXM    BOUNCING,               viidpunch_clothesline
    1609 0000f900                   JJXM    ONTURNBKL,              viidpunch_clothesline
    1610 0000f940                   JJXM    CLIMBTURNBKL,           viidpunch_clothesline
    1611 0000f980                   JJXM    INAIR,                  viidpunch_clothesline
    1612 0000f9c0                   JJXM    ATTACHED,               viidpunch_clothesline
    1613 0000fa00                   JJXM    DEAD,           176,176,viidpunch_flyelbow,viidpunch_rets
    1614 0000fad0                   JJXM    OPPOVERHEAD,            viidpunch_clothesline
    1615 0000fb10                   JJXM    WAITANIM,               viidpunch_clothesline
    1616 0000fb50                   JJXM    GRAPPLE,                viidpunch_clothesline
    1617 0000fb90                   JJXM    MASTER,                 viidpunch_clothesline
    1618 0000fbd0                   JJXM    SLAVE,                  viidpunch_clothesline
    1619 0000fc10                   JJXM    HEADHOLD,               viidpunch_clothesline
    1620 0000fc50                   JJXM    HEADHELD,               viidpunch_clothesline
    1621 0000fc90                   JJXM    CHOKEHOLD,              viidpunch_clothesline
    1622 0000fcd0                   JJXM    PUPPET,                 viidpunch_clothesline
    1623 0000fd10                   JJXM    PUPPET2,                viidpunch_clothesline
    1624 0000fd50                   JJXM    INAIR2,                 viidpunch_clothesline
    1625 0000fd90                   JJXM_END
    1626                    
    1627 0000fdb0           viidpunch_clothesline
    1628                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   37

    1629                            ;don't do it if you're running away from your opponent.
    1630 0000fdb0     b5a0          move    *a13(FACING_DIR),a0
         0000fdc0     04c0  
    1631 0000fdd0     b5a1          move    *a13(NEW_FACING_DIR),a1
         0000fde0     04d0  
    1632 0000fdf0     5001          and     a0,a1
    1633 0000fe00     0b81          andi    MOVE_LEFT|MOVE_RIGHT,a1
         0000fe10 fffffff3  
    1634 0000fe30     ca00          jrz     viidz
         0000fe40     ff70  
    1635                    
    1636 0000fe50     5600          clr     a0
    1637 0000fe60     b00d          move    a0,*a13(RUN_TIME)
         0000fe70     07b0  
    1638                    
    1639 0000fe80                   SETMODE NORMAL
    1640                    
    1641 0000ff30     b5a1          move    *a13(CLOSEST_XDIST),a1
         0000ff40     0370  
    1642 0000ff50     0b41          cmpi    70,a1
         0000ff60     ffb9  
    1643 0000ff70     c421          jrlt    viidhdbutt
    1644                    
    1645 0000ff80     09e0          movi    rzr_3_uslash_anim,a0
         0000ff90 00000000! 
    1646 0000ffb0     0d5f          calla   change_anim1a
         0000ffc0 00000000! 
    1647                    
    1648 0000ffe0                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
    1649                    
    1650 00010180     0960          rets
    1651                    
    1652 00010190           viidhdbutt
    1653                    
    1654 00010190                   FACE24  rzr,butt_anim
    1655 00010230     0d5f          calla   change_anim1
         00010240 00000000! 
    1656                    
    1657 00010260                   WRSND   W_RAZOR,HDBUTT_T1,HDBUTT_T2
    1658                    
    1659 00010400     0960          rets
    1660                    
    1661 00010410           viidpunch_flyelbow
    1662 00010410           std_flyelbow
    1663 00010410     09e0          movi    rzr_flying_elbow_anim,a0
         00010420 00000000! 
    1664 00010440     0d5f          calla   change_anim1a
         00010450 00000000! 
    1665                    
    1666 00010470     b7a0          move    *a13(OBJ_XVEL),a0,L
         00010480     02d0  
    1667 00010490     2be0          sra     1,a0
    1668 000104a0     b20d          move    a0,*a13(OBJ_XVEL),L
         000104b0     02d0  
    1669                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   38

    1670 000104c0                   WRSND   W_RAZOR,FLYKICK_T1,FLYKICK_T2
    1671                    
    1672 00010660     0960          rets
    1673                    
    1674 00010670           viidpunch_rets
    1675 00010670     0960          rets
    1676                    
    1677 00010680           viidkick                ;8
    1678 00010680           viidsuper_kick  ;16
    1679 00010680                   JJXM_INIT
    1680 000106f0                   JJXM    NORMAL,                 viidkick_flykick
    1681 00010730                   JJXM    BLOCK,                  viidkick_flykick
    1682 00010770                   JJXM    DIZZY,                  viidkick_flykick
    1683 000107b0                   JJXM    ONGROUND,               std_flyelbow
    1684 000107f0                   JJXM    RUNNING,                viidkick_flykick
    1685 00010830                   JJXM    BOUNCING,               viidkick_flykick
    1686 00010870                   JJXM    ONTURNBKL,              viidkick_flykick
    1687 000108b0                   JJXM    CLIMBTURNBKL,           viidkick_flykick
    1688 000108f0                   JJXM    INAIR,                  viidkick_flykick
    1689 00010930                   JJXM    ATTACHED,               viidkick_flykick
    1690 00010970                   JJXM    DEAD,                   std_flyelbow
    1691 000109b0                   JJXM    OPPOVERHEAD,            viidkick_flykick
    1692 000109f0                   JJXM    WAITANIM,               viidkick_flykick
    1693 00010a30                   JJXM    GRAPPLE,                viidkick_flykick
    1694 00010a70                   JJXM    MASTER,                 viidkick_flykick
    1695 00010ab0                   JJXM    SLAVE,                  viidkick_flykick
    1696 00010af0                   JJXM    HEADHOLD,               viidkick_flykick
    1697 00010b30                   JJXM    HEADHELD,               viidkick_flykick
    1698 00010b70                   JJXM    CHOKEHOLD,              viidkick_flykick
    1699 00010bb0                   JJXM    PUPPET,                 viidkick_flykick
    1700 00010bf0                   JJXM    PUPPET2,                viidkick_flykick
    1701 00010c30                   JJXM    INAIR2,                 viidkick_flykick
    1702 00010c70                   JJXM_END
    1703                    
    1704 00010c90           viidkick_flykick
    1705 00010c90           std_flykick
    1706                    
    1707 00010c90     0d5f          calla   ck_ignore
         00010ca0 00000000! 
    1708 00010cc0     c800          jrc     viidz
         00010cd0     fe87  
    1709                    
    1710 00010ce0     09e0          movi    rzr_flying_kick_anim,a0
         00010cf0 00000000! 
    1711 00010d10     0d5f          calla   change_anim1a
         00010d20 00000000! 
    1712                    
    1713 00010d40                   WRSND   W_RAZOR,FLYKICK_T1,FLYKICK_T2
    1714                    
    1715 00010ee0                   SETMODE INAIR
    1716                    
    1717 00010f90     0960          rets
    1718                    
    1719 00010fa0           viidkick_rets
    1720 00010fa0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   39

    1721                    
    1722 00010fb0           mode_inair      ;2
    1723                    
    1724 00010fb0     0960          rets
    1725                    
    1726 00010fc0           mode_attached   ;3
    1727                    
    1728 00010fc0     0d5f          calla   keep_attached
         00010fd0 00000000! 
    1729 00010ff0     cb12          jrnz    qvrgstill_attached
    1730                    
    1731 00011000     5600          clr     a0
    1732 00011010     b20d          move    a0,*a13(ATTACH_PROC),L
         00011020     03e0  
    1733                    
    1734 00011030                   SETMODE NORMAL
    1735                    
    1736 000110e0     09c0          movi    MODE_NORMAL,a0
         000110f0     0000  
    1737 00011100     b00d          move    a0,*a13(ANIMODE)
         00011110     0660  
    1738                    
    1739 00011120           qvrgstill_attached
    1740 00011120     0960          rets
    1741                    
    1742 00011130           mode_onground   ;4
    1743                    
    1744 00011130     0960          rets
    1745                    
    1746                    
    1747                    
    1748 00011140           mode_bouncing   ;5
    1749                    
    1750 00011140     5600          clr     a0
    1751 00011150     b20d          move    a0,*a13(OBJ_XVEL),L
         00011160     02d0  
    1752 00011170     b20d          move    a0,*a13(OBJ_ZVEL),L
         00011180     0310  
    1753                    
    1754 00011190     b5a0          move    *a13(ANIMODE),a0
         000111a0     0660  
    1755 000111b0     1fe0          btst    MODE_END_BIT,a0
    1756 000111c0     ca20          jrz     roxlnot_ended
    1757                    
    1758 000111d0     b5a0          move    *a13(MOVE_DIR),a0
         000111e0     04b0  
    1759 000111f0     0bc0          xori    MOVE_LEFT+MOVE_RIGHT,a0 ;flip LEFT/RIGHT
         00011200 0000000c  
    1760 00011220     b00d          move    a0,*a13(MOVE_DIR)
         00011230     04b0  
    1761                    
    1762 00011240     b5a1          move    *a13(NEW_FACING_DIR),a1
         00011250     04d0  
    1763 00011260     0b81          andi    MOVE_UP+MOVE_DOWN,a1
         00011270 fffffffc  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   40

    1764 00011290     5401          or      a0,a1                   ;LEFT or RIGHT
    1765 000112a0     b02d          move    a1,*a13(FACING_DIR)     ;face same dir as run
         000112b0     04c0  
    1766                    
    1767 000112c0     09e0          movi    rzr_run2_anim,a0
         000112d0 00000000! 
    1768 000112f0     0d5f          calla   change_anim1a
         00011300 00000000! 
    1769                    
    1770 00011320                   SETMODE RUNNING
    1771                    
    1772                    
    1773 000113d0           roxlnot_ended
    1774 000113d0     0960          rets
    1775                    
    1776                    
    1777 000113e0           mode_onturnbkl  ;6
    1778                    
    1779                    
    1780 000113e0     b5a0          move    *a13(STICK_VAL_CUR),a0
         000113f0     0bc0  
    1781 00011400     1fc0          btst    PLAYER_DOWN_BIT,a0
    1782 00011410     ca12          jrz     rpdgno_climbdown
    1783                    
    1784 00011420     09e0          movi    rzr_climb_down_anim,a0
         00011430 00000000! 
    1785 00011450     0d5f          calla   change_anim1a
         00011460 00000000! 
    1786                    
    1787 00011480                   SETMODE CLIMBTURNBKL
    1788                    
    1789 00011530           rpdgno_interrupt
    1790 00011530     0960          rets
    1791                    
    1792 00011540           rpdgno_climbdown
    1793 00011540     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011550     0ba0  
    1794 00011560     0b80          andi    011111b,a0
         00011570 ffffffe0  
    1795 00011590     ca51          jrz     rpdgz
    1796                    
    1797 000115a0                   X32     a0
    1798 000115b0     0b20          addi    rpdgaction_table,a0
         000115c0 000116b0' 
    1799 000115e0     8600          move    *a0,a0,L
    1800 000115f0     0920          call    a0
    1801                    
    1802 00011600     b5a5          move    *a13(PLYRNUM),a5
         00011610     0580  
    1803 00011620     09e2          movi    JUMP_ROPES,a2
         00011630 00000000! 
    1804 00011650     09c0          movi    1000,a0
         00011660     03e8  
    1805 00011670     0d5f          calla   ADD_IF_SILENT
         00011680 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   41

    1806                    
    1807 000116a0     0960          rets
    1808                    
    1809                    
    1810                    
    1811 000116b0           rpdgaction_table
    1812 000116b0 00011ab0'         .long   rpdgz,rpdgpunch,rpdgblock,rpdgblock                     ;0-3
    1813 00011730 00011ac0'         .long   rpdgsuper_punch,rpdgsuper_punch,rpdgblock,rpdgblock     ;4-7
    1814 000117b0 00011ac0'         .long   rpdgkick,rpdgpunchkick,rpdgblock,rpdgblock              ;8-11
    1815 00011830 00011ac0'         .long   rpdgsuper_punch,rpdgpunchkick,rpdgblock,rpdgblock       ;12-15
    1816 000118b0 00011ac0'         .long   rpdgsuper_kick,rpdgsuper_kick,rpdgblock,rpdgblock       ;16-19
    1817 00011930 00011ac0'         .long   rpdggraboh,rpdggraboh,rpdgblock,rpdgblock               ;20-23
    1818 000119b0 00011ac0'         .long   rpdgsuper_kick,rpdgpunchkick,rpdgblock,rpdgblock        ;24-27
    1819 00011a30 00011ac0'         .long   rpdggraboh,rpdggraboh,rpdgblock,rpdgblock               ;28-31
    1820                    
    1821                    
    1822 00011ab0           rpdgz
    1823 00011ab0     0960          rets
    1824                    
    1825 00011ac0           rpdgpunch               ;1
    1826 00011ac0           rpdgblock               ;2
    1827 00011ac0           rpdgsuper_punch ;4
    1828 00011ac0           rpdgpunchkick   ;5
    1829 00011ac0           rpdgkick                ;8
    1830 00011ac0           rpdgsuper_kick  ;16
    1831 00011ac0           rpdggraboh              ;20
    1832                    
    1833 00011ac0                   SETMODE INAIR
    1834                    
    1835 00011b70     09e0          movi    rzr_tbukl_elbow_anim,a0
         00011b80 00000000! 
    1836 00011ba0     0d5f          calla   change_anim1a
         00011bb0 00000000! 
    1837                    
    1838 00011bd0                   WRSND   W_RAZOR,TURNDIVE_T1,TURNDIVE_T2
    1839 00011d70     0960          rets
    1840                    
    1841                    
    1842 00011d80           mode_block      ;7
    1843                    
    1844 00011d80     b5a0          move    *a13(BLOCK_TIME),a0
         00011d90     0d30  
    1845 00011da0     1020          inc     a0
    1846 00011db0     b00d          move    a0,*a13(BLOCK_TIME)
         00011dc0     0d30  
    1847 00011dd0     0b40          cmpi    160,a0
         00011de0     ff5f  
    1848 00011df0     c413          jrlt    lnncno
    1849                    
    1850 00011e00     0d5f          calla   get_opp_plyrmode
         00011e10 00000000! 
    1851 00011e30     0b40          cmpi    MODE_BLOCK,a0
         00011e40     fff8  
    1852 00011e50     cb0d          jrnz    lnncno
    1853 00011e60     b5a0          move    *a13(CLOSEST_XDIST),a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   42

         00011e70     0370  
    1854 00011e80     0b40          cmpi    61h,a0
         00011e90     ff9e  
    1855 00011ea0     c508          jrge    lnncno
    1856 00011eb0     0b40          cmpi    45,a0
         00011ec0     ffd2  
    1857 00011ed0     c405          jrlt    lnncno
    1858 00011ee0     b5a0          move    *a13(CLOSEST_ZDIST),a0
         00011ef0     0390  
    1859 00011f00     0b40          cmpi    30,a0
         00011f10     ffe1  
    1860 00011f20     c461          jrlt    lnncpunchblock
    1861                    
    1862 00011f30           lnncno
    1863 00011f30     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00011f40     0ba0  
    1864 00011f50     0b80          andi    011111b,a0
         00011f60 ffffffe0  
    1865 00011f80     ca0c          jrz     lnncno_interrupt
    1866                    
    1867                            ;press.  if block isn't down, let mode_normal handle it
    1868 00011f90     4c02          move    a0,a2                   ;save a0 from ...val_down
    1869 00011fa0     b5a0          move    *a13(BUT_VAL_CUR),a0
         00011fb0     0b90  
    1870 00011fc0     1fc0          btst    PLAYER_BLOCK_BIT,a0
    1871 00011fd0     ca08          jrz     lnncset_mode_normal
    1872 00011fe0     4c40          move    a2,a0                   ;restore a0 from ...val_down
    1873                    
    1874 00011ff0                   X32     a0
    1875 00012000     0b20          addi    lnncaction_table,a0
         00012010 00012130' 
    1876 00012030     8600          move    *a0,a0,L
    1877 00012040     0920          call    a0
    1878                    
    1879 00012050           lnncno_interrupt
    1880 00012050     0960          rets
    1881                    
    1882 00012060           lnncset_mode_normal
    1883 00012060                   SETMODE NORMAL
    1884 00012110     c000          jruc    mode_normal
         00012120     f4bd  
    1885                    
    1886 00012130           lnncaction_table
    1887 00012130 00012530'         .long   lnncz,lnncpunchblock,lnncz      ;0-2
    1888 00012190 00012540'         .long   lnncpunchblock          ;3
    1889 000121b0 00012530'         .long   lnncz,lnncz,lnncz,lnncz,lnncz,lnncz,lnncz       ;4-10
    1890 00012290 00012530'         .long   lnncz,lnncz,lnncz,lnncz,lnncz,lnncz,lnncz       ;11-17
    1891 00012370 00012530'         .long   lnncz,lnncz,lnncz,lnncz,lnncz,lnncz,lnncz       ;18-24
    1892 00012450 00012530'         .long   lnncz,lnncz,lnncz,lnncz,lnncz,lnncz,lnncz       ;25-31
    1893                    
    1894 00012530           lnncz
    1895 00012530     0960          rets
    1896                    
    1897 00012540           lnncpunchblock  ;3
    1898                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   43

    1899 00012540                   SETMODE NORMAL
    1900                    
    1901 000125f0     09e0          movi    rzr_4_push_anim,a0
         00012600 00000000! 
    1902 00012620     0d5f          calla   change_anim1a
         00012630 00000000! 
    1903                    
    1904 00012650                   WRSND   W_RAZOR,PUSH_T1,PUSH_T2
    1905                    
    1906 000127f0     0960          rets
    1907                    
    1908                    
    1909                    
    1910 00012800           mode_dizzy      ;8
    1911                    
    1912 00012800     0960          rets
    1913                    
    1914                    
    1915 00012810           mode_oppoverhead ;10
    1916                    
    1917 00012810     0960          rets
    1918                    
    1919                    
    1920 00012820           mode_climbturnbkl       ;11
    1921                    
    1922 00012820     0960          rets
    1923                    
    1924                    
    1925                    
    1926 00012830           mode_waitanim   ;12
    1927                    
    1928 00012830     b5a0          move    *a13(ANIMODE),a0
         00012840     0660  
    1929 00012850     1fe0          btst    MODE_END_BIT,a0
    1930 00012860     ca03          jrz     jkocnot_ended
    1931                    
    1932 00012870     b7a0          move    *a13(CODE_ADDR),a0,L
         00012880     0430  
    1933 00012890     0920          call    a0
    1934                    
    1935 000128a0           jkocnot_ended
    1936 000128a0     0960          rets
    1937                    
    1938                    
    1939                    
    1940 000128b0           mode_grapple    ;13
    1941                    
    1942 000128b0     0960          rets
    1943                    
    1944                    
    1945 000128c0           mode_master     ;14
    1946                    
    1947 000128c0     0d5f          calla   master_keep_attached    ;keep slave attached to me
         000128d0 00000000! 
    1948                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   44

    1949 000128f0     0960          rets
    1950                    
    1951                    
    1952 00012900           mode_slave      ;15
    1953 00012900     0960          rets
    1954                    
    1955                    
    1956 00012910           mode_headhold   ;16
    1957                    
    1958                            .ref    bozo_check
    1959 00012910     0d5f          calla   bozo_check
         00012920 00000000! 
    1960 00012940     c929          jrnc    fhbwfail
    1961                    
    1962 00012950                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
    1963                    
    1964 00012af0     09e0          movi    rzr_razors_edge_anim,a0
         00012b00 00000000! 
    1965 00012b20     05ae          move    @PCNT,a14
         00012b30 00000000! 
    1966 00012b50     1fee          btst    0,a14
    1967 00012b60     ca03          jrz     fhbwtag
    1968 00012b70     09e0          movi    rzr_3_pile_driver_anim,a0
         00012b80 00000000! 
    1969 00012ba0     0d5f  fhbwtag calla   change_anim1a
         00012bb0 00000000! 
    1970                    
    1971 00012bd0     0960          rets
    1972                    
    1973 00012be0           fhbwfail
    1974 00012be0     b7a0          move    *a13(WHOIHIT),a0,L
         00012bf0     0500  
    1975 00012c00     b400          move    *a0(PLYRMODE),a0
         00012c10     05c0  
    1976 00012c20     0b40          cmpi    MODE_HEADHELD,a0
         00012c30     ffec  
    1977 00012c40     cb10          jrnz    fhbwexit
    1978                    
    1979                    
    1980 00012c50     b5a0          move    *a13(ANIMODE),a0
         00012c60     0660  
    1981 00012c70     1fa0          btst    MODE_UNINT_BIT,a0
    1982 00012c80     cb0b          jrnz    fhbwno_interrupt
    1983                    
    1984 00012c90     b5a0          move    *a13(BUT_VAL_DOWN),a0
         00012ca0     0ba0  
    1985 00012cb0     0b80          andi    011111b,a0
         00012cc0 ffffffe0  
    1986 00012ce0                   X32     a0
    1987 00012cf0     0b20          addi    fhbwaction_table,a0
         00012d00 00012f20' 
    1988 00012d20     8600          move    *a0,a0,L
    1989 00012d30     0920          call    a0
    1990                    
    1991 00012d40           fhbwno_interrupt
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   45

    1992 00012d40     0960          rets
    1993                    
    1994 00012d50           fhbwexit
    1995 00012d50     b7ae          move    *a13(OBJ_ZPOS),a14,L
         00012d60     0140  
    1996 00012d70     0d0e          subi    [6,0],a14
         00012d80 fff9ffff  
    1997 00012da0     b3cd          move    a14,*a13(OBJ_ZPOS),L
         00012db0     0140  
    1998                    
    1999 00012dc0     1941          movk    MOVE_DOWN_RIGHT,a1
    2000 00012dd0     b5a0          move    *a13(OBJ_CONTROL),a0
         00012de0     0780  
    2001 00012df0     1f60          btst    B_FLIPH,a0
    2002 00012e00     ca01          jrz     fhbwright
    2003 00012e10     18c1          movk    MOVE_DOWN_LEFT,a1
    2004 00012e20     b02d  fhbwright       move    a1,*a13(FACING_DIR)
         00012e30     04c0  
    2005 00012e40     b02d          move    a1,*a13(NEW_FACING_DIR)
         00012e50     04d0  
    2006                    
    2007 00012e60                   SETMODE NORMAL
    2008                    
    2009 00012f10     0960          rets
    2010                    
    2011 00012f20           fhbwaction_table
    2012 00012f20 00013320'         .long   fhbwz,fhbwpunch,fhbwblock,fhbwblock                     ;0-3
    2013 00012fa0 00013850'         .long   fhbwsuper_punch,fhbwsuper_punch,fhbwblock,fhbwblock     ;4-7
    2014 00013020 00013b80'         .long   fhbwkick,fhbwpunchkick,fhbwblock,fhbwblock              ;8-11
    2015 000130a0 00013850'         .long   fhbwsuper_punch,fhbwpunchkick,fhbwblock,fhbwblock       ;12-15
    2016 00013120 00013dc0'         .long   fhbwsuper_kick,fhbwsuper_kick,fhbwblock,fhbwblock       ;16-19
    2017 000131a0 00013320'         .long   fhbwgraboh,fhbwgraboh,fhbwblock,fhbwblock               ;20-23
    2018 00013220 00013dc0'         .long   fhbwsuper_kick,fhbwpunchkick,fhbwblock,fhbwblock        ;24-27
    2019 000132a0 00013320'         .long   fhbwgraboh,fhbwgraboh,fhbwblock,fhbwblock               ;28-31
    2020                    
    2021                    
    2022                    
    2023 00013320           fhbwblock
    2024 00013320           fhbwgraboh
    2025 00013320           fhbwz           ;0
    2026 00013320     0960          rets
    2027                    
    2028 00013330           fhbwpunch               ;1
    2029 00013330           fhbwpunchkick
    2030                    
    2031 00013330     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013340 00000000! 
    2032                            ;if stick is up, do quick upslashes.  If it's down, do quick
    2033                            ; downslashes.  Otherwise, do a normal upslash.
    2034 00013360     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013370     0bc0  
    2035 00013380     1fe0          btst    MOVE_UP_BIT,a0
    2036 00013390     cb23          jrnz    fhbwquick_upslashes
    2037 000133a0     1fc0          btst    MOVE_DOWN_BIT,a0
    2038 000133b0     cb35          jrnz    fhbwquick_dnslashes
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   46

    2039                    
    2040                            .ref    rzr_4_kick2_anim
    2041 000133c0     09e0          movi    rzr_4_kick2_anim,a0
         000133d0 00000000! 
    2042 000133f0     0d5f          calla   change_anim1a
         00013400 00000000! 
    2043 00013420                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    2044 000135c0     0960          rets
    2045                    
    2046 000135d0           fhbwquick_upslashes
    2047 000135d0     09e0          movi    rzr_uslashes_to_head_anim,a0
         000135e0 00000000! 
    2048 00013600     0d5f          calla   change_anim1a
         00013610 00000000! 
    2049 00013630                   WRSND   W_RAZOR,UPRCUT_T2
    2050 00013700     0960          rets
    2051                    
    2052 00013710           fhbwquick_dnslashes
    2053 00013710     09e0          movi    rzr_dslashes_to_head_anim,a0
         00013720 00000000! 
    2054 00013740     0d5f          calla   change_anim1a
         00013750 00000000! 
    2055 00013770                   WRSND   W_RAZOR,UPRCUT_T2
    2056 00013840     0960          rets
    2057                    
    2058 00013850           fhbwsuper_punch ;4
    2059                    
    2060 00013850     b5a0          move    *a13(STICK_VAL_CUR),a0
         00013860     0bc0  
    2061 00013870     1fc0          btst    MOVE_DOWN_BIT,a0
    2062 00013880     caa9          jrz     fhbwz
    2063                    
    2064 00013890     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         000138a0 00000000! 
    2065                    
    2066 000138c0                   SPCDMG  D_UPRCUT/2,15
    2067                    
    2068 00013970     09e0          movi    rzr_4_uprcut_anim,a0
         00013980 00000000! 
    2069 000139a0     0d5f          calla   change_anim1a
         000139b0 00000000! 
    2070 000139d0                   WRSND   W_RAZOR,UPRCUT_T1,UPRCUT_T2
    2071                    
    2072 00013b70     0960          rets
    2073                    
    2074 00013b80           fhbwkick                ;8
    2075                    
    2076 00013b80     0d5f          CALLA   FIND_AND_KILL_ENDLESS
         00013b90 00000000! 
    2077 00013bb0     09e0          movi    rzr_4_kick2_anim,a0
         00013bc0 00000000! 
    2078 00013be0     0d5f          calla   change_anim1a
         00013bf0 00000000! 
    2079 00013c10                   WRSND   W_RAZOR,KICK_T1,KICK_T2
    2080 00013db0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   47

    2081                    
    2082 00013dc0           fhbwsuper_kick  ;16
    2083 00013dc0     0960          rets
    2084                    
    2085                    
    2086 00013dd0           mode_puppet2    ;17
    2087                    
    2088 00013dd0     0960          rets
    2089                    
    2090 00013de0           mode_headheld   ;19
    2091                    
    2092 00013de0     b5a0          move    *a13(ANIMODE),a0
         00013df0     0660  
    2093 00013e00     1f40          btst    MODE_NOGRAVITY_BIT,a0
    2094 00013e10     cb80          janz    mode_choking
         00013e20 00000000! 
    2095                    
    2096 00013e40     0d5f          calla   bozo_check
         00013e50 00000000! 
    2097 00013e70     c932          jrnc    gjeyfail
    2098                    
    2099 00013e80                   PUSH    a8
    2100 00013e90     4da8          move    a13,a8
    2101 00013ea0     0d5f          CALLA   DO_REVERSAL
         00013eb0 00000000! 
    2102 00013ed0     0d5f          CALLA   DO_REVERSAL_MESS
         00013ee0 00000000! 
    2103 00013f00                   PULL    a8
    2104                    
    2105 00013f10                   WRSND   W_RAZOR,GRABHOLD_T1,GRABHOLD_T2
    2106                    
    2107 000140b0     09e0          movi    rzr_razors_edge_anim,a0
         000140c0 00000000! 
    2108 000140e0     05ae          move    @PCNT,a14
         000140f0 00000000! 
    2109 00014110     1fee          btst    0,a14
    2110 00014120     ca03          jrz     gjeytag
    2111 00014130     09e0          movi    rzr_3_pile_driver_anim,a0
         00014140 00000000! 
    2112 00014160     0d5f  gjeytag calla   change_anim1a
         00014170 00000000! 
    2113                    
    2114 00014190     0960          rets
    2115 000141a0           gjeyfail
    2116 000141a0     b7a0          move    *a13(ATTACH_PROC),a0,L
         000141b0     03e0  
    2117 000141c0     cb0c          jrnz    gjeyno_luck
    2118                    
    2119 000141d0     b5a0          move    *a13(OBJ_YPOSINT),a0
         000141e0     0130  
    2120 000141f0     b5a1          move    *a13(GROUND_Y),a1
         00014200     0570  
    2121 00014210     4820          cmp     a1,a0                   ;a0-a1
    2122 00014220     c706          jrgt    gjeyno_luck
    2123                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   48

    2124                    
    2125 00014230     09e0          movi    rzr_3_head_held_stand_anim,a0
         00014240 00000000! 
    2126 00014260     0d5f          calla   change_anim1a
         00014270 00000000! 
    2127                    
    2128 00014290           gjeyno_luck
    2129 00014290     0960          rets
    2130                    
    2131 000142a0           mode_chokehold  ;24
    2132 000142a0     0960          rets
    2133                    
    2134                    
    2135          0003a000  jmpiVEL equ     3a000h          ;38000h ;30000h
    2136          00031000  jmpiDVEL        equ     31000h          ;27978h ;21f0eh
    2137                    
    2138                    
    2139 000142b0            SUBR rzr_velocity_table
    2140                    
    2141                    
    2142 000142b0 00000000          .long   0,      -jmpiVEL        ;0 UP
    2143                    
    2144 000142f0 00031000          .long   jmpiDVEL,       -jmpiDVEL       ;1 UP-RIGHT
    2145                    
    2146 00014330 0003a000          .long   jmpiVEL,        0       ;2 RIGHT
    2147                    
    2148 00014370 00031000          .long   jmpiDVEL,       jmpiDVEL        ;3 DOWN-RIGHT
    2149                    
    2150 000143b0 00000000          .long   0,      jmpiVEL ;4 DOWN
    2151                    
    2152 000143f0 fffcf000          .long   -jmpiDVEL,      jmpiDVEL        ;5 DOWN-LEFT
    2153                    
    2154 00014430 fffc6000          .long   -jmpiVEL,       0       ;6 LEFT
    2155                    
    2156 00014470 fffcf000          .long   -jmpiDVEL,      -jmpiDVEL       ;7 UP-LEFT
    2157                    
    2158                    
    2159                    
    2160 000144b0            SUBR rzr_rotate_anims_table
    2161 000144b0 00000000!         .long   rzr_stand2_anim         ;new = up right
    2162 000144d0 00000000!         .long   rzr_2_to_4_turn_anim    ;    = down right
    2163 000144f0 00000000!         .long   rzr_2_to_6_turn_anim    ;    = down left ***
    2164 00014510 00000000!         .long   rzr_2_to_8_turn_anim    ;    = up left
    2165                    
    2166 00014530 00000000!         .long   rzr_4_to_2_turn_anim    ;new = up right
    2167 00014550 00000000!         .long   rzr_stand4_anim         ;    = down right
    2168 00014570 00000000!         .long   rzr_4_to_6_turn_anim    ;    = down left
    2169 00014590 00000000!         .long   rzr_4_to_8_turn_anim    ;    = up left ***
    2170                    
    2171 000145b0 00000000!         .long   rzr_6_to_2_turn_anim    ;new = up right ***
    2172 000145d0 00000000!         .long   rzr_6_to_4_turn_anim    ;    = down right
    2173 000145f0 00000000!         .long   rzr_stand6_anim         ;    = down left
    2174 00014610 00000000!         .long   rzr_6_to_8_turn_anim    ;    = up left
    2175                    
    2176 00014630 00000000!         .long   rzr_8_to_2_turn_anim    ;new = up right
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   49

    2177 00014650 00000000!         .long   rzr_8_to_4_turn_anim    ;    = down right ***
    2178 00014670 00000000!         .long   rzr_8_to_6_turn_anim    ;    = down left
    2179 00014690 00000000!         .long   rzr_stand8_anim         ;    = up left
    2180                    
    2181                    
    2182 000146b0            SUBR rzr_leg_anims_table
    2183 000146b0 00000000!         .long   rzr_walk1_f2_anim       ;1 (UP)
    2184 000146d0 00000000!         .long   rzr_walk1_f2_anim       ;2 (UP_RIGHT)
    2185 000146f0 00000000!         .long   rzr_walk1_f4_anim       ;3 (RIGHT)
    2186 00014710 00000000!         .long   rzr_walk1_f4_anim       ;4 (DOWN_RIGHT)
    2187 00014730 00000000!         .long   rzr_walk1_f4_anim       ;5 (DOWN)
    2188 00014750 00000000!         .long   rzr_walk1_f4_anim       ;6 (DOWN_LEFT)
    2189 00014770 00000000!         .long   rzr_walk1_f2_anim       ;7 (LEFT)
    2190 00014790 00000000!         .long   rzr_walk1_f2_anim       ;8 (UP-LEFT)
    2191                    
    2192 000147b0 00000000!         .long   rzr_walk2_f2_anim       ;1 (UP)
    2193 000147d0 00000000!         .long   rzr_walk2_f2_anim       ;2 (UP_RIGHT)
    2194 000147f0 00000000!         .long   rzr_walk2_f2_anim       ;3 (RIGHT)
    2195 00014810 00000000!         .long   rzr_walk2_f4_anim       ;4 (DOWN_RIGHT)
    2196 00014830 00000000!         .long   rzr_walk8_f4_anim       ;5 (DOWN)
    2197 00014850 00000000!         .long   rzr_walk8_f4_anim       ;6 (DOWN_LEFT)
    2198 00014870 00000000!         .long   rzr_walk4_f2_anim       ;7 (LEFT)
    2199 00014890 00000000!         .long   rzr_walk4_f2_anim       ;8 (UP-LEFT)
    2200                    
    2201 000148b0 00000000!         .long   rzr_walk2_f2_anim       ;1 (UP)
    2202 000148d0 00000000!         .long   rzr_walk2_f2_anim       ;2 (UP_RIGHT)
    2203 000148f0 00000000!         .long   rzr_walk2_f2_anim       ;3 (RIGHT)
    2204 00014910 00000000!         .long   rzr_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2205 00014930 00000000!         .long   rzr_walk4_f4_anim       ;5 (DOWN)
    2206 00014950 00000000!         .long   rzr_walk8_f4_anim       ;6 (DOWN_LEFT)
    2207 00014970 00000000!         .long   rzr_walk6_f2_anim       ;7 (LEFT)
    2208 00014990 00000000!         .long   rzr_walk6_f2_anim       ;8 (UP-LEFT)
    2209                    
    2210                    
    2211 000149b0 00000000!         .long   rzr_walk2_f2_anim       ;1 (UP)
    2212 000149d0 00000000!         .long   rzr_walk8_f2_anim       ;2 (UP_RIGHT)
    2213 000149f0 00000000!         .long   rzr_walk4_f4_anim       ;3 (RIGHT)
    2214 00014a10 00000000!         .long   rzr_walk4_f4_anim       ;4 (DOWN_RIGHT)
    2215 00014a30 00000000!         .long   rzr_walk2_f4_anim       ;5 (DOWN)
    2216 00014a50 00000000!         .long   rzr_walk6_f4_anim       ;6 (DOWN_LEFT)
    2217 00014a70 00000000!         .long   rzr_walk2_f2_anim       ;7 (LEFT)
    2218 00014a90 00000000!         .long   rzr_walk6_f2_anim       ;8 (UP-LEFT)
    2219                    
    2220 00014ab0 00000000!         .long   rzr_walk5_f2_anim       ;1 (UP)
    2221 00014ad0 00000000!         .long   rzr_walk5_f2_anim       ;2 (UP_RIGHT)
    2222 00014af0 00000000!         .long   rzr_walk5_f4_anim       ;3 (RIGHT)
    2223 00014b10 00000000!         .long   rzr_walk5_f4_anim       ;4 (DOWN_RIGHT)
    2224 00014b30 00000000!         .long   rzr_walk5_f4_anim       ;5 (DOWN)
    2225 00014b50 00000000!         .long   rzr_walk5_f4_anim       ;6 (DOWN_LEFT)
    2226 00014b70 00000000!         .long   rzr_walk5_f2_anim       ;7 (LEFT)
    2227 00014b90 00000000!         .long   rzr_walk5_f2_anim       ;8 (UP-LEFT)
    2228                    
    2229 00014bb0 00000000!         .long   rzr_walk2_f2_anim       ;1 (UP)
    2230 00014bd0 00000000!         .long   rzr_walk6_f2_anim       ;2 (UP_RIGHT)
    2231 00014bf0 00000000!         .long   rzr_walk2_f2_anim       ;3 (RIGHT)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:55:05 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

meters, names, messages, and scores                                  PAGE   50

    2232 00014c10 00000000!         .long   rzr_walk6_f4_anim       ;4 (DOWN_RIGHT)
    2233 00014c30 00000000!         .long   rzr_walk2_f4_anim       ;5 (DOWN)
    2234 00014c50 00000000!         .long   rzr_walk4_f4_anim       ;6 (DOWN_LEFT)
    2235 00014c70 00000000!         .long   rzr_walk2_f2_anim       ;7 (LEFT)
    2236 00014c90 00000000!         .long   rzr_walk8_f2_anim       ;8 (UP-LEFT)
    2237                    
    2238 00014cb0 00000000!         .long   rzr_walk2_f2_anim       ;1 (UP)
    2239 00014cd0 00000000!         .long   rzr_walk6_f2_anim       ;2 (UP_RIGHT)
    2240 00014cf0 00000000!         .long   rzr_walk6_f2_anim       ;3 (RIGHT)
    2241 00014d10 00000000!         .long   rzr_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2242 00014d30 00000000!         .long   rzr_walk4_f4_anim       ;5 (DOWN)
    2243 00014d50 00000000!         .long   rzr_walk4_f4_anim       ;6 (DOWN_LEFT)
    2244 00014d70 00000000!         .long   rzr_walk2_f2_anim       ;7 (LEFT)
    2245 00014d90 00000000!         .long   rzr_walk2_f2_anim       ;8 (UP-LEFT)
    2246                    
    2247 00014db0 00000000!         .long   rzr_walk2_f2_anim       ;1 (UP)
    2248 00014dd0 00000000!         .long   rzr_walk4_f2_anim       ;2 (UP_RIGHT)
    2249 00014df0 00000000!         .long   rzr_walk6_f2_anim       ;3 (RIGHT)
    2250 00014e10 00000000!         .long   rzr_walk8_f4_anim       ;4 (DOWN_RIGHT)
    2251 00014e30 00000000!         .long   rzr_walk6_f4_anim       ;5 (DOWN)
    2252 00014e50 00000000!         .long   rzr_walk2_f4_anim       ;6 (DOWN_LEFT)
    2253 00014e70 00000000!         .long   rzr_walk2_f2_anim       ;7 (LEFT)
    2254 00014e90 00000000!         .long   rzr_walk2_f2_anim       ;8 (UP-LEFT)
    2255                    
    2256                    
    2257 00014eb0            SUBR rzr_torso_anims_table
    2258 00014eb0 00000000!         .long   rzr_torso2_anim         ;new = up right
    2259 00014ed0 00000000!         .long   rzr_2_to_4_turn2_anim   ;    = down right
    2260 00014ef0 00000000!         .long   rzr_2_to_6_turn2_anim   ;    = down left ***
    2261 00014f10 00000000!         .long   rzr_2_to_8_turn2_anim   ;    = up left
    2262                    
    2263 00014f30 00000000!         .long   rzr_4_to_2_turn2_anim   ;new = up right
    2264 00014f50 00000000!         .long   rzr_torso4_anim         ;    = down right
    2265 00014f70 00000000!         .long   rzr_4_to_6_turn2_anim   ;    = down left
    2266 00014f90 00000000!         .long   rzr_4_to_8_turn2_anim   ;    = up left ***
    2267                    
    2268 00014fb0 00000000!         .long   rzr_6_to_2_turn2_anim   ;new = up right ***
    2269 00014fd0 00000000!         .long   rzr_6_to_4_turn2_anim   ;    = down right
    2270 00014ff0 00000000!         .long   rzr_torso6_anim         ;    = down left
    2271 00015010 00000000!         .long   rzr_6_to_8_turn2_anim   ;    = up left
    2272                    
    2273 00015030 00000000!         .long   rzr_8_to_2_turn2_anim   ;new = up right
    2274 00015050 00000000!         .long   rzr_8_to_4_turn2_anim   ;    = down right ***
    2275 00015070 00000000!         .long   rzr_8_to_6_turn2_anim   ;    = down left
    2276 00015090 00000000!         .long   rzr_torso8_anim         ;    = up left
    2277                    
    2278                    
    2279                    
    2280                            .end

 No Errors,  No Warnings
