TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    **************************************************************
       2                    *
       3                    * Software:     JAMIE BEGELMAN, KURT MAHAN, EUGENE P. JARVIS
       4                    * Initiated:    ?
       5                    *
       6                    * Modified:     Shawn Liptak, 11/14/91  -Total carnage clean up
       7                    *               Shawn Liptak, 1/20/92   -DIP switch test
       8                    *               Shawn Liptak, 1/24/92   -Added line_draw
       9                    *               Shawn Liptak, 2/20/92   -Basketball cleanup
      10                    *               GEORGE PETRO, 1/17/93   -NBA JAM
      11                    *
      12                    * COPYRIGHT (C) 1992 WILLIAMS ELECTRONICS GAMES, INC.
      13                    *
      14                    *.Last mod - 3/24/93 16:48
      15                    **************************************************************
      16                            .width  132
      17                            .option b,d,l,t
      18                            .mnolist
      19                    
      20                    
      21                            .include        "gsp.equ"
      22                            .include        "sys.equ"
      23                            .include        mproc.equ
      24                            .include        link.equ
      25                            .include        imgtbl.glo
      26                            .include        "macros.h"
      27                            .INCLUDE        GAME.EQU
      28                            .INCLUDE        DIP.EQU
      29                    
      30                            ;from   DCSSOUND.ASM
      31                            .ref    SNDSND
      32                    
      33                            .ref    _tseconds
      34                            .ref    _switch_map_mode
      35                            .ref    _coin_addr
      36                            .ref    _switch_addr
      37                            .ref    _switch2_addr
      38                            .ref    _watchdog_addr
      39                            .ref    _dipswitch_addr
      40                            .ref    _sound_addr
      41                            .ref    _soundirq_addr
      42                            .ref    _coin_counter_addr
      43                            .ref    InitAddresses
      44                            .ref    dec_to_asc
      45                            .ref    copy_string,copy_rom_string
      46                            .ref    concat_string
      47                            .ref    message_buffer
      48                            .ref    SOUNDSUP
      49                            .ref    _rtc_seconds
      50                            .ref    _rtc_minutes
      51                            .ref    _rtc_hours
      52                            .ref    _rtc_day
      53                            .ref    _rtc_date
      54                            .ref    _rtc_month
      55                            .ref    _rtc_year
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56                            .ref    _year
      57                            .ref    _month
      58                            .ref    _day
      59                            .ref    _serial_number
      60                            .ref    _man_date
      61                    
      62                            .globl  _get_time
      63                            .globl  _set_time
      64                            .globl  _aquire_time
      65                            .globl  SNDPROTOPROMPT
      66                            .globl  SNDRELEASEPROMPT
      67                            .globl  SNDTIMEOUT
      68                    
      69                    
      70              0038  SCRXFUDGE       equ     56
      71                    **************************************************************************
      72                    *                                                                        *
      73                    *       DEFS AND REFS                                                    *
      74                    *                                                                        *
      75                    **************************************************************************
      76                            .ref    fudge_switches, fudge_switches_diag, CPU_RET
      77                            .REF    SNDSND,INTIO,WARMSET,GET_AUD,STORE_AUDIT,WDOGDIS
      78                            .ref    AUD1, GAMSTATE, KILL_AUD, PCMOSRET
      79                            .ref    CLR_AUD, FAC_SET, CMOS_VAL, ROM_NAME
      80                    
      81                            .DEF    POWERTST, DIAGCPUTEST, POWERCMOS
      82                            .def    SWITCHTEST, SWSET1, SWSET2
      83                            .DEF    CROSS_H,COL_BARS,BURN_IN,STRNEW1
      84                    
      85                            .DEF    CIRCLE,HVLINE,STRING,RECTANGLE,POINT,DSCRCLR,INITCOLR
      86                            .DEF    READ_DIP
      87                    
      88                            .REF    SNDTST
      89                            .REF    SYSCOPY
      90                    *SYMBOLS IN MENU.ASM
      91                            .REF    USA_1, USA_2, USA_3, USA_4, USA_ELECTITLE
      92                            .REF    GERMAN_1, GERMAN_2, GERMAN_3, GERMAN_4, GERMAN_ELECTITLE
      93                            .REF    FRENCH_1, FRENCH_2, FRENCH_3, FRENCH_4, FRENCH_ELECTITLE
      94                            .REF    DIPCOINTAB
      95                    
      96                    
      97                            .REF    GET_ADJ, GET_CSPT, NO_CREDS
      98                            .REF    PUT_ADJ, CRED_P, HEXTOASC, F_ADC_S, SET_COIN_ADJ
      99                            .REF    init_all, mainlp, DIAG_COLORS
     100                    
     101                    *
     102                    *DIAGNOSTIC SOUND EQUATES
     103                    *
     104              0203  CMOS_ERROR_SND  .EQU    0203h
     105              0203  CPU_ERROR_SND   .EQU    0203h
     106              00c8  DIP_SND         .EQU    0c8h
     107              00c8  SWITCH_SND      .EQU    0c8h
     108                    
     109 00000000                   .BSS    SWSET1,32               ; FOR SWITCH TEST
     110 00000020                   .BSS    SWSET2,32
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

     111                    
     112 00000040                   .BSS    DIPVAL,16
     113 00000050                   .BSS    DIP1ST,16
     114                    
     115 00000060                   .BSS    FORCEDIP,16             ; FOR FORCING THE USE OF THE DIP
     116 00000070                   .BSS    CERRORS,32
     117 00000090                   .BSS    CPASSES,32
     118 000000b0                   .BSS    SCHANGE,16
     119 000000c0                   .bss    _snd_status,32
     120 000000e0                   .bss    _b6_save,32             ; Temporary register fer me
     121 00000100                   .bss    _temporary,32           ; Another temp fer me
     122 00000120                   .bss    _snd_diag_code,16       ; Temporary storage for sound diag code
     123 00000000                   BSSX    _snd_chip_count,16      ; Temporary register fer me
     124 00000140                   .bss    _pic_raw,128            ; Stuff fer the PIC
     125 000001c0                   .bss    _pic_temp,64
     126                    
     127                    **************************************************************************
     128                    *                                                                        *
     129                    *       USEFUL MACROS                                                    *
     130                    *                                                                        *
     131                    **************************************************************************
     132                    *
     133                    *       TIMED PAUSE
     134                    *
     135                    PAUSE   .macro TIME, REG
     136                            MOVI    :TIME:,:REG:,L
     137                    LABEL?  NOP
     138                            DSJS    :REG:,LABEL?
     139                            .endm
     140                    
     141                    *BIT SET
     142                    *       BSET    BIT# 0-31(KONSTANT OR REGISTER),REGISTER TO SET BIT IN
     143                    * NOTE: A14 IS DESTROYED, 'A' FILE REGISTERS ONLY
     144                    
     145                    BSET    .macro  P1,R1
     146                            MOVK    1,A14
     147                            SLL     :P1:,A14
     148                            OR      A14,:R1:
     149                            .endm
     150                    
     151                    
     152                    *
     153                    *RJST - RIGHT JUSTIFIES BITS IN A LONG WORD, I.E. RIGHTMOST BIT
     154                    *       TO BIT POSITION 0
     155                    *       RJST    REG
     156                    RJST    .macro  REG
     157                            MOVE    :REG:,:REG:
     158                            JRZ     MX?
     159                    MLP?
     160                            SRL     1,:REG:
     161                            JRNC    MLP?
     162                            SLL     1,:REG:
     163                            ADDK    1,:REG:
     164                    MX?
     165                            .endm
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     166                    
     167                    
     168                    BUT_MAC .macro  X,Y,RADIUS,COLOR,MASK,SHIFT,EXTEND
     169                            .WORD   :X:     
     170                            .WORD   :Y:
     171                            .WORD   :RADIUS:
     172                            .LONG   :COLOR:
     173                            .LONG   :MASK:
     174                            .WORD   :SHIFT:
     175                            .WORD   :EXTEND:
     176                            .endm
     177                    
     178                    STR_MAC .macro  X,Y,STRING,COLOR,DIR
     179                            .WORD   :X:     
     180                            .WORD   :Y:
     181                            .LONG   :STRING:
     182                            .WORD   :COLOR:
     183                            .WORD   :DIR:
     184                            .endm
     185                    
     186                    VECMAC  .macro  COLOR,X1,Y1,X2,Y2
     187                            .WORD   :COLOR:
     188                            .WORD   :X1:
     189                            .WORD   :Y1:
     190                            .WORD   :X2:
     191                            .WORD   :Y2:
     192                            .endm
     193                    
     194                    DOTMAC  .macro  COLOR,X,Y
     195                            .WORD   :COLOR:
     196                            .WORD   :X:
     197                            .WORD   :Y:
     198                            .endm
     199                    
     200                    RECTMAC .macro  COLOR,X,Y,W,H
     201                            .WORD   :W:
     202                            .WORD   :H:
     203                            .WORD   :X:
     204                            .WORD   :Y:
     205                            .WORD   :COLOR:
     206                            .endm
     207                    
     208                    CHIPMAC .macro  NUM,X1,Y1,X2,Y2,X3,Y3,STRING,DIR,X4,Y4,STUFFED
     209                            .WORD   :NUM:
     210                            .WORD   :X1:
     211                            .WORD   :Y1:
     212                            .WORD   :X2:
     213                            .WORD   :Y2:
     214                            .WORD   :X3:
     215                            .WORD   :Y3:
     216                            .LONG   :STRING:
     217                            .WORD   :DIR:
     218                            .WORD   :X4:
     219                            .WORD   :Y4:
     220                            .WORD   :STUFFED:
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     221                            .endm
     222                    
     223              0000  CMNUM           EQU     0
     224              0010  CMLOC           EQU     CMNUM+16
     225              0010  CMXLOC          EQU     CMLOC
     226              0020  CMYLOC          EQU     CMLOC+16
     227              0030  CMSIZE          EQU     CMLOC+32
     228              0030  CMXSIZE         EQU     CMSIZE
     229              0040  CMYSIZE         EQU     CMSIZE+16
     230              0050  CMOFFSET        EQU     CMSIZE+32
     231              0070  CMSTRING        EQU     CMOFFSET+32
     232              0090  CMDIR           EQU     CMSTRING+32
     233              00a0  CMPINLOC        EQU     CMDIR+16
     234              00c0  CMSTUFFED       EQU     CMPINLOC+32
     235              00d0  CMEND           EQU     CMSTUFFED+16
     236                            
     237                    
     238                    **************************************************************************
     239                    *                                                                        *
     240                    * RAM_CHIP: MACRO DEFINES A RAM CHIP RECORD.                             *
     241                    *                                                                        *
     242                    *       CHIP_NO    -- CHIP NUMBER                                        *
     243                    *       WIDTH      -- CHIP CELL SIZE IN BITS (MUST BE > 0)               *
     244                    *       INTERLEAVE -- DISTANCE BETWEEN ADJACENT CELLS ON CHIP (IN BITS)  *
     245                    *       START_ADDR -- ADDRESS OF FIRST CELL ON CHIP                      *
     246                    *       END_ADDR   -- ADDRESS OF LAST CELL ON CHIP                       *
     247                    *                                                                        *
     248                    **************************************************************************
     249                    
     250                    RAM_CHIP .macro TAB_LINK,CHIP_NO, WIDTH, INTERLEAVE, START_ADDR, END_ADDR
     251                    
     252                            .WORD   :WIDTH:
     253                            .WORD   :INTERLEAVE:
     254                            .WORD   :CHIP_NO:
     255                            .LONG   :START_ADDR:
     256                            .LONG   :END_ADDR:
     257                            .LONG   :TAB_LINK:
     258                            .endm
     259                    
     260              0000  RAM_WDTH EQU    000H                ; OFFSETS INTO RAM CHIP RECORD
     261              0010  RAM_ITLV EQU    010H
     262              0020  RAM_NMBR EQU    020H
     263              0030  RAM_SADR EQU    030H
     264              0050  RAM_EADR EQU    050H
     265              0070  RAM_LINK        EQU     070H
     266              0090  RAM_SIZE EQU    090H
     267                    
     268              0000  ROM_CKSM        EQU     000H
     269              0010  ROM_WDTH        EQU     010H                ; OFFSETS INTO ROM CHIP RECORD
     270              0020  ROM_ITLV        EQU     020H
     271              0030  ROM_NMBR        EQU     030H
     272              0040  ROM_SADR        EQU     040H
     273              0060  ROM_EADR        EQU     060H
     274              0080  ROM_LINK        EQU     080H
     275              00a0  ROM_SIZE        EQU     0A0H
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     276                    
     277                    ****************************************************************************
     278                    * ROM_CHIP: MACRO DEFINES A ROM CHIP RECORD.                                *
     279                    *                                                                           *
     280                    *        CHIP_NO    -- CHIP NUMBER                                          *
     281                    *        WIDTH      -- CHIP CELL SIZE IN BITS (MUST BE > 0)                 *
     282                    *        INTERLEAVE -- DISTANCE BETWEEN ADJACENT CELLS ON CHIP (IN BITS)    *
     283                    *        START_ADDR -- ADDRESS OF FIRST CELL ON CHIP                        *
     284                    *        END_ADDR   -- ADDRESS OF LAST CELL ON CHIP                         *
     285                    *        CHECK_SUM  -- DATAIO CHECK SUM FOR CHIP                            *
     286                    ****************************************************************************
     287                    
     288                    ROM_CHIP .macro TAB_LINK,CHIP_NO, WIDTH, INTERLEAVE, START_ADDR, END_ADDR, CHECK_SUM
     289                    
     290                            .WORD   :CHECK_SUM:
     291                            .WORD  :WIDTH:
     292                            .WORD  :INTERLEAVE:
     293                            .WORD  :CHIP_NO:
     294                            .LONG  :START_ADDR:
     295                            .LONG  :END_ADDR:
     296                            .LONG   :TAB_LINK:
     297                    
     298                             .endm
     299                    
     300                    
     301          5a5a5a5a  RANDOM_SEED EQU 5A5A5A5Ah              ; RAM TESTS: PSEUDO-RANDOM SEQUENCE
     302              001f  ZERO_EXTEND EQU 1Fh                    ; PARAMETERS
     303              0020  SIGN_EXTEND EQU 20h
     304              ffdc  PAL_SELECT  EQU 0FFDCH                 ; ENABLE VIDEO PALETTE MAP ACCESS
     305                    
     306                    
     307 00000000                   .text
     308 00000000                   .even
     309                    
     310                    
     311                    **************************************************************************
     312                    *                                                                        *
     313                    *       POWERTST                                                         *
     314                    *                                                                        *
     315                    *       POWERUP SELF TEST ROUTINES                                       *
     316                    *                                                                        *
     317                    *       ENTRY                                                            *
     318                    *               NOTHING                                                  *
     319                    *                                                                        *
     320                    *       EXIT                                                             *
     321                    *               NOTHING                                                  *
     322                    *                                                                        *
     323                    **************************************************************************
     324 00000000           POWERTST
     325 00000000     0360          dint
     326 00000010     0570          setf    16,1,0
     327 00000020     0740          setf    32,0,1
     328 00000030     09ef          MOVI    STCKST,SP,L
         00000040 013f73e0  
     329 00000060     07a0          move    @_watchdog_addr,a0,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

         00000070 00000000! 
     330 00000090     8000          move    a0,*a0
     331                    
     332                    ;       HALT DMA AND ENABLE CACHE
     333                    
     334 000000a0     57ce          clr     a14
     335 000000b0     058e          move    a14,@DMACTRL
         000000c0 01a00010  
     336 000000e0     058e          move    a14,@DMACTRL
         000000f0 01a00010  
     337                    
     338 00000110                   FCALL   INTIO,B6
     339                    
     340                    ;       DISABLE VIDEO PALETTE RAMS, AUTOERASE AND ERROR LED
     341                    
     342 00000150     09ed          MOVI    SYSCINIT,A13
         00000160 0000987f  
     343 00000180     058d          MOVE    A13,@SYSCTRL
         00000190 01b00000  
     344                    
     345 000001b0                   FCALL   CPUTEST,SP
     346 000001f0     c080          JAUC    WARMSET
         00000200 00000000! 
     347                    
     348                    
     349                    
     350                    ****************************************************************************
     351                    *                                                                          *
     352                    *  PIC SECURITY STUFF                                                      *
     353                    *                                                                          *
     354                    *  Security source for WWF-UNIT's PIC                                      *
     355                    *                                                                          *
     356                    *  Version 1.00                                                            *
     357                    *  Written by:   Michael J. Lynch                                          *
     358                    *  Copyright (c) 1995 by Williams Electronics Games Inc.                   *
     359                    *  All rights reserved                                                     *
     360                    *                                                                          *
     361                    *     TTTTT   OOO  PPPP         SSS   EEEEE   CCC   RRRR  EEEEE TTTTT      *
     362                    *       T    O   O P   P       S   S  E      C   C  R   R E       T        *
     363                    *       T    O   O P   P       S      E      C      R   R E       T        *
     364                    *       T    O   O PPPP         SSS   EEEE   C      RRRR  EEEE    T        *
     365                    *       T    O   O P               S  E      C      R R   E       T        *
     366                    *       T    O   O P           S   S  E      C   C  R  R  E       T        *
     367                    *       T     OOO  P            SSS   EEEEE   CCC   R   R EEEEE   T        *
     368                    *                                                                          *
     369                    *                                                                          *
     370                    *                    Company Confidential Information                      *
     371                    *                        NEED TO KNOW BASIS ONLY                           *
     372                    *                                                                          *
     373                    * USE OR DISCLOSURE STRICTLY PROHIBITED UNLESS APPROVED IN WRITING FROM    *
     374                    * WILLIAMS ELECTRONICS GAMES INC.                                          *
     375                    *                                                                          *
     376                    * Unapproved use or disclosure will result in severe torture!!!!!          *
     377                    *                                                                          *
     378                    ****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

     379                    
     380                    ; _pic_bin2bcd Converts a hex number in a7 to BCD and puts it in A3
     381 00000220           _pic_bin2bcd:
     382 00000220     5663          clr     a3
     383 00000230     09e0          movi    100000,a0
         00000240 000186a0  
     384 00000260           _bin2bcd_loop:
     385 00000260     2483          sll     4,a3
     386 00000270     4ce1          move    a7,a1
     387 00000280     5a01          divu    a0,a1
     388 00000290     5423          or      a1,a3
     389 000002a0     5e01          mpyu    a0,a1
     390 000002b0     4427          sub     a1,a7
     391 000002c0     4c01          move    a0,a1
     392 000002d0     1940          movk    10,a0
     393 000002e0     5a01          divu    a0,a1
     394 000002f0     4c20          move    a1,a0
     395 00000300     cbf5          jrnz    _bin2bcd_loop
     396 00000310                   FRET    b6
     397                    
     398                    ******************************************************************************
     399                    *                                                                            *
     400                    * _bcd2hex - Converts a 32 bit (8 digit) BCD Number to Hexidecimal           *
     401                    *                                                                            *
     402                    * ENTRY                                                                      *
     403                    *         A0 - BCD Number to be converted                                    *
     404                    *         B6 - Return Address                                                *
     405                    *                                                                            *
     406                    * EXIT                                                                       *
     407                    *         A2 - Converted Number (hex)                                        *
     408                    *                                                                            *
     409                    * USES                                                                       *
     410                    *         A1 - Multiplier                                                    *
     411                    *         A3 - Temporary                                                     *
     412                    *         A4 - Digit Counter                                                 *
     413                    *                                                                            *
     414                    * Written by:  Michael J. Lynch                                              *
     415                    *                                                                            *
     416                    ******************************************************************************
     417 00000320           _bcd2hex:
     418 00000320     5642          clr     a2              ; Start with 0
     419 00000330     1821          movk    1,a1            ; Starting Multiplier
     420 00000340     1904          movk    8,a4            ; Number of BCD digits to convert
     421 00000350           _b2h_loop:                      ; Main BCD to hex conversion loop
     422 00000350     4c03          move    a0,a3           ; Put BCD number in temporary register
     423 00000360     0b83          andi    0fh,a3          ; get rid of bits not interested in
         00000370 fffffff0  
     424 00000390     5e23          mpyu    a1,a3           ; multiply by current multiplier
     425 000003a0     4062          add     a3,a2           ; Accumulate into final register
     426 000003b0     2f80          srl     4,a0            ; Shift to next BCD digit
     427 000003c0     1943          movk    10,a3           ; Calculate next multiplier (mult = mult * 10)
     428 000003d0     5e61          mpyu    a3,a1           ; New Multiplier
     429 000003e0     3d44          dsjs    a4,_b2h_loop    ; Keep going until 8 BCD digits are done
     430 000003f0                   FRET    b6              ; return
     431                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     432 00000400           _read_pic_data:
     433 00000400     0548          setf    8,0
     434 00000410     0740          setf    32,0,1
     435 00000420     1a09          movk    16,a9           ; Number of bytes of data to read
     436 00000430     09e1          movi    _pic_raw,a1     ; address at which to store raw data from PIC
         00000440 00000140- 
     437 00000460     1a08          movk    010h,a8         ; Send Request Serial Number Data Command
     438 00000470     0588          move    a8,@PIC_COMMAND
         00000480 01600000  
     439 000004a0           _rp_data_loop:
     440 000004a0     0550          setf    16,0
     441 000004b0     5708          clr     a8
     442 000004c0     0588          move    a8,@PIC_COMMAND
         000004d0 01600000  
     443 000004f0     09e2          movi    1000000,a2      ; Wait for PIC to acknowledge 
         00000500 000f4240  
     444 00000520           _rp_ack_loop:
     445 00000520     4c42          move    a2,a2           ; Check for command timeout
     446 00000530     ca00          jrz     gn_bad          ; WOA PIC never acknowledged - ERROR!!!!
         00000540     010e  
     447 00000550     07a8          move    @_watchdog_addr,a8,L
         00000560 00000000! 
     448 00000580     8108          move    a8,*a8
     449 00000590     07a8          move    @_soundirq_addr,a8,L
         000005a0 00000000! 
     450 000005c0     8508          move    *a8,a8
     451 000005d0     0be2          subi    1,a2
         000005e0     fffe  
     452 000005f0     1e68          btst    12,a8           ; Data available ?
     453 00000600     cbf1          jrnz    _rp_ack_loop    ; NO
     454 00000610     0548          setf    8,0             ; YES
     455 00000620     05a0          move    @PIC_DATA,a0    ; read data
         00000630 01600000  
     456 00000650     9001          move    a0,*a1+         ; write to temp holding area
     457 00000660     1a08          movk    010h,a8         ; Acknowledge reciept of data
     458 00000670     0550          setf    16,0
     459 00000680     0588          move    a8,@PIC_COMMAND
         00000690 01600000  
     460 000006b0     09e2          movi    1000000,a2      ; Wait for PIC n acknowlegde
         000006c0 000f4240  
     461 000006e0           _rp_nack_loop:
     462 000006e0     4c42          move    a2,a2
     463 000006f0     ca00          jrz     gn_bad
         00000700     00f2  
     464 00000710     07a8          move    @_watchdog_addr,a8,L
         00000720 00000000! 
     465 00000740     8108          move    a8,*a8
     466 00000750     07a8          move    @_soundirq_addr,a8,L
         00000760 00000000! 
     467 00000780     8508          move    *a8,a8
     468 00000790     0be2          subi    1,a2
         000007a0     fffe  
     469 000007b0     1e68          btst    12,a8
     470 000007c0     caf1          jrz     _rp_nack_loop
     471 000007d0     0d89          dsj     a9,_rp_data_loop
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

         000007e0     ffcb  
     472 000007f0     5684          clr     a4              ; Holding Register for X
     473 00000800     56a5          clr     a5              ; Holding Register for Y
     474 00000810     0548          setf    8,0
     475 00000820     09ea          movi    _pic_raw,a10
         00000830 00000140- 
     476 00000850     0b0a          addi    060h,a10
         00000860     0060  
     477 00000870     9544          move    *a10+,a4        ; Get X
     478 00000880     8545          move    *a10,a5         ; Get Y
     479 00000890     0558          setf    24,0
     480 000008a0     56e7          clr     a7              ; Calculate B-3-5-9
     481 000008b0     09ea          movi    _pic_raw,a10
         000008c0 00000140- 
     482 000008e0     8547          move    *a10,a7
     483 000008f0     0be7          subi    15732,a7
         00000900     c28b  
     484 00000910     09c0          movi    581,a0
         00000920     0245  
     485 00000930     5a07          divu    a0,a7
     486 00000940     4487          sub     a4,a7           ; B359 (binary)
     487 00000950                   FCALL   _pic_bin2bcd,b6 ; B359 (bcd) a1 = B359
     488 00000990     0544          setf    4,0
     489 000009a0     2f83          srl     4,a3
     490 000009b0     4c60          move    a3,a0
     491 000009c0     0b80          andi    0fh,a0
         000009d0 fffffff0  
     492 000009f0     09ea          movi    _pic_temp,a10
         00000a00 000001c0- 
     493 00000a20     0b0a          addi    014h,a10
         00000a30     0014  
     494 00000a40     800a          move    a0,*a10         ; Stuff the 5
     495 00000a50     2f83          srl     4,a3
     496 00000a60     4c60          move    a3,a0
     497 00000a70     0b80          andi    0fh,a0
         00000a80 fffffff0  
     498 00000aa0     09ea          movi    _pic_temp,a10
         00000ab0 000001c0- 
     499 00000ad0     118a          addk    0ch,a10
     500 00000ae0     800a          move    a0,*a10         ; Stuff the 3
     501                    
     502                    
     503 00000af0     09ea          movi    _pic_raw,a10
         00000b00 00000140- 
     504 00000b20     0b0a          addi    018h,a10
         00000b30     0018  
     505 00000b40     8747          move    *a10,a7,1       ; Calculate 2-A-0-8-6
     506 00000b50     0d07          subi    7463513,a7
         00000b60 ff8e1da6  
     507 00000b80     09c0          movi    4223,a0
         00000b90     107f  
     508 00000ba0     5a07          divu    a0,a7
     509 00000bb0     44a7          sub     a5,a7
     510 00000bc0     44a7          sub     a5,a7
     511 00000bd0     4487          sub     a4,a7           ; 2A086 (binary)
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     512 00000be0                   FCALL   _pic_bin2bcd,b6 ; 2A086 (bcd)
     513 00000c20     4c60          move    a3,a0
     514 00000c30     0b80          andi    0fh,a0
         00000c40 fffffff0  
     515 00000c60     09ea          movi    _pic_temp,a10
         00000c70 000001c0- 
     516 00000c90     130a          addk    018h,a10
     517 00000ca0     800a          move    a0,*a10         ; Stuff the 6
     518 00000cb0     2f83          srl     4,a3
     519 00000cc0     4c60          move    a3,a0
     520 00000cd0     0b80          andi    0fh,a0
         00000ce0 fffffff0  
     521 00000d00     09ea          movi    _pic_temp,a10
         00000d10 000001c0- 
     522 00000d30     0b0a          addi    020h,a10
         00000d40     0020  
     523 00000d50     800a          move    a0,*a10         ; Stuff the 8
     524 00000d60     2f83          srl     4,a3
     525 00000d70     4c60          move    a3,a0
     526 00000d80     0b80          andi    0fh,a0
         00000d90 fffffff0  
     527 00000db0     09ea          movi    _pic_temp,a10
         00000dc0 000001c0- 
     528 00000de0     800a          move    a0,*a10         ; Stuff the 0
     529 00000df0     2f03          srl     8,a3
     530 00000e00     4c60          move    a3,a0
     531 00000e10     0b80          andi    0fh,a0
         00000e20 fffffff0  
     532 00000e40     09ea          movi    _pic_temp,a10
         00000e50 000001c0- 
     533 00000e70     110a          addk    8,a10
     534 00000e80     800a          move    a0,*a10         ; Stuff the 2
     535                    
     536                    
     537 00000e90     0558          setf    24,0            ; Calcuate 1-7-4
     538 00000ea0     09ca          movi    038h,a10
         00000eb0     0038  
     539 00000ec0     0b2a          addi    _pic_raw,a10
         00000ed0 00000140- 
     540 00000ef0     8547          move    *a10,a7
     541 00000f00     0d07          subi    127984,a7
         00000f10 fffe0c0f  
     542 00000f30     09c0          movi    7117,a0
         00000f40     1bcd  
     543 00000f50     5a07          divu    a0,a7
     544 00000f60     44a7          sub     a5,a7
     545 00000f70     44a7          sub     a5,a7
     546 00000f80     44a7          sub     a5,a7
     547 00000f90     44a7          sub     a5,a7
     548 00000fa0     44a7          sub     a5,a7           ; 174 (binary)
     549 00000fb0                   FCALL   _pic_bin2bcd,b6 ; 174 (bcd) a1 = 174
     550 00000ff0     0544          setf    4,0
     551 00001000     4c60          move    a3,a0
     552 00001010     0b80          andi    0fh,a0
         00001020 fffffff0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     553 00001040     09ea          movi    _pic_temp,a10
         00001050 000001c0- 
     554 00001070     120a          addk    010h,a10
     555 00001080     800a          move    a0,*a10         ; Stuff the 4
     556 00001090     2f83          srl     4,a3
     557 000010a0     4c60          move    a3,a0
     558 000010b0     0b80          andi    0fh,a0
         000010c0 fffffff0  
     559 000010e0     09ea          movi    _pic_temp,a10
         000010f0 000001c0- 
     560 00001110     138a          addk    01ch,a10
     561 00001120     800a          move    a0,*a10         ; Stuff the 7
     562 00001130     2f83          srl     4,a3
     563 00001140     4c60          move    a3,a0
     564 00001150     0b80          andi    0fh,a0
         00001160 fffffff0  
     565 00001180     09ea          movi    _pic_temp,a10
         00001190 000001c0- 
     566 000011b0     108a          addk    4,a10
     567 000011c0     800a          move    a0,*a10         ; Stuff the 1
     568                    
     569 000011d0     0550          setf    16,0
     570 000011e0     09ca          movi    050h,a10
         000011f0     0050  
     571 00001200     0b2a          addi    _pic_raw,a10
         00001210 00000140- 
     572 00001230     8540          move    *a10,a0         ; This is a pointer to the date code
     573 00001240     8541          move    *a10,a1
     574 00001250     2501          sll     8,a1
     575 00001260     2f00          srl     8,a0
     576 00001270     0b80          andi    0ffh,a0
         00001280 ffffff00  
     577 000012a0     0b81          andi    0ff00h,a1
         000012b0 ffff00ff  
     578 000012d0     5420          or      a1,a0
     579 000012e0     0780          move    a0,@_man_date,L
         000012f0 00000000! 
     580                    
     581 00001310     0544          setf    4,0
     582 00001320     09ea          movi    _pic_temp,a10
         00001330 000001c0- 
     583 00001350     118a          addk    0ch,a10
     584 00001360     9540          move    *a10+,a0        ; Most Significant Digit (serial number)
     585 00001370     2480          sll     4,a0
     586 00001380     9541          move    *a10+,a1
     587 00001390     5420          or      a1,a0
     588 000013a0     2480          sll     4,a0
     589 000013b0     9541          move    *a10+,a1
     590 000013c0     5420          or      a1,a0
     591 000013d0     2480          sll     4,a0
     592 000013e0     9541          move    *a10+,a1
     593 000013f0     5420          or      a1,a0
     594 00001400     2480          sll     4,a0
     595 00001410     9541          move    *a10+,a1
     596 00001420     5420          or      a1,a0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

     597 00001430     2480          sll     4,a0
     598 00001440     9541          move    *a10+,a1        ; Least Significant Digit (serial number)
     599 00001450     5420          or      a1,a0
     600 00001460                   FCALL   _bcd2hex,b6     ; Convert to hex (a2 = serial # hex)
     601 000014a0     0782          move    a2,@_serial_number,L
         000014b0 00000000! 
     602                            
     603 000014d0     0544          setf    4,0
     604 000014e0     09ea          movi    _pic_temp,a10
         000014f0 000001c0- 
     605 00001510     9540          move    *a10+,a0        ; Most Significant Digit (game number)
     606 00001520     2480          sll     4,a0
     607 00001530     9541          move    *a10+,a1
     608 00001540     5420          or      a1,a0
     609 00001550     2480          sll     4,a0
     610 00001560     9541          move    *a10+,a1        ; Least Significant Digit (game number)
     611 00001570     5420          or      a1,a0
     612 00001580                   FCALL   _bcd2hex,b6     ; Convert to hex
     613                    
     614 000015c0     5621          clr     a1
     615 000015d0     0b42          cmpi    528,a2          ; Development PIC Game Number
         000015e0     fdef  
     616 000015f0     ca15          jrz     gn_good
     617 00001600     0b42          cmpi    430,a2          ; Real Game Number (WrestleMania)
         00001610     fe51  
     618 00001620     ca12          jrz     gn_good
     619 00001630           gn_bad:
     620 00001630     09e0          movi    SEC_MESS_2,a0   ; Level 2 Security Check failure
         00001640 00014960' 
     621 00001660                   FCALL   STRINGCENTER,b6
     622 000016a0     0b21          addi    [220,0],a1
         000016b0 00dc0000  
     623 000016d0     5642          clr     a2
     624 000016e0     09c3          movi    COLOR_RED,a3
         000016f0     0303  
     625 00001700                   FCALL   STRING,b6
     626 00001740                   LOCKUP
     627 00001750           gn_good:
     628 00001750     0548          setf    8,0             ; Stomp on memory used to decode PIC
     629 00001760     5600          clr     a0
     630 00001770     09c1          movi    16,a1
         00001780     0010  
     631 00001790     09e2          movi    _pic_raw,a2
         000017a0 00000140- 
     632 000017c0           _stomp_temp:
     633 000017c0     9002          move    a0,*a2+
     634 000017d0     3c41          dsjs    a1,_stomp_temp
     635 000017e0     09c1          movi    8,a1
         000017f0     0008  
     636 00001800     09e2          movi    _pic_temp,a2
         00001810 000001c0- 
     637 00001830           _stomp_temp1:
     638 00001830     9002          move    a0,*a2+
     639 00001840     3c41          dsjs    a1,_stomp_temp1
     640 00001850     0570          setf    16,1,0                  ;Field0 = Word sign extend
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

     641 00001860     0740          setf    32,0,1                  ;Field1 = Long word
     642 00001870     0960          rets
     643                    
     644                    
     645                    **************************************************************************
     646                    *                                                                                            *
     647                    *       POWERCMOS                                                                            *
     648                    *                                                                                            *
     649                    *       CHECK THE CMOS AND DO A LOT OF OTHER STUFF -- SHOW THE       *
     650                    *       POWER UP MESSAGES                                                                    *
     651                    *                                                                                            *
     652                    *       ENTRY   NOTHING                                                                      *
     653                    *       EXIT    NOTHING                                                                      *
     654                    *                                                                                            *
     655                    **************************************************************************
     656 00001880           POWERCMOS:      
     657 00001880     0360          DINT
     658 00001890     09e1          MOVI    SYSCINIT,A1
         000018a0 0000987f  
     659 000018c0     0581          MOVE    A1,@SYSCTRL,W
         000018d0 01b00000  
     660                    
     661 000018f0     0d5f          CALLA   WDOGDIS                 ; GET RID OF WATCH DOG
         00001900 00000000! 
     662                    
     663 00001920     57ad          CLR     A13                     ; USED TO DECIDE WHETHER PAUSE OR NOT
     664 00001930     058d          MOVE    A13,@DMACTRL,W
         00001940 01a00010  
     665 00001960     058d          MOVE    A13,@DMACTRL,W
         00001970 01a00010  
     666 00001990                   FCALL   INITCOLR,B5             ; FIX UP THE COLORS
     667 000019d0                   FCALL   INTIO,B6
     668 00001a10                   FCALL   DSCRCLR,B6              ; MAKE SURE OF SCREEN
     669 00001a50     09e0          MOVI    ROM_NAME,A0
         00001a60 00000000! 
     670 00001a80                   FCALL   STRINGCENTER,B6         ; GET WIDTH OF STRING
     671 00001ac0     0b21          ADDI    [30,0],A1
         00001ad0 001e0000  
     672 00001af0     5642          CLR     A2
     673 00001b00     09c3          MOVI    COLOR_YELLOW,A3
         00001b10     0505  
     674 00001b20                   FCALL   STRING,B6
     675                    
     676 00001b60     0d3f          callr   _read_pic_data
         00001b70     fe88  
     677 00001b80     09cd          movi    05018h,a13              ; Palette 128 match color (BLACK)
         00001b90     5018  
     678 00001ba0     058d          move    a13,@VMUX_BREG1,W
         00001bb0 01830000  
     679 00001bd0     09ed          movi    08080h,a13              ; Set Palette # to 128
         00001be0 00008080  
     680 00001c00     058d          move    a13,@DMACMAP,W
         00001c10 01a00080  
     681 00001c30     09e0          movi    SEC_MESS_1,a0           ; Print the message (won't show up)
         00001c40 000148a0' 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     682 00001c60                   FCALL   STRINGCENTER,b6         ; Note - only shows up on pirate
     683 00001ca0     0b21          addi    [210,0],a1              ; hardware
         00001cb0 00d20000  
     684 00001cd0     5642          clr     a2
     685 00001ce0     09c3          movi    COLOR_RED,a3
         00001cf0     0303  
     686 00001d00                   FCALL   STRING,b6
     687 00001d40     57ad          clr     a13                     ; Set palette # back to 0
     688 00001d50     058d          move    a13,@DMACMAP,W
         00001d60 01a00080  
     689                            
     690 00001d80     09e0          movi    SNDREVPROMPT,a0         ; Sound Revision Prompt
         00001d90 000038d0' 
     691 00001db0                   FCALL   STRINGCENTER,b6
     692 00001df0     0b21          addi    [120,0],a1
         00001e00 00780000  
     693 00001e20     5642          clr     a2
     694 00001e30     09c3          movi    COLOR_PURPLE,a3
         00001e40     0d0d  
     695 00001e50                   FCALL   STRING,b6
     696 00001e90     07a0          move    @_watchdog_addr,a0,L
         00001ea0 00000000! 
     697 00001ec0     8000          move    a0,*a0,W
     698 00001ed0     07a0          move    @_coin_counter_addr,a0,L
         00001ee0 00000000! 
     699 00001f00     09c1          movi    030h,a1                         ; Yank down the reset
         00001f10     0030  
     700 00001f20     8020          move    a1,*a0,W
     701 00001f30     09c1          movi    10000,a1                        ; Hold it fer a while
         00001f40     2710  
     702 00001f50     3c21          dsjs    a1,$
     703 00001f60     09c1          movi    020h,a1                         ; Let it go
         00001f70     0020  
     704 00001f80     8020          move    a1,*a0,W
     705 00001f90     09c1          movi    10000,a1
         00001fa0     2710  
     706 00001fb0     3c21          dsjs    a1,$
     707 00001fc0     07a0          move    @_sound_addr,a0,L               ; Bypass the diags
         00001fd0 00000000! 
     708 00001ff0     8c00          movb    a0,*a0
     709 00002000     07a0          move    @_watchdog_addr,a0,L            ; Kill the dog
         00002010 00000000! 
     710 00002030     8000          move    a0,*a0,W
     711 00002040     09e1          movi    500000,a1                       ; Wait fer a while
         00002050 0007a120  
     712 00002070           _swait_lp
     713 00002070     07a0          move    @_watchdog_addr,a0,L
         00002080 00000000! 
     714 000020a0     8400          move    *a0,a0,W
     715 000020b0     3ca1          dsjs    a1,_swait_lp
     716 000020c0     5663          clr     a3                      ; Turn on the sounds
     717 000020d0     0583          move    a3,@SOUNDSUP,W
         000020e0 00000000! 
     718 00002100     09c3          movi    999,a3                  ; Send revision request sound call
         00002110     03e7  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     719 00002120     0d5f          calla   SNDSND
         00002130 00000000! 
     720 00002150     09e2          movi    1000000,a2
         00002160 000f4240  
     721 00002180           _sndrev_loop
     722 00002180     07a0          move    @_watchdog_addr,a0,L
         00002190 00000000! 
     723 000021b0     8c00          movb    a0,*a0
     724 000021c0     07a0          move    @_soundirq_addr,a0,L    ; Wait fer a response
         000021d0 00000000! 
     725 000021f0     8401          move    *a0,a1,W
     726 00002200     1ea1          btst    B_SDAV,a1               ; Got a response ?
     727 00002210     ca13          jrz     _snd_response           ; BR = yes
     728 00002220     3d62          dsjs    a2,_sndrev_loop
     729 00002230           _snd_timeout
     730 00002230     09e0          movi    SNDTIMEOUT,a0           ; If we get here we never got a response
         00002240 00003a10' 
     731 00002260                   FCALL   STRINGCENTER,b6         ; Tell operator about it
     732 000022a0     0b21          addi    [135,0],a1
         000022b0 00870000  
     733 000022d0     5642          clr     a2
     734 000022e0     09c3          movi    COLOR_RED,a3
         000022f0     0303  
     735 00002300                   FCALL   STRING,b6
     736 00002340     c03c          jruc    _sndrev_done            ; Then we be done
     737 00002350           _snd_response
     738 00002350     07a0          move    @_sound_addr,a0,L       ; Get sound revision data
         00002360 00000000! 
     739 00002380     8400          move    *a0,a0,W
     740 00002390     0580          move    a0,@_snd_chip_count,W   ; Put up sound revision
         000023a0 00000130- 
     741 000023c0     4c01          move    a0,a1
     742 000023d0     0b81          andi    0ffh,a1
         000023e0 ffffff00  
     743 00002400     0b41          cmpi    0ffh,a1
         00002410     ff00  
     744 00002420     cae0          jrz     _snd_timeout
     745 00002430     0b81          andi    0f0h,a1
         00002440 ffffff0f  
     746 00002460     0b41          cmpi    0d0h,a1
         00002470     ff2f  
     747 00002480     ca04          jrz     _proto_version
     748 00002490     09e4          movi    SNDRELEASEPROMPT,a4
         000024a0 000039c0' 
     749 000024c0     c003          jruc    _do_snd_version
     750 000024d0           _proto_version
     751 000024d0     09e4          movi    SNDPROTOPROMPT,a4
         000024e0 00003980' 
     752 00002500           _do_snd_version
     753 00002500     0d5f          calla   copy_rom_string
         00002510 00000000! 
     754 00002530     05a0          move    @_snd_chip_count,a0,W
         00002540 00000130- 
     755 00002560     0b80          andi    0fh,a0
         00002570 fffffff0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

     756 00002590     19e1          movk    15,a1
     757 000025a0     0d5f          calla   dec_to_asc
         000025b0 00000000! 
     758 000025d0     0d5f          calla   concat_string
         000025e0 00000000! 
     759 00002600     09e0          movi    message_buffer,a0
         00002610 00000000! 
     760 00002630                   FCALL   STRINGCENTER,b6
     761 00002670     0b21          addi    [135,0],a1
         00002680 00870000  
     762 000026a0     5642          clr     a2
     763 000026b0     09c3          movi    COLOR_WHITE,a3
         000026c0     0202  
     764 000026d0                   FCALL   STRING,b6
     765 00002710           _sndrev_done
     766                    
     767 00002710     09e0          movi    GAMESNPROMPT,a0         ; Put up Game Serial number
         00002720 00003b50' 
     768 00002740                   FCALL   STRINGCENTER,b6
     769 00002780     0b21          addi    [160,0],a1
         00002790 00a00000  
     770 000027b0     5642          clr     a2
     771 000027c0     09c3          movi    COLOR_PURPLE,a3
         000027d0     0d0d  
     772 000027e0                   FCALL   STRING,b6
     773 00002820     07a0          move    @_serial_number,a0,L    ; Serial number put here by _get_serial_number
         00002830 00000000! 
     774 00002850     09e1          movi    1000000,a1
         00002860 000f4240  
     775 00002880     0d5f          calla   dec_to_asc
         00002890 00000000! 
     776 000028b0     0d5f          calla   copy_string
         000028c0 00000000! 
     777 000028e0     09e0          movi    message_buffer,a0
         000028f0 00000000! 
     778 00002910                   FCALL   STRINGCENTER,b6
     779 00002950     0b21          addi    [175,0],a1
         00002960 00af0000  
     780 00002980     5642          clr     a2
     781 00002990     09c3          movi    COLOR_WHITE,a3
         000029a0     0202  
     782 000029b0                   FCALL   STRING,b6
     783                    
     784 000029f0     0d5f          CALLA   CMOS_VAL                ; CHECKSUM AUDITS/ADJUSTMENTS
         00002a00 00000000! 
     785 00002a20     ca41          JREQ    CMOSOK
     786                    *
     787                    * BAD CHECKSUM ON POWERUP ----> FACTORY SET
     788                    *
     789                    ;       CALLA   RES_ALL                 ;ALL TIME TABLE
     790 00002a30     5600          clr     a0                      ;Full
     791 00002a40     0d5f          CALLA   FAC_SET
         00002a50 00000000! 
     792 00002a70     0d5f          CALLA   CLR_AUD
         00002a80 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

     793                    
     794 00002aa0     182d          MOVK    1,A13                   ; FLAG ERROR
     795 00002ab0     0d5f          CALLA   CMOS_VAL                ; TRY AGAIN
         00002ac0 00000000! 
     796 00002ae0     ca23          JREQ    CMOSB1                  ; BR = OK WE'RE IN
     797                    
     798 00002af0     09e0          MOVI    CMOS_BAD,A0
         00002b00 000040e0' 
     799 00002b20                   FCALL   STRINGCENTER,B6
     800 00002b60     0b21          ADDI    [50,0],A1
         00002b70 00320000  
     801 00002b90     5642          CLR     A2
     802 00002ba0     09c3          MOVI    COLOR_RED,A3
         00002bb0     0303  
     803 00002bc0                   FCALL   STRING,B6
     804 00002c00     09e0          MOVI    CMOS_UNFAC,A0
         00002c10 00004170' 
     805 00002c30                   FCALL   STRINGCENTER,B6
     806 00002c70     0b21          ADDI    [65,0],A1
         00002c80 00410000  
     807 00002ca0     5642          CLR     A2
     808 00002cb0     09c3          MOVI    COLOR_RED,A3
         00002cc0     0303  
     809 00002cd0                   FCALL   STRING,B6
     810 00002d10     c023          JRUC    CMOS1
     811 00002d20           CMOSB1
     812 00002d20     09e0          MOVI    CMOS_FACRES,A0
         00002d30 00003f90' 
     813 00002d50                   FCALL   STRINGCENTER,B6
     814 00002d90     0b21          ADDI    [50,0],A1
         00002da0 00320000  
     815 00002dc0     5642          CLR     A2
     816 00002dd0     09c3          MOVI    COLOR_RED,A3
         00002de0     0303  
     817 00002df0                   FCALL   STRING,B6
     818 00002e30     c011          JRUC    CMOS1
     819 00002e40           CMOSOK
     820 00002e40     09e0          MOVI    CMOS_OK,A0
         00002e50 00004290' 
     821 00002e70                   FCALL   STRINGCENTER,B6
     822 00002eb0     0b21          ADDI    [50,0],A1
         00002ec0 00320000  
     823 00002ee0     5642          CLR     A2
     824 00002ef0     09c3          MOVI    COLOR_GREEN,A3
         00002f00     0606  
     825 00002f10                   FCALL   STRING,B6
     826                    
     827 00002f50           CMOS1
     828 00002f50     0d5f          CALLA   CRED_P                  ;CHECK OUT CREDITS, THIS WILL CLEAR
         00002f60 00000000! 
     829                                                            ;IF NECESSARY.  THANX LINKY!
     830                    
     831 00002f80     0d3f          CALLR   READ_DIP
         00002f90     0cff  
     832 00002fa0     0b80          ANDI    DPUSECMOS,A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

         00002fb0 fffffeff  
     833 00002fd0     cb14          JRNZ    CMOS3                   ; BR = USING CMOS COINAGE
     834                    
     835 00002fe0     09e0          MOVI    CMOS_DIP,A0
         00002ff0 00003ce0' 
     836 00003010                   FCALL   STRINGCENTER,B6
     837 00003050     0b21          ADDI    [75,0],A1
         00003060 004b0000  
     838 00003080     5642          CLR     A2
     839 00003090     09c3          MOVI    COLOR_WHITE,A3
         000030a0     0202  
     840 000030b0                   FCALL   STRING,B6
     841                            
     842 000030f0     0d3f          CALLR   SET_DIP_COINAGE
         00003100     0a91  
     843 00003110     c011          JRUC    CMOS4
     844                    
     845 00003120           CMOS3
     846                    ;
     847                    ;        USING CMOS HERE
     848                    ;
     849 00003120     09e0          MOVI    CMOS_CMOS,A0
         00003130 00003da0' 
     850 00003150                   FCALL   STRINGCENTER,B6
     851 00003190     0b21          ADDI    [75,0],A1
         000031a0 004b0000  
     852 000031c0     5642          CLR     A2
     853 000031d0     09c3          MOVI    COLOR_WHITE,A3
         000031e0     0202  
     854 000031f0                   FCALL   STRING,B6
     855 00003230           CMOS4   
     856 00003230     07a0          move    @_coin_addr,a0,L
         00003240 00000000! 
     857 00003260     8400          move    *a0,a0,W
     858 00003270     03e0          not     a0
     859 00003280     0b80          andi    8h,a0
         00003290 fffffff7  
     860 000032b0     ca12          JRZ     CMOSRET
     861 000032c0     09e0          MOVI    CMOS_TILT,A0
         000032d0 00003bf0' 
     862 000032f0                   FCALL   STRINGCENTER,B6
     863 00003330     0b21          ADDI    [205,0],A1
         00003340 00cd0000  
     864 00003360     5642          CLR     A2
     865 00003370     09c3          MOVI    COLOR_RED,A3
         00003380     0303  
     866 00003390                   FCALL   STRING,B6
     867 000033d0     182d          MOVK    1,A13                   ; FLAG ERROR
     868 000033e0           CMOSRET
     869 000033e0     4dad          MOVE    A13,A13
     870 000033f0     ca33          JRZ     CTMP0
     871                    
     872 00003400     09c0          MOVI    CMOS_ERROR_SND,A0
         00003410     0203  
     873 00003420     07ad          move    @_sound_addr,a13,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

         00003430 00000000! 
     874 00003450     800d          move    a0,*a13,W
     875                    
     876 00003460     09e0          MOVI    CMOS_WAIT,A0
         00003470 00003e40' 
     877 00003490                   FCALL   STRINGCENTER,B6
     878 000034d0     0b21          ADDI    [230,0],A1
         000034e0 00e60000  
     879 00003500     5642          CLR     A2
     880 00003510     09c3          MOVI    COLOR_RED,A3
         00003520     0303  
     881 00003530                   FCALL   STRING,B6
     882 00003570     0d5f          CALLA   WDOGDIS                 ; DISABLE WOOF WOOF
         00003580 00000000! 
     883                    
     884 000035a0     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         000035b0 00000000! 
     885 000035d0     0b80          andi    BUTTONS|START_BITS,a0
         000035e0 f9db0f0f  
     886 00003600     0780          MOVE    A0,@SWSET1,L
         00003610 00000000- 
     887 00003630           CTMP1
     888 00003630     07a0          move    @_watchdog_addr,a0,L
         00003640 00000000! 
     889 00003660     8000          move    a0,*a0
     890 00003670     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         00003680 00000000! 
     891 000036a0     0b80          andi    BUTTONS|START_BITS,a0
         000036b0 f9db0f0f  
     892 000036d0     07a1          MOVE    @SWSET1,A1,L
         000036e0 00000000- 
     893 00003700     4801          CMP     A0,A1
     894 00003710     caf1          JRZ     CTMP1
     895 00003720     c011          JRUC    CTMP2
     896 00003730           CTMP0
     897 00003730     09c0          MOVI    200H,A0
         00003740     0200  
     898 00003750           CTMP_WAIT
     899 00003750     07a1          move    @_watchdog_addr,a1,L
         00003760 00000000! 
     900 00003780     8021          move    a1,*a1
     901                    
     902                    
     903                    ;FIX - Temp!!!!! 
     904                    ;FIX - Speed up warm reset - Replace when we ship!
     905                    ;       .if DEBUG
     906                    ;       .else
     907 00003790                   PAUSE   1000H,B6
     908 000037e0                   PAUSE   2000h,B6                ;Go fast
     909 00003830     3de0          DSJS    A0,CTMP_WAIT
     910                    ;       .endif
     911                    
     912 00003840           CTMP2
     913 00003840     07b5          move    @_serial_number,b5,L
         00003850 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

     914 00003870     07b6          move    @_man_date,b6,L
         00003880 00000000! 
     915 000038a0     c080          JAUC    PCMOSRET
         000038b0 00000000! 
     916                    
     917                    
     918 000038d0           SNDREVPROMPT
     919 000038d0       53          .string "SOUND SYSTEM VERSION",0
     920 00003980                   .even
     921 00003980           SNDPROTOPROMPT
     922 00003980       50          .string "PROTO ",0
     923 000039c0                   .even
     924 000039c0           SNDRELEASEPROMPT
     925 000039c0       52          .string "RELEASE ",0
     926 00003a10                   .even
     927 00003a10           SNDTIMEOUT
     928 00003a10       54          .string "TIMEOUT ON RESPONSE FROM SOUND SECTION",0
     929 00003b50                   .even
     930 00003b50           GAMESNPROMPT
     931 00003b50       47          .string "GAME SERIAL NUMBER",0
     932 00003bf0                   .even
     933                    
     934 00003bf0           CMOS_TILT
     935 00003bf0       57          .STRING "WARNING -- SLAM SWITCH CLOSED",0
     936 00003ce0                   .EVEN
     937                            
     938 00003ce0           CMOS_DIP
     939 00003ce0       55          .STRING "USING DIPSWITCH COINAGE",0
     940 00003da0                   .EVEN
     941                    
     942 00003da0           CMOS_CMOS
     943 00003da0       55          .STRING "USING CMOS COINAGE",0
     944 00003e40                   .EVEN
     945                    
     946 00003e40           CMOS_WAIT
     947 00003e40       45          .STRING "ERRORS DETECTED -- ANY BUTTON TO CONTINUE",0
     948 00003f90                   .EVEN
     949                    
     950 00003f90           CMOS_FACRES
     951 00003f90       43          .STRING "CMOS INVALID -- FACTORY SETTINGS RESTORED",0
     952 000040e0                   .EVEN
     953                    
     954 000040e0           CMOS_BAD
     955 000040e0       43          .string "CMOS CHIP U62 BAD",0
     956 00004170                   .EVEN
     957                    
     958 00004170           CMOS_UNFAC
     959 00004170       55          .STRING "UNABLE TO RESTORE FACTORY SETTINGS",0
     960 00004290                   .EVEN
     961                    
     962 00004290           CMOS_OK
     963 00004290       43          .STRING "CMOS OK",0
     964 000042d0                   .EVEN
     965                    
     966                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

     967                    *                                                                        *
     968                    *       BURNIN                                                           *
     969                    *                                                                        *
     970                    *       FACTORY BURNIN TEST -- EXITS BY RESETING THE GAME                *
     971                    *                                                                        *
     972                    *       ENTRY                                                            *
     973                    *               NOTHING                                                  *
     974                    *                                                                        *
     975                    *       EXIT                                                             *
     976                    *               NOTHING                                                  *
     977                    *                                                                        *
     978                    *       CALL                                                             *
     979                    *               JAUC                                                     *
     980                    *                                                                        *
     981                    **************************************************************************
     982                    
     983 000042d0           BURN_IN:
     984 000042d0     0360          DINT
     985 000042e0     09c0          MOVI    AUDAUTO,A0              ;ZERO OUT BURNIN AUDIT
         000042f0     0016  
     986 00004300     0d5f          CALLA   KILL_AUD
         00004310 00000000! 
     987 00004330           BURNLOOP
     988 00004330     0d5f          CALLA   WDOGDIS                 ;MAKE SURE THE DOG IS ASLEEP
         00004340 00000000! 
     989 00004360                   FCALL   CPUTEST,SP
     990 000043a0           BURNSP:
     991 000043a0     0570          setf    16,1,0
     992 000043b0     0740          setf    32,0,1
     993 000043c0     09ef          MOVI    STCKST,SP,L             ;RESTORE THE STACK PTR
         000043d0 013f73e0  
     994 000043f0     09e0          MOVI    SYSCINIT,A0             ;RE-INITIALIZE SYSTEM CONTROL
         00004400 0000987f  
     995 00004420     0580          MOVE    A0,@SYSCTRL,W
         00004430 01b00000  
     996 00004450     0580          MOVE    A0,@SYSCOPY,W           ;KEEP A COPY IN RAM
         00004460 00000000! 
     997 00004480     09c0          MOVI    AUDAUTO,A0
         00004490     0016  
     998 000044a0     0d5f          CALLA   AUD1                    ;ANOTHER ONE WORKED
         000044b0 00000000! 
     999 000044d0     c0e5          JRUC    BURNLOOP
    1000                    
    1001                    **************************************************************************
    1002                    *                                                                        *
    1003                    *       DIAGCPUTEST                                                      *
    1004                    *                                                                        *
    1005                    *       DIAGNOSTIC CALL FOR THE CPU TEST                                 *
    1006                    *                                                                        *
    1007                    *       ENTRY                                                            *
    1008                    *               NOTHING                                                  *
    1009                    *                                                                        *
    1010                    *       EXIT                                                             *
    1011                    *               JUMPS TO *EXEC_LP* AFTER SETTING EVERYTHING UP           *
    1012                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

    1013                    *       CALL                                                             *
    1014                    *               JAUC                                                     *
    1015                    *                                                                        *
    1016                    **************************************************************************
    1017                    
    1018 000044e0           DIAGCPUTEST:
    1019 000044e0     0d5f          CALLA   WDOGDIS
         000044f0 00000000! 
    1020 00004510     0360          DINT
    1021 00004520     0d5f          calla   InitAddresses           ; Make sure I/O addresses are initialized
         00004530 00000000! 
    1022 00004550                   FCALL   CPUTEST,SP
    1023 00004590           DIAGSP:
    1024 00004590     0570          SETF    16,1,0                  ; WORD NO SIGN EXTEND
    1025 000045a0     0740          SETF    32,0,1                  ; LONG WORD
    1026 000045b0     09ef          MOVI    STCKST,SP,L
         000045c0 013f73e0  
    1027 000045e0     0d5f          CALLA   init_all
         000045f0 00000000! 
    1028                    
    1029 00004610     0d3f          callr   _read_pic_data
         00004620     fbdd  
    1030                    
    1031 00004630     0d5f          CALLA   DIAG_COLORS             ;FIRE UP THE COLORS
         00004640 00000000! 
    1032                    
    1033 00004660                   CREATE  DIAG_PID,CPU_RET
    1034 000046e0     09c0          MOVI    INDIAG,A0
         000046f0     ffff  
    1035 00004700     0580          MOVE    A0,@GAMSTATE,W
         00004710 00000000! 
    1036 00004730     1820          movk    1,a0                    ; Menu driver switch mapping mode
    1037 00004740     0780          move    a0,@_switch_map_mode,L
         00004750 00000000! 
    1038 00004770     0d5f          calla   InitAddresses
         00004780 00000000! 
    1039 000047a0     c080          JAUC    mainlp
         000047b0 00000000! 
    1040                    
    1041                    ****************************************
    1042                    * bin2bcd - Converts binary number pointed to by a0 to bcd and stores it back
    1043                    *           into area pointed to by a0.
    1044                    *
    1045 000047d0            SUBR bin2bcd
    1046 000047d0     098f          mmtm    sp,a0,a1,a2,a3
         000047e0     f000  
    1047 000047f0     8402          move    *a0,a2,W
    1048 00004800     4c41          move    a2,a1
    1049 00004810     09c3          movi    10,a3
         00004820     000a  
    1050 00004830     5a61          divu    a3,a1
    1051 00004840     2481          sll     4,a1
    1052 00004850     09c3          movi    10,a3
         00004860     000a  
    1053 00004870     6e62          modu    a3,a2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

    1054 00004880     5441          or      a2,a1
    1055 00004890     8020          move    a1,*a0,W
    1056 000048a0     09af          mmfm    sp,a0,a1,a2,a3
         000048b0     000f  
    1057 000048c0     0960          rets
    1058                    
    1059                    *********************************************************
    1060                    * _set_time - Sets the real time clock based on values in
    1061                    *             _rtc_seconds
    1062                    *             _rtc_minutes
    1063                    *             _rtc_hours
    1064                    *             _rtc_day
    1065                    *             _rtc_date
    1066                    *             _rtc_month
    1067                    *             _rtc_year
    1068                    * Time is set through the PIC.
    1069 000048d0            SUBR _set_time
    1070 000048d0     098f          mmtm    sp,a0,a1,a2,a3,a4
         000048e0     f800  
    1071 000048f0     09e0          movi    _rtc_seconds,a0,L
         00004900 00000000! 
    1072 00004920     09c4          movi    7,a4
         00004930     0007  
    1073 00004940           _st_cnvt_loop
    1074 00004940     0d3f          callr   bin2bcd
         00004950     ffe7  
    1075 00004960     1200          addk    16,a0
    1076 00004970     3c84          dsjs    a4,_st_cnvt_loop
    1077 00004980     09c4          movi    14,a4
         00004990     000e  
    1078 000049a0     09e3          movi    _rtc_seconds,a3,L
         000049b0 00000000! 
    1079 000049d0     01e0          pushst
    1080 000049e0     0360          dint
    1081 000049f0     09c0          movi    012h,a0
         00004a00     0012  
    1082 00004a10     0580          move    a0,@PIC_COMMAND,W
         00004a20 01600000  
    1083 00004a40           _st_next_val
    1084 00004a40     1840          movk    2,a0
    1085 00004a50     0580          move    a0,@PIC_COMMAND,W
         00004a60 01600000  
    1086 00004a80     09e1          movi    1000000,a1
         00004a90 000f4240  
    1087 00004ab0           _st_ack_wait
    1088 00004ab0     07a2          move    @_watchdog_addr,a2,L
         00004ac0 00000000! 
    1089 00004ae0     8042          move    a2,*a2,W
    1090 00004af0     07a2          move    @_soundirq_addr,a2,L
         00004b00 00000000! 
    1091 00004b20     8442          move    *a2,a2,W
    1092 00004b30     1e62          btst    12,a2
    1093 00004b40     ca02          jrz     _got_st_ack
    1094 00004b50     3d61          dsjs    a1,_st_ack_wait
    1095 00004b60     c022          jruc    _st_done
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

    1096 00004b70           _got_st_ack
    1097 00004b70     01e0          pushst
    1098 00004b80     0544          setf    4,0
    1099 00004b90     8461          move    *a3,a1,0
    1100 00004ba0     01c0          popst
    1101 00004bb0     0581          move    a1,@PIC_COMMAND,W
         00004bc0 01600000  
    1102 00004be0     0ba1          ori     010h,a1
         00004bf0 00000010  
    1103 00004c10     0581          move    a1,@PIC_COMMAND,W
         00004c20 01600000  
    1104 00004c40     1083          addk    4,a3
    1105 00004c50     1f83          btst    3,a3
    1106 00004c60     ca01          jrz     _addr_ok
    1107 00004c70     1103          addk    8,a3
    1108 00004c80           _addr_ok
    1109 00004c80     09e0          movi    1000000,a0
         00004c90 000f4240  
    1110 00004cb0           _st_nack_wait
    1111 00004cb0     07a2          move    @_watchdog_addr,a2,L
         00004cc0 00000000! 
    1112 00004ce0     8042          move    a2,*a2,W
    1113 00004cf0     07a2          move    @_soundirq_addr,a2,L
         00004d00 00000000! 
    1114 00004d20     8442          move    *a2,a2,W
    1115 00004d30     1e62          btst    12,a2
    1116 00004d40     cb02          jrnz    _got_st_nack
    1117 00004d50     3d60          dsjs    a0,_st_nack_wait
    1118 00004d60     c002          jruc    _st_done
    1119 00004d70           _got_st_nack
    1120 00004d70     0d84          dsj     a4,_st_next_val
         00004d80     ffcb  
    1121 00004d90           _st_done
    1122 00004d90     01c0          popst
    1123 00004da0     09af          mmfm    sp,a0,a1,a2,a3,a4
         00004db0     001f  
    1124 00004dc0     0960          rets
    1125                    
    1126                    ********************************************
    1127                    * bcd2hex - Converts 2 digit BCD number in a1 to hex and stores back in a1
    1128                    *
    1129 00004dd0            SUBR bcd2hex
    1130 00004dd0     098f          mmtm    sp,a0,a3
         00004de0     9000  
    1131 00004df0     4c22          move    a1,a2
    1132 00004e00     1943          movk    10,a3
    1133 00004e10     0b81          andi    0f0h,a1
         00004e20 ffffff0f  
    1134 00004e40     2f81          srl     4,a1
    1135 00004e50     5e61          mpyu    a3,a1
    1136 00004e60     0b82          andi    0fh,a2
         00004e70 fffffff0  
    1137 00004e90     4041          add     a2,a1
    1138 00004ea0     09af          mmfm    sp,a0,a3
         00004eb0     0009  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1139 00004ec0     0960          rets
    1140                    
    1141                    ***********************************************
    1142                    * _aquire_time - Time aquisition trigger function called in the DIRQ
    1143                    *                Starts the acquisition of time information from the
    1144                    *                Real Time Clock (RTC).  The time information is transfered
    1145                    *                from the RTC to the PIC by the PIC.  This is done this way
    1146                    *                because the RTC to PIC interface is an I2C bus interface
    1147                    *                and requires approximately 3 ms to transfer the data from
    1148                    *                the RTC to the PIC.  This function is called by the DIRQ
    1149                    *                every 27 ticks (495ms) and then on the next DIRQ the function
    1150                    *                to transfer the time information from the PIC to this
    1151                    *                application is called.  This prevents this application from
    1152                    *                being bogged down while the time information is being
    1153                    *                moved from the RTC to the PIC.
    1154 00004ed0            SUBR _aquire_time
    1155 00004ed0     098f          mmtm    sp,a0,a1
         00004ee0     c000  
    1156 00004ef0     09c0          movi    011h,a0                 ;Command code 0x1
         00004f00     0011  
    1157 00004f10     0580          move    a0,@PIC_COMMAND,W
         00004f20 01600000  
    1158 00004f40           _at_next_byte
    1159 00004f40     09c0          movi    01h,a0
         00004f50     0001  
    1160 00004f60     0580          move    a0,@PIC_COMMAND,W
         00004f70 01600000  
    1161 00004f90     09e0          movi    100000,a0               ;Wait for Acknowledge
         00004fa0 000186a0  
    1162 00004fc0           _at_ack_wait
    1163 00004fc0     07a1          move    @_watchdog_addr,a1,L
         00004fd0 00000000! 
    1164 00004ff0     8021          move    a1,*a1,W
    1165 00005000     07a1          move    @_soundirq_addr,a1,L
         00005010 00000000! 
    1166 00005030     8421          move    *a1,a1,W
    1167 00005040     1e61          btst    12,a1
    1168 00005050     ca02          jrz     _got_at_ack
    1169 00005060     3d60          dsjs    a0,_at_ack_wait
    1170 00005070     c005          jruc    _at_done
    1171 00005080           _got_at_ack
    1172 00005080     09c1          movi    010h,a1
         00005090     0010  
    1173 000050a0     0581          move    a1,@PIC_COMMAND,W       ;Take away Request
         000050b0 01600000  
    1174 000050d0           _at_done
    1175 000050d0     09af          mmfm    sp,a0,a1
         000050e0     0003  
    1176 000050f0     0960          rets
    1177                    
    1178                    *************************************************
    1179                    * _get_time - This function transfers the time information that was extracted
    1180                    *             from the RTC by the PIC from the PIC to some global memory
    1181                    *             area for use by this application.  The time information is
    1182                    *             stored in hexidecimal word sized global values as follows
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1183                    *
    1184                    *             _tseconds (0-59) Current seconds
    1185                    *             _tminutes (0-59) Current minutes
    1186                    *             _thours   (0-23) Current hours
    1187                    *             _tday     (1-7)  Current Day (1=Sunday, 7=Saturday)
    1188                    *             _tdate    (1-31) Current Date
    1189                    *             _tmonth   (1-12) Current Month (1=January, 12=December)
    1190                    *             _tyear    (0-99) Current Last 2 Digits of year
    1191 00005100            SUBR _get_time
    1192 00005100     098f          mmtm    sp,a0,a1,a2,a3
         00005110     f000  
    1193 00005120     1903          movk    8,a3                    ;Number of bytes of data to get
    1194 00005130     09e2          movi    _tseconds,a2
         00005140 00000000! 
    1195 00005160     09c0          movi    013h,a0                 ;Command code 0x3
         00005170     0013  
    1196 00005180     0580          move    a0,@PIC_COMMAND,W
         00005190 01600000  
    1197 000051b0           _gt_next_byte
    1198 000051b0     09c0          movi    03h,a0
         000051c0     0003  
    1199 000051d0     0580          move    a0,@PIC_COMMAND,W
         000051e0 01600000  
    1200 00005200     09e0          movi    100000,a0               ;Wait for Acknowledge
         00005210 000186a0  
    1201 00005230           _get_time_data_wait
    1202 00005230     07a1          move    @_watchdog_addr,a1,L
         00005240 00000000! 
    1203 00005260     8021          move    a1,*a1,W
    1204 00005270     07a1          move    @_soundirq_addr,a1,L
         00005280 00000000! 
    1205 000052a0     8421          move    *a1,a1,W
    1206 000052b0     1e61          btst    12,a1
    1207 000052c0     ca07          jrz     _got_gt_ack
    1208 000052d0     3d60          dsjs    a0,_get_time_data_wait
    1209 000052e0     0b43          cmpi    1,a3
         000052f0     fffe  
    1210 00005300     ca1f          jrz     _get_time_adjust
    1211 00005310     1820          movk    1,a0
    1212 00005320     c000          jruc    _get_time_done
         00005330     0086  
    1213 00005340           _got_gt_ack
    1214 00005340     05a0          move    @PIC_DATA,a0,W          ;Read the data
         00005350 01600000  
    1215 00005370     09c1          movi    010h,a1
         00005380     0010  
    1216 00005390     0581          move    a1,@PIC_COMMAND,W       ;Tell PIC we took data
         000053a0 01600000  
    1217 000053c0     0b80          andi    0ffh,a0
         000053d0 ffffff00  
    1218 000053f0     9002          move    a0,*a2+,W
    1219 00005400     09e0          movi    100000,a0
         00005410 000186a0  
    1220 00005430           _gt_wait_nack
    1221 00005430     07a1          move    @_watchdog_addr,a1,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

         00005440 00000000! 
    1222 00005460     8021          move    a1,*a1,W
    1223 00005470     07a1          move    @_soundirq_addr,a1,L
         00005480 00000000! 
    1224 000054a0     8621          move    *a1,a1,L
    1225 000054b0     1e61          btst    12,a1
    1226 000054c0     cb01          jrnz    _got_gt_nack
    1227 000054d0     3d60          dsjs    a0,_gt_wait_nack
    1228 000054e0           _got_gt_nack
    1229 000054e0     0d83          dsj     a3,_gt_next_byte
         000054f0     ffcb  
    1230 00005500           _get_time_adjust
    1231 00005500     09e0          movi    _tseconds,a0,L
         00005510 00000000! 
    1232 00005530     8401          move    *a0,a1,W                ;Mask off unused bits for seconds
    1233 00005540     0b81          andi    07fh,a1
         00005550 ffffff80  
    1234 00005570     0d3f          callr   bcd2hex                 ;Convert to hex
         00005580     ff84  
    1235 00005590     4c21          move    a1,a1
    1236 000055a0     cf02          jrnn    _chk_seconds59
    1237 000055b0     5621          clr     a1
    1238 000055c0     c004          jruc    _seconds_ok
    1239 000055d0           _chk_seconds59
    1240 000055d0     0b41          cmpi    60,a1
         000055e0     ffc3  
    1241 000055f0     c401          jrlt    _seconds_ok
    1242 00005600     5621          clr     a1
    1243 00005610           _seconds_ok
    1244 00005610     9020          move    a1,*a0+,W
    1245 00005620     8401          move    *a0,a1,W                ;Mask off unused bits for minutes
    1246 00005630     0b81          andi    07fh,a1
         00005640 ffffff80  
    1247 00005660     0d3f          callr   bcd2hex                 ;Convert to hex
         00005670     ff75  
    1248 00005680     4c21          move    a1,a1
    1249 00005690     cf02          jrnn    _chk_minutes59
    1250 000056a0     5621          clr     a1
    1251 000056b0     c004          jruc    _minutes_ok
    1252 000056c0           _chk_minutes59
    1253 000056c0     0b41          cmpi    60,a1
         000056d0     ffc3  
    1254 000056e0     c401          jrlt    _minutes_ok
    1255 000056f0     5621          clr     a1
    1256 00005700           _minutes_ok
    1257 00005700     9020          move    a1,*a0+,W
    1258 00005710     8401          move    *a0,a1,W                ;Mask off unused bits for hours
    1259 00005720     0b81          andi    03fh,a1
         00005730 ffffffc0  
    1260 00005750     0d3f          callr   bcd2hex                 ;Convert to hex
         00005760     ff66  
    1261 00005770     4c21          move    a1,a1
    1262 00005780     cf02          jrnn    _chk_hours23
    1263 00005790     5621          clr     a1
    1264 000057a0     c004          jruc    _hours_ok
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

    1265 000057b0           _chk_hours23
    1266 000057b0     0b41          cmpi    24,a1
         000057c0     ffe7  
    1267 000057d0     c401          jrlt    _hours_ok
    1268 000057e0     5621          clr     a1
    1269 000057f0           _hours_ok
    1270 000057f0     9020          move    a1,*a0+,W
    1271 00005800     8401          move    *a0,a1,W                ;Mask off unused bits for day
    1272 00005810     0b81          andi    07h,a1
         00005820 fffffff8  
    1273 00005840     0d3f          callr   bcd2hex                 ;Convert to hex
         00005850     ff57  
    1274 00005860     4c21          move    a1,a1
    1275 00005870     cb02          jrnz    _chk_day7
    1276 00005880     1821          movk    1,a1
    1277 00005890     c004          jruc    _day_ok
    1278 000058a0           _chk_day7
    1279 000058a0     0b41          cmpi    8,a1
         000058b0     fff7  
    1280 000058c0     c401          jrlt    _day_ok
    1281 000058d0     1821          movk    1,a1
    1282 000058e0           _day_ok
    1283 000058e0     9020          move    a1,*a0+,W
    1284 000058f0     8401          move    *a0,a1,W                ;Mask off unused bits for date
    1285 00005900     0b81          andi    03fh,a1
         00005910 ffffffc0  
    1286 00005930     0d3f          callr   bcd2hex                 ;Convert to hex
         00005940     ff48  
    1287 00005950     4c21          move    a1,a1
    1288 00005960     cb02          jrnz    _chk_date31
    1289 00005970     1821          movk    1,a1
    1290 00005980     c004          jruc    _date_ok
    1291 00005990           _chk_date31
    1292 00005990     0b41          cmpi    32,a1
         000059a0     ffdf  
    1293 000059b0     c401          jrlt    _date_ok
    1294 000059c0     1821          movk    1,a1
    1295 000059d0           _date_ok
    1296 000059d0     9020          move    a1,*a0+,W
    1297 000059e0     8401          move    *a0,a1                  ;Mask off unused bits for month
    1298 000059f0     0b81          andi    01fh,a1
         00005a00 ffffffe0  
    1299 00005a20     0d3f          callr   bcd2hex                 ;Convert to hex
         00005a30     ff39  
    1300 00005a40     4c21          move    a1,a1
    1301 00005a50     cb02          jrnz    _chk_month12
    1302 00005a60     1821          movk    1,a1
    1303 00005a70     c004          jruc    _month_ok
    1304 00005a80           _chk_month12
    1305 00005a80     0b41          cmpi    13,a1
         00005a90     fff2  
    1306 00005aa0     c401          jrlt    _month_ok
    1307 00005ab0     1821          movk    1,a1
    1308 00005ac0           _month_ok
    1309                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1310 00005ac0     9020          move    a1,*a0+,W
    1311 00005ad0     8401          move    *a0,a1,W
    1312 00005ae0     0d3f          callr   bcd2hex                 ;Convert to hex
         00005af0     ff2d  
    1313 00005b00     4c21          move    a1,a1
    1314 00005b10     cf02          jrnn    _chk_year99
    1315 00005b20     5621          clr     a1
    1316 00005b30     c004          jruc    _year_ok
    1317 00005b40           _chk_year99
    1318 00005b40     0b41          cmpi    100,a1
         00005b50     ff9b  
    1319 00005b60     c401          jrlt    _year_ok
    1320 00005b70     5621          clr     a1
    1321 00005b80           _year_ok
    1322 00005b80     8020          move    a1,*a0,W
    1323 00005b90     5600          clr     a0                      ;All bits used for year
    1324 00005ba0           _get_time_done
    1325 00005ba0     09af          mmfm    sp,a0,a1,a2,a3
         00005bb0     000f  
    1326 00005bc0     0960          rets
    1327                    
    1328                    ***********************************************
    1329                    * PICCHECK - Power up test for the PIC MicroController
    1330                    * Checks basic communications with the PIC chip
    1331                    *
    1332 00005bd0           PICCHECK
    1333 00005bd0     09c0          movi    1fh,a0                  ;Command code 0xf
         00005be0     001f  
    1334 00005bf0     0580          move    a0,@PIC_COMMAND,W
         00005c00 01600000  
    1335 00005c20     09c0          movi    0fh,a0
         00005c30     000f  
    1336 00005c40     0580          move    a0,@PIC_COMMAND,W
         00005c50 01600000  
    1337 00005c70     09e0          movi    100000,a0               ;Wait for Acknowledge
         00005c80 000186a0  
    1338 00005ca0           pic_loop
    1339 00005ca0     07a1          move    @_watchdog_addr,a1,L
         00005cb0 00000000! 
    1340 00005cd0     8021          move    a1,*a1,W
    1341 00005ce0     07a1          move    @_soundirq_addr,a1,L
         00005cf0 00000000! 
    1342 00005d10     8421          move    *a1,a1,W
    1343 00005d20     1e61          btst    12,a1
    1344 00005d30     ca03          jrz     _got_pic_ack            ;BR = got acknowledge
    1345 00005d40     3d60          dsjs    a0,pic_loop
    1346 00005d50     1820          movk    1,a0
    1347 00005d60     c021          jruc    _piccheck_done
    1348 00005d70           _got_pic_ack
    1349 00005d70     05a0          move    @PIC_DATA,a0,W          ;Read the data
         00005d80 01600000  
    1350 00005da0     09c1          movi    010h,a1
         00005db0     0010  
    1351 00005dc0     0581          move    a1,@PIC_COMMAND,W       ;Tell PIC we took data
         00005dd0 01600000  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

    1352 00005df0     09e1          movi    100000,a1
         00005e00 000186a0  
    1353 00005e20           _pic_nack_loop
    1354 00005e20     07a2          move    @_watchdog_addr,a2,L
         00005e30 00000000! 
    1355 00005e50     8042          move    a2,*a2,W
    1356 00005e60     07a2          move    @_soundirq_addr,a2,L
         00005e70 00000000! 
    1357 00005e90     8442          move    *a2,a2,W
    1358 00005ea0     1e62          btst    12,a2
    1359 00005eb0     cb03          jrnz    _got_pic_nack
    1360 00005ec0     3d61          dsjs    a1,_pic_nack_loop
    1361 00005ed0     1820          movk    1,a0
    1362 00005ee0     c009          jruc    _piccheck_done
    1363 00005ef0           _got_pic_nack
    1364 00005ef0     0b80          andi    0fh,a0
         00005f00 fffffff0  
    1365 00005f20     0b40          cmpi    0fh,a0
         00005f30     fff0  
    1366 00005f40     ca02          jrz     _pic_ok
    1367 00005f50     1820          movk    1,a0
    1368 00005f60     c001          jruc    _piccheck_done
    1369 00005f70           _pic_ok
    1370 00005f70     5600          clr     a0
    1371 00005f80           _piccheck_done
    1372 00005f80                   FRET    b5
    1373                    
    1374                    ***************************************************
    1375                    * SNDCHECK - Sound Subsystem Check during CPUTEST
    1376                    *
    1377 00005f90           SNDCHECK
    1378 00005f90     0796          move    b6,@_b6_save,L
         00005fa0 000000e0- 
    1379 00005fc0     07a0          move    @_coin_counter_addr,a0,L
         00005fd0 00000000! 
    1380 00005ff0     09c1          movi    030h,a1
         00006000     0030  
    1381 00006010     8020          move    a1,*a0,W
    1382 00006020     09c1          movi    8,a1
         00006030     0008  
    1383 00006040     3c21          dsjs    a1,$
    1384 00006050     09c1          movi    020h,a1
         00006060     0020  
    1385 00006070     8020          move    a1,*a0,W
    1386 00006080     09e1          movi    1000000,a1
         00006090 000f4240  
    1387 000060b0           dsp_loop1
    1388 000060b0     07a0          move    @_watchdog_addr,a0,L
         000060c0 00000000! 
    1389 000060e0     8000          move    a0,*a0,W
    1390 000060f0     07a0          move    @_soundirq_addr,a0,L
         00006100 00000000! 
    1391 00006120     8402          move    *a0,a2,W
    1392 00006130     1ea2          btst    B_SDAV,a2
    1393 00006140     ca0e          jrz     dsp_lp1_exit
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1394 00006150     3d61          dsjs    a1,dsp_loop1
    1395 00006160     09ea          movi    DSP,a10
         00006170 00019880' 
    1396 00006190     1820          movk    1,a0
    1397 000061a0     4c0b          move    a0,a11
    1398 000061b0     102b          inc     a11
    1399 000061c0                   FCALL   CHIPOUT,b5
    1400 00006200     1820          movk    1,a0
    1401 00006210     c000          jruc    dspcheck_done
         00006220     0091  
    1402 00006230           dsp_lp1_exit
    1403 00006230     07a0          move    @_sound_addr,a0,L
         00006240 00000000! 
    1404 00006260     8400          move    *a0,a0,W
    1405 00006270     0b80          andi    0ffh,a0
         00006280 ffffff00  
    1406 000062a0     0b40          cmpi    079h,a0
         000062b0     ff86  
    1407 000062c0     ca0c          jrz     dsp_next_byte
    1408 000062d0     09ea          movi    DSP,a10
         000062e0 00019880' 
    1409 00006300     1820          movk    1,a0
    1410 00006310     4c0b          move    a0,a11
    1411 00006320     102b          inc     a11
    1412 00006330                   FCALL   CHIPOUT,b5
    1413 00006370     1820          movk    1,a0
    1414 00006380     c07b          jruc    dspcheck_done
    1415 00006390           dsp_next_byte
    1416 00006390     09e1          movi    10000000,a1
         000063a0 00989680  
    1417 000063c0           dsp_loop2
    1418 000063c0     07a0          move    @_watchdog_addr,a0,L
         000063d0 00000000! 
    1419 000063f0     8000          move    a0,*a0,W
    1420 00006400     07a0          move    @_soundirq_addr,a0,L
         00006410 00000000! 
    1421 00006430     8402          move    *a0,a2,W
    1422 00006440     1ea2          btst    B_SDAV,a2
    1423 00006450     ca0d          jrz     dsp_lp2_exit
    1424 00006460     3d61          dsjs    a1,dsp_loop2
    1425 00006470     09ea          movi    DSP,a10
         00006480 00019880' 
    1426 000064a0     1820          movk    1,a0
    1427 000064b0     4c0b          move    a0,a11
    1428 000064c0     102b          inc     a11
    1429 000064d0                   FCALL   CHIPOUT,b5
    1430 00006510     1820          movk    1,a0
    1431 00006520     c061          jruc    dspcheck_done
    1432 00006530           dsp_lp2_exit
    1433 00006530     09ea          movi    DSP,a10
         00006540 00019880' 
    1434 00006560     5600          clr     a0
    1435 00006570     4c0b          move    a0,a11
    1436 00006580     102b          inc     a11
    1437 00006590                   FCALL   CHIPOUT,b5
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

    1438 000065d0     07a0          move    @_sound_addr,a0,L
         000065e0 00000000! 
    1439 00006600     8400          move    *a0,a0,W
    1440 00006610     0b80          andi    0ffh,a0
         00006620 ffffff00  
    1441 00006640     4c0e          move    a0,a14
    1442 00006650     5600          clr     a0
    1443 00006660     4c00          move    a0,a0
    1444 00006670     ca02          jrz     dsp_ok
    1445 00006680     1820          movk    1,a0
    1446 00006690     c04a          jruc    dspcheck_done
    1447 000066a0           dsp_ok
    1448 000066a0     5600          clr     a0
    1449 000066b0     0780          move    a0,@_snd_status,L
         000066c0 000000c0- 
    1450 000066e0     0bee          subi    2,a14
         000066f0     fffd  
    1451 00006700     058e          move    a14,@_snd_diag_code,W
         00006710 00000120- 
    1452 00006730     57ce          clr     a14
    1453 00006740     058e          move    a14,@_snd_chip_count,W
         00006750 00000130- 
    1454 00006770     09ec          movi    SROMTAB,a12,L
         00006780 0001a200' 
    1455 000067a0           snd_romok_loop
    1456 000067a0     978a          move    *a12+,a10,L
    1457 000067b0     ca1c          jrz     sndrom_done
    1458 000067c0     05ae          move    @_snd_chip_count,a14,W
         000067d0 00000130- 
    1459 000067f0     05ab          move    @_snd_diag_code,a11,W
         00006800 00000120- 
    1460 00006820     496e          cmp     a11,a14
    1461 00006830     cb05          jrnz    sndchip_ok
    1462 00006840     184b          movk    2,a11
    1463 00006850     078b          move    a11,@_snd_status,L
         00006860 000000c0- 
    1464 00006880     c001          jruc    snd_chip_out
    1465 00006890           sndchip_ok
    1466 00006890     182b          movk    1,a11
    1467 000068a0           snd_chip_out
    1468 000068a0     102e          addk    1,a14
    1469 000068b0     058e          move    a14,@_snd_chip_count,W
         000068c0 00000130- 
    1470 000068e0                   FCALL   CHIPOUT,b5
    1471 00006920     07ab          move    @_snd_status,a11,L
         00006930 000000c0- 
    1472 00006950     cae4          jrz     snd_romok_loop
    1473 00006960     1820          movk    1,a0
    1474 00006970     c01c          jruc    dspcheck_done
    1475 00006980           sndrom_done
    1476 00006980     09ec          movi    SNDRAMTAB,a12,L
         00006990 0001a2a0' 
    1477 000069b0           snd_ramok_loop
    1478 000069b0     978a          move    *a12+,a10,L
    1479 000069c0     ca16          jrz     sndram_done
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

    1480 000069d0     05ae          move    @_snd_diag_code,a14,W
         000069e0 00000120- 
    1481 00006a00     0b4e          cmpi    8,a14
         00006a10     fff7  
    1482 00006a20     cb05          jrnz    sndram_ok
    1483 00006a30     184b          movk    2,a11
    1484 00006a40     078b          move    a11,@_snd_status,L
         00006a50 000000c0- 
    1485 00006a70     c001          jruc    snd_ram_out
    1486 00006a80           sndram_ok
    1487 00006a80     182b          movk    1,a11
    1488 00006a90           snd_ram_out
    1489 00006a90                   FCALL   CHIPOUT,b5
    1490 00006ad0     07ab          move    @_snd_status,a11,L
         00006ae0 000000c0- 
    1491 00006b00     caea          jrz     snd_ramok_loop
    1492 00006b10     1820          movk    1,a0
    1493 00006b20     c001          jruc    dspcheck_done
    1494 00006b30           sndram_done
    1495 00006b30     5600          clr     a0
    1496 00006b40           dspcheck_done
    1497 00006b40     09e1          movi    1000000,a1
         00006b50 000f4240  
    1498 00006b70           dspcheck_wait_exit_loop
    1499 00006b70     07a2          move    @_watchdog_addr,a2,L
         00006b80 00000000! 
    1500 00006ba0     8042          move    a2,*a2,W
    1501 00006bb0     3ca1          dsjs    a1,dspcheck_wait_exit_loop
    1502 00006bc0     07b6          move    @_b6_save,b6,L
         00006bd0 000000e0- 
    1503 00006bf0                   FRET    b6
    1504                    
    1505                    **************************************************************************
    1506                    *                                                                        *
    1507                    *       CPUTEST                                                          *
    1508                    *                                                                        *
    1509                    *       THE ACTUAL CPU TEST STUFF                                        *
    1510                    *                                                                        *
    1511                    *       ENTRY                                                            *
    1512                    *               SP      RETURN ADDRESS                                   *
    1513                    *                                                                        *
    1514                    *       EXIT                                                             *
    1515                    *               WHO KNOWS                                                *
    1516                    *                                                                        *
    1517                    *       CALL                                                             *
    1518                    *               FCALL   CPUTEST,SP                                       *
    1519                    *                                                                        *
    1520                    **************************************************************************
    1521                    
    1522              00b4  CPUT_X  .EQU    180     ;TEXT X POSITION
    1523              0076  CPUT_Y1 .EQU    118     ;TEXT ROW 1 Y POSITION
    1524              0082  CPUT_Y2 .EQU    130     ;TEXT ROW 2 Y POSITION
    1525              008e  CPUT_Y3 .EQU    142     ;TEXT ROW 3 Y POSITION
    1526          002200d1  CPUT_CLRS .EQU  [CPUT_Y3-CPUT_Y1+10,389-CPUT_X]
    1527                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

    1528          007600b4  CPUT_CLR .EQU   [CPUT_Y1,CPUT_X]        ;CLEAR START
    1529                    
    1530 00006c00           CPUTEST:
    1531 00006c00     4de1          move    sp,a1
    1532 00006c10     09ef          movi    STCKST,sp               ; Set up a temporary stack
         00006c20 013f73e0  
    1533 00006c40     0d5f          calla   InitAddresses           ; Reset the I/O Addresses
         00006c50 00000000! 
    1534 00006c70     4c2f          move    a1,sp
    1535 00006c80     07a0          move    @_watchdog_addr,a0,L
         00006c90 00000000! 
    1536 00006cb0     8000          move    a0,*a0
    1537 00006cc0                   FCALL   INITCOLR,B5             ;HEY! IT LOOKS BETTER THIS WAY
    1538 00006d00                   FCALL   DSCRCLR,B6              ;BLOW THE SCREEN OR IT LOOKS TOO UGLY
    1539                    
    1540 00006d40     5610          CLR     B0
    1541                    
    1542                            .if     WWFUNIT
    1543 00006d50     09ed          movi    SYSCINIT,a13
         00006d60 0000987f  
    1544                            .else
    1545                            MOVI    0FFFCH,A13
    1546                            .endif
    1547                    
    1548 00006d80     058d          MOVE    A13,@SYSCTRL,W          ;MAKE SURE WE'RE WRITING TO BIT MAP
         00006d90 01b00000  
    1549 00006db0     09ee          MOVI    VRAMCHIPS,A14           ;VERIFY BIT MAP
         00006dc0 0001aca0' 
    1550 00006de0                   FCALL   RAMCHECK,B5
    1551                    
    1552                    ;       ENABLE VIDEO PALETTE MAP ACCESS
    1553                    
    1554                    
    1555                            .if     WWFUNIT
    1556                    
    1557 00006e20     09ed          movi    SYSCINIT,a13
         00006e30 0000987f  
    1558 00006e50     0b8d          andni   PALENB,a13
         00006e60 00000800  
    1559                    
    1560                            .else
    1561                            MOVI    PAL_SELECT,A13
    1562                            .endif
    1563                    
    1564 00006e80     058d          MOVE    A13,@SYSCTRL,W
         00006e90 01b00000  
    1565 00006eb0     09ee          MOVI    PALCHIPS,A14            ;VERIFY OBJECT PALETTE RAM
         00006ec0 0001b020' 
    1566 00006ee0                   FCALL   RAMCHECK,B5
    1567 00006f20     4e1c          MOVE    B0,A12
    1568                            
    1569                    ;       DISABLE VIDEO PALETTE MAP ACCESS
    1570                    
    1571                    
    1572                            .if     WWFUNIT
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

    1573 00006f30     09ed          movi    SYSCINIT,a13
         00006f40 0000987f  
    1574                            .else
    1575                            MOVI    0FFFCH,A13
    1576                            .endif
    1577                    
    1578 00006f60     058d          MOVE    A13,@SYSCTRL,W
         00006f70 01b00000  
    1579 00006f90                   FCALL   INITCOLR,B5             ;RELOAD THE COLORS
    1580 00006fd0                   FCALL   DSCRCLR,B6
    1581                    
    1582 00007010                   FCALL   CPUDRAW,B5              ;SHOW THE CPU
    1583 00007050     09ea          MOVI    CPU,A10                 ;WE GOT THIS FAR, CPU MUST BE OK
         00007060 00017320' 
    1584 00007080     09cb          MOVI    1,A11
         00007090     0001  
    1585 000070a0                   FCALL   CHIPOUT,B5
    1586                    
    1587 000070e0     09e9          MOVI    VRAMTAB,A9
         000070f0 00019be0' 
    1588 00007110                   FCALL   CHIPTABLE,B5            ;PLOT OUT THE CHIP TABLE
    1589                    
    1590 00007150     4d8c          MOVE    A12,A12
    1591 00007160     ca0f          JRZ     PSRAMCK
    1592 00007170           PBADRAM
    1593 00007170     09e0          MOVI    RAMBADMESS,A0
         00007180 00008e50' 
    1594 000071a0     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         000071b0 007600b4  
    1595 000071d0     5642          CLR     A2
    1596 000071e0     09c3          MOVI    COLOR_RED,A3
         000071f0     0303  
    1597 00007200                   FCALL   STRING,B6
    1598 00007240     c000          JRUC    PCPUBAD
         00007250     0155  
    1599                    
    1600 00007260           PSRAMCK
    1601 00007260     09e0          MOVI    SRAMCHECK,A0
         00007270 0001b280' 
    1602 00007290     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         000072a0 007600b4  
    1603 000072c0     5642          CLR     A2
    1604 000072d0     09c3          MOVI    COLOR_YELLOW,A3
         000072e0     0505  
    1605 000072f0                   FCALL   STRING,B6
    1606                    
    1607 00007330     5610          CLR     B0
    1608 00007340     09ee          MOVI    SRAMCHIPS,A14           ;VERIFY SCRATCH RAMS
         00007350 0001b330' 
    1609 00007370                   FCALL   RAMCHECK,B5
    1610 000073b0     4e1c          MOVE    B0,A12
    1611 000073c0     4de1          move    sp,a1
    1612 000073d0     09ef          movi    STCKST,sp               ; Set up a temporary stack
         000073e0 013f73e0  
    1613 00007400     0d5f          calla   InitAddresses           ; Reset the I/O Addresses
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

         00007410 00000000! 
    1614 00007430     4c2f          move    a1,sp
    1615                            
    1616 00007440     09e0          MOVI    CPUT_CLR,A0
         00007450 007600b4  
    1617 00007470     09e1          MOVI    CPUT_CLRS,A1
         00007480 002200d1  
    1618 000074a0     09c2          MOVI    COLOR_BLACK,A2
         000074b0     1414  
    1619 000074c0                   FCALL   RECTANGLE,B6
    1620                    
    1621 00007500     4d8c          MOVE    A12,A12
    1622 00007510     cbc5          JRNZ    PBADRAM
    1623 00007520           PROMCK
    1624 00007520     09e0          MOVI    ROMCMESS,A0
         00007530 00008d70' 
    1625 00007550     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00007560 007600b4  
    1626 00007580     5642          CLR     A2
    1627 00007590     09c3          MOVI    COLOR_YELLOW,A3
         000075a0     0505  
    1628 000075b0                   FCALL   STRING,B6
    1629                    
    1630 000075f0     09e0          MOVI    CPUEXIT1_MESS,A0
         00007600 00009210' 
    1631 00007620     09e1          MOVI    [CPUT_Y2,CPUT_X],A1
         00007630 008200b4  
    1632 00007650     5642          CLR     A2
    1633 00007660     09c3          MOVI    COLOR_YELLOW,A3
         00007670     0505  
    1634 00007680                   FCALL   STRING,B6
    1635                    
    1636 000076c0     09e0          MOVI    CPUEXIT2_MESS,A0
         000076d0 000092a0' 
    1637 000076f0     09e1          MOVI    [CPUT_Y3,CPUT_X],A1
         00007700 008e00b4  
    1638 00007720     5642          CLR     A2
    1639 00007730     09c3          MOVI    COLOR_YELLOW,A3
         00007740     0505  
    1640 00007750                   FCALL   STRING,B6
    1641                    
    1642 00007790     5610          CLR     B0                      ;KEEP THE STATS HERE
    1643                    
    1644 000077a0     09ee          MOVI    PROMCHIPS,A14
         000077b0 0001c550' 
    1645 000077d0                   FCALL   ROMCHECK,B5
    1646 00007810     cb2f          jrnz    PROMABORT
    1647                    
    1648 00007820     09ee          MOVI    IROMCHIPS_8MEG,A14
         00007830 0001c6d0' 
    1649 00007850                   FCALL   ROMCHECK,B5
    1650 00007890     cb27          jrnz    PROMABORT
    1651 000078a0     09ee          movi    SYSCINIT,a14
         000078b0 0000987f  
    1652 000078d0     0bae          ori     0100h,a14
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

         000078e0 00000100  
    1653 00007900     058e          move    a14,@SYSCTRL,W          ; Image IROM bank 1
         00007910 01b00000  
    1654 00007930     09ee          movi    IROMCHIPS1_8MEG,a14
         00007940 0001cbf0' 
    1655 00007960                   FCALL   ROMCHECK,b5
    1656 000079a0     cb16          jrnz    PROMABORT
    1657                    
    1658 000079b0     4e1c          move    b0,a12
    1659 000079c0     09e0          movi    CPUT_CLR,a0
         000079d0 007600b4  
    1660 000079f0     09e1          movi    CPUT_CLRS,a1
         00007a00 002200d1  
    1661 00007a20     09c2          movi    COLOR_BLACK,a2
         00007a30     1414  
    1662 00007a40                   FCALL   RECTANGLE,b6
    1663 00007a80     09ee          movi    SYSCINIT,a14
         00007a90 0000987f  
    1664 00007ab0     058e          move    a14,@SYSCTRL,W          ; Back to IROM bank 0
         00007ac0 01b00000  
    1665 00007ae0     4d8c          move    a12,a12
    1666 00007af0     cb00          jrnz    PBADROM
         00007b00     00b1  
    1667 00007b10           PROMABORT
    1668 00007b10     09ee          movi    SYSCINIT,a14
         00007b20 0000987f  
    1669 00007b40     058e          move    a14,@SYSCTRL,W          ; Back to IROM bank 0
         00007b50 01b00000  
    1670 00007b70     4e1c          MOVE    B0,A12
    1671 00007b80     09e0          MOVI    CPUT_CLR,A0
         00007b90 007600b4  
    1672 00007bb0     09e1          MOVI    CPUT_CLRS,A1
         00007bc0 002200d1  
    1673 00007be0     09c2          MOVI    COLOR_BLACK,A2
         00007bf0     1414  
    1674 00007c00                   FCALL   RECTANGLE,B6
    1675                    
    1676 00007c40     4d8c          MOVE    A12,A12
    1677                    
    1678                    *WE CHECK ON THE DMA HERE
    1679 00007c50           PDMACK
    1680 00007c50     09e0          MOVI    DMACMESS,A0
         00007c60 00008c50' 
    1681 00007c80     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00007c90 007600b4  
    1682 00007cb0     5642          CLR     A2
    1683 00007cc0     09c3          MOVI    COLOR_YELLOW,A3
         00007cd0     0505  
    1684 00007ce0                   FCALL   STRING,B6
    1685                    
    1686 00007d20                   FCALL   DMACHECK,B5             ;CHECK THE DMA
    1687 00007d60     09ea          MOVI    DMA,A10
         00007d70 000173f0' 
    1688 00007d90     4c0b          MOVE    A0,A11
    1689 00007da0     4c0c          MOVE    A0,A12
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

    1690 00007db0     102b          INC     A11                     ;GREEN/RED
    1691 00007dc0                   FCALL   CHIPOUT,B5
    1692                    
    1693 00007e00     09e0          MOVI    CPUT_CLR,A0
         00007e10 007600b4  
    1694 00007e30     09e1          MOVI    CPUT_CLRS,A1
         00007e40 002200d1  
    1695 00007e60     09c2          MOVI    COLOR_BLACK,A2
         00007e70     1414  
    1696 00007e80                   FCALL   RECTANGLE,B6
    1697                    
    1698 00007ec0     4d8c          MOVE    A12,A12
    1699 00007ed0     cb66          jrnz    PBADDMA
    1700 00007ee0     09e0          movi    SNDCMESS,a0
         00007ef0 00008ec0' 
    1701 00007f10     09e1          movi    [CPUT_Y1,CPUT_X],a1
         00007f20 007600b4  
    1702 00007f40     5642          clr     a2
    1703 00007f50     09c3          movi    COLOR_YELLOW,a3
         00007f60     0505  
    1704 00007f70                   FCALL   STRING,b6
    1705 00007fb0                   FCALL   SNDCHECK,b6
    1706 00007ff0     4c0c          move    a0,a12
    1707 00008000     09e0          movi    CPUT_CLR,a0
         00008010 007600b4  
    1708 00008030     09e1          movi    CPUT_CLRS,a1
         00008040 002200d1  
    1709 00008060     09c2          movi    COLOR_BLACK,a2
         00008070     1414  
    1710 00008080                   FCALL   RECTANGLE,b6
    1711 000080c0     4d8c          move    a12,a12
    1712 000080d0     cb38          jrnz    PBADSND
    1713                    
    1714 000080e0     09e0          movi    PICCMESS,a0
         000080f0 00009010' 
    1715 00008110     09e1          movi    [CPUT_Y1,CPUT_X],a1
         00008120 007600b4  
    1716 00008140     5642          clr     a2
    1717 00008150     09c3          movi    COLOR_YELLOW,a3
         00008160     0505  
    1718 00008170                   FCALL   STRING,b6
    1719 000081b0                   FCALL   PICCHECK,b5
    1720 000081f0     09ea          movi    PIC,a10
         00008200 00019130' 
    1721 00008220     4c0b          move    a0,a11
    1722 00008230     4c0c          move    a0,a12
    1723 00008240     102b          inc     a11
    1724 00008250                   FCALL   CHIPOUT,b5
    1725 00008290     09e0          movi    CPUT_CLR,a0
         000082a0 007600b4  
    1726 000082c0     09e1          movi    CPUT_CLRS,a1
         000082d0 002200d1  
    1727 000082f0     09c2          movi    COLOR_BLACK,a2
         00008300     1414  
    1728 00008310                   FCALL   RECTANGLE,b6
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

    1729 00008350     4d8c          move    a12,a12
    1730 00008360     ca00          JRZ     PCPUGOOD
         00008370     0088  
    1731 00008380     09e0          movi    PICBADMESS,a0
         00008390 000090a0' 
    1732 000083b0     09e1          movi    [CPUT_Y1,CPUT_X],a1
         000083c0 007600b4  
    1733 000083e0     5642          clr     a2
    1734 000083f0     09c3          movi    COLOR_RED,a3
         00008400     0303  
    1735 00008410                   FCALL   STRING,b6
    1736 00008450     c035          jruc    PCPUBAD
    1737 00008460           PBADSND
    1738 00008460     09e0          movi    SNDBADMESS,a0
         00008470 00008f80' 
    1739 00008490     09e1          movi    [CPUT_Y1,CPUT_X],a1
         000084a0 007600b4  
    1740 000084c0     5642          clr     a2
    1741 000084d0     09c3          movi    COLOR_RED,a3
         000084e0     0303  
    1742 000084f0                   FCALL   STRING,b6
    1743 00008530     c027          jruc    PCPUBAD
    1744 00008540           PBADDMA
    1745 00008540     09e0          MOVI    DMABADMESS,A0
         00008550 00008cd0' 
    1746 00008570     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00008580 007600b4  
    1747 000085a0     5642          CLR     A2
    1748 000085b0     09c3          MOVI    COLOR_RED,A3
         000085c0     0303  
    1749 000085d0                   FCALL   STRING,B6
    1750 00008610     c019          JRUC    PCPUBAD
    1751 00008620           PBADROM
    1752 00008620     09e0          MOVI    CPUT_CLR,A0
         00008630 007600b4  
    1753 00008650     09e1          MOVI    CPUT_CLRS,A1
         00008660 002200d1  
    1754 00008680     09c2          MOVI    COLOR_BLACK,A2
         00008690     1414  
    1755 000086a0                   FCALL   RECTANGLE,B6
    1756 000086e0     09e0          MOVI    ROMBADMESS,A0
         000086f0 00008de0' 
    1757 00008710     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00008720 007600b4  
    1758 00008740     5642          CLR     A2
    1759 00008750     09c3          MOVI    COLOR_RED,A3
         00008760     0303  
    1760 00008770                   FCALL   STRING,B6
    1761                    
    1762 000087b0           PCPUBAD
    1763 000087b0     09e0          MOVI    CPUPAUSE,A0
         000087c0 00009180' 
    1764 000087e0     09e1          MOVI    [CPUT_Y2,CPUT_X],A1
         000087f0 008200b4  
    1765 00008810     5642          CLR     A2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1766 00008820     09c3          MOVI    COLOR_RED,A3
         00008830     0303  
    1767 00008840                   FCALL   STRING,B6
    1768                    
    1769 00008880           PCPUWAIT
    1770 00008880     07a0          move    @_watchdog_addr,a0,L
         00008890 00000000! 
    1771 000088b0     8000          move    a0,*a0
    1772                    
    1773                            .IF     TUNIT
    1774 000088c0     09c0          MOVI    CPU_ERROR_SND,A0
         000088d0     0203  
    1775 000088e0     07a3          move    @_sound_addr,a3,L
         000088f0 00000000! 
    1776 00008910     8003          move    a0,*a3,W
    1777                            .ELSE
    1778                            MOVI    0FD00H|CPU_ERROR_SND,A0
    1779                            move    @_sound_addr,a3,L
    1780                            move    a0,*a3,W
    1781                            MOVI    0FF00H|CPU_ERROR_SND,A0
    1782                            move    @_sound_addr,a3,L
    1783                            move    a0,*a3,W
    1784                            .ENDIF
    1785                    
    1786 00008920     4fa5          MOVE    A13,B5
    1787 00008930                   PAUSE   10000,B6
    1788 00008980                   FCALL   fudge_switches_diag,B6
    1789 000089c0     0b80          andi    BUTTONS|START_BITS,a0
         000089d0 f9db0f0f  
    1790 000089f0     4e01          MOVE    A0,B1
    1791 00008a00     09d0          MOVI    -1,B0                   ; ASSUME DON'T TIMEOUT
         00008a10     ffff  
    1792 00008a20     0b6f          CMPI    DIAGSP,SP
         00008a30 ffffba6f' 
    1793 00008a50     ca07          JRZ     PCPUTMP1
    1794 00008a60     0b6f          CMPI    BURNSP,SP
         00008a70 ffffbc5f' 
    1795 00008a90     ca03          JRZ     PCPUTMP1
    1796 00008aa0     09f0          MOVI    200000H,B0
         00008ab0 00200000  
    1797 00008ad0           PCPUTMP1
    1798 00008ad0     07a0          move    @_watchdog_addr,a0,L
         00008ae0 00000000! 
    1799 00008b00     8000          move    a0,*a0
    1800 00008b10     4c10          MOVE    B0,B0
    1801 00008b20     ce02          JRN     PCPUNOTIMEOUT
    1802 00008b30     1430          DEC     B0
    1803 00008b40     ca0d          JRZ     PCPURET                 ; TIMEOUT HERE
    1804 00008b50           PCPUNOTIMEOUT
    1805 00008b50                   FCALL   fudge_switches_diag,B6
    1806 00008b90     0b80          andi    BUTTONS|START_BITS,a0
         00008ba0 f9db0f0f  
    1807 00008bc0     4e31          MOVE    B1,A1
    1808 00008bd0     4801          CMP     A0,A1
    1809 00008be0     cb03          JRNZ    PCPURET
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1810 00008bf0     c0ed          JRUC    PCPUTMP1
    1811 00008c00           PCPUGOOD
    1812 00008c00     5600          CLR     A0
    1813 00008c10     c001          JRUC    PCPUREALRET
    1814 00008c20           PCPURET
    1815 00008c20     1820          MOVK    1,A0
    1816 00008c30           PCPUREALRET
    1817 00008c30     4c00          MOVE    A0,A0
    1818 00008c40                   FRET    SP
    1819                    
    1820 00008c50           DMACMESS
    1821 00008c50       43          .STRING "CHECKING CUSTOM",0
    1822 00008cd0                   .EVEN
    1823 00008cd0           DMABADMESS
    1824 00008cd0       43          .STRING "CUSTOM CHIP U33 BAD",0
    1825 00008d70                   .EVEN
    1826                    
    1827 00008d70           ROMCMESS
    1828 00008d70       43          .STRING "CHECKING ROMS",0
    1829 00008de0                   .EVEN
    1830 00008de0           ROMBADMESS
    1831 00008de0       52          .STRING "ROM CHIPS BAD",0
    1832 00008e50                   .EVEN
    1833                    
    1834 00008e50           RAMBADMESS
    1835 00008e50       52          .STRING "RAM CHIPS BAD",0
    1836 00008ec0                   .EVEN
    1837                    
    1838 00008ec0           SNDCMESS
    1839 00008ec0       43          .string "CHECKING SOUND SECTION",0
    1840 00008f80                   .even
    1841 00008f80           SNDBADMESS
    1842 00008f80       53          .string "SOUND SECTION BAD",0
    1843 00009010                   .even
    1844 00009010           PICCMESS
    1845 00009010       43          .string "CHECKING PIC CHIP",0
    1846 000090a0                   .even
    1847 000090a0           PICBADMESS
    1848 000090a0       50          .string "PIC CHIP BAD",0
    1849 00009110                   .even
    1850                    
    1851 00009110           CPUGOOD
    1852 00009110       43          .STRING "CPU BOARD OK",0
    1853 00009180                   .EVEN
    1854                    
    1855 00009180           CPUPAUSE
    1856 00009180       50          .STRING "PRESS ANY BUTTON",0
    1857 00009210                   .EVEN
    1858                    
    1859 00009210           CPUEXIT1_MESS
    1860 00009210       48          .STRING "HOLD START BUTTON",0
    1861 000092a0                   .EVEN
    1862 000092a0           CPUEXIT2_MESS
    1863 000092a0       54          .STRING "TO EXIT.",0
    1864 000092f0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

    1865                    
    1866                    
    1867                    **************************************************************************
    1868                    *                                                                        *
    1869                    *       CPUDRAW                                                          *
    1870                    *                                                                        *
    1871                    *       PLOT THE CPU BOARD AND DRAW ALL THE CHIPS                        *
    1872                    *                                                                        *
    1873                    *       ENTRY                                                            *
    1874                    *               B5      RETURN ADDRESS                                   *
    1875                    *                                                                        *
    1876                    *       EXIT                                                             *
    1877                    *               NOTHING                                                  *
    1878                    *                                                                        *
    1879                    **************************************************************************
    1880                    
    1881 000092f0           CPUDRAW:
    1882 000092f0     09e9          MOVI    CPU_VECS,A9             ; POINT AT VECTOR TABLE
         00009300 000165e0' 
    1883 00009320           CPUDLP1
    1884 00009320     9522          MOVE    *A9+,A2,W               ; GET COLOR
    1885 00009330     ca07          JRZ     CPUD1
    1886 00009340     9720          MOVE    *A9+,A0,L               ; START POINT
    1887 00009350     9721          MOVE    *A9+,A1,L               ; END POINT
    1888 00009360                   FCALL   HVLINE,B6
    1889 000093a0     c0f7          JRUC    CPUDLP1
    1890 000093b0           CPUD1
    1891 000093b0     4ebd          MOVE    B5,A13
    1892 000093c0                   FCALL   CHIPPLOT,B5             ; PLOT ALL THE CHIPS
    1893 00009400     09e0          MOVI    BOARDSTRING,A0
         00009410 00009630' 
    1894 00009430     05a1          move    @DIPSWITCH,a1,W
         00009440 01860020  
    1895 00009460     0b81          andi    DP4MEG_DIAG,a1
         00009470 fffffffb  
    1896 00009490     ca03          jrz     bdtype_4meg
    1897 000094a0     09e0          movi    BOARDSTRING1,a0
         000094b0 00009630' 
    1898 000094d0           bdtype_4meg:
    1899                    
    1900 000094d0     09e1          MOVI    [25,270],A1
         000094e0 0019010e  
    1901 00009500     5642          CLR     A2
    1902 00009510     09c3          MOVI    COLOR_WHITE,A3
         00009520     0202  
    1903 00009530                   FCALL   STRING,B6
    1904 00009570     09e0          MOVI    BOARDSTRING2,A0
         00009580 000096a0' 
    1905 000095a0     09e1          MOVI    [37,274],A1
         000095b0 00250112  
    1906 000095d0                   FCALL   STRING,B6
    1907 00009610     4fa5          MOVE    A13,B5
    1908 00009620                   FRET    B5
    1909                    
    1910 00009630           BOARDSTRING     
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

    1911 00009630           BOARDSTRING1:
    1912 00009630       41          .string "A-18968-40030",0
    1913 000096a0                   .EVEN
    1914                    
    1915 000096a0           BOARDSTRING2
    1916 000096a0       57          .STRING "WRESTLEMANIA",0
    1917 00009710                   .EVEN
    1918                    
    1919                    **************************************************************************
    1920                    *                                                                        *
    1921                    *       CHIPTABLE                                                        *
    1922                    *                                                                        *
    1923                    *       UPDATE A LIST OF CHIPS, BASED ON THEIR VALUES IN A12             *
    1924                    *                                                                        *
    1925                    *       ENTRY                                                            *
    1926                    *               A9      POINTER TO TABLE                                 *
    1927                    *               A12     LIST OF ON/OFF BITS                              *
    1928                    *               B5      RETURN ADDRESS                                   *
    1929                    *                                                                        *
    1930                    *       EXIT                                                             *
    1931                    *               NOTHING                                                  *
    1932                    *                                                                        *
    1933                    **************************************************************************
    1934                    
    1935 00009710           CHIPTABLE:
    1936 00009710     4ebe          MOVE    B5,A14
    1937 00009720           CTABLOOP
    1938 00009720     972a          MOVE    *A9+,A10,L              ; GET POINTER TO CHIP RECORD
    1939 00009730     ca0b          JRZ     CTABDONE
    1940 00009740     182b          MOVK    1,A11
    1941 00009750     b540          MOVE    *A10(CMNUM),A0,W        ; GET THE BIT NUMBER
         00009760     0000  
    1942 00009770     4a0c          BTST    A0,A12                  ; CHECK BIT NUMBER
    1943 00009780     ca01          JRZ     CTABL2
    1944 00009790     184b          MOVK    2,A11
    1945 000097a0           CTABL2
    1946 000097a0                   FCALL   CHIPOUT,B5
    1947 000097e0     c0f3          JRUC    CTABLOOP
    1948                    
    1949 000097f0           CTABDONE
    1950 000097f0     4fc5          MOVE    A14,B5
    1951 00009800                   FRET    B5
    1952                            
    1953                    **************************************************************************
    1954                    *                                                                        *
    1955                    *       CHIPPLOT                                                         *
    1956                    *                                                                        *
    1957                    *       PLOT OUT THE CHIP LIST                                           *
    1958                    *                                                                        *
    1959                    *       ENTRY                                                            *
    1960                    *               B5      RET VALUE                                        *
    1961                    *                                                                        *
    1962                    *       EXIT                                                             *
    1963                    *               NOTHING                                                  *
    1964                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    1965                    
    1966 00009810           CHIPPLOT:
    1967 00009810     4ebe          MOVE    B5,A14
    1968 00009820     09ea          MOVI    CPU_CHIPS,A10
         00009830 00016b00' 
    1969 00009850           CPPLOTLOOP
    1970 00009850     576b          CLR     A11
    1971 00009860     8740          MOVE    *A10,A0,L
    1972 00009870     ca07          JRZ     CPPLOTDONE
    1973 00009880                   FCALL   CHIPOUT,B5
    1974 000098c0     0b0a          ADDI    CMEND,A10
         000098d0     00d0  
    1975 000098e0     c0f6          JRUC    CPPLOTLOOP
    1976                    
    1977 000098f0           CPPLOTDONE
    1978 000098f0     4fc5          MOVE    A14,B5
    1979 00009900                   FRET    B5
    1980                            
    1981                    **************************************************************************
    1982                    *                                                                        *
    1983                    *       CHIPOUT                                                          *
    1984                    *                                                                        *
    1985                    *       ACTUALLY PLOT THE CHIP                                           *
    1986                    *                                                                        *
    1987                    *       ENTRY                                                            *
    1988                    *               A10     POINTS TO CHIP TO PLOT                           *
    1989                    *               A11     COLOR OF CHIP                                    *
    1990                    *                               00 = OUTLINE                             *
    1991                    *                               01 = GREEN                               *
    1992                    *                               02 = RED                                 *
    1993                    *                               03 = GREY                                *
    1994                    *                                                                        *
    1995                    *       EXIT                                                             *
    1996                    *               A10     IS INTACT                                        *
    1997                    *                                                                        *
    1998                    **************************************************************************
    1999                                    
    2000 00009910           CHIPOUT:
    2001 00009910     b745          MOVE    *A10(CMLOC),A5,L        ; CHIP OUTLINE
         00009920     0010  
    2002 00009930     4ca6          MOVE    A5,A6
    2003 00009940     4ca7          MOVE    A5,A7
    2004 00009950     4ca8          MOVE    A5,A8
    2005 00009960     b540          MOVE    *A10(CMXSIZE),A0,W
         00009970     0030  
    2006 00009980     4006          ADD     A0,A6
    2007 00009990     4007          ADD     A0,A7
    2008 000099a0     b540          MOVE    *A10(CMYSIZE),A0,W
         000099b0     0040  
    2009 000099c0     2600          SLL     16,A0
    2010 000099d0     4007          ADD     A0,A7
    2011 000099e0     4008          ADD     A0,A8
    2012 000099f0     4ca0          MOVE    A5,A0
    2013 00009a00     4cc1          MOVE    A6,A1
    2014 00009a10     09c2          MOVI    COLOR_WHITE,A2
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

         00009a20     0202  
    2015 00009a30                   FCALL   HVLINE,B6
    2016 00009a70     4cc0          MOVE    A6,A0
    2017 00009a80     4ce1          MOVE    A7,A1
    2018 00009a90     0b21          ADDI    [1,0],A1
         00009aa0 00010000  
    2019 00009ac0     09c2          MOVI    COLOR_WHITE,A2
         00009ad0     0202  
    2020 00009ae0                   FCALL   HVLINE,B6
    2021 00009b20     4d00          MOVE    A8,A0
    2022 00009b30     4ce1          MOVE    A7,A1
    2023 00009b40     09c2          MOVI    COLOR_WHITE,A2
         00009b50     0202  
    2024 00009b60                   FCALL   HVLINE,B6
    2025 00009ba0     4ca0          MOVE    A5,A0
    2026 00009bb0     4d01          MOVE    A8,A1
    2027 00009bc0     09c2          MOVI    COLOR_WHITE,A2
         00009bd0     0202  
    2028 00009be0                   FCALL   HVLINE,B6
    2029                    ;
    2030 00009c20     b540          MOVE    *A10(CMSTUFFED),A0,W    ; CHECK FOR STUFFED
         00009c30     00c0  
    2031 00009c40     cb01          JRNZ    CONOSTUF
    2032 00009c50     186b          MOVK    3,A11                   ; WANT IT GREY, DUDE
    2033                    
    2034 00009c60           CONOSTUF
    2035 00009c60     4d6b          MOVE    A11,A11                 ; CHECK FOR FILLING THE CHIP
    2036 00009c70     ca14          JRZ     CONOFILL
    2037 00009c80     b740          MOVE    *A10(CMLOC),A0,L
         00009c90     0010  
    2038 00009ca0     0b20          ADDI    00010001H,A0
         00009cb0 00010001  
    2039 00009cd0     b741          MOVE    *A10(CMSIZE),A1,L
         00009ce0     0030  
    2040 00009cf0     0d01          SUBI    00010001H,A1            ; GET INTERNAL AREA
         00009d00 fffefffe  
    2041 00009d20     4d62          MOVE    A11,A2
    2042 00009d30     2482          SLL     4,A2
    2043 00009d40     0b22          ADDI    CHIPCOLORS,A2
         00009d50 00009f90' 
    2044 00009d70     8442          MOVE    *A2,A2,W                ; GET ME A COLOR
    2045 00009d80                   FCALL   RECTANGLE,B6
    2046 00009dc0           CONOFILL
    2047 00009dc0     b741          MOVE    *A10(CMPINLOC),A1,L     ; PIN LOCATION
         00009dd0     00a0  
    2048 00009de0     4ca0          MOVE    A5,A0
    2049 00009df0     4020          ADD     A1,A0
    2050 00009e00     09c1          MOVI    COLOR_WHITE,A1
         00009e10     0202  
    2051 00009e20                   FCALL   POINT,B6
    2052                    
    2053 00009e60     b740          MOVE    *A10(CMSTRING),A0,L     ; CHIP TEXT
         00009e70     0070  
    2054 00009e80     4ca1          MOVE    A5,A1
    2055 00009e90     b742          MOVE    *A10(CMOFFSET),A2,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

         00009ea0     0050  
    2056 00009eb0     4041          ADD     A2,A1
    2057 00009ec0     b542          MOVE    *A10(CMDIR),A2,W
         00009ed0     0090  
    2058 00009ee0     09c3          MOVI    COLOR_BLACK,A3
         00009ef0     1414  
    2059 00009f00     4d6b          MOVE    A11,A11                 ; CHECK FOR COLOR
    2060 00009f10     cb02          JRNZ    COBLACK
    2061 00009f20     09c3          MOVI    COLOR_WHITE,A3
         00009f30     0202  
    2062 00009f40           COBLACK
    2063 00009f40                   FCALL   STRING,B6
    2064 00009f80                   FRET    B5
    2065                    
    2066 00009f90           CHIPCOLORS:
    2067 00009f90     1414          .WORD   COLOR_BLACK
    2068 00009fa0     0606          .WORD   COLOR_GREEN
    2069 00009fb0     0303          .WORD   COLOR_RED
    2070 00009fc0     0101          .WORD   COLOR_GREY
    2071                    
    2072                    **************************************************************************
    2073                    *                                                                        *
    2074                    *       DMACHECK                                                         *
    2075                    *                                                                        *
    2076                    *       CHECK THE DMA OUT                                                *
    2077                    *                                                                        *
    2078                    *       ENTRY                                                            *
    2079                    *               B5      RETURN ADDRESS                                   *
    2080                    *                                                                        *
    2081                    *       EXIT                                                             *
    2082                    *               A0      DMA STATUS                                       *
    2083                    *                               0 = GOOD                                 *
    2084                    *                               1 = BAD                                  *
    2085                    *                                                                        *
    2086                    **************************************************************************
    2087 00009fd0           DMACHECK
    2088 00009fd0     0570          setf    16,1,0
    2089 00009fe0     07a0          move    @_watchdog_addr,a0,L
         00009ff0 00000000! 
    2090 0000a010     8000          move    a0,*a0
    2091 0000a020     57ce          CLR     A14
    2092 0000a030     058e          MOVE    A14,@DMACTRL,W
         0000a040 01a00010  
    2093 0000a060     058e          MOVE    A14,@DMACTRL,W
         0000a070 01a00010  
    2094                    
    2095 0000a090     1a0e          MOVK    DMACF4,A14
    2096 0000a0a0     058e          MOVE    A14,@DMACONF,W          ;ADJUST WINDOW RIGHT/LEFT BORDER
         0000a0b0 01a000f0  
    2097 0000a0d0     09ee          MOVI    [511,0],A14
         0000a0e0 01ff0000  
    2098 0000a100     078e          MOVE    A14,@DMAWINDOW,L        ;OPEN LEFT TO RIGHT
         0000a110 01a000c0  
    2099 0000a130     09ce          MOVI    DMAWIN|DMACF4,A14
         0000a140     0030  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

    2100 0000a150     058e          MOVE    A14,@DMACONF,W          ;ADJUST WINDOW RIGHT/LEFT BORDER
         0000a160 01a000f0  
    2101 0000a180     09ee          MOVI    [511,0],A14
         0000a190 01ff0000  
    2102 0000a1b0     078e          MOVE    A14,@DMAWINDOW,L        ;FULL HEIGHT WINDOW
         0000a1c0 01a000c0  
    2103 0000a1e0     09ee          MOVI    [100H,100H],A14
         0000a1f0 01000100  
    2104 0000a210     078e          MOVE    A14,@DMASCALEX,L
         0000a220 01a000a0  
    2105                    
    2106 0000a240     09ee          MOVI    [1,448],A14             ;BLOW OUT TRADEMARK
         0000a250 000101c0  
    2107 0000a270     078e          MOVE    A14,@DMAHSIZE,L
         0000a280 01a00060  
    2108                    
    2109 0000a2a0     57ce          CLR     A14
    2110 0000a2b0     058e          MOVE    A14,@DMAOFFST,W         ;OFFSET
         0000a2c0 01a00000  
    2111 0000a2e0     058e          MOVE    A14,@DMACONST,W         ;CONSTANT
         0000a2f0 01a00090  
    2112 0000a310     078e          MOVE    A14,@DMAHORIZ,L         ;CLEAR DESTINATION ADDRESS
         0000a320 01a00040  
    2113                    
    2114 0000a340     57ce          clr     a14
    2115 0000a350     078e          MOVE    A14,@DMASAGL,L
         0000a360 01a00020  
    2116                    
    2117 0000a380     09ce          MOVI    257,A14
         0000a390     0101  
    2118 0000a3a0     058e          MOVE    A14,@DMAVERT,W          ;OFFSCREEN PLOT
         0000a3b0 01a00050  
    2119                    
    2120 0000a3d0     09ce          MOVI    0505H,A14
         0000a3e0     0505  
    2121 0000a3f0     058e          MOVE    A14,@DMACMAP,W
         0000a400 01a00080  
    2122                    
    2123 0000a420     09ee          MOVI    8003H,A14               ;USE IMAGE ROM - WRITE ALWAYS
         0000a430 00008003  
    2124 0000a450     058e          MOVE    A14,@DMACTRL,W          ;KICK OFF THE DMA
         0000a460 01a00010  
    2125                    
    2126 0000a480     09ce          MOVI    7FFFH,A14               ;LOAD TIMEOUT COUNTER
         0000a490     7fff  
    2127 0000a4a0           DMACWAIT
    2128 0000a4a0     07a0          move    @_watchdog_addr,a0,L
         0000a4b0 00000000! 
    2129 0000a4d0     8000          move    a0,*a0
    2130 0000a4e0     05a0          MOVE    @DMACTRL,A0,W           ;DMA BUSY?
         0000a4f0 01a00010  
    2131 0000a510     cf02          JRNN    DMADONE                 ;BR = NO, TIME TO CHECK
    2132 0000a520     3d2e          DSJS    A14,DMACWAIT
    2133 0000a530     c028          JRUC    DMACBAD                 ;DMA TIMED OUT
    2134                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

    2135 0000a540           DMADONE
    2136 0000a540     5600          CLR     A0                      ;GET BACK TO A REAL PALETTE
    2137 0000a550     0580          MOVE    A0,@DMACMAP,W
         0000a560 01a00080  
    2138 0000a580     09e0          MOVI    0101000H,A0             ;LINEAR SCREEN LOCATION OF DATA
         0000a590 00101000  
    2139 0000a5b0     09e1          MOVI    2000000H,A1             ;DMA LOGO LOCATION
         0000a5c0 02000000  
    2140 0000a5e0     09c2          MOVI    448,A2                  ;NUMBER OF BYTES TO COMPARE
         0000a5f0     01c0  
    2141 0000a600           DMACLOOP             
    2142 0000a600     8e03          MOVB    *A0,A3                  ;DESTINATION BYTE
    2143 0000a610     8e24          MOVB    *A1,A4                  ;SOURCE BYTE
    2144 0000a620     1100          ADDK    8,A0
    2145 0000a630     1101          ADDK    8,A1
    2146 0000a640     4864          CMP     A3,A4
    2147 0000a650     cb16          JRNZ    DMACBAD                 ;BR = DATA ERROR
    2148 0000a660     3ce2          DSJS    A2,DMACLOOP
    2149                    *
    2150                    *CHECK DATA IN OBJECT PALETTE
    2151                    *
    2152                    
    2153                            .if     WWFUNIT
    2154 0000a670     09ed          movi    SYSCINIT,a13
         0000a680 0000987f  
    2155 0000a6a0     0b8d          andni   PALENB,a13
         0000a6b0 00000800  
    2156                            .else
    2157                            MOVI    PAL_SELECT,A13
    2158                            .endif
    2159                    
    2160 0000a6d0     058d          MOVE    A13,@SYSCTRL,W          ;ENABLE PALETTE
         0000a6e0 01b00000  
    2161                    
    2162 0000a700     09e0          MOVI    0101000H,A0             ;LOCATION
         0000a710 00101000  
    2163 0000a730     09c2          MOVI    224,A2                  ;NUMBER OF WORDS TO COMPARE
         0000a740     00e0  
    2164 0000a750           DMACLOOP2
    2165 0000a750     9403          MOVE    *A0+,A3,W
    2166 0000a760     0b43          CMPI    0505H,A3
         0000a770     fafa  
    2167 0000a780     cb03          JRNZ    DMACBAD
    2168 0000a790     3ca2          DSJS    A2,DMACLOOP2
    2169 0000a7a0     5600          CLR     A0
    2170 0000a7b0     c00b          JRUC    DMACRET
    2171 0000a7c0           DMACBAD
    2172 0000a7c0     5600          CLR     A0                      ;GET BACK TO A REAL PALETTE
    2173 0000a7d0     0580          MOVE    A0,@DMACTRL,W
         0000a7e0 01a00010  
    2174 0000a800     0580          MOVE    A0,@DMACTRL,W
         0000a810 01a00010  
    2175 0000a830     0580          MOVE    A0,@DMACMAP,W
         0000a840 01a00080  
    2176 0000a860     1820          MOVK    1,A0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

    2177 0000a870           DMACRET
    2178                    
    2179                            .if WWFUNIT
    2180 0000a870     09ed          movi    SYSCINIT,a13
         0000a880 0000987f  
    2181                            .else
    2182                            MOVI    0FFFCH,A13
    2183                            .endif
    2184                    
    2185 0000a8a0     058d          MOVE    A13,@SYSCTRL,W
         0000a8b0 01b00000  
    2186                    
    2187 0000a8d0     0550          SETF    16,0,0
    2188                    
    2189 0000a8e0     4c00          MOVE    A0,A0
    2190 0000a8f0                   FRET    B5
    2191                    
    2192                    
    2193              8000  DOG_COUNT       .EQU    8000H   ;EVERY 32K
    2194                            .align
    2195                    **************************************************************************
    2196                    *                                                                        *
    2197                    *       RAMCHECK                                                         *
    2198                    *                                                                        *
    2199                    *       CHECK A BANK OF RAM, GIVEN A STARTING TABLE ADDRESS              *
    2200                    *                                                                        *
    2201                    *       ENTRY                                                            *
    2202                    *               A14     POINTER TO RAM TABLE                             *
    2203                    *               B5      RETURN ADDRESS                                   *
    2204                    *                                                                        *
    2205                    *       EXIT                                                             *
    2206                    *               B0      LIST OF ERRORS                                   *
    2207                    *                                                                        *
    2208                    **************************************************************************
    2209                    
    2210 0000aa00           RAMCHECK:
    2211 0000aa00     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000aa10 01860030  
    2212                                                            ; The scratch ram test trashes
    2213                                                            ; the data at _watchdog address
    2214 0000aa30     0550          SETF    16,0,0
    2215 0000aa40     0740          SETF    32,0,1
    2216                    
    2217                    ;       SNAG NEXT CHIP RECORD
    2218                    
    2219 0000aa50           RAMLOOP:
    2220 0000aa50     5652          CLR     B2
    2221 0000aa60     b7cc          MOVE    *A14(RAM_SADR),A12,L    ; STARTING ADDRESS
         0000aa70     0030  
    2222 0000aa80     b7cd          MOVE    *A14(RAM_EADR),A13,L    ; ENDING ADDRESS
         0000aa90     0050  
    2223 0000aaa0     b5cb          MOVE    *A14(RAM_ITLV),A11,W    ; INTERLEAVE
         0000aab0     0010  
    2224 0000aac0     b5ca          MOVE    *A14(RAM_WDTH),A10,W    ; WIDTH
         0000aad0     0000  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

    2225                    
    2226                    ;       CELL COUNT
    2227                    
    2228 0000aae0     458d          SUB     A12,A13                   ; (END-START)/INTERLEAVE+1
    2229 0000aaf0     5b6d          DIVU    A11,A13
    2230 0000ab00     102d          INC     A13
    2231                    
    2232                    ;       SET FIELD SIZES
    2233                    
    2234 0000ab10     4d69          MOVE    A11,A9                  ; FS1 = INTERLEAVE
    2235 0000ab20     0b89          ANDI    ZERO_EXTEND,A9
         0000ab30 ffffffe0  
    2236 0000ab50     d709          EXGF    A9,1
    2237                    
    2238 0000ab60     4d49          MOVE    A10,A9                  ; FS0 = WIDTH
    2239 0000ab70     0b89          ANDI    ZERO_EXTEND,A9
         0000ab80 ffffffe0  
    2240 0000aba0     d509          EXGF    A9,0
    2241                    
    2242                    ;       FILL IN ASCENDING ORDER
    2243                    
    2244 0000abb0     4da9          MOVE    A13,A9                    ; XEROX COUNT
    2245 0000abc0     4d88          MOVE    A12,A8                    ; XEROX START
    2246                    
    2247 0000abd0     09e7          MOVI    RANDOM_SEED,A7
         0000abe0 5a5a5a5a  
    2248 0000ac00     56a5          CLR     A5
    2249 0000ac10     09fe          MOVI    DOG_COUNT,B14
         0000ac20 00008000  
    2250                    
    2251 0000ac40           RAC1
    2252 0000ac40     2027          SLA     1,A7                    ; GENERATE A PSEUDO
    2253 0000ac50     cc02          JRV     RAC2                    ; RANDOM NUMBER
    2254 0000ac60     1844          movk    2,a4
    2255 0000ac70     5487          or      a4,a7
    2256 0000ac80           RAC2
    2257 0000ac80     4ce6          MOVE    A7,A6
    2258 0000ac90     42a6          ADDC    A5,A6
    2259                    
    2260 0000aca0     92c8          MOVE    A6,*A8+,1               ; WRITE
    2261 0000acb0     38de          DSJS    B14,RAC1_NODOG
    2262 0000acc0     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000acd0 01860030  
    2263                                                            ; The scratch ram test trashes
    2264                                                            ; the data at _watchdog address
    2265 0000acf0     09fe          MOVI    DOG_COUNT,B14           ;AND RELOAD COUNT
         0000ad00 00008000  
    2266 0000ad20           RAC1_NODOG
    2267 0000ad20     3de9          DSJS    A9,RAC1
    2268                    
    2269                                                            ;READBACK IN ASCENDING ORDER
    2270 0000ad30     4da9          MOVE    A13,A9                  ; XEROX COUNT
    2271 0000ad40     4d88          MOVE    A12,A8                  ; XEROX START
    2272                    
    2273 0000ad50     09e7          MOVI    RANDOM_SEED,A7
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

         0000ad60 5a5a5a5a  
    2274 0000ad80     09fe          MOVI    DOG_COUNT,B14
         0000ad90 00008000  
    2275                    
    2276 0000adb0     2027  RAC3    SLA     1,A7                    ; GENERATE A PSEUDO
    2277 0000adc0     cc02          JRV     RAC4                    ; RANDOM NUMBER
    2278 0000add0     1844          movk    2,a4
    2279 0000ade0     5487          or      a4,a7
    2280 0000adf0     4ce6  RAC4    MOVE    A7,A6
    2281 0000ae00     42a6          ADDC    A5,A6
    2282                    
    2283 0000ae10     8504          move    *a8,a4,0                ;Read
    2284 0000ae20     4168          add     a11,a8
    2285 0000ae30     0526          ZEXT    A6
    2286                    
    2287 0000ae40     48c4          CMP     A6,A4
    2288 0000ae50     cb09          jrne    rac5                    ;Error?
    2289                    
    2290 0000ae60     38de          DSJS    B14,RAC5_NODOG
    2291 0000ae70     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000ae80 01860030  
    2292                                                            ; The scratch ram test trashes
    2293                                                            ; the data at _watchdog address
    2294 0000aea0     09fe          MOVI    DOG_COUNT,B14           ;AND RELOAD COUNT
         0000aeb0 00008000  
    2295 0000aed0           RAC5_NODOG
    2296 0000aed0     3e69          DSJS    A9,RAC3
    2297                    
    2298 0000aee0     c008          jruc    showstat
    2299                    
    2300 0000aef0           rac5                                    ;Error!
    2301 0000aef0     0550          SETF    16,0,0                  ; RESET FIELDS
    2302 0000af00     0740          SETF    32,0,1
    2303 0000af10     b5c4          MOVE    *A14(RAM_NMBR),A4,W     ; GET BIT NUMBER TO SET
         0000af20     0020  
    2304 0000af30     4e81          MOVE    A4,B1
    2305 0000af40     1832          MOVK    1,B2
    2306 0000af50     6232          SLL     B1,B2
    2307 0000af60     5450          OR      B2,B0                   ; SET THAT BIT
    2308                    
    2309                    
    2310 0000af70           showstat
    2311 0000af70     0550          SETF    16,0,0                  ; RESET FIELDS
    2312 0000af80     0740          SETF    32,0,1
    2313 0000af90     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000afa0 01860030  
    2314                                                            ; The scratch ram test trashes
    2315                                                            ; the data at _watchdog address
    2316                    
    2317                    
    2318                    ;       B1 SHOULD BE ZERO IF THE CHIP IS COOL HERE
    2319                    
    2320 0000afc0     b7ca          MOVE    *A14(RAM_LINK),A10,L
         0000afd0     0070  
    2321 0000afe0     ca0c          JRZ     RAMNOPLOT
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2322 0000aff0     182b          MOVK    1,A11
    2323 0000b000     4c52          MOVE    B2,B2
    2324 0000b010     ca01          JRZ     RAMPLOT
    2325 0000b020     184b          MOVK    2,A11
    2326 0000b030           RAMPLOT
    2327 0000b030     4eb9          MOVE    B5,A9                   ; I HOPE THIS ONE IS SAFE!
    2328 0000b040     4e1d          MOVE    B0,A13
    2329 0000b050                   FCALL   CHIPOUT,B5
    2330 0000b090     4fa0          MOVE    A13,B0
    2331 0000b0a0     4f25          MOVE    A9,B5
    2332                    
    2333 0000b0b0           RAMNOPLOT
    2334 0000b0b0     0b0e          ADDI    RAM_SIZE,A14            ; ADVANCE TO NEXT GUY
         0000b0c0     0090  
    2335 0000b0d0     85c7          MOVE    *A14,A7,W
    2336 0000b0e0     cb96          JRNZ    RAMLOOP                 ; HERE WE GO AGAIN
    2337 0000b0f0                   FRET    B5
    2338                    
    2339                    
    2340                    **************************************************************************
    2341                    *                                                                        *
    2342                    * ROMCHECK - ROUTINE TO CHECKSUM THE PROGRAM AND IMAGE ROMS.             *
    2343                    * RETURNS                                                                *
    2344                    *       B0  = BITS SET FOR BAD ROMS.                                     *
    2345                    *        Z = TEST FINISHED.                                              *
    2346                    *       NZ = TEST ABORTED BY USER.                                       *
    2347                    *                                                                        *
    2348                    **************************************************************************
    2349                            .align
    2350                    
    2351 0000b200           ROMCHECK:
    2352 0000b200     07a0          move    @_watchdog_addr,a0,L
         0000b210 00000000! 
    2353 0000b230     8000          move    a0,*a0
    2354 0000b240           ROMLOOP 
    2355 0000b240     5652          CLR     B2
    2356 0000b250     b5cd          MOVE    *A14(ROM_CKSM),A13,W    ; CHECK TO SEE IF ROM SOCKET THERE
         0000b260     0000  
    2357 0000b270     ca4e          JRZ     ROMEMPTY
    2358 0000b280     5708          CLR     A8                      ; CHECKSUM
    2359                    
    2360 0000b290     09fe          MOVI    DOG_COUNT,B14
         0000b2a0 00008000  
    2361                    
    2362 0000b2c0     b7cc          MOVE    *A14(ROM_SADR),A12,L    ; STARTING ADDRESS
         0000b2d0     0040  
    2363 0000b2e0     b7cd          MOVE    *A14(ROM_EADR),A13,L    ; ENDING ADDRESS
         0000b2f0     0060  
    2364 0000b300     b5cb          MOVE    *A14(ROM_ITLV),A11,W    ; INTERLEAVE
         0000b310     0020  
    2365                    ;
    2366                    ;       SUM UP A GIVEN IMAGE ROM -- THE TUNIT WAY
    2367                    ;
    2368 0000b320     458d          SUB     A12,A13                 ; (( EADDR - SADDR ) / INTERLEAVE) + 1
    2369 0000b330     5b6d          DIVU    A11,A13
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

    2370 0000b340     102d          INC     A13
    2371 0000b350     0748          setf    8,0,1
    2372 0000b360           rcilp
    2373 0000b360     8787          move    *a12,a7,1               ;Get a byte
    2374 0000b370     416c          add     a11,a12
    2375 0000b380     40e8          add     a7,a8
    2376 0000b390     393e          dsjs    b14,rcilp_nodog
    2377 0000b3a0     0740          setf    32,0,1
    2378 0000b3b0     07a0          move    @_watchdog_addr,a0,L
         0000b3c0 00000000! 
    2379 0000b3e0     8000          move    a0,*a0
    2380 0000b3f0     0748          setf    8,0,1
    2381 0000b400     09fe          movi    DOG_COUNT,b14           ;AND RELOAD COUNT
         0000b410 00008000  
    2382 0000b430           rcilp_nodog
    2383 0000b430     3dcd          dsjs    a13,rcilp
    2384                    
    2385 0000b440     0740          setf    32,0,1
    2386                    
    2387                    *LAND HERE FROM IMAGE CHECKSUM TO DETERMINE IF WE HIT IT
    2388                    ;ROMCKCK
    2389 0000b450     b5c7          MOVE    *A14(ROM_CKSM),A7,W
         0000b460     0000  
    2390 0000b470           ROM_COMPARE
    2391 0000b470     0527          ZEXT    A7
    2392 0000b480     0528          ZEXT    A8
    2393 0000b490     48e8          CMP     A7,A8
    2394 0000b4a0     ca06          JRZ     ROMRELOOP
    2395 0000b4b0     b5c4          MOVE    *A14(ROM_NMBR),A4,W     ; GET BIT NUMBER TO SET
         0000b4c0     0030  
    2396 0000b4d0     4e81          MOVE    A4,B1
    2397 0000b4e0     1832          MOVK    1,B2
    2398 0000b4f0     6232          SLL     B1,B2
    2399 0000b500     5450          OR      B2,B0                   ; SET THAT BIT
    2400 0000b510           ROMRELOOP
    2401 0000b510     07a0          move    @_watchdog_addr,a0,L
         0000b520 00000000! 
    2402 0000b540     8000          move    a0,*a0
    2403 0000b550     b7ca          MOVE    *A14(ROM_LINK),A10,L
         0000b560     0080  
    2404 0000b570     ca0c          JRZ     ROMNOPLOT
    2405 0000b580     182b          MOVK    1,A11
    2406 0000b590     4c52          MOVE    B2,B2
    2407 0000b5a0     ca01          JRZ     ROMPLOT
    2408 0000b5b0     184b          MOVK    2,A11
    2409 0000b5c0           ROMPLOT
    2410 0000b5c0     4eb9          MOVE    B5,A9                   ; I HOPE THIS ONE IS SAFE!
    2411 0000b5d0     4e1d          MOVE    B0,A13
    2412 0000b5e0                   FCALL   CHIPOUT,B5
    2413 0000b620     4fa0          MOVE    A13,B0
    2414 0000b630     4f25          MOVE    A9,B5
    2415                    
    2416 0000b640           ROMNOPLOT
    2417 0000b640     0b0e          ADDI    ROM_SIZE,A14
         0000b650     00a0  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   55

    2418                    *CHECKING FOR EARLY EXIT BY OPERATOR
    2419 0000b660     07ad          move    @_coin_addr,a13,L
         0000b670 00000000! 
    2420 0000b690     85ad          move    *a13,a13,W
    2421 0000b6a0     260d          sll     16,a13
    2422 0000b6b0     0b8d          ANDI    START_BITS,A13
         0000b6c0 f9dbffff  
    2423 0000b6e0     0b6d          CMPI    START_BITS,A13
         0000b6f0 f9dbffff  
    2424 0000b710     cb01          JRNE    ROMABORT
    2425 0000b720     c0b1          JRUC    ROMLOOP                 ;BACK FOR THE NEXT
    2426                    *HERE ON OPERATOR ABORT
    2427 0000b730           ROMABORT
    2428 0000b730                   CLRZ
    2429 0000b750                   FRET    B5
    2430 0000b760           ROMEMPTY
    2431 0000b760     578c          clr     a12
    2432 0000b770                   setz
    2433 0000b780                   FRET    B5
    2434                    
    2435                    
    2436                    **************************************************************************
    2437                    *                                                                        *
    2438                    *       MONITOR STUFF                                                    *
    2439                    *                                                                        *
    2440                    **************************************************************************
    2441 0000b790           CROSS_H
    2442 0000b790           CONV_PLOT
    2443 0000b790     09e9          MOVI    MON_RECS,A9
         0000b7a0 0000be50' 
    2444 0000b7c0           CPRLP1
    2445 0000b7c0     9522          MOVE    *A9+,A2,W               ; GET COLOR
    2446 0000b7d0     ca07          JRZ     CPRDONE
    2447 0000b7e0     9720          MOVE    *A9+,A0,L               ; START POINT
    2448 0000b7f0     9721          MOVE    *A9+,A1,L               ; DIMENSIONS
    2449 0000b800                   FCALL   RECTANGLE,B6
    2450 0000b840     c0f7          JRUC    CPRLP1
    2451 0000b850           CPRDONE
    2452 0000b850     09e9          MOVI    MON_VECS,A9             ; POINT AT VECTOR TABLE
         0000b860 0000b9d0' 
    2453 0000b880           CPVLP1
    2454 0000b880     9522          MOVE    *A9+,A2,W               ; GET COLOR
    2455 0000b890     ca07          JRZ     CPVDONE
    2456 0000b8a0     9720          MOVE    *A9+,A0,L               ; START POINT
    2457 0000b8b0     9721          MOVE    *A9+,A1,L               ; END POINT
    2458 0000b8c0                   FCALL   HVLINE,B6
    2459 0000b900     c0f7          JRUC    CPVLP1
    2460 0000b910           CPVDONE
    2461 0000b910     09e9          MOVI    MON_DOTS,A9             ; POINT AT DOT TABLE
         0000b920 0000c0f0' 
    2462 0000b940           CPDLP1
    2463 0000b940     9521          MOVE    *A9+,A1,W               ; GET COLOR
    2464 0000b950     ca06          JRZ     CPDDONE
    2465 0000b960     9720          MOVE    *A9+,A0,L               ; GET THE POINT
    2466 0000b970                   FCALL   POINT,B6
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   56

    2467 0000b9b0     c0f8          JRUC    CPDLP1
    2468 0000b9c0           CPDDONE
    2469 0000b9c0     0960          RETS
    2470                    **************************************************************************
    2471                    *                                                                        *
    2472                    *       MONITOR TEST DATA AREA                                           *
    2473                    *                                                                        *
    2474                    **************************************************************************
    2475                    
    2476 0000b9d0           MON_VECS:
    2477 0000b9d0                   VECMAC  ROBO_WHITE,004,004,390,004
    2478 0000ba20                   VECMAC  ROBO_WHITE,004,004,004,250
    2479 0000ba70                   VECMAC  ROBO_WHITE,004,250,390,250
    2480 0000bac0                   VECMAC  ROBO_WHITE,390,250,390,004
    2481 0000bb10                   VECMAC  ROBO_WHITE,060,005,060,250
    2482 0000bb60                   VECMAC  ROBO_WHITE,115,005,115,250
    2483 0000bbb0                   VECMAC  ROBO_WHITE,170,005,170,250
    2484 0000bc00                   VECMAC  ROBO_WHITE,225,005,225,250
    2485 0000bc50                   VECMAC  ROBO_WHITE,280,005,280,250
    2486 0000bca0                   VECMAC  ROBO_WHITE,335,005,335,250
    2487 0000bcf0                   VECMAC  ROBO_WHITE,005,054,390,054
    2488 0000bd40                   VECMAC  ROBO_WHITE,005,103,390,103
    2489 0000bd90                   VECMAC  ROBO_WHITE,005,152,390,152
    2490 0000bde0                   VECMAC  ROBO_WHITE,005,201,390,201
    2491 0000be30 00000000          .LONG   0
    2492                    
    2493 0000be50           MON_RECS:
    2494 0000be50                   VECMAC  ROBO_RED,       182,000,030,005 ; TOP
    2495 0000bea0                   VECMAC  ROBO_GREEN,     182,005,030,006
    2496 0000bef0                   VECMAC  ROBO_RED,       182,250,030,005 ; BOTTOM
    2497 0000bf40                   VECMAC  ROBO_GREEN,     182,244,030,006
    2498 0000bf90                   VECMAC  ROBO_RED,       000,117,005,020 ; LEFT
    2499 0000bfe0                   VECMAC  ROBO_GREEN,     005,117,006,020
    2500 0000c030                   VECMAC  ROBO_RED,       390,117,005,020 ; RIGHT
    2501 0000c080                   VECMAC  ROBO_GREEN,     384,117,006,020
    2502 0000c0d0 00000000          .LONG   0
    2503                    
    2504 0000c0f0           MON_DOTS:
    2505 0000c0f0                   DOTMAC  ROBO_WHITE,032,029
    2506 0000c120                   DOTMAC  ROBO_WHITE,087,029
    2507 0000c150                   DOTMAC  ROBO_WHITE,142,029
    2508 0000c180                   DOTMAC  ROBO_WHITE,197,029
    2509 0000c1b0                   DOTMAC  ROBO_WHITE,252,029
    2510 0000c1e0                   DOTMAC  ROBO_WHITE,307,029
    2511 0000c210                   DOTMAC  ROBO_WHITE,362,029
    2512                    
    2513 0000c240                   DOTMAC  ROBO_WHITE,032,078
    2514 0000c270                   DOTMAC  ROBO_WHITE,087,078
    2515 0000c2a0                   DOTMAC  ROBO_WHITE,142,078
    2516 0000c2d0                   DOTMAC  ROBO_WHITE,197,078
    2517 0000c300                   DOTMAC  ROBO_WHITE,252,078
    2518 0000c330                   DOTMAC  ROBO_WHITE,307,078
    2519 0000c360                   DOTMAC  ROBO_WHITE,362,078
    2520                    
    2521 0000c390                   DOTMAC  ROBO_WHITE,032,127
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   57

    2522 0000c3c0                   DOTMAC  ROBO_WHITE,087,127
    2523 0000c3f0                   DOTMAC  ROBO_WHITE,142,127
    2524 0000c420                   DOTMAC  ROBO_WHITE,197,127
    2525 0000c450                   DOTMAC  ROBO_WHITE,252,127
    2526 0000c480                   DOTMAC  ROBO_WHITE,307,127
    2527 0000c4b0                   DOTMAC  ROBO_WHITE,362,127
    2528                    
    2529 0000c4e0                   DOTMAC  ROBO_WHITE,032,176
    2530 0000c510                   DOTMAC  ROBO_WHITE,087,176
    2531 0000c540                   DOTMAC  ROBO_WHITE,142,176
    2532 0000c570                   DOTMAC  ROBO_WHITE,197,176
    2533 0000c5a0                   DOTMAC  ROBO_WHITE,252,176
    2534 0000c5d0                   DOTMAC  ROBO_WHITE,307,176
    2535 0000c600                   DOTMAC  ROBO_WHITE,362,176
    2536                    
    2537 0000c630                   DOTMAC  ROBO_WHITE,032,225
    2538 0000c660                   DOTMAC  ROBO_WHITE,087,225
    2539 0000c690                   DOTMAC  ROBO_WHITE,142,225
    2540 0000c6c0                   DOTMAC  ROBO_WHITE,197,225
    2541 0000c6f0                   DOTMAC  ROBO_WHITE,252,225
    2542 0000c720                   DOTMAC  ROBO_WHITE,307,225
    2543 0000c750                   DOTMAC  ROBO_WHITE,362,225
    2544 0000c780 00000000          .LONG   0
    2545                    
    2546 0000c7a0           PRIMARY_COLORS:
    2547 0000c7a0                   RECTMAC ROBO_RED,0,0,395,255
    2548 0000c7f0                   RECTMAC ROBO_GREEN,0,0,395,255
    2549 0000c840                   RECTMAC ROBO_BLUE,0,0,395,255
    2550 0000c890 00000000          .LONG   0
    2551                    
    2552 0000c8b0           COLOR_BARS:
    2553                    
    2554 0000c8b0                   RECTMAC ROBO_BLACK,   0, 0, 49, 16
    2555 0000c900                   RECTMAC ROBO_BLACK,  49, 0, 49, 16
    2556 0000c950                   RECTMAC ROBO_BLACK,  98, 0, 49, 16
    2557 0000c9a0                   RECTMAC ROBO_BLACK, 147, 0, 49, 16
    2558 0000c9f0                   RECTMAC ROBO_BLACK, 196, 0, 49, 16      
    2559 0000ca40                   RECTMAC ROBO_BLACK, 245, 0, 49, 16
    2560 0000ca90                   RECTMAC ROBO_BLACK, 294, 0, 49, 16
    2561 0000cae0                   RECTMAC ROBO_BLACK, 343, 0, 49, 16
    2562 0000cb30 00000000          .LONG   0
    2563                    
    2564                    
    2565                    
    2566                    **************************************************************************
    2567                    *                                                                        *
    2568                    *       COLORBAR                                                         *
    2569                    *                                                                        *
    2570                    **************************************************************************
    2571 0000cb50           COL_BARS
    2572 0000cb50           COLORBAR
    2573                    
    2574 0000cb50     09e0          MOVI    INTENSITIES_START,A0,L
         0000cb60 0000cf10' 
    2575 0000cb80     09e1          MOVI    COLRAM+100H,A1,L
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   58

         0000cb90 01880100  
    2576                    
    2577 0000cbb0     1a02          MOVK    16, A2                  ;5 BITS / COLOR
    2578 0000cbc0     1906          MOVK    8, A6                   ;# COLOR BARS
    2579 0000cbd0           CB3
    2580 0000cbd0     0b01          ADDI    0F00H,A1                        ;STEP TO NEXT PALETTE
         0000cbe0     0f00  
    2581 0000cbf0     9403          MOVE    *A0+,A3                 ;STARTING COLOR
    2582 0000cc00     9404          MOVE    *A0+,A4                 ;COLOR DECREMENT
    2583                    
    2584 0000cc10     4c45          MOVE    A2,A5
    2585                    
    2586 0000cc20     9061  CB4     MOVE    A3,*A1+
    2587 0000cc30     4483          SUB     A4,A3
    2588 0000cc40     3c65          DSJS    A5,CB4
    2589 0000cc50     3d26          DSJS    A6,CB3
    2590                    
    2591                    ;       =========================
    2592                    ;       | DISPLAY COLOR BARS    |
    2593                    ;       =========================
    2594                    
    2595 0000cc60     57ce          CLR     A14
    2596 0000cc70     058e          MOVE    A14,@DMACTRL,W          ; HALT THE DMA
         0000cc80 01a00010  
    2597 0000cca0     058e          MOVE    A14,@DMACTRL,W
         0000ccb0 01a00010  
    2598 0000ccd0     09ce          MOVI    0101H,A14
         0000cce0     0101  
    2599 0000ccf0     4dc8          MOVE    A14,A8
    2600                    
    2601 0000cd00     09e3          MOVI COLOR_BARS,  A3, L        ; COLOR BAR TABLE
         0000cd10 0000c8b0' 
    2602 0000cd30     09ed          MOVI [16,0], A13, L             ; POSITION INCRMENT
         0000cd40 00100000  
    2603 0000cd60     09cc          MOVI    101H,A12
         0000cd70     0101  
    2604 0000cd80     1a0b          MOVK   16,  A11                 ; # INTENSITIES / BAR
    2605 0000cd90     1906          MOVK    8,A6                    ;THIS MANY BARS
    2606 0000cda0           CB6
    2607 0000cda0     5642          CLR A2                       ; STARTING COLOR
    2608 0000cdb0     9661          MOVE    *A3+,A1,L
    2609 0000cdc0     ca0f          JRZ     CB8
    2610 0000cdd0     0588          MOVE    A8,@DMACMAP,W           ;STUFF PALETTE
         0000cde0 01a00080  
    2611 0000ce00     9660          MOVE    *A3+,A0,L
    2612 0000ce10     1203          ADDK    16,A3
    2613 0000ce20     4d6a          MOVE    A11,A10
    2614 0000ce30           CB7
    2615 0000ce30                   FCALL RECTANGLE, B6
    2616 0000ce70     41a0          ADD   A13, A0
    2617 0000ce80     4182          ADD   A12, A2
    2618 0000ce90     3cea          DSJS  A10, CB7
    2619 0000cea0     41c8          ADD     A14,A8                  ;NEXT PALETTE PLEASE
    2620 0000ceb0     3e46          DSJ     A6,CB6
    2621                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   59

    2622 0000cec0           CB8
    2623 0000cec0     57ce          CLR     A14
    2624 0000ced0     058e          MOVE    A14,@DMACMAP
         0000cee0 01a00080  
    2625 0000cf00     0960          RETS
    2626                    
    2627                    
    2628 0000cf10           INTENSITIES_START
    2629                    
    2630 0000cf10     03e0          .WORD 03E0H                ; GREEN
    2631 0000cf20     0040          .WORD 0040H                ; BUMP GREEN
    2632                    
    2633 0000cf30     7c00          .WORD 7C00H                ; RED
    2634 0000cf40     0800          .WORD 0800H                ; BUMP RED
    2635                    
    2636 0000cf50     001f          .WORD 001FH                ; BLUE
    2637 0000cf60     0002          .WORD 0002H                ; BUMP BLUE
    2638                    
    2639 0000cf70     0000          .WORD 0000H                ; BLACK
    2640 0000cf80     0000          .WORD 0000H                ; BUMP BLACK
    2641                    
    2642 0000cf90     7fff          .WORD 7FFFH                ; WHITE
    2643 0000cfa0     0842          .WORD 0842H                ; BUMP WHITE
    2644                    
    2645 0000cfb0     7fe0          .WORD 7FE0H                ; YELLOW
    2646 0000cfc0     0840          .WORD 0840H                ; BUMP YELLOW
    2647                    
    2648 0000cfd0     7c1f          .WORD 7C1FH                ; PURPLE
    2649 0000cfe0     0802          .WORD 0802H                ; BUMP PURPLE
    2650                    
    2651 0000cff0     03ff          .WORD 03FFH                ; CYAN
    2652 0000d000     0042          .WORD 0042H                ; BUMP CYAN
    2653                    
    2654 0000d010 00000000          .LONG   0
    2655                    
    2656                    **************************************************************************
    2657                    * SWITCHTEST - Test regular or DIP switches
    2658                    * A0=Mode (0=Switches, 1=DIPs)
    2659                    
    2660          00240000  DONEMASK        EQU     00240000H               ; P1 + P2 START
    2661 00000200                   .BSS    DONECNT,32              ; FOR SWITCH TEST
    2662                    
    2663 0000d030           SWITCHTEST
    2664 0000d030                   PUSH    a12,a13
    2665                    
    2666 0000d050     1420          subk    1,a0
    2667 0000d060     ca00          jreq    DIPTEST
         0000d070     00ec  
    2668 0000d080     5600          clr     a0
    2669 0000d090     0780          move    a0,@_switch_map_mode,L  ; No switch mapping
         0000d0a0 00000000! 
    2670                    
    2671 0000d0c0     1a0d          movk    10h,A13
    2672 0000d0d0     078d          MOVE    A13,@DONECNT,L
         0000d0e0 00000200- 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   60

    2673 0000d100     57ad          CLR     A13                     ; THE HOLD ME REGISTER
    2674 0000d110     078d          MOVE    A13,@SWSET1,L
         0000d120 00000000- 
    2675 0000d140     078d          MOVE    A13,@SWSET2,L
         0000d150 00000020- 
    2676 0000d170     09e9          MOVI    BUT_TABLE,A9
         0000d180 00010a90' 
    2677 0000d1a0     574a          CLR     A10
    2678 0000d1b0     0d3f          CALLR   BUT_PLOT                ; PLOT SOME BUTTONS
         0000d1c0     0323  
    2679 0000d1d0     09e9          MOVI    JOY_TABLE,A9
         0000d1e0 000117a0' 
    2680 0000d200     0d3f          CALLR   JOY_PLOT                ; PLOT THE JOYSTICKS
         0000d210     034e  
    2681 0000d220     09e9          MOVI    STR_TABLE,A9
         0000d230 000118e0' 
    2682 0000d250     0d3f          CALLR   STR_PLOT                ; PLOT THE STRINGS
         0000d260     0376  
    2683 0000d270     09e9          MOVI    BUT_STRS,A9
         0000d280 00012080' 
    2684 0000d2a0     0d3f          CALLR   STR_PLOT                ; PLOT THE BUTTON STRINGS
         0000d2b0     0371  
    2685 0000d2c0     09e0          MOVI    [172,0],A0
         0000d2d0 00ac0000  
    2686 0000d2f0     09e1          MOVI    [172,400],A1
         0000d300 00ac0190  
    2687 0000d320     09c2          MOVI    ROBO_WHITE,A2
         0000d330     0202  
    2688 0000d340                   FCALL   HVLINE,B6               ; DRAW LITTLE WHITE LINE
    2689 0000d380           SDLOOP
    2690 0000d380                   PULL    a12,a13
    2691 0000d3a0                   SLEEPK  2
    2692 0000d3e0                   PUSH    a12,a13
    2693                    
    2694 0000d400     07aa          move    @_coin_addr,a10,L
         0000d410 00000000! 
    2695 0000d430     854a          move    *a10,a10,W
    2696 0000d440     07ae          move    @_switch_addr,a14,L
         0000d450 00000000! 
    2697 0000d470     85ce          move    *a14,a14,W
    2698 0000d480     260a          sll     16,a10
    2699 0000d490     260e          sll     16,a14          ;mask off top 16
    2700 0000d4a0     2e0e          srl     16,a14
    2701 0000d4b0     55ca          or      a14,a10
    2702                    
    2703                    
    2704 0000d4c0     03ea          NOT     A10
    2705 0000d4d0     4d40          MOVE    A10,A0
    2706 0000d4e0     0b80          ANDI    DONEMASK,A0
         0000d4f0 ffdbffff  
    2707 0000d510     0b60          CMPI    DONEMASK,A0,L           ; CHECK FOR DONE
         0000d520 ffdbffff  
    2708 0000d540     cb11          JRNZ    SDGO
    2709 0000d550     07a0          MOVE    @DONECNT,A0,L           ;REQUIRE A CERTAIN TIME
         0000d560 00000200- 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   61

    2710 0000d580     1420          DEC     A0
    2711 0000d590     0780          MOVE    A0,@DONECNT,L
         0000d5a0 00000200- 
    2712 0000d5c0     cb09          JRNE    SDGO
    2713                    
    2714 0000d5d0           switchx PULL    a12,a13
    2715 0000d5f0     1820          movk    1,a0
    2716 0000d600     0780          move    a0,@_switch_map_mode,L  ; Back to menu switch map
         0000d610 00000000! 
    2717 0000d630                   RETP
    2718                    
    2719 0000d660           SDGO
    2720 0000d660     07ab          MOVE    @SWSET1,A11,L
         0000d670 00000000- 
    2721 0000d690     496a          CMP     A11,A10                 ; CHECK FOR CHANGES
    2722 0000d6a0     ca0b          JRZ     SDCK2
    2723 0000d6b0     078a          MOVE    A10,@SWSET1,L
         0000d6c0 00000000- 
    2724 0000d6e0     07aa          move    @_switch2_addr,a10,L
         0000d6f0 00000000! 
    2725 0000d710     854a          move    *a10,a10,W
    2726 0000d720     03ea          NOT     A10
    2727 0000d730     260a          SLL     16,A10
    2728 0000d740     2e0a          SRL     16,A10
    2729 0000d750     c00c          JRUC    SDPRC1
    2730 0000d760           SDCK2
    2731 0000d760     07aa          move    @_switch2_addr,a10,L
         0000d770 00000000! 
    2732 0000d790     854a          move    *a10,a10,W
    2733 0000d7a0     03ea          not     a10
    2734 0000d7b0     260a          sll     16,a10
    2735 0000d7c0     2e0a          srl     16,a10
    2736 0000d7d0     07ab          MOVE    @SWSET2,A11,L
         0000d7e0 00000020- 
    2737 0000d800     496a          CMP     A11,A10
    2738 0000d810     cab6          JRZ     SDLOOP
    2739 0000d820           SDPRC1
    2740 0000d820     078a          MOVE    A10,@SWSET2,L
         0000d830 00000020- 
    2741 0000d850           SDPROC
    2742 0000d850     5600          CLR     A0
    2743 0000d860     0580          MOVE    A0,@SCHANGE
         0000d870 000000b0- 
    2744                    
    2745 0000d890     09e9          MOVI    BUT_TABLE,A9
         0000d8a0 00010a90' 
    2746 0000d8c0     0d3f          CALLR   BUT_PLOT
         0000d8d0     02b2  
    2747 0000d8e0     09e9          MOVI    BUT_STRS,A9
         0000d8f0 00012080' 
    2748 0000d910     0d3f          CALLR   STR_PLOT                ; PLOT THE BUTTON STRINGS
         0000d920     030a  
    2749 0000d930     09e9          MOVI    JOY_TABLE,A9
         0000d940 000117a0' 
    2750 0000d960     0d3f          CALLR   JOY_UPDATE              ; UPDATE THE JOYSTICK INFO
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   62

         0000d970     02e5  
    2751                    
    2752 0000d980     05a0          MOVE    @SCHANGE,A0
         0000d990 000000b0- 
    2753 0000d9b0     ca9c          JRZ     SDLOOP
    2754                    
    2755 0000d9c0     09c3          MOVI    SWITCH_SND,A3
         0000d9d0     00c8  
    2756 0000d9e0     0d5f          calla   SNDSND
         0000d9f0 00000000! 
    2757 0000da10     c096          JRUC    SDLOOP
    2758                    
    2759                    
    2760                    
    2761                    **************************************************************************
    2762                    *                                                                                            *
    2763                    * SET_DIP_COINAGE - SETUP COINAGE ACCORDING TO THE DIPSWITCHES               *
    2764                    *                                                                                            *
    2765                    **************************************************************************
    2766 0000da20           SET_DIP_COINAGE
    2767 0000da20     098f          MMTM    SP,A0,A1,A2,A6
         0000da30     e200  
    2768                    
    2769 0000da40     0d3f          CALLR   READ_DIP
         0000da50     0253  
    2770 0000da60     4c02          MOVE    A0,A2
    2771 0000da70     0b82          ANDI    DPUSECMOS,A2            ;USING CMOS?
         0000da80 fffffeff  
    2772 0000daa0     cb46          JRNZ    SDC_X                   ;BR=YES, DO NOT LOAD COINAGE
    2773                    
    2774 0000dab0     4c02          MOVE    A0,A2
    2775 0000dac0     0b80          ANDI    DPCOUNTRY,A0
         0000dad0 ffffcfff  
    2776                    
    2777 0000daf0     2e80          SRL     DPCOUNTRY_SRL,A0        ; CHANGE TO TO MULTIPLE OF 32
    2778 0000db00     24a0          SLL     5,A0
    2779                    
    2780 0000db10     0b20          ADDI    DIPCOINTAB,A0
         0000db20 00000000! 
    2781 0000db40     8601          MOVE    *A0,A1,L                ; POINTER TO RIGHT COIN TABLE
    2782                    
    2783 0000db50     0b82          ANDI    DPCOINAGE,A2
         0000db60 fffff1ff  
    2784 0000db80     0b42          CMPI    DPCOINAGE,A2            ; CHECK FOR FREEPLAY
         0000db90     f1ff  
    2785 0000dba0     ca2f          JRZ     CMOS21
    2786                    
    2787 0000dbb0     2ee2          SRL     DPCOINAGE_SRL,A2
    2788 0000dbc0     2482          SLL     4,A2
    2789                    
    2790 0000dbd0     4041          ADD     A2,A1
    2791 0000dbe0     8421          MOVE    *A1,A1,W                ; WHICH COIN TABLE TO USE
    2792                    
    2793 0000dbf0     09c0          MOVI    ADJPRICE,A0
         0000dc00     0001  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   63

    2794 0000dc10     0d5f          CALLA   GET_ADJ                 ;GET THE COIN SELECT NUMBER BEING USED.
         0000dc20 00000000! 
    2795 0000dc40     4801          CMP     A0,A1                   ;DID WE CHANGE COIN MODES
    2796 0000dc50     ca06          JREQ    SDC_SAMEC
    2797 0000dc60     0d5f          CALLA   NO_CREDS                ;CLEAR CREDITS
         0000dc70 00000000! 
    2798 0000dc90     0d5f          CALLA   CRED_P                  ;LINK-OUT!
         0000dca0 00000000! 
    2799 0000dcc0           SDC_SAMEC
    2800 0000dcc0     09c0          MOVI    ADJPRICE,A0             ; MASTER PRICING
         0000dcd0     0001  
    2801 0000dce0     0d5f          CALLA   PUT_ADJ                 ; STUFF IT IN CMOS
         0000dcf0 00000000! 
    2802 0000dd10     09c0          MOVI    ADJFREPL,A0
         0000dd20     0013  
    2803 0000dd30     5621          CLR     A1                      ; MAKE SURE NO FREEPLAY
    2804 0000dd40     0d5f          CALLA   PUT_ADJ
         0000dd50 00000000! 
    2805 0000dd70           CMOS20
    2806 0000dd70     09c0          MOVI    ADJ1ST6,A0              ;MAKE THEM UNTOUCHED PLEASE
         0000dd80     0016  
    2807 0000dd90     1821          MOVK    1,A1
    2808 0000dda0     0d5f          CALLA   PUT_ADJ
         0000ddb0 00000000! 
    2809                    
    2810 0000ddd0     0d5f          CALLA   F_ADC_S                 ;CHECKSUM THE ADJUSTMENTS
         0000dde0 00000000! 
    2811                    
    2812 0000de00     0d5f          CALLA   GET_CSPT
         0000de10 00000000! 
    2813 0000de30     0d5f          CALLA   SET_COIN_ADJ            ; SET THE ADJUSTMENTS UP IN CMOS
         0000de40 00000000! 
    2814                    
    2815 0000de60     0d5f          CALLA   F_ADC_S                 ;CHECKSUM THE ADJUSTMENTS
         0000de70 00000000! 
    2816                    
    2817 0000de90     c007          JRUC    SDC_X
    2818 0000dea0           CMOS21
    2819 0000dea0     09c0          MOVI    ADJFREPL,A0
         0000deb0     0013  
    2820 0000dec0     1821          MOVK    1,A1                    ; FREEPLAY, DUDE!
    2821 0000ded0     0d5f          CALLA   PUT_ADJ
         0000dee0 00000000! 
    2822 0000df00     c0e6          JRUC    CMOS20
    2823 0000df10           SDC_X
    2824 0000df10     09af          MMFM    SP,A0,A1,A2,A6
         0000df20     0047  
    2825 0000df30     0960          RETS
    2826                    
    2827                    **************************************************************************
    2828                    *                                                                        *
    2829                    *       DIPTEST                                                          *
    2830                    *                                                                        *
    2831                    *       DIP SWITCH TESTING                                               *
    2832                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   64

    2833                    **************************************************************************
    2834                    
    2835 0000df40           DIPTEST:
    2836 0000df40     186e          movk    3,a14
    2837 0000df50     078e          move    a14,@_switch_map_mode,L ; Any button mapping
         0000df60 00000000! 
    2838 0000df80     182e          MOVK    1,A14
    2839 0000df90     058e          MOVE    A14,@DIP1ST,W           ;YES THIS IS THE FIRST TIME THROUGH
         0000dfa0 00000050- 
    2840 0000dfc0     0d3f          CALLR   READ_DIP
         0000dfd0     01fb  
    2841 0000dfe0     0580          MOVE    A0,@DIPVAL,W
         0000dff0 00000040- 
    2842                    
    2843 0000e010           DT_PLOT
    2844 0000e010     09e9          MOVI    DIP_VECS,A9             ; POINT AT VECTOR TABLE
         0000e020 000120a0' 
    2845 0000e040           DTVLP1
    2846 0000e040     9522          MOVE    *A9+,A2,W               ; GET COLOR
    2847 0000e050     ca07          JRZ     DTVDONE
    2848 0000e060     9720          MOVE    *A9+,A0,L               ; START POINT
    2849 0000e070     9721          MOVE    *A9+,A1,L               ; END POINT
    2850 0000e080                   FCALL   HVLINE,B6
    2851 0000e0c0     c0f7          JRUC    DTVLP1
    2852 0000e0d0           DTVDONE
    2853 0000e0d0     09e9          MOVI    DIP_STRS,A9
         0000e0e0 000129d0' 
    2854 0000e100     0d3f          CALLR   STR_PLOT
         0000e110     028b  
    2855                    
    2856 0000e120     0d3f          CALLR   SET_DIP_COINAGE
         0000e130     ff8e  
    2857                    
    2858 0000e140     0d3f          CALLR   DIPPLOT
         0000e150     0178  
    2859 0000e160     0d3f          CALLR   DIPSTATE
         0000e170     0038  
    2860                    
    2861 0000e180     05ae          MOVE    @DIP1ST,A14,W
         0000e190 00000050- 
    2862 0000e1b0     cb06          JRNZ    DTL_SKIP_SND
    2863                    
    2864 0000e1c0     09c0          MOVI    DIP_SND,A0
         0000e1d0     00c8  
    2865 0000e1e0     07a9          move    @_sound_addr,a9,L
         0000e1f0 00000000! 
    2866 0000e210     8009          move    a0,*a9,W
    2867                    
    2868 0000e220           DTL_SKIP_SND
    2869 0000e220                   CLRM    @DIP1ST,W
    2870                    
    2871 0000e260     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         0000e270 00000000! 
    2872 0000e290     0b80          andi    BUTTONS|START_BITS,a0
         0000e2a0 f9db0f0f  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   65

    2873 0000e2c0     0780          MOVE    A0,@SWSET1,L
         0000e2d0 00000000- 
    2874 0000e2f0           DTLOOP
    2875 0000e2f0                   PULL    a12,a13
    2876 0000e310                   SLEEPK  1
    2877 0000e350                   PUSH    a12,a13
    2878                    
    2879                    ;       CALLA   CKTEST                  ; EMERGENCY EXIT
    2880 0000e370     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         0000e380 00000000! 
    2881 0000e3a0     07a1          MOVE    @SWSET1,A1,L
         0000e3b0 00000000- 
    2882 0000e3d0     0b80          andi    BUTTONS|START_BITS,a0
         0000e3e0 f9db0f0f  
    2883 0000e400     4801          CMP     A0,A1
    2884 0000e410     cb0c          JRNZ    DT_X
    2885                    
    2886 0000e420     0d3f          CALLR   READ_DIP
         0000e430     01b5  
    2887 0000e440     05a1          MOVE    @DIPVAL,A1,W
         0000e450 00000040- 
    2888 0000e470     0521          ZEXT    A1
    2889 0000e480     4801          CMP     A0,A1
    2890 0000e490     cae5          JRZ     DTLOOP                  ;BR = NO CHANGE
    2891 0000e4a0     0580          MOVE    A0,@DIPVAL,W            ;SAVE THE OLD
         0000e4b0 00000040- 
    2892 0000e4d0     c0b3          JRUC    DT_PLOT                 ;PLOT THE NEW SWITCH STUFF
    2893 0000e4e0           DT_X
    2894 0000e4e0     c000          JRUC    switchx
         0000e4f0     ff0d  
    2895                    
    2896                    
    2897                    **************************************************************************
    2898                    *                                                                        *
    2899                    *       DIPSTATE                                                         *
    2900                    *                                                                        *
    2901                    *       PLOT OUT THE STATES OF ALL THE DIP SWITCHES                      *
    2902                    *                                                                        *
    2903                    *       ENTRY                                                            *
    2904                    *               NOTHING                                                  *
    2905                    *                                                                        *
    2906                    *       EXIT                                                             *
    2907                    *               NOTHING                                                  *
    2908                    *                                                                        *
    2909                    **************************************************************************
    2910 0000e500           DIPSTATE
    2911 0000e500     09e0          MOVI    [82,74],A0
         0000e510 0052004a  
    2912 0000e530     09e1          MOVI    [104,140],A1
         0000e540 0068008c  
    2913 0000e560     09c2          MOVI    COLOR_BLACK,A2
         0000e570     1414  
    2914 0000e580                   FCALL   RECTANGLE,B6
    2915 0000e5c0     09e0          MOVI    [82,284],A0
         0000e5d0 0052011c  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   66

    2916 0000e5f0     09e1          MOVI    [104,111],A1
         0000e600 0068006f  
    2917 0000e620     09c2          MOVI    COLOR_BLACK,A2
         0000e630     1414  
    2918 0000e640                   FCALL   RECTANGLE,B6
    2919                    
    2920 0000e680     0d3f          CALLR   READ_DIP
         0000e690     018f  
    2921 0000e6a0     4c0a          MOVE    A0,A10                  ;LET'S KEEP A COPY 
    2922                    
    2923 0000e6b0     5642          CLR     A2
    2924 0000e6c0     09c3          MOVI    COLOR_WHITE,A3
         0000e6d0     0202  
    2925                    
    2926 0000e6e0     56e7          CLR     A7
    2927 0000e6f0     09e1          MOVI    DUSECMOS_0,A1
         0000e700 00013300' 
    2928 0000e720     0b80          ANDI    DPUSECMOS,A0
         0000e730 fffffeff  
    2929 0000e750     ca04          JRZ     DS1
    2930 0000e760     1827          MOVK    1,A7
    2931 0000e770     09e1          MOVI    DUSECMOS_1,A1
         0000e780 00013290' 
    2932 0000e7a0           DS1
    2933 0000e7a0     4c20          MOVE    A1,A0
    2934 0000e7b0     09e1          MOVI    [89,75],A1
         0000e7c0 0059004b  
    2935 0000e7e0                   FCALL   STRING,B6
    2936                    
    2937                    *PLOT CURRENT COINAGE
    2938 0000e820     4ce7          MOVE    A7,A7                   ;ARE WE CMOS OR DIPSWITCH
    2939 0000e830     ca0b          JRZ     DS_PC                   ;BR = DIPSWITCH
    2940                    
    2941 0000e840     09e1          MOVI    [113,75],A1
         0000e850 0071004b  
    2942 0000e870     09e0          MOVI    DUNUSED,A0              ;JUST PRINT UNUSED
         0000e880 00014000' 
    2943 0000e8a0                   FCALL   STRING,B6
    2944 0000e8e0     c064          JRUC    DS_SC                   ;AND GO FOR THE NEXT SWITCHES
    2945                            
    2946 0000e8f0           DS_PC
    2947 0000e8f0     09c3          MOVI    COLOR_WHITE,A3
         0000e900     0202  
    2948 0000e910     09e1          MOVI    [101,75],A1
         0000e920 0065004b  
    2949 0000e940     09e0          MOVI    DCOINAGE,A0
         0000e950 00013880' 
    2950 0000e970                   FCALL   STRING,B6
    2951 0000e9b0     4d40          MOVE    A10,A0
    2952 0000e9c0     0b80          ANDI    DPCOUNTRY,A0
         0000e9d0 ffffcfff  
    2953 0000e9f0     2e80          SRL     DPCOUNTRY_SRL,A0                
    2954 0000ea00     24a0          SLL     5,A0
    2955 0000ea10     0b20          ADDI    DCOINTAB,A0
         0000ea20 00013dd0' 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   67

    2956 0000ea40     8601          MOVE    *A0,A1,L                ; POINTER TO RIGHT COIN TABLE
    2957 0000ea50     4d40          MOVE    A10,A0
    2958 0000ea60     0b80          ANDI    DPCOINAGE,A0
         0000ea70 fffff1ff  
    2959 0000ea90     2ee0          SRL     DPCOINAGE_SRL,A0
    2960 0000eaa0     24a0          SLL     5,A0
    2961 0000eab0     4001          ADD     A0,A1
    2962 0000eac0     8620          MOVE    *A1,A0,L                ; NOW POINTING AT MESSAGE
    2963 0000ead0     5642          CLR     A2
    2964 0000eae0     09e1          MOVI    [101,132],A1
         0000eaf0 00650084  
    2965 0000eb10                   FCALL   STRING,B6
    2966                    
    2967                    *PLOT CREDITS TO START, CREDITS TO CONTINUE
    2968 0000eb50     09e0          MOVI    DTOSTART,A0
         0000eb60 00013a40' 
    2969 0000eb80     09e1          MOVI    [113,90],A1
         0000eb90 0071005a  
    2970 0000ebb0                   FCALL   STRING,B6
    2971                    
    2972 0000ebf0     09e0          MOVI    DTOCONTINUE,A0
         0000ec00 00013a90' 
    2973 0000ec20     09e1          MOVI    [125,90],A1
         0000ec30 007d005a  
    2974 0000ec50                   FCALL   STRING,B6
    2975                    
    2976 0000ec90     09c0          MOVI    ADJCSTRT,A0
         0000eca0     000c  
    2977 0000ecb0     0d5f          CALLA   GET_ADJ                 ; GET NUMBER NEEDED ( IN A0 )
         0000ecc0 00000000! 
    2978 0000ece0     4c08          MOVE    A0,A8
    2979 0000ecf0     0b48          CMPI    9,A8
         0000ed00     fff6  
    2980 0000ed10     c201          JRLS    DSTS_1
    2981 0000ed20     1928          MOVK    9,A8
    2982 0000ed30           DSTS_1
    2983 0000ed30     0d5f          CALLA   HEXTOASC
         0000ed40 00000000! 
    2984 0000ed60     4d00          MOVE    A8,A0
    2985 0000ed70     09e1          MOVI    [113,80],A1
         0000ed80 00710050  
    2986 0000eda0                   FCALL   STRING,B6
    2987                    
    2988 0000ede0     09c0          MOVI    ADJCCONT,A0
         0000edf0     000d  
    2989 0000ee00     0d5f          CALLA   GET_ADJ                 ; GET NUMBER NEEDED ( IN A0 )
         0000ee10 00000000! 
    2990 0000ee30     4c08          MOVE    A0,A8
    2991 0000ee40     0b48          CMPI    9,A8
         0000ee50     fff6  
    2992 0000ee60     c201          JRLS    DSTC_1
    2993 0000ee70     1928          MOVK    9,A8
    2994 0000ee80           DSTC_1
    2995 0000ee80     0d5f          CALLA   HEXTOASC
         0000ee90 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   68

    2996 0000eeb0     4d00          MOVE    A8,A0
    2997 0000eec0     09e1          MOVI    [125,80],A1
         0000eed0 007d0050  
    2998 0000eef0                   FCALL   STRING,B6
    2999                    
    3000                    
    3001 0000ef30           DS_SC
    3002                    *PLOT COUNTRY SELECTION
    3003 0000ef30     4d40          MOVE    A10,A0
    3004 0000ef40     0b80          ANDI    DPCOUNTRY,A0
         0000ef50 ffffcfff  
    3005 0000ef70     2e80          SRL     DPCOUNTRY_SRL,A0
    3006 0000ef80     24a0          SLL     5,A0
    3007 0000ef90     0b20          ADDI    DCOUNTRY_TAB,A0
         0000efa0 00013960' 
    3008 0000efc0     8600          MOVE    *A0,A0,L
    3009 0000efd0     09e1          MOVI    [143,75],A1
         0000efe0 008f004b  
    3010 0000f000                   FCALL   STRING,B6
    3011                    
    3012                    *PLOT COIN COUNTER MODE
    3013 0000f040     4d47          MOVE    A10,A7
    3014 0000f050     0b87          ANDI    DPCOUNTER,A7
         0000f060 ffff3fff  
    3015 0000f080     2e47          SRL     DPCOUNTER_SRL,A7
    3016 0000f090     24c7          SLL     6,A7
    3017 0000f0a0     0b27          ADDI    DCOUNTER_TAB,A7
         0000f0b0 00013780' 
    3018 0000f0d0     96e0          MOVE    *A7+,A0,L
    3019 0000f0e0     09e1          MOVI    [163,75],A1
         0000f0f0 00a3004b  
    3020 0000f110                   FCALL   STRING,B6
    3021 0000f150     96e0          MOVE    *A7+,A0,L
    3022 0000f160     09e1          MOVI    [175,75],A1
         0000f170 00af004b  
    3023 0000f190                   FCALL   STRING,B6
    3024                    
    3025                    
    3026                    *PLOT NUMBER OF PLAYERS ALLOWED
    3027                    
    3028                    
    3029                    
    3030 0000f1d0     09e0          MOVI    DUNUSED,A0
         0000f1e0 00014000' 
    3031                    
    3032                    
    3033                    
    3034 0000f200     09e1          MOVI    [89,285],A1
         0000f210 0059011d  
    3035 0000f230                   FCALL   STRING,B6
    3036                    ;;;
    3037                    
    3038                    *PLOT DOLLAR BILL VALIDATOR STATUS
    3039 0000f270     09e0          MOVI    DNOVALIDATOR,A0         ;ASSUME NO VALIDATOR
         0000f280 00013b50' 
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   69

    3040 0000f2a0     4d41          MOVE    A10,A1
    3041 0000f2b0     0b81          ANDI    DPVALIDATOR,A1          ;DO WE HAVE ONE?
         0000f2c0 fffffffd  
    3042 0000f2e0     ca03          JRZ     DSTS_NOV                ;BR = NO
    3043 0000f2f0     09e0          MOVI    DVALIDATOR,A0           ;ASSUME NO VALIDATOR
         0000f300 00013bc0' 
    3044                    
    3045 0000f320           DSTS_NOV
    3046 0000f320     09e1          MOVI    [101,285],A1
         0000f330 0065011d  
    3047 0000f350                   FCALL   STRING,B6
    3048                    
    3049                    
    3050                    *PLOT video clips off/on message
    3051 0000f390     09e0          MOVI    DCLIPS,A0               ;Assume clips on
         0000f3a0 00013c40' 
    3052 0000f3c0     4d41          MOVE    A10,A1
    3053 0000f3d0     0b81          ANDI    DPNOVIDCLIPS,A1
         0000f3e0 fffffffb  
    3054 0000f400     ca03          JRZ     DSTS_NOC                ;BR = NO
    3055 0000f410     09e0          MOVI    DNOCLIPS,A0             ;Assume no clips wanted
         0000f420 00013c80' 
    3056                    
    3057 0000f440           DSTS_NOC
    3058                    
    3059                    
    3060 0000f440     09e1          MOVI    [113,285],A1
         0000f450 0071011d  
    3061 0000f470                   FCALL   STRING,B6
    3062                    
    3063 0000f4b0     09e0          MOVI    DUNUSED,A0
         0000f4c0 00014000' 
    3064 0000f4e0     09e1          MOVI    [125,285],A1
         0000f4f0 007d011d  
    3065 0000f510                   FCALL   STRING,B6
    3066                    
    3067 0000f550     09e0          movi    TD_ON,a0
         0000f560 000131d0' 
    3068 0000f580     4d41          move    a10,a1
    3069 0000f590     0b81          andi    DPTDON,a1
         0000f5a0 ffffffef  
    3070 0000f5c0     cb03          jrnz    dtd_off
    3071 0000f5d0     09e0          movi    TD_OFF,a0
         0000f5e0 00013220' 
    3072 0000f600           dtd_off
    3073 0000f600     09e1          MOVI    [137,285],A1
         0000f610 0089011d  
    3074 0000f630                   FCALL   STRING,B6
    3075                    
    3076 0000f670     09e0          MOVI    DUNUSED,A0
         0000f680 00014000' 
    3077 0000f6a0     09e1          MOVI    [149,285],A1
         0000f6b0 0095011d  
    3078 0000f6d0                   FCALL   STRING,B6
    3079                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   70

    3080                    
    3081                    
    3082                    *PLOT skip over powerup test message
    3083 0000f710     09e0          MOVI    DPOWER,A0
         0000f720 00013cc0' 
    3084 0000f740     4d41          MOVE    A10,A1
    3085 0000f750     0b81          ANDI    DPPOWER,A1
         0000f760 ffffffbf  
    3086 0000f780     ca03          JRZ     DSTS_NOP
    3087 0000f790     09e0          MOVI    DNOPOWER,A0
         0000f7a0 00013d30' 
    3088                    
    3089 0000f7c0           DSTS_NOP
    3090                    
    3091 0000f7c0     09e1          MOVI    [161,285],A1
         0000f7d0 00a1011d  
    3092 0000f7f0                   FCALL   STRING,B6
    3093                    
    3094 0000f830     09e0          MOVI    DTEST_0,A0
         0000f840 00013af0' 
    3095 0000f860     09e1          MOVI    [173,285],A1
         0000f870 00ad011d  
    3096 0000f890                   FCALL   STRING,B6
    3097                    
    3098 0000f8d0     0960          RETS
    3099                    
    3100                    
    3101                    **************************************************************************
    3102                    *                                                                        *
    3103                    *       DIPPLOT                                                          *
    3104                    *                                                                        *
    3105                    *       PLOT OUT THE DIP SWITCHES                                        *
    3106                    *                                                                        *
    3107                    *       ENTRY                                                            *
    3108                    *               NOTHING                                                  *
    3109                    *                                                                        *
    3110                    *       EXIT                                                             *
    3111                    *               NOTHING                                                  *
    3112                    *                                                                        *
    3113                    **************************************************************************
    3114 0000f8e0           DIPPLOT:
    3115 0000f8e0     09e0          MOVI    [83,21],A0
         0000f8f0 00530015  
    3116 0000f910     09e1          MOVI    [104,38],A1
         0000f920 00680026  
    3117 0000f940     09c2          MOVI    COLOR_BLACK,A2
         0000f950     1414  
    3118 0000f960                   FCALL   RECTANGLE,B6
    3119 0000f9a0     09e0          MOVI    [83,231],A0
         0000f9b0 005300e7  
    3120 0000f9d0     09e1          MOVI    [104,38],A1
         0000f9e0 00680026  
    3121 0000fa00     09c2          MOVI    COLOR_BLACK,A2
         0000fa10     1414  
    3122 0000fa20                   FCALL   RECTANGLE,B6
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   71

    3123 0000fa60     0d3f          CALLR   READ_DIP
         0000fa70     0051  
    3124 0000fa80     5642          CLR     A2
    3125 0000fa90           DIPLOOP
    3126 0000fa90     4c43          MOVE    A2,A3
    3127 0000faa0     24a3          SLL     5,A3
    3128 0000fab0     0b23          ADDI    DIPYTAB,A3
         0000fac0 0000fd90' 
    3129 0000fae0     8663          MOVE    *A3,A3,L
    3130 0000faf0     2603          SLL     16,A3                   ; GOT THE Y LOC
    3131                    
    3132 0000fb00     56a5          CLR     A5
    3133 0000fb10     0b42          CMPI    8,A2
         0000fb20     fff7  
    3134                            .IF TUNIT=0
    3135                            JRLO    DIPL2
    3136                            .ELSE
    3137 0000fb30     c902          JRHS    DIPL2
    3138                            .ENDIF
    3139 0000fb40     09c5          MOVI    210,A5
         0000fb50     00d2  
    3140 0000fb60           DIPL2
    3141 0000fb60     eca3          MOVX    A5,A3
    3142                    
    3143 0000fb70     4a40          BTST    A2,A0                   ; CHECK IF BIT IS SET
    3144 0000fb80     cb08          JRNZ    DIPON
    3145 0000fb90     09e1          MOVI    DP_OFF,A1
         0000fba0 00013fe0' 
    3146 0000fbc0     0b03          ADDI    29,A3
         0000fbd0     001d  
    3147 0000fbe0     09c4          MOVI    COLOR_GREY,A4
         0000fbf0     0101  
    3148 0000fc00     c007          JRUC    DIPSTR
    3149                    
    3150 0000fc10           DIPON
    3151 0000fc10     09e1          MOVI    DP_ON,A1
         0000fc20 00013fc0' 
    3152 0000fc40     0b03          ADDI    32,A3
         0000fc50     0020  
    3153 0000fc60     09c4          MOVI    COLOR_WHITE,A4
         0000fc70     0202  
    3154                    
    3155 0000fc80           DIPSTR
    3156 0000fc80     098f          MMTM    SP,A0,A2
         0000fc90     a000  
    3157 0000fca0     4c20          MOVE    A1,A0                   ; SET STRING
    3158 0000fcb0     4c61          MOVE    A3,A1                   ; SET LOCATION
    3159 0000fcc0     4c83          MOVE    A4,A3
    3160 0000fcd0     5642          CLR     A2                      ; HORIZONTAL
    3161 0000fce0                   FCALL   STRING,B6
    3162 0000fd20     09af          MMFM    SP,A0,A2
         0000fd30     0005  
    3163 0000fd40     1022          INC     A2
    3164 0000fd50     0b42          CMPI    16,A2
         0000fd60     ffef  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   72

    3165 0000fd70     c8d1          JRLO    DIPLOOP
    3166 0000fd80     0960          RETS
    3167                    
    3168                    
    3169 0000fd90           DIPYTAB
    3170 0000fd90 00000059          .LONG   89,101,113,125,137,149,161,173
    3171 0000fe90 00000059          .LONG   89,101,113,125,137,149,161,173
    3172                    
    3173                    
    3174                    **************************************************************************
    3175                    *                                                                        *
    3176                    *       READ_DIP                                                         *
    3177                    *                                                                        *
    3178                    *       READ IN BOTH DIP SWITCHES                                        *
    3179                    *                                                                        *
    3180                    *       ENTRY                                                            *
    3181                    *               NOTHING                                                  *
    3182                    *                                                                        *
    3183                    *       EXIT                                                             *
    3184                    *               A0      DIP SWITCH                                       *
    3185                    *                                                                        *
    3186                    **************************************************************************
    3187                    
    3188 0000ff90           READ_DIP:
    3189 0000ff90     098f          MMTM    SP,A1,A2,A3
         0000ffa0     7000  
    3190                    
    3191 0000ffb0     07a0          move    @_dipswitch_addr,a0,L
         0000ffc0 00000000! 
    3192 0000ffe0     8400          move    *a0,a0,W
    3193 0000fff0     03e0          NOT     A0                      ; INVERT IT FOR TRUE BITS
    3194 00010000     5621          CLR     A1
    3195 00010010     18e2          movk    7,a2
    3196 00010020           RDLOOP
    3197 00010020     4a40          BTST    A2,A0
    3198 00010030     ca05          JRZ     RD1
    3199 00010040     18e3          MOVK    7,A3
    3200 00010050     4443          SUB     A2,A3
    3201 00010060                   BSET    A3,A1
    3202 00010090           RD1
    3203 00010090     1102          addk    8,a2
    3204 000100a0     4a40          BTST    A2,A0
    3205 000100b0     ca06          JRZ     RD2
    3206 000100c0     19e3          MOVK    15,A3
    3207 000100d0     4443          SUB     A2,A3
    3208 000100e0     1103          addk    8,a3
    3209 000100f0                   BSET    A3,A1
    3210 00010120           RD2
    3211 00010120     1502          subk    8,a2
    3212 00010130     1422          DEC     A2
    3213 00010140     cfed          JRNN    RDLOOP
    3214 00010150     4c20          MOVE    A1,A0
    3215                    
    3216 00010160     09af          MMFM    SP,A1,A2,A3
         00010170     000e  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   73

    3217 00010180     0960          RETS
    3218                    
    3219                    
    3220                    **************************************************************************
    3221                    *                                                                        *
    3222                    *       JOY_MESS                                                         *
    3223                    *                                                                        *
    3224                    *       PLOT THE STATUS OF A JOYSTICK AROUND A CIRCLE                    *
    3225                    *                                                                        *
    3226                    *       ENTRY                                                            *
    3227                    *               A9      CENTER OF STICK CIRCLE                           *
    3228                    *               A10     BUTTON MASK                                      *
    3229                    *               A11     COLOR                                            *
    3230                    *                                                                        *
    3231                    *       EXIT                                                             *
    3232                    *               NOTHING                                                  *
    3233                    *                                                                        *
    3234                    **************************************************************************
    3235                            
    3236 00010190           JOY_MESS
    3237 00010190     09e8          MOVI    JJJTAB,A8
         000101a0 00010340' 
    3238 000101c0     1887          MOVK    4,A7
    3239 000101d0           JML
    3240 000101d0     09c3          MOVI    ROBO_BLACK,A3
         000101e0     1414  
    3241 000101f0     2fea          SRL     1,A10
    3242 00010200     c905          JRNC    JM1
    3243 00010210     4d63          MOVE    A11,A3                  ; SET COLOR
    3244 00010220     182e          MOVK    1,A14
    3245 00010230     058e          MOVE    A14,@SCHANGE,W
         00010240 000000b0- 
    3246 00010260           JM1
    3247 00010260     9700          MOVE    *A8+,A0,L
    3248 00010270     4d21          MOVE    A9,A1                   ; CIRCLE CENTER
    3249 00010280     8f02          MOVB    *A8,A2                  ;X CORRECTION
    3250 00010290     1108          ADDK    8,A8
    3251 000102a0     4041          ADD     A2,A1
    3252 000102b0     8f02          MOVB    *A8,A2                  ;Y CORRECTION
    3253 000102c0     1108          ADDK    8,A8
    3254 000102d0     2602          SLL     16,A2
    3255 000102e0     4041          ADD     A2,A1
    3256 000102f0     5642          CLR     A2                      ; DIRECTION
    3257 00010300     0d3f          CALLR   STRNEW
         00010310     055f  
    3258 00010320     3ec7          DSJS    A7,JML
    3259 00010330     0960          RETS
    3260                    *
    3261                    *JOYSTICK MESSAGE TABLE
    3262                    *
    3263 00010340           JJJTAB
    3264 00010340 00014e00'         .LONG   UPMESS
    3265 00010360       f9          .BYTE   -7,-25
    3266                    
    3267 00010370 00014e20'         .LONG   DOWNMESS
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   74

    3268 00010390       f3          .BYTE   -13,18
    3269                    
    3270 000103a0 00014dc0'         .LONG   LEFTMESS
    3271 000103c0       d9          .BYTE   -39,-4
    3272                    
    3273 000103d0 00014de0'         .LONG   RIGHTMESS
    3274 000103f0       12          .BYTE   18,-4
    3275                    
    3276                    
    3277                    
    3278                    **************************************************************************
    3279                    *                                                                        *
    3280                    *       BUT_PLOT                                                         *
    3281                    *                                                                        *
    3282                    *       PLOT A BUTTON TABLE ON THE SCREEN                                *
    3283                    *                                                                        *
    3284                    *       ENTRY                                                            *
    3285                    *               A9      POINTS TO BUTTON TABLE LIST                      *
    3286                    *               A10     SETTINGS OF THE SWITCH REGISTER                  *
    3287                    *                                                                        *
    3288                    *       EXIT                                                             *
    3289                    *               NOTHING                                                  *
    3290                    *                                                                        *
    3291                    **************************************************************************
    3292                    
    3293 00010400           BUT_PLOT:
    3294 00010400     5694          clr     b4                      ;OFFSET
    3295                    
    3296 00010410     8721          MOVE    *A9,A1,L                ; XY LOC
    3297 00010420     ca2c          JRZ     BPDONE
    3298 00010430     1009          ADDK    32,A9                   
    3299 00010440     9520          MOVE    *A9+,A0                 ; RADIUS
    3300 00010450     9726          MOVE    *A9+,A6,L               ; COLOR
    3301 00010460     972b          MOVE    *A9+,A11,L              ; GET MASK
    3302 00010470     1209          ADDK    16,A9                   ; SHIFT COUNT
    3303 00010480     8528          MOVE    *A9,A8,W                ; JAMMA EXTEND-O-BIT
    3304 00010490     ca04          JRZ     BPLOW
    3305 000104a0     07aa          MOVE    @SWSET2,A10,L
         000104b0 00000020- 
    3306 000104d0     c003          JRUC    BPAND
    3307 000104e0           BPLOW
    3308 000104e0     07aa          MOVE    @SWSET1,A10,L
         000104f0 00000000- 
    3309 00010510           BPAND
    3310 00010510     1209          ADDK    16,A9
    3311 00010520     514b          AND     A10,A11                 ; MASK OFF SOMETHING USEFUL
    3312 00010530     ca04          JRZ     BPHOLLOW
    3313 00010540     0b26          ADDI    CFILL,A6                ; MASK IN THE FILL BITS
         00010550 ffff0000  
    3314 00010570     c00e          JRUC    BPCIRC
    3315 00010580           BPHOLLOW
    3316 00010580     098f          MMTM    SP,A0,A1,A6
         00010590     c200  
    3317 000105a0     09c6          MOVI    ROBO_BLACK,A6
         000105b0     1414  
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   75

    3318 000105c0     0b26          ADDI    CFILL,A6
         000105d0 ffff0000  
    3319 000105f0                   FCALL   CIRCLE,B6
    3320 00010630     09af          MMFM    SP,A0,A1,A6
         00010640     0043  
    3321 00010650     c004          JRUC    BPCIRC2
    3322 00010660           BPCIRC
    3323 00010660     182e          MOVK    1,A14
    3324 00010670     058e          MOVE    A14,@SCHANGE,W
         00010680 000000b0- 
    3325 000106a0           BPCIRC2
    3326 000106a0                   FCALL   CIRCLE,B6
    3327 000106e0     c0d1          JRUC    BUT_PLOT
    3328 000106f0           BPDONE
    3329 000106f0     0960          RETS
    3330                    
    3331                    **************************************************************************
    3332                    *                                                                        *
    3333                    *       JOY_PLOT                                                         *
    3334                    *                                                                        *
    3335                    *       PLOT A BUTTON TABLE ON THE SCREEN                                *
    3336                    *                                                                        *
    3337                    *       ENTRY                                                            *
    3338                    *               A9      POINTS TO BUTTON TABLE LIST                      *
    3339                    *                                                                        *
    3340                    **************************************************************************
    3341                    
    3342 00010700           JOY_PLOT:
    3343 00010700     8721          MOVE    *A9,A1,L                ; XY LOC
    3344 00010710     ca0a          JRZ     JPDONE
    3345 00010720     1009          ADDK    32,A9                   
    3346 00010730     9520          MOVE    *A9+,A0                 ; RADIUS
    3347 00010740     8726          MOVE    *A9,A6,L                ; COLOR
    3348 00010750     0b09          ADDI    96,A9
         00010760     0060  
    3349 00010770                   FCALL   CIRCLE,B6
    3350 000107b0     c0f4          JRUC    JOY_PLOT
    3351 000107c0           JPDONE
    3352 000107c0     0960          RETS
    3353                    
    3354                    **************************************************************************
    3355                    *                                                                        *
    3356                    *       JOY_UPDATE                                                       *
    3357                    *                                                                        *
    3358                    *       UPDATE ALL THE STICK INFORMATION                                 *
    3359                    *                                                                        *
    3360                    *       ENTRY                                                            *
    3361                    *               A9      JOYSTICK TABLE POINTER                           *
    3362                    *               A10     SWITCH INFORMATION                               *
    3363                    *                                                                        *
    3364                    *       EXIT                                                             *
    3365                    *               NOTHING                                                  *
    3366                    *                                                                        *
    3367                    **************************************************************************
    3368                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   76

    3369 000107d0           JOY_UPDATE:
    3370 000107d0     8721          MOVE    *A9,A1,L                ; XY LOC
    3371 000107e0     ca1d          JRZ     JUDONE
    3372 000107f0     0b09          ADDI    32,A9                   
         00010800     0020  
    3373 00010810     9520          MOVE    *A9+,A0                 ; RADIUS
    3374 00010820     972b          MOVE    *A9+,A11,L              ; COLOR
    3375 00010830     9726          MOVE    *A9+,A6,L               ; MASK
    3376 00010840     9527          MOVE    *A9+,A7                 ; SHIFT COUNT
    3377 00010850     8528          MOVE    *A9,A8                  ; EXTEND-O-BIT FOR JAMMA
    3378 00010860     ca04          JRZ     JULOW
    3379 00010870     07aa          MOVE    @SWSET2,A10,L
         00010880 00000020- 
    3380 000108a0     c003          JRUC    JUAND
    3381 000108b0           JULOW
    3382 000108b0     07aa          MOVE    @SWSET1,A10,L
         000108c0 00000000- 
    3383 000108e0           JUAND
    3384 000108e0     1209          ADDK    16,A9
    3385 000108f0     5146          AND     A10,A6                  ; MASK OFF JOYSTICK BITS
    3386 00010900     03e7          NOT     A7
    3387 00010910     1027          ADDK    1,A7
    3388 00010920     66e6          SRL     A7,A6                   ; ZERO BASE THE LITTLE SUCKER
    3389 00010930     098f          MMTM    SP,A9,A10,A8,A7
         00010940     01e0  
    3390 00010950     4c29          MOVE    A1,A9                   ; CENTER OF STICK HERE
    3391 00010960     4cca          MOVE    A6,A10                  ; BUTTON MASK
    3392 00010970     0d3f          CALLR   JOY_MESS
         00010980     ff80  
    3393 00010990     09af          MMFM    SP,A9,A10,A8,A7
         000109a0     0780  
    3394 000109b0     c0e1          JRUC    JOY_UPDATE
    3395 000109c0           JUDONE
    3396 000109c0     0960          RETS
    3397                    
    3398                    
    3399                    **************************************************************************
    3400                    *                                                                        *
    3401                    *       STR_PLOT                                                         *
    3402                    *                                                                        *
    3403                    *       PLOT A STRING TABLE ON THE SCREEN                                *
    3404                    *                                                                        *
    3405                    *       ENTRY                                                            *
    3406                    *               A9      POINTS TO STRING TABLE LIST                      *
    3407                    *                                                                        *
    3408                    **************************************************************************
    3409                    
    3410 000109d0           STR_PLOT
    3411 000109d0     8721          MOVE    *A9,A1,L                ;XY LOC
    3412 000109e0     ca09          JRZ     STDONE
    3413 000109f0     1009          ADDK    32,A9                   
    3414 00010a00     9720          MOVE    *A9+,A0,L               ;STRING PTR
    3415 00010a10     9523          MOVE    *A9+,A3                 ;COLOR
    3416 00010a20     9522          MOVE    *A9+,A2                 ;DIRECTION
    3417 00010a30                   FCALL   STRING,B6
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   77

    3418 00010a70     c0f5          JRUC    STR_PLOT
    3419 00010a80           STDONE
    3420 00010a80     0960          RETS
    3421                    
    3422          ffff0000  CFILL   EQU     0FFFF0000H
    3423                    
    3424                    
    3425                    ;       FORMAT
    3426                    ;
    3427                    ;       X,Y,RADIUS,COLOR,MASK,SHIFT COUNT ( FOR JOYSTICK STUFF ), EXTENDBIT
    3428                    
    3429              0050  P1BC    .equ    80
    3430              00a0  P2BC    .equ    160
    3431              00f0  P3BC    .equ    240
    3432              0140  P4BC    .equ    320
    3433              007a  PBCY    .equ    162-40
    3434                    
    3435              00a0  P1BX    equ     P2BC
    3436              0140  P2BX    equ     P4BC
    3437              006e  PBY     equ     110
    3438                    
    3439 00010a90           BUT_TABLE
    3440 00010a90                   BUT_MAC P1BX-24,PBY-12,10,ROBO_BLUE,010H,0,0            ; P1 A1 (PUNCH)
    3441 00010b20                   BUT_MAC P1BX,   PBY,10,ROBO_RED,020H,0,0                ; P1 A2 (BLOCK)
    3442 00010bb0                   BUT_MAC P1BX+24,PBY-12,10,ROBO_BLUE,040H,0,0            ; P1 A3 (SPUNCH)
    3443 00010c40                   BUT_MAC P1BX-24,PBY+12,10,ROBO_BLUE,01H,0,1             ; P1 A5 (KICK)
    3444 00010cd0                   BUT_MAC P1BX+24,PBY+12,10,ROBO_BLUE,02H,0,1             ; P1 A6 (SKICK)
    3445                    
    3446 00010d60                   BUT_MAC P2BX-24,PBY-12,10,ROBO_BLUE,01000H,0,0          ; P2 A1 (PUNCH)
    3447 00010df0                   BUT_MAC P2BX,   PBY,10,ROBO_RED,02000H,0,0              ; P2 A2 (BLOCK)
    3448 00010e80                   BUT_MAC P2BX+24,PBY-12,10,ROBO_BLUE,04000H,0,0          ; P2 A3 (SPUNCH)
    3449 00010f10                   BUT_MAC P2BX-24,PBY+12,10,ROBO_BLUE,10H,0,1             ; P2 A5 (KICK)
    3450 00010fa0                   BUT_MAC P2BX+24,PBY+12,10,ROBO_BLUE,20H,0,1             ; P2 A6 (SKICK)
    3451                    
    3452                    
    3453 00011030                   BUT_MAC P1BC,70,10,ROBO_WHITE,00040000H,0,0     ; P1 START
    3454 000110c0                   BUT_MAC P3BC,70,10,ROBO_WHITE,00200000H,0,0     ; P2 START
    3455                    
    3456 00011150                   BUT_MAC 30,199,10,COLOR_GREEN,00010000H,0,0     ; COIN LEFT
    3457 000111e0                   BUT_MAC 75,199,10,COLOR_PURPLE,00020000H,0,0    ; COIN RIGHT
    3458 00011270                   BUT_MAC 120,184,10,COLOR_GREEN,00800000H,0,0    ; COIN CENTER
    3459 00011300                   BUT_MAC 120,217,10,COLOR_GREEN,01000000H,0,0    ; FOURTH COIN
    3460 00011390                   BUT_MAC 214,199,10,COLOR_GREEN,00400000H,0,0    ; SERVICE CREDIT
    3461 00011420                   BUT_MAC 332,184,10,COLOR_GREEN,00080000H,0,0    ; SLAM
    3462 000114b0                   BUT_MAC 332,206,10,COLOR_GREEN,00100000H,0,0    ; TEST
    3463 00011540                   BUT_MAC 165,184,10,COLOR_PURPLE,10000000H,0,0   ; VOL UP
    3464 000115d0                   BUT_MAC 165,217,10,COLOR_PURPLE,08000000H,0,0   ; VOL DOWN
    3465 00011660                   BUT_MAC 280,199,10,COLOR_PURPLE,20000000H,0,0   ; COINDOOR INTERLOCK
    3466 000116f0                   BUT_MAC 332,228,10,COLOR_GREEN,80000000H,0,0    ; BILL VALIDATOR INPUT
    3467                    
    3468 00011780 00000000          .LONG   0
    3469                    
    3470                    
    3471                            ;       X,Y,RADIUS,COLOR,MASK,SHIFT,EXTEND
    3472 000117a0           JOY_TABLE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   78

    3473 000117a0                   BUT_MAC P1BC,110,16,CFILL+ROBO_RED,0fH,0,0              ; P1 MOVE
    3474 00011830                   BUT_MAC P3BC,110,16,CFILL+ROBO_RED,0f00H,8,0            ; P2 MOVE
    3475 000118c0 00000000          .LONG   0
    3476                    
    3477                    
    3478 000118e0           STR_TABLE
    3479 000118e0                   STR_MAC P1BC-24,47,P1START,ROBO_RED,0   ; P1 START
    3480 00011940                   STR_MAC P3BC-24,47,P2START,ROBO_RED,0   ; P2 START
    3481 000119a0                   STR_MAC 70,162,GETOUT1,ROBO_LASER,0     ;GET OUT MESSAGE 1
    3482 00011a00                   STR_MAC 12,225,LEFTSLOT,COLOR_GREEN,0           ;LEFT COIN
    3483 00011a60                   STR_MAC 103,197,CENTER,COLOR_GREEN,0            ;CENTER COIN
    3484 00011ac0                   STR_MAC 103,230,FOURTH,COLOR_GREEN,0            ;COIN MIDDLE
    3485 00011b20                   STR_MAC 56,225,RIGHTSLOT,COLOR_PURPLE,0         ;RIGHT COIN
    3486 00011b80                   STR_MAC 10,214,COINMESS1,COLOR_GREEN,0          ;BOTTOM MESSAGE
    3487 00011be0                   STR_MAC 55,214,COINMESS2,COLOR_PURPLE,0
    3488 00011c40                   STR_MAC 193,214,SERVICE1,COLOR_GREEN,0          ;SERVICE CREDIT
    3489 00011ca0                   STR_MAC 197,225,SERVICE2,COLOR_GREEN,0          ;SERVICE CREDIT
    3490 00011d00                   STR_MAC 347,181,SLAM,COLOR_GREEN,0              ;SLAM
    3491 00011d60                   STR_MAC 347,204,TEST,COLOR_GREEN,0              ;TEST SWITCH
    3492 00011dc0                   STR_MAC 143,197,VOLUPMESS,COLOR_PURPLE,0        ;VOLUME UP
    3493 00011e20                   STR_MAC 143,230,VOLDOWNMESS,COLOR_PURPLE,0      ;VOLUME DOWN
    3494 00011e80                   STR_MAC 252,214,CDINTERLOCK1,COLOR_PURPLE,0     ;COINDOOR INTERLOCK 1
    3495 00011ee0                   STR_MAC 252,225,CDINTERLOCK2,COLOR_PURPLE,0     ;COINDOOR INTERLOCK 2
    3496 00011f40                   STR_MAC 347,227,BILLVALID,COLOR_GREEN,0         ;BILL VALIDATOR
    3497                    
    3498 00011fa0                   STR_MAC P1BC-15,110-3,J1MESS,ROBO_WHITE,0
    3499 00012000                   STR_MAC P3BC-15,110-3,J2MESS,ROBO_WHITE,0
    3500                    
    3501 00012060 00000000          .LONG   0
    3502                    
    3503                    
    3504 00012080           BUT_STRS
    3505                    
    3506 00012080 00000000          .LONG   0
    3507                    
    3508                    **************************************************************************
    3509                    *                                                                        *
    3510                    *       DIP SWITCH DISPLAY STUFF                                         *
    3511                    *                                                                        *
    3512                    **************************************************************************
    3513 000120a0           DIP_VECS:
    3514 000120a0                   VECMAC  COLOR_RED,20,82,60,82           ; DS1
    3515 000120f0                   VECMAC  COLOR_RED,20,82,20,188
    3516 00012140                   VECMAC  COLOR_RED,20,188,60,188 
    3517 00012190                   VECMAC  COLOR_RED,60,82,60,188
    3518                    
    3519 000121e0                   VECMAC  COLOR_RED,230,82,270,82 ; DS2
    3520 00012230                   VECMAC  COLOR_RED,230,82,230,188
    3521 00012280                   VECMAC  COLOR_RED,230,188,270,188       
    3522 000122d0                   VECMAC  COLOR_RED,270,82,270,188
    3523                    
    3524 00012320                   VECMAC  COLOR_WHITE,63,92,73,92
    3525                    
    3526                    
    3527 00012370                   VECMAC  COLOR_WHITE,63,104,68,104               ;COINAGE MODE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   79

    3528 000123c0                   VECMAC  COLOR_WHITE,63,128,68,128
    3529 00012410                   VECMAC  COLOR_WHITE,68,104,68,128
    3530 00012460                   VECMAC  COLOR_WHITE,68,116,73,116
    3531                    
    3532 000124b0                   VECMAC  COLOR_WHITE,63,140,68,140               ;COUNTRY
    3533 00012500                   VECMAC  COLOR_WHITE,63,152,68,152
    3534 00012550                   VECMAC  COLOR_WHITE,68,140,68,152
    3535 000125a0                   VECMAC  COLOR_WHITE,68,146,73,146
    3536                    
    3537 000125f0                   VECMAC  COLOR_WHITE,63,164,68,164       ;COIN COUNTER MODE
    3538 00012640                   VECMAC  COLOR_WHITE,63,176,68,176
    3539 00012690                   VECMAC  COLOR_WHITE,68,164,68,176
    3540 000126e0                   VECMAC  COLOR_WHITE,68,170,73,170
    3541                    
    3542 00012730                   VECMAC  COLOR_WHITE,273,92,283,92       ;# OF PLAYERS
    3543                    
    3544 00012780                   VECMAC  COLOR_WHITE,273,104,283,104     ;UNUSED
    3545                            
    3546 000127d0                   VECMAC  COLOR_WHITE,273,116,283,116     ;UNUSED
    3547                    
    3548 00012820                   VECMAC  COLOR_WHITE,273,128,283,128     ;UNUSED
    3549                    
    3550 00012870                   VECMAC  COLOR_WHITE,273,140,283,140     ;UNUSED
    3551                    
    3552 000128c0                   VECMAC  COLOR_WHITE,273,152,283,152     ;UNUSED
    3553                    
    3554                    
    3555                    
    3556 00012910                   VECMAC  COLOR_WHITE,273,164,283,164     ;UNUSED
    3557                    
    3558 00012960                   VECMAC  COLOR_WHITE,273,176,283,176     ;TEST SWITCH
    3559                    
    3560 000129b0 00000000          .LONG   0
    3561                    
    3562 000129d0           DIP_STRS:
    3563 000129d0                   STR_MAC 30,70,DP_DS1,COLOR_WHITE,0
    3564 00012a30                   STR_MAC 240,70,DP_DS2,COLOR_WHITE,0
    3565 00012a90                   STR_MAC 7,89,DP_DSN1,COLOR_WHITE,0
    3566 00012af0                   STR_MAC 7,101,DP_DSN2,COLOR_WHITE,0
    3567 00012b50                   STR_MAC 7,113,DP_DSN3,COLOR_WHITE,0
    3568 00012bb0                   STR_MAC 7,125,DP_DSN4,COLOR_WHITE,0
    3569 00012c10                   STR_MAC 7,137,DP_DSN5,COLOR_WHITE,0
    3570 00012c70                   STR_MAC 7,149,DP_DSN6,COLOR_WHITE,0
    3571 00012cd0                   STR_MAC 7,161,DP_DSN7,COLOR_WHITE,0
    3572 00012d30                   STR_MAC 7,173,DP_DSN8,COLOR_WHITE,0
    3573                    
    3574 00012d90                   STR_MAC 217,89,DP_DSN1,COLOR_WHITE,0
    3575 00012df0                   STR_MAC 217,101,DP_DSN2,COLOR_WHITE,0
    3576 00012e50                   STR_MAC 217,113,DP_DSN3,COLOR_WHITE,0
    3577 00012eb0                   STR_MAC 217,125,DP_DSN4,COLOR_WHITE,0
    3578 00012f10                   STR_MAC 217,137,DP_DSN5,COLOR_WHITE,0
    3579 00012f70                   STR_MAC 217,149,DP_DSN6,COLOR_WHITE,0
    3580 00012fd0                   STR_MAC 217,161,DP_DSN7,COLOR_WHITE,0
    3581 00013030                   STR_MAC 217,173,DP_DSN8,COLOR_WHITE,0
    3582                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   80

    3583 00013090                   STR_MAC 100,230,DP_INS1,ROBO_LASER,0
    3584                    
    3585 000130f0 00000000          .LONG   0
    3586                    
    3587 00013110           DP_DS1:
    3588 00013110       53          .STRING "SW2",0
    3589 00013130                   .EVEN
    3590 00013130           DP_DS2:
    3591 00013130       53          .STRING "SW1",0
    3592 00013150                   .EVEN
    3593 00013150           DP_DSN1
    3594 00013150       38          .STRING "8",0
    3595 00013160                   .EVEN
    3596 00013160           DP_DSN2
    3597 00013160       37          .STRING "7",0
    3598 00013170                   .EVEN
    3599 00013170           DP_DSN3
    3600 00013170       36          .STRING "6",0
    3601 00013180                   .EVEN
    3602 00013180           DP_DSN4
    3603 00013180       35          .STRING "5",0
    3604 00013190                   .EVEN
    3605 00013190           DP_DSN5
    3606 00013190       34          .STRING "4",0
    3607 000131a0                   .EVEN
    3608 000131a0           DP_DSN6
    3609 000131a0       33          .STRING "3",0
    3610 000131b0                   .EVEN    
    3611 000131b0           DP_DSN7
    3612 000131b0       32          .STRING "2",0
    3613 000131c0                   .EVEN
    3614 000131c0           DP_DSN8
    3615 000131c0       31          .STRING "1",0
    3616 000131d0                   .EVEN
    3617                    
    3618 000131d0           TD_ON:
    3619 000131d0       54          .string "TIME/DATE",0
    3620 00013220                   .even
    3621 00013220           TD_OFF:
    3622 00013220       4e          .string "NO TIME/DATE",0
    3623 00013290                   .even
    3624 00013290           DUSECMOS_1:
    3625 00013290       43          .STRING "CMOS COINAGE",0
    3626 00013300                   .EVEN
    3627                    
    3628 00013300           DUSECMOS_0:
    3629 00013300       44          .STRING "DIPSWITCH COINAGE",0
    3630 00013390                   .EVEN
    3631                    
    3632 00013390           DMIRROR_0
    3633 00013390       4d          .STRING "MIRROR DISPLAY",0
    3634 00013410                   .EVEN
    3635                    
    3636 00013410           DMIRROR_1
    3637 00013410       4e          .STRING "NORMAL DISPLAY",0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   81

    3638 00013490                   .EVEN
    3639                    
    3640 00013490           DCOUNTER_0a
    3641 00013490       4f          .STRING "ONE COIN COUNTER",0
    3642 00013520                   .EVEN
    3643 00013520           DCOUNTER_0b
    3644 00013520       31          .STRING "1 COUNT/COIN",0
    3645 00013590                   .EVEN
    3646                    
    3647 00013590           DCOUNTER_1a
    3648 00013590       54          .STRING "TWO COIN COUNTERS",0
    3649 00013620                   .EVEN
    3650 00013620           DCOUNTER_1b
    3651 00013620       31          .STRING "1 COUNT/COIN",0
    3652 00013690                   .EVEN
    3653                    
    3654 00013690           DCOUNTER_2a
    3655 00013690       4f          .STRING "ONE COIN COUNTER",0
    3656 00013720                   .EVEN
    3657 00013720           DCOUNTER_2b
    3658 00013720       54          .STRING "TOTALIZING ",0
    3659 00013780                   .EVEN
    3660                    
    3661                    
    3662 00013780           DCOUNTER_TAB
    3663 00013780 00013490'         .LONG   DCOUNTER_0a, DCOUNTER_0b
    3664 000137c0 00013590'         .LONG   DCOUNTER_1a, DCOUNTER_1b
    3665 00013800 00013690'         .LONG   DCOUNTER_2a, DCOUNTER_2b
    3666 00013840 00013490'         .LONG   DCOUNTER_0a, DCOUNTER_0b
    3667                    
    3668 00013880           DCOINAGE
    3669 00013880       43          .STRING "COINAGE",0
    3670 000138c0                   .EVEN
    3671                    
    3672 000138c0           DCOUNTRY_0
    3673 000138c0       55          .STRING "USA",0
    3674 000138e0                   .EVEN
    3675 000138e0           DCOUNTRY_2
    3676 000138e0       46          .STRING "FRENCH",0
    3677 00013920                   .EVEN
    3678                    
    3679                            .if 0
    3680                    DPLAYER_TAB
    3681                            .LONG   DPLAYER_0, DPLAYER_1
    3682                            .endif
    3683                    
    3684 00013920           DCOUNTRY_1
    3685 00013920       47          .STRING "GERMAN",0
    3686 00013960                   .EVEN
    3687                    
    3688 00013960           DCOUNTRY_TAB
    3689 00013960 000138c0'         .LONG   DCOUNTRY_0, DCOUNTRY_1, DCOUNTRY_2, DCOUNTRY_3
    3690                    
    3691 000139e0           DCREDITS
    3692 000139e0       43          .STRING "CREDITS...",0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   82

    3693 00013a40                   .EVEN
    3694 00013a40           DTOSTART
    3695 00013a40       54          .STRING "TO START",0
    3696 00013a90                   .EVEN
    3697 00013a90           DTOCONTINUE
    3698 00013a90       54          .STRING "TO CONTINUE",0
    3699 00013af0                   .EVEN
    3700                    
    3701 00013af0           DTEST_0
    3702 00013af0       54          .STRING "TEST SWITCH",0
    3703 00013b50                   .EVEN
    3704                    
    3705                            .if 0
    3706                    DPLAYER_0
    3707                            .STRING "4 PLAYER KIT",0
    3708                            .EVEN
    3709                    DPLAYER_1
    3710                            .STRING "2 PLAYER KIT",0
    3711                            .EVEN
    3712                            .endif
    3713                    
    3714 00013b50           DNOVALIDATOR
    3715 00013b50       4e          .STRING "NO VALIDATOR",0
    3716 00013bc0                   .EVEN
    3717 00013bc0           DVALIDATOR
    3718 00013bc0       56          .STRING "VALIDATOR INST.",0
    3719 00013c40                   .EVEN
    3720 00013c40           DCLIPS
    3721 00013c40       55          .STRING "UNUSED",0
    3722 00013c80                   .EVEN
    3723 00013c80           DNOCLIPS
    3724 00013c80       55          .STRING "UNUSED",0
    3725 00013cc0                   .EVEN
    3726 00013cc0           DPOWER
    3727 00013cc0       50          .STRING "POWERUP TEST",0
    3728 00013d30                   .EVEN
    3729 00013d30           DNOPOWER
    3730 00013d30       53          .STRING "SKIP TEST",0
    3731 00013d80                   .EVEN
    3732                    
    3733 00013d80           DUCOIN7
    3734 00013d80       46          .STRING "FREEPLAY",0
    3735 00013dd0                   .EVEN
    3736                    
    3737 00013dd0           DCOINTAB
    3738 00013dd0 00014040'         .LONG   DUCOINTAB, DGCOINTAB, DFCOINTAB, DUCOINTAB
    3739                    
    3740 00013e50           DP_TITLE
    3741 00013e50       44          .STRING "DIPSWITCH SETTINGS",0
    3742 00013ef0                   .EVEN
    3743                    
    3744 00013ef0           DP_INS1
    3745 00013ef0       50          .STRING "PRESS ANY BUTTON TO EXIT",0
    3746 00013fc0                   .EVEN
    3747                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   83

    3748 00013fc0           DP_ON
    3749 00013fc0       4f          .STRING "ON",0
    3750 00013fe0                   .EVEN
    3751 00013fe0           DP_OFF
    3752 00013fe0       4f          .STRING "OFF",0
    3753                    
    3754 00014000           DUNUSED
    3755 00014000           DGCOIN4
    3756 00014000           DCOUNTRY_3 
    3757 00014000       55          .STRING "UNUSED",0
    3758 00014040                   .EVEN
    3759                    
    3760 00014040           DUCOINTAB
    3761 00014040 00000000!         .LONG   USA_1,USA_2,USA_3,USA_4,USA_ELECTITLE,DGCOIN4
    3762 00014100 00014000'         .LONG   DGCOIN4,DUCOIN7
    3763                    
    3764 00014140           DGCOINTAB
    3765 00014140 00000000!         .LONG   GERMAN_1,GERMAN_2,GERMAN_3,GERMAN_4,GERMAN_ELECTITLE
    3766 000141e0 00014000'         .LONG   DGCOIN4,DGCOIN4,DUCOIN7
    3767                    
    3768 00014240           DFCOINTAB
    3769 00014240 00000000!         .LONG   FRENCH_1,FRENCH_2,FRENCH_3,FRENCH_4,FRENCH_ELECTITLE
    3770 000142e0 00014000'         .LONG   DGCOIN4,DGCOIN4,DUCOIN7
    3771                    
    3772 00014340           DCREDTAB
    3773 00014340 00013160'         .LONG   DP_DSN2,DP_DSN1
    3774 00014380 00013150'         .LONG   DP_DSN1,DP_DSN1
    3775 000143c0 00013160'         .LONG   DP_DSN2,DP_DSN2
    3776 00014400 00013170'         .LONG   DP_DSN3,DP_DSN1
    3777 00014440 00013180'         .LONG   DP_DSN4,DP_DSN1
    3778 00014480 00013170'         .LONG   DP_DSN3,DP_DSN2
    3779 000144c0 00013180'         .LONG   DP_DSN4,DP_DSN2
    3780 00014500 00013170'         .LONG   DP_DSN3,DP_DSN3
    3781                    
    3782                    
    3783                            .if 0
    3784                    dip_t
    3785                            STR_MAC 090h,20h,DIPMES0,ROBO_YELLOW,0 ;DIP SWITCH TEST
    3786                            STR_MAC DS1_XPOS+16,3Ch,DIPMES1,ROBO_GREEN,0    ;DIP SWITCH 1
    3787                            STR_MAC DS2_XPOS+16,3Ch,DIPMES2,ROBO_GREEN,0    ;DIP SWITCH 2
    3788                            STR_MAC 200-12*8,220,GETOUT2,ROBO_GREEN,0       ;exit message
    3789                            .LONG   0
    3790                    
    3791                    dipline_t
    3792                            .word   20,10,379,10
    3793                            .word   379,10,379,245
    3794                            .word   379,245,20,245
    3795                            .word   20,245,20,10
    3796                    
    3797                            .word   DS1_XPOS+12,DIP_YPOS-4,         DS1_XPOS+43,DIP_YPOS-4
    3798                            .word   DS1_XPOS+12,DIP_YPOS+109,       DS1_XPOS+43,DIP_YPOS+109
    3799                            .word   DS1_XPOS+12,DIP_YPOS-4,         DS1_XPOS+12,DIP_YPOS+109
    3800                            .word   DS1_XPOS+43,DIP_YPOS-4,         DS1_XPOS+43,DIP_YPOS+109
    3801                    
    3802                            .word   DS2_XPOS+12,DIP_YPOS-4,         DS2_XPOS+43,DIP_YPOS-4
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   84

    3803                            .word   DS2_XPOS+12,DIP_YPOS+109,       DS2_XPOS+43,DIP_YPOS+109
    3804                            .word   DS2_XPOS+12,DIP_YPOS-4,         DS2_XPOS+12,DIP_YPOS+109
    3805                            .word   DS2_XPOS+43,DIP_YPOS-4,         DS2_XPOS+43,DIP_YPOS+109
    3806                    
    3807                            .long   -1
    3808                    
    3809                    dipline2
    3810                            .word   DS1_XPOS+45,DIP_YPOS+3,         DS1_XPOS+48,DIP_YPOS+3
    3811                            .word   DS1_XPOS+45,DIP_YPOS+4+5*14,    DS1_XPOS+48,DIP_YPOS+4+5*14
    3812                            .word   DS1_XPOS+48,DIP_YPOS+3,         DS1_XPOS+48,DIP_YPOS+4+5*14
    3813                            .word   DS1_XPOS+49,DIP_YPOS-2+3*14,    DS1_XPOS+51,DIP_YPOS-2+3*14
    3814                            .word   DS1_XPOS+45,DIP_YPOS+4+6*14,    DS1_XPOS+51,DIP_YPOS+4+6*14
    3815                            .word   DS2_XPOS+45,DIP_YPOS+4,         DS2_XPOS+51,DIP_YPOS+4
    3816                            .long   -1
    3817                    
    3818                    country_text
    3819                            .long   cntry0,cntry1,cntry2,cntry3     ;4
    3820                            .long   cntry4,cntry5,cntry6,cntry7     ;8
    3821                            .long   cntry8,cntry9,cntry10,cntry11   ;12
    3822                            .long   cntry12,cntry13,cntry14,cntry15 ;16
    3823                            .long   cntry16,cntry17,cntry18,cntry19 ;20
    3824                            .long   cntry20,cntry21,cntry22,cntry23 ;24
    3825                            .long   cntry24,cntry25,cntry26,cntry0  ;28
    3826                            .long   cntry0,cntry0,cntry0,cntry0     ;32
    3827                    
    3828                            .long   cntry0,cntry0,cntry0,cntry0     ;36
    3829                            .long   cntry0,cntry0,cntry0,cntry0     ;40
    3830                            .long   cntry0,cntry0,cntry0,cntry0     ;44
    3831                            .long   cntry0,cntry0,cntry0,cntry0     ;48
    3832                            .long   cntry0,cntry0,cntry0,cntry0     ;52
    3833                            .long   cntry0,cntry0,cntry0,cntry0     ;56
    3834                            .long   cntry0,cntry0,cntry0,cntry0     ;60
    3835                            .long   cntry0,cntry0,cntry0,cntry0     ;64
    3836                    
    3837                    cntry0  .string "USA 1",0       ;0
    3838                    cntry1  .string "USA 2",0       ;1
    3839                    cntry2  .string "USA 3",0       ;2
    3840                    cntry3  .string "GERMANY 1",0   ;3
    3841                    cntry4  .string "GERMANY 2",0   ;4
    3842                    cntry5  .string "GERMANY 3",0   ;5
    3843                    cntry6  .string "FRANCE 1",0    ;6
    3844                    cntry7  .string "FRANCE 2",0    ;7
    3845                    cntry8  .string "FRANCE 3",0    ;8
    3846                    cntry9  .string "SWISS 1",0     ;9
    3847                    cntry10 .string "ITALY",0       ;10
    3848                    cntry11 .string "UK 1",0        ;11
    3849                    cntry12 .string "UK 2",0        ;12
    3850                    cntry13 .string "UK ELEC",0     ;13
    3851                    cntry14 .string "SPAIN 1",0     ;14
    3852                    cntry15 .string "AUSTRALIA 1",0 ;15
    3853                    cntry16 .string "JAPAN 1",0     ;16
    3854                    cntry17 .string "JAPAN 2",0     ;17
    3855                    cntry18 .string "AUSTRIA 1",0   ;18
    3856                    cntry19 .string "BELGIUM 1",0   ;19
    3857                    cntry20 .string "BELGIUM 2",0   ;20
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   85

    3858                    cntry21 .string "SWEDEN",0      ;21
    3859                    cntry22 .string "NEW ZEALAND",0 ;22
    3860                    cntry23 .string "NETHERLANDS",0 ;23
    3861                    cntry24 .string "FINLAND",0     ;24
    3862                    cntry25 .string "NORWAY",0      ;25
    3863                    cntry26 .string "DENMARK",0     ;26
    3864                    
    3865                    DIP_COIN1       .string "CMOS COINAGE",0
    3866                    DIP_COIN2       .string "DIP COINAGE",0
    3867                    DIP_TESTSW1     .string "TEST MODE",0
    3868                    DIP_TESTSW2     .string "GAME MODE",0
    3869                    
    3870                    DIPMES0 .STRING "DIP SWITCH TEST",0
    3871                    DIPMES1 .STRING "DS1",0
    3872                    DIPMES2 .STRING "DS2",0
    3873                    DIPMES01        .string "1",0
    3874                    DIPMES02        .string "2",0
    3875                    DIPMES03        .string "3",0
    3876                    DIPMES04        .string "4",0
    3877                    DIPMES05        .string "5",0
    3878                    DIPMES06        .string "6",0
    3879                    DIPMES07        .string "7",0
    3880                    DIPMES08        .string "8",0
    3881                    DIPMES18
    3882                            .STRING "1 2 3 4 5 6 7 8",0
    3883                    DIPON   .STRING "ON",0
    3884                    DIPOFF  .STRING "OFF",0
    3885                    
    3886                            .endif
    3887                    
    3888 00014540           LEFTSLOT
    3889 00014540       4c          .STRING "LEFT",0
    3890 00014570                   .EVEN
    3891 00014570           RIGHTSLOT
    3892 00014570       52          .STRING "RIGHT",0
    3893 000145a0                   .EVEN
    3894 000145a0           SERVICE1
    3895 000145a0       53          .STRING "SERVICE",0
    3896 000145e0                   .EVEN
    3897 000145e0           SERVICE2
    3898 000145e0       43          .STRING "CREDIT",0
    3899 00014620                   .EVEN
    3900                    
    3901 00014620           COINMESS1
    3902 00014620       43          .STRING "COIN1",0
    3903 00014650                   .EVEN
    3904 00014650           COINMESS2
    3905 00014650       43          .STRING "COIN2",0       
    3906 00014680                   .EVEN
    3907                    
    3908 00014680           CENTER
    3909 00014680       43          .STRING "COIN3",0
    3910 000146b0                   .EVEN
    3911 000146b0           FOURTH
    3912 000146b0       43          .STRING "COIN4",0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   86

    3913 000146e0                   .EVEN
    3914 000146e0       53  SLAM    .string "SLAM",0
    3915 00014710                   .even
    3916 00014710           VOLUPMESS
    3917 00014710       56          .string "VOL UP",0
    3918 00014750                   .even
    3919 00014750           VOLDOWNMESS
    3920 00014750       56          .string "VOL DN",0
    3921 00014790                   .even
    3922 00014790           CDINTERLOCK1
    3923 00014790       43          .string "COINDOOR",0
    3924 000147e0                   .even
    3925 000147e0           CDINTERLOCK2
    3926 000147e0       49          .string "INTERLOCK",0
    3927 00014830                   .even
    3928 00014830           BILLVALID
    3929 00014830       42          .string "BILL IN",0
    3930 00014870                   .even
    3931                    
    3932 00014870           TEST
    3933 00014870       54          .STRING "TEST",0
    3934 000148a0                   .EVEN
    3935 000148a0           SEC_MESS_1
    3936 000148a0       4c          .string "LEVEL 1 SECURITY CHECK",0
    3937 00014960                   .even
    3938 00014960           SEC_MESS_2
    3939 00014960       4c          .string "LEVEL 2 SECURITY CHECK FAILURE",0
    3940 00014a60                   .even
    3941                    
    3942                    
    3943 00014a60       4a  J1MESS  .string "JOY1",0
    3944 00014a88       4a  J2MESS  .string "JOY2",0
    3945                    
    3946 00014ab0       50  GETOUT2 .STRING "PRESS ANY BUTTON TO EXIT",0
    3947 00014b78       50  GETOUT1 .STRING "PRESS START 1 AND START 2 TO EXIT",0
    3948 00014c90                   .EVEN
    3949                    
    3950 00014c90       57  STSTART .STRING "WRESTLEMANIA SWITCHES",0
    3951 00014d40                   .EVEN
    3952                    
    3953 00014d40       53  P1START .STRING "START 1",0
    3954 00014d80                   .EVEN
    3955 00014d80       53  P2START .STRING "START 2",0
    3956 00014dc0                   .EVEN
    3957                    
    3958 00014dc0           LEFTMESS
    3959 00014dc0       4c          .STRING "LFT",0
    3960 00014de0                   .EVEN
    3961 00014de0           RIGHTMESS
    3962 00014de0       52          .STRING "RT",0
    3963 00014e00                   .EVEN
    3964 00014e00           UPMESS
    3965 00014e00       55          .STRING "UP",0
    3966 00014e20                   .EVEN
    3967 00014e20           DOWNMESS
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   87

    3968 00014e20       44          .STRING "DWN",0
    3969 00014e40                   .EVEN
    3970                    
    3971 00014e40           P1MOVE
    3972 00014e40       50          .STRING "P1 MOVE",0
    3973 00014e80                   .EVEN
    3974 00014e80           P2MOVE
    3975 00014e80       50          .STRING "P2 MOVE",0
    3976 00014ec0                   .EVEN
    3977                    
    3978                    
    3979                    ****************************************************************************
    3980                    * INITCOLR: INITIALIZE COLORS; ROUTINE LOADS PALETTE 0 WITH THE COLOR       *
    3981                    *            PALETTE USED BY DIAGNOSTIC TESTS.                              *
    3982                    ****************************************************************************
    3983                    
    3984 00014ec0           INITCOLR
    3985                    
    3986 00014ec0     09e0          MOVI    COLRAM,A0,L             ; PALETTE LOCATION
         00014ed0 01880000  
    3987 00014ef0     09e1          MOVI    DIAGP,A1,L
         00014f00 00000000! 
    3988 00014f20     9422          MOVE    *A1+,A2,W               ; LENGTH OF PALETTE
    3989 00014f30           LPLP1
    3990 00014f30     9820          MOVE    *A1+,*A0+,W
    3991 00014f40     3c42          DSJS    A2,LPLP1                ; KEEP ON CHUGGIN, BABY
    3992                    
    3993 00014f50     57ce          CLR  A14
    3994 00014f60     058e          MOVE A14, @CMAPSEL
         00014f70 01a80080  
    3995                    
    3996 00014f90                   FRET B5
    3997                    ****************************************************************************
    3998                    * POINT: FUNCTION DISPLAYS A POINT OF ANY COLOR.                            *
    3999                    *                                                                           *
    4000                    *             ENTRY: A0 = XY SCREEN ADDRESS OF THE POINT                    *
    4001                    *                    A1 = COLOR VALUE                                       *
    4002                    *                    B6 = RETURN ADDRESS                                    *
    4003                    *                                                                           *
    4004                    *             USES:  A0, A1, B2, B3, B4, B6, B10                            *
    4005                    ****************************************************************************
    4006                    
    4007 00014fa0           POINT:
    4008 00014fa0     0b00          ADDI    SCRXFUDGE,A0
         00014fb0     0038  
    4009                    
    4010 00014fc0     09d3          MOVI SCRN_PTCH, DPTCH
         00014fd0     1000  
    4011 00014fe0     5694          CLR  OFFSET
    4012                    
    4013 00014ff0     6a7a          LMO  DPTCH, B10
    4014 00015000     059a          MOVE B10, @CONVDP
         00015010 c0000140  
    4015                    
    4016 00015030     f020          PIXT A1, *A0.XY
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   88

    4017                    
    4018 00015040                   FRET B6
    4019                    
    4020                    ****************************************************************************
    4021                    * RECTANGLE: FUNCTION DISPLAYS A RECTANGLE OF ANY COLOR.                    *
    4022                    *                                                                           *
    4023                    *             ENTRY: A0 = XY SCREEN ADDRESS OF UPPER LEFT CORNER            *
    4024                    *                    A1 = XY RECTANGLE DIMENSIONS                           *
    4025                    *                    A2 = COLOR VALUE                                       *
    4026                    *                                                                           *
    4027                    *                    B6 = RETURN ADDRESS                                    *
    4028                    *                                                                           *
    4029                    *             USES:  A0, A1, A2, B2, B3, B4, B6, B7, B9, B10                *
    4030                    ****************************************************************************
    4031                    
    4032 00015050           RECTANGLE:
    4033 00015050     0b00          ADDI    SCRXFUDGE,A0
         00015060     0038  
    4034                    
    4035 00015070     09d3          MOVI SCRN_PTCH, DPTCH
         00015080     1000  
    4036 00015090     5694          CLR  OFFSET
    4037                    
    4038 000150a0     6a7a          LMO  DPTCH, B10
    4039 000150b0     059a          MOVE B10, @CONVDP
         000150c0 c0000140  
    4040                    
    4041 000150e0     4e49          MOVE A2, COLOR1
    4042 000150f0     4e02          MOVE A0, DADDR
    4043 00015100     4e27          MOVE A1, DYDX
    4044 00015110     0781          move    a1,@_temporary,L        ;Temporary Storage fer these
         00015120 00000100- 
    4045 00015140     4e40          move    a2,SADDR
    4046 00015150     05a1          move    @CONTROL,a1,W
         00015160 c00000b0  
    4047 00015180     4c22          move    a1,a2
    4048 00015190     0b82          andni   020h,a2
         000151a0 00000020  
    4049 000151c0     0582          move    a2,@CONTROL,W           ; Pixel Transparency OFF
         000151d0 c00000b0  
    4050 000151f0     4c42          move    a2,a2
    4051                    
    4052 00015200     0fe0          FILL  XY
    4053                    
    4054 00015210     0581          move    a1,@CONTROL,W           ; Restore Pixel Transparency
         00015220 c00000b0  
    4055 00015240     4e12          move    SADDR,a2                ; Restore these reggies
    4056 00015250     07a1          move    @_temporary,a1,L
         00015260 00000100- 
    4057                    
    4058 00015280     0be0          SUBI    SCRXFUDGE,A0
         00015290     ffc7  
    4059                    
    4060 000152a0                   FRET B6
    4061                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   89

    4062                    ****************************************************************************
    4063                    * LINE: FUNCTION DRAWS HORIZONTAL OR VERTICAL LINES OF ANY COLOR.
    4064                    *
    4065                    *             ENTRY: A0 = BEGINNING XY SCREEN ADDRESS
    4066                    *                    A1 = ENDING XY SCREEN ADDRESS
    4067                    *                    A2 = COLOR VALUE
    4068                    *
    4069                    *                    B6 = RETURN ADDRESS
    4070                    *
    4071                    *       USES: A0-A4, B3,B4,B6,B9,B10
    4072                    ****************************************************************************
    4073                    
    4074 000152b0           HVLINE
    4075 000152b0     09c3          MOVI    SCRXFUDGE,A3
         000152c0     0038  
    4076 000152d0     e060          ADDXY   A3,A0
    4077 000152e0     e061          ADDXY   A3,A1
    4078                    
    4079 000152f0     09d3          MOVI    SCRN_PTCH,DPTCH
         00015300     1000  
    4080 00015310     5694          CLR     OFFSET
    4081                    
    4082 00015320     6a7a          LMO     DPTCH,B10
    4083 00015330     059a          MOVE    B10,@CONVDP
         00015340 c0000140  
    4084                    
    4085 00015360     4e49          MOVE    A2,COLOR1
    4086                    
    4087 00015370     1822          MOVK    1, A2                   ; DRAV DX: ASSUME HORIZONTAL LINE
    4088                    
    4089 00015380     4c03          MOVE    A0,A3                   ; DETERMINE (P2 > P1) OR (P2 < P1)
    4090 00015390     e863          CVXYL   A3,A3
    4091                    
    4092 000153a0     4c24          MOVE    A1,A4
    4093 000153b0     e884          CVXYL   A4,A4
    4094                    
    4095 000153c0     4864          CMP     A3,A4                   ; IF (P2 < P1) ~(INCREMENT)
    4096 000153d0     c102          JRP     $100
    4097                    
    4098 000153e0     03a2          NEG     A2                      ; INCREMENT IS A SIGNED WORD
    4099 000153f0     0522          ZEXT    A2
    4100                    
    4101 00015400     e401  $100    CMPXY   A0,A1                   ; IF VERTICAL LINE
    4102 00015410     ca01          JRZ     $110                    ; DRAV DX -> DRAV DY
    4103 00015420     2602          SLL     16,A2
    4104                            
    4105 00015430     f640  $110    DRAV    A2,A0                   ; DRAW LINE
    4106 00015440     e401          CMPXY   A0,A1
    4107 00015450     cffd          JRNN    $110
    4108 00015460     cbfc          JRNZ    $110
    4109                    
    4110 00015470                   FRET B6
    4111                    
    4112                    
    4113                    ********************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   90

    4114                    * Draw a line
    4115                    * A0=YX Start
    4116                    * A1=YX End
    4117                    * A2=Color
    4118                    * B6=Return addr
    4119                    * Trashes B0-B5,B7-B13
    4120                    
    4121 00015480            SUBRP  line_draw
    4122                    
    4123 00015480     0b00          ADDI    SCRXFUDGE,A0
         00015490     0038  
    4124 000154a0     0b01          ADDI    SCRXFUDGE,A1
         000154b0     0038  
    4125                    
    4126 000154c0     4e49          move    a2,COLOR1
    4127 000154d0     09d3          movi    SCRN_PTCH,DPTCH
         000154e0     1000  
    4128 000154f0     5694          clr     OFFSET          ;B4
    4129 00015500     6a70          lmo     DPTCH,b0
    4130 00015510     0590          move    b0,@CONVDP
         00015520 c0000140  
    4131                    
    4132 00015540     4e02          move    a0,b2           ;YX strt
    4133 00015550     4e2a          move    a1,b10          ;YX end
    4134 00015560     56f7          clr     b7              ;b:a
    4135 00015570     e25a          subxy   b2,b10
    4136 00015580     c90b          jrnc    bpos
    4137 00015590     cd04          jrnv    bneg_apos
    4138 000155a0     e357          subxy   b10,b7
    4139 000155b0     09db          movi    -1,b11
         000155c0     ffff  
    4140 000155d0     c011          jruc    cmp_b_a
    4141 000155e0           bneg_apos
    4142 000155e0     e357          subxy   b10,b7
    4143 000155f0     ed57          movx    b10,b7
    4144 00015600     09fb          movi    0ffff0000H,b11
         00015610 ffff0000  
    4145 00015630     c00b          jruc    cmp_b_a
    4146 00015640     cd06  bpos    jrnv    bpos_apos
    4147 00015650           bpos_aneg
    4148 00015650     e357          subxy   b10,b7
    4149 00015660     ef57          movy    b10,b7
    4150 00015670     09fb          movi    01ffffH,b11
         00015680 0001ffff  
    4151 000156a0     c004          jruc    cmp_b_a
    4152 000156b0           bpos_apos
    4153 000156b0     4d57          move    b10,b7
    4154 000156c0     09fb          movi    010001H,b11
         000156d0 00010001  
    4155 000156f0     579c  cmp_b_a clr     b12
    4156                    
    4157 00015700     4cf0          move    b7,b0
    4158 00015710     2e10          srl     16,b0
    4159 00015720     575a          clr     b10
    4160 00015730     ecfa          movx    b7,b10
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   91

    4161 00015740     481a          cmp     b0,b10
    4162 00015750     c70b          jrgt    a_ge_b
    4163                    
    4164 00015760     4c1a          move    b0,b10
    4165 00015770     ecf0          movx    b7,b0
    4166 00015780     3217          rl      16,b7           ;Swap b:a
    4167 00015790     ef7c          movy    b11,b12
    4168 000157a0     2430          sll     1,b0
    4169 000157b0     4550          sub     b10,b0
    4170 000157c0     103a          addk    1,b10
    4171 000157d0     4d7b          move    b11,b11
    4172 000157e0     ce07          jrn     line1
    4173 000157f0     df1a  line0   line    0
    4174 00015800     c006          jruc    ldx
    4175                    
    4176 00015810     ed7c  a_ge_b  movx    b11,b12
    4177 00015820     2430          sll     1,b0
    4178 00015830     4550          sub     b10,b0
    4179 00015840     4d7b          move    b11,b11
    4180 00015850     cff9          jrnn    line0
    4181 00015860     df9a  line1   line    1
    4182                    
    4183 00015870           ldx     FRET B6
    4184                    
    4185                    
    4186                    ****************************************************************************
    4187                    * STRING: FUNCTION DISPLAYS AN ASCII STRING OF ANY COLOR EITHER VERTICALLY
    4188                    *          OR HORIZONTALLY.
    4189                    *
    4190                    *             ENTRY: A0 = STARTING STRING ADDRESS
    4191                    *                    A1 = Y:X SCREEN ADDRESS
    4192                    *                    A2 = DIRECTION
    4193                    *                    A3 = COLOR
    4194                    *
    4195                    *                    B6 = RETURN ADDRESS
    4196                    *
    4197                    *             USES: A0 - A6, B0 - B4, B6 - B14
    4198                    ****************************************************************************
    4199 00015880           STRNEW1
    4200 00015880     098f          MMTM    SP,A1,A2,A3,A4,A5,A6
         00015890     7e00  
    4201 000158a0                   FCALL   STRING,B6
    4202 000158e0     09af          MMFM    SP,A1,A2,A3,A4,A5,A6
         000158f0     007e  
    4203 00015900     0960          RETS
    4204 00015910           STRNEW
    4205 00015910                   PUSH    a0
    4206 00015920     0d3f          CALLR   STRNEW1
         00015930     fff4  
    4207 00015940     09af          MMFM    SP,A0
         00015950     0001  
    4208 00015960     0960          RETS
    4209                    
    4210 00015970           STRING
    4211 00015970     0b01          ADDI    SCRXFUDGE,A1
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   92

         00015980     0038  
    4212                    
    4213 00015990     09d3          MOVI    SCRN_PTCH,DPTCH
         000159a0     1000  
    4214 000159b0     5694          CLR     OFFSET
    4215                    
    4216 000159c0     6a7a          LMO     DPTCH,B10
    4217 000159d0     059a          MOVE    B10,@CONVDP
         000159e0 c0000140  
    4218                    
    4219 00015a00     4e69          MOVE    A3,COLOR1 
    4220 00015a10     5718          CLR     COLOR0
    4221                    
    4222                    
    4223 00015a20     8e04  $200    MOVB    *A0,A4                  ;GET CHARACTER
    4224 00015a30     ca2d          JRZ     $230                    ;QUIT IF NULL
    4225                    
    4226 00015a40     1100          ADDK    8,A0
    4227 00015a50     1404          SUBK    32,A4                   ;GET POINTER TO CHARACTER HEADER
    4228 00015a60     2464          SLL     3,A4
    4229 00015a70     0b24          ADDI    SYSFONT,A4,L
         00015a80 0001b8e0' 
    4230 00015aa0     8e84          MOVB    *A4,A4
    4231 00015ab0     24a4          SLL     5,A4
    4232 00015ac0     0b24          ADDI    T2_SP,A4
         00015ad0 0001b3e0' 
    4233 00015af0     9485          MOVE    *A4+,A5                 ;CHAR DIMENSIONS
    4234 00015b00     4ca6          MOVE    A5,A6                   ;SPLIT UP BYTE
    4235 00015b10     2586          SLL     12,A6                   ;SHIFT UP HEIGHT TO Y
    4236 00015b20     2785          SLL     28,A5                   ;STRIP AWAY HEIGHT
    4237 00015b30     2c85          SRL     28,A5
    4238 00015b40     eec5          MOVY    A6,A5
    4239 00015b50     3205          RL      16,A5
    4240 00015b60     4ea7          MOVE    A5,DYDX
    4241                    
    4242 00015b70     56c6          CLR     A6                      ;A6 = CHAR WIDTH
    4243 00015b80     eca6          MOVX    A5,A6
    4244                    
    4245 00015b90     10e6          ADDK    7, A6                   ;ROUND UP WIDTH TO INTEGRAL NUMBER
    4246 00015ba0     2fa6          SRL     3, A6                   ;OF BYTES = SOURCE PITCH
    4247 00015bb0     2466          SLL     3, A6
    4248 00015bc0     4ec1          MOVE    A6,SPTCH
    4249                    
    4250 00015bd0     8486          MOVE    *A4,A6                  ;CHAR DATA
    4251 00015be0     0b26          ADDI    CBASE,A6
         00015bf0 0001bab8' 
    4252 00015c10     4ec0          MOVE    A6,SADDR
    4253                            
    4254 00015c20     4e22          MOVE    A1,DADDR
    4255                    
    4256 00015c30     0fa0          PIXBLT  B,XY
    4257                    
    4258 00015c40     56c6          CLR     A6
    4259 00015c50     4c42          MOVE    A2,A2
    4260 00015c60     ca06          JRZ     $210
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   93

    4261                    
    4262 00015c70     eea6          MOVY    A5,A6                   ;A1 += (CHAR HEIGHT + SPACING)
    4263 00015c80     2e06          SRL     16,A6                   ;DIRECTION = DOWN
    4264 00015c90     1026          ADDK    1,A6
    4265 00015ca0     2606          SLL     16,A6
    4266 00015cb0     40c1          ADD     A6,A1
    4267 00015cc0     c0d5          JRUC    $200
    4268                            
    4269 00015cd0     eca6  $210    MOVX    A5,A6                   ;A1 += (CHAR WIDTH + SPACING)
    4270 00015ce0     1046          ADDK    2,A6                    ;DIRECTION = RIGHT
    4271 00015cf0     40c1          ADD     A6,A1
    4272 00015d00     c0d1          JRUC    $200
    4273                    
    4274 00015d10           $230                                    ;SETF 16, 1, 0
    4275 00015d10                   FRET B6
    4276                    
    4277 00015d20           STRINGCENTER:
    4278 00015d20     0548          SETF    8, 0, 0
    4279 00015d30     5621          CLR     A1
    4280 00015d40     4c02          MOVE    A0,A2
    4281 00015d50           SPLLOOP
    4282 00015d50     9404          MOVE    *A0+, A4                ; GET THE CHAR
    4283 00015d60     ca10          JRZ     SPLEND                  ; END OF STRING
    4284                    
    4285 00015d70     1404          SUBK    32, A4                  ; GET POINTER TO CHARACTER HEADER
    4286                    
    4287 00015d80     2464          SLL     3,A4
    4288 00015d90     0b24          ADDI    SYSFONT,A4,L
         00015da0 0001b8e0' 
    4289 00015dc0     8e84          MOVB    *A4,A4
    4290 00015dd0     24a4          SLL     5,A4
    4291 00015de0     0b24          ADDI    T2_SP,A4
         00015df0 0001b3e0' 
    4292                    
    4293 00015e10     9685          MOVE    *A4+, A5, 1             ; CHAR DIMENSIONS
    4294 00015e20     0525          ZEXT    A5
    4295                    
    4296 00015e30     2f85          SRL     4,A5                    ; GET JUST THE X DIMENSION
    4297                    
    4298                            
    4299 00015e40     1045          ADDK    2H, A5                  ; GIVE IN TO SPACING
    4300 00015e50     40a1          ADD     A5, A1
    4301 00015e60     c0ee          JRUC    SPLLOOP
    4302                    
    4303 00015e70           SPLEND
    4304 00015e70     0570          SETF    16, 1, 0
    4305 00015e80     4c40          MOVE    A2,A0                   ; RESTORE STRING ADDRESS
    4306 00015e90     2fe1          SRL     1,A1
    4307 00015ea0     09c2          MOVI    200,A2
         00015eb0     00c8  
    4308 00015ec0     4422          SUB     A1,A2
    4309 00015ed0     4c41          MOVE    A2,A1
    4310 00015ee0                   FRET    B6
    4311                    
    4312                    ;****************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   94

    4313                    ;* CIRCLE: FUNCTION DRAWS OUTLINE OR FILLED CIRCLES.                        *
    4314                    ;*                                                                          *
    4315                    ;*       ENTRY: A0 = radius                                                 *
    4316                    ;*              A1 = center  (Y:X)                                          *
    4317                    ;*              A6 = <00:15> = color                                        *
    4318                    ;*              A6 = <15:31> = fill: 0=no fill, 1=fill                      *
    4319                    ;*                                                                          *
    4320                    ;*       USES:  A0 - A8, B0, B10                                            *
    4321                    ;****************************************************************************
    4322                    
    4323 00015ef0           CIRCLE
    4324 00015ef0     0b01          ADDI    SCRXFUDGE,A1
         00015f00     0038  
    4325                    
    4326 00015f10     09e7          movi  plot8,a7               ; assume no fill
         00015f20 000161b0' 
    4327 00015f40     1de6          btst  16,a6
    4328 00015f50     ca03          jrz   CIRC0
    4329 00015f60     09e7          movi  fill4,a7
         00015f70 00016330' 
    4330 00015f90           CIRC0
    4331 00015f90     09d3          movi    SCRN_PTCH,DPTCH         ;Restore screen pitch and convdp
         00015fa0     1000  
    4332 00015fb0     1a7a          movk    013H,b10                        ;this is faster
    4333 00015fc0     059a          MOVE    B10,@CONVDP
         00015fd0 c0000140  
    4334 00015ff0     4ec9          MOVE    A6,COLOR1
    4335 00016000     09f7          movi    [1,0],DYDX               ; Y width always 1
         00016010 00010000  
    4336                    
    4337 00016030     5642          clr     a2                    ; x = 0
    4338 00016040     4c03          move    a0,a3                 ; y = r
    4339 00016050     4c04          move    a0,a4
    4340 00016060     2424          sll     1,a4
    4341 00016070     1464          subk    3,a4
    4342 00016080     03a4          neg     a4                   ; d = 3 - 2*r
    4343 00016090           cloop
    4344 00016090     4862          cmp     a3,a2                ; if x > y, we are done
    4345 000160a0     c70f          jrgt    done
    4346                    
    4347 000160b0     4ee0          MOVE    A7,B0                ; PLOT ROUTINE
    4348 000160c0     0130          EXGPC   B0
    4349                    
    4350 000160d0     4c45          move  a2,a5                  ; x -> a5
    4351 000160e0     1c04          btst  31,a4
    4352 000160f0     ca03          jrz   dpos                   ; branch if d is positive
    4353                    
    4354                    
    4355 00016100     2445          sll   2,a5                   ; 4*x -> a5
    4356 00016110     10c5          addk  6,a5                   ; 4*x+6 -> a5
    4357 00016120     c004          jruc  cont
    4358                    
    4359                    
    4360 00016130     4465  dpos    sub   a3,a5                  ; x-y -> a5
    4361 00016140     2445          sll   2,a5                   ; 4*(x-y) -> a5
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   95

    4362 00016150     1145          addk  10,a5                  ; 4*(x-y)+10 -> a5
    4363 00016160     1423          subk  1,a3                   ; y = y - 1
    4364                    
    4365 00016170     40a4  cont    add   a5,a4                  ; d = d + a5
    4366 00016180     1022          addk  1,a2                   ; x = x + 1
    4367 00016190     c0ef          jruc  cloop
    4368                    
    4369 000161a0           done    FRET B6
    4370                    
    4371 000161b0           plot8
    4372 000161b0     4c65          move  a3,a5
    4373 000161c0     03a5          neg   a5                   ; -y into a5; +y in a3
    4374 000161d0     2605          sll   16,a5
    4375 000161e0     2603          sll   16,a3
    4376 000161f0     ec45          movx  a2,a5                ; a3 = (y:x)
    4377 00016200     ec43          movx  a2,a3                ; a5 = (-y:x)
    4378                    
    4379 00016210     1848          movk  2,a8
    4380 00016220           put4
    4381 00016220     4c20          move  a1,a0                ; center (Y:X) in a0
    4382 00016230     e060          addxy a3,a0                ; (cx+x),(cy+y)
    4383 00016240     f0c0          pixt  a6,*a0.XY
    4384 00016250     4c20          move  a1,a0                ; center (Y:X) in a0
    4385 00016260     e0a0          addxy a5,a0                ; (cx+x),(cy-y)
    4386 00016270     f0c0          pixt  a6,*a0.XY
    4387 00016280     4c20          move  a1,a0                ; center (Y:X) in a0
    4388 00016290     e260          subxy a3,a0                ; (cx-x),(cy-y)
    4389 000162a0     f0c0          pixt  a6,*a0.XY
    4390 000162b0     4c20          move  a1,a0                ; center (Y:X) in a0
    4391 000162c0     e2a0          subxy a5,a0                ; (cx-x),(cy+y)
    4392 000162d0     f0c0          pixt  A6,*a0.XY
    4393 000162e0     3203          rl    16,a3
    4394 000162f0     3205          rl    16,a5                ; transpose x and y  
    4395 00016300     3de8          dsj   a8,put4
    4396 00016310     2a03          sra   16,a3                ; restore y
    4397                    
    4398 00016320                   FRET    B0
    4399                    
    4400 00016330           fill4:
    4401 00016330     4e4a          move  a2,b10               ; x
    4402 00016340     243a          sll   1,b10                ; 2x
    4403 00016350     ed57          movx  b10,DYDX             ; delta x = 2x
    4404 00016360     4c65          move  a3,a5
    4405 00016370     03a5          neg   a5                   ; -y into a5      +y in a3
    4406 00016380     2605          sll   16,a5
    4407 00016390     2603          sll   16,a3
    4408 000163a0     ec45          movx  a2,a5                ; a3 = (y:x)
    4409 000163b0     ec43          movx  a2,a3                ; a5 = (-y:x)
    4410 000163c0     1848          movk  2,a8
    4411 000163d0           put2:   
    4412 000163d0     4c20          move  a1,a0
    4413 000163e0     e2a0          subxy a5,a0
    4414 000163f0     4e02          move  a0,DADDR
    4415 00016400     0fe0          fill  XY
    4416                    
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   96

    4417 00016410     4c20          move  a1,a0
    4418 00016420     e260          subxy a3,a0
    4419 00016430     4e02          move  a0,DADDR
    4420 00016440     0fe0          fill  XY
    4421 00016450     3203          rl    16,a3                ; a3 = (x:y)
    4422 00016460     3205          rl    16,a5                ; transpose x and y  
    4423 00016470     56c6          clr   a6
    4424 00016480     e2a6          subxy a5,a6
    4425 00016490     4cc5          move  a6,a5                ; a5 = (-x:y)
    4426 000164a0     4e6a          move  a3,b10               ; y
    4427 000164b0     243a          sll   1,b10                ; 2y
    4428 000164c0     ed57          movx  b10,DYDX             ; delta x = 2y
    4429 000164d0     3e28          dsj   a8,put2
    4430 000164e0     2a03          sra   16,a3                ; restore y
    4431                    
    4432 000164f0                   FRET B0
    4433                    
    4434                    ********************************
    4435                    *SCRCLR - CLEAR ENTIRE BIT MAP
    4436                    *       USES:B2,B3,B4   CALL WITH B6
    4437 00016500           DSCRCLR
    4438 00016500     5652          CLR     B2
    4439 00016510           DSWRITE
    4440 00016510     5673          CLR     B3
    4441 00016520     0593          MOVE    B3,@DMACMAP,0
         00016530 01a00080  
    4442 00016550     09f3          MOVI    SCREEN,B3,L
         00016560 00000000  
    4443 00016580     09f4          MOVI    (SCRNE-SCREEN)/32,B4,L
         00016590 00010000  
    4444 000165b0     9253  SCRLP   MOVE    B2,*B3+,L
    4445 000165c0     3c54          DSJS    B4,SCRLP
    4446 000165d0                   FRET    B6
    4447                    
    4448                    
    4449                    
    4450                    **************************************************************************
    4451                    *                                                                        *
    4452                    *       CPU BOARD INFORMATION                                            *
    4453                    *                                                                        *
    4454                    **************************************************************************
    4455                    
    4456 000165e0           CPU_VECS:
    4457 000165e0                   VECMAC  COLOR_WHITE,5,5,5,243           ; BOARD OUTLINE
    4458 00016630                   VECMAC  COLOR_WHITE,5,243,390,243
    4459 00016680                   VECMAC  COLOR_WHITE,390,243,390,5
    4460 000166d0                   VECMAC  COLOR_WHITE,390,5,355,5
    4461 00016720                   VECMAC  COLOR_WHITE,355,5,355,10
    4462 00016770                   VECMAC  COLOR_WHITE,355,10,343,10
    4463 000167c0                   VECMAC  COLOR_WHITE,343,10,343,5
    4464 00016810                   VECMAC  COLOR_WHITE,343,5,326,5
    4465 00016860                   VECMAC  COLOR_WHITE,326,5,326,10
    4466 000168b0                   VECMAC  COLOR_WHITE,326,10,323,10
    4467 00016900                   VECMAC  COLOR_WHITE,323,10,323,5
    4468 00016950                   VECMAC  COLOR_WHITE,323,5,212,5
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   97

    4469 000169a0                   VECMAC  COLOR_WHITE,212,5,212,10
    4470 000169f0                   VECMAC  COLOR_WHITE,212,10,200,10
    4471 00016a40                   VECMAC  COLOR_WHITE,200,10,200,5
    4472 00016a90                   VECMAC  COLOR_WHITE,200,5,5,5
    4473 00016ae0 00000000          .LONG   0
    4474                    
    4475              0005  CPUXBASE        EQU     5
    4476              0005  CPUYBASE        EQU     5
    4477                    
    4478                    
    4479 00016b00           CPU_CHIPS:
    4480 00016b00           CRAM1   CHIPMAC 0,347,152,30,13,5,3,CNAMEU36,0,28,2,1   ; COLOR RAM (U36)
    4481 00016bd0           CRAM2   CHIPMAC 1,313,152,30,13,5,3,CNAMEU37,0,28,2,1   ; COLOR RAM (U37)
    4482                    
    4483 00016ca0           VRAM1   CHIPMAC 2,347,207,38,13,8,3,CNAMEU14,0,36,2,1   ; BANK 1 VIDEO RAM (U14)
    4484 00016d70           VRAM2   CHIPMAC 3,307,207,38,13,8,3,CNAMEU15,0,36,2,1   ;   (PALETTE) (U15)
    4485 00016e40           VRAM3   CHIPMAC 4,267,207,38,13,8,3,CNAMEU16,0,36,2,1   ; (U16)
    4486 00016f10           VRAM4   CHIPMAC 5,227,207,38,13,8,3,CNAMEU17,0,36,2,1   ; (U17)
    4487                    
    4488 00016fe0           VRAM5   CHIPMAC 6,347,225,38,13,8,3,CNAMEU10,0,36,2,1   ; BANK 2 VIDEO RAM (U10)
    4489 000170b0           VRAM6   CHIPMAC 7,307,225,38,13,8,3,CNAMEU11,0,36,2,1   ;   (PIXEL) (U11)
    4490 00017180           VRAM7   CHIPMAC 8,267,225,38,13,8,3,CNAMEU12,0,36,2,1   ; (U12)
    4491 00017250           VRAM8   CHIPMAC 9,227,225,38,13,8,3,CNAMEU13,0,36,2,1   ; (U13)
    4492                    
    4493 00017320           CPU     CHIPMAC 0,330,50,35,35,7,13,CNAMEU59,0,3,3,1    ; CPU (U59)
    4494                    
    4495 000173f0           DMA     CHIPMAC 0,246,157,38,38,8,16,CNAMEU33,0,3,3,1   ; DMA (U33)
    4496                    
    4497 000174c0           PROM1   CHIPMAC 1,220,65,40,13,9,3,CNAMEU63,0,38,2,1    ; PROGRAM ROM 1 (U63)
    4498 00017590           PROM2   CHIPMAC 0,220,83,40,13,9,3,CNAMEU54,0,38,2,1    ; PROGRAM ROM 2 (U54)
    4499                    
    4500 00017660           IROM1   CHIPMAC 1,10,122,40,13,6,3,  CNAMEU133,0,38,2,1 ; IMAGE ROM (U133)
    4501 00017730           IROM2   CHIPMAC 2,52,122,40,13,6,3,  CNAMEU132,0,38,2,1 ; IMAGE ROM (U132)
    4502 00017800           IROM3   CHIPMAC 3,94,122,40,13,6,3,  CNAMEU131,0,38,2,1 ; IMAGE ROM (U131)
    4503 000178d0           IROM4   CHIPMAC 4,136,122,40,13,6,3, CNAMEU130,0,38,2,1 ; IMAGE ROM (U130)
    4504                    
    4505 000179a0           IROM5   CHIPMAC 5,10,137,40,13,6,3,  CNAMEU129,0,38,2,1 ; IMAGE ROM (U129)
    4506 00017a70           IROM6   CHIPMAC 6,52,137,40,13,6,3,  CNAMEU128,0,38,2,1 ; IMAGE ROM (U128)
    4507 00017b40           IROM7   CHIPMAC 7,94,137,40,13,6,3,  CNAMEU127,0,38,2,1 ; IMAGE ROM (U127)
    4508 00017c10           IROM8   CHIPMAC 8,136,137,40,13,6,3, CNAMEU126,0,38,2,1 ; IMAGE ROM (U126)
    4509                    
    4510 00017ce0           IROM9   CHIPMAC 9,10,152,40,13,6,3,  CNAMEU125,0,38,2,1 ; IMAGE ROM (U125)
    4511 00017db0           IROM10  CHIPMAC 10,52,152,40,13,6,3, CNAMEU124,0,38,2,1 ; IMAGE ROM (U124)
    4512 00017e80           IROM11  CHIPMAC 11,94,152,40,13,6,3, CNAMEU123,0,38,2,1 ; IMAGE ROM (U123)
    4513 00017f50           IROM12  CHIPMAC 12,136,152,40,13,6,3,CNAMEU122,0,38,2,1 ; IMAGE ROM (U122)
    4514                    
    4515 00018020           IROM13  CHIPMAC 13,10,167,40,13,6,3, CNAMEU121,0,38,2,1 ; IMAGE ROM (U121)
    4516 000180f0           IROM14  CHIPMAC 14,52,167,40,13,6,3, CNAMEU120,0,38,2,1 ; IMAGE ROM (U120)
    4517 000181c0           IROM15  CHIPMAC 15,94,167,40,13,6,3, CNAMEU119,0,38,2,1 ; IMAGE ROM (U119)
    4518 00018290           IROM16  CHIPMAC 16,136,167,40,13,6,3,CNAMEU118,0,38,2,1 ; IMAGE ROM (U118)
    4519                    
    4520 00018360           IROM17  CHIPMAC 17,10,182,40,13,6,3, CNAMEU117,0,38,2,1 ; IMAGE ROM (U117)
    4521 00018430           IROM18  CHIPMAC 18,52,182,40,13,6,3, CNAMEU116,0,38,2,1 ; IMAGE ROM (U116)
    4522 00018500           IROM19  CHIPMAC 19,94,182,40,13,6,3, CNAMEU115,0,38,2,1 ; IMAGE ROM (U115)
    4523 000185d0           IROM20  CHIPMAC 20,136,182,40,13,6,3,CNAMEU114,0,38,2,1 ; IMAGE ROM (U114)
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   98

    4524                    
    4525 000186a0           IROM21  CHIPMAC 21,10,197,40,13,6,3, CNAMEU113,0,38,2,1 ; IMAGE ROM (U113)
    4526 00018770           IROM22  CHIPMAC 22,52,197,40,13,6,3, CNAMEU112,0,38,2,1 ; IMAGE ROM (U112)
    4527 00018840           IROM23  CHIPMAC 23,94,197,40,13,6,3, CNAMEU111,0,38,2,1 ; IMAGE ROM (U111)
    4528 00018910           IROM24  CHIPMAC 24,136,197,40,13,6,3,CNAMEU110,0,38,2,1 ; IMAGE ROM (U110)
    4529                    
    4530 000189e0           IROM25  CHIPMAC 25,10,212,40,13,6,3, CNAMEU109,0,38,2,1 ; IMAGE ROM (U109)
    4531 00018ab0           IROM26  CHIPMAC 26,52,212,40,13,6,3, CNAMEU108,0,38,2,1 ; IMAGE ROM (U108)
    4532 00018b80           IROM27  CHIPMAC 27,94,212,40,13,6,3, CNAMEU107,0,38,2,1 ; IMAGE ROM (U107)
    4533 00018c50           IROM28  CHIPMAC 28,136,212,40,13,6,3,CNAMEU106,0,38,2,1 ; IMAGE ROM (U106)
    4534                    
    4535 00018d20           IROM29  CHIPMAC 29,10,227,40,13,6,3, CNAMEU105,0,38,2,1 ; IMAGE ROM (U105)
    4536 00018df0           IROM30  CHIPMAC 30,52,227,40,13,6,3, CNAMEU104,0,38,2,1 ; IMAGE ROM (U104)
    4537 00018ec0           IROM31  CHIPMAC 31,94,227,40,13,6,3, CNAMEU103,0,38,2,1 ; IMAGE ROM (U103)
    4538 00018f90           IROM32  CHIPMAC 32,136,227,40,13,6,3,CNAMEU102,0,38,2,1 ; IMAGE ROM (U102)
    4539                    
    4540 00019060           SRAM1   CHIPMAC 0,225,101,30,13,4,3,CNAMEU49,0,28,2,1   ; SCRATCH PAD (U49)
    4541                    
    4542 00019130           PIC     CHIPMAC 0,177,65,40,13,9,3,CNAMEU64,0,38,2,1    ; PIC CHIP (U64)
    4543                    
    4544 00019200           SROM1   CHIPMAC 1,49,57,40,13,14,3, CNAMEU2,0,38,2,1    ; Sound Rom (U2)
    4545 000192d0           SROM2   CHIPMAC 2,49,72,40,13,14,3, CNAMEU3,0,38,2,1    ; Sound Rom (U3)
    4546 000193a0           SROM3   CHIPMAC 3,49,87,40,13,14,3, CNAMEU4,0,38,2,1    ; Sound Rom (U4)
    4547 00019470           SROM4   CHIPMAC 4,49,102,40,13,14,3,CNAMEU5,0,38,2,1    ; Sound Rom (U5)
    4548 00019540           SROM5   CHIPMAC 5,7,57,40,13,14,3,  CNAMEU6,0,38,2,1    ; Sound Rom (U6)
    4549 00019610           SROM6   CHIPMAC 6,7,72,40,13,14,3,  CNAMEU7,0,38,2,1    ; Sound Rom (U7)
    4550 000196e0           SROM7   CHIPMAC 7,7,87,40,13,14,3,  CNAMEU8,0,38,2,1    ; Sound Rom (U8)
    4551 000197b0           SROM8   CHIPMAC 8,7,102,40,13,14,3, CNAMEU9,0,38,2,1    ; Sound Rom (U9)
    4552                    
    4553 00019880           DSP     CHIPMAC 0,118,77,35,35,13,13,CNAMEU1,0,3,3,1    ; Sound DSP (U1)
    4554                    
    4555 00019950           SNDRAM1 CHIPMAC 1,115,29,40,13,9,3,CNAMEU86,0,38,2,1    ; Sound Ram 1 (U86)
    4556 00019a20           SNDRAM2 CHIPMAC 2,115,44,40,13,9,3,CNAMEU80,0,38,2,1    ; Sound Ram 2 (U80)
    4557 00019af0           SNDRAM3 CHIPMAC 3,115,59,40,13,9,3,CNAMEU73,0,38,2,1    ; Sound Ram 3 (U73)
    4558 00019bc0 00000000          .LONG   0
    4559                    
    4560 00019be0 00016b00' VRAMTAB .LONG   CRAM1,CRAM2
    4561 00019c20 00016ca0'         .LONG   VRAM1,VRAM2,VRAM3,VRAM4,VRAM5,VRAM6
    4562 00019ce0 00017180'         .LONG   VRAM7,VRAM8
    4563 00019d20 00000000          .LONG   0
    4564 00019d40 000174c0' PROMTAB .LONG   PROM1,PROM2
    4565 00019d80 00000000          .LONG   0
    4566 00019da0 00017660' IROMTAB .LONG   IROM1,IROM2,IROM3,IROM4
    4567 00019e20 000179a0'         .LONG   IROM5,IROM6,IROM7,IROM8
    4568 00019ea0 00017ce0'         .LONG   IROM9,IROM10,IROM11,IROM12
    4569 00019f20 00018020'         .LONG   IROM13,IROM14,IROM15,IROM16
    4570 00019fa0 00018360'         .long   IROM17,IROM18,IROM19,IROM20
    4571 0001a020 000186a0'         .long   IROM21,IROM22,IROM23,IROM24
    4572 0001a0a0 000189e0'         .long   IROM25,IROM26,IROM27,IROM28
    4573 0001a120 00018d20'         .long   IROM29,IROM30,IROM31,IROM32
    4574 0001a1a0 00000000          .LONG   0
    4575                    ;SRAMTAB        .LONG   SRAM1,SRAM2,SRAM3,SRAM4
    4576 0001a1c0 00019060' SRAMTAB .LONG   SRAM1
    4577 0001a1e0 00000000          .LONG   0
    4578 0001a200 00019200' SROMTAB .long   SROM1, SROM2, SROM3, SROM4
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   99

    4579 0001a280 00000000          .long   0
    4580 0001a2a0           SNDRAMTAB
    4581 0001a2a0 00019950'         .long   SNDRAM1, SNDRAM2, SNDRAM3
    4582 0001a300 00000000          .long   0
    4583                            
    4584 0001a320           CNAMEU1
    4585 0001a320       55          .string "U1",0
    4586 0001a340                   .even
    4587 0001a340           CNAMEU2
    4588 0001a340       55          .string "U2",0
    4589 0001a360                   .even
    4590 0001a360           CNAMEU3
    4591 0001a360       55          .string "U3",0
    4592 0001a380                   .even
    4593 0001a380           CNAMEU4
    4594 0001a380       55          .string "U4",0
    4595 0001a3a0                   .even
    4596 0001a3a0           CNAMEU5
    4597 0001a3a0       55          .string "U5",0
    4598 0001a3c0                   .even
    4599 0001a3c0           CNAMEU6
    4600 0001a3c0       55          .string "U6",0
    4601 0001a3e0                   .even
    4602 0001a3e0           CNAMEU7
    4603 0001a3e0       55          .string "U7",0
    4604 0001a400                   .even
    4605 0001a400           CNAMEU8
    4606 0001a400       55          .string "U8",0
    4607 0001a420                   .even
    4608 0001a420           CNAMEU9
    4609 0001a420       55          .string "U9",0
    4610 0001a440                   .even
    4611 0001a440           CNAMEU10
    4612 0001a440       55          .string "U10",0
    4613 0001a460                   .even
    4614 0001a460           CNAMEU11
    4615 0001a460       55          .string "U11",0
    4616 0001a480                   .even
    4617 0001a480           CNAMEU12
    4618 0001a480       55          .string "U12",0
    4619 0001a4a0                   .even
    4620 0001a4a0           CNAMEU13
    4621 0001a4a0       55          .string "U13",0
    4622 0001a4c0                   .even
    4623 0001a4c0           CNAMEU14
    4624 0001a4c0       55          .string "U14",0
    4625 0001a4e0                   .even
    4626 0001a4e0           CNAMEU15
    4627 0001a4e0       55          .string "U15",0
    4628 0001a500                   .even
    4629 0001a500           CNAMEU16
    4630 0001a500       55          .string "U16",0
    4631 0001a520                   .even
    4632 0001a520           CNAMEU17
    4633 0001a520       55          .string "U17",0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  100

    4634 0001a540                   .even
    4635 0001a540           CNAMEU33
    4636 0001a540       55          .string "U33",0
    4637 0001a560                   .even
    4638 0001a560           CNAMEU36
    4639 0001a560       55          .string "U36",0
    4640 0001a580                   .even
    4641 0001a580           CNAMEU37
    4642 0001a580       55          .string "U37",0
    4643 0001a5a0                   .even
    4644 0001a5a0           CNAMEU49
    4645 0001a5a0       55          .string "U49",0
    4646 0001a5c0                   .even
    4647 0001a5c0           CNAMEU54
    4648 0001a5c0       55          .string "U54",0
    4649 0001a5e0                   .even
    4650 0001a5e0           CNAMEU59
    4651 0001a5e0       55          .string "U59",0
    4652 0001a600                   .even
    4653 0001a600           CNAMEU63
    4654 0001a600       55          .string "U63",0
    4655 0001a620                   .even
    4656 0001a620           CNAMEU64
    4657 0001a620       55          .string "U64",0
    4658 0001a640                   .even
    4659 0001a640           CNAMEU73
    4660 0001a640       55          .string "U73",0
    4661 0001a660                   .even
    4662 0001a660           CNAMEU80
    4663 0001a660       55          .string "U80",0
    4664 0001a680                   .even
    4665 0001a680           CNAMEU86
    4666 0001a680       55          .string "U86",0
    4667 0001a6a0                   .even
    4668 0001a6a0           CNAMEU133
    4669 0001a6a0       55          .string "U133",0
    4670 0001a6d0                   .even
    4671 0001a6d0           CNAMEU132
    4672 0001a6d0       55          .string "U132",0
    4673 0001a700                   .even
    4674 0001a700           CNAMEU131
    4675 0001a700       55          .string "U131",0
    4676 0001a730                   .even
    4677 0001a730           CNAMEU130
    4678 0001a730       55          .string "U130",0
    4679 0001a760                   .even
    4680 0001a760           CNAMEU129
    4681 0001a760       55          .string "U129",0
    4682 0001a790                   .even
    4683 0001a790           CNAMEU128
    4684 0001a790       55          .string "U128",0
    4685 0001a7c0                   .even
    4686 0001a7c0           CNAMEU127
    4687 0001a7c0       55          .string "U127",0
    4688 0001a7f0                   .even
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  101

    4689 0001a7f0           CNAMEU126
    4690 0001a7f0       55          .string "U126",0
    4691 0001a820                   .even
    4692 0001a820           CNAMEU125
    4693 0001a820       55          .string "U125",0
    4694 0001a850                   .even
    4695 0001a850           CNAMEU124
    4696 0001a850       55          .string "U124",0
    4697 0001a880                   .even
    4698 0001a880           CNAMEU123
    4699 0001a880       55          .string "U123",0
    4700 0001a8b0                   .even
    4701 0001a8b0           CNAMEU122
    4702 0001a8b0       55          .string "U122",0
    4703 0001a8e0                   .even
    4704 0001a8e0           CNAMEU121
    4705 0001a8e0       55          .string "U121",0
    4706 0001a910                   .even
    4707 0001a910           CNAMEU120
    4708 0001a910       55          .string "U120",0
    4709 0001a940                   .even
    4710 0001a940           CNAMEU119
    4711 0001a940       55          .string "U119",0
    4712 0001a970                   .even
    4713 0001a970           CNAMEU118
    4714 0001a970       55          .string "U118",0
    4715 0001a9a0                   .even
    4716 0001a9a0           CNAMEU117
    4717 0001a9a0       55          .string "U117",0
    4718 0001a9d0                   .even
    4719 0001a9d0           CNAMEU116
    4720 0001a9d0       55          .string "U116",0
    4721 0001aa00                   .even
    4722 0001aa00           CNAMEU115
    4723 0001aa00       55          .string "U115",0
    4724 0001aa30                   .even
    4725 0001aa30           CNAMEU114
    4726 0001aa30       55          .string "U114",0
    4727 0001aa60                   .even
    4728 0001aa60           CNAMEU113
    4729 0001aa60       55          .string "U113",0
    4730 0001aa90                   .even
    4731 0001aa90           CNAMEU112
    4732 0001aa90       55          .string "U112",0
    4733 0001aac0                   .even
    4734 0001aac0           CNAMEU111
    4735 0001aac0       55          .string "U111",0
    4736 0001aaf0                   .even
    4737 0001aaf0           CNAMEU110
    4738 0001aaf0       55          .string "U110",0
    4739 0001ab20                   .even
    4740 0001ab20           CNAMEU109
    4741 0001ab20       55          .string "U109",0
    4742 0001ab50                   .even
    4743 0001ab50           CNAMEU108
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  102

    4744 0001ab50       55          .string "U108",0
    4745 0001ab80                   .even
    4746 0001ab80           CNAMEU107
    4747 0001ab80       55          .string "U107",0
    4748 0001abb0                   .even
    4749 0001abb0           CNAMEU106
    4750 0001abb0       55          .string "U106",0
    4751 0001abe0                   .even
    4752 0001abe0           CNAMEU105
    4753 0001abe0       55          .string "U105",0
    4754 0001ac10                   .even
    4755 0001ac10           CNAMEU104
    4756 0001ac10       55          .string "U104",0
    4757 0001ac40                   .even
    4758 0001ac40           CNAMEU103
    4759 0001ac40       55          .string "U103",0
    4760 0001ac70                   .even
    4761 0001ac70           CNAMEU102
    4762 0001ac70       55          .string "U102",0
    4763 0001aca0                   .even
    4764                    
    4765                    
    4766                    **************************************************************************
    4767                    *                                                                        *
    4768                    *       RAM CHIP DATA                                                    *
    4769                    *                                                                        *
    4770                    **************************************************************************
    4771                    
    4772                    ;
    4773                    ;       MAKE SURE THESE TABLES CORRESPOND WITH THE STUFF ABOVE
    4774                    ;
    4775                    
    4776 0001aca0           VRAMCHIPS:
    4777                    ;       COLOR RAMS
    4778 0001aca0                   RAM_CHIP 0,1, 8, 16, 1880000H, 18FFFF0H         ; U37  (  0 - 7  )
    4779 0001ad30                   RAM_CHIP 0,0, 7, 16, 1880008H, 18FFFF8H         ; U36  (  8 - 14 )
    4780                    
    4781                    
    4782                    ;       VIDEO RAMS
    4783 0001adc0                   RAM_CHIP 0, 8, 8, 32, 0000018H, 03FFFF8H        ; U12
    4784 0001ae50                   RAM_CHIP 0, 4, 8, 32, 0000010H, 03FFFF0H        ; U16
    4785 0001aee0                   RAM_CHIP 0, 9, 8, 32, 0000008H, 03FFFE8H        ; U13
    4786 0001af70                   RAM_CHIP 0, 5, 8, 32, 0000000H, 03FFFE0H        ; U17
    4787                    
    4788 0001b000 00000000          .LONG   0
    4789                    
    4790 0001b020           PALCHIPS:
    4791                    ;       VIDEO PALETTE RAMS
    4792 0001b020                   RAM_CHIP 0,6, 8, 32, 0000018H, 03FFFF8H         ; U10
    4793 0001b0b0                   RAM_CHIP 0,2, 8, 32, 0000010H, 03FFFF0H         ; U14
    4794 0001b140                   RAM_CHIP 0,7, 8, 32, 0000008H, 03FFFE8H         ; U11
    4795 0001b1d0                   RAM_CHIP 0,3, 8, 32, 0000000H, 03FFFE0H         ; U15
    4796 0001b260 00000000          .LONG   0
    4797                    
    4798                    ;       SCRATCH RAMS
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  103

    4799                    
    4800 0001b280           SRAMCHECK
    4801 0001b280       43          .STRING "CHECKING SCRATCH RAMS",0
    4802 0001b330                   .EVEN
    4803                    
    4804 0001b330           SRAMCHIPS
    4805 0001b330                   RAM_CHIP SRAM1,0, 16, 16, 1000000H, 13FFFF0H    ; U49 (0-15)
    4806                    
    4807 0001b3c0 00000000          .LONG   0
    4808                    
    4809                    ****************************************************************************
    4810                    * SYSFONT: SYSTEM FONT; MODULE DEFINES THE FONT USED WITH SYSTEM            *
    4811                    *           DIAGNOSTICS.                                                    *
    4812                    ****************************************************************************
    4813                    
    4814                    ; ===========================
    4815                    ; | DYDX CHAR DIMENSIONS    |
    4816                    ; | POINTER TO XY CHAR DATA |
    4817                    ; ===========================
    4818                    
    4819 0001b3e0     0048  T2_SP   .WORD   048h
    4820 0001b3f0     0000          .word   I2_SP-CBASE
    4821                    
    4822 0001b400     0088  T2_MN   .WORD   088h
    4823 0001b410     0040          .WORD   I2_MN-CBASE
    4824                    
    4825 0001b420     0028  T2_PER  .WORD   028H
    4826 0001b430     0080          .WORD   I2_PER-CBASE
    4827                    
    4828 0001b440           T2_SLASH
    4829 0001b440     0068          .WORD   068H
    4830 0001b450     00c0          .WORD   I2_SLASH-CBASE
    4831 0001b460           T2_00
    4832 0001b460     0068     .WORD    068h
    4833 0001b470     0100     .WORD    I2_00-CBASE
    4834                    
    4835 0001b480           T2_11:
    4836 0001b480     0068     .WORD    068h
    4837 0001b490     0140     .WORD    I2_11-CBASE
    4838                    
    4839 0001b4a0           T2_22:
    4840 0001b4a0     0068     .WORD    068h
    4841 0001b4b0     0180     .WORD    I2_22-CBASE
    4842                    
    4843 0001b4c0           T2_33:
    4844 0001b4c0     0068     .WORD    068h
    4845 0001b4d0     01c0     .WORD    I2_33-CBASE
    4846                    
    4847 0001b4e0           T2_44:
    4848 0001b4e0     0068     .WORD    068h
    4849 0001b4f0     0200     .WORD    I2_44-CBASE
    4850                    
    4851 0001b500           T2_55:
    4852 0001b500     0068     .WORD    068h
    4853 0001b510     0240     .WORD    I2_55-CBASE
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  104

    4854                    
    4855 0001b520           T2_66:
    4856 0001b520     0068     .WORD    068h
    4857 0001b530     0280     .WORD    I2_66-CBASE
    4858                    
    4859 0001b540           T2_77:
    4860 0001b540     0068     .WORD    068h
    4861 0001b550     02c0     .WORD    I2_77-CBASE
    4862                    
    4863 0001b560           T2_88:
    4864 0001b560     0068     .WORD    068h
    4865 0001b570     0300     .WORD    I2_88-CBASE
    4866                    
    4867 0001b580           T2_99:
    4868 0001b580     0068     .WORD    068h
    4869 0001b590     0340     .WORD    I2_99-CBASE
    4870                    
    4871 0001b5a0           T2_AA:
    4872 0001b5a0     0068     .WORD    068h
    4873 0001b5b0     0380     .WORD    I2_AA-CBASE
    4874                    
    4875 0001b5c0           T2_BB:
    4876 0001b5c0     0068     .WORD    068h
    4877 0001b5d0     03c0     .WORD    I2_BB-CBASE
    4878                    
    4879 0001b5e0           T2_CC:
    4880 0001b5e0     0068     .WORD    068h
    4881 0001b5f0     0400     .WORD    I2_CC-CBASE
    4882                    
    4883 0001b600           T2_DD:
    4884 0001b600     0068     .WORD    068h
    4885 0001b610     0440     .WORD    I2_DD-CBASE
    4886                    
    4887 0001b620           T2_EE:
    4888 0001b620     0068     .WORD    068h
    4889 0001b630     0480     .WORD    I2_EE-CBASE
    4890                    
    4891 0001b640           T2_FF:
    4892 0001b640     0068     .WORD    068h
    4893 0001b650     04c0     .WORD    I2_FF-CBASE
    4894                    
    4895 0001b660           T2_GG:
    4896 0001b660     0068     .WORD    068h
    4897 0001b670     0500     .WORD    I2_GG-CBASE
    4898                    
    4899 0001b680           T2_HH:
    4900 0001b680     0068     .WORD    068h
    4901 0001b690     0540     .WORD    I2_HH-CBASE
    4902                    
    4903 0001b6a0           T2_II:
    4904 0001b6a0     0028     .WORD    028h
    4905 0001b6b0     0580     .WORD    I2_II-CBASE
    4906                    
    4907 0001b6c0           T2_JJ:
    4908 0001b6c0     0068     .WORD    068h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  105

    4909 0001b6d0     05c0     .WORD    I2_JJ-CBASE
    4910                    
    4911 0001b6e0           T2_KK:
    4912 0001b6e0     0068     .WORD    068h
    4913 0001b6f0     0600     .WORD    I2_KK-CBASE
    4914                    
    4915 0001b700           T2_LL:
    4916 0001b700     0058     .WORD    058h
    4917 0001b710     0640     .WORD    I2_LL-CBASE
    4918                    
    4919 0001b720           T2_MM:
    4920 0001b720     00a8     .WORD    0A8h
    4921 0001b730     0680     .WORD    I2_MM-CBASE
    4922                    
    4923 0001b740           T2_NN:
    4924 0001b740     0078     .WORD    078h
    4925 0001b750     0700     .WORD    I2_NN-CBASE
    4926                    
    4927 0001b760           T2_OO:
    4928 0001b760     0078     .WORD    078h
    4929 0001b770     0740     .WORD    I2_OO-CBASE
    4930                    
    4931 0001b780           T2_PP:
    4932 0001b780     0068     .WORD    068h
    4933 0001b790     0780     .WORD    I2_PP-CBASE
    4934                    
    4935 0001b7a0           T2_QQ:
    4936 0001b7a0     007a     .WORD    07Ah
    4937 0001b7b0     07c0     .WORD    I2_QQ-CBASE
    4938                    
    4939 0001b7c0           T2_RR:
    4940 0001b7c0     0068     .WORD    068h
    4941 0001b7d0     0810     .WORD    I2_RR-CBASE
    4942                    
    4943 0001b7e0           T2_SS:
    4944 0001b7e0     0068     .WORD    068h
    4945 0001b7f0     0850     .WORD    I2_SS-CBASE
    4946                    
    4947 0001b800           T2_TT:
    4948 0001b800     0068     .WORD    068h
    4949 0001b810     0890     .WORD    I2_TT-CBASE
    4950                    
    4951 0001b820           T2_UU:
    4952 0001b820     0068     .WORD    068h
    4953 0001b830     08d0     .WORD    I2_UU-CBASE
    4954                    
    4955 0001b840           T2_VV:
    4956 0001b840     0078     .WORD    078h
    4957 0001b850     0910     .WORD    I2_VV-CBASE
    4958                    
    4959 0001b860           T2_WW:
    4960 0001b860     00b8     .WORD    0B8h
    4961 0001b870     0950     .WORD    I2_WW-CBASE
    4962                    
    4963 0001b880           T2_XX:
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  106

    4964 0001b880     0078     .WORD    078h
    4965 0001b890     09d0     .WORD    I2_XX-CBASE
    4966                    
    4967 0001b8a0           T2_YY:
    4968 0001b8a0     0068     .WORD    068h
    4969 0001b8b0     0a10     .WORD    I2_YY-CBASE
    4970                    
    4971 0001b8c0           T2_ZZ:
    4972 0001b8c0     0068     .WORD    068h
    4973 0001b8d0     0a50     .WORD    I2_ZZ-CBASE
    4974                    
    4975                    ; ===========================
    4976                    ; | CHARACTER DIRECTORY     |
    4977                    ; ===========================
    4978                    
    4979 0001b8e0           SYSFONT
    4980                    
    4981 0001b8e0       00          .BYTE   (T2_SP-T2_SP)/32        ;SPACE CHARACTER, " "
    4982 0001b8e8       00          .BYTE   (T2_SP-T2_SP)/32        ;FILLER
    4983 0001b8f0       00          .BYTE   (T2_SP-T2_SP)/32
    4984 0001b8f8       00          .BYTE   (T2_SP-T2_SP)/32
    4985 0001b900       00          .BYTE   (T2_SP-T2_SP)/32
    4986 0001b908       00          .BYTE   (T2_SP-T2_SP)/32
    4987 0001b910       00          .BYTE   (T2_SP-T2_SP)/32
    4988 0001b918       00          .BYTE   (T2_SP-T2_SP)/32
    4989 0001b920       00          .BYTE   (T2_SP-T2_SP)/32
    4990 0001b928       00          .BYTE   (T2_SP-T2_SP)/32
    4991 0001b930       00          .BYTE   (T2_SP-T2_SP)/32
    4992 0001b938       00          .BYTE   (T2_SP-T2_SP)/32
    4993 0001b940       00          .BYTE   (T2_SP-T2_SP)/32
    4994 0001b948       01          .BYTE   (T2_MN-T2_SP)/32        ; MINUS CHARACTER, "-"
    4995 0001b950       02          .BYTE   (T2_PER-T2_SP)/32
    4996 0001b958       03          .BYTE   (T2_SLASH-T2_SP)/32     ; "/"
    4997 0001b960       04          .BYTE   (T2_00-T2_SP)/32        ;0
    4998 0001b968       05          .BYTE   (T2_11-T2_SP)/32        ;1
    4999 0001b970       06          .BYTE   (T2_22-T2_SP)/32        ;2
    5000 0001b978       07          .BYTE   (T2_33-T2_SP)/32        ;3
    5001 0001b980       08          .BYTE   (T2_44-T2_SP)/32        ;4
    5002 0001b988       09          .BYTE   (T2_55-T2_SP)/32        ;5
    5003 0001b990       0a          .BYTE   (T2_66-T2_SP)/32        ;6
    5004 0001b998       0b          .BYTE   (T2_77-T2_SP)/32        ;7
    5005 0001b9a0       0c          .BYTE   (T2_88-T2_SP)/32        ;8
    5006 0001b9a8       0d          .BYTE   (T2_99-T2_SP)/32        ;9
    5007 0001b9b0       04          .BYTE   (T2_00-T2_SP)/32                        ; no :
    5008 0001b9b8       04          .BYTE   (T2_00-T2_SP)/32                        ; no ;
    5009 0001b9c0       04          .BYTE   (T2_00-T2_SP)/32                        ; no <
    5010 0001b9c8       04          .BYTE   (T2_00-T2_SP)/32                        ; no =
    5011 0001b9d0       04          .BYTE   (T2_00-T2_SP)/32                        ; no >
    5012 0001b9d8       04          .BYTE   (T2_00-T2_SP)/32                        ; no ?
    5013 0001b9e0       04          .BYTE   (T2_00-T2_SP)/32                        ; no @
    5014 0001b9e8       0e          .BYTE   (T2_AA-T2_SP)/32        ;A
    5015 0001b9f0       0f          .BYTE   (T2_BB-T2_SP)/32        ;B
    5016 0001b9f8       10          .BYTE   (T2_CC-T2_SP)/32        ;C
    5017 0001ba00       11          .BYTE   (T2_DD-T2_SP)/32        ;D
    5018 0001ba08       12          .BYTE   (T2_EE-T2_SP)/32        ;E
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  107

    5019 0001ba10       13          .BYTE   (T2_FF-T2_SP)/32        ;F
    5020 0001ba18       14          .BYTE   (T2_GG-T2_SP)/32        ;G
    5021 0001ba20       15          .BYTE   (T2_HH-T2_SP)/32        ;H
    5022 0001ba28       16          .BYTE   (T2_II-T2_SP)/32        ;I
    5023 0001ba30       17          .BYTE   (T2_JJ-T2_SP)/32        ;J
    5024 0001ba38       18          .BYTE   (T2_KK-T2_SP)/32        ;K
    5025 0001ba40       19          .BYTE   (T2_LL-T2_SP)/32        ;L
    5026 0001ba48       1a          .BYTE   (T2_MM-T2_SP)/32        ;M
    5027 0001ba50       1b          .BYTE   (T2_NN-T2_SP)/32        ;N
    5028 0001ba58       1c          .BYTE   (T2_OO-T2_SP)/32        ;O
    5029 0001ba60       1d          .BYTE   (T2_PP-T2_SP)/32        ;P
    5030 0001ba68       1e          .BYTE   (T2_QQ-T2_SP)/32        ;Q
    5031 0001ba70       1f          .BYTE   (T2_RR-T2_SP)/32        ;R
    5032 0001ba78       20          .BYTE   (T2_SS-T2_SP)/32        ;S
    5033 0001ba80       21          .BYTE   (T2_TT-T2_SP)/32        ;T
    5034 0001ba88       22          .BYTE   (T2_UU-T2_SP)/32        ;U
    5035 0001ba90       23          .BYTE   (T2_VV-T2_SP)/32        ;V
    5036 0001ba98       24          .BYTE   (T2_WW-T2_SP)/32        ;W
    5037 0001baa0       25          .BYTE   (T2_XX-T2_SP)/32        ;X
    5038 0001baa8       26          .BYTE   (T2_YY-T2_SP)/32        ;Y
    5039 0001bab0       27          .BYTE   (T2_ZZ-T2_SP)/32        ;Z
    5040                    
    5041                    ; ===========================
    5042                    ; | CHARACTER DEFINITIONS   |
    5043                    ; ===========================
    5044 0001bab8           CBASE
    5045 0001bab8           I2_SP
    5046 0001bab8       00     .byte    00h
    5047 0001bac0       00     .byte    00h
    5048 0001bac8       00     .byte    00h
    5049 0001bad0       00     .byte    00h
    5050 0001bad8       00     .byte    00h
    5051 0001bae0       00     .byte    00h
    5052 0001bae8       00     .byte    00h
    5053 0001baf0       00     .byte    00h
    5054                    
    5055 0001baf8           I2_MN:
    5056 0001baf8       00     .byte    000h
    5057 0001bb00       00     .byte    000h
    5058 0001bb08       00     .byte    000h
    5059 0001bb10       ff     .byte    0FFh
    5060 0001bb18       ff     .byte    0FFh
    5061 0001bb20       00     .byte    000h
    5062 0001bb28       00     .byte    000h
    5063 0001bb30       00     .byte    000h
    5064                    
    5065 0001bb38           I2_PER:
    5066 0001bb38       00          .BYTE   0
    5067 0001bb40       00          .BYTE   0
    5068 0001bb48       00          .BYTE   0
    5069 0001bb50       00          .BYTE   0
    5070 0001bb58       00          .BYTE   0
    5071 0001bb60       00          .BYTE   0
    5072 0001bb68       ff          .BYTE   0FFH
    5073 0001bb70       ff          .BYTE   0FFH
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  108

    5074                    
    5075 0001bb78           I2_SLASH:
    5076 0001bb78       30          .BYTE   30H
    5077 0001bb80       30          .BYTE   30H
    5078 0001bb88       18          .BYTE   18H
    5079 0001bb90       18          .BYTE   18H
    5080 0001bb98       06          .BYTE   06H
    5081 0001bba0       06          .BYTE   06H
    5082 0001bba8       03          .BYTE   03H
    5083 0001bbb0       03          .BYTE   03H
    5084                    
    5085 0001bbb8           I2_00:
    5086 0001bbb8       1e     .byte    01Eh
    5087 0001bbc0       3f     .byte    03Fh
    5088 0001bbc8       33     .byte    033h
    5089 0001bbd0       33     .byte    033h
    5090 0001bbd8       33     .byte    033h
    5091 0001bbe0       33     .byte    033h
    5092 0001bbe8       3f     .byte    03Fh
    5093 0001bbf0       1e     .byte    01Eh
    5094                    
    5095 0001bbf8           I2_11:
    5096 0001bbf8       0e     .byte    0Eh
    5097 0001bc00       0f     .byte    0Fh
    5098 0001bc08       0f     .byte    0Fh
    5099 0001bc10       0c     .byte    0Ch
    5100 0001bc18       0c     .byte    0Ch
    5101 0001bc20       0c     .byte    0Ch
    5102 0001bc28       0c     .byte    0Ch
    5103 0001bc30       0c     .byte    0Ch
    5104                    
    5105 0001bc38           I2_22:
    5106 0001bc38       1f     .byte    01Fh
    5107 0001bc40       3f     .byte    03Fh
    5108 0001bc48       38     .byte    038h
    5109 0001bc50       1c     .byte    01Ch
    5110 0001bc58       0e     .byte    0Eh
    5111 0001bc60       07     .byte    07h
    5112 0001bc68       3f     .byte    03Fh
    5113 0001bc70       3f     .byte    03Fh
    5114                    
    5115 0001bc78           I2_33:
    5116 0001bc78       1f     .byte    01Fh
    5117 0001bc80       3f     .byte    03Fh
    5118 0001bc88       30     .byte    030h
    5119 0001bc90       1e     .byte    01Eh
    5120 0001bc98       1e     .byte    01Eh
    5121 0001bca0       30     .byte    030h
    5122 0001bca8       3f     .byte    03Fh
    5123 0001bcb0       1f     .byte    01Fh
    5124                    
    5125 0001bcb8           I2_44:
    5126 0001bcb8       38     .byte    038h
    5127 0001bcc0       3c     .byte    03Ch
    5128 0001bcc8       36     .byte    036h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  109

    5129 0001bcd0       33     .byte    033h
    5130 0001bcd8       3f     .byte    03Fh
    5131 0001bce0       3f     .byte    03Fh
    5132 0001bce8       30     .byte    030h
    5133 0001bcf0       30     .byte    030h
    5134                    
    5135 0001bcf8           I2_55:
    5136 0001bcf8       3f     .byte    03Fh
    5137 0001bd00       3f     .byte    03Fh
    5138 0001bd08       03     .byte    03h
    5139 0001bd10       1f     .byte    01Fh
    5140 0001bd18       3f     .byte    03Fh
    5141 0001bd20       30     .byte    030h
    5142 0001bd28       3f     .byte    03Fh
    5143 0001bd30       1f     .byte    01Fh
    5144                    
    5145 0001bd38           I2_66:
    5146 0001bd38       3e     .byte    03Eh
    5147 0001bd40       3f     .byte    03Fh
    5148 0001bd48       03     .byte    03h
    5149 0001bd50       1f     .byte    01Fh
    5150 0001bd58       3f     .byte    03Fh
    5151 0001bd60       33     .byte    033h
    5152 0001bd68       3f     .byte    03Fh
    5153 0001bd70       1e     .byte    01Eh
    5154                    
    5155 0001bd78           I2_77:
    5156 0001bd78       3f     .byte    03Fh
    5157 0001bd80       3f     .byte    03Fh
    5158 0001bd88       30     .byte    030h
    5159 0001bd90       18     .byte    018h
    5160 0001bd98       18     .byte    018h
    5161 0001bda0       0c     .byte    0Ch
    5162 0001bda8       0c     .byte    0Ch
    5163 0001bdb0       0c     .byte    0Ch
    5164                    
    5165 0001bdb8           I2_88:
    5166 0001bdb8       1e     .byte    01Eh
    5167 0001bdc0       3f     .byte    03Fh
    5168 0001bdc8       33     .byte    033h
    5169 0001bdd0       1e     .byte    01Eh
    5170 0001bdd8       1e     .byte    01Eh
    5171 0001bde0       33     .byte    033h
    5172 0001bde8       3f     .byte    03Fh
    5173 0001bdf0       1e     .byte    01Eh
    5174                    
    5175 0001bdf8           I2_99:
    5176 0001bdf8       1e     .byte    01Eh
    5177 0001be00       3f     .byte    03Fh
    5178 0001be08       33     .byte    033h
    5179 0001be10       3f     .byte    03Fh
    5180 0001be18       3e     .byte    03Eh
    5181 0001be20       30     .byte    030h
    5182 0001be28       3f     .byte    03Fh
    5183 0001be30       1f     .byte    01Fh
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  110

    5184                    
    5185 0001be38           I2_AA:
    5186 0001be38       1e     .byte    01Eh
    5187 0001be40       3f     .byte    03Fh
    5188 0001be48       33     .byte    033h
    5189 0001be50       33     .byte    033h
    5190 0001be58       3f     .byte    03Fh
    5191 0001be60       3f     .byte    03Fh
    5192 0001be68       33     .byte    033h
    5193 0001be70       33     .byte    033h
    5194                    
    5195 0001be78           I2_BB:
    5196 0001be78       1f     .byte    01Fh
    5197 0001be80       3f     .byte    03Fh
    5198 0001be88       33     .byte    033h
    5199 0001be90       3f     .byte    03Fh
    5200 0001be98       1f     .byte    01Fh
    5201 0001bea0       33     .byte    033h
    5202 0001bea8       3f     .byte    03Fh
    5203 0001beb0       1f     .byte    01Fh
    5204                    
    5205 0001beb8           I2_CC:
    5206 0001beb8       3e     .byte    03Eh
    5207 0001bec0       3f     .byte    03Fh
    5208 0001bec8       03     .byte    03h
    5209 0001bed0       03     .byte    03h
    5210 0001bed8       03     .byte    03h
    5211 0001bee0       03     .byte    03h
    5212 0001bee8       3f     .byte    03Fh
    5213 0001bef0       3e     .byte    03Eh
    5214                    
    5215 0001bef8           I2_DD:
    5216 0001bef8       1f     .byte    01Fh
    5217 0001bf00       3f     .byte    03Fh
    5218 0001bf08       33     .byte    033h
    5219 0001bf10       33     .byte    033h
    5220 0001bf18       33     .byte    033h
    5221 0001bf20       33     .byte    033h
    5222 0001bf28       3f     .byte    03Fh
    5223 0001bf30       1f     .byte    01Fh
    5224                    
    5225 0001bf38           I2_EE:
    5226 0001bf38       3f     .byte    03Fh
    5227 0001bf40       3f     .byte    03Fh
    5228 0001bf48       03     .byte    03h
    5229 0001bf50       3f     .byte    03Fh
    5230 0001bf58       3f     .byte    03Fh
    5231 0001bf60       03     .byte    03h
    5232 0001bf68       3f     .byte    03Fh
    5233 0001bf70       3f     .byte    03Fh
    5234                    
    5235 0001bf78           I2_FF:
    5236 0001bf78       3f     .byte    03Fh
    5237 0001bf80       3f     .byte    03Fh
    5238 0001bf88       03     .byte    03h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  111

    5239 0001bf90       3f     .byte    03Fh
    5240 0001bf98       3f     .byte    03Fh
    5241 0001bfa0       03     .byte    03h
    5242 0001bfa8       03     .byte    03h
    5243 0001bfb0       03     .byte    03h
    5244                    
    5245 0001bfb8           I2_GG:
    5246 0001bfb8       3e     .byte    03Eh
    5247 0001bfc0       3f     .byte    03Fh
    5248 0001bfc8       03     .byte    03h
    5249 0001bfd0       03     .byte    03h
    5250 0001bfd8       33     .byte    033h
    5251 0001bfe0       33     .byte    033h
    5252 0001bfe8       3f     .byte    03Fh
    5253 0001bff0       1e     .byte    01Eh
    5254                    
    5255 0001bff8           I2_HH:
    5256 0001bff8       33     .byte    033h
    5257 0001c000       33     .byte    033h
    5258 0001c008       33     .byte    033h
    5259 0001c010       3f     .byte    03Fh
    5260 0001c018       3f     .byte    03Fh
    5261 0001c020       33     .byte    033h
    5262 0001c028       33     .byte    033h
    5263 0001c030       33     .byte    033h
    5264                    
    5265 0001c038           I2_II:
    5266 0001c038       03     .byte    03h
    5267 0001c040       03     .byte    03h
    5268 0001c048       03     .byte    03h
    5269 0001c050       03     .byte    03h
    5270 0001c058       03     .byte    03h
    5271 0001c060       03     .byte    03h
    5272 0001c068       03     .byte    03h
    5273 0001c070       03     .byte    03h
    5274                    
    5275 0001c078           I2_JJ:
    5276 0001c078       30     .byte    030h
    5277 0001c080       30     .byte    030h
    5278 0001c088       30     .byte    030h
    5279 0001c090       30     .byte    030h
    5280 0001c098       30     .byte    030h
    5281 0001c0a0       33     .byte    033h
    5282 0001c0a8       3f     .byte    03Fh
    5283 0001c0b0       1e     .byte    01Eh
    5284                    
    5285 0001c0b8           I2_KK:
    5286 0001c0b8       33     .byte    033h
    5287 0001c0c0       33     .byte    033h
    5288 0001c0c8       1b     .byte    01Bh
    5289 0001c0d0       0f     .byte    0Fh
    5290 0001c0d8       1f     .byte    01Fh
    5291 0001c0e0       33     .byte    033h
    5292 0001c0e8       33     .byte    033h
    5293 0001c0f0       33     .byte    033h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  112

    5294                    
    5295 0001c0f8           I2_LL:
    5296 0001c0f8       03     .byte    03h
    5297 0001c100       03     .byte    03h
    5298 0001c108       03     .byte    03h
    5299 0001c110       03     .byte    03h
    5300 0001c118       03     .byte    03h
    5301 0001c120       03     .byte    03h
    5302 0001c128       1f     .byte    01Fh
    5303 0001c130       1f     .byte    01Fh
    5304                    
    5305 0001c138           I2_MM:
    5306 0001c138       87     .byte    087h,03h
    5307 0001c148       cf     .byte    0CFh,03h
    5308 0001c158       cf     .byte    0CFh,03h
    5309 0001c168       7b     .byte    07Bh,03h
    5310 0001c178       7b     .byte    07Bh,03h
    5311 0001c188       33     .byte    033h,03h
    5312 0001c198       33     .byte    033h,03h
    5313 0001c1a8       33     .byte    033h,03h
    5314                    
    5315 0001c1b8           I2_NN:
    5316 0001c1b8       63     .byte    063h
    5317 0001c1c0       67     .byte    067h
    5318 0001c1c8       6f     .byte    06Fh
    5319 0001c1d0       6f     .byte    06Fh
    5320 0001c1d8       7b     .byte    07Bh
    5321 0001c1e0       7b     .byte    07Bh
    5322 0001c1e8       73     .byte    073h
    5323 0001c1f0       63     .byte    063h
    5324                    
    5325 0001c1f8           I2_OO:
    5326 0001c1f8       3e     .byte    03Eh
    5327 0001c200       7f     .byte    07Fh
    5328 0001c208       63     .byte    063h
    5329 0001c210       63     .byte    063h
    5330 0001c218       63     .byte    063h
    5331 0001c220       63     .byte    063h
    5332 0001c228       7f     .byte    07Fh
    5333 0001c230       3e     .byte    03Eh
    5334                    
    5335 0001c238           I2_PP:
    5336 0001c238       1f     .byte    01Fh
    5337 0001c240       3f     .byte    03Fh
    5338 0001c248       33     .byte    033h
    5339 0001c250       3f     .byte    03Fh
    5340 0001c258       1f     .byte    01Fh
    5341 0001c260       03     .byte    03h
    5342 0001c268       03     .byte    03h
    5343 0001c270       03     .byte    03h
    5344                    
    5345 0001c278           I2_QQ:
    5346 0001c278       3e     .byte    03Eh
    5347 0001c280       7f     .byte    07Fh
    5348 0001c288       63     .byte    063h
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  113

    5349 0001c290       63     .byte    063h
    5350 0001c298       63     .byte    063h
    5351 0001c2a0       63     .byte    063h
    5352 0001c2a8       7f     .byte    07Fh
    5353 0001c2b0       3e     .byte    03Eh
    5354 0001c2b8       60     .byte    060h
    5355 0001c2c0       60     .byte    060h
    5356                    
    5357 0001c2c8           I2_RR:
    5358 0001c2c8       1f     .byte    01Fh
    5359 0001c2d0       3f     .byte    03Fh
    5360 0001c2d8       33     .byte    033h
    5361 0001c2e0       3f     .byte    03Fh
    5362 0001c2e8       1f     .byte    01Fh
    5363 0001c2f0       33     .byte    033h
    5364 0001c2f8       33     .byte    033h
    5365 0001c300       33     .byte    033h
    5366                    
    5367 0001c308           I2_SS:
    5368 0001c308       3e     .byte    03Eh
    5369 0001c310       3f     .byte    03Fh
    5370 0001c318       03     .byte    03h
    5371 0001c320       1f     .byte    01Fh
    5372 0001c328       3e     .byte    03Eh
    5373 0001c330       30     .byte    030h
    5374 0001c338       3f     .byte    03Fh
    5375 0001c340       1f     .byte    01Fh
    5376                    
    5377 0001c348           I2_TT:
    5378 0001c348       3f     .byte    03Fh
    5379 0001c350       3f     .byte    03Fh
    5380 0001c358       0c     .byte    0Ch
    5381 0001c360       0c     .byte    0Ch
    5382 0001c368       0c     .byte    0Ch
    5383 0001c370       0c     .byte    0Ch
    5384 0001c378       0c     .byte    0Ch
    5385 0001c380       0c     .byte    0Ch
    5386                    
    5387 0001c388           I2_UU:
    5388 0001c388       33     .byte    033h
    5389 0001c390       33     .byte    033h
    5390 0001c398       33     .byte    033h
    5391 0001c3a0       33     .byte    033h
    5392 0001c3a8       33     .byte    033h
    5393 0001c3b0       33     .byte    033h
    5394 0001c3b8       3f     .byte    03Fh
    5395 0001c3c0       1e     .byte    01Eh
    5396                    
    5397 0001c3c8           I2_VV:
    5398 0001c3c8       63     .byte    063h
    5399 0001c3d0       63     .byte    063h
    5400 0001c3d8       63     .byte    063h
    5401 0001c3e0       36     .byte    036h
    5402 0001c3e8       36     .byte    036h
    5403 0001c3f0       3e     .byte    03Eh
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  114

    5404 0001c3f8       1c     .byte    01Ch
    5405 0001c400       1c     .byte    01Ch
    5406                    
    5407 0001c408           I2_WW:
    5408 0001c408       23     .byte    023h,06h
    5409 0001c418       23     .byte    023h,06h
    5410 0001c428       73     .byte    073h,06h
    5411 0001c438       76     .byte    076h,03h
    5412 0001c448       76     .byte    076h,03h
    5413 0001c458       de     .byte    0DEh,03h
    5414 0001c468       8c     .byte    08Ch,01h
    5415 0001c478       8c     .byte    08Ch,01h
    5416                    
    5417 0001c488           I2_XX:
    5418 0001c488       63     .byte    063h
    5419 0001c490       63     .byte    063h
    5420 0001c498       36     .byte    036h
    5421 0001c4a0       1c     .byte    01Ch
    5422 0001c4a8       1c     .byte    01Ch
    5423 0001c4b0       36     .byte    036h
    5424 0001c4b8       63     .byte    063h
    5425 0001c4c0       63     .byte    063h
    5426                    
    5427 0001c4c8           I2_YY:
    5428 0001c4c8       33     .byte    033h
    5429 0001c4d0       33     .byte    033h
    5430 0001c4d8       1e     .byte    01Eh
    5431 0001c4e0       1e     .byte    01Eh
    5432 0001c4e8       0c     .byte    0Ch
    5433 0001c4f0       0c     .byte    0Ch
    5434 0001c4f8       0c     .byte    0Ch
    5435 0001c500       0c     .byte    0Ch
    5436                    
    5437 0001c508           I2_ZZ:
    5438 0001c508       3f     .byte    03Fh
    5439 0001c510       3f     .byte    03Fh
    5440 0001c518       38     .byte    038h
    5441 0001c520       1c     .byte    01Ch
    5442 0001c528       0e     .byte    0Eh
    5443 0001c530       07     .byte    07h
    5444 0001c538       3f     .byte    03Fh
    5445 0001c540       3f     .byte    03Fh
    5446                    
    5447                    
    5448 0001c550              .EVEN
    5449                    *
    5450                    *               ROM chip definitions and checksums
    5451                    *
    5452              8a5d  CKSUM1  .equ    08a5dH  ;9bd5
    5453              9efe  CKSUM2  .equ    09efeH  ;3bf0
    5454                    
    5455 0001c550           PROMCHIPS
    5456 0001c550                   ROM_CHIP PROM2,1,0,16, 0FF800000H, 0FFFFFFF0H, CKSUM1   ; U54
    5457 0001c5f0                   ROM_CHIP PROM1,0,0,16, 0FF800008H, 0FFFFFFF8H, CKSUM2   ; U63
    5458 0001c690 00000000          .LONG   0
TMS340 COFF Macro Assembler Version 6.10     Fri Nov 03 01:28:32 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  115

    5459                    
    5460                    * CHECKSUM PATCHES
    5461 0001c6b0     75a2          .WORD   0ffffH-CKSUM1   ;1'S COMPLEMENT OF THE UJ12 CHECKSUM
    5462 0001c6c0     6101          .WORD   0ffffH-CKSUM2   ;1'S COMPLEMENT OF THE UG12 CHECKSUM
    5463                    
    5464                    
    5465                    **************************************************************************
    5466                    *                                                                        *
    5467                    *                    IMAGE ROM CHECKSUM TABLES                           *
    5468                    *                                                                        *
    5469                    *               NOTE: COMMENT OUT ANY UNSTUFFED PARTS THAT               *
    5470                    *                       EXIST BEFORE THE .LONG 0 TERMINATOR!             *
    5471                    *                                                                        *
    5472                    **************************************************************************
    5473                    ;       ROM_CHIP $MACRO TAB_LINK,CHIP_NO, WIDTH, INTERLEAVE, START_ADDR, END_ADDR, CHECK_SUM
    5474 0001c6d0           IROMCHIPS
    5475                    
    5476 0001c6d0           IROMCHIPS_8MEG
    5477 0001c6d0                   .EVEN
    5478 0001c6d0                   ROM_CHIP IROM1,  0, 8,32,  2000000H, 3FFFFE0H,03A18H    ; U133
    5479 0001c770                   ROM_CHIP IROM2,  1, 8,32,  2000008H, 3FFFFE8H,05B68H    ; U132
    5480 0001c810                   ROM_CHIP IROM3,  2, 8,32,  2000010H, 3FFFFF0H,0A478H    ; U131
    5481 0001c8b0                   ROM_CHIP IROM4,  3, 8,32,  2000018H, 3FFFFF8H,0E4EAH    ; U130
    5482                    
    5483 0001c950                   ROM_CHIP IROM5,  4, 8,32,  4000000H, 5FFFFE0H,00B0EH    ; U129
    5484 0001c9f0                   ROM_CHIP IROM6,  5, 8,32,  4000008H, 5FFFFE8H,0E646H    ; U128
    5485 0001ca90                   ROM_CHIP IROM7,  6, 8,32,  4000010H, 5FFFFF0H,074A7H    ; U127
    5486 0001cb30                   ROM_CHIP IROM8,  7, 8,32,  4000018H, 5FFFFF8H,037FDH    ; U126
    5487 0001cbd0 00000000          .LONG   0
    5488 0001cbf0           IROMCHIPS1_8MEG
    5489 0001cbf0                   ROM_CHIP IROM9,  8, 8,32,  2000000H, 3FFFFE0H,05EF3H    ; U125
    5490 0001cc90                   ROM_CHIP IROM10, 9, 8,32,  2000008H, 3FFFFE8H,08CD6H    ; U124
    5491 0001cd30                   ROM_CHIP IROM11,10, 8,32,  2000010H, 3FFFFF0H,070ECH    ; U123
    5492 0001cdd0                   ROM_CHIP IROM12,11, 8,32,  2000018H, 3FFFFF8H,02B4EH    ; U122
    5493                    
    5494 0001ce70                   ROM_CHIP IROM13,12, 8,32,  4000000H, 5FFFFE0H,05E15H    ; U121
    5495 0001cf10                   ROM_CHIP IROM14,13, 8,32,  4000008H, 5FFFFE8H,00572H    ; U120
    5496 0001cfb0                   ROM_CHIP IROM15,14, 8,32,  4000010H, 5FFFFF0H,07FD4H    ; U119
    5497 0001d050                   ROM_CHIP IROM16,15, 8,32,  4000018H, 5FFFFF8H,0E4F1H    ; U118
    5498 0001d0f0 00000000          .LONG   0
    5499                    
    5500                    ******************************************************************************
    5501                    
    5502                            .end

 No Errors,  No Warnings
