TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .width  132
       2                            .option b,d,l,t
       3                            .mnolist
       4                    
       5                    
       6                            .include        "gsp.equ"
       7                            .include        "sys.equ"
       8                            .include        mproc.equ
       9                            .include        link.equ
      10                            .include        imgtbl.glo
      11                            .include        "macros.h"
      12                            .INCLUDE        GAME.EQU
      13                            .INCLUDE        DIP.EQU
      14                    
      15                            ;from   DCSSOUND.ASM
      16                            .ref    SNDSND
      17                    
      18                            .ref    _tseconds
      19                            .ref    _switch_map_mode
      20                            .ref    _coin_addr
      21                            .ref    _switch_addr
      22                            .ref    _switch2_addr
      23                            .ref    _watchdog_addr
      24                            .ref    _dipswitch_addr
      25                            .ref    _sound_addr
      26                            .ref    _soundirq_addr
      27                            .ref    _coin_counter_addr
      28                            .ref    InitAddresses
      29                            .ref    dec_to_asc
      30                            .ref    copy_string,copy_rom_string
      31                            .ref    concat_string
      32                            .ref    message_buffer
      33                            .ref    SOUNDSUP
      34                            .ref    _rtc_seconds
      35                            .ref    _rtc_minutes
      36                            .ref    _rtc_hours
      37                            .ref    _rtc_day
      38                            .ref    _rtc_date
      39                            .ref    _rtc_month
      40                            .ref    _rtc_year
      41                            .ref    _year
      42                            .ref    _month
      43                            .ref    _day
      44                            .ref    _serial_number
      45                            .ref    _man_date
      46                    
      47                            .globl  _get_time
      48                            .globl  _set_time
      49                            .globl  _aquire_time
      50                            .globl  SNDPROTOPROMPT
      51                            .globl  SNDRELEASEPROMPT
      52                            .globl  SNDTIMEOUT
      53                    
      54                    
      55              0038  SCRXFUDGE       equ     56
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56                            .ref    fudge_switches, fudge_switches_diag, CPU_RET
      57                            .REF    SNDSND,INTIO,WARMSET,GET_AUD,STORE_AUDIT,WDOGDIS
      58                            .ref    AUD1, GAMSTATE, KILL_AUD, PCMOSRET
      59                            .ref    CLR_AUD, FAC_SET, CMOS_VAL, ROM_NAME
      60                    
      61                            .DEF    POWERTST, DIAGCPUTEST, POWERCMOS
      62                            .def    SWITCHTEST, SWSET1, SWSET2
      63                            .DEF    CROSS_H,COL_BARS,BURN_IN,STRNEW1
      64                    
      65                            .DEF    CIRCLE,HVLINE,STRING,RECTANGLE,POINT,DSCRCLR,INITCOLR
      66                            .DEF    READ_DIP
      67                    
      68                            .REF    SNDTST
      69                            .REF    SYSCOPY
      70                            .REF    USA_1, USA_2, USA_3, USA_4, USA_ELECTITLE
      71                            .REF    GERMAN_1, GERMAN_2, GERMAN_3, GERMAN_4, GERMAN_ELECTITLE
      72                            .REF    FRENCH_1, FRENCH_2, FRENCH_3, FRENCH_4, FRENCH_ELECTITLE
      73                            .REF    DIPCOINTAB
      74                    
      75                    
      76                            .REF    GET_ADJ, GET_CSPT, NO_CREDS
      77                            .REF    PUT_ADJ, CRED_P, HEXTOASC, F_ADC_S, SET_COIN_ADJ
      78                            .REF    init_all, mainlp, DIAG_COLORS
      79                    
      80              0203  CMOS_ERROR_SND  .EQU    0203h
      81              0203  CPU_ERROR_SND   .EQU    0203h
      82              00c8  DIP_SND         .EQU    0c8h
      83              00c8  SWITCH_SND      .EQU    0c8h
      84                    
      85 00000000                   .BSS    SWSET1,32               ; FOR SWITCH TEST
      86 00000020                   .BSS    SWSET2,32
      87                    
      88 00000040                   .BSS    DIPVAL,16
      89 00000050                   .BSS    DIP1ST,16
      90                    
      91 00000060                   .BSS    FORCEDIP,16             ; FOR FORCING THE USE OF THE DIP
      92 00000070                   .BSS    CERRORS,32
      93 00000090                   .BSS    CPASSES,32
      94 000000b0                   .BSS    SCHANGE,16
      95 000000c0                   .bss    _snd_status,32
      96 000000e0                   .bss    _b6_save,32             ; Temporary register fer me
      97 00000100                   .bss    _temporary,32           ; Another temp fer me
      98 00000120                   .bss    _snd_diag_code,16       ; Temporary storage for sound diag code
      99 00000000                   BSSX    _snd_chip_count,16      ; Temporary register fer me
     100 00000140                   .bss    _pic_raw,128            ; Stuff fer the PIC
     101 000001c0                   .bss    _pic_temp,64
     102                    
     103                    PAUSE   .macro TIME, REG
     104                            MOVI    :TIME:,:REG:,L
     105                    LABEL?  NOP
     106                            DSJS    :REG:,LABEL?
     107                            .endm
     108                    
     109                    
     110                    BSET    .macro  P1,R1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

     111                            MOVK    1,A14
     112                            SLL     :P1:,A14
     113                            OR      A14,:R1:
     114                            .endm
     115                    
     116                    
     117                    RJST    .macro  REG
     118                            MOVE    :REG:,:REG:
     119                            JRZ     MX?
     120                    MLP?
     121                            SRL     1,:REG:
     122                            JRNC    MLP?
     123                            SLL     1,:REG:
     124                            ADDK    1,:REG:
     125                    MX?
     126                            .endm
     127                    
     128                    
     129                    BUT_MAC .macro  X,Y,RADIUS,COLOR,MASK,SHIFT,EXTEND
     130                            .WORD   :X:     
     131                            .WORD   :Y:
     132                            .WORD   :RADIUS:
     133                            .LONG   :COLOR:
     134                            .LONG   :MASK:
     135                            .WORD   :SHIFT:
     136                            .WORD   :EXTEND:
     137                            .endm
     138                    
     139                    STR_MAC .macro  X,Y,STRING,COLOR,DIR
     140                            .WORD   :X:     
     141                            .WORD   :Y:
     142                            .LONG   :STRING:
     143                            .WORD   :COLOR:
     144                            .WORD   :DIR:
     145                            .endm
     146                    
     147                    VECMAC  .macro  COLOR,X1,Y1,X2,Y2
     148                            .WORD   :COLOR:
     149                            .WORD   :X1:
     150                            .WORD   :Y1:
     151                            .WORD   :X2:
     152                            .WORD   :Y2:
     153                            .endm
     154                    
     155                    DOTMAC  .macro  COLOR,X,Y
     156                            .WORD   :COLOR:
     157                            .WORD   :X:
     158                            .WORD   :Y:
     159                            .endm
     160                    
     161                    RECTMAC .macro  COLOR,X,Y,W,H
     162                            .WORD   :W:
     163                            .WORD   :H:
     164                            .WORD   :X:
     165                            .WORD   :Y:
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     166                            .WORD   :COLOR:
     167                            .endm
     168                    
     169                    CHIPMAC .macro  NUM,X1,Y1,X2,Y2,X3,Y3,STRING,DIR,X4,Y4,STUFFED
     170                            .WORD   :NUM:
     171                            .WORD   :X1:
     172                            .WORD   :Y1:
     173                            .WORD   :X2:
     174                            .WORD   :Y2:
     175                            .WORD   :X3:
     176                            .WORD   :Y3:
     177                            .LONG   :STRING:
     178                            .WORD   :DIR:
     179                            .WORD   :X4:
     180                            .WORD   :Y4:
     181                            .WORD   :STUFFED:
     182                            .endm
     183                    
     184              0000  CMNUM           EQU     0
     185              0010  CMLOC           EQU     CMNUM+16
     186              0010  CMXLOC          EQU     CMLOC
     187              0020  CMYLOC          EQU     CMLOC+16
     188              0030  CMSIZE          EQU     CMLOC+32
     189              0030  CMXSIZE         EQU     CMSIZE
     190              0040  CMYSIZE         EQU     CMSIZE+16
     191              0050  CMOFFSET        EQU     CMSIZE+32
     192              0070  CMSTRING        EQU     CMOFFSET+32
     193              0090  CMDIR           EQU     CMSTRING+32
     194              00a0  CMPINLOC        EQU     CMDIR+16
     195              00c0  CMSTUFFED       EQU     CMPINLOC+32
     196              00d0  CMEND           EQU     CMSTUFFED+16
     197                            
     198                    
     199                    
     200                    RAM_CHIP .macro TAB_LINK,CHIP_NO, WIDTH, INTERLEAVE, START_ADDR, END_ADDR
     201                    
     202                            .WORD   :WIDTH:
     203                            .WORD   :INTERLEAVE:
     204                            .WORD   :CHIP_NO:
     205                            .LONG   :START_ADDR:
     206                            .LONG   :END_ADDR:
     207                            .LONG   :TAB_LINK:
     208                            .endm
     209                    
     210              0000  RAM_WDTH EQU    000H                ; OFFSETS INTO RAM CHIP RECORD
     211              0010  RAM_ITLV EQU    010H
     212              0020  RAM_NMBR EQU    020H
     213              0030  RAM_SADR EQU    030H
     214              0050  RAM_EADR EQU    050H
     215              0070  RAM_LINK        EQU     070H
     216              0090  RAM_SIZE EQU    090H
     217                    
     218              0000  ROM_CKSM        EQU     000H
     219              0010  ROM_WDTH        EQU     010H                ; OFFSETS INTO ROM CHIP RECORD
     220              0020  ROM_ITLV        EQU     020H
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     221              0030  ROM_NMBR        EQU     030H
     222              0040  ROM_SADR        EQU     040H
     223              0060  ROM_EADR        EQU     060H
     224              0080  ROM_LINK        EQU     080H
     225              00a0  ROM_SIZE        EQU     0A0H
     226                    
     227                    
     228                    ROM_CHIP .macro TAB_LINK,CHIP_NO, WIDTH, INTERLEAVE, START_ADDR, END_ADDR, CHECK_SUM
     229                    
     230                            .WORD   :CHECK_SUM:
     231                            .WORD  :WIDTH:
     232                            .WORD  :INTERLEAVE:
     233                            .WORD  :CHIP_NO:
     234                            .LONG  :START_ADDR:
     235                            .LONG  :END_ADDR:
     236                            .LONG   :TAB_LINK:
     237                    
     238                             .endm
     239                    
     240                    
     241          5a5a5a5a  RANDOM_SEED EQU 5A5A5A5Ah              ; RAM TESTS: PSEUDO-RANDOM SEQUENCE
     242              001f  ZERO_EXTEND EQU 1Fh                    ; PARAMETERS
     243              0020  SIGN_EXTEND EQU 20h
     244              ffdc  PAL_SELECT  EQU 0FFDCH                 ; ENABLE VIDEO PALETTE MAP ACCESS
     245                    
     246                    
     247 00000000                   .text
     248 00000000                   .even
     249                    
     250                    
     251 00000000           POWERTST
     252 00000000     0360          dint
     253 00000010     0570          setf    16,1,0
     254 00000020     0740          setf    32,0,1
     255 00000030     09ef          MOVI    STCKST,SP,L
         00000040 013f73e0  
     256 00000060     07a0          move    @_watchdog_addr,a0,L
         00000070 00000000! 
     257 00000090     8000          move    a0,*a0
     258                    
     259                    
     260 000000a0     57ce          clr     a14
     261 000000b0     058e          move    a14,@DMACTRL
         000000c0 01a00010  
     262 000000e0     058e          move    a14,@DMACTRL
         000000f0 01a00010  
     263                    
     264 00000110                   FCALL   INTIO,B6
     265                    
     266                    
     267 00000150     09ed          MOVI    SYSCINIT,A13
         00000160 0000987f  
     268 00000180     058d          MOVE    A13,@SYSCTRL
         00000190 01b00000  
     269                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     270 000001b0                   FCALL   CPUTEST,SP
     271 000001f0     c080          JAUC    WARMSET
         00000200 00000000! 
     272                    
     273                    
     274                    
     275                    
     276 00000220           _pic_bin2bcd:
     277 00000220     5663          clr     a3
     278 00000230     09e0          movi    100000,a0
         00000240 000186a0  
     279 00000260           _bin2bcd_loop:
     280 00000260     2483          sll     4,a3
     281 00000270     4ce1          move    a7,a1
     282 00000280     5a01          divu    a0,a1
     283 00000290     5423          or      a1,a3
     284 000002a0     5e01          mpyu    a0,a1
     285 000002b0     4427          sub     a1,a7
     286 000002c0     4c01          move    a0,a1
     287 000002d0     1940          movk    10,a0
     288 000002e0     5a01          divu    a0,a1
     289 000002f0     4c20          move    a1,a0
     290 00000300     cbf5          jrnz    _bin2bcd_loop
     291 00000310                   FRET    b6
     292                    
     293 00000320           _bcd2hex:
     294 00000320     5642          clr     a2              ; Start with 0
     295 00000330     1821          movk    1,a1            ; Starting Multiplier
     296 00000340     1904          movk    8,a4            ; Number of BCD digits to convert
     297 00000350           _b2h_loop:                      ; Main BCD to hex conversion loop
     298 00000350     4c03          move    a0,a3           ; Put BCD number in temporary register
     299 00000360     0b83          andi    0fh,a3          ; get rid of bits not interested in
         00000370 fffffff0  
     300 00000390     5e23          mpyu    a1,a3           ; multiply by current multiplier
     301 000003a0     4062          add     a3,a2           ; Accumulate into final register
     302 000003b0     2f80          srl     4,a0            ; Shift to next BCD digit
     303 000003c0     1943          movk    10,a3           ; Calculate next multiplier (mult = mult * 10)
     304 000003d0     5e61          mpyu    a3,a1           ; New Multiplier
     305 000003e0     3d44          dsjs    a4,_b2h_loop    ; Keep going until 8 BCD digits are done
     306 000003f0                   FRET    b6              ; return
     307                    
     308 00000400           _read_pic_data:
     309 00000400     0548          setf    8,0
     310 00000410     0740          setf    32,0,1
     311 00000420     1a09          movk    16,a9           ; Number of bytes of data to read
     312 00000430     09e1          movi    _pic_raw,a1     ; address at which to store raw data from PIC
         00000440 00000140- 
     313 00000460     1a08          movk    010h,a8         ; Send Request Serial Number Data Command
     314 00000470     0588          move    a8,@PIC_COMMAND
         00000480 01600000  
     315 000004a0           _rp_data_loop:
     316 000004a0     0550          setf    16,0
     317 000004b0     5708          clr     a8
     318 000004c0     0588          move    a8,@PIC_COMMAND
         000004d0 01600000  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

     319 000004f0     09e2          movi    1000000,a2      ; Wait for PIC to acknowledge 
         00000500 000f4240  
     320 00000520           _rp_ack_loop:
     321 00000520     4c42          move    a2,a2           ; Check for command timeout
     322 00000530     ca00          jrz     gn_bad          ; WOA PIC never acknowledged - ERROR!!!!
         00000540     010e  
     323 00000550     07a8          move    @_watchdog_addr,a8,L
         00000560 00000000! 
     324 00000580     8108          move    a8,*a8
     325 00000590     07a8          move    @_soundirq_addr,a8,L
         000005a0 00000000! 
     326 000005c0     8508          move    *a8,a8
     327 000005d0     0be2          subi    1,a2
         000005e0     fffe  
     328 000005f0     1e68          btst    12,a8           ; Data available ?
     329 00000600     cbf1          jrnz    _rp_ack_loop    ; NO
     330 00000610     0548          setf    8,0             ; YES
     331 00000620     05a0          move    @PIC_DATA,a0    ; read data
         00000630 01600000  
     332 00000650     9001          move    a0,*a1+         ; write to temp holding area
     333 00000660     1a08          movk    010h,a8         ; Acknowledge reciept of data
     334 00000670     0550          setf    16,0
     335 00000680     0588          move    a8,@PIC_COMMAND
         00000690 01600000  
     336 000006b0     09e2          movi    1000000,a2      ; Wait for PIC n acknowlegde
         000006c0 000f4240  
     337 000006e0           _rp_nack_loop:
     338 000006e0     4c42          move    a2,a2
     339 000006f0     ca00          jrz     gn_bad
         00000700     00f2  
     340 00000710     07a8          move    @_watchdog_addr,a8,L
         00000720 00000000! 
     341 00000740     8108          move    a8,*a8
     342 00000750     07a8          move    @_soundirq_addr,a8,L
         00000760 00000000! 
     343 00000780     8508          move    *a8,a8
     344 00000790     0be2          subi    1,a2
         000007a0     fffe  
     345 000007b0     1e68          btst    12,a8
     346 000007c0     caf1          jrz     _rp_nack_loop
     347 000007d0     0d89          dsj     a9,_rp_data_loop
         000007e0     ffcb  
     348 000007f0     5684          clr     a4              ; Holding Register for X
     349 00000800     56a5          clr     a5              ; Holding Register for Y
     350 00000810     0548          setf    8,0
     351 00000820     09ea          movi    _pic_raw,a10
         00000830 00000140- 
     352 00000850     0b0a          addi    060h,a10
         00000860     0060  
     353 00000870     9544          move    *a10+,a4        ; Get X
     354 00000880     8545          move    *a10,a5         ; Get Y
     355 00000890     0558          setf    24,0
     356 000008a0     56e7          clr     a7              ; Calculate B-3-5-9
     357 000008b0     09ea          movi    _pic_raw,a10
         000008c0 00000140- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

     358 000008e0     8547          move    *a10,a7
     359 000008f0     0be7          subi    15732,a7
         00000900     c28b  
     360 00000910     09c0          movi    581,a0
         00000920     0245  
     361 00000930     5a07          divu    a0,a7
     362 00000940     4487          sub     a4,a7           ; B359 (binary)
     363 00000950                   FCALL   _pic_bin2bcd,b6 ; B359 (bcd) a1 = B359
     364 00000990     0544          setf    4,0
     365 000009a0     2f83          srl     4,a3
     366 000009b0     4c60          move    a3,a0
     367 000009c0     0b80          andi    0fh,a0
         000009d0 fffffff0  
     368 000009f0     09ea          movi    _pic_temp,a10
         00000a00 000001c0- 
     369 00000a20     0b0a          addi    014h,a10
         00000a30     0014  
     370 00000a40     800a          move    a0,*a10         ; Stuff the 5
     371 00000a50     2f83          srl     4,a3
     372 00000a60     4c60          move    a3,a0
     373 00000a70     0b80          andi    0fh,a0
         00000a80 fffffff0  
     374 00000aa0     09ea          movi    _pic_temp,a10
         00000ab0 000001c0- 
     375 00000ad0     118a          addk    0ch,a10
     376 00000ae0     800a          move    a0,*a10         ; Stuff the 3
     377                    
     378                    
     379 00000af0     09ea          movi    _pic_raw,a10
         00000b00 00000140- 
     380 00000b20     0b0a          addi    018h,a10
         00000b30     0018  
     381 00000b40     8747          move    *a10,a7,1       ; Calculate 2-A-0-8-6
     382 00000b50     0d07          subi    7463513,a7
         00000b60 ff8e1da6  
     383 00000b80     09c0          movi    4223,a0
         00000b90     107f  
     384 00000ba0     5a07          divu    a0,a7
     385 00000bb0     44a7          sub     a5,a7
     386 00000bc0     44a7          sub     a5,a7
     387 00000bd0     4487          sub     a4,a7           ; 2A086 (binary)
     388 00000be0                   FCALL   _pic_bin2bcd,b6 ; 2A086 (bcd)
     389 00000c20     4c60          move    a3,a0
     390 00000c30     0b80          andi    0fh,a0
         00000c40 fffffff0  
     391 00000c60     09ea          movi    _pic_temp,a10
         00000c70 000001c0- 
     392 00000c90     130a          addk    018h,a10
     393 00000ca0     800a          move    a0,*a10         ; Stuff the 6
     394 00000cb0     2f83          srl     4,a3
     395 00000cc0     4c60          move    a3,a0
     396 00000cd0     0b80          andi    0fh,a0
         00000ce0 fffffff0  
     397 00000d00     09ea          movi    _pic_temp,a10
         00000d10 000001c0- 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     398 00000d30     0b0a          addi    020h,a10
         00000d40     0020  
     399 00000d50     800a          move    a0,*a10         ; Stuff the 8
     400 00000d60     2f83          srl     4,a3
     401 00000d70     4c60          move    a3,a0
     402 00000d80     0b80          andi    0fh,a0
         00000d90 fffffff0  
     403 00000db0     09ea          movi    _pic_temp,a10
         00000dc0 000001c0- 
     404 00000de0     800a          move    a0,*a10         ; Stuff the 0
     405 00000df0     2f03          srl     8,a3
     406 00000e00     4c60          move    a3,a0
     407 00000e10     0b80          andi    0fh,a0
         00000e20 fffffff0  
     408 00000e40     09ea          movi    _pic_temp,a10
         00000e50 000001c0- 
     409 00000e70     110a          addk    8,a10
     410 00000e80     800a          move    a0,*a10         ; Stuff the 2
     411                    
     412                    
     413 00000e90     0558          setf    24,0            ; Calcuate 1-7-4
     414 00000ea0     09ca          movi    038h,a10
         00000eb0     0038  
     415 00000ec0     0b2a          addi    _pic_raw,a10
         00000ed0 00000140- 
     416 00000ef0     8547          move    *a10,a7
     417 00000f00     0d07          subi    127984,a7
         00000f10 fffe0c0f  
     418 00000f30     09c0          movi    7117,a0
         00000f40     1bcd  
     419 00000f50     5a07          divu    a0,a7
     420 00000f60     44a7          sub     a5,a7
     421 00000f70     44a7          sub     a5,a7
     422 00000f80     44a7          sub     a5,a7
     423 00000f90     44a7          sub     a5,a7
     424 00000fa0     44a7          sub     a5,a7           ; 174 (binary)
     425 00000fb0                   FCALL   _pic_bin2bcd,b6 ; 174 (bcd) a1 = 174
     426 00000ff0     0544          setf    4,0
     427 00001000     4c60          move    a3,a0
     428 00001010     0b80          andi    0fh,a0
         00001020 fffffff0  
     429 00001040     09ea          movi    _pic_temp,a10
         00001050 000001c0- 
     430 00001070     120a          addk    010h,a10
     431 00001080     800a          move    a0,*a10         ; Stuff the 4
     432 00001090     2f83          srl     4,a3
     433 000010a0     4c60          move    a3,a0
     434 000010b0     0b80          andi    0fh,a0
         000010c0 fffffff0  
     435 000010e0     09ea          movi    _pic_temp,a10
         000010f0 000001c0- 
     436 00001110     138a          addk    01ch,a10
     437 00001120     800a          move    a0,*a10         ; Stuff the 7
     438 00001130     2f83          srl     4,a3
     439 00001140     4c60          move    a3,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

     440 00001150     0b80          andi    0fh,a0
         00001160 fffffff0  
     441 00001180     09ea          movi    _pic_temp,a10
         00001190 000001c0- 
     442 000011b0     108a          addk    4,a10
     443 000011c0     800a          move    a0,*a10         ; Stuff the 1
     444                    
     445 000011d0     0550          setf    16,0
     446 000011e0     09ca          movi    050h,a10
         000011f0     0050  
     447 00001200     0b2a          addi    _pic_raw,a10
         00001210 00000140- 
     448 00001230     8540          move    *a10,a0         ; This is a pointer to the date code
     449 00001240     8541          move    *a10,a1
     450 00001250     2501          sll     8,a1
     451 00001260     2f00          srl     8,a0
     452 00001270     0b80          andi    0ffh,a0
         00001280 ffffff00  
     453 000012a0     0b81          andi    0ff00h,a1
         000012b0 ffff00ff  
     454 000012d0     5420          or      a1,a0
     455 000012e0     0780          move    a0,@_man_date,L
         000012f0 00000000! 
     456                    
     457 00001310     0544          setf    4,0
     458 00001320     09ea          movi    _pic_temp,a10
         00001330 000001c0- 
     459 00001350     118a          addk    0ch,a10
     460 00001360     9540          move    *a10+,a0        ; Most Significant Digit (serial number)
     461 00001370     2480          sll     4,a0
     462 00001380     9541          move    *a10+,a1
     463 00001390     5420          or      a1,a0
     464 000013a0     2480          sll     4,a0
     465 000013b0     9541          move    *a10+,a1
     466 000013c0     5420          or      a1,a0
     467 000013d0     2480          sll     4,a0
     468 000013e0     9541          move    *a10+,a1
     469 000013f0     5420          or      a1,a0
     470 00001400     2480          sll     4,a0
     471 00001410     9541          move    *a10+,a1
     472 00001420     5420          or      a1,a0
     473 00001430     2480          sll     4,a0
     474 00001440     9541          move    *a10+,a1        ; Least Significant Digit (serial number)
     475 00001450     5420          or      a1,a0
     476 00001460                   FCALL   _bcd2hex,b6     ; Convert to hex (a2 = serial # hex)
     477 000014a0     0782          move    a2,@_serial_number,L
         000014b0 00000000! 
     478                            
     479 000014d0     0544          setf    4,0
     480 000014e0     09ea          movi    _pic_temp,a10
         000014f0 000001c0- 
     481 00001510     9540          move    *a10+,a0        ; Most Significant Digit (game number)
     482 00001520     2480          sll     4,a0
     483 00001530     9541          move    *a10+,a1
     484 00001540     5420          or      a1,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     485 00001550     2480          sll     4,a0
     486 00001560     9541          move    *a10+,a1        ; Least Significant Digit (game number)
     487 00001570     5420          or      a1,a0
     488 00001580                   FCALL   _bcd2hex,b6     ; Convert to hex
     489                    
     490 000015c0     5621          clr     a1
     491 000015d0     0b42          cmpi    528,a2          ; Development PIC Game Number
         000015e0     fdef  
     492 000015f0     ca15          jrz     gn_good
     493 00001600     0b42          cmpi    430,a2          ; Real Game Number (WrestleMania)
         00001610     fe51  
     494 00001620     ca12          jrz     gn_good
     495 00001630           gn_bad:
     496 00001630     09e0          movi    SEC_MESS_2,a0   ; Level 2 Security Check failure
         00001640 00014960' 
     497 00001660                   FCALL   STRINGCENTER,b6
     498 000016a0     0b21          addi    [220,0],a1
         000016b0 00dc0000  
     499 000016d0     5642          clr     a2
     500 000016e0     09c3          movi    COLOR_RED,a3
         000016f0     0303  
     501 00001700                   FCALL   STRING,b6
     502 00001740                   LOCKUP
     503 00001750           gn_good:
     504 00001750     0548          setf    8,0             ; Stomp on memory used to decode PIC
     505 00001760     5600          clr     a0
     506 00001770     09c1          movi    16,a1
         00001780     0010  
     507 00001790     09e2          movi    _pic_raw,a2
         000017a0 00000140- 
     508 000017c0           _stomp_temp:
     509 000017c0     9002          move    a0,*a2+
     510 000017d0     3c41          dsjs    a1,_stomp_temp
     511 000017e0     09c1          movi    8,a1
         000017f0     0008  
     512 00001800     09e2          movi    _pic_temp,a2
         00001810 000001c0- 
     513 00001830           _stomp_temp1:
     514 00001830     9002          move    a0,*a2+
     515 00001840     3c41          dsjs    a1,_stomp_temp1
     516 00001850     0570          setf    16,1,0                  ;Field0 = Word sign extend
     517 00001860     0740          setf    32,0,1                  ;Field1 = Long word
     518 00001870     0960          rets
     519                    
     520                    
     521 00001880           POWERCMOS:      
     522 00001880     0360          DINT
     523 00001890     09e1          MOVI    SYSCINIT,A1
         000018a0 0000987f  
     524 000018c0     0581          MOVE    A1,@SYSCTRL,W
         000018d0 01b00000  
     525                    
     526 000018f0     0d5f          CALLA   WDOGDIS                 ; GET RID OF WATCH DOG
         00001900 00000000! 
     527                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     528 00001920     57ad          CLR     A13                     ; USED TO DECIDE WHETHER PAUSE OR NOT
     529 00001930     058d          MOVE    A13,@DMACTRL,W
         00001940 01a00010  
     530 00001960     058d          MOVE    A13,@DMACTRL,W
         00001970 01a00010  
     531 00001990                   FCALL   INITCOLR,B5             ; FIX UP THE COLORS
     532 000019d0                   FCALL   INTIO,B6
     533 00001a10                   FCALL   DSCRCLR,B6              ; MAKE SURE OF SCREEN
     534 00001a50     09e0          MOVI    ROM_NAME,A0
         00001a60 00000000! 
     535 00001a80                   FCALL   STRINGCENTER,B6         ; GET WIDTH OF STRING
     536 00001ac0     0b21          ADDI    [30,0],A1
         00001ad0 001e0000  
     537 00001af0     5642          CLR     A2
     538 00001b00     09c3          MOVI    COLOR_YELLOW,A3
         00001b10     0505  
     539 00001b20                   FCALL   STRING,B6
     540                    
     541 00001b60     0d3f          callr   _read_pic_data
         00001b70     fe88  
     542 00001b80     09cd          movi    05018h,a13              ; Palette 128 match color (BLACK)
         00001b90     5018  
     543 00001ba0     058d          move    a13,@VMUX_BREG1,W
         00001bb0 01830000  
     544 00001bd0     09ed          movi    08080h,a13              ; Set Palette # to 128
         00001be0 00008080  
     545 00001c00     058d          move    a13,@DMACMAP,W
         00001c10 01a00080  
     546 00001c30     09e0          movi    SEC_MESS_1,a0           ; Print the message (won't show up)
         00001c40 000148a0' 
     547 00001c60                   FCALL   STRINGCENTER,b6         ; Note - only shows up on pirate
     548 00001ca0     0b21          addi    [210,0],a1              ; hardware
         00001cb0 00d20000  
     549 00001cd0     5642          clr     a2
     550 00001ce0     09c3          movi    COLOR_RED,a3
         00001cf0     0303  
     551 00001d00                   FCALL   STRING,b6
     552 00001d40     57ad          clr     a13                     ; Set palette # back to 0
     553 00001d50     058d          move    a13,@DMACMAP,W
         00001d60 01a00080  
     554                            
     555 00001d80     09e0          movi    SNDREVPROMPT,a0         ; Sound Revision Prompt
         00001d90 000038d0' 
     556 00001db0                   FCALL   STRINGCENTER,b6
     557 00001df0     0b21          addi    [120,0],a1
         00001e00 00780000  
     558 00001e20     5642          clr     a2
     559 00001e30     09c3          movi    COLOR_PURPLE,a3
         00001e40     0d0d  
     560 00001e50                   FCALL   STRING,b6
     561 00001e90     07a0          move    @_watchdog_addr,a0,L
         00001ea0 00000000! 
     562 00001ec0     8000          move    a0,*a0,W
     563 00001ed0     07a0          move    @_coin_counter_addr,a0,L
         00001ee0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

     564 00001f00     09c1          movi    030h,a1                         ; Yank down the reset
         00001f10     0030  
     565 00001f20     8020          move    a1,*a0,W
     566 00001f30     09c1          movi    10000,a1                        ; Hold it fer a while
         00001f40     2710  
     567 00001f50     3c21          dsjs    a1,$
     568 00001f60     09c1          movi    020h,a1                         ; Let it go
         00001f70     0020  
     569 00001f80     8020          move    a1,*a0,W
     570 00001f90     09c1          movi    10000,a1
         00001fa0     2710  
     571 00001fb0     3c21          dsjs    a1,$
     572 00001fc0     07a0          move    @_sound_addr,a0,L               ; Bypass the diags
         00001fd0 00000000! 
     573 00001ff0     8c00          movb    a0,*a0
     574 00002000     07a0          move    @_watchdog_addr,a0,L            ; Kill the dog
         00002010 00000000! 
     575 00002030     8000          move    a0,*a0,W
     576 00002040     09e1          movi    500000,a1                       ; Wait fer a while
         00002050 0007a120  
     577 00002070           _swait_lp
     578 00002070     07a0          move    @_watchdog_addr,a0,L
         00002080 00000000! 
     579 000020a0     8400          move    *a0,a0,W
     580 000020b0     3ca1          dsjs    a1,_swait_lp
     581 000020c0     5663          clr     a3                      ; Turn on the sounds
     582 000020d0     0583          move    a3,@SOUNDSUP,W
         000020e0 00000000! 
     583 00002100     09c3          movi    999,a3                  ; Send revision request sound call
         00002110     03e7  
     584 00002120     0d5f          calla   SNDSND
         00002130 00000000! 
     585 00002150     09e2          movi    1000000,a2
         00002160 000f4240  
     586 00002180           _sndrev_loop
     587 00002180     07a0          move    @_watchdog_addr,a0,L
         00002190 00000000! 
     588 000021b0     8c00          movb    a0,*a0
     589 000021c0     07a0          move    @_soundirq_addr,a0,L    ; Wait fer a response
         000021d0 00000000! 
     590 000021f0     8401          move    *a0,a1,W
     591 00002200     1ea1          btst    B_SDAV,a1               ; Got a response ?
     592 00002210     ca13          jrz     _snd_response           ; BR = yes
     593 00002220     3d62          dsjs    a2,_sndrev_loop
     594 00002230           _snd_timeout
     595 00002230     09e0          movi    SNDTIMEOUT,a0           ; If we get here we never got a response
         00002240 00003a10' 
     596 00002260                   FCALL   STRINGCENTER,b6         ; Tell operator about it
     597 000022a0     0b21          addi    [135,0],a1
         000022b0 00870000  
     598 000022d0     5642          clr     a2
     599 000022e0     09c3          movi    COLOR_RED,a3
         000022f0     0303  
     600 00002300                   FCALL   STRING,b6
     601 00002340     c03c          jruc    _sndrev_done            ; Then we be done
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

     602 00002350           _snd_response
     603 00002350     07a0          move    @_sound_addr,a0,L       ; Get sound revision data
         00002360 00000000! 
     604 00002380     8400          move    *a0,a0,W
     605 00002390     0580          move    a0,@_snd_chip_count,W   ; Put up sound revision
         000023a0 00000130- 
     606 000023c0     4c01          move    a0,a1
     607 000023d0     0b81          andi    0ffh,a1
         000023e0 ffffff00  
     608 00002400     0b41          cmpi    0ffh,a1
         00002410     ff00  
     609 00002420     cae0          jrz     _snd_timeout
     610 00002430     0b81          andi    0f0h,a1
         00002440 ffffff0f  
     611 00002460     0b41          cmpi    0d0h,a1
         00002470     ff2f  
     612 00002480     ca04          jrz     _proto_version
     613 00002490     09e4          movi    SNDRELEASEPROMPT,a4
         000024a0 000039c0' 
     614 000024c0     c003          jruc    _do_snd_version
     615 000024d0           _proto_version
     616 000024d0     09e4          movi    SNDPROTOPROMPT,a4
         000024e0 00003980' 
     617 00002500           _do_snd_version
     618 00002500     0d5f          calla   copy_rom_string
         00002510 00000000! 
     619 00002530     05a0          move    @_snd_chip_count,a0,W
         00002540 00000130- 
     620 00002560     0b80          andi    0fh,a0
         00002570 fffffff0  
     621 00002590     19e1          movk    15,a1
     622 000025a0     0d5f          calla   dec_to_asc
         000025b0 00000000! 
     623 000025d0     0d5f          calla   concat_string
         000025e0 00000000! 
     624 00002600     09e0          movi    message_buffer,a0
         00002610 00000000! 
     625 00002630                   FCALL   STRINGCENTER,b6
     626 00002670     0b21          addi    [135,0],a1
         00002680 00870000  
     627 000026a0     5642          clr     a2
     628 000026b0     09c3          movi    COLOR_WHITE,a3
         000026c0     0202  
     629 000026d0                   FCALL   STRING,b6
     630 00002710           _sndrev_done
     631                    
     632 00002710     09e0          movi    GAMESNPROMPT,a0         ; Put up Game Serial number
         00002720 00003b50' 
     633 00002740                   FCALL   STRINGCENTER,b6
     634 00002780     0b21          addi    [160,0],a1
         00002790 00a00000  
     635 000027b0     5642          clr     a2
     636 000027c0     09c3          movi    COLOR_PURPLE,a3
         000027d0     0d0d  
     637 000027e0                   FCALL   STRING,b6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     638 00002820     07a0          move    @_serial_number,a0,L    ; Serial number put here by _get_serial_number
         00002830 00000000! 
     639 00002850     09e1          movi    1000000,a1
         00002860 000f4240  
     640 00002880     0d5f          calla   dec_to_asc
         00002890 00000000! 
     641 000028b0     0d5f          calla   copy_string
         000028c0 00000000! 
     642 000028e0     09e0          movi    message_buffer,a0
         000028f0 00000000! 
     643 00002910                   FCALL   STRINGCENTER,b6
     644 00002950     0b21          addi    [175,0],a1
         00002960 00af0000  
     645 00002980     5642          clr     a2
     646 00002990     09c3          movi    COLOR_WHITE,a3
         000029a0     0202  
     647 000029b0                   FCALL   STRING,b6
     648                    
     649 000029f0     0d5f          CALLA   CMOS_VAL                ; CHECKSUM AUDITS/ADJUSTMENTS
         00002a00 00000000! 
     650 00002a20     ca41          JREQ    CMOSOK
     651 00002a30     5600          clr     a0                      ;Full
     652 00002a40     0d5f          CALLA   FAC_SET
         00002a50 00000000! 
     653 00002a70     0d5f          CALLA   CLR_AUD
         00002a80 00000000! 
     654                    
     655 00002aa0     182d          MOVK    1,A13                   ; FLAG ERROR
     656 00002ab0     0d5f          CALLA   CMOS_VAL                ; TRY AGAIN
         00002ac0 00000000! 
     657 00002ae0     ca23          JREQ    CMOSB1                  ; BR = OK WE'RE IN
     658                    
     659 00002af0     09e0          MOVI    CMOS_BAD,A0
         00002b00 000040e0' 
     660 00002b20                   FCALL   STRINGCENTER,B6
     661 00002b60     0b21          ADDI    [50,0],A1
         00002b70 00320000  
     662 00002b90     5642          CLR     A2
     663 00002ba0     09c3          MOVI    COLOR_RED,A3
         00002bb0     0303  
     664 00002bc0                   FCALL   STRING,B6
     665 00002c00     09e0          MOVI    CMOS_UNFAC,A0
         00002c10 00004170' 
     666 00002c30                   FCALL   STRINGCENTER,B6
     667 00002c70     0b21          ADDI    [65,0],A1
         00002c80 00410000  
     668 00002ca0     5642          CLR     A2
     669 00002cb0     09c3          MOVI    COLOR_RED,A3
         00002cc0     0303  
     670 00002cd0                   FCALL   STRING,B6
     671 00002d10     c023          JRUC    CMOS1
     672 00002d20           CMOSB1
     673 00002d20     09e0          MOVI    CMOS_FACRES,A0
         00002d30 00003f90' 
     674 00002d50                   FCALL   STRINGCENTER,B6
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     675 00002d90     0b21          ADDI    [50,0],A1
         00002da0 00320000  
     676 00002dc0     5642          CLR     A2
     677 00002dd0     09c3          MOVI    COLOR_RED,A3
         00002de0     0303  
     678 00002df0                   FCALL   STRING,B6
     679 00002e30     c011          JRUC    CMOS1
     680 00002e40           CMOSOK
     681 00002e40     09e0          MOVI    CMOS_OK,A0
         00002e50 00004290' 
     682 00002e70                   FCALL   STRINGCENTER,B6
     683 00002eb0     0b21          ADDI    [50,0],A1
         00002ec0 00320000  
     684 00002ee0     5642          CLR     A2
     685 00002ef0     09c3          MOVI    COLOR_GREEN,A3
         00002f00     0606  
     686 00002f10                   FCALL   STRING,B6
     687                    
     688 00002f50           CMOS1
     689 00002f50     0d5f          CALLA   CRED_P                  ;CHECK OUT CREDITS, THIS WILL CLEAR
         00002f60 00000000! 
     690                                                            ;IF NECESSARY.  THANX LINKY!
     691                    
     692 00002f80     0d3f          CALLR   READ_DIP
         00002f90     0cff  
     693 00002fa0     0b80          ANDI    DPUSECMOS,A0
         00002fb0 fffffeff  
     694 00002fd0     cb14          JRNZ    CMOS3                   ; BR = USING CMOS COINAGE
     695                    
     696 00002fe0     09e0          MOVI    CMOS_DIP,A0
         00002ff0 00003ce0' 
     697 00003010                   FCALL   STRINGCENTER,B6
     698 00003050     0b21          ADDI    [75,0],A1
         00003060 004b0000  
     699 00003080     5642          CLR     A2
     700 00003090     09c3          MOVI    COLOR_WHITE,A3
         000030a0     0202  
     701 000030b0                   FCALL   STRING,B6
     702                            
     703 000030f0     0d3f          CALLR   SET_DIP_COINAGE
         00003100     0a91  
     704 00003110     c011          JRUC    CMOS4
     705                    
     706 00003120           CMOS3
     707 00003120     09e0          MOVI    CMOS_CMOS,A0
         00003130 00003da0' 
     708 00003150                   FCALL   STRINGCENTER,B6
     709 00003190     0b21          ADDI    [75,0],A1
         000031a0 004b0000  
     710 000031c0     5642          CLR     A2
     711 000031d0     09c3          MOVI    COLOR_WHITE,A3
         000031e0     0202  
     712 000031f0                   FCALL   STRING,B6
     713 00003230           CMOS4   
     714 00003230     07a0          move    @_coin_addr,a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

         00003240 00000000! 
     715 00003260     8400          move    *a0,a0,W
     716 00003270     03e0          not     a0
     717 00003280     0b80          andi    8h,a0
         00003290 fffffff7  
     718 000032b0     ca12          JRZ     CMOSRET
     719 000032c0     09e0          MOVI    CMOS_TILT,A0
         000032d0 00003bf0' 
     720 000032f0                   FCALL   STRINGCENTER,B6
     721 00003330     0b21          ADDI    [205,0],A1
         00003340 00cd0000  
     722 00003360     5642          CLR     A2
     723 00003370     09c3          MOVI    COLOR_RED,A3
         00003380     0303  
     724 00003390                   FCALL   STRING,B6
     725 000033d0     182d          MOVK    1,A13                   ; FLAG ERROR
     726 000033e0           CMOSRET
     727 000033e0     4dad          MOVE    A13,A13
     728 000033f0     ca33          JRZ     CTMP0
     729                    
     730 00003400     09c0          MOVI    CMOS_ERROR_SND,A0
         00003410     0203  
     731 00003420     07ad          move    @_sound_addr,a13,L
         00003430 00000000! 
     732 00003450     800d          move    a0,*a13,W
     733                    
     734 00003460     09e0          MOVI    CMOS_WAIT,A0
         00003470 00003e40' 
     735 00003490                   FCALL   STRINGCENTER,B6
     736 000034d0     0b21          ADDI    [230,0],A1
         000034e0 00e60000  
     737 00003500     5642          CLR     A2
     738 00003510     09c3          MOVI    COLOR_RED,A3
         00003520     0303  
     739 00003530                   FCALL   STRING,B6
     740 00003570     0d5f          CALLA   WDOGDIS                 ; DISABLE WOOF WOOF
         00003580 00000000! 
     741                    
     742 000035a0     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         000035b0 00000000! 
     743 000035d0     0b80          andi    BUTTONS|START_BITS,a0
         000035e0 f9db0f0f  
     744 00003600     0780          MOVE    A0,@SWSET1,L
         00003610 00000000- 
     745 00003630           CTMP1
     746 00003630     07a0          move    @_watchdog_addr,a0,L
         00003640 00000000! 
     747 00003660     8000          move    a0,*a0
     748 00003670     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         00003680 00000000! 
     749 000036a0     0b80          andi    BUTTONS|START_BITS,a0
         000036b0 f9db0f0f  
     750 000036d0     07a1          MOVE    @SWSET1,A1,L
         000036e0 00000000- 
     751 00003700     4801          CMP     A0,A1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

     752 00003710     caf1          JRZ     CTMP1
     753 00003720     c011          JRUC    CTMP2
     754 00003730           CTMP0
     755 00003730     09c0          MOVI    200H,A0
         00003740     0200  
     756 00003750           CTMP_WAIT
     757 00003750     07a1          move    @_watchdog_addr,a1,L
         00003760 00000000! 
     758 00003780     8021          move    a1,*a1
     759                    
     760                    
     761 00003790                   PAUSE   1000H,B6
     762 000037e0                   PAUSE   2000h,B6                ;Go fast
     763 00003830     3de0          DSJS    A0,CTMP_WAIT
     764                    
     765 00003840           CTMP2
     766 00003840     07b5          move    @_serial_number,b5,L
         00003850 00000000! 
     767 00003870     07b6          move    @_man_date,b6,L
         00003880 00000000! 
     768 000038a0     c080          JAUC    PCMOSRET
         000038b0 00000000! 
     769                    
     770                    
     771 000038d0           SNDREVPROMPT
     772 000038d0       53          .string "SOUND SYSTEM VERSION",0
     773 00003980                   .even
     774 00003980           SNDPROTOPROMPT
     775 00003980       50          .string "PROTO ",0
     776 000039c0                   .even
     777 000039c0           SNDRELEASEPROMPT
     778 000039c0       52          .string "RELEASE ",0
     779 00003a10                   .even
     780 00003a10           SNDTIMEOUT
     781 00003a10       54          .string "TIMEOUT ON RESPONSE FROM SOUND SECTION",0
     782 00003b50                   .even
     783 00003b50           GAMESNPROMPT
     784 00003b50       47          .string "GAME SERIAL NUMBER",0
     785 00003bf0                   .even
     786                    
     787 00003bf0           CMOS_TILT
     788 00003bf0       57          .STRING "WARNING -- SLAM SWITCH CLOSED",0
     789 00003ce0                   .EVEN
     790                            
     791 00003ce0           CMOS_DIP
     792 00003ce0       55          .STRING "USING DIPSWITCH COINAGE",0
     793 00003da0                   .EVEN
     794                    
     795 00003da0           CMOS_CMOS
     796 00003da0       55          .STRING "USING CMOS COINAGE",0
     797 00003e40                   .EVEN
     798                    
     799 00003e40           CMOS_WAIT
     800 00003e40       45          .STRING "ERRORS DETECTED -- ANY BUTTON TO CONTINUE",0
     801 00003f90                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     802                    
     803 00003f90           CMOS_FACRES
     804 00003f90       43          .STRING "CMOS INVALID -- FACTORY SETTINGS RESTORED",0
     805 000040e0                   .EVEN
     806                    
     807 000040e0           CMOS_BAD
     808 000040e0       43          .string "CMOS CHIP U62 BAD",0
     809 00004170                   .EVEN
     810                    
     811 00004170           CMOS_UNFAC
     812 00004170       55          .STRING "UNABLE TO RESTORE FACTORY SETTINGS",0
     813 00004290                   .EVEN
     814                    
     815 00004290           CMOS_OK
     816 00004290       43          .STRING "CMOS OK",0
     817 000042d0                   .EVEN
     818                    
     819                    
     820 000042d0           BURN_IN:
     821 000042d0     0360          DINT
     822 000042e0     09c0          MOVI    AUDAUTO,A0              ;ZERO OUT BURNIN AUDIT
         000042f0     0016  
     823 00004300     0d5f          CALLA   KILL_AUD
         00004310 00000000! 
     824 00004330           BURNLOOP
     825 00004330     0d5f          CALLA   WDOGDIS                 ;MAKE SURE THE DOG IS ASLEEP
         00004340 00000000! 
     826 00004360                   FCALL   CPUTEST,SP
     827 000043a0           BURNSP:
     828 000043a0     0570          setf    16,1,0
     829 000043b0     0740          setf    32,0,1
     830 000043c0     09ef          MOVI    STCKST,SP,L             ;RESTORE THE STACK PTR
         000043d0 013f73e0  
     831 000043f0     09e0          MOVI    SYSCINIT,A0             ;RE-INITIALIZE SYSTEM CONTROL
         00004400 0000987f  
     832 00004420     0580          MOVE    A0,@SYSCTRL,W
         00004430 01b00000  
     833 00004450     0580          MOVE    A0,@SYSCOPY,W           ;KEEP A COPY IN RAM
         00004460 00000000! 
     834 00004480     09c0          MOVI    AUDAUTO,A0
         00004490     0016  
     835 000044a0     0d5f          CALLA   AUD1                    ;ANOTHER ONE WORKED
         000044b0 00000000! 
     836 000044d0     c0e5          JRUC    BURNLOOP
     837                    
     838                    
     839 000044e0           DIAGCPUTEST:
     840 000044e0     0d5f          CALLA   WDOGDIS
         000044f0 00000000! 
     841 00004510     0360          DINT
     842 00004520     0d5f          calla   InitAddresses           ; Make sure I/O addresses are initialized
         00004530 00000000! 
     843 00004550                   FCALL   CPUTEST,SP
     844 00004590           DIAGSP:
     845 00004590     0570          SETF    16,1,0                  ; WORD NO SIGN EXTEND
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

     846 000045a0     0740          SETF    32,0,1                  ; LONG WORD
     847 000045b0     09ef          MOVI    STCKST,SP,L
         000045c0 013f73e0  
     848 000045e0     0d5f          CALLA   init_all
         000045f0 00000000! 
     849                    
     850 00004610     0d3f          callr   _read_pic_data
         00004620     fbdd  
     851                    
     852 00004630     0d5f          CALLA   DIAG_COLORS             ;FIRE UP THE COLORS
         00004640 00000000! 
     853                    
     854 00004660                   CREATE  DIAG_PID,CPU_RET
     855 000046e0     09c0          MOVI    INDIAG,A0
         000046f0     ffff  
     856 00004700     0580          MOVE    A0,@GAMSTATE,W
         00004710 00000000! 
     857 00004730     1820          movk    1,a0                    ; Menu driver switch mapping mode
     858 00004740     0780          move    a0,@_switch_map_mode,L
         00004750 00000000! 
     859 00004770     0d5f          calla   InitAddresses
         00004780 00000000! 
     860 000047a0     c080          JAUC    mainlp
         000047b0 00000000! 
     861                    
     862 000047d0            SUBR bin2bcd
     863 000047d0     098f          mmtm    sp,a0,a1,a2,a3
         000047e0     f000  
     864 000047f0     8402          move    *a0,a2,W
     865 00004800     4c41          move    a2,a1
     866 00004810     09c3          movi    10,a3
         00004820     000a  
     867 00004830     5a61          divu    a3,a1
     868 00004840     2481          sll     4,a1
     869 00004850     09c3          movi    10,a3
         00004860     000a  
     870 00004870     6e62          modu    a3,a2
     871 00004880     5441          or      a2,a1
     872 00004890     8020          move    a1,*a0,W
     873 000048a0     09af          mmfm    sp,a0,a1,a2,a3
         000048b0     000f  
     874 000048c0     0960          rets
     875                    
     876 000048d0            SUBR _set_time
     877 000048d0     098f          mmtm    sp,a0,a1,a2,a3,a4
         000048e0     f800  
     878 000048f0     09e0          movi    _rtc_seconds,a0,L
         00004900 00000000! 
     879 00004920     09c4          movi    7,a4
         00004930     0007  
     880 00004940           _st_cnvt_loop
     881 00004940     0d3f          callr   bin2bcd
         00004950     ffe7  
     882 00004960     1200          addk    16,a0
     883 00004970     3c84          dsjs    a4,_st_cnvt_loop
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

     884 00004980     09c4          movi    14,a4
         00004990     000e  
     885 000049a0     09e3          movi    _rtc_seconds,a3,L
         000049b0 00000000! 
     886 000049d0     01e0          pushst
     887 000049e0     0360          dint
     888 000049f0     09c0          movi    012h,a0
         00004a00     0012  
     889 00004a10     0580          move    a0,@PIC_COMMAND,W
         00004a20 01600000  
     890 00004a40           _st_next_val
     891 00004a40     1840          movk    2,a0
     892 00004a50     0580          move    a0,@PIC_COMMAND,W
         00004a60 01600000  
     893 00004a80     09e1          movi    1000000,a1
         00004a90 000f4240  
     894 00004ab0           _st_ack_wait
     895 00004ab0     07a2          move    @_watchdog_addr,a2,L
         00004ac0 00000000! 
     896 00004ae0     8042          move    a2,*a2,W
     897 00004af0     07a2          move    @_soundirq_addr,a2,L
         00004b00 00000000! 
     898 00004b20     8442          move    *a2,a2,W
     899 00004b30     1e62          btst    12,a2
     900 00004b40     ca02          jrz     _got_st_ack
     901 00004b50     3d61          dsjs    a1,_st_ack_wait
     902 00004b60     c022          jruc    _st_done
     903 00004b70           _got_st_ack
     904 00004b70     01e0          pushst
     905 00004b80     0544          setf    4,0
     906 00004b90     8461          move    *a3,a1,0
     907 00004ba0     01c0          popst
     908 00004bb0     0581          move    a1,@PIC_COMMAND,W
         00004bc0 01600000  
     909 00004be0     0ba1          ori     010h,a1
         00004bf0 00000010  
     910 00004c10     0581          move    a1,@PIC_COMMAND,W
         00004c20 01600000  
     911 00004c40     1083          addk    4,a3
     912 00004c50     1f83          btst    3,a3
     913 00004c60     ca01          jrz     _addr_ok
     914 00004c70     1103          addk    8,a3
     915 00004c80           _addr_ok
     916 00004c80     09e0          movi    1000000,a0
         00004c90 000f4240  
     917 00004cb0           _st_nack_wait
     918 00004cb0     07a2          move    @_watchdog_addr,a2,L
         00004cc0 00000000! 
     919 00004ce0     8042          move    a2,*a2,W
     920 00004cf0     07a2          move    @_soundirq_addr,a2,L
         00004d00 00000000! 
     921 00004d20     8442          move    *a2,a2,W
     922 00004d30     1e62          btst    12,a2
     923 00004d40     cb02          jrnz    _got_st_nack
     924 00004d50     3d60          dsjs    a0,_st_nack_wait
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

     925 00004d60     c002          jruc    _st_done
     926 00004d70           _got_st_nack
     927 00004d70     0d84          dsj     a4,_st_next_val
         00004d80     ffcb  
     928 00004d90           _st_done
     929 00004d90     01c0          popst
     930 00004da0     09af          mmfm    sp,a0,a1,a2,a3,a4
         00004db0     001f  
     931 00004dc0     0960          rets
     932                    
     933 00004dd0            SUBR bcd2hex
     934 00004dd0     098f          mmtm    sp,a0,a3
         00004de0     9000  
     935 00004df0     4c22          move    a1,a2
     936 00004e00     1943          movk    10,a3
     937 00004e10     0b81          andi    0f0h,a1
         00004e20 ffffff0f  
     938 00004e40     2f81          srl     4,a1
     939 00004e50     5e61          mpyu    a3,a1
     940 00004e60     0b82          andi    0fh,a2
         00004e70 fffffff0  
     941 00004e90     4041          add     a2,a1
     942 00004ea0     09af          mmfm    sp,a0,a3
         00004eb0     0009  
     943 00004ec0     0960          rets
     944                    
     945 00004ed0            SUBR _aquire_time
     946 00004ed0     098f          mmtm    sp,a0,a1
         00004ee0     c000  
     947 00004ef0     09c0          movi    011h,a0                 ;Command code 0x1
         00004f00     0011  
     948 00004f10     0580          move    a0,@PIC_COMMAND,W
         00004f20 01600000  
     949 00004f40           _at_next_byte
     950 00004f40     09c0          movi    01h,a0
         00004f50     0001  
     951 00004f60     0580          move    a0,@PIC_COMMAND,W
         00004f70 01600000  
     952 00004f90     09e0          movi    100000,a0               ;Wait for Acknowledge
         00004fa0 000186a0  
     953 00004fc0           _at_ack_wait
     954 00004fc0     07a1          move    @_watchdog_addr,a1,L
         00004fd0 00000000! 
     955 00004ff0     8021          move    a1,*a1,W
     956 00005000     07a1          move    @_soundirq_addr,a1,L
         00005010 00000000! 
     957 00005030     8421          move    *a1,a1,W
     958 00005040     1e61          btst    12,a1
     959 00005050     ca02          jrz     _got_at_ack
     960 00005060     3d60          dsjs    a0,_at_ack_wait
     961 00005070     c005          jruc    _at_done
     962 00005080           _got_at_ack
     963 00005080     09c1          movi    010h,a1
         00005090     0010  
     964 000050a0     0581          move    a1,@PIC_COMMAND,W       ;Take away Request
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

         000050b0 01600000  
     965 000050d0           _at_done
     966 000050d0     09af          mmfm    sp,a0,a1
         000050e0     0003  
     967 000050f0     0960          rets
     968                    
     969 00005100            SUBR _get_time
     970 00005100     098f          mmtm    sp,a0,a1,a2,a3
         00005110     f000  
     971 00005120     1903          movk    8,a3                    ;Number of bytes of data to get
     972 00005130     09e2          movi    _tseconds,a2
         00005140 00000000! 
     973 00005160     09c0          movi    013h,a0                 ;Command code 0x3
         00005170     0013  
     974 00005180     0580          move    a0,@PIC_COMMAND,W
         00005190 01600000  
     975 000051b0           _gt_next_byte
     976 000051b0     09c0          movi    03h,a0
         000051c0     0003  
     977 000051d0     0580          move    a0,@PIC_COMMAND,W
         000051e0 01600000  
     978 00005200     09e0          movi    100000,a0               ;Wait for Acknowledge
         00005210 000186a0  
     979 00005230           _get_time_data_wait
     980 00005230     07a1          move    @_watchdog_addr,a1,L
         00005240 00000000! 
     981 00005260     8021          move    a1,*a1,W
     982 00005270     07a1          move    @_soundirq_addr,a1,L
         00005280 00000000! 
     983 000052a0     8421          move    *a1,a1,W
     984 000052b0     1e61          btst    12,a1
     985 000052c0     ca07          jrz     _got_gt_ack
     986 000052d0     3d60          dsjs    a0,_get_time_data_wait
     987 000052e0     0b43          cmpi    1,a3
         000052f0     fffe  
     988 00005300     ca1f          jrz     _get_time_adjust
     989 00005310     1820          movk    1,a0
     990 00005320     c000          jruc    _get_time_done
         00005330     0086  
     991 00005340           _got_gt_ack
     992 00005340     05a0          move    @PIC_DATA,a0,W          ;Read the data
         00005350 01600000  
     993 00005370     09c1          movi    010h,a1
         00005380     0010  
     994 00005390     0581          move    a1,@PIC_COMMAND,W       ;Tell PIC we took data
         000053a0 01600000  
     995 000053c0     0b80          andi    0ffh,a0
         000053d0 ffffff00  
     996 000053f0     9002          move    a0,*a2+,W
     997 00005400     09e0          movi    100000,a0
         00005410 000186a0  
     998 00005430           _gt_wait_nack
     999 00005430     07a1          move    @_watchdog_addr,a1,L
         00005440 00000000! 
    1000 00005460     8021          move    a1,*a1,W
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

    1001 00005470     07a1          move    @_soundirq_addr,a1,L
         00005480 00000000! 
    1002 000054a0     8621          move    *a1,a1,L
    1003 000054b0     1e61          btst    12,a1
    1004 000054c0     cb01          jrnz    _got_gt_nack
    1005 000054d0     3d60          dsjs    a0,_gt_wait_nack
    1006 000054e0           _got_gt_nack
    1007 000054e0     0d83          dsj     a3,_gt_next_byte
         000054f0     ffcb  
    1008 00005500           _get_time_adjust
    1009 00005500     09e0          movi    _tseconds,a0,L
         00005510 00000000! 
    1010 00005530     8401          move    *a0,a1,W                ;Mask off unused bits for seconds
    1011 00005540     0b81          andi    07fh,a1
         00005550 ffffff80  
    1012 00005570     0d3f          callr   bcd2hex                 ;Convert to hex
         00005580     ff84  
    1013 00005590     4c21          move    a1,a1
    1014 000055a0     cf02          jrnn    _chk_seconds59
    1015 000055b0     5621          clr     a1
    1016 000055c0     c004          jruc    _seconds_ok
    1017 000055d0           _chk_seconds59
    1018 000055d0     0b41          cmpi    60,a1
         000055e0     ffc3  
    1019 000055f0     c401          jrlt    _seconds_ok
    1020 00005600     5621          clr     a1
    1021 00005610           _seconds_ok
    1022 00005610     9020          move    a1,*a0+,W
    1023 00005620     8401          move    *a0,a1,W                ;Mask off unused bits for minutes
    1024 00005630     0b81          andi    07fh,a1
         00005640 ffffff80  
    1025 00005660     0d3f          callr   bcd2hex                 ;Convert to hex
         00005670     ff75  
    1026 00005680     4c21          move    a1,a1
    1027 00005690     cf02          jrnn    _chk_minutes59
    1028 000056a0     5621          clr     a1
    1029 000056b0     c004          jruc    _minutes_ok
    1030 000056c0           _chk_minutes59
    1031 000056c0     0b41          cmpi    60,a1
         000056d0     ffc3  
    1032 000056e0     c401          jrlt    _minutes_ok
    1033 000056f0     5621          clr     a1
    1034 00005700           _minutes_ok
    1035 00005700     9020          move    a1,*a0+,W
    1036 00005710     8401          move    *a0,a1,W                ;Mask off unused bits for hours
    1037 00005720     0b81          andi    03fh,a1
         00005730 ffffffc0  
    1038 00005750     0d3f          callr   bcd2hex                 ;Convert to hex
         00005760     ff66  
    1039 00005770     4c21          move    a1,a1
    1040 00005780     cf02          jrnn    _chk_hours23
    1041 00005790     5621          clr     a1
    1042 000057a0     c004          jruc    _hours_ok
    1043 000057b0           _chk_hours23
    1044 000057b0     0b41          cmpi    24,a1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

         000057c0     ffe7  
    1045 000057d0     c401          jrlt    _hours_ok
    1046 000057e0     5621          clr     a1
    1047 000057f0           _hours_ok
    1048 000057f0     9020          move    a1,*a0+,W
    1049 00005800     8401          move    *a0,a1,W                ;Mask off unused bits for day
    1050 00005810     0b81          andi    07h,a1
         00005820 fffffff8  
    1051 00005840     0d3f          callr   bcd2hex                 ;Convert to hex
         00005850     ff57  
    1052 00005860     4c21          move    a1,a1
    1053 00005870     cb02          jrnz    _chk_day7
    1054 00005880     1821          movk    1,a1
    1055 00005890     c004          jruc    _day_ok
    1056 000058a0           _chk_day7
    1057 000058a0     0b41          cmpi    8,a1
         000058b0     fff7  
    1058 000058c0     c401          jrlt    _day_ok
    1059 000058d0     1821          movk    1,a1
    1060 000058e0           _day_ok
    1061 000058e0     9020          move    a1,*a0+,W
    1062 000058f0     8401          move    *a0,a1,W                ;Mask off unused bits for date
    1063 00005900     0b81          andi    03fh,a1
         00005910 ffffffc0  
    1064 00005930     0d3f          callr   bcd2hex                 ;Convert to hex
         00005940     ff48  
    1065 00005950     4c21          move    a1,a1
    1066 00005960     cb02          jrnz    _chk_date31
    1067 00005970     1821          movk    1,a1
    1068 00005980     c004          jruc    _date_ok
    1069 00005990           _chk_date31
    1070 00005990     0b41          cmpi    32,a1
         000059a0     ffdf  
    1071 000059b0     c401          jrlt    _date_ok
    1072 000059c0     1821          movk    1,a1
    1073 000059d0           _date_ok
    1074 000059d0     9020          move    a1,*a0+,W
    1075 000059e0     8401          move    *a0,a1                  ;Mask off unused bits for month
    1076 000059f0     0b81          andi    01fh,a1
         00005a00 ffffffe0  
    1077 00005a20     0d3f          callr   bcd2hex                 ;Convert to hex
         00005a30     ff39  
    1078 00005a40     4c21          move    a1,a1
    1079 00005a50     cb02          jrnz    _chk_month12
    1080 00005a60     1821          movk    1,a1
    1081 00005a70     c004          jruc    _month_ok
    1082 00005a80           _chk_month12
    1083 00005a80     0b41          cmpi    13,a1
         00005a90     fff2  
    1084 00005aa0     c401          jrlt    _month_ok
    1085 00005ab0     1821          movk    1,a1
    1086 00005ac0           _month_ok
    1087                    
    1088 00005ac0     9020          move    a1,*a0+,W
    1089 00005ad0     8401          move    *a0,a1,W
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1090 00005ae0     0d3f          callr   bcd2hex                 ;Convert to hex
         00005af0     ff2d  
    1091 00005b00     4c21          move    a1,a1
    1092 00005b10     cf02          jrnn    _chk_year99
    1093 00005b20     5621          clr     a1
    1094 00005b30     c004          jruc    _year_ok
    1095 00005b40           _chk_year99
    1096 00005b40     0b41          cmpi    100,a1
         00005b50     ff9b  
    1097 00005b60     c401          jrlt    _year_ok
    1098 00005b70     5621          clr     a1
    1099 00005b80           _year_ok
    1100 00005b80     8020          move    a1,*a0,W
    1101 00005b90     5600          clr     a0                      ;All bits used for year
    1102 00005ba0           _get_time_done
    1103 00005ba0     09af          mmfm    sp,a0,a1,a2,a3
         00005bb0     000f  
    1104 00005bc0     0960          rets
    1105                    
    1106 00005bd0           PICCHECK
    1107 00005bd0     09c0          movi    1fh,a0                  ;Command code 0xf
         00005be0     001f  
    1108 00005bf0     0580          move    a0,@PIC_COMMAND,W
         00005c00 01600000  
    1109 00005c20     09c0          movi    0fh,a0
         00005c30     000f  
    1110 00005c40     0580          move    a0,@PIC_COMMAND,W
         00005c50 01600000  
    1111 00005c70     09e0          movi    100000,a0               ;Wait for Acknowledge
         00005c80 000186a0  
    1112 00005ca0           pic_loop
    1113 00005ca0     07a1          move    @_watchdog_addr,a1,L
         00005cb0 00000000! 
    1114 00005cd0     8021          move    a1,*a1,W
    1115 00005ce0     07a1          move    @_soundirq_addr,a1,L
         00005cf0 00000000! 
    1116 00005d10     8421          move    *a1,a1,W
    1117 00005d20     1e61          btst    12,a1
    1118 00005d30     ca03          jrz     _got_pic_ack            ;BR = got acknowledge
    1119 00005d40     3d60          dsjs    a0,pic_loop
    1120 00005d50     1820          movk    1,a0
    1121 00005d60     c021          jruc    _piccheck_done
    1122 00005d70           _got_pic_ack
    1123 00005d70     05a0          move    @PIC_DATA,a0,W          ;Read the data
         00005d80 01600000  
    1124 00005da0     09c1          movi    010h,a1
         00005db0     0010  
    1125 00005dc0     0581          move    a1,@PIC_COMMAND,W       ;Tell PIC we took data
         00005dd0 01600000  
    1126 00005df0     09e1          movi    100000,a1
         00005e00 000186a0  
    1127 00005e20           _pic_nack_loop
    1128 00005e20     07a2          move    @_watchdog_addr,a2,L
         00005e30 00000000! 
    1129 00005e50     8042          move    a2,*a2,W
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1130 00005e60     07a2          move    @_soundirq_addr,a2,L
         00005e70 00000000! 
    1131 00005e90     8442          move    *a2,a2,W
    1132 00005ea0     1e62          btst    12,a2
    1133 00005eb0     cb03          jrnz    _got_pic_nack
    1134 00005ec0     3d61          dsjs    a1,_pic_nack_loop
    1135 00005ed0     1820          movk    1,a0
    1136 00005ee0     c009          jruc    _piccheck_done
    1137 00005ef0           _got_pic_nack
    1138 00005ef0     0b80          andi    0fh,a0
         00005f00 fffffff0  
    1139 00005f20     0b40          cmpi    0fh,a0
         00005f30     fff0  
    1140 00005f40     ca02          jrz     _pic_ok
    1141 00005f50     1820          movk    1,a0
    1142 00005f60     c001          jruc    _piccheck_done
    1143 00005f70           _pic_ok
    1144 00005f70     5600          clr     a0
    1145 00005f80           _piccheck_done
    1146 00005f80                   FRET    b5
    1147                    
    1148 00005f90           SNDCHECK
    1149 00005f90     0796          move    b6,@_b6_save,L
         00005fa0 000000e0- 
    1150 00005fc0     07a0          move    @_coin_counter_addr,a0,L
         00005fd0 00000000! 
    1151 00005ff0     09c1          movi    030h,a1
         00006000     0030  
    1152 00006010     8020          move    a1,*a0,W
    1153 00006020     09c1          movi    8,a1
         00006030     0008  
    1154 00006040     3c21          dsjs    a1,$
    1155 00006050     09c1          movi    020h,a1
         00006060     0020  
    1156 00006070     8020          move    a1,*a0,W
    1157 00006080     09e1          movi    1000000,a1
         00006090 000f4240  
    1158 000060b0           dsp_loop1
    1159 000060b0     07a0          move    @_watchdog_addr,a0,L
         000060c0 00000000! 
    1160 000060e0     8000          move    a0,*a0,W
    1161 000060f0     07a0          move    @_soundirq_addr,a0,L
         00006100 00000000! 
    1162 00006120     8402          move    *a0,a2,W
    1163 00006130     1ea2          btst    B_SDAV,a2
    1164 00006140     ca0e          jrz     dsp_lp1_exit
    1165 00006150     3d61          dsjs    a1,dsp_loop1
    1166 00006160     09ea          movi    DSP,a10
         00006170 00019880' 
    1167 00006190     1820          movk    1,a0
    1168 000061a0     4c0b          move    a0,a11
    1169 000061b0     102b          inc     a11
    1170 000061c0                   FCALL   CHIPOUT,b5
    1171 00006200     1820          movk    1,a0
    1172 00006210     c000          jruc    dspcheck_done
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

         00006220     0091  
    1173 00006230           dsp_lp1_exit
    1174 00006230     07a0          move    @_sound_addr,a0,L
         00006240 00000000! 
    1175 00006260     8400          move    *a0,a0,W
    1176 00006270     0b80          andi    0ffh,a0
         00006280 ffffff00  
    1177 000062a0     0b40          cmpi    079h,a0
         000062b0     ff86  
    1178 000062c0     ca0c          jrz     dsp_next_byte
    1179 000062d0     09ea          movi    DSP,a10
         000062e0 00019880' 
    1180 00006300     1820          movk    1,a0
    1181 00006310     4c0b          move    a0,a11
    1182 00006320     102b          inc     a11
    1183 00006330                   FCALL   CHIPOUT,b5
    1184 00006370     1820          movk    1,a0
    1185 00006380     c07b          jruc    dspcheck_done
    1186 00006390           dsp_next_byte
    1187 00006390     09e1          movi    10000000,a1
         000063a0 00989680  
    1188 000063c0           dsp_loop2
    1189 000063c0     07a0          move    @_watchdog_addr,a0,L
         000063d0 00000000! 
    1190 000063f0     8000          move    a0,*a0,W
    1191 00006400     07a0          move    @_soundirq_addr,a0,L
         00006410 00000000! 
    1192 00006430     8402          move    *a0,a2,W
    1193 00006440     1ea2          btst    B_SDAV,a2
    1194 00006450     ca0d          jrz     dsp_lp2_exit
    1195 00006460     3d61          dsjs    a1,dsp_loop2
    1196 00006470     09ea          movi    DSP,a10
         00006480 00019880' 
    1197 000064a0     1820          movk    1,a0
    1198 000064b0     4c0b          move    a0,a11
    1199 000064c0     102b          inc     a11
    1200 000064d0                   FCALL   CHIPOUT,b5
    1201 00006510     1820          movk    1,a0
    1202 00006520     c061          jruc    dspcheck_done
    1203 00006530           dsp_lp2_exit
    1204 00006530     09ea          movi    DSP,a10
         00006540 00019880' 
    1205 00006560     5600          clr     a0
    1206 00006570     4c0b          move    a0,a11
    1207 00006580     102b          inc     a11
    1208 00006590                   FCALL   CHIPOUT,b5
    1209 000065d0     07a0          move    @_sound_addr,a0,L
         000065e0 00000000! 
    1210 00006600     8400          move    *a0,a0,W
    1211 00006610     0b80          andi    0ffh,a0
         00006620 ffffff00  
    1212 00006640     4c0e          move    a0,a14
    1213 00006650     5600          clr     a0
    1214 00006660     4c00          move    a0,a0
    1215 00006670     ca02          jrz     dsp_ok
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

    1216 00006680     1820          movk    1,a0
    1217 00006690     c04a          jruc    dspcheck_done
    1218 000066a0           dsp_ok
    1219 000066a0     5600          clr     a0
    1220 000066b0     0780          move    a0,@_snd_status,L
         000066c0 000000c0- 
    1221 000066e0     0bee          subi    2,a14
         000066f0     fffd  
    1222 00006700     058e          move    a14,@_snd_diag_code,W
         00006710 00000120- 
    1223 00006730     57ce          clr     a14
    1224 00006740     058e          move    a14,@_snd_chip_count,W
         00006750 00000130- 
    1225 00006770     09ec          movi    SROMTAB,a12,L
         00006780 0001a200' 
    1226 000067a0           snd_romok_loop
    1227 000067a0     978a          move    *a12+,a10,L
    1228 000067b0     ca1c          jrz     sndrom_done
    1229 000067c0     05ae          move    @_snd_chip_count,a14,W
         000067d0 00000130- 
    1230 000067f0     05ab          move    @_snd_diag_code,a11,W
         00006800 00000120- 
    1231 00006820     496e          cmp     a11,a14
    1232 00006830     cb05          jrnz    sndchip_ok
    1233 00006840     184b          movk    2,a11
    1234 00006850     078b          move    a11,@_snd_status,L
         00006860 000000c0- 
    1235 00006880     c001          jruc    snd_chip_out
    1236 00006890           sndchip_ok
    1237 00006890     182b          movk    1,a11
    1238 000068a0           snd_chip_out
    1239 000068a0     102e          addk    1,a14
    1240 000068b0     058e          move    a14,@_snd_chip_count,W
         000068c0 00000130- 
    1241 000068e0                   FCALL   CHIPOUT,b5
    1242 00006920     07ab          move    @_snd_status,a11,L
         00006930 000000c0- 
    1243 00006950     cae4          jrz     snd_romok_loop
    1244 00006960     1820          movk    1,a0
    1245 00006970     c01c          jruc    dspcheck_done
    1246 00006980           sndrom_done
    1247 00006980     09ec          movi    SNDRAMTAB,a12,L
         00006990 0001a2a0' 
    1248 000069b0           snd_ramok_loop
    1249 000069b0     978a          move    *a12+,a10,L
    1250 000069c0     ca16          jrz     sndram_done
    1251 000069d0     05ae          move    @_snd_diag_code,a14,W
         000069e0 00000120- 
    1252 00006a00     0b4e          cmpi    8,a14
         00006a10     fff7  
    1253 00006a20     cb05          jrnz    sndram_ok
    1254 00006a30     184b          movk    2,a11
    1255 00006a40     078b          move    a11,@_snd_status,L
         00006a50 000000c0- 
    1256 00006a70     c001          jruc    snd_ram_out
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1257 00006a80           sndram_ok
    1258 00006a80     182b          movk    1,a11
    1259 00006a90           snd_ram_out
    1260 00006a90                   FCALL   CHIPOUT,b5
    1261 00006ad0     07ab          move    @_snd_status,a11,L
         00006ae0 000000c0- 
    1262 00006b00     caea          jrz     snd_ramok_loop
    1263 00006b10     1820          movk    1,a0
    1264 00006b20     c001          jruc    dspcheck_done
    1265 00006b30           sndram_done
    1266 00006b30     5600          clr     a0
    1267 00006b40           dspcheck_done
    1268 00006b40     09e1          movi    1000000,a1
         00006b50 000f4240  
    1269 00006b70           dspcheck_wait_exit_loop
    1270 00006b70     07a2          move    @_watchdog_addr,a2,L
         00006b80 00000000! 
    1271 00006ba0     8042          move    a2,*a2,W
    1272 00006bb0     3ca1          dsjs    a1,dspcheck_wait_exit_loop
    1273 00006bc0     07b6          move    @_b6_save,b6,L
         00006bd0 000000e0- 
    1274 00006bf0                   FRET    b6
    1275                    
    1276                    
    1277              00b4  CPUT_X  .EQU    180     ;TEXT X POSITION
    1278              0076  CPUT_Y1 .EQU    118     ;TEXT ROW 1 Y POSITION
    1279              0082  CPUT_Y2 .EQU    130     ;TEXT ROW 2 Y POSITION
    1280              008e  CPUT_Y3 .EQU    142     ;TEXT ROW 3 Y POSITION
    1281          002200d1  CPUT_CLRS .EQU  [CPUT_Y3-CPUT_Y1+10,389-CPUT_X]
    1282                    
    1283          007600b4  CPUT_CLR .EQU   [CPUT_Y1,CPUT_X]        ;CLEAR START
    1284                    
    1285 00006c00           CPUTEST:
    1286 00006c00     4de1          move    sp,a1
    1287 00006c10     09ef          movi    STCKST,sp               ; Set up a temporary stack
         00006c20 013f73e0  
    1288 00006c40     0d5f          calla   InitAddresses           ; Reset the I/O Addresses
         00006c50 00000000! 
    1289 00006c70     4c2f          move    a1,sp
    1290 00006c80     07a0          move    @_watchdog_addr,a0,L
         00006c90 00000000! 
    1291 00006cb0     8000          move    a0,*a0
    1292 00006cc0                   FCALL   INITCOLR,B5             ;HEY! IT LOOKS BETTER THIS WAY
    1293 00006d00                   FCALL   DSCRCLR,B6              ;BLOW THE SCREEN OR IT LOOKS TOO UGLY
    1294                    
    1295 00006d40     5610          CLR     B0
    1296                    
    1297                            .if     WWFUNIT
    1298 00006d50     09ed          movi    SYSCINIT,a13
         00006d60 0000987f  
    1299                            .else
    1300                            MOVI    0FFFCH,A13
    1301                            .endif
    1302                    
    1303 00006d80     058d          MOVE    A13,@SYSCTRL,W          ;MAKE SURE WE'RE WRITING TO BIT MAP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

         00006d90 01b00000  
    1304 00006db0     09ee          MOVI    VRAMCHIPS,A14           ;VERIFY BIT MAP
         00006dc0 0001aca0' 
    1305 00006de0                   FCALL   RAMCHECK,B5
    1306                    
    1307                    
    1308                    
    1309                            .if     WWFUNIT
    1310                    
    1311 00006e20     09ed          movi    SYSCINIT,a13
         00006e30 0000987f  
    1312 00006e50     0b8d          andni   PALENB,a13
         00006e60 00000800  
    1313                    
    1314                            .else
    1315                            MOVI    PAL_SELECT,A13
    1316                            .endif
    1317                    
    1318 00006e80     058d          MOVE    A13,@SYSCTRL,W
         00006e90 01b00000  
    1319 00006eb0     09ee          MOVI    PALCHIPS,A14            ;VERIFY OBJECT PALETTE RAM
         00006ec0 0001b020' 
    1320 00006ee0                   FCALL   RAMCHECK,B5
    1321 00006f20     4e1c          MOVE    B0,A12
    1322                            
    1323                    
    1324                    
    1325                            .if     WWFUNIT
    1326 00006f30     09ed          movi    SYSCINIT,a13
         00006f40 0000987f  
    1327                            .else
    1328                            MOVI    0FFFCH,A13
    1329                            .endif
    1330                    
    1331 00006f60     058d          MOVE    A13,@SYSCTRL,W
         00006f70 01b00000  
    1332 00006f90                   FCALL   INITCOLR,B5             ;RELOAD THE COLORS
    1333 00006fd0                   FCALL   DSCRCLR,B6
    1334                    
    1335 00007010                   FCALL   CPUDRAW,B5              ;SHOW THE CPU
    1336 00007050     09ea          MOVI    CPU,A10                 ;WE GOT THIS FAR, CPU MUST BE OK
         00007060 00017320' 
    1337 00007080     09cb          MOVI    1,A11
         00007090     0001  
    1338 000070a0                   FCALL   CHIPOUT,B5
    1339                    
    1340 000070e0     09e9          MOVI    VRAMTAB,A9
         000070f0 00019be0' 
    1341 00007110                   FCALL   CHIPTABLE,B5            ;PLOT OUT THE CHIP TABLE
    1342                    
    1343 00007150     4d8c          MOVE    A12,A12
    1344 00007160     ca0f          JRZ     PSRAMCK
    1345 00007170           PBADRAM
    1346 00007170     09e0          MOVI    RAMBADMESS,A0
         00007180 00008e50' 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1347 000071a0     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         000071b0 007600b4  
    1348 000071d0     5642          CLR     A2
    1349 000071e0     09c3          MOVI    COLOR_RED,A3
         000071f0     0303  
    1350 00007200                   FCALL   STRING,B6
    1351 00007240     c000          JRUC    PCPUBAD
         00007250     0155  
    1352                    
    1353 00007260           PSRAMCK
    1354 00007260     09e0          MOVI    SRAMCHECK,A0
         00007270 0001b280' 
    1355 00007290     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         000072a0 007600b4  
    1356 000072c0     5642          CLR     A2
    1357 000072d0     09c3          MOVI    COLOR_YELLOW,A3
         000072e0     0505  
    1358 000072f0                   FCALL   STRING,B6
    1359                    
    1360 00007330     5610          CLR     B0
    1361 00007340     09ee          MOVI    SRAMCHIPS,A14           ;VERIFY SCRATCH RAMS
         00007350 0001b330' 
    1362 00007370                   FCALL   RAMCHECK,B5
    1363 000073b0     4e1c          MOVE    B0,A12
    1364 000073c0     4de1          move    sp,a1
    1365 000073d0     09ef          movi    STCKST,sp               ; Set up a temporary stack
         000073e0 013f73e0  
    1366 00007400     0d5f          calla   InitAddresses           ; Reset the I/O Addresses
         00007410 00000000! 
    1367 00007430     4c2f          move    a1,sp
    1368                            
    1369 00007440     09e0          MOVI    CPUT_CLR,A0
         00007450 007600b4  
    1370 00007470     09e1          MOVI    CPUT_CLRS,A1
         00007480 002200d1  
    1371 000074a0     09c2          MOVI    COLOR_BLACK,A2
         000074b0     1414  
    1372 000074c0                   FCALL   RECTANGLE,B6
    1373                    
    1374 00007500     4d8c          MOVE    A12,A12
    1375 00007510     cbc5          JRNZ    PBADRAM
    1376 00007520           PROMCK
    1377 00007520     09e0          MOVI    ROMCMESS,A0
         00007530 00008d70' 
    1378 00007550     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00007560 007600b4  
    1379 00007580     5642          CLR     A2
    1380 00007590     09c3          MOVI    COLOR_YELLOW,A3
         000075a0     0505  
    1381 000075b0                   FCALL   STRING,B6
    1382                    
    1383 000075f0     09e0          MOVI    CPUEXIT1_MESS,A0
         00007600 00009210' 
    1384 00007620     09e1          MOVI    [CPUT_Y2,CPUT_X],A1
         00007630 008200b4  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

    1385 00007650     5642          CLR     A2
    1386 00007660     09c3          MOVI    COLOR_YELLOW,A3
         00007670     0505  
    1387 00007680                   FCALL   STRING,B6
    1388                    
    1389 000076c0     09e0          MOVI    CPUEXIT2_MESS,A0
         000076d0 000092a0' 
    1390 000076f0     09e1          MOVI    [CPUT_Y3,CPUT_X],A1
         00007700 008e00b4  
    1391 00007720     5642          CLR     A2
    1392 00007730     09c3          MOVI    COLOR_YELLOW,A3
         00007740     0505  
    1393 00007750                   FCALL   STRING,B6
    1394                    
    1395 00007790     5610          CLR     B0                      ;KEEP THE STATS HERE
    1396                    
    1397 000077a0     09ee          MOVI    PROMCHIPS,A14
         000077b0 0001c550' 
    1398 000077d0                   FCALL   ROMCHECK,B5
    1399 00007810     cb2f          jrnz    PROMABORT
    1400                    
    1401 00007820     09ee          MOVI    IROMCHIPS_8MEG,A14
         00007830 0001c6d0' 
    1402 00007850                   FCALL   ROMCHECK,B5
    1403 00007890     cb27          jrnz    PROMABORT
    1404 000078a0     09ee          movi    SYSCINIT,a14
         000078b0 0000987f  
    1405 000078d0     0bae          ori     0100h,a14
         000078e0 00000100  
    1406 00007900     058e          move    a14,@SYSCTRL,W          ; Image IROM bank 1
         00007910 01b00000  
    1407 00007930     09ee          movi    IROMCHIPS1_8MEG,a14
         00007940 0001cbf0' 
    1408 00007960                   FCALL   ROMCHECK,b5
    1409 000079a0     cb16          jrnz    PROMABORT
    1410                    
    1411 000079b0     4e1c          move    b0,a12
    1412 000079c0     09e0          movi    CPUT_CLR,a0
         000079d0 007600b4  
    1413 000079f0     09e1          movi    CPUT_CLRS,a1
         00007a00 002200d1  
    1414 00007a20     09c2          movi    COLOR_BLACK,a2
         00007a30     1414  
    1415 00007a40                   FCALL   RECTANGLE,b6
    1416 00007a80     09ee          movi    SYSCINIT,a14
         00007a90 0000987f  
    1417 00007ab0     058e          move    a14,@SYSCTRL,W          ; Back to IROM bank 0
         00007ac0 01b00000  
    1418 00007ae0     4d8c          move    a12,a12
    1419 00007af0     cb00          jrnz    PBADROM
         00007b00     00b1  
    1420 00007b10           PROMABORT
    1421 00007b10     09ee          movi    SYSCINIT,a14
         00007b20 0000987f  
    1422 00007b40     058e          move    a14,@SYSCTRL,W          ; Back to IROM bank 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

         00007b50 01b00000  
    1423 00007b70     4e1c          MOVE    B0,A12
    1424 00007b80     09e0          MOVI    CPUT_CLR,A0
         00007b90 007600b4  
    1425 00007bb0     09e1          MOVI    CPUT_CLRS,A1
         00007bc0 002200d1  
    1426 00007be0     09c2          MOVI    COLOR_BLACK,A2
         00007bf0     1414  
    1427 00007c00                   FCALL   RECTANGLE,B6
    1428                    
    1429 00007c40     4d8c          MOVE    A12,A12
    1430                    
    1431 00007c50           PDMACK
    1432 00007c50     09e0          MOVI    DMACMESS,A0
         00007c60 00008c50' 
    1433 00007c80     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00007c90 007600b4  
    1434 00007cb0     5642          CLR     A2
    1435 00007cc0     09c3          MOVI    COLOR_YELLOW,A3
         00007cd0     0505  
    1436 00007ce0                   FCALL   STRING,B6
    1437                    
    1438 00007d20                   FCALL   DMACHECK,B5             ;CHECK THE DMA
    1439 00007d60     09ea          MOVI    DMA,A10
         00007d70 000173f0' 
    1440 00007d90     4c0b          MOVE    A0,A11
    1441 00007da0     4c0c          MOVE    A0,A12
    1442 00007db0     102b          INC     A11                     ;GREEN/RED
    1443 00007dc0                   FCALL   CHIPOUT,B5
    1444                    
    1445 00007e00     09e0          MOVI    CPUT_CLR,A0
         00007e10 007600b4  
    1446 00007e30     09e1          MOVI    CPUT_CLRS,A1
         00007e40 002200d1  
    1447 00007e60     09c2          MOVI    COLOR_BLACK,A2
         00007e70     1414  
    1448 00007e80                   FCALL   RECTANGLE,B6
    1449                    
    1450 00007ec0     4d8c          MOVE    A12,A12
    1451 00007ed0     cb66          jrnz    PBADDMA
    1452 00007ee0     09e0          movi    SNDCMESS,a0
         00007ef0 00008ec0' 
    1453 00007f10     09e1          movi    [CPUT_Y1,CPUT_X],a1
         00007f20 007600b4  
    1454 00007f40     5642          clr     a2
    1455 00007f50     09c3          movi    COLOR_YELLOW,a3
         00007f60     0505  
    1456 00007f70                   FCALL   STRING,b6
    1457 00007fb0                   FCALL   SNDCHECK,b6
    1458 00007ff0     4c0c          move    a0,a12
    1459 00008000     09e0          movi    CPUT_CLR,a0
         00008010 007600b4  
    1460 00008030     09e1          movi    CPUT_CLRS,a1
         00008040 002200d1  
    1461 00008060     09c2          movi    COLOR_BLACK,a2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

         00008070     1414  
    1462 00008080                   FCALL   RECTANGLE,b6
    1463 000080c0     4d8c          move    a12,a12
    1464 000080d0     cb38          jrnz    PBADSND
    1465                    
    1466 000080e0     09e0          movi    PICCMESS,a0
         000080f0 00009010' 
    1467 00008110     09e1          movi    [CPUT_Y1,CPUT_X],a1
         00008120 007600b4  
    1468 00008140     5642          clr     a2
    1469 00008150     09c3          movi    COLOR_YELLOW,a3
         00008160     0505  
    1470 00008170                   FCALL   STRING,b6
    1471 000081b0                   FCALL   PICCHECK,b5
    1472 000081f0     09ea          movi    PIC,a10
         00008200 00019130' 
    1473 00008220     4c0b          move    a0,a11
    1474 00008230     4c0c          move    a0,a12
    1475 00008240     102b          inc     a11
    1476 00008250                   FCALL   CHIPOUT,b5
    1477 00008290     09e0          movi    CPUT_CLR,a0
         000082a0 007600b4  
    1478 000082c0     09e1          movi    CPUT_CLRS,a1
         000082d0 002200d1  
    1479 000082f0     09c2          movi    COLOR_BLACK,a2
         00008300     1414  
    1480 00008310                   FCALL   RECTANGLE,b6
    1481 00008350     4d8c          move    a12,a12
    1482 00008360     ca00          JRZ     PCPUGOOD
         00008370     0088  
    1483 00008380     09e0          movi    PICBADMESS,a0
         00008390 000090a0' 
    1484 000083b0     09e1          movi    [CPUT_Y1,CPUT_X],a1
         000083c0 007600b4  
    1485 000083e0     5642          clr     a2
    1486 000083f0     09c3          movi    COLOR_RED,a3
         00008400     0303  
    1487 00008410                   FCALL   STRING,b6
    1488 00008450     c035          jruc    PCPUBAD
    1489 00008460           PBADSND
    1490 00008460     09e0          movi    SNDBADMESS,a0
         00008470 00008f80' 
    1491 00008490     09e1          movi    [CPUT_Y1,CPUT_X],a1
         000084a0 007600b4  
    1492 000084c0     5642          clr     a2
    1493 000084d0     09c3          movi    COLOR_RED,a3
         000084e0     0303  
    1494 000084f0                   FCALL   STRING,b6
    1495 00008530     c027          jruc    PCPUBAD
    1496 00008540           PBADDMA
    1497 00008540     09e0          MOVI    DMABADMESS,A0
         00008550 00008cd0' 
    1498 00008570     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00008580 007600b4  
    1499 000085a0     5642          CLR     A2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

    1500 000085b0     09c3          MOVI    COLOR_RED,A3
         000085c0     0303  
    1501 000085d0                   FCALL   STRING,B6
    1502 00008610     c019          JRUC    PCPUBAD
    1503 00008620           PBADROM
    1504 00008620     09e0          MOVI    CPUT_CLR,A0
         00008630 007600b4  
    1505 00008650     09e1          MOVI    CPUT_CLRS,A1
         00008660 002200d1  
    1506 00008680     09c2          MOVI    COLOR_BLACK,A2
         00008690     1414  
    1507 000086a0                   FCALL   RECTANGLE,B6
    1508 000086e0     09e0          MOVI    ROMBADMESS,A0
         000086f0 00008de0' 
    1509 00008710     09e1          MOVI    [CPUT_Y1,CPUT_X],A1
         00008720 007600b4  
    1510 00008740     5642          CLR     A2
    1511 00008750     09c3          MOVI    COLOR_RED,A3
         00008760     0303  
    1512 00008770                   FCALL   STRING,B6
    1513                    
    1514 000087b0           PCPUBAD
    1515 000087b0     09e0          MOVI    CPUPAUSE,A0
         000087c0 00009180' 
    1516 000087e0     09e1          MOVI    [CPUT_Y2,CPUT_X],A1
         000087f0 008200b4  
    1517 00008810     5642          CLR     A2
    1518 00008820     09c3          MOVI    COLOR_RED,A3
         00008830     0303  
    1519 00008840                   FCALL   STRING,B6
    1520                    
    1521 00008880           PCPUWAIT
    1522 00008880     07a0          move    @_watchdog_addr,a0,L
         00008890 00000000! 
    1523 000088b0     8000          move    a0,*a0
    1524                    
    1525                            .IF     TUNIT
    1526 000088c0     09c0          MOVI    CPU_ERROR_SND,A0
         000088d0     0203  
    1527 000088e0     07a3          move    @_sound_addr,a3,L
         000088f0 00000000! 
    1528 00008910     8003          move    a0,*a3,W
    1529                            .ELSE
    1530                            MOVI    0FD00H|CPU_ERROR_SND,A0
    1531                            move    @_sound_addr,a3,L
    1532                            move    a0,*a3,W
    1533                            MOVI    0FF00H|CPU_ERROR_SND,A0
    1534                            move    @_sound_addr,a3,L
    1535                            move    a0,*a3,W
    1536                            .ENDIF
    1537                    
    1538 00008920     4fa5          MOVE    A13,B5
    1539 00008930                   PAUSE   10000,B6
    1540 00008980                   FCALL   fudge_switches_diag,B6
    1541 000089c0     0b80          andi    BUTTONS|START_BITS,a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

         000089d0 f9db0f0f  
    1542 000089f0     4e01          MOVE    A0,B1
    1543 00008a00     09d0          MOVI    -1,B0                   ; ASSUME DON'T TIMEOUT
         00008a10     ffff  
    1544 00008a20     0b6f          CMPI    DIAGSP,SP
         00008a30 ffffba6f' 
    1545 00008a50     ca07          JRZ     PCPUTMP1
    1546 00008a60     0b6f          CMPI    BURNSP,SP
         00008a70 ffffbc5f' 
    1547 00008a90     ca03          JRZ     PCPUTMP1
    1548 00008aa0     09f0          MOVI    200000H,B0
         00008ab0 00200000  
    1549 00008ad0           PCPUTMP1
    1550 00008ad0     07a0          move    @_watchdog_addr,a0,L
         00008ae0 00000000! 
    1551 00008b00     8000          move    a0,*a0
    1552 00008b10     4c10          MOVE    B0,B0
    1553 00008b20     ce02          JRN     PCPUNOTIMEOUT
    1554 00008b30     1430          DEC     B0
    1555 00008b40     ca0d          JRZ     PCPURET                 ; TIMEOUT HERE
    1556 00008b50           PCPUNOTIMEOUT
    1557 00008b50                   FCALL   fudge_switches_diag,B6
    1558 00008b90     0b80          andi    BUTTONS|START_BITS,a0
         00008ba0 f9db0f0f  
    1559 00008bc0     4e31          MOVE    B1,A1
    1560 00008bd0     4801          CMP     A0,A1
    1561 00008be0     cb03          JRNZ    PCPURET
    1562 00008bf0     c0ed          JRUC    PCPUTMP1
    1563 00008c00           PCPUGOOD
    1564 00008c00     5600          CLR     A0
    1565 00008c10     c001          JRUC    PCPUREALRET
    1566 00008c20           PCPURET
    1567 00008c20     1820          MOVK    1,A0
    1568 00008c30           PCPUREALRET
    1569 00008c30     4c00          MOVE    A0,A0
    1570 00008c40                   FRET    SP
    1571                    
    1572 00008c50           DMACMESS
    1573 00008c50       43          .STRING "CHECKING CUSTOM",0
    1574 00008cd0                   .EVEN
    1575 00008cd0           DMABADMESS
    1576 00008cd0       43          .STRING "CUSTOM CHIP U33 BAD",0
    1577 00008d70                   .EVEN
    1578                    
    1579 00008d70           ROMCMESS
    1580 00008d70       43          .STRING "CHECKING ROMS",0
    1581 00008de0                   .EVEN
    1582 00008de0           ROMBADMESS
    1583 00008de0       52          .STRING "ROM CHIPS BAD",0
    1584 00008e50                   .EVEN
    1585                    
    1586 00008e50           RAMBADMESS
    1587 00008e50       52          .STRING "RAM CHIPS BAD",0
    1588 00008ec0                   .EVEN
    1589                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

    1590 00008ec0           SNDCMESS
    1591 00008ec0       43          .string "CHECKING SOUND SECTION",0
    1592 00008f80                   .even
    1593 00008f80           SNDBADMESS
    1594 00008f80       53          .string "SOUND SECTION BAD",0
    1595 00009010                   .even
    1596 00009010           PICCMESS
    1597 00009010       43          .string "CHECKING PIC CHIP",0
    1598 000090a0                   .even
    1599 000090a0           PICBADMESS
    1600 000090a0       50          .string "PIC CHIP BAD",0
    1601 00009110                   .even
    1602                    
    1603 00009110           CPUGOOD
    1604 00009110       43          .STRING "CPU BOARD OK",0
    1605 00009180                   .EVEN
    1606                    
    1607 00009180           CPUPAUSE
    1608 00009180       50          .STRING "PRESS ANY BUTTON",0
    1609 00009210                   .EVEN
    1610                    
    1611 00009210           CPUEXIT1_MESS
    1612 00009210       48          .STRING "HOLD START BUTTON",0
    1613 000092a0                   .EVEN
    1614 000092a0           CPUEXIT2_MESS
    1615 000092a0       54          .STRING "TO EXIT.",0
    1616 000092f0                   .EVEN
    1617                    
    1618                    
    1619                    
    1620 000092f0           CPUDRAW:
    1621 000092f0     09e9          MOVI    CPU_VECS,A9             ; POINT AT VECTOR TABLE
         00009300 000165e0' 
    1622 00009320           CPUDLP1
    1623 00009320     9522          MOVE    *A9+,A2,W               ; GET COLOR
    1624 00009330     ca07          JRZ     CPUD1
    1625 00009340     9720          MOVE    *A9+,A0,L               ; START POINT
    1626 00009350     9721          MOVE    *A9+,A1,L               ; END POINT
    1627 00009360                   FCALL   HVLINE,B6
    1628 000093a0     c0f7          JRUC    CPUDLP1
    1629 000093b0           CPUD1
    1630 000093b0     4ebd          MOVE    B5,A13
    1631 000093c0                   FCALL   CHIPPLOT,B5             ; PLOT ALL THE CHIPS
    1632 00009400     09e0          MOVI    BOARDSTRING,A0
         00009410 00009630' 
    1633 00009430     05a1          move    @DIPSWITCH,a1,W
         00009440 01860020  
    1634 00009460     0b81          andi    DP4MEG_DIAG,a1
         00009470 fffffffb  
    1635 00009490     ca03          jrz     bdtype_4meg
    1636 000094a0     09e0          movi    BOARDSTRING1,a0
         000094b0 00009630' 
    1637 000094d0           bdtype_4meg:
    1638                    
    1639 000094d0     09e1          MOVI    [25,270],A1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

         000094e0 0019010e  
    1640 00009500     5642          CLR     A2
    1641 00009510     09c3          MOVI    COLOR_WHITE,A3
         00009520     0202  
    1642 00009530                   FCALL   STRING,B6
    1643 00009570     09e0          MOVI    BOARDSTRING2,A0
         00009580 000096a0' 
    1644 000095a0     09e1          MOVI    [37,274],A1
         000095b0 00250112  
    1645 000095d0                   FCALL   STRING,B6
    1646 00009610     4fa5          MOVE    A13,B5
    1647 00009620                   FRET    B5
    1648                    
    1649 00009630           BOARDSTRING     
    1650 00009630           BOARDSTRING1:
    1651 00009630       41          .string "A-18968-40030",0
    1652 000096a0                   .EVEN
    1653                    
    1654 000096a0           BOARDSTRING2
    1655 000096a0       57          .STRING "WRESTLEMANIA",0
    1656 00009710                   .EVEN
    1657                    
    1658                    
    1659 00009710           CHIPTABLE:
    1660 00009710     4ebe          MOVE    B5,A14
    1661 00009720           CTABLOOP
    1662 00009720     972a          MOVE    *A9+,A10,L              ; GET POINTER TO CHIP RECORD
    1663 00009730     ca0b          JRZ     CTABDONE
    1664 00009740     182b          MOVK    1,A11
    1665 00009750     b540          MOVE    *A10(CMNUM),A0,W        ; GET THE BIT NUMBER
         00009760     0000  
    1666 00009770     4a0c          BTST    A0,A12                  ; CHECK BIT NUMBER
    1667 00009780     ca01          JRZ     CTABL2
    1668 00009790     184b          MOVK    2,A11
    1669 000097a0           CTABL2
    1670 000097a0                   FCALL   CHIPOUT,B5
    1671 000097e0     c0f3          JRUC    CTABLOOP
    1672                    
    1673 000097f0           CTABDONE
    1674 000097f0     4fc5          MOVE    A14,B5
    1675 00009800                   FRET    B5
    1676                            
    1677                    
    1678 00009810           CHIPPLOT:
    1679 00009810     4ebe          MOVE    B5,A14
    1680 00009820     09ea          MOVI    CPU_CHIPS,A10
         00009830 00016b00' 
    1681 00009850           CPPLOTLOOP
    1682 00009850     576b          CLR     A11
    1683 00009860     8740          MOVE    *A10,A0,L
    1684 00009870     ca07          JRZ     CPPLOTDONE
    1685 00009880                   FCALL   CHIPOUT,B5
    1686 000098c0     0b0a          ADDI    CMEND,A10
         000098d0     00d0  
    1687 000098e0     c0f6          JRUC    CPPLOTLOOP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

    1688                    
    1689 000098f0           CPPLOTDONE
    1690 000098f0     4fc5          MOVE    A14,B5
    1691 00009900                   FRET    B5
    1692                            
    1693                                    
    1694 00009910           CHIPOUT:
    1695 00009910     b745          MOVE    *A10(CMLOC),A5,L        ; CHIP OUTLINE
         00009920     0010  
    1696 00009930     4ca6          MOVE    A5,A6
    1697 00009940     4ca7          MOVE    A5,A7
    1698 00009950     4ca8          MOVE    A5,A8
    1699 00009960     b540          MOVE    *A10(CMXSIZE),A0,W
         00009970     0030  
    1700 00009980     4006          ADD     A0,A6
    1701 00009990     4007          ADD     A0,A7
    1702 000099a0     b540          MOVE    *A10(CMYSIZE),A0,W
         000099b0     0040  
    1703 000099c0     2600          SLL     16,A0
    1704 000099d0     4007          ADD     A0,A7
    1705 000099e0     4008          ADD     A0,A8
    1706 000099f0     4ca0          MOVE    A5,A0
    1707 00009a00     4cc1          MOVE    A6,A1
    1708 00009a10     09c2          MOVI    COLOR_WHITE,A2
         00009a20     0202  
    1709 00009a30                   FCALL   HVLINE,B6
    1710 00009a70     4cc0          MOVE    A6,A0
    1711 00009a80     4ce1          MOVE    A7,A1
    1712 00009a90     0b21          ADDI    [1,0],A1
         00009aa0 00010000  
    1713 00009ac0     09c2          MOVI    COLOR_WHITE,A2
         00009ad0     0202  
    1714 00009ae0                   FCALL   HVLINE,B6
    1715 00009b20     4d00          MOVE    A8,A0
    1716 00009b30     4ce1          MOVE    A7,A1
    1717 00009b40     09c2          MOVI    COLOR_WHITE,A2
         00009b50     0202  
    1718 00009b60                   FCALL   HVLINE,B6
    1719 00009ba0     4ca0          MOVE    A5,A0
    1720 00009bb0     4d01          MOVE    A8,A1
    1721 00009bc0     09c2          MOVI    COLOR_WHITE,A2
         00009bd0     0202  
    1722 00009be0                   FCALL   HVLINE,B6
    1723 00009c20     b540          MOVE    *A10(CMSTUFFED),A0,W    ; CHECK FOR STUFFED
         00009c30     00c0  
    1724 00009c40     cb01          JRNZ    CONOSTUF
    1725 00009c50     186b          MOVK    3,A11                   ; WANT IT GREY, DUDE
    1726                    
    1727 00009c60           CONOSTUF
    1728 00009c60     4d6b          MOVE    A11,A11                 ; CHECK FOR FILLING THE CHIP
    1729 00009c70     ca14          JRZ     CONOFILL
    1730 00009c80     b740          MOVE    *A10(CMLOC),A0,L
         00009c90     0010  
    1731 00009ca0     0b20          ADDI    00010001H,A0
         00009cb0 00010001  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1732 00009cd0     b741          MOVE    *A10(CMSIZE),A1,L
         00009ce0     0030  
    1733 00009cf0     0d01          SUBI    00010001H,A1            ; GET INTERNAL AREA
         00009d00 fffefffe  
    1734 00009d20     4d62          MOVE    A11,A2
    1735 00009d30     2482          SLL     4,A2
    1736 00009d40     0b22          ADDI    CHIPCOLORS,A2
         00009d50 00009f90' 
    1737 00009d70     8442          MOVE    *A2,A2,W                ; GET ME A COLOR
    1738 00009d80                   FCALL   RECTANGLE,B6
    1739 00009dc0           CONOFILL
    1740 00009dc0     b741          MOVE    *A10(CMPINLOC),A1,L     ; PIN LOCATION
         00009dd0     00a0  
    1741 00009de0     4ca0          MOVE    A5,A0
    1742 00009df0     4020          ADD     A1,A0
    1743 00009e00     09c1          MOVI    COLOR_WHITE,A1
         00009e10     0202  
    1744 00009e20                   FCALL   POINT,B6
    1745                    
    1746 00009e60     b740          MOVE    *A10(CMSTRING),A0,L     ; CHIP TEXT
         00009e70     0070  
    1747 00009e80     4ca1          MOVE    A5,A1
    1748 00009e90     b742          MOVE    *A10(CMOFFSET),A2,L
         00009ea0     0050  
    1749 00009eb0     4041          ADD     A2,A1
    1750 00009ec0     b542          MOVE    *A10(CMDIR),A2,W
         00009ed0     0090  
    1751 00009ee0     09c3          MOVI    COLOR_BLACK,A3
         00009ef0     1414  
    1752 00009f00     4d6b          MOVE    A11,A11                 ; CHECK FOR COLOR
    1753 00009f10     cb02          JRNZ    COBLACK
    1754 00009f20     09c3          MOVI    COLOR_WHITE,A3
         00009f30     0202  
    1755 00009f40           COBLACK
    1756 00009f40                   FCALL   STRING,B6
    1757 00009f80                   FRET    B5
    1758                    
    1759 00009f90           CHIPCOLORS:
    1760 00009f90     1414          .WORD   COLOR_BLACK
    1761 00009fa0     0606          .WORD   COLOR_GREEN
    1762 00009fb0     0303          .WORD   COLOR_RED
    1763 00009fc0     0101          .WORD   COLOR_GREY
    1764                    
    1765 00009fd0           DMACHECK
    1766 00009fd0     0570          setf    16,1,0
    1767 00009fe0     07a0          move    @_watchdog_addr,a0,L
         00009ff0 00000000! 
    1768 0000a010     8000          move    a0,*a0
    1769 0000a020     57ce          CLR     A14
    1770 0000a030     058e          MOVE    A14,@DMACTRL,W
         0000a040 01a00010  
    1771 0000a060     058e          MOVE    A14,@DMACTRL,W
         0000a070 01a00010  
    1772                    
    1773 0000a090     1a0e          MOVK    DMACF4,A14
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1774 0000a0a0     058e          MOVE    A14,@DMACONF,W          ;ADJUST WINDOW RIGHT/LEFT BORDER
         0000a0b0 01a000f0  
    1775 0000a0d0     09ee          MOVI    [511,0],A14
         0000a0e0 01ff0000  
    1776 0000a100     078e          MOVE    A14,@DMAWINDOW,L        ;OPEN LEFT TO RIGHT
         0000a110 01a000c0  
    1777 0000a130     09ce          MOVI    DMAWIN|DMACF4,A14
         0000a140     0030  
    1778 0000a150     058e          MOVE    A14,@DMACONF,W          ;ADJUST WINDOW RIGHT/LEFT BORDER
         0000a160 01a000f0  
    1779 0000a180     09ee          MOVI    [511,0],A14
         0000a190 01ff0000  
    1780 0000a1b0     078e          MOVE    A14,@DMAWINDOW,L        ;FULL HEIGHT WINDOW
         0000a1c0 01a000c0  
    1781 0000a1e0     09ee          MOVI    [100H,100H],A14
         0000a1f0 01000100  
    1782 0000a210     078e          MOVE    A14,@DMASCALEX,L
         0000a220 01a000a0  
    1783                    
    1784 0000a240     09ee          MOVI    [1,448],A14             ;BLOW OUT TRADEMARK
         0000a250 000101c0  
    1785 0000a270     078e          MOVE    A14,@DMAHSIZE,L
         0000a280 01a00060  
    1786                    
    1787 0000a2a0     57ce          CLR     A14
    1788 0000a2b0     058e          MOVE    A14,@DMAOFFST,W         ;OFFSET
         0000a2c0 01a00000  
    1789 0000a2e0     058e          MOVE    A14,@DMACONST,W         ;CONSTANT
         0000a2f0 01a00090  
    1790 0000a310     078e          MOVE    A14,@DMAHORIZ,L         ;CLEAR DESTINATION ADDRESS
         0000a320 01a00040  
    1791                    
    1792 0000a340     57ce          clr     a14
    1793 0000a350     078e          MOVE    A14,@DMASAGL,L
         0000a360 01a00020  
    1794                    
    1795 0000a380     09ce          MOVI    257,A14
         0000a390     0101  
    1796 0000a3a0     058e          MOVE    A14,@DMAVERT,W          ;OFFSCREEN PLOT
         0000a3b0 01a00050  
    1797                    
    1798 0000a3d0     09ce          MOVI    0505H,A14
         0000a3e0     0505  
    1799 0000a3f0     058e          MOVE    A14,@DMACMAP,W
         0000a400 01a00080  
    1800                    
    1801 0000a420     09ee          MOVI    8003H,A14               ;USE IMAGE ROM - WRITE ALWAYS
         0000a430 00008003  
    1802 0000a450     058e          MOVE    A14,@DMACTRL,W          ;KICK OFF THE DMA
         0000a460 01a00010  
    1803                    
    1804 0000a480     09ce          MOVI    7FFFH,A14               ;LOAD TIMEOUT COUNTER
         0000a490     7fff  
    1805 0000a4a0           DMACWAIT
    1806 0000a4a0     07a0          move    @_watchdog_addr,a0,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

         0000a4b0 00000000! 
    1807 0000a4d0     8000          move    a0,*a0
    1808 0000a4e0     05a0          MOVE    @DMACTRL,A0,W           ;DMA BUSY?
         0000a4f0 01a00010  
    1809 0000a510     cf02          JRNN    DMADONE                 ;BR = NO, TIME TO CHECK
    1810 0000a520     3d2e          DSJS    A14,DMACWAIT
    1811 0000a530     c028          JRUC    DMACBAD                 ;DMA TIMED OUT
    1812                    
    1813 0000a540           DMADONE
    1814 0000a540     5600          CLR     A0                      ;GET BACK TO A REAL PALETTE
    1815 0000a550     0580          MOVE    A0,@DMACMAP,W
         0000a560 01a00080  
    1816 0000a580     09e0          MOVI    0101000H,A0             ;LINEAR SCREEN LOCATION OF DATA
         0000a590 00101000  
    1817 0000a5b0     09e1          MOVI    2000000H,A1             ;DMA LOGO LOCATION
         0000a5c0 02000000  
    1818 0000a5e0     09c2          MOVI    448,A2                  ;NUMBER OF BYTES TO COMPARE
         0000a5f0     01c0  
    1819 0000a600           DMACLOOP             
    1820 0000a600     8e03          MOVB    *A0,A3                  ;DESTINATION BYTE
    1821 0000a610     8e24          MOVB    *A1,A4                  ;SOURCE BYTE
    1822 0000a620     1100          ADDK    8,A0
    1823 0000a630     1101          ADDK    8,A1
    1824 0000a640     4864          CMP     A3,A4
    1825 0000a650     cb16          JRNZ    DMACBAD                 ;BR = DATA ERROR
    1826 0000a660     3ce2          DSJS    A2,DMACLOOP
    1827                    
    1828                            .if     WWFUNIT
    1829 0000a670     09ed          movi    SYSCINIT,a13
         0000a680 0000987f  
    1830 0000a6a0     0b8d          andni   PALENB,a13
         0000a6b0 00000800  
    1831                            .else
    1832                            MOVI    PAL_SELECT,A13
    1833                            .endif
    1834                    
    1835 0000a6d0     058d          MOVE    A13,@SYSCTRL,W          ;ENABLE PALETTE
         0000a6e0 01b00000  
    1836                    
    1837 0000a700     09e0          MOVI    0101000H,A0             ;LOCATION
         0000a710 00101000  
    1838 0000a730     09c2          MOVI    224,A2                  ;NUMBER OF WORDS TO COMPARE
         0000a740     00e0  
    1839 0000a750           DMACLOOP2
    1840 0000a750     9403          MOVE    *A0+,A3,W
    1841 0000a760     0b43          CMPI    0505H,A3
         0000a770     fafa  
    1842 0000a780     cb03          JRNZ    DMACBAD
    1843 0000a790     3ca2          DSJS    A2,DMACLOOP2
    1844 0000a7a0     5600          CLR     A0
    1845 0000a7b0     c00b          JRUC    DMACRET
    1846 0000a7c0           DMACBAD
    1847 0000a7c0     5600          CLR     A0                      ;GET BACK TO A REAL PALETTE
    1848 0000a7d0     0580          MOVE    A0,@DMACTRL,W
         0000a7e0 01a00010  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

    1849 0000a800     0580          MOVE    A0,@DMACTRL,W
         0000a810 01a00010  
    1850 0000a830     0580          MOVE    A0,@DMACMAP,W
         0000a840 01a00080  
    1851 0000a860     1820          MOVK    1,A0
    1852 0000a870           DMACRET
    1853                    
    1854                            .if WWFUNIT
    1855 0000a870     09ed          movi    SYSCINIT,a13
         0000a880 0000987f  
    1856                            .else
    1857                            MOVI    0FFFCH,A13
    1858                            .endif
    1859                    
    1860 0000a8a0     058d          MOVE    A13,@SYSCTRL,W
         0000a8b0 01b00000  
    1861                    
    1862 0000a8d0     0550          SETF    16,0,0
    1863                    
    1864 0000a8e0     4c00          MOVE    A0,A0
    1865 0000a8f0                   FRET    B5
    1866                    
    1867                    
    1868              8000  DOG_COUNT       .EQU    8000H   ;EVERY 32K
    1869                            .align
    1870                    
    1871 0000aa00           RAMCHECK:
    1872 0000aa00     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000aa10 01860030  
    1873                                                            ; The scratch ram test trashes
    1874                                                            ; the data at _watchdog address
    1875 0000aa30     0550          SETF    16,0,0
    1876 0000aa40     0740          SETF    32,0,1
    1877                    
    1878                    
    1879 0000aa50           RAMLOOP:
    1880 0000aa50     5652          CLR     B2
    1881 0000aa60     b7cc          MOVE    *A14(RAM_SADR),A12,L    ; STARTING ADDRESS
         0000aa70     0030  
    1882 0000aa80     b7cd          MOVE    *A14(RAM_EADR),A13,L    ; ENDING ADDRESS
         0000aa90     0050  
    1883 0000aaa0     b5cb          MOVE    *A14(RAM_ITLV),A11,W    ; INTERLEAVE
         0000aab0     0010  
    1884 0000aac0     b5ca          MOVE    *A14(RAM_WDTH),A10,W    ; WIDTH
         0000aad0     0000  
    1885                    
    1886                    
    1887 0000aae0     458d          SUB     A12,A13                   ; (END-START)/INTERLEAVE+1
    1888 0000aaf0     5b6d          DIVU    A11,A13
    1889 0000ab00     102d          INC     A13
    1890                    
    1891                    
    1892 0000ab10     4d69          MOVE    A11,A9                  ; FS1 = INTERLEAVE
    1893 0000ab20     0b89          ANDI    ZERO_EXTEND,A9
         0000ab30 ffffffe0  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    1894 0000ab50     d709          EXGF    A9,1
    1895                    
    1896 0000ab60     4d49          MOVE    A10,A9                  ; FS0 = WIDTH
    1897 0000ab70     0b89          ANDI    ZERO_EXTEND,A9
         0000ab80 ffffffe0  
    1898 0000aba0     d509          EXGF    A9,0
    1899                    
    1900                    
    1901 0000abb0     4da9          MOVE    A13,A9                    ; XEROX COUNT
    1902 0000abc0     4d88          MOVE    A12,A8                    ; XEROX START
    1903                    
    1904 0000abd0     09e7          MOVI    RANDOM_SEED,A7
         0000abe0 5a5a5a5a  
    1905 0000ac00     56a5          CLR     A5
    1906 0000ac10     09fe          MOVI    DOG_COUNT,B14
         0000ac20 00008000  
    1907                    
    1908 0000ac40           RAC1
    1909 0000ac40     2027          SLA     1,A7                    ; GENERATE A PSEUDO
    1910 0000ac50     cc02          JRV     RAC2                    ; RANDOM NUMBER
    1911 0000ac60     1844          movk    2,a4
    1912 0000ac70     5487          or      a4,a7
    1913 0000ac80           RAC2
    1914 0000ac80     4ce6          MOVE    A7,A6
    1915 0000ac90     42a6          ADDC    A5,A6
    1916                    
    1917 0000aca0     92c8          MOVE    A6,*A8+,1               ; WRITE
    1918 0000acb0     38de          DSJS    B14,RAC1_NODOG
    1919 0000acc0     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000acd0 01860030  
    1920                                                            ; The scratch ram test trashes
    1921                                                            ; the data at _watchdog address
    1922 0000acf0     09fe          MOVI    DOG_COUNT,B14           ;AND RELOAD COUNT
         0000ad00 00008000  
    1923 0000ad20           RAC1_NODOG
    1924 0000ad20     3de9          DSJS    A9,RAC1
    1925                    
    1926                                                            ;READBACK IN ASCENDING ORDER
    1927 0000ad30     4da9          MOVE    A13,A9                  ; XEROX COUNT
    1928 0000ad40     4d88          MOVE    A12,A8                  ; XEROX START
    1929                    
    1930 0000ad50     09e7          MOVI    RANDOM_SEED,A7
         0000ad60 5a5a5a5a  
    1931 0000ad80     09fe          MOVI    DOG_COUNT,B14
         0000ad90 00008000  
    1932                    
    1933 0000adb0     2027  RAC3    SLA     1,A7                    ; GENERATE A PSEUDO
    1934 0000adc0     cc02          JRV     RAC4                    ; RANDOM NUMBER
    1935 0000add0     1844          movk    2,a4
    1936 0000ade0     5487          or      a4,a7
    1937 0000adf0     4ce6  RAC4    MOVE    A7,A6
    1938 0000ae00     42a6          ADDC    A5,A6
    1939                    
    1940 0000ae10     8504          move    *a8,a4,0                ;Read
    1941 0000ae20     4168          add     a11,a8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

    1942 0000ae30     0526          ZEXT    A6
    1943                    
    1944 0000ae40     48c4          CMP     A6,A4
    1945 0000ae50     cb09          jrne    rac5                    ;Error?
    1946                    
    1947 0000ae60     38de          DSJS    B14,RAC5_NODOG
    1948 0000ae70     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000ae80 01860030  
    1949                                                            ; The scratch ram test trashes
    1950                                                            ; the data at _watchdog address
    1951 0000aea0     09fe          MOVI    DOG_COUNT,B14           ;AND RELOAD COUNT
         0000aeb0 00008000  
    1952 0000aed0           RAC5_NODOG
    1953 0000aed0     3e69          DSJS    A9,RAC3
    1954                    
    1955 0000aee0     c008          jruc    showstat
    1956                    
    1957 0000aef0           rac5                                    ;Error!
    1958 0000aef0     0550          SETF    16,0,0                  ; RESET FIELDS
    1959 0000af00     0740          SETF    32,0,1
    1960 0000af10     b5c4          MOVE    *A14(RAM_NMBR),A4,W     ; GET BIT NUMBER TO SET
         0000af20     0020  
    1961 0000af30     4e81          MOVE    A4,B1
    1962 0000af40     1832          MOVK    1,B2
    1963 0000af50     6232          SLL     B1,B2
    1964 0000af60     5450          OR      B2,B0                   ; SET THAT BIT
    1965                    
    1966                    
    1967 0000af70           showstat
    1968 0000af70     0550          SETF    16,0,0                  ; RESET FIELDS
    1969 0000af80     0740          SETF    32,0,1
    1970 0000af90     05e0          movb    a0,@WATCHDOG            ; We have to do this because
         0000afa0 01860030  
    1971                                                            ; The scratch ram test trashes
    1972                                                            ; the data at _watchdog address
    1973                    
    1974                    
    1975                    
    1976 0000afc0     b7ca          MOVE    *A14(RAM_LINK),A10,L
         0000afd0     0070  
    1977 0000afe0     ca0c          JRZ     RAMNOPLOT
    1978 0000aff0     182b          MOVK    1,A11
    1979 0000b000     4c52          MOVE    B2,B2
    1980 0000b010     ca01          JRZ     RAMPLOT
    1981 0000b020     184b          MOVK    2,A11
    1982 0000b030           RAMPLOT
    1983 0000b030     4eb9          MOVE    B5,A9                   ; I HOPE THIS ONE IS SAFE!
    1984 0000b040     4e1d          MOVE    B0,A13
    1985 0000b050                   FCALL   CHIPOUT,B5
    1986 0000b090     4fa0          MOVE    A13,B0
    1987 0000b0a0     4f25          MOVE    A9,B5
    1988                    
    1989 0000b0b0           RAMNOPLOT
    1990 0000b0b0     0b0e          ADDI    RAM_SIZE,A14            ; ADVANCE TO NEXT GUY
         0000b0c0     0090  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

    1991 0000b0d0     85c7          MOVE    *A14,A7,W
    1992 0000b0e0     cb96          JRNZ    RAMLOOP                 ; HERE WE GO AGAIN
    1993 0000b0f0                   FRET    B5
    1994                    
    1995                    
    1996                            .align
    1997                    
    1998 0000b200           ROMCHECK:
    1999 0000b200     07a0          move    @_watchdog_addr,a0,L
         0000b210 00000000! 
    2000 0000b230     8000          move    a0,*a0
    2001 0000b240           ROMLOOP 
    2002 0000b240     5652          CLR     B2
    2003 0000b250     b5cd          MOVE    *A14(ROM_CKSM),A13,W    ; CHECK TO SEE IF ROM SOCKET THERE
         0000b260     0000  
    2004 0000b270     ca4e          JRZ     ROMEMPTY
    2005 0000b280     5708          CLR     A8                      ; CHECKSUM
    2006                    
    2007 0000b290     09fe          MOVI    DOG_COUNT,B14
         0000b2a0 00008000  
    2008                    
    2009 0000b2c0     b7cc          MOVE    *A14(ROM_SADR),A12,L    ; STARTING ADDRESS
         0000b2d0     0040  
    2010 0000b2e0     b7cd          MOVE    *A14(ROM_EADR),A13,L    ; ENDING ADDRESS
         0000b2f0     0060  
    2011 0000b300     b5cb          MOVE    *A14(ROM_ITLV),A11,W    ; INTERLEAVE
         0000b310     0020  
    2012 0000b320     458d          SUB     A12,A13                 ; (( EADDR - SADDR ) / INTERLEAVE) + 1
    2013 0000b330     5b6d          DIVU    A11,A13
    2014 0000b340     102d          INC     A13
    2015 0000b350     0748          setf    8,0,1
    2016 0000b360           rcilp
    2017 0000b360     8787          move    *a12,a7,1               ;Get a byte
    2018 0000b370     416c          add     a11,a12
    2019 0000b380     40e8          add     a7,a8
    2020 0000b390     393e          dsjs    b14,rcilp_nodog
    2021 0000b3a0     0740          setf    32,0,1
    2022 0000b3b0     07a0          move    @_watchdog_addr,a0,L
         0000b3c0 00000000! 
    2023 0000b3e0     8000          move    a0,*a0
    2024 0000b3f0     0748          setf    8,0,1
    2025 0000b400     09fe          movi    DOG_COUNT,b14           ;AND RELOAD COUNT
         0000b410 00008000  
    2026 0000b430           rcilp_nodog
    2027 0000b430     3dcd          dsjs    a13,rcilp
    2028                    
    2029 0000b440     0740          setf    32,0,1
    2030                    
    2031 0000b450     b5c7          MOVE    *A14(ROM_CKSM),A7,W
         0000b460     0000  
    2032 0000b470           ROM_COMPARE
    2033 0000b470     0527          ZEXT    A7
    2034 0000b480     0528          ZEXT    A8
    2035 0000b490     48e8          CMP     A7,A8
    2036 0000b4a0     ca06          JRZ     ROMRELOOP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

    2037 0000b4b0     b5c4          MOVE    *A14(ROM_NMBR),A4,W     ; GET BIT NUMBER TO SET
         0000b4c0     0030  
    2038 0000b4d0     4e81          MOVE    A4,B1
    2039 0000b4e0     1832          MOVK    1,B2
    2040 0000b4f0     6232          SLL     B1,B2
    2041 0000b500     5450          OR      B2,B0                   ; SET THAT BIT
    2042 0000b510           ROMRELOOP
    2043 0000b510     07a0          move    @_watchdog_addr,a0,L
         0000b520 00000000! 
    2044 0000b540     8000          move    a0,*a0
    2045 0000b550     b7ca          MOVE    *A14(ROM_LINK),A10,L
         0000b560     0080  
    2046 0000b570     ca0c          JRZ     ROMNOPLOT
    2047 0000b580     182b          MOVK    1,A11
    2048 0000b590     4c52          MOVE    B2,B2
    2049 0000b5a0     ca01          JRZ     ROMPLOT
    2050 0000b5b0     184b          MOVK    2,A11
    2051 0000b5c0           ROMPLOT
    2052 0000b5c0     4eb9          MOVE    B5,A9                   ; I HOPE THIS ONE IS SAFE!
    2053 0000b5d0     4e1d          MOVE    B0,A13
    2054 0000b5e0                   FCALL   CHIPOUT,B5
    2055 0000b620     4fa0          MOVE    A13,B0
    2056 0000b630     4f25          MOVE    A9,B5
    2057                    
    2058 0000b640           ROMNOPLOT
    2059 0000b640     0b0e          ADDI    ROM_SIZE,A14
         0000b650     00a0  
    2060 0000b660     07ad          move    @_coin_addr,a13,L
         0000b670 00000000! 
    2061 0000b690     85ad          move    *a13,a13,W
    2062 0000b6a0     260d          sll     16,a13
    2063 0000b6b0     0b8d          ANDI    START_BITS,A13
         0000b6c0 f9dbffff  
    2064 0000b6e0     0b6d          CMPI    START_BITS,A13
         0000b6f0 f9dbffff  
    2065 0000b710     cb01          JRNE    ROMABORT
    2066 0000b720     c0b1          JRUC    ROMLOOP                 ;BACK FOR THE NEXT
    2067 0000b730           ROMABORT
    2068 0000b730                   CLRZ
    2069 0000b750                   FRET    B5
    2070 0000b760           ROMEMPTY
    2071 0000b760     578c          clr     a12
    2072 0000b770                   setz
    2073 0000b780                   FRET    B5
    2074                    
    2075                    
    2076 0000b790           CROSS_H
    2077 0000b790           CONV_PLOT
    2078 0000b790     09e9          MOVI    MON_RECS,A9
         0000b7a0 0000be50' 
    2079 0000b7c0           CPRLP1
    2080 0000b7c0     9522          MOVE    *A9+,A2,W               ; GET COLOR
    2081 0000b7d0     ca07          JRZ     CPRDONE
    2082 0000b7e0     9720          MOVE    *A9+,A0,L               ; START POINT
    2083 0000b7f0     9721          MOVE    *A9+,A1,L               ; DIMENSIONS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

    2084 0000b800                   FCALL   RECTANGLE,B6
    2085 0000b840     c0f7          JRUC    CPRLP1
    2086 0000b850           CPRDONE
    2087 0000b850     09e9          MOVI    MON_VECS,A9             ; POINT AT VECTOR TABLE
         0000b860 0000b9d0' 
    2088 0000b880           CPVLP1
    2089 0000b880     9522          MOVE    *A9+,A2,W               ; GET COLOR
    2090 0000b890     ca07          JRZ     CPVDONE
    2091 0000b8a0     9720          MOVE    *A9+,A0,L               ; START POINT
    2092 0000b8b0     9721          MOVE    *A9+,A1,L               ; END POINT
    2093 0000b8c0                   FCALL   HVLINE,B6
    2094 0000b900     c0f7          JRUC    CPVLP1
    2095 0000b910           CPVDONE
    2096 0000b910     09e9          MOVI    MON_DOTS,A9             ; POINT AT DOT TABLE
         0000b920 0000c0f0' 
    2097 0000b940           CPDLP1
    2098 0000b940     9521          MOVE    *A9+,A1,W               ; GET COLOR
    2099 0000b950     ca06          JRZ     CPDDONE
    2100 0000b960     9720          MOVE    *A9+,A0,L               ; GET THE POINT
    2101 0000b970                   FCALL   POINT,B6
    2102 0000b9b0     c0f8          JRUC    CPDLP1
    2103 0000b9c0           CPDDONE
    2104 0000b9c0     0960          RETS
    2105                    
    2106 0000b9d0           MON_VECS:
    2107 0000b9d0                   VECMAC  ROBO_WHITE,004,004,390,004
    2108 0000ba20                   VECMAC  ROBO_WHITE,004,004,004,250
    2109 0000ba70                   VECMAC  ROBO_WHITE,004,250,390,250
    2110 0000bac0                   VECMAC  ROBO_WHITE,390,250,390,004
    2111 0000bb10                   VECMAC  ROBO_WHITE,060,005,060,250
    2112 0000bb60                   VECMAC  ROBO_WHITE,115,005,115,250
    2113 0000bbb0                   VECMAC  ROBO_WHITE,170,005,170,250
    2114 0000bc00                   VECMAC  ROBO_WHITE,225,005,225,250
    2115 0000bc50                   VECMAC  ROBO_WHITE,280,005,280,250
    2116 0000bca0                   VECMAC  ROBO_WHITE,335,005,335,250
    2117 0000bcf0                   VECMAC  ROBO_WHITE,005,054,390,054
    2118 0000bd40                   VECMAC  ROBO_WHITE,005,103,390,103
    2119 0000bd90                   VECMAC  ROBO_WHITE,005,152,390,152
    2120 0000bde0                   VECMAC  ROBO_WHITE,005,201,390,201
    2121 0000be30 00000000          .LONG   0
    2122                    
    2123 0000be50           MON_RECS:
    2124 0000be50                   VECMAC  ROBO_RED,       182,000,030,005 ; TOP
    2125 0000bea0                   VECMAC  ROBO_GREEN,     182,005,030,006
    2126 0000bef0                   VECMAC  ROBO_RED,       182,250,030,005 ; BOTTOM
    2127 0000bf40                   VECMAC  ROBO_GREEN,     182,244,030,006
    2128 0000bf90                   VECMAC  ROBO_RED,       000,117,005,020 ; LEFT
    2129 0000bfe0                   VECMAC  ROBO_GREEN,     005,117,006,020
    2130 0000c030                   VECMAC  ROBO_RED,       390,117,005,020 ; RIGHT
    2131 0000c080                   VECMAC  ROBO_GREEN,     384,117,006,020
    2132 0000c0d0 00000000          .LONG   0
    2133                    
    2134 0000c0f0           MON_DOTS:
    2135 0000c0f0                   DOTMAC  ROBO_WHITE,032,029
    2136 0000c120                   DOTMAC  ROBO_WHITE,087,029
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

    2137 0000c150                   DOTMAC  ROBO_WHITE,142,029
    2138 0000c180                   DOTMAC  ROBO_WHITE,197,029
    2139 0000c1b0                   DOTMAC  ROBO_WHITE,252,029
    2140 0000c1e0                   DOTMAC  ROBO_WHITE,307,029
    2141 0000c210                   DOTMAC  ROBO_WHITE,362,029
    2142                    
    2143 0000c240                   DOTMAC  ROBO_WHITE,032,078
    2144 0000c270                   DOTMAC  ROBO_WHITE,087,078
    2145 0000c2a0                   DOTMAC  ROBO_WHITE,142,078
    2146 0000c2d0                   DOTMAC  ROBO_WHITE,197,078
    2147 0000c300                   DOTMAC  ROBO_WHITE,252,078
    2148 0000c330                   DOTMAC  ROBO_WHITE,307,078
    2149 0000c360                   DOTMAC  ROBO_WHITE,362,078
    2150                    
    2151 0000c390                   DOTMAC  ROBO_WHITE,032,127
    2152 0000c3c0                   DOTMAC  ROBO_WHITE,087,127
    2153 0000c3f0                   DOTMAC  ROBO_WHITE,142,127
    2154 0000c420                   DOTMAC  ROBO_WHITE,197,127
    2155 0000c450                   DOTMAC  ROBO_WHITE,252,127
    2156 0000c480                   DOTMAC  ROBO_WHITE,307,127
    2157 0000c4b0                   DOTMAC  ROBO_WHITE,362,127
    2158                    
    2159 0000c4e0                   DOTMAC  ROBO_WHITE,032,176
    2160 0000c510                   DOTMAC  ROBO_WHITE,087,176
    2161 0000c540                   DOTMAC  ROBO_WHITE,142,176
    2162 0000c570                   DOTMAC  ROBO_WHITE,197,176
    2163 0000c5a0                   DOTMAC  ROBO_WHITE,252,176
    2164 0000c5d0                   DOTMAC  ROBO_WHITE,307,176
    2165 0000c600                   DOTMAC  ROBO_WHITE,362,176
    2166                    
    2167 0000c630                   DOTMAC  ROBO_WHITE,032,225
    2168 0000c660                   DOTMAC  ROBO_WHITE,087,225
    2169 0000c690                   DOTMAC  ROBO_WHITE,142,225
    2170 0000c6c0                   DOTMAC  ROBO_WHITE,197,225
    2171 0000c6f0                   DOTMAC  ROBO_WHITE,252,225
    2172 0000c720                   DOTMAC  ROBO_WHITE,307,225
    2173 0000c750                   DOTMAC  ROBO_WHITE,362,225
    2174 0000c780 00000000          .LONG   0
    2175                    
    2176 0000c7a0           PRIMARY_COLORS:
    2177 0000c7a0                   RECTMAC ROBO_RED,0,0,395,255
    2178 0000c7f0                   RECTMAC ROBO_GREEN,0,0,395,255
    2179 0000c840                   RECTMAC ROBO_BLUE,0,0,395,255
    2180 0000c890 00000000          .LONG   0
    2181                    
    2182 0000c8b0           COLOR_BARS:
    2183                    
    2184 0000c8b0                   RECTMAC ROBO_BLACK,   0, 0, 49, 16
    2185 0000c900                   RECTMAC ROBO_BLACK,  49, 0, 49, 16
    2186 0000c950                   RECTMAC ROBO_BLACK,  98, 0, 49, 16
    2187 0000c9a0                   RECTMAC ROBO_BLACK, 147, 0, 49, 16
    2188 0000c9f0                   RECTMAC ROBO_BLACK, 196, 0, 49, 16      
    2189 0000ca40                   RECTMAC ROBO_BLACK, 245, 0, 49, 16
    2190 0000ca90                   RECTMAC ROBO_BLACK, 294, 0, 49, 16
    2191 0000cae0                   RECTMAC ROBO_BLACK, 343, 0, 49, 16
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

    2192 0000cb30 00000000          .LONG   0
    2193                    
    2194                    
    2195                    
    2196 0000cb50           COL_BARS
    2197 0000cb50           COLORBAR
    2198                    
    2199 0000cb50     09e0          MOVI    INTENSITIES_START,A0,L
         0000cb60 0000cf10' 
    2200 0000cb80     09e1          MOVI    COLRAM+100H,A1,L
         0000cb90 01880100  
    2201                    
    2202 0000cbb0     1a02          MOVK    16, A2                  ;5 BITS / COLOR
    2203 0000cbc0     1906          MOVK    8, A6                   ;# COLOR BARS
    2204 0000cbd0           CB3
    2205 0000cbd0     0b01          ADDI    0F00H,A1                        ;STEP TO NEXT PALETTE
         0000cbe0     0f00  
    2206 0000cbf0     9403          MOVE    *A0+,A3                 ;STARTING COLOR
    2207 0000cc00     9404          MOVE    *A0+,A4                 ;COLOR DECREMENT
    2208                    
    2209 0000cc10     4c45          MOVE    A2,A5
    2210                    
    2211 0000cc20     9061  CB4     MOVE    A3,*A1+
    2212 0000cc30     4483          SUB     A4,A3
    2213 0000cc40     3c65          DSJS    A5,CB4
    2214 0000cc50     3d26          DSJS    A6,CB3
    2215                    
    2216                    
    2217 0000cc60     57ce          CLR     A14
    2218 0000cc70     058e          MOVE    A14,@DMACTRL,W          ; HALT THE DMA
         0000cc80 01a00010  
    2219 0000cca0     058e          MOVE    A14,@DMACTRL,W
         0000ccb0 01a00010  
    2220 0000ccd0     09ce          MOVI    0101H,A14
         0000cce0     0101  
    2221 0000ccf0     4dc8          MOVE    A14,A8
    2222                    
    2223 0000cd00     09e3          MOVI COLOR_BARS,  A3, L        ; COLOR BAR TABLE
         0000cd10 0000c8b0' 
    2224 0000cd30     09ed          MOVI [16,0], A13, L             ; POSITION INCRMENT
         0000cd40 00100000  
    2225 0000cd60     09cc          MOVI    101H,A12
         0000cd70     0101  
    2226 0000cd80     1a0b          MOVK   16,  A11                 ; # INTENSITIES / BAR
    2227 0000cd90     1906          MOVK    8,A6                    ;THIS MANY BARS
    2228 0000cda0           CB6
    2229 0000cda0     5642          CLR A2                       ; STARTING COLOR
    2230 0000cdb0     9661          MOVE    *A3+,A1,L
    2231 0000cdc0     ca0f          JRZ     CB8
    2232 0000cdd0     0588          MOVE    A8,@DMACMAP,W           ;STUFF PALETTE
         0000cde0 01a00080  
    2233 0000ce00     9660          MOVE    *A3+,A0,L
    2234 0000ce10     1203          ADDK    16,A3
    2235 0000ce20     4d6a          MOVE    A11,A10
    2236 0000ce30           CB7
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

    2237 0000ce30                   FCALL RECTANGLE, B6
    2238 0000ce70     41a0          ADD   A13, A0
    2239 0000ce80     4182          ADD   A12, A2
    2240 0000ce90     3cea          DSJS  A10, CB7
    2241 0000cea0     41c8          ADD     A14,A8                  ;NEXT PALETTE PLEASE
    2242 0000ceb0     3e46          DSJ     A6,CB6
    2243                    
    2244 0000cec0           CB8
    2245 0000cec0     57ce          CLR     A14
    2246 0000ced0     058e          MOVE    A14,@DMACMAP
         0000cee0 01a00080  
    2247 0000cf00     0960          RETS
    2248                    
    2249                    
    2250 0000cf10           INTENSITIES_START
    2251                    
    2252 0000cf10     03e0          .WORD 03E0H                ; GREEN
    2253 0000cf20     0040          .WORD 0040H                ; BUMP GREEN
    2254                    
    2255 0000cf30     7c00          .WORD 7C00H                ; RED
    2256 0000cf40     0800          .WORD 0800H                ; BUMP RED
    2257                    
    2258 0000cf50     001f          .WORD 001FH                ; BLUE
    2259 0000cf60     0002          .WORD 0002H                ; BUMP BLUE
    2260                    
    2261 0000cf70     0000          .WORD 0000H                ; BLACK
    2262 0000cf80     0000          .WORD 0000H                ; BUMP BLACK
    2263                    
    2264 0000cf90     7fff          .WORD 7FFFH                ; WHITE
    2265 0000cfa0     0842          .WORD 0842H                ; BUMP WHITE
    2266                    
    2267 0000cfb0     7fe0          .WORD 7FE0H                ; YELLOW
    2268 0000cfc0     0840          .WORD 0840H                ; BUMP YELLOW
    2269                    
    2270 0000cfd0     7c1f          .WORD 7C1FH                ; PURPLE
    2271 0000cfe0     0802          .WORD 0802H                ; BUMP PURPLE
    2272                    
    2273 0000cff0     03ff          .WORD 03FFH                ; CYAN
    2274 0000d000     0042          .WORD 0042H                ; BUMP CYAN
    2275                    
    2276 0000d010 00000000          .LONG   0
    2277                    
    2278                    
    2279          00240000  DONEMASK        EQU     00240000H               ; P1 + P2 START
    2280 00000200                   .BSS    DONECNT,32              ; FOR SWITCH TEST
    2281                    
    2282 0000d030           SWITCHTEST
    2283 0000d030                   PUSH    a12,a13
    2284                    
    2285 0000d050     1420          subk    1,a0
    2286 0000d060     ca00          jreq    DIPTEST
         0000d070     00ec  
    2287 0000d080     5600          clr     a0
    2288 0000d090     0780          move    a0,@_switch_map_mode,L  ; No switch mapping
         0000d0a0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2289                    
    2290 0000d0c0     1a0d          movk    10h,A13
    2291 0000d0d0     078d          MOVE    A13,@DONECNT,L
         0000d0e0 00000200- 
    2292 0000d100     57ad          CLR     A13                     ; THE HOLD ME REGISTER
    2293 0000d110     078d          MOVE    A13,@SWSET1,L
         0000d120 00000000- 
    2294 0000d140     078d          MOVE    A13,@SWSET2,L
         0000d150 00000020- 
    2295 0000d170     09e9          MOVI    BUT_TABLE,A9
         0000d180 00010a90' 
    2296 0000d1a0     574a          CLR     A10
    2297 0000d1b0     0d3f          CALLR   BUT_PLOT                ; PLOT SOME BUTTONS
         0000d1c0     0323  
    2298 0000d1d0     09e9          MOVI    JOY_TABLE,A9
         0000d1e0 000117a0' 
    2299 0000d200     0d3f          CALLR   JOY_PLOT                ; PLOT THE JOYSTICKS
         0000d210     034e  
    2300 0000d220     09e9          MOVI    STR_TABLE,A9
         0000d230 000118e0' 
    2301 0000d250     0d3f          CALLR   STR_PLOT                ; PLOT THE STRINGS
         0000d260     0376  
    2302 0000d270     09e9          MOVI    BUT_STRS,A9
         0000d280 00012080' 
    2303 0000d2a0     0d3f          CALLR   STR_PLOT                ; PLOT THE BUTTON STRINGS
         0000d2b0     0371  
    2304 0000d2c0     09e0          MOVI    [172,0],A0
         0000d2d0 00ac0000  
    2305 0000d2f0     09e1          MOVI    [172,400],A1
         0000d300 00ac0190  
    2306 0000d320     09c2          MOVI    ROBO_WHITE,A2
         0000d330     0202  
    2307 0000d340                   FCALL   HVLINE,B6               ; DRAW LITTLE WHITE LINE
    2308 0000d380           SDLOOP
    2309 0000d380                   PULL    a12,a13
    2310 0000d3a0                   SLEEPK  2
    2311 0000d3e0                   PUSH    a12,a13
    2312                    
    2313 0000d400     07aa          move    @_coin_addr,a10,L
         0000d410 00000000! 
    2314 0000d430     854a          move    *a10,a10,W
    2315 0000d440     07ae          move    @_switch_addr,a14,L
         0000d450 00000000! 
    2316 0000d470     85ce          move    *a14,a14,W
    2317 0000d480     260a          sll     16,a10
    2318 0000d490     260e          sll     16,a14          ;mask off top 16
    2319 0000d4a0     2e0e          srl     16,a14
    2320 0000d4b0     55ca          or      a14,a10
    2321                    
    2322                    
    2323 0000d4c0     03ea          NOT     A10
    2324 0000d4d0     4d40          MOVE    A10,A0
    2325 0000d4e0     0b80          ANDI    DONEMASK,A0
         0000d4f0 ffdbffff  
    2326 0000d510     0b60          CMPI    DONEMASK,A0,L           ; CHECK FOR DONE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

         0000d520 ffdbffff  
    2327 0000d540     cb11          JRNZ    SDGO
    2328 0000d550     07a0          MOVE    @DONECNT,A0,L           ;REQUIRE A CERTAIN TIME
         0000d560 00000200- 
    2329 0000d580     1420          DEC     A0
    2330 0000d590     0780          MOVE    A0,@DONECNT,L
         0000d5a0 00000200- 
    2331 0000d5c0     cb09          JRNE    SDGO
    2332                    
    2333 0000d5d0           switchx PULL    a12,a13
    2334 0000d5f0     1820          movk    1,a0
    2335 0000d600     0780          move    a0,@_switch_map_mode,L  ; Back to menu switch map
         0000d610 00000000! 
    2336 0000d630                   RETP
    2337                    
    2338 0000d660           SDGO
    2339 0000d660     07ab          MOVE    @SWSET1,A11,L
         0000d670 00000000- 
    2340 0000d690     496a          CMP     A11,A10                 ; CHECK FOR CHANGES
    2341 0000d6a0     ca0b          JRZ     SDCK2
    2342 0000d6b0     078a          MOVE    A10,@SWSET1,L
         0000d6c0 00000000- 
    2343 0000d6e0     07aa          move    @_switch2_addr,a10,L
         0000d6f0 00000000! 
    2344 0000d710     854a          move    *a10,a10,W
    2345 0000d720     03ea          NOT     A10
    2346 0000d730     260a          SLL     16,A10
    2347 0000d740     2e0a          SRL     16,A10
    2348 0000d750     c00c          JRUC    SDPRC1
    2349 0000d760           SDCK2
    2350 0000d760     07aa          move    @_switch2_addr,a10,L
         0000d770 00000000! 
    2351 0000d790     854a          move    *a10,a10,W
    2352 0000d7a0     03ea          not     a10
    2353 0000d7b0     260a          sll     16,a10
    2354 0000d7c0     2e0a          srl     16,a10
    2355 0000d7d0     07ab          MOVE    @SWSET2,A11,L
         0000d7e0 00000020- 
    2356 0000d800     496a          CMP     A11,A10
    2357 0000d810     cab6          JRZ     SDLOOP
    2358 0000d820           SDPRC1
    2359 0000d820     078a          MOVE    A10,@SWSET2,L
         0000d830 00000020- 
    2360 0000d850           SDPROC
    2361 0000d850     5600          CLR     A0
    2362 0000d860     0580          MOVE    A0,@SCHANGE
         0000d870 000000b0- 
    2363                    
    2364 0000d890     09e9          MOVI    BUT_TABLE,A9
         0000d8a0 00010a90' 
    2365 0000d8c0     0d3f          CALLR   BUT_PLOT
         0000d8d0     02b2  
    2366 0000d8e0     09e9          MOVI    BUT_STRS,A9
         0000d8f0 00012080' 
    2367 0000d910     0d3f          CALLR   STR_PLOT                ; PLOT THE BUTTON STRINGS
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   55

         0000d920     030a  
    2368 0000d930     09e9          MOVI    JOY_TABLE,A9
         0000d940 000117a0' 
    2369 0000d960     0d3f          CALLR   JOY_UPDATE              ; UPDATE THE JOYSTICK INFO
         0000d970     02e5  
    2370                    
    2371 0000d980     05a0          MOVE    @SCHANGE,A0
         0000d990 000000b0- 
    2372 0000d9b0     ca9c          JRZ     SDLOOP
    2373                    
    2374 0000d9c0     09c3          MOVI    SWITCH_SND,A3
         0000d9d0     00c8  
    2375 0000d9e0     0d5f          calla   SNDSND
         0000d9f0 00000000! 
    2376 0000da10     c096          JRUC    SDLOOP
    2377                    
    2378                    
    2379                    
    2380 0000da20           SET_DIP_COINAGE
    2381 0000da20     098f          MMTM    SP,A0,A1,A2,A6
         0000da30     e200  
    2382                    
    2383 0000da40     0d3f          CALLR   READ_DIP
         0000da50     0253  
    2384 0000da60     4c02          MOVE    A0,A2
    2385 0000da70     0b82          ANDI    DPUSECMOS,A2            ;USING CMOS?
         0000da80 fffffeff  
    2386 0000daa0     cb46          JRNZ    SDC_X                   ;BR=YES, DO NOT LOAD COINAGE
    2387                    
    2388 0000dab0     4c02          MOVE    A0,A2
    2389 0000dac0     0b80          ANDI    DPCOUNTRY,A0
         0000dad0 ffffcfff  
    2390                    
    2391 0000daf0     2e80          SRL     DPCOUNTRY_SRL,A0        ; CHANGE TO TO MULTIPLE OF 32
    2392 0000db00     24a0          SLL     5,A0
    2393                    
    2394 0000db10     0b20          ADDI    DIPCOINTAB,A0
         0000db20 00000000! 
    2395 0000db40     8601          MOVE    *A0,A1,L                ; POINTER TO RIGHT COIN TABLE
    2396                    
    2397 0000db50     0b82          ANDI    DPCOINAGE,A2
         0000db60 fffff1ff  
    2398 0000db80     0b42          CMPI    DPCOINAGE,A2            ; CHECK FOR FREEPLAY
         0000db90     f1ff  
    2399 0000dba0     ca2f          JRZ     CMOS21
    2400                    
    2401 0000dbb0     2ee2          SRL     DPCOINAGE_SRL,A2
    2402 0000dbc0     2482          SLL     4,A2
    2403                    
    2404 0000dbd0     4041          ADD     A2,A1
    2405 0000dbe0     8421          MOVE    *A1,A1,W                ; WHICH COIN TABLE TO USE
    2406                    
    2407 0000dbf0     09c0          MOVI    ADJPRICE,A0
         0000dc00     0001  
    2408 0000dc10     0d5f          CALLA   GET_ADJ                 ;GET THE COIN SELECT NUMBER BEING USED.
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   56

         0000dc20 00000000! 
    2409 0000dc40     4801          CMP     A0,A1                   ;DID WE CHANGE COIN MODES
    2410 0000dc50     ca06          JREQ    SDC_SAMEC
    2411 0000dc60     0d5f          CALLA   NO_CREDS                ;CLEAR CREDITS
         0000dc70 00000000! 
    2412 0000dc90     0d5f          CALLA   CRED_P                  ;LINK-OUT!
         0000dca0 00000000! 
    2413 0000dcc0           SDC_SAMEC
    2414 0000dcc0     09c0          MOVI    ADJPRICE,A0             ; MASTER PRICING
         0000dcd0     0001  
    2415 0000dce0     0d5f          CALLA   PUT_ADJ                 ; STUFF IT IN CMOS
         0000dcf0 00000000! 
    2416 0000dd10     09c0          MOVI    ADJFREPL,A0
         0000dd20     0013  
    2417 0000dd30     5621          CLR     A1                      ; MAKE SURE NO FREEPLAY
    2418 0000dd40     0d5f          CALLA   PUT_ADJ
         0000dd50 00000000! 
    2419 0000dd70           CMOS20
    2420 0000dd70     09c0          MOVI    ADJ1ST6,A0              ;MAKE THEM UNTOUCHED PLEASE
         0000dd80     0016  
    2421 0000dd90     1821          MOVK    1,A1
    2422 0000dda0     0d5f          CALLA   PUT_ADJ
         0000ddb0 00000000! 
    2423                    
    2424 0000ddd0     0d5f          CALLA   F_ADC_S                 ;CHECKSUM THE ADJUSTMENTS
         0000dde0 00000000! 
    2425                    
    2426 0000de00     0d5f          CALLA   GET_CSPT
         0000de10 00000000! 
    2427 0000de30     0d5f          CALLA   SET_COIN_ADJ            ; SET THE ADJUSTMENTS UP IN CMOS
         0000de40 00000000! 
    2428                    
    2429 0000de60     0d5f          CALLA   F_ADC_S                 ;CHECKSUM THE ADJUSTMENTS
         0000de70 00000000! 
    2430                    
    2431 0000de90     c007          JRUC    SDC_X
    2432 0000dea0           CMOS21
    2433 0000dea0     09c0          MOVI    ADJFREPL,A0
         0000deb0     0013  
    2434 0000dec0     1821          MOVK    1,A1                    ; FREEPLAY, DUDE!
    2435 0000ded0     0d5f          CALLA   PUT_ADJ
         0000dee0 00000000! 
    2436 0000df00     c0e6          JRUC    CMOS20
    2437 0000df10           SDC_X
    2438 0000df10     09af          MMFM    SP,A0,A1,A2,A6
         0000df20     0047  
    2439 0000df30     0960          RETS
    2440                    
    2441                    
    2442 0000df40           DIPTEST:
    2443 0000df40     186e          movk    3,a14
    2444 0000df50     078e          move    a14,@_switch_map_mode,L ; Any button mapping
         0000df60 00000000! 
    2445 0000df80     182e          MOVK    1,A14
    2446 0000df90     058e          MOVE    A14,@DIP1ST,W           ;YES THIS IS THE FIRST TIME THROUGH
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   57

         0000dfa0 00000050- 
    2447 0000dfc0     0d3f          CALLR   READ_DIP
         0000dfd0     01fb  
    2448 0000dfe0     0580          MOVE    A0,@DIPVAL,W
         0000dff0 00000040- 
    2449                    
    2450 0000e010           DT_PLOT
    2451 0000e010     09e9          MOVI    DIP_VECS,A9             ; POINT AT VECTOR TABLE
         0000e020 000120a0' 
    2452 0000e040           DTVLP1
    2453 0000e040     9522          MOVE    *A9+,A2,W               ; GET COLOR
    2454 0000e050     ca07          JRZ     DTVDONE
    2455 0000e060     9720          MOVE    *A9+,A0,L               ; START POINT
    2456 0000e070     9721          MOVE    *A9+,A1,L               ; END POINT
    2457 0000e080                   FCALL   HVLINE,B6
    2458 0000e0c0     c0f7          JRUC    DTVLP1
    2459 0000e0d0           DTVDONE
    2460 0000e0d0     09e9          MOVI    DIP_STRS,A9
         0000e0e0 000129d0' 
    2461 0000e100     0d3f          CALLR   STR_PLOT
         0000e110     028b  
    2462                    
    2463 0000e120     0d3f          CALLR   SET_DIP_COINAGE
         0000e130     ff8e  
    2464                    
    2465 0000e140     0d3f          CALLR   DIPPLOT
         0000e150     0178  
    2466 0000e160     0d3f          CALLR   DIPSTATE
         0000e170     0038  
    2467                    
    2468 0000e180     05ae          MOVE    @DIP1ST,A14,W
         0000e190 00000050- 
    2469 0000e1b0     cb06          JRNZ    DTL_SKIP_SND
    2470                    
    2471 0000e1c0     09c0          MOVI    DIP_SND,A0
         0000e1d0     00c8  
    2472 0000e1e0     07a9          move    @_sound_addr,a9,L
         0000e1f0 00000000! 
    2473 0000e210     8009          move    a0,*a9,W
    2474                    
    2475 0000e220           DTL_SKIP_SND
    2476 0000e220                   CLRM    @DIP1ST,W
    2477                    
    2478 0000e260     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
         0000e270 00000000! 
    2479 0000e290     0b80          andi    BUTTONS|START_BITS,a0
         0000e2a0 f9db0f0f  
    2480 0000e2c0     0780          MOVE    A0,@SWSET1,L
         0000e2d0 00000000- 
    2481 0000e2f0           DTLOOP
    2482 0000e2f0                   PULL    a12,a13
    2483 0000e310                   SLEEPK  1
    2484 0000e350                   PUSH    a12,a13
    2485                    
    2486 0000e370     0d5f          CALLA   fudge_switches          ;get fudged switches in a0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   58

         0000e380 00000000! 
    2487 0000e3a0     07a1          MOVE    @SWSET1,A1,L
         0000e3b0 00000000- 
    2488 0000e3d0     0b80          andi    BUTTONS|START_BITS,a0
         0000e3e0 f9db0f0f  
    2489 0000e400     4801          CMP     A0,A1
    2490 0000e410     cb0c          JRNZ    DT_X
    2491                    
    2492 0000e420     0d3f          CALLR   READ_DIP
         0000e430     01b5  
    2493 0000e440     05a1          MOVE    @DIPVAL,A1,W
         0000e450 00000040- 
    2494 0000e470     0521          ZEXT    A1
    2495 0000e480     4801          CMP     A0,A1
    2496 0000e490     cae5          JRZ     DTLOOP                  ;BR = NO CHANGE
    2497 0000e4a0     0580          MOVE    A0,@DIPVAL,W            ;SAVE THE OLD
         0000e4b0 00000040- 
    2498 0000e4d0     c0b3          JRUC    DT_PLOT                 ;PLOT THE NEW SWITCH STUFF
    2499 0000e4e0           DT_X
    2500 0000e4e0     c000          JRUC    switchx
         0000e4f0     ff0d  
    2501                    
    2502                    
    2503 0000e500           DIPSTATE
    2504 0000e500     09e0          MOVI    [82,74],A0
         0000e510 0052004a  
    2505 0000e530     09e1          MOVI    [104,140],A1
         0000e540 0068008c  
    2506 0000e560     09c2          MOVI    COLOR_BLACK,A2
         0000e570     1414  
    2507 0000e580                   FCALL   RECTANGLE,B6
    2508 0000e5c0     09e0          MOVI    [82,284],A0
         0000e5d0 0052011c  
    2509 0000e5f0     09e1          MOVI    [104,111],A1
         0000e600 0068006f  
    2510 0000e620     09c2          MOVI    COLOR_BLACK,A2
         0000e630     1414  
    2511 0000e640                   FCALL   RECTANGLE,B6
    2512                    
    2513 0000e680     0d3f          CALLR   READ_DIP
         0000e690     018f  
    2514 0000e6a0     4c0a          MOVE    A0,A10                  ;LET'S KEEP A COPY 
    2515                    
    2516 0000e6b0     5642          CLR     A2
    2517 0000e6c0     09c3          MOVI    COLOR_WHITE,A3
         0000e6d0     0202  
    2518                    
    2519 0000e6e0     56e7          CLR     A7
    2520 0000e6f0     09e1          MOVI    DUSECMOS_0,A1
         0000e700 00013300' 
    2521 0000e720     0b80          ANDI    DPUSECMOS,A0
         0000e730 fffffeff  
    2522 0000e750     ca04          JRZ     DS1
    2523 0000e760     1827          MOVK    1,A7
    2524 0000e770     09e1          MOVI    DUSECMOS_1,A1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   59

         0000e780 00013290' 
    2525 0000e7a0           DS1
    2526 0000e7a0     4c20          MOVE    A1,A0
    2527 0000e7b0     09e1          MOVI    [89,75],A1
         0000e7c0 0059004b  
    2528 0000e7e0                   FCALL   STRING,B6
    2529                    
    2530 0000e820     4ce7          MOVE    A7,A7                   ;ARE WE CMOS OR DIPSWITCH
    2531 0000e830     ca0b          JRZ     DS_PC                   ;BR = DIPSWITCH
    2532                    
    2533 0000e840     09e1          MOVI    [113,75],A1
         0000e850 0071004b  
    2534 0000e870     09e0          MOVI    DUNUSED,A0              ;JUST PRINT UNUSED
         0000e880 00014000' 
    2535 0000e8a0                   FCALL   STRING,B6
    2536 0000e8e0     c064          JRUC    DS_SC                   ;AND GO FOR THE NEXT SWITCHES
    2537                            
    2538 0000e8f0           DS_PC
    2539 0000e8f0     09c3          MOVI    COLOR_WHITE,A3
         0000e900     0202  
    2540 0000e910     09e1          MOVI    [101,75],A1
         0000e920 0065004b  
    2541 0000e940     09e0          MOVI    DCOINAGE,A0
         0000e950 00013880' 
    2542 0000e970                   FCALL   STRING,B6
    2543 0000e9b0     4d40          MOVE    A10,A0
    2544 0000e9c0     0b80          ANDI    DPCOUNTRY,A0
         0000e9d0 ffffcfff  
    2545 0000e9f0     2e80          SRL     DPCOUNTRY_SRL,A0                
    2546 0000ea00     24a0          SLL     5,A0
    2547 0000ea10     0b20          ADDI    DCOINTAB,A0
         0000ea20 00013dd0' 
    2548 0000ea40     8601          MOVE    *A0,A1,L                ; POINTER TO RIGHT COIN TABLE
    2549 0000ea50     4d40          MOVE    A10,A0
    2550 0000ea60     0b80          ANDI    DPCOINAGE,A0
         0000ea70 fffff1ff  
    2551 0000ea90     2ee0          SRL     DPCOINAGE_SRL,A0
    2552 0000eaa0     24a0          SLL     5,A0
    2553 0000eab0     4001          ADD     A0,A1
    2554 0000eac0     8620          MOVE    *A1,A0,L                ; NOW POINTING AT MESSAGE
    2555 0000ead0     5642          CLR     A2
    2556 0000eae0     09e1          MOVI    [101,132],A1
         0000eaf0 00650084  
    2557 0000eb10                   FCALL   STRING,B6
    2558                    
    2559 0000eb50     09e0          MOVI    DTOSTART,A0
         0000eb60 00013a40' 
    2560 0000eb80     09e1          MOVI    [113,90],A1
         0000eb90 0071005a  
    2561 0000ebb0                   FCALL   STRING,B6
    2562                    
    2563 0000ebf0     09e0          MOVI    DTOCONTINUE,A0
         0000ec00 00013a90' 
    2564 0000ec20     09e1          MOVI    [125,90],A1
         0000ec30 007d005a  
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   60

    2565 0000ec50                   FCALL   STRING,B6
    2566                    
    2567 0000ec90     09c0          MOVI    ADJCSTRT,A0
         0000eca0     000c  
    2568 0000ecb0     0d5f          CALLA   GET_ADJ                 ; GET NUMBER NEEDED ( IN A0 )
         0000ecc0 00000000! 
    2569 0000ece0     4c08          MOVE    A0,A8
    2570 0000ecf0     0b48          CMPI    9,A8
         0000ed00     fff6  
    2571 0000ed10     c201          JRLS    DSTS_1
    2572 0000ed20     1928          MOVK    9,A8
    2573 0000ed30           DSTS_1
    2574 0000ed30     0d5f          CALLA   HEXTOASC
         0000ed40 00000000! 
    2575 0000ed60     4d00          MOVE    A8,A0
    2576 0000ed70     09e1          MOVI    [113,80],A1
         0000ed80 00710050  
    2577 0000eda0                   FCALL   STRING,B6
    2578                    
    2579 0000ede0     09c0          MOVI    ADJCCONT,A0
         0000edf0     000d  
    2580 0000ee00     0d5f          CALLA   GET_ADJ                 ; GET NUMBER NEEDED ( IN A0 )
         0000ee10 00000000! 
    2581 0000ee30     4c08          MOVE    A0,A8
    2582 0000ee40     0b48          CMPI    9,A8
         0000ee50     fff6  
    2583 0000ee60     c201          JRLS    DSTC_1
    2584 0000ee70     1928          MOVK    9,A8
    2585 0000ee80           DSTC_1
    2586 0000ee80     0d5f          CALLA   HEXTOASC
         0000ee90 00000000! 
    2587 0000eeb0     4d00          MOVE    A8,A0
    2588 0000eec0     09e1          MOVI    [125,80],A1
         0000eed0 007d0050  
    2589 0000eef0                   FCALL   STRING,B6
    2590                    
    2591                    
    2592 0000ef30           DS_SC
    2593 0000ef30     4d40          MOVE    A10,A0
    2594 0000ef40     0b80          ANDI    DPCOUNTRY,A0
         0000ef50 ffffcfff  
    2595 0000ef70     2e80          SRL     DPCOUNTRY_SRL,A0
    2596 0000ef80     24a0          SLL     5,A0
    2597 0000ef90     0b20          ADDI    DCOUNTRY_TAB,A0
         0000efa0 00013960' 
    2598 0000efc0     8600          MOVE    *A0,A0,L
    2599 0000efd0     09e1          MOVI    [143,75],A1
         0000efe0 008f004b  
    2600 0000f000                   FCALL   STRING,B6
    2601                    
    2602 0000f040     4d47          MOVE    A10,A7
    2603 0000f050     0b87          ANDI    DPCOUNTER,A7
         0000f060 ffff3fff  
    2604 0000f080     2e47          SRL     DPCOUNTER_SRL,A7
    2605 0000f090     24c7          SLL     6,A7
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   61

    2606 0000f0a0     0b27          ADDI    DCOUNTER_TAB,A7
         0000f0b0 00013780' 
    2607 0000f0d0     96e0          MOVE    *A7+,A0,L
    2608 0000f0e0     09e1          MOVI    [163,75],A1
         0000f0f0 00a3004b  
    2609 0000f110                   FCALL   STRING,B6
    2610 0000f150     96e0          MOVE    *A7+,A0,L
    2611 0000f160     09e1          MOVI    [175,75],A1
         0000f170 00af004b  
    2612 0000f190                   FCALL   STRING,B6
    2613                    
    2614                    
    2615                    
    2616                    
    2617                    
    2618 0000f1d0     09e0          MOVI    DUNUSED,A0
         0000f1e0 00014000' 
    2619                    
    2620                    
    2621                    
    2622 0000f200     09e1          MOVI    [89,285],A1
         0000f210 0059011d  
    2623 0000f230                   FCALL   STRING,B6
    2624                    
    2625 0000f270     09e0          MOVI    DNOVALIDATOR,A0         ;ASSUME NO VALIDATOR
         0000f280 00013b50' 
    2626 0000f2a0     4d41          MOVE    A10,A1
    2627 0000f2b0     0b81          ANDI    DPVALIDATOR,A1          ;DO WE HAVE ONE?
         0000f2c0 fffffffd  
    2628 0000f2e0     ca03          JRZ     DSTS_NOV                ;BR = NO
    2629 0000f2f0     09e0          MOVI    DVALIDATOR,A0           ;ASSUME NO VALIDATOR
         0000f300 00013bc0' 
    2630                    
    2631 0000f320           DSTS_NOV
    2632 0000f320     09e1          MOVI    [101,285],A1
         0000f330 0065011d  
    2633 0000f350                   FCALL   STRING,B6
    2634                    
    2635                    
    2636 0000f390     09e0          MOVI    DCLIPS,A0               ;Assume clips on
         0000f3a0 00013c40' 
    2637 0000f3c0     4d41          MOVE    A10,A1
    2638 0000f3d0     0b81          ANDI    DPNOVIDCLIPS,A1
         0000f3e0 fffffffb  
    2639 0000f400     ca03          JRZ     DSTS_NOC                ;BR = NO
    2640 0000f410     09e0          MOVI    DNOCLIPS,A0             ;Assume no clips wanted
         0000f420 00013c80' 
    2641                    
    2642 0000f440           DSTS_NOC
    2643                    
    2644                    
    2645 0000f440     09e1          MOVI    [113,285],A1
         0000f450 0071011d  
    2646 0000f470                   FCALL   STRING,B6
    2647                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   62

    2648 0000f4b0     09e0          MOVI    DUNUSED,A0
         0000f4c0 00014000' 
    2649 0000f4e0     09e1          MOVI    [125,285],A1
         0000f4f0 007d011d  
    2650 0000f510                   FCALL   STRING,B6
    2651                    
    2652 0000f550     09e0          movi    TD_ON,a0
         0000f560 000131d0' 
    2653 0000f580     4d41          move    a10,a1
    2654 0000f590     0b81          andi    DPTDON,a1
         0000f5a0 ffffffef  
    2655 0000f5c0     cb03          jrnz    dtd_off
    2656 0000f5d0     09e0          movi    TD_OFF,a0
         0000f5e0 00013220' 
    2657 0000f600           dtd_off
    2658 0000f600     09e1          MOVI    [137,285],A1
         0000f610 0089011d  
    2659 0000f630                   FCALL   STRING,B6
    2660                    
    2661 0000f670     09e0          MOVI    DUNUSED,A0
         0000f680 00014000' 
    2662 0000f6a0     09e1          MOVI    [149,285],A1
         0000f6b0 0095011d  
    2663 0000f6d0                   FCALL   STRING,B6
    2664                    
    2665                    
    2666                    
    2667 0000f710     09e0          MOVI    DPOWER,A0
         0000f720 00013cc0' 
    2668 0000f740     4d41          MOVE    A10,A1
    2669 0000f750     0b81          ANDI    DPPOWER,A1
         0000f760 ffffffbf  
    2670 0000f780     ca03          JRZ     DSTS_NOP
    2671 0000f790     09e0          MOVI    DNOPOWER,A0
         0000f7a0 00013d30' 
    2672                    
    2673 0000f7c0           DSTS_NOP
    2674                    
    2675 0000f7c0     09e1          MOVI    [161,285],A1
         0000f7d0 00a1011d  
    2676 0000f7f0                   FCALL   STRING,B6
    2677                    
    2678 0000f830     09e0          MOVI    DTEST_0,A0
         0000f840 00013af0' 
    2679 0000f860     09e1          MOVI    [173,285],A1
         0000f870 00ad011d  
    2680 0000f890                   FCALL   STRING,B6
    2681                    
    2682 0000f8d0     0960          RETS
    2683                    
    2684                    
    2685 0000f8e0           DIPPLOT:
    2686 0000f8e0     09e0          MOVI    [83,21],A0
         0000f8f0 00530015  
    2687 0000f910     09e1          MOVI    [104,38],A1
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   63

         0000f920 00680026  
    2688 0000f940     09c2          MOVI    COLOR_BLACK,A2
         0000f950     1414  
    2689 0000f960                   FCALL   RECTANGLE,B6
    2690 0000f9a0     09e0          MOVI    [83,231],A0
         0000f9b0 005300e7  
    2691 0000f9d0     09e1          MOVI    [104,38],A1
         0000f9e0 00680026  
    2692 0000fa00     09c2          MOVI    COLOR_BLACK,A2
         0000fa10     1414  
    2693 0000fa20                   FCALL   RECTANGLE,B6
    2694 0000fa60     0d3f          CALLR   READ_DIP
         0000fa70     0051  
    2695 0000fa80     5642          CLR     A2
    2696 0000fa90           DIPLOOP
    2697 0000fa90     4c43          MOVE    A2,A3
    2698 0000faa0     24a3          SLL     5,A3
    2699 0000fab0     0b23          ADDI    DIPYTAB,A3
         0000fac0 0000fd90' 
    2700 0000fae0     8663          MOVE    *A3,A3,L
    2701 0000faf0     2603          SLL     16,A3                   ; GOT THE Y LOC
    2702                    
    2703 0000fb00     56a5          CLR     A5
    2704 0000fb10     0b42          CMPI    8,A2
         0000fb20     fff7  
    2705                            .IF TUNIT=0
    2706                            JRLO    DIPL2
    2707                            .ELSE
    2708 0000fb30     c902          JRHS    DIPL2
    2709                            .ENDIF
    2710 0000fb40     09c5          MOVI    210,A5
         0000fb50     00d2  
    2711 0000fb60           DIPL2
    2712 0000fb60     eca3          MOVX    A5,A3
    2713                    
    2714 0000fb70     4a40          BTST    A2,A0                   ; CHECK IF BIT IS SET
    2715 0000fb80     cb08          JRNZ    DIPON
    2716 0000fb90     09e1          MOVI    DP_OFF,A1
         0000fba0 00013fe0' 
    2717 0000fbc0     0b03          ADDI    29,A3
         0000fbd0     001d  
    2718 0000fbe0     09c4          MOVI    COLOR_GREY,A4
         0000fbf0     0101  
    2719 0000fc00     c007          JRUC    DIPSTR
    2720                    
    2721 0000fc10           DIPON
    2722 0000fc10     09e1          MOVI    DP_ON,A1
         0000fc20 00013fc0' 
    2723 0000fc40     0b03          ADDI    32,A3
         0000fc50     0020  
    2724 0000fc60     09c4          MOVI    COLOR_WHITE,A4
         0000fc70     0202  
    2725                    
    2726 0000fc80           DIPSTR
    2727 0000fc80     098f          MMTM    SP,A0,A2
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   64

         0000fc90     a000  
    2728 0000fca0     4c20          MOVE    A1,A0                   ; SET STRING
    2729 0000fcb0     4c61          MOVE    A3,A1                   ; SET LOCATION
    2730 0000fcc0     4c83          MOVE    A4,A3
    2731 0000fcd0     5642          CLR     A2                      ; HORIZONTAL
    2732 0000fce0                   FCALL   STRING,B6
    2733 0000fd20     09af          MMFM    SP,A0,A2
         0000fd30     0005  
    2734 0000fd40     1022          INC     A2
    2735 0000fd50     0b42          CMPI    16,A2
         0000fd60     ffef  
    2736 0000fd70     c8d1          JRLO    DIPLOOP
    2737 0000fd80     0960          RETS
    2738                    
    2739                    
    2740 0000fd90           DIPYTAB
    2741 0000fd90 00000059          .LONG   89,101,113,125,137,149,161,173
    2742 0000fe90 00000059          .LONG   89,101,113,125,137,149,161,173
    2743                    
    2744                    
    2745                    
    2746 0000ff90           READ_DIP:
    2747 0000ff90     098f          MMTM    SP,A1,A2,A3
         0000ffa0     7000  
    2748                    
    2749 0000ffb0     07a0          move    @_dipswitch_addr,a0,L
         0000ffc0 00000000! 
    2750 0000ffe0     8400          move    *a0,a0,W
    2751 0000fff0     03e0          NOT     A0                      ; INVERT IT FOR TRUE BITS
    2752 00010000     5621          CLR     A1
    2753 00010010     18e2          movk    7,a2
    2754 00010020           RDLOOP
    2755 00010020     4a40          BTST    A2,A0
    2756 00010030     ca05          JRZ     RD1
    2757 00010040     18e3          MOVK    7,A3
    2758 00010050     4443          SUB     A2,A3
    2759 00010060                   BSET    A3,A1
    2760 00010090           RD1
    2761 00010090     1102          addk    8,a2
    2762 000100a0     4a40          BTST    A2,A0
    2763 000100b0     ca06          JRZ     RD2
    2764 000100c0     19e3          MOVK    15,A3
    2765 000100d0     4443          SUB     A2,A3
    2766 000100e0     1103          addk    8,a3
    2767 000100f0                   BSET    A3,A1
    2768 00010120           RD2
    2769 00010120     1502          subk    8,a2
    2770 00010130     1422          DEC     A2
    2771 00010140     cfed          JRNN    RDLOOP
    2772 00010150     4c20          MOVE    A1,A0
    2773                    
    2774 00010160     09af          MMFM    SP,A1,A2,A3
         00010170     000e  
    2775 00010180     0960          RETS
    2776                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   65

    2777                    
    2778                            
    2779 00010190           JOY_MESS
    2780 00010190     09e8          MOVI    JJJTAB,A8
         000101a0 00010340' 
    2781 000101c0     1887          MOVK    4,A7
    2782 000101d0           JML
    2783 000101d0     09c3          MOVI    ROBO_BLACK,A3
         000101e0     1414  
    2784 000101f0     2fea          SRL     1,A10
    2785 00010200     c905          JRNC    JM1
    2786 00010210     4d63          MOVE    A11,A3                  ; SET COLOR
    2787 00010220     182e          MOVK    1,A14
    2788 00010230     058e          MOVE    A14,@SCHANGE,W
         00010240 000000b0- 
    2789 00010260           JM1
    2790 00010260     9700          MOVE    *A8+,A0,L
    2791 00010270     4d21          MOVE    A9,A1                   ; CIRCLE CENTER
    2792 00010280     8f02          MOVB    *A8,A2                  ;X CORRECTION
    2793 00010290     1108          ADDK    8,A8
    2794 000102a0     4041          ADD     A2,A1
    2795 000102b0     8f02          MOVB    *A8,A2                  ;Y CORRECTION
    2796 000102c0     1108          ADDK    8,A8
    2797 000102d0     2602          SLL     16,A2
    2798 000102e0     4041          ADD     A2,A1
    2799 000102f0     5642          CLR     A2                      ; DIRECTION
    2800 00010300     0d3f          CALLR   STRNEW
         00010310     055f  
    2801 00010320     3ec7          DSJS    A7,JML
    2802 00010330     0960          RETS
    2803 00010340           JJJTAB
    2804 00010340 00014e00'         .LONG   UPMESS
    2805 00010360       f9          .BYTE   -7,-25
    2806                    
    2807 00010370 00014e20'         .LONG   DOWNMESS
    2808 00010390       f3          .BYTE   -13,18
    2809                    
    2810 000103a0 00014dc0'         .LONG   LEFTMESS
    2811 000103c0       d9          .BYTE   -39,-4
    2812                    
    2813 000103d0 00014de0'         .LONG   RIGHTMESS
    2814 000103f0       12          .BYTE   18,-4
    2815                    
    2816                    
    2817                    
    2818                    
    2819 00010400           BUT_PLOT:
    2820 00010400     5694          clr     b4                      ;OFFSET
    2821                    
    2822 00010410     8721          MOVE    *A9,A1,L                ; XY LOC
    2823 00010420     ca2c          JRZ     BPDONE
    2824 00010430     1009          ADDK    32,A9                   
    2825 00010440     9520          MOVE    *A9+,A0                 ; RADIUS
    2826 00010450     9726          MOVE    *A9+,A6,L               ; COLOR
    2827 00010460     972b          MOVE    *A9+,A11,L              ; GET MASK
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   66

    2828 00010470     1209          ADDK    16,A9                   ; SHIFT COUNT
    2829 00010480     8528          MOVE    *A9,A8,W                ; JAMMA EXTEND-O-BIT
    2830 00010490     ca04          JRZ     BPLOW
    2831 000104a0     07aa          MOVE    @SWSET2,A10,L
         000104b0 00000020- 
    2832 000104d0     c003          JRUC    BPAND
    2833 000104e0           BPLOW
    2834 000104e0     07aa          MOVE    @SWSET1,A10,L
         000104f0 00000000- 
    2835 00010510           BPAND
    2836 00010510     1209          ADDK    16,A9
    2837 00010520     514b          AND     A10,A11                 ; MASK OFF SOMETHING USEFUL
    2838 00010530     ca04          JRZ     BPHOLLOW
    2839 00010540     0b26          ADDI    CFILL,A6                ; MASK IN THE FILL BITS
         00010550 ffff0000  
    2840 00010570     c00e          JRUC    BPCIRC
    2841 00010580           BPHOLLOW
    2842 00010580     098f          MMTM    SP,A0,A1,A6
         00010590     c200  
    2843 000105a0     09c6          MOVI    ROBO_BLACK,A6
         000105b0     1414  
    2844 000105c0     0b26          ADDI    CFILL,A6
         000105d0 ffff0000  
    2845 000105f0                   FCALL   CIRCLE,B6
    2846 00010630     09af          MMFM    SP,A0,A1,A6
         00010640     0043  
    2847 00010650     c004          JRUC    BPCIRC2
    2848 00010660           BPCIRC
    2849 00010660     182e          MOVK    1,A14
    2850 00010670     058e          MOVE    A14,@SCHANGE,W
         00010680 000000b0- 
    2851 000106a0           BPCIRC2
    2852 000106a0                   FCALL   CIRCLE,B6
    2853 000106e0     c0d1          JRUC    BUT_PLOT
    2854 000106f0           BPDONE
    2855 000106f0     0960          RETS
    2856                    
    2857                    
    2858 00010700           JOY_PLOT:
    2859 00010700     8721          MOVE    *A9,A1,L                ; XY LOC
    2860 00010710     ca0a          JRZ     JPDONE
    2861 00010720     1009          ADDK    32,A9                   
    2862 00010730     9520          MOVE    *A9+,A0                 ; RADIUS
    2863 00010740     8726          MOVE    *A9,A6,L                ; COLOR
    2864 00010750     0b09          ADDI    96,A9
         00010760     0060  
    2865 00010770                   FCALL   CIRCLE,B6
    2866 000107b0     c0f4          JRUC    JOY_PLOT
    2867 000107c0           JPDONE
    2868 000107c0     0960          RETS
    2869                    
    2870                    
    2871 000107d0           JOY_UPDATE:
    2872 000107d0     8721          MOVE    *A9,A1,L                ; XY LOC
    2873 000107e0     ca1d          JRZ     JUDONE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   67

    2874 000107f0     0b09          ADDI    32,A9                   
         00010800     0020  
    2875 00010810     9520          MOVE    *A9+,A0                 ; RADIUS
    2876 00010820     972b          MOVE    *A9+,A11,L              ; COLOR
    2877 00010830     9726          MOVE    *A9+,A6,L               ; MASK
    2878 00010840     9527          MOVE    *A9+,A7                 ; SHIFT COUNT
    2879 00010850     8528          MOVE    *A9,A8                  ; EXTEND-O-BIT FOR JAMMA
    2880 00010860     ca04          JRZ     JULOW
    2881 00010870     07aa          MOVE    @SWSET2,A10,L
         00010880 00000020- 
    2882 000108a0     c003          JRUC    JUAND
    2883 000108b0           JULOW
    2884 000108b0     07aa          MOVE    @SWSET1,A10,L
         000108c0 00000000- 
    2885 000108e0           JUAND
    2886 000108e0     1209          ADDK    16,A9
    2887 000108f0     5146          AND     A10,A6                  ; MASK OFF JOYSTICK BITS
    2888 00010900     03e7          NOT     A7
    2889 00010910     1027          ADDK    1,A7
    2890 00010920     66e6          SRL     A7,A6                   ; ZERO BASE THE LITTLE SUCKER
    2891 00010930     098f          MMTM    SP,A9,A10,A8,A7
         00010940     01e0  
    2892 00010950     4c29          MOVE    A1,A9                   ; CENTER OF STICK HERE
    2893 00010960     4cca          MOVE    A6,A10                  ; BUTTON MASK
    2894 00010970     0d3f          CALLR   JOY_MESS
         00010980     ff80  
    2895 00010990     09af          MMFM    SP,A9,A10,A8,A7
         000109a0     0780  
    2896 000109b0     c0e1          JRUC    JOY_UPDATE
    2897 000109c0           JUDONE
    2898 000109c0     0960          RETS
    2899                    
    2900                    
    2901                    
    2902 000109d0           STR_PLOT
    2903 000109d0     8721          MOVE    *A9,A1,L                ;XY LOC
    2904 000109e0     ca09          JRZ     STDONE
    2905 000109f0     1009          ADDK    32,A9                   
    2906 00010a00     9720          MOVE    *A9+,A0,L               ;STRING PTR
    2907 00010a10     9523          MOVE    *A9+,A3                 ;COLOR
    2908 00010a20     9522          MOVE    *A9+,A2                 ;DIRECTION
    2909 00010a30                   FCALL   STRING,B6
    2910 00010a70     c0f5          JRUC    STR_PLOT
    2911 00010a80           STDONE
    2912 00010a80     0960          RETS
    2913                    
    2914          ffff0000  CFILL   EQU     0FFFF0000H
    2915                    
    2916                    
    2917                    
    2918              0050  P1BC    .equ    80
    2919              00a0  P2BC    .equ    160
    2920              00f0  P3BC    .equ    240
    2921              0140  P4BC    .equ    320
    2922              007a  PBCY    .equ    162-40
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   68

    2923                    
    2924              00a0  P1BX    equ     P2BC
    2925              0140  P2BX    equ     P4BC
    2926              006e  PBY     equ     110
    2927                    
    2928 00010a90           BUT_TABLE
    2929 00010a90                   BUT_MAC P1BX-24,PBY-12,10,ROBO_BLUE,010H,0,0            ; P1 A1 (PUNCH)
    2930 00010b20                   BUT_MAC P1BX,   PBY,10,ROBO_RED,020H,0,0                ; P1 A2 (BLOCK)
    2931 00010bb0                   BUT_MAC P1BX+24,PBY-12,10,ROBO_BLUE,040H,0,0            ; P1 A3 (SPUNCH)
    2932 00010c40                   BUT_MAC P1BX-24,PBY+12,10,ROBO_BLUE,01H,0,1             ; P1 A5 (KICK)
    2933 00010cd0                   BUT_MAC P1BX+24,PBY+12,10,ROBO_BLUE,02H,0,1             ; P1 A6 (SKICK)
    2934                    
    2935 00010d60                   BUT_MAC P2BX-24,PBY-12,10,ROBO_BLUE,01000H,0,0          ; P2 A1 (PUNCH)
    2936 00010df0                   BUT_MAC P2BX,   PBY,10,ROBO_RED,02000H,0,0              ; P2 A2 (BLOCK)
    2937 00010e80                   BUT_MAC P2BX+24,PBY-12,10,ROBO_BLUE,04000H,0,0          ; P2 A3 (SPUNCH)
    2938 00010f10                   BUT_MAC P2BX-24,PBY+12,10,ROBO_BLUE,10H,0,1             ; P2 A5 (KICK)
    2939 00010fa0                   BUT_MAC P2BX+24,PBY+12,10,ROBO_BLUE,20H,0,1             ; P2 A6 (SKICK)
    2940                    
    2941                    
    2942 00011030                   BUT_MAC P1BC,70,10,ROBO_WHITE,00040000H,0,0     ; P1 START
    2943 000110c0                   BUT_MAC P3BC,70,10,ROBO_WHITE,00200000H,0,0     ; P2 START
    2944                    
    2945 00011150                   BUT_MAC 30,199,10,COLOR_GREEN,00010000H,0,0     ; COIN LEFT
    2946 000111e0                   BUT_MAC 75,199,10,COLOR_PURPLE,00020000H,0,0    ; COIN RIGHT
    2947 00011270                   BUT_MAC 120,184,10,COLOR_GREEN,00800000H,0,0    ; COIN CENTER
    2948 00011300                   BUT_MAC 120,217,10,COLOR_GREEN,01000000H,0,0    ; FOURTH COIN
    2949 00011390                   BUT_MAC 214,199,10,COLOR_GREEN,00400000H,0,0    ; SERVICE CREDIT
    2950 00011420                   BUT_MAC 332,184,10,COLOR_GREEN,00080000H,0,0    ; SLAM
    2951 000114b0                   BUT_MAC 332,206,10,COLOR_GREEN,00100000H,0,0    ; TEST
    2952 00011540                   BUT_MAC 165,184,10,COLOR_PURPLE,10000000H,0,0   ; VOL UP
    2953 000115d0                   BUT_MAC 165,217,10,COLOR_PURPLE,08000000H,0,0   ; VOL DOWN
    2954 00011660                   BUT_MAC 280,199,10,COLOR_PURPLE,20000000H,0,0   ; COINDOOR INTERLOCK
    2955 000116f0                   BUT_MAC 332,228,10,COLOR_GREEN,80000000H,0,0    ; BILL VALIDATOR INPUT
    2956                    
    2957 00011780 00000000          .LONG   0
    2958                    
    2959                    
    2960                            ;       X,Y,RADIUS,COLOR,MASK,SHIFT,EXTEND
    2961 000117a0           JOY_TABLE
    2962 000117a0                   BUT_MAC P1BC,110,16,CFILL+ROBO_RED,0fH,0,0              ; P1 MOVE
    2963 00011830                   BUT_MAC P3BC,110,16,CFILL+ROBO_RED,0f00H,8,0            ; P2 MOVE
    2964 000118c0 00000000          .LONG   0
    2965                    
    2966                    
    2967 000118e0           STR_TABLE
    2968 000118e0                   STR_MAC P1BC-24,47,P1START,ROBO_RED,0   ; P1 START
    2969 00011940                   STR_MAC P3BC-24,47,P2START,ROBO_RED,0   ; P2 START
    2970 000119a0                   STR_MAC 70,162,GETOUT1,ROBO_LASER,0     ;GET OUT MESSAGE 1
    2971 00011a00                   STR_MAC 12,225,LEFTSLOT,COLOR_GREEN,0           ;LEFT COIN
    2972 00011a60                   STR_MAC 103,197,CENTER,COLOR_GREEN,0            ;CENTER COIN
    2973 00011ac0                   STR_MAC 103,230,FOURTH,COLOR_GREEN,0            ;COIN MIDDLE
    2974 00011b20                   STR_MAC 56,225,RIGHTSLOT,COLOR_PURPLE,0         ;RIGHT COIN
    2975 00011b80                   STR_MAC 10,214,COINMESS1,COLOR_GREEN,0          ;BOTTOM MESSAGE
    2976 00011be0                   STR_MAC 55,214,COINMESS2,COLOR_PURPLE,0
    2977 00011c40                   STR_MAC 193,214,SERVICE1,COLOR_GREEN,0          ;SERVICE CREDIT
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   69

    2978 00011ca0                   STR_MAC 197,225,SERVICE2,COLOR_GREEN,0          ;SERVICE CREDIT
    2979 00011d00                   STR_MAC 347,181,SLAM,COLOR_GREEN,0              ;SLAM
    2980 00011d60                   STR_MAC 347,204,TEST,COLOR_GREEN,0              ;TEST SWITCH
    2981 00011dc0                   STR_MAC 143,197,VOLUPMESS,COLOR_PURPLE,0        ;VOLUME UP
    2982 00011e20                   STR_MAC 143,230,VOLDOWNMESS,COLOR_PURPLE,0      ;VOLUME DOWN
    2983 00011e80                   STR_MAC 252,214,CDINTERLOCK1,COLOR_PURPLE,0     ;COINDOOR INTERLOCK 1
    2984 00011ee0                   STR_MAC 252,225,CDINTERLOCK2,COLOR_PURPLE,0     ;COINDOOR INTERLOCK 2
    2985 00011f40                   STR_MAC 347,227,BILLVALID,COLOR_GREEN,0         ;BILL VALIDATOR
    2986                    
    2987 00011fa0                   STR_MAC P1BC-15,110-3,J1MESS,ROBO_WHITE,0
    2988 00012000                   STR_MAC P3BC-15,110-3,J2MESS,ROBO_WHITE,0
    2989                    
    2990 00012060 00000000          .LONG   0
    2991                    
    2992                    
    2993 00012080           BUT_STRS
    2994                    
    2995 00012080 00000000          .LONG   0
    2996                    
    2997 000120a0           DIP_VECS:
    2998 000120a0                   VECMAC  COLOR_RED,20,82,60,82           ; DS1
    2999 000120f0                   VECMAC  COLOR_RED,20,82,20,188
    3000 00012140                   VECMAC  COLOR_RED,20,188,60,188 
    3001 00012190                   VECMAC  COLOR_RED,60,82,60,188
    3002                    
    3003 000121e0                   VECMAC  COLOR_RED,230,82,270,82 ; DS2
    3004 00012230                   VECMAC  COLOR_RED,230,82,230,188
    3005 00012280                   VECMAC  COLOR_RED,230,188,270,188       
    3006 000122d0                   VECMAC  COLOR_RED,270,82,270,188
    3007                    
    3008 00012320                   VECMAC  COLOR_WHITE,63,92,73,92
    3009                    
    3010                    
    3011 00012370                   VECMAC  COLOR_WHITE,63,104,68,104               ;COINAGE MODE
    3012 000123c0                   VECMAC  COLOR_WHITE,63,128,68,128
    3013 00012410                   VECMAC  COLOR_WHITE,68,104,68,128
    3014 00012460                   VECMAC  COLOR_WHITE,68,116,73,116
    3015                    
    3016 000124b0                   VECMAC  COLOR_WHITE,63,140,68,140               ;COUNTRY
    3017 00012500                   VECMAC  COLOR_WHITE,63,152,68,152
    3018 00012550                   VECMAC  COLOR_WHITE,68,140,68,152
    3019 000125a0                   VECMAC  COLOR_WHITE,68,146,73,146
    3020                    
    3021 000125f0                   VECMAC  COLOR_WHITE,63,164,68,164       ;COIN COUNTER MODE
    3022 00012640                   VECMAC  COLOR_WHITE,63,176,68,176
    3023 00012690                   VECMAC  COLOR_WHITE,68,164,68,176
    3024 000126e0                   VECMAC  COLOR_WHITE,68,170,73,170
    3025                    
    3026 00012730                   VECMAC  COLOR_WHITE,273,92,283,92       ;# OF PLAYERS
    3027                    
    3028 00012780                   VECMAC  COLOR_WHITE,273,104,283,104     ;UNUSED
    3029                            
    3030 000127d0                   VECMAC  COLOR_WHITE,273,116,283,116     ;UNUSED
    3031                    
    3032 00012820                   VECMAC  COLOR_WHITE,273,128,283,128     ;UNUSED
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   70

    3033                    
    3034 00012870                   VECMAC  COLOR_WHITE,273,140,283,140     ;UNUSED
    3035                    
    3036 000128c0                   VECMAC  COLOR_WHITE,273,152,283,152     ;UNUSED
    3037                    
    3038                    
    3039                    
    3040 00012910                   VECMAC  COLOR_WHITE,273,164,283,164     ;UNUSED
    3041                    
    3042 00012960                   VECMAC  COLOR_WHITE,273,176,283,176     ;TEST SWITCH
    3043                    
    3044 000129b0 00000000          .LONG   0
    3045                    
    3046 000129d0           DIP_STRS:
    3047 000129d0                   STR_MAC 30,70,DP_DS1,COLOR_WHITE,0
    3048 00012a30                   STR_MAC 240,70,DP_DS2,COLOR_WHITE,0
    3049 00012a90                   STR_MAC 7,89,DP_DSN1,COLOR_WHITE,0
    3050 00012af0                   STR_MAC 7,101,DP_DSN2,COLOR_WHITE,0
    3051 00012b50                   STR_MAC 7,113,DP_DSN3,COLOR_WHITE,0
    3052 00012bb0                   STR_MAC 7,125,DP_DSN4,COLOR_WHITE,0
    3053 00012c10                   STR_MAC 7,137,DP_DSN5,COLOR_WHITE,0
    3054 00012c70                   STR_MAC 7,149,DP_DSN6,COLOR_WHITE,0
    3055 00012cd0                   STR_MAC 7,161,DP_DSN7,COLOR_WHITE,0
    3056 00012d30                   STR_MAC 7,173,DP_DSN8,COLOR_WHITE,0
    3057                    
    3058 00012d90                   STR_MAC 217,89,DP_DSN1,COLOR_WHITE,0
    3059 00012df0                   STR_MAC 217,101,DP_DSN2,COLOR_WHITE,0
    3060 00012e50                   STR_MAC 217,113,DP_DSN3,COLOR_WHITE,0
    3061 00012eb0                   STR_MAC 217,125,DP_DSN4,COLOR_WHITE,0
    3062 00012f10                   STR_MAC 217,137,DP_DSN5,COLOR_WHITE,0
    3063 00012f70                   STR_MAC 217,149,DP_DSN6,COLOR_WHITE,0
    3064 00012fd0                   STR_MAC 217,161,DP_DSN7,COLOR_WHITE,0
    3065 00013030                   STR_MAC 217,173,DP_DSN8,COLOR_WHITE,0
    3066                    
    3067 00013090                   STR_MAC 100,230,DP_INS1,ROBO_LASER,0
    3068                    
    3069 000130f0 00000000          .LONG   0
    3070                    
    3071 00013110           DP_DS1:
    3072 00013110       53          .STRING "SW2",0
    3073 00013130                   .EVEN
    3074 00013130           DP_DS2:
    3075 00013130       53          .STRING "SW1",0
    3076 00013150                   .EVEN
    3077 00013150           DP_DSN1
    3078 00013150       38          .STRING "8",0
    3079 00013160                   .EVEN
    3080 00013160           DP_DSN2
    3081 00013160       37          .STRING "7",0
    3082 00013170                   .EVEN
    3083 00013170           DP_DSN3
    3084 00013170       36          .STRING "6",0
    3085 00013180                   .EVEN
    3086 00013180           DP_DSN4
    3087 00013180       35          .STRING "5",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   71

    3088 00013190                   .EVEN
    3089 00013190           DP_DSN5
    3090 00013190       34          .STRING "4",0
    3091 000131a0                   .EVEN
    3092 000131a0           DP_DSN6
    3093 000131a0       33          .STRING "3",0
    3094 000131b0                   .EVEN    
    3095 000131b0           DP_DSN7
    3096 000131b0       32          .STRING "2",0
    3097 000131c0                   .EVEN
    3098 000131c0           DP_DSN8
    3099 000131c0       31          .STRING "1",0
    3100 000131d0                   .EVEN
    3101                    
    3102 000131d0           TD_ON:
    3103 000131d0       54          .string "TIME/DATE",0
    3104 00013220                   .even
    3105 00013220           TD_OFF:
    3106 00013220       4e          .string "NO TIME/DATE",0
    3107 00013290                   .even
    3108 00013290           DUSECMOS_1:
    3109 00013290       43          .STRING "CMOS COINAGE",0
    3110 00013300                   .EVEN
    3111                    
    3112 00013300           DUSECMOS_0:
    3113 00013300       44          .STRING "DIPSWITCH COINAGE",0
    3114 00013390                   .EVEN
    3115                    
    3116 00013390           DMIRROR_0
    3117 00013390       4d          .STRING "MIRROR DISPLAY",0
    3118 00013410                   .EVEN
    3119                    
    3120 00013410           DMIRROR_1
    3121 00013410       4e          .STRING "NORMAL DISPLAY",0
    3122 00013490                   .EVEN
    3123                    
    3124 00013490           DCOUNTER_0a
    3125 00013490       4f          .STRING "ONE COIN COUNTER",0
    3126 00013520                   .EVEN
    3127 00013520           DCOUNTER_0b
    3128 00013520       31          .STRING "1 COUNT/COIN",0
    3129 00013590                   .EVEN
    3130                    
    3131 00013590           DCOUNTER_1a
    3132 00013590       54          .STRING "TWO COIN COUNTERS",0
    3133 00013620                   .EVEN
    3134 00013620           DCOUNTER_1b
    3135 00013620       31          .STRING "1 COUNT/COIN",0
    3136 00013690                   .EVEN
    3137                    
    3138 00013690           DCOUNTER_2a
    3139 00013690       4f          .STRING "ONE COIN COUNTER",0
    3140 00013720                   .EVEN
    3141 00013720           DCOUNTER_2b
    3142 00013720       54          .STRING "TOTALIZING ",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   72

    3143 00013780                   .EVEN
    3144                    
    3145                    
    3146 00013780           DCOUNTER_TAB
    3147 00013780 00013490'         .LONG   DCOUNTER_0a, DCOUNTER_0b
    3148 000137c0 00013590'         .LONG   DCOUNTER_1a, DCOUNTER_1b
    3149 00013800 00013690'         .LONG   DCOUNTER_2a, DCOUNTER_2b
    3150 00013840 00013490'         .LONG   DCOUNTER_0a, DCOUNTER_0b
    3151                    
    3152 00013880           DCOINAGE
    3153 00013880       43          .STRING "COINAGE",0
    3154 000138c0                   .EVEN
    3155                    
    3156 000138c0           DCOUNTRY_0
    3157 000138c0       55          .STRING "USA",0
    3158 000138e0                   .EVEN
    3159 000138e0           DCOUNTRY_2
    3160 000138e0       46          .STRING "FRENCH",0
    3161 00013920                   .EVEN
    3162                    
    3163                            .if 0
    3164                    DPLAYER_TAB
    3165                            .LONG   DPLAYER_0, DPLAYER_1
    3166                            .endif
    3167                    
    3168 00013920           DCOUNTRY_1
    3169 00013920       47          .STRING "GERMAN",0
    3170 00013960                   .EVEN
    3171                    
    3172 00013960           DCOUNTRY_TAB
    3173 00013960 000138c0'         .LONG   DCOUNTRY_0, DCOUNTRY_1, DCOUNTRY_2, DCOUNTRY_3
    3174                    
    3175 000139e0           DCREDITS
    3176 000139e0       43          .STRING "CREDITS...",0
    3177 00013a40                   .EVEN
    3178 00013a40           DTOSTART
    3179 00013a40       54          .STRING "TO START",0
    3180 00013a90                   .EVEN
    3181 00013a90           DTOCONTINUE
    3182 00013a90       54          .STRING "TO CONTINUE",0
    3183 00013af0                   .EVEN
    3184                    
    3185 00013af0           DTEST_0
    3186 00013af0       54          .STRING "TEST SWITCH",0
    3187 00013b50                   .EVEN
    3188                    
    3189                            .if 0
    3190                    DPLAYER_0
    3191                            .STRING "4 PLAYER KIT",0
    3192                            .EVEN
    3193                    DPLAYER_1
    3194                            .STRING "2 PLAYER KIT",0
    3195                            .EVEN
    3196                            .endif
    3197                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   73

    3198 00013b50           DNOVALIDATOR
    3199 00013b50       4e          .STRING "NO VALIDATOR",0
    3200 00013bc0                   .EVEN
    3201 00013bc0           DVALIDATOR
    3202 00013bc0       56          .STRING "VALIDATOR INST.",0
    3203 00013c40                   .EVEN
    3204 00013c40           DCLIPS
    3205 00013c40       55          .STRING "UNUSED",0
    3206 00013c80                   .EVEN
    3207 00013c80           DNOCLIPS
    3208 00013c80       55          .STRING "UNUSED",0
    3209 00013cc0                   .EVEN
    3210 00013cc0           DPOWER
    3211 00013cc0       50          .STRING "POWERUP TEST",0
    3212 00013d30                   .EVEN
    3213 00013d30           DNOPOWER
    3214 00013d30       53          .STRING "SKIP TEST",0
    3215 00013d80                   .EVEN
    3216                    
    3217 00013d80           DUCOIN7
    3218 00013d80       46          .STRING "FREEPLAY",0
    3219 00013dd0                   .EVEN
    3220                    
    3221 00013dd0           DCOINTAB
    3222 00013dd0 00014040'         .LONG   DUCOINTAB, DGCOINTAB, DFCOINTAB, DUCOINTAB
    3223                    
    3224 00013e50           DP_TITLE
    3225 00013e50       44          .STRING "DIPSWITCH SETTINGS",0
    3226 00013ef0                   .EVEN
    3227                    
    3228 00013ef0           DP_INS1
    3229 00013ef0       50          .STRING "PRESS ANY BUTTON TO EXIT",0
    3230 00013fc0                   .EVEN
    3231                    
    3232 00013fc0           DP_ON
    3233 00013fc0       4f          .STRING "ON",0
    3234 00013fe0                   .EVEN
    3235 00013fe0           DP_OFF
    3236 00013fe0       4f          .STRING "OFF",0
    3237                    
    3238 00014000           DUNUSED
    3239 00014000           DGCOIN4
    3240 00014000           DCOUNTRY_3 
    3241 00014000       55          .STRING "UNUSED",0
    3242 00014040                   .EVEN
    3243                    
    3244 00014040           DUCOINTAB
    3245 00014040 00000000!         .LONG   USA_1,USA_2,USA_3,USA_4,USA_ELECTITLE,DGCOIN4
    3246 00014100 00014000'         .LONG   DGCOIN4,DUCOIN7
    3247                    
    3248 00014140           DGCOINTAB
    3249 00014140 00000000!         .LONG   GERMAN_1,GERMAN_2,GERMAN_3,GERMAN_4,GERMAN_ELECTITLE
    3250 000141e0 00014000'         .LONG   DGCOIN4,DGCOIN4,DUCOIN7
    3251                    
    3252 00014240           DFCOINTAB
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   74

    3253 00014240 00000000!         .LONG   FRENCH_1,FRENCH_2,FRENCH_3,FRENCH_4,FRENCH_ELECTITLE
    3254 000142e0 00014000'         .LONG   DGCOIN4,DGCOIN4,DUCOIN7
    3255                    
    3256 00014340           DCREDTAB
    3257 00014340 00013160'         .LONG   DP_DSN2,DP_DSN1
    3258 00014380 00013150'         .LONG   DP_DSN1,DP_DSN1
    3259 000143c0 00013160'         .LONG   DP_DSN2,DP_DSN2
    3260 00014400 00013170'         .LONG   DP_DSN3,DP_DSN1
    3261 00014440 00013180'         .LONG   DP_DSN4,DP_DSN1
    3262 00014480 00013170'         .LONG   DP_DSN3,DP_DSN2
    3263 000144c0 00013180'         .LONG   DP_DSN4,DP_DSN2
    3264 00014500 00013170'         .LONG   DP_DSN3,DP_DSN3
    3265                    
    3266                    
    3267                            .if 0
    3268                    dip_t
    3269                            STR_MAC 090h,20h,DIPMES0,ROBO_YELLOW,0 ;DIP SWITCH TEST
    3270                            STR_MAC DS1_XPOS+16,3Ch,DIPMES1,ROBO_GREEN,0    ;DIP SWITCH 1
    3271                            STR_MAC DS2_XPOS+16,3Ch,DIPMES2,ROBO_GREEN,0    ;DIP SWITCH 2
    3272                            STR_MAC 200-12*8,220,GETOUT2,ROBO_GREEN,0       ;exit message
    3273                            .LONG   0
    3274                    
    3275                    dipline_t
    3276                            .word   20,10,379,10
    3277                            .word   379,10,379,245
    3278                            .word   379,245,20,245
    3279                            .word   20,245,20,10
    3280                    
    3281                            .word   DS1_XPOS+12,DIP_YPOS-4,         DS1_XPOS+43,DIP_YPOS-4
    3282                            .word   DS1_XPOS+12,DIP_YPOS+109,       DS1_XPOS+43,DIP_YPOS+109
    3283                            .word   DS1_XPOS+12,DIP_YPOS-4,         DS1_XPOS+12,DIP_YPOS+109
    3284                            .word   DS1_XPOS+43,DIP_YPOS-4,         DS1_XPOS+43,DIP_YPOS+109
    3285                    
    3286                            .word   DS2_XPOS+12,DIP_YPOS-4,         DS2_XPOS+43,DIP_YPOS-4
    3287                            .word   DS2_XPOS+12,DIP_YPOS+109,       DS2_XPOS+43,DIP_YPOS+109
    3288                            .word   DS2_XPOS+12,DIP_YPOS-4,         DS2_XPOS+12,DIP_YPOS+109
    3289                            .word   DS2_XPOS+43,DIP_YPOS-4,         DS2_XPOS+43,DIP_YPOS+109
    3290                    
    3291                            .long   -1
    3292                    
    3293                    dipline2
    3294                            .word   DS1_XPOS+45,DIP_YPOS+3,         DS1_XPOS+48,DIP_YPOS+3
    3295                            .word   DS1_XPOS+45,DIP_YPOS+4+5*14,    DS1_XPOS+48,DIP_YPOS+4+5*14
    3296                            .word   DS1_XPOS+48,DIP_YPOS+3,         DS1_XPOS+48,DIP_YPOS+4+5*14
    3297                            .word   DS1_XPOS+49,DIP_YPOS-2+3*14,    DS1_XPOS+51,DIP_YPOS-2+3*14
    3298                            .word   DS1_XPOS+45,DIP_YPOS+4+6*14,    DS1_XPOS+51,DIP_YPOS+4+6*14
    3299                            .word   DS2_XPOS+45,DIP_YPOS+4,         DS2_XPOS+51,DIP_YPOS+4
    3300                            .long   -1
    3301                    
    3302                    country_text
    3303                            .long   cntry0,cntry1,cntry2,cntry3     ;4
    3304                            .long   cntry4,cntry5,cntry6,cntry7     ;8
    3305                            .long   cntry8,cntry9,cntry10,cntry11   ;12
    3306                            .long   cntry12,cntry13,cntry14,cntry15 ;16
    3307                            .long   cntry16,cntry17,cntry18,cntry19 ;20
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   75

    3308                            .long   cntry20,cntry21,cntry22,cntry23 ;24
    3309                            .long   cntry24,cntry25,cntry26,cntry0  ;28
    3310                            .long   cntry0,cntry0,cntry0,cntry0     ;32
    3311                    
    3312                            .long   cntry0,cntry0,cntry0,cntry0     ;36
    3313                            .long   cntry0,cntry0,cntry0,cntry0     ;40
    3314                            .long   cntry0,cntry0,cntry0,cntry0     ;44
    3315                            .long   cntry0,cntry0,cntry0,cntry0     ;48
    3316                            .long   cntry0,cntry0,cntry0,cntry0     ;52
    3317                            .long   cntry0,cntry0,cntry0,cntry0     ;56
    3318                            .long   cntry0,cntry0,cntry0,cntry0     ;60
    3319                            .long   cntry0,cntry0,cntry0,cntry0     ;64
    3320                    
    3321                    cntry0  .string "USA 1",0       ;0
    3322                    cntry1  .string "USA 2",0       ;1
    3323                    cntry2  .string "USA 3",0       ;2
    3324                    cntry3  .string "GERMANY 1",0   ;3
    3325                    cntry4  .string "GERMANY 2",0   ;4
    3326                    cntry5  .string "GERMANY 3",0   ;5
    3327                    cntry6  .string "FRANCE 1",0    ;6
    3328                    cntry7  .string "FRANCE 2",0    ;7
    3329                    cntry8  .string "FRANCE 3",0    ;8
    3330                    cntry9  .string "SWISS 1",0     ;9
    3331                    cntry10 .string "ITALY",0       ;10
    3332                    cntry11 .string "UK 1",0        ;11
    3333                    cntry12 .string "UK 2",0        ;12
    3334                    cntry13 .string "UK ELEC",0     ;13
    3335                    cntry14 .string "SPAIN 1",0     ;14
    3336                    cntry15 .string "AUSTRALIA 1",0 ;15
    3337                    cntry16 .string "JAPAN 1",0     ;16
    3338                    cntry17 .string "JAPAN 2",0     ;17
    3339                    cntry18 .string "AUSTRIA 1",0   ;18
    3340                    cntry19 .string "BELGIUM 1",0   ;19
    3341                    cntry20 .string "BELGIUM 2",0   ;20
    3342                    cntry21 .string "SWEDEN",0      ;21
    3343                    cntry22 .string "NEW ZEALAND",0 ;22
    3344                    cntry23 .string "NETHERLANDS",0 ;23
    3345                    cntry24 .string "FINLAND",0     ;24
    3346                    cntry25 .string "NORWAY",0      ;25
    3347                    cntry26 .string "DENMARK",0     ;26
    3348                    
    3349                    DIP_COIN1       .string "CMOS COINAGE",0
    3350                    DIP_COIN2       .string "DIP COINAGE",0
    3351                    DIP_TESTSW1     .string "TEST MODE",0
    3352                    DIP_TESTSW2     .string "GAME MODE",0
    3353                    
    3354                    DIPMES0 .STRING "DIP SWITCH TEST",0
    3355                    DIPMES1 .STRING "DS1",0
    3356                    DIPMES2 .STRING "DS2",0
    3357                    DIPMES01        .string "1",0
    3358                    DIPMES02        .string "2",0
    3359                    DIPMES03        .string "3",0
    3360                    DIPMES04        .string "4",0
    3361                    DIPMES05        .string "5",0
    3362                    DIPMES06        .string "6",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   76

    3363                    DIPMES07        .string "7",0
    3364                    DIPMES08        .string "8",0
    3365                    DIPMES18
    3366                            .STRING "1 2 3 4 5 6 7 8",0
    3367                    DIPON   .STRING "ON",0
    3368                    DIPOFF  .STRING "OFF",0
    3369                    
    3370                            .endif
    3371                    
    3372 00014540           LEFTSLOT
    3373 00014540       4c          .STRING "LEFT",0
    3374 00014570                   .EVEN
    3375 00014570           RIGHTSLOT
    3376 00014570       52          .STRING "RIGHT",0
    3377 000145a0                   .EVEN
    3378 000145a0           SERVICE1
    3379 000145a0       53          .STRING "SERVICE",0
    3380 000145e0                   .EVEN
    3381 000145e0           SERVICE2
    3382 000145e0       43          .STRING "CREDIT",0
    3383 00014620                   .EVEN
    3384                    
    3385 00014620           COINMESS1
    3386 00014620       43          .STRING "COIN1",0
    3387 00014650                   .EVEN
    3388 00014650           COINMESS2
    3389 00014650       43          .STRING "COIN2",0       
    3390 00014680                   .EVEN
    3391                    
    3392 00014680           CENTER
    3393 00014680       43          .STRING "COIN3",0
    3394 000146b0                   .EVEN
    3395 000146b0           FOURTH
    3396 000146b0       43          .STRING "COIN4",0
    3397 000146e0                   .EVEN
    3398 000146e0       53  SLAM    .string "SLAM",0
    3399 00014710                   .even
    3400 00014710           VOLUPMESS
    3401 00014710       56          .string "VOL UP",0
    3402 00014750                   .even
    3403 00014750           VOLDOWNMESS
    3404 00014750       56          .string "VOL DN",0
    3405 00014790                   .even
    3406 00014790           CDINTERLOCK1
    3407 00014790       43          .string "COINDOOR",0
    3408 000147e0                   .even
    3409 000147e0           CDINTERLOCK2
    3410 000147e0       49          .string "INTERLOCK",0
    3411 00014830                   .even
    3412 00014830           BILLVALID
    3413 00014830       42          .string "BILL IN",0
    3414 00014870                   .even
    3415                    
    3416 00014870           TEST
    3417 00014870       54          .STRING "TEST",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   77

    3418 000148a0                   .EVEN
    3419 000148a0           SEC_MESS_1
    3420 000148a0       4c          .string "LEVEL 1 SECURITY CHECK",0
    3421 00014960                   .even
    3422 00014960           SEC_MESS_2
    3423 00014960       4c          .string "LEVEL 2 SECURITY CHECK FAILURE",0
    3424 00014a60                   .even
    3425                    
    3426                    
    3427 00014a60       4a  J1MESS  .string "JOY1",0
    3428 00014a88       4a  J2MESS  .string "JOY2",0
    3429                    
    3430 00014ab0       50  GETOUT2 .STRING "PRESS ANY BUTTON TO EXIT",0
    3431 00014b78       50  GETOUT1 .STRING "PRESS START 1 AND START 2 TO EXIT",0
    3432 00014c90                   .EVEN
    3433                    
    3434 00014c90       57  STSTART .STRING "WRESTLEMANIA SWITCHES",0
    3435 00014d40                   .EVEN
    3436                    
    3437 00014d40       53  P1START .STRING "START 1",0
    3438 00014d80                   .EVEN
    3439 00014d80       53  P2START .STRING "START 2",0
    3440 00014dc0                   .EVEN
    3441                    
    3442 00014dc0           LEFTMESS
    3443 00014dc0       4c          .STRING "LFT",0
    3444 00014de0                   .EVEN
    3445 00014de0           RIGHTMESS
    3446 00014de0       52          .STRING "RT",0
    3447 00014e00                   .EVEN
    3448 00014e00           UPMESS
    3449 00014e00       55          .STRING "UP",0
    3450 00014e20                   .EVEN
    3451 00014e20           DOWNMESS
    3452 00014e20       44          .STRING "DWN",0
    3453 00014e40                   .EVEN
    3454                    
    3455 00014e40           P1MOVE
    3456 00014e40       50          .STRING "P1 MOVE",0
    3457 00014e80                   .EVEN
    3458 00014e80           P2MOVE
    3459 00014e80       50          .STRING "P2 MOVE",0
    3460 00014ec0                   .EVEN
    3461                    
    3462                    
    3463                    
    3464 00014ec0           INITCOLR
    3465                    
    3466 00014ec0     09e0          MOVI    COLRAM,A0,L             ; PALETTE LOCATION
         00014ed0 01880000  
    3467 00014ef0     09e1          MOVI    DIAGP,A1,L
         00014f00 00000000! 
    3468 00014f20     9422          MOVE    *A1+,A2,W               ; LENGTH OF PALETTE
    3469 00014f30           LPLP1
    3470 00014f30     9820          MOVE    *A1+,*A0+,W
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   78

    3471 00014f40     3c42          DSJS    A2,LPLP1                ; KEEP ON CHUGGIN, BABY
    3472                    
    3473 00014f50     57ce          CLR  A14
    3474 00014f60     058e          MOVE A14, @CMAPSEL
         00014f70 01a80080  
    3475                    
    3476 00014f90                   FRET B5
    3477                    
    3478 00014fa0           POINT:
    3479 00014fa0     0b00          ADDI    SCRXFUDGE,A0
         00014fb0     0038  
    3480                    
    3481 00014fc0     09d3          MOVI SCRN_PTCH, DPTCH
         00014fd0     1000  
    3482 00014fe0     5694          CLR  OFFSET
    3483                    
    3484 00014ff0     6a7a          LMO  DPTCH, B10
    3485 00015000     059a          MOVE B10, @CONVDP
         00015010 c0000140  
    3486                    
    3487 00015030     f020          PIXT A1, *A0.XY
    3488                    
    3489 00015040                   FRET B6
    3490                    
    3491                    
    3492 00015050           RECTANGLE:
    3493 00015050     0b00          ADDI    SCRXFUDGE,A0
         00015060     0038  
    3494                    
    3495 00015070     09d3          MOVI SCRN_PTCH, DPTCH
         00015080     1000  
    3496 00015090     5694          CLR  OFFSET
    3497                    
    3498 000150a0     6a7a          LMO  DPTCH, B10
    3499 000150b0     059a          MOVE B10, @CONVDP
         000150c0 c0000140  
    3500                    
    3501 000150e0     4e49          MOVE A2, COLOR1
    3502 000150f0     4e02          MOVE A0, DADDR
    3503 00015100     4e27          MOVE A1, DYDX
    3504 00015110     0781          move    a1,@_temporary,L        ;Temporary Storage fer these
         00015120 00000100- 
    3505 00015140     4e40          move    a2,SADDR
    3506 00015150     05a1          move    @CONTROL,a1,W
         00015160 c00000b0  
    3507 00015180     4c22          move    a1,a2
    3508 00015190     0b82          andni   020h,a2
         000151a0 00000020  
    3509 000151c0     0582          move    a2,@CONTROL,W           ; Pixel Transparency OFF
         000151d0 c00000b0  
    3510 000151f0     4c42          move    a2,a2
    3511                    
    3512 00015200     0fe0          FILL  XY
    3513                    
    3514 00015210     0581          move    a1,@CONTROL,W           ; Restore Pixel Transparency
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   79

         00015220 c00000b0  
    3515 00015240     4e12          move    SADDR,a2                ; Restore these reggies
    3516 00015250     07a1          move    @_temporary,a1,L
         00015260 00000100- 
    3517                    
    3518 00015280     0be0          SUBI    SCRXFUDGE,A0
         00015290     ffc7  
    3519                    
    3520 000152a0                   FRET B6
    3521                    
    3522                    
    3523 000152b0           HVLINE
    3524 000152b0     09c3          MOVI    SCRXFUDGE,A3
         000152c0     0038  
    3525 000152d0     e060          ADDXY   A3,A0
    3526 000152e0     e061          ADDXY   A3,A1
    3527                    
    3528 000152f0     09d3          MOVI    SCRN_PTCH,DPTCH
         00015300     1000  
    3529 00015310     5694          CLR     OFFSET
    3530                    
    3531 00015320     6a7a          LMO     DPTCH,B10
    3532 00015330     059a          MOVE    B10,@CONVDP
         00015340 c0000140  
    3533                    
    3534 00015360     4e49          MOVE    A2,COLOR1
    3535                    
    3536 00015370     1822          MOVK    1, A2                   ; DRAV DX: ASSUME HORIZONTAL LINE
    3537                    
    3538 00015380     4c03          MOVE    A0,A3                   ; DETERMINE (P2 > P1) OR (P2 < P1)
    3539 00015390     e863          CVXYL   A3,A3
    3540                    
    3541 000153a0     4c24          MOVE    A1,A4
    3542 000153b0     e884          CVXYL   A4,A4
    3543                    
    3544 000153c0     4864          CMP     A3,A4                   ; IF (P2 < P1) ~(INCREMENT)
    3545 000153d0     c102          JRP     $100
    3546                    
    3547 000153e0     03a2          NEG     A2                      ; INCREMENT IS A SIGNED WORD
    3548 000153f0     0522          ZEXT    A2
    3549                    
    3550 00015400     e401  $100    CMPXY   A0,A1                   ; IF VERTICAL LINE
    3551 00015410     ca01          JRZ     $110                    ; DRAV DX -> DRAV DY
    3552 00015420     2602          SLL     16,A2
    3553                            
    3554 00015430     f640  $110    DRAV    A2,A0                   ; DRAW LINE
    3555 00015440     e401          CMPXY   A0,A1
    3556 00015450     cffd          JRNN    $110
    3557 00015460     cbfc          JRNZ    $110
    3558                    
    3559 00015470                   FRET B6
    3560                    
    3561                    
    3562                    
    3563 00015480            SUBRP  line_draw
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   80

    3564                    
    3565 00015480     0b00          ADDI    SCRXFUDGE,A0
         00015490     0038  
    3566 000154a0     0b01          ADDI    SCRXFUDGE,A1
         000154b0     0038  
    3567                    
    3568 000154c0     4e49          move    a2,COLOR1
    3569 000154d0     09d3          movi    SCRN_PTCH,DPTCH
         000154e0     1000  
    3570 000154f0     5694          clr     OFFSET          ;B4
    3571 00015500     6a70          lmo     DPTCH,b0
    3572 00015510     0590          move    b0,@CONVDP
         00015520 c0000140  
    3573                    
    3574 00015540     4e02          move    a0,b2           ;YX strt
    3575 00015550     4e2a          move    a1,b10          ;YX end
    3576 00015560     56f7          clr     b7              ;b:a
    3577 00015570     e25a          subxy   b2,b10
    3578 00015580     c90b          jrnc    bpos
    3579 00015590     cd04          jrnv    bneg_apos
    3580 000155a0     e357          subxy   b10,b7
    3581 000155b0     09db          movi    -1,b11
         000155c0     ffff  
    3582 000155d0     c011          jruc    cmp_b_a
    3583 000155e0           bneg_apos
    3584 000155e0     e357          subxy   b10,b7
    3585 000155f0     ed57          movx    b10,b7
    3586 00015600     09fb          movi    0ffff0000H,b11
         00015610 ffff0000  
    3587 00015630     c00b          jruc    cmp_b_a
    3588 00015640     cd06  bpos    jrnv    bpos_apos
    3589 00015650           bpos_aneg
    3590 00015650     e357          subxy   b10,b7
    3591 00015660     ef57          movy    b10,b7
    3592 00015670     09fb          movi    01ffffH,b11
         00015680 0001ffff  
    3593 000156a0     c004          jruc    cmp_b_a
    3594 000156b0           bpos_apos
    3595 000156b0     4d57          move    b10,b7
    3596 000156c0     09fb          movi    010001H,b11
         000156d0 00010001  
    3597 000156f0     579c  cmp_b_a clr     b12
    3598                    
    3599 00015700     4cf0          move    b7,b0
    3600 00015710     2e10          srl     16,b0
    3601 00015720     575a          clr     b10
    3602 00015730     ecfa          movx    b7,b10
    3603 00015740     481a          cmp     b0,b10
    3604 00015750     c70b          jrgt    a_ge_b
    3605                    
    3606 00015760     4c1a          move    b0,b10
    3607 00015770     ecf0          movx    b7,b0
    3608 00015780     3217          rl      16,b7           ;Swap b:a
    3609 00015790     ef7c          movy    b11,b12
    3610 000157a0     2430          sll     1,b0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   81

    3611 000157b0     4550          sub     b10,b0
    3612 000157c0     103a          addk    1,b10
    3613 000157d0     4d7b          move    b11,b11
    3614 000157e0     ce07          jrn     line1
    3615 000157f0     df1a  line0   line    0
    3616 00015800     c006          jruc    ldx
    3617                    
    3618 00015810     ed7c  a_ge_b  movx    b11,b12
    3619 00015820     2430          sll     1,b0
    3620 00015830     4550          sub     b10,b0
    3621 00015840     4d7b          move    b11,b11
    3622 00015850     cff9          jrnn    line0
    3623 00015860     df9a  line1   line    1
    3624                    
    3625 00015870           ldx     FRET B6
    3626                    
    3627                    
    3628 00015880           STRNEW1
    3629 00015880     098f          MMTM    SP,A1,A2,A3,A4,A5,A6
         00015890     7e00  
    3630 000158a0                   FCALL   STRING,B6
    3631 000158e0     09af          MMFM    SP,A1,A2,A3,A4,A5,A6
         000158f0     007e  
    3632 00015900     0960          RETS
    3633 00015910           STRNEW
    3634 00015910                   PUSH    a0
    3635 00015920     0d3f          CALLR   STRNEW1
         00015930     fff4  
    3636 00015940     09af          MMFM    SP,A0
         00015950     0001  
    3637 00015960     0960          RETS
    3638                    
    3639 00015970           STRING
    3640 00015970     0b01          ADDI    SCRXFUDGE,A1
         00015980     0038  
    3641                    
    3642 00015990     09d3          MOVI    SCRN_PTCH,DPTCH
         000159a0     1000  
    3643 000159b0     5694          CLR     OFFSET
    3644                    
    3645 000159c0     6a7a          LMO     DPTCH,B10
    3646 000159d0     059a          MOVE    B10,@CONVDP
         000159e0 c0000140  
    3647                    
    3648 00015a00     4e69          MOVE    A3,COLOR1 
    3649 00015a10     5718          CLR     COLOR0
    3650                    
    3651                    
    3652 00015a20     8e04  $200    MOVB    *A0,A4                  ;GET CHARACTER
    3653 00015a30     ca2d          JRZ     $230                    ;QUIT IF NULL
    3654                    
    3655 00015a40     1100          ADDK    8,A0
    3656 00015a50     1404          SUBK    32,A4                   ;GET POINTER TO CHARACTER HEADER
    3657 00015a60     2464          SLL     3,A4
    3658 00015a70     0b24          ADDI    SYSFONT,A4,L
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   82

         00015a80 0001b8e0' 
    3659 00015aa0     8e84          MOVB    *A4,A4
    3660 00015ab0     24a4          SLL     5,A4
    3661 00015ac0     0b24          ADDI    T2_SP,A4
         00015ad0 0001b3e0' 
    3662 00015af0     9485          MOVE    *A4+,A5                 ;CHAR DIMENSIONS
    3663 00015b00     4ca6          MOVE    A5,A6                   ;SPLIT UP BYTE
    3664 00015b10     2586          SLL     12,A6                   ;SHIFT UP HEIGHT TO Y
    3665 00015b20     2785          SLL     28,A5                   ;STRIP AWAY HEIGHT
    3666 00015b30     2c85          SRL     28,A5
    3667 00015b40     eec5          MOVY    A6,A5
    3668 00015b50     3205          RL      16,A5
    3669 00015b60     4ea7          MOVE    A5,DYDX
    3670                    
    3671 00015b70     56c6          CLR     A6                      ;A6 = CHAR WIDTH
    3672 00015b80     eca6          MOVX    A5,A6
    3673                    
    3674 00015b90     10e6          ADDK    7, A6                   ;ROUND UP WIDTH TO INTEGRAL NUMBER
    3675 00015ba0     2fa6          SRL     3, A6                   ;OF BYTES = SOURCE PITCH
    3676 00015bb0     2466          SLL     3, A6
    3677 00015bc0     4ec1          MOVE    A6,SPTCH
    3678                    
    3679 00015bd0     8486          MOVE    *A4,A6                  ;CHAR DATA
    3680 00015be0     0b26          ADDI    CBASE,A6
         00015bf0 0001bab8' 
    3681 00015c10     4ec0          MOVE    A6,SADDR
    3682                            
    3683 00015c20     4e22          MOVE    A1,DADDR
    3684                    
    3685 00015c30     0fa0          PIXBLT  B,XY
    3686                    
    3687 00015c40     56c6          CLR     A6
    3688 00015c50     4c42          MOVE    A2,A2
    3689 00015c60     ca06          JRZ     $210
    3690                    
    3691 00015c70     eea6          MOVY    A5,A6                   ;A1 += (CHAR HEIGHT + SPACING)
    3692 00015c80     2e06          SRL     16,A6                   ;DIRECTION = DOWN
    3693 00015c90     1026          ADDK    1,A6
    3694 00015ca0     2606          SLL     16,A6
    3695 00015cb0     40c1          ADD     A6,A1
    3696 00015cc0     c0d5          JRUC    $200
    3697                            
    3698 00015cd0     eca6  $210    MOVX    A5,A6                   ;A1 += (CHAR WIDTH + SPACING)
    3699 00015ce0     1046          ADDK    2,A6                    ;DIRECTION = RIGHT
    3700 00015cf0     40c1          ADD     A6,A1
    3701 00015d00     c0d1          JRUC    $200
    3702                    
    3703 00015d10           $230                                    ;SETF 16, 1, 0
    3704 00015d10                   FRET B6
    3705                    
    3706 00015d20           STRINGCENTER:
    3707 00015d20     0548          SETF    8, 0, 0
    3708 00015d30     5621          CLR     A1
    3709 00015d40     4c02          MOVE    A0,A2
    3710 00015d50           SPLLOOP
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   83

    3711 00015d50     9404          MOVE    *A0+, A4                ; GET THE CHAR
    3712 00015d60     ca10          JRZ     SPLEND                  ; END OF STRING
    3713                    
    3714 00015d70     1404          SUBK    32, A4                  ; GET POINTER TO CHARACTER HEADER
    3715                    
    3716 00015d80     2464          SLL     3,A4
    3717 00015d90     0b24          ADDI    SYSFONT,A4,L
         00015da0 0001b8e0' 
    3718 00015dc0     8e84          MOVB    *A4,A4
    3719 00015dd0     24a4          SLL     5,A4
    3720 00015de0     0b24          ADDI    T2_SP,A4
         00015df0 0001b3e0' 
    3721                    
    3722 00015e10     9685          MOVE    *A4+, A5, 1             ; CHAR DIMENSIONS
    3723 00015e20     0525          ZEXT    A5
    3724                    
    3725 00015e30     2f85          SRL     4,A5                    ; GET JUST THE X DIMENSION
    3726                    
    3727                            
    3728 00015e40     1045          ADDK    2H, A5                  ; GIVE IN TO SPACING
    3729 00015e50     40a1          ADD     A5, A1
    3730 00015e60     c0ee          JRUC    SPLLOOP
    3731                    
    3732 00015e70           SPLEND
    3733 00015e70     0570          SETF    16, 1, 0
    3734 00015e80     4c40          MOVE    A2,A0                   ; RESTORE STRING ADDRESS
    3735 00015e90     2fe1          SRL     1,A1
    3736 00015ea0     09c2          MOVI    200,A2
         00015eb0     00c8  
    3737 00015ec0     4422          SUB     A1,A2
    3738 00015ed0     4c41          MOVE    A2,A1
    3739 00015ee0                   FRET    B6
    3740                    
    3741                    
    3742 00015ef0           CIRCLE
    3743 00015ef0     0b01          ADDI    SCRXFUDGE,A1
         00015f00     0038  
    3744                    
    3745 00015f10     09e7          movi  plot8,a7               ; assume no fill
         00015f20 000161b0' 
    3746 00015f40     1de6          btst  16,a6
    3747 00015f50     ca03          jrz   CIRC0
    3748 00015f60     09e7          movi  fill4,a7
         00015f70 00016330' 
    3749 00015f90           CIRC0
    3750 00015f90     09d3          movi    SCRN_PTCH,DPTCH         ;Restore screen pitch and convdp
         00015fa0     1000  
    3751 00015fb0     1a7a          movk    013H,b10                        ;this is faster
    3752 00015fc0     059a          MOVE    B10,@CONVDP
         00015fd0 c0000140  
    3753 00015ff0     4ec9          MOVE    A6,COLOR1
    3754 00016000     09f7          movi    [1,0],DYDX               ; Y width always 1
         00016010 00010000  
    3755                    
    3756 00016030     5642          clr     a2                    ; x = 0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   84

    3757 00016040     4c03          move    a0,a3                 ; y = r
    3758 00016050     4c04          move    a0,a4
    3759 00016060     2424          sll     1,a4
    3760 00016070     1464          subk    3,a4
    3761 00016080     03a4          neg     a4                   ; d = 3 - 2*r
    3762 00016090           cloop
    3763 00016090     4862          cmp     a3,a2                ; if x > y, we are done
    3764 000160a0     c70f          jrgt    done
    3765                    
    3766 000160b0     4ee0          MOVE    A7,B0                ; PLOT ROUTINE
    3767 000160c0     0130          EXGPC   B0
    3768                    
    3769 000160d0     4c45          move  a2,a5                  ; x -> a5
    3770 000160e0     1c04          btst  31,a4
    3771 000160f0     ca03          jrz   dpos                   ; branch if d is positive
    3772                    
    3773                    
    3774 00016100     2445          sll   2,a5                   ; 4*x -> a5
    3775 00016110     10c5          addk  6,a5                   ; 4*x+6 -> a5
    3776 00016120     c004          jruc  cont
    3777                    
    3778                    
    3779 00016130     4465  dpos    sub   a3,a5                  ; x-y -> a5
    3780 00016140     2445          sll   2,a5                   ; 4*(x-y) -> a5
    3781 00016150     1145          addk  10,a5                  ; 4*(x-y)+10 -> a5
    3782 00016160     1423          subk  1,a3                   ; y = y - 1
    3783                    
    3784 00016170     40a4  cont    add   a5,a4                  ; d = d + a5
    3785 00016180     1022          addk  1,a2                   ; x = x + 1
    3786 00016190     c0ef          jruc  cloop
    3787                    
    3788 000161a0           done    FRET B6
    3789                    
    3790 000161b0           plot8
    3791 000161b0     4c65          move  a3,a5
    3792 000161c0     03a5          neg   a5                   ; -y into a5; +y in a3
    3793 000161d0     2605          sll   16,a5
    3794 000161e0     2603          sll   16,a3
    3795 000161f0     ec45          movx  a2,a5                ; a3 = (y:x)
    3796 00016200     ec43          movx  a2,a3                ; a5 = (-y:x)
    3797                    
    3798 00016210     1848          movk  2,a8
    3799 00016220           put4
    3800 00016220     4c20          move  a1,a0                ; center (Y:X) in a0
    3801 00016230     e060          addxy a3,a0                ; (cx+x),(cy+y)
    3802 00016240     f0c0          pixt  a6,*a0.XY
    3803 00016250     4c20          move  a1,a0                ; center (Y:X) in a0
    3804 00016260     e0a0          addxy a5,a0                ; (cx+x),(cy-y)
    3805 00016270     f0c0          pixt  a6,*a0.XY
    3806 00016280     4c20          move  a1,a0                ; center (Y:X) in a0
    3807 00016290     e260          subxy a3,a0                ; (cx-x),(cy-y)
    3808 000162a0     f0c0          pixt  a6,*a0.XY
    3809 000162b0     4c20          move  a1,a0                ; center (Y:X) in a0
    3810 000162c0     e2a0          subxy a5,a0                ; (cx-x),(cy+y)
    3811 000162d0     f0c0          pixt  A6,*a0.XY
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   85

    3812 000162e0     3203          rl    16,a3
    3813 000162f0     3205          rl    16,a5                ; transpose x and y  
    3814 00016300     3de8          dsj   a8,put4
    3815 00016310     2a03          sra   16,a3                ; restore y
    3816                    
    3817 00016320                   FRET    B0
    3818                    
    3819 00016330           fill4:
    3820 00016330     4e4a          move  a2,b10               ; x
    3821 00016340     243a          sll   1,b10                ; 2x
    3822 00016350     ed57          movx  b10,DYDX             ; delta x = 2x
    3823 00016360     4c65          move  a3,a5
    3824 00016370     03a5          neg   a5                   ; -y into a5      +y in a3
    3825 00016380     2605          sll   16,a5
    3826 00016390     2603          sll   16,a3
    3827 000163a0     ec45          movx  a2,a5                ; a3 = (y:x)
    3828 000163b0     ec43          movx  a2,a3                ; a5 = (-y:x)
    3829 000163c0     1848          movk  2,a8
    3830 000163d0           put2:   
    3831 000163d0     4c20          move  a1,a0
    3832 000163e0     e2a0          subxy a5,a0
    3833 000163f0     4e02          move  a0,DADDR
    3834 00016400     0fe0          fill  XY
    3835                    
    3836 00016410     4c20          move  a1,a0
    3837 00016420     e260          subxy a3,a0
    3838 00016430     4e02          move  a0,DADDR
    3839 00016440     0fe0          fill  XY
    3840 00016450     3203          rl    16,a3                ; a3 = (x:y)
    3841 00016460     3205          rl    16,a5                ; transpose x and y  
    3842 00016470     56c6          clr   a6
    3843 00016480     e2a6          subxy a5,a6
    3844 00016490     4cc5          move  a6,a5                ; a5 = (-x:y)
    3845 000164a0     4e6a          move  a3,b10               ; y
    3846 000164b0     243a          sll   1,b10                ; 2y
    3847 000164c0     ed57          movx  b10,DYDX             ; delta x = 2y
    3848 000164d0     3e28          dsj   a8,put2
    3849 000164e0     2a03          sra   16,a3                ; restore y
    3850                    
    3851 000164f0                   FRET B0
    3852                    
    3853 00016500           DSCRCLR
    3854 00016500     5652          CLR     B2
    3855 00016510           DSWRITE
    3856 00016510     5673          CLR     B3
    3857 00016520     0593          MOVE    B3,@DMACMAP,0
         00016530 01a00080  
    3858 00016550     09f3          MOVI    SCREEN,B3,L
         00016560 00000000  
    3859 00016580     09f4          MOVI    (SCRNE-SCREEN)/32,B4,L
         00016590 00010000  
    3860 000165b0     9253  SCRLP   MOVE    B2,*B3+,L
    3861 000165c0     3c54          DSJS    B4,SCRLP
    3862 000165d0                   FRET    B6
    3863                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   86

    3864                    
    3865                    
    3866                    
    3867 000165e0           CPU_VECS:
    3868 000165e0                   VECMAC  COLOR_WHITE,5,5,5,243           ; BOARD OUTLINE
    3869 00016630                   VECMAC  COLOR_WHITE,5,243,390,243
    3870 00016680                   VECMAC  COLOR_WHITE,390,243,390,5
    3871 000166d0                   VECMAC  COLOR_WHITE,390,5,355,5
    3872 00016720                   VECMAC  COLOR_WHITE,355,5,355,10
    3873 00016770                   VECMAC  COLOR_WHITE,355,10,343,10
    3874 000167c0                   VECMAC  COLOR_WHITE,343,10,343,5
    3875 00016810                   VECMAC  COLOR_WHITE,343,5,326,5
    3876 00016860                   VECMAC  COLOR_WHITE,326,5,326,10
    3877 000168b0                   VECMAC  COLOR_WHITE,326,10,323,10
    3878 00016900                   VECMAC  COLOR_WHITE,323,10,323,5
    3879 00016950                   VECMAC  COLOR_WHITE,323,5,212,5
    3880 000169a0                   VECMAC  COLOR_WHITE,212,5,212,10
    3881 000169f0                   VECMAC  COLOR_WHITE,212,10,200,10
    3882 00016a40                   VECMAC  COLOR_WHITE,200,10,200,5
    3883 00016a90                   VECMAC  COLOR_WHITE,200,5,5,5
    3884 00016ae0 00000000          .LONG   0
    3885                    
    3886              0005  CPUXBASE        EQU     5
    3887              0005  CPUYBASE        EQU     5
    3888                    
    3889                    
    3890 00016b00           CPU_CHIPS:
    3891 00016b00           CRAM1   CHIPMAC 0,347,152,30,13,5,3,CNAMEU36,0,28,2,1   ; COLOR RAM (U36)
    3892 00016bd0           CRAM2   CHIPMAC 1,313,152,30,13,5,3,CNAMEU37,0,28,2,1   ; COLOR RAM (U37)
    3893                    
    3894 00016ca0           VRAM1   CHIPMAC 2,347,207,38,13,8,3,CNAMEU14,0,36,2,1   ; BANK 1 VIDEO RAM (U14)
    3895 00016d70           VRAM2   CHIPMAC 3,307,207,38,13,8,3,CNAMEU15,0,36,2,1   ;   (PALETTE) (U15)
    3896 00016e40           VRAM3   CHIPMAC 4,267,207,38,13,8,3,CNAMEU16,0,36,2,1   ; (U16)
    3897 00016f10           VRAM4   CHIPMAC 5,227,207,38,13,8,3,CNAMEU17,0,36,2,1   ; (U17)
    3898                    
    3899 00016fe0           VRAM5   CHIPMAC 6,347,225,38,13,8,3,CNAMEU10,0,36,2,1   ; BANK 2 VIDEO RAM (U10)
    3900 000170b0           VRAM6   CHIPMAC 7,307,225,38,13,8,3,CNAMEU11,0,36,2,1   ;   (PIXEL) (U11)
    3901 00017180           VRAM7   CHIPMAC 8,267,225,38,13,8,3,CNAMEU12,0,36,2,1   ; (U12)
    3902 00017250           VRAM8   CHIPMAC 9,227,225,38,13,8,3,CNAMEU13,0,36,2,1   ; (U13)
    3903                    
    3904 00017320           CPU     CHIPMAC 0,330,50,35,35,7,13,CNAMEU59,0,3,3,1    ; CPU (U59)
    3905                    
    3906 000173f0           DMA     CHIPMAC 0,246,157,38,38,8,16,CNAMEU33,0,3,3,1   ; DMA (U33)
    3907                    
    3908 000174c0           PROM1   CHIPMAC 1,220,65,40,13,9,3,CNAMEU63,0,38,2,1    ; PROGRAM ROM 1 (U63)
    3909 00017590           PROM2   CHIPMAC 0,220,83,40,13,9,3,CNAMEU54,0,38,2,1    ; PROGRAM ROM 2 (U54)
    3910                    
    3911 00017660           IROM1   CHIPMAC 1,10,122,40,13,6,3,  CNAMEU133,0,38,2,1 ; IMAGE ROM (U133)
    3912 00017730           IROM2   CHIPMAC 2,52,122,40,13,6,3,  CNAMEU132,0,38,2,1 ; IMAGE ROM (U132)
    3913 00017800           IROM3   CHIPMAC 3,94,122,40,13,6,3,  CNAMEU131,0,38,2,1 ; IMAGE ROM (U131)
    3914 000178d0           IROM4   CHIPMAC 4,136,122,40,13,6,3, CNAMEU130,0,38,2,1 ; IMAGE ROM (U130)
    3915                    
    3916 000179a0           IROM5   CHIPMAC 5,10,137,40,13,6,3,  CNAMEU129,0,38,2,1 ; IMAGE ROM (U129)
    3917 00017a70           IROM6   CHIPMAC 6,52,137,40,13,6,3,  CNAMEU128,0,38,2,1 ; IMAGE ROM (U128)
    3918 00017b40           IROM7   CHIPMAC 7,94,137,40,13,6,3,  CNAMEU127,0,38,2,1 ; IMAGE ROM (U127)
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   87

    3919 00017c10           IROM8   CHIPMAC 8,136,137,40,13,6,3, CNAMEU126,0,38,2,1 ; IMAGE ROM (U126)
    3920                    
    3921 00017ce0           IROM9   CHIPMAC 9,10,152,40,13,6,3,  CNAMEU125,0,38,2,1 ; IMAGE ROM (U125)
    3922 00017db0           IROM10  CHIPMAC 10,52,152,40,13,6,3, CNAMEU124,0,38,2,1 ; IMAGE ROM (U124)
    3923 00017e80           IROM11  CHIPMAC 11,94,152,40,13,6,3, CNAMEU123,0,38,2,1 ; IMAGE ROM (U123)
    3924 00017f50           IROM12  CHIPMAC 12,136,152,40,13,6,3,CNAMEU122,0,38,2,1 ; IMAGE ROM (U122)
    3925                    
    3926 00018020           IROM13  CHIPMAC 13,10,167,40,13,6,3, CNAMEU121,0,38,2,1 ; IMAGE ROM (U121)
    3927 000180f0           IROM14  CHIPMAC 14,52,167,40,13,6,3, CNAMEU120,0,38,2,1 ; IMAGE ROM (U120)
    3928 000181c0           IROM15  CHIPMAC 15,94,167,40,13,6,3, CNAMEU119,0,38,2,1 ; IMAGE ROM (U119)
    3929 00018290           IROM16  CHIPMAC 16,136,167,40,13,6,3,CNAMEU118,0,38,2,1 ; IMAGE ROM (U118)
    3930                    
    3931 00018360           IROM17  CHIPMAC 17,10,182,40,13,6,3, CNAMEU117,0,38,2,1 ; IMAGE ROM (U117)
    3932 00018430           IROM18  CHIPMAC 18,52,182,40,13,6,3, CNAMEU116,0,38,2,1 ; IMAGE ROM (U116)
    3933 00018500           IROM19  CHIPMAC 19,94,182,40,13,6,3, CNAMEU115,0,38,2,1 ; IMAGE ROM (U115)
    3934 000185d0           IROM20  CHIPMAC 20,136,182,40,13,6,3,CNAMEU114,0,38,2,1 ; IMAGE ROM (U114)
    3935                    
    3936 000186a0           IROM21  CHIPMAC 21,10,197,40,13,6,3, CNAMEU113,0,38,2,1 ; IMAGE ROM (U113)
    3937 00018770           IROM22  CHIPMAC 22,52,197,40,13,6,3, CNAMEU112,0,38,2,1 ; IMAGE ROM (U112)
    3938 00018840           IROM23  CHIPMAC 23,94,197,40,13,6,3, CNAMEU111,0,38,2,1 ; IMAGE ROM (U111)
    3939 00018910           IROM24  CHIPMAC 24,136,197,40,13,6,3,CNAMEU110,0,38,2,1 ; IMAGE ROM (U110)
    3940                    
    3941 000189e0           IROM25  CHIPMAC 25,10,212,40,13,6,3, CNAMEU109,0,38,2,1 ; IMAGE ROM (U109)
    3942 00018ab0           IROM26  CHIPMAC 26,52,212,40,13,6,3, CNAMEU108,0,38,2,1 ; IMAGE ROM (U108)
    3943 00018b80           IROM27  CHIPMAC 27,94,212,40,13,6,3, CNAMEU107,0,38,2,1 ; IMAGE ROM (U107)
    3944 00018c50           IROM28  CHIPMAC 28,136,212,40,13,6,3,CNAMEU106,0,38,2,1 ; IMAGE ROM (U106)
    3945                    
    3946 00018d20           IROM29  CHIPMAC 29,10,227,40,13,6,3, CNAMEU105,0,38,2,1 ; IMAGE ROM (U105)
    3947 00018df0           IROM30  CHIPMAC 30,52,227,40,13,6,3, CNAMEU104,0,38,2,1 ; IMAGE ROM (U104)
    3948 00018ec0           IROM31  CHIPMAC 31,94,227,40,13,6,3, CNAMEU103,0,38,2,1 ; IMAGE ROM (U103)
    3949 00018f90           IROM32  CHIPMAC 32,136,227,40,13,6,3,CNAMEU102,0,38,2,1 ; IMAGE ROM (U102)
    3950                    
    3951 00019060           SRAM1   CHIPMAC 0,225,101,30,13,4,3,CNAMEU49,0,28,2,1   ; SCRATCH PAD (U49)
    3952                    
    3953 00019130           PIC     CHIPMAC 0,177,65,40,13,9,3,CNAMEU64,0,38,2,1    ; PIC CHIP (U64)
    3954                    
    3955 00019200           SROM1   CHIPMAC 1,49,57,40,13,14,3, CNAMEU2,0,38,2,1    ; Sound Rom (U2)
    3956 000192d0           SROM2   CHIPMAC 2,49,72,40,13,14,3, CNAMEU3,0,38,2,1    ; Sound Rom (U3)
    3957 000193a0           SROM3   CHIPMAC 3,49,87,40,13,14,3, CNAMEU4,0,38,2,1    ; Sound Rom (U4)
    3958 00019470           SROM4   CHIPMAC 4,49,102,40,13,14,3,CNAMEU5,0,38,2,1    ; Sound Rom (U5)
    3959 00019540           SROM5   CHIPMAC 5,7,57,40,13,14,3,  CNAMEU6,0,38,2,1    ; Sound Rom (U6)
    3960 00019610           SROM6   CHIPMAC 6,7,72,40,13,14,3,  CNAMEU7,0,38,2,1    ; Sound Rom (U7)
    3961 000196e0           SROM7   CHIPMAC 7,7,87,40,13,14,3,  CNAMEU8,0,38,2,1    ; Sound Rom (U8)
    3962 000197b0           SROM8   CHIPMAC 8,7,102,40,13,14,3, CNAMEU9,0,38,2,1    ; Sound Rom (U9)
    3963                    
    3964 00019880           DSP     CHIPMAC 0,118,77,35,35,13,13,CNAMEU1,0,3,3,1    ; Sound DSP (U1)
    3965                    
    3966 00019950           SNDRAM1 CHIPMAC 1,115,29,40,13,9,3,CNAMEU86,0,38,2,1    ; Sound Ram 1 (U86)
    3967 00019a20           SNDRAM2 CHIPMAC 2,115,44,40,13,9,3,CNAMEU80,0,38,2,1    ; Sound Ram 2 (U80)
    3968 00019af0           SNDRAM3 CHIPMAC 3,115,59,40,13,9,3,CNAMEU73,0,38,2,1    ; Sound Ram 3 (U73)
    3969 00019bc0 00000000          .LONG   0
    3970                    
    3971 00019be0 00016b00' VRAMTAB .LONG   CRAM1,CRAM2
    3972 00019c20 00016ca0'         .LONG   VRAM1,VRAM2,VRAM3,VRAM4,VRAM5,VRAM6
    3973 00019ce0 00017180'         .LONG   VRAM7,VRAM8
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   88

    3974 00019d20 00000000          .LONG   0
    3975 00019d40 000174c0' PROMTAB .LONG   PROM1,PROM2
    3976 00019d80 00000000          .LONG   0
    3977 00019da0 00017660' IROMTAB .LONG   IROM1,IROM2,IROM3,IROM4
    3978 00019e20 000179a0'         .LONG   IROM5,IROM6,IROM7,IROM8
    3979 00019ea0 00017ce0'         .LONG   IROM9,IROM10,IROM11,IROM12
    3980 00019f20 00018020'         .LONG   IROM13,IROM14,IROM15,IROM16
    3981 00019fa0 00018360'         .long   IROM17,IROM18,IROM19,IROM20
    3982 0001a020 000186a0'         .long   IROM21,IROM22,IROM23,IROM24
    3983 0001a0a0 000189e0'         .long   IROM25,IROM26,IROM27,IROM28
    3984 0001a120 00018d20'         .long   IROM29,IROM30,IROM31,IROM32
    3985 0001a1a0 00000000          .LONG   0
    3986 0001a1c0 00019060' SRAMTAB .LONG   SRAM1
    3987 0001a1e0 00000000          .LONG   0
    3988 0001a200 00019200' SROMTAB .long   SROM1, SROM2, SROM3, SROM4
    3989 0001a280 00000000          .long   0
    3990 0001a2a0           SNDRAMTAB
    3991 0001a2a0 00019950'         .long   SNDRAM1, SNDRAM2, SNDRAM3
    3992 0001a300 00000000          .long   0
    3993                            
    3994 0001a320           CNAMEU1
    3995 0001a320       55          .string "U1",0
    3996 0001a340                   .even
    3997 0001a340           CNAMEU2
    3998 0001a340       55          .string "U2",0
    3999 0001a360                   .even
    4000 0001a360           CNAMEU3
    4001 0001a360       55          .string "U3",0
    4002 0001a380                   .even
    4003 0001a380           CNAMEU4
    4004 0001a380       55          .string "U4",0
    4005 0001a3a0                   .even
    4006 0001a3a0           CNAMEU5
    4007 0001a3a0       55          .string "U5",0
    4008 0001a3c0                   .even
    4009 0001a3c0           CNAMEU6
    4010 0001a3c0       55          .string "U6",0
    4011 0001a3e0                   .even
    4012 0001a3e0           CNAMEU7
    4013 0001a3e0       55          .string "U7",0
    4014 0001a400                   .even
    4015 0001a400           CNAMEU8
    4016 0001a400       55          .string "U8",0
    4017 0001a420                   .even
    4018 0001a420           CNAMEU9
    4019 0001a420       55          .string "U9",0
    4020 0001a440                   .even
    4021 0001a440           CNAMEU10
    4022 0001a440       55          .string "U10",0
    4023 0001a460                   .even
    4024 0001a460           CNAMEU11
    4025 0001a460       55          .string "U11",0
    4026 0001a480                   .even
    4027 0001a480           CNAMEU12
    4028 0001a480       55          .string "U12",0
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   89

    4029 0001a4a0                   .even
    4030 0001a4a0           CNAMEU13
    4031 0001a4a0       55          .string "U13",0
    4032 0001a4c0                   .even
    4033 0001a4c0           CNAMEU14
    4034 0001a4c0       55          .string "U14",0
    4035 0001a4e0                   .even
    4036 0001a4e0           CNAMEU15
    4037 0001a4e0       55          .string "U15",0
    4038 0001a500                   .even
    4039 0001a500           CNAMEU16
    4040 0001a500       55          .string "U16",0
    4041 0001a520                   .even
    4042 0001a520           CNAMEU17
    4043 0001a520       55          .string "U17",0
    4044 0001a540                   .even
    4045 0001a540           CNAMEU33
    4046 0001a540       55          .string "U33",0
    4047 0001a560                   .even
    4048 0001a560           CNAMEU36
    4049 0001a560       55          .string "U36",0
    4050 0001a580                   .even
    4051 0001a580           CNAMEU37
    4052 0001a580       55          .string "U37",0
    4053 0001a5a0                   .even
    4054 0001a5a0           CNAMEU49
    4055 0001a5a0       55          .string "U49",0
    4056 0001a5c0                   .even
    4057 0001a5c0           CNAMEU54
    4058 0001a5c0       55          .string "U54",0
    4059 0001a5e0                   .even
    4060 0001a5e0           CNAMEU59
    4061 0001a5e0       55          .string "U59",0
    4062 0001a600                   .even
    4063 0001a600           CNAMEU63
    4064 0001a600       55          .string "U63",0
    4065 0001a620                   .even
    4066 0001a620           CNAMEU64
    4067 0001a620       55          .string "U64",0
    4068 0001a640                   .even
    4069 0001a640           CNAMEU73
    4070 0001a640       55          .string "U73",0
    4071 0001a660                   .even
    4072 0001a660           CNAMEU80
    4073 0001a660       55          .string "U80",0
    4074 0001a680                   .even
    4075 0001a680           CNAMEU86
    4076 0001a680       55          .string "U86",0
    4077 0001a6a0                   .even
    4078 0001a6a0           CNAMEU133
    4079 0001a6a0       55          .string "U133",0
    4080 0001a6d0                   .even
    4081 0001a6d0           CNAMEU132
    4082 0001a6d0       55          .string "U132",0
    4083 0001a700                   .even
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   90

    4084 0001a700           CNAMEU131
    4085 0001a700       55          .string "U131",0
    4086 0001a730                   .even
    4087 0001a730           CNAMEU130
    4088 0001a730       55          .string "U130",0
    4089 0001a760                   .even
    4090 0001a760           CNAMEU129
    4091 0001a760       55          .string "U129",0
    4092 0001a790                   .even
    4093 0001a790           CNAMEU128
    4094 0001a790       55          .string "U128",0
    4095 0001a7c0                   .even
    4096 0001a7c0           CNAMEU127
    4097 0001a7c0       55          .string "U127",0
    4098 0001a7f0                   .even
    4099 0001a7f0           CNAMEU126
    4100 0001a7f0       55          .string "U126",0
    4101 0001a820                   .even
    4102 0001a820           CNAMEU125
    4103 0001a820       55          .string "U125",0
    4104 0001a850                   .even
    4105 0001a850           CNAMEU124
    4106 0001a850       55          .string "U124",0
    4107 0001a880                   .even
    4108 0001a880           CNAMEU123
    4109 0001a880       55          .string "U123",0
    4110 0001a8b0                   .even
    4111 0001a8b0           CNAMEU122
    4112 0001a8b0       55          .string "U122",0
    4113 0001a8e0                   .even
    4114 0001a8e0           CNAMEU121
    4115 0001a8e0       55          .string "U121",0
    4116 0001a910                   .even
    4117 0001a910           CNAMEU120
    4118 0001a910       55          .string "U120",0
    4119 0001a940                   .even
    4120 0001a940           CNAMEU119
    4121 0001a940       55          .string "U119",0
    4122 0001a970                   .even
    4123 0001a970           CNAMEU118
    4124 0001a970       55          .string "U118",0
    4125 0001a9a0                   .even
    4126 0001a9a0           CNAMEU117
    4127 0001a9a0       55          .string "U117",0
    4128 0001a9d0                   .even
    4129 0001a9d0           CNAMEU116
    4130 0001a9d0       55          .string "U116",0
    4131 0001aa00                   .even
    4132 0001aa00           CNAMEU115
    4133 0001aa00       55          .string "U115",0
    4134 0001aa30                   .even
    4135 0001aa30           CNAMEU114
    4136 0001aa30       55          .string "U114",0
    4137 0001aa60                   .even
    4138 0001aa60           CNAMEU113
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   91

    4139 0001aa60       55          .string "U113",0
    4140 0001aa90                   .even
    4141 0001aa90           CNAMEU112
    4142 0001aa90       55          .string "U112",0
    4143 0001aac0                   .even
    4144 0001aac0           CNAMEU111
    4145 0001aac0       55          .string "U111",0
    4146 0001aaf0                   .even
    4147 0001aaf0           CNAMEU110
    4148 0001aaf0       55          .string "U110",0
    4149 0001ab20                   .even
    4150 0001ab20           CNAMEU109
    4151 0001ab20       55          .string "U109",0
    4152 0001ab50                   .even
    4153 0001ab50           CNAMEU108
    4154 0001ab50       55          .string "U108",0
    4155 0001ab80                   .even
    4156 0001ab80           CNAMEU107
    4157 0001ab80       55          .string "U107",0
    4158 0001abb0                   .even
    4159 0001abb0           CNAMEU106
    4160 0001abb0       55          .string "U106",0
    4161 0001abe0                   .even
    4162 0001abe0           CNAMEU105
    4163 0001abe0       55          .string "U105",0
    4164 0001ac10                   .even
    4165 0001ac10           CNAMEU104
    4166 0001ac10       55          .string "U104",0
    4167 0001ac40                   .even
    4168 0001ac40           CNAMEU103
    4169 0001ac40       55          .string "U103",0
    4170 0001ac70                   .even
    4171 0001ac70           CNAMEU102
    4172 0001ac70       55          .string "U102",0
    4173 0001aca0                   .even
    4174                    
    4175                    
    4176                    
    4177                    
    4178 0001aca0           VRAMCHIPS:
    4179 0001aca0                   RAM_CHIP 0,1, 8, 16, 1880000H, 18FFFF0H         ; U37  (  0 - 7  )
    4180 0001ad30                   RAM_CHIP 0,0, 7, 16, 1880008H, 18FFFF8H         ; U36  (  8 - 14 )
    4181                    
    4182                    
    4183 0001adc0                   RAM_CHIP 0, 8, 8, 32, 0000018H, 03FFFF8H        ; U12
    4184 0001ae50                   RAM_CHIP 0, 4, 8, 32, 0000010H, 03FFFF0H        ; U16
    4185 0001aee0                   RAM_CHIP 0, 9, 8, 32, 0000008H, 03FFFE8H        ; U13
    4186 0001af70                   RAM_CHIP 0, 5, 8, 32, 0000000H, 03FFFE0H        ; U17
    4187                    
    4188 0001b000 00000000          .LONG   0
    4189                    
    4190 0001b020           PALCHIPS:
    4191 0001b020                   RAM_CHIP 0,6, 8, 32, 0000018H, 03FFFF8H         ; U10
    4192 0001b0b0                   RAM_CHIP 0,2, 8, 32, 0000010H, 03FFFF0H         ; U14
    4193 0001b140                   RAM_CHIP 0,7, 8, 32, 0000008H, 03FFFE8H         ; U11
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   92

    4194 0001b1d0                   RAM_CHIP 0,3, 8, 32, 0000000H, 03FFFE0H         ; U15
    4195 0001b260 00000000          .LONG   0
    4196                    
    4197                    
    4198 0001b280           SRAMCHECK
    4199 0001b280       43          .STRING "CHECKING SCRATCH RAMS",0
    4200 0001b330                   .EVEN
    4201                    
    4202 0001b330           SRAMCHIPS
    4203 0001b330                   RAM_CHIP SRAM1,0, 16, 16, 1000000H, 13FFFF0H    ; U49 (0-15)
    4204                    
    4205 0001b3c0 00000000          .LONG   0
    4206                    
    4207                    
    4208                    
    4209 0001b3e0     0048  T2_SP   .WORD   048h
    4210 0001b3f0     0000          .word   I2_SP-CBASE
    4211                    
    4212 0001b400     0088  T2_MN   .WORD   088h
    4213 0001b410     0040          .WORD   I2_MN-CBASE
    4214                    
    4215 0001b420     0028  T2_PER  .WORD   028H
    4216 0001b430     0080          .WORD   I2_PER-CBASE
    4217                    
    4218 0001b440           T2_SLASH
    4219 0001b440     0068          .WORD   068H
    4220 0001b450     00c0          .WORD   I2_SLASH-CBASE
    4221 0001b460           T2_00
    4222 0001b460     0068     .WORD    068h
    4223 0001b470     0100     .WORD    I2_00-CBASE
    4224                    
    4225 0001b480           T2_11:
    4226 0001b480     0068     .WORD    068h
    4227 0001b490     0140     .WORD    I2_11-CBASE
    4228                    
    4229 0001b4a0           T2_22:
    4230 0001b4a0     0068     .WORD    068h
    4231 0001b4b0     0180     .WORD    I2_22-CBASE
    4232                    
    4233 0001b4c0           T2_33:
    4234 0001b4c0     0068     .WORD    068h
    4235 0001b4d0     01c0     .WORD    I2_33-CBASE
    4236                    
    4237 0001b4e0           T2_44:
    4238 0001b4e0     0068     .WORD    068h
    4239 0001b4f0     0200     .WORD    I2_44-CBASE
    4240                    
    4241 0001b500           T2_55:
    4242 0001b500     0068     .WORD    068h
    4243 0001b510     0240     .WORD    I2_55-CBASE
    4244                    
    4245 0001b520           T2_66:
    4246 0001b520     0068     .WORD    068h
    4247 0001b530     0280     .WORD    I2_66-CBASE
    4248                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   93

    4249 0001b540           T2_77:
    4250 0001b540     0068     .WORD    068h
    4251 0001b550     02c0     .WORD    I2_77-CBASE
    4252                    
    4253 0001b560           T2_88:
    4254 0001b560     0068     .WORD    068h
    4255 0001b570     0300     .WORD    I2_88-CBASE
    4256                    
    4257 0001b580           T2_99:
    4258 0001b580     0068     .WORD    068h
    4259 0001b590     0340     .WORD    I2_99-CBASE
    4260                    
    4261 0001b5a0           T2_AA:
    4262 0001b5a0     0068     .WORD    068h
    4263 0001b5b0     0380     .WORD    I2_AA-CBASE
    4264                    
    4265 0001b5c0           T2_BB:
    4266 0001b5c0     0068     .WORD    068h
    4267 0001b5d0     03c0     .WORD    I2_BB-CBASE
    4268                    
    4269 0001b5e0           T2_CC:
    4270 0001b5e0     0068     .WORD    068h
    4271 0001b5f0     0400     .WORD    I2_CC-CBASE
    4272                    
    4273 0001b600           T2_DD:
    4274 0001b600     0068     .WORD    068h
    4275 0001b610     0440     .WORD    I2_DD-CBASE
    4276                    
    4277 0001b620           T2_EE:
    4278 0001b620     0068     .WORD    068h
    4279 0001b630     0480     .WORD    I2_EE-CBASE
    4280                    
    4281 0001b640           T2_FF:
    4282 0001b640     0068     .WORD    068h
    4283 0001b650     04c0     .WORD    I2_FF-CBASE
    4284                    
    4285 0001b660           T2_GG:
    4286 0001b660     0068     .WORD    068h
    4287 0001b670     0500     .WORD    I2_GG-CBASE
    4288                    
    4289 0001b680           T2_HH:
    4290 0001b680     0068     .WORD    068h
    4291 0001b690     0540     .WORD    I2_HH-CBASE
    4292                    
    4293 0001b6a0           T2_II:
    4294 0001b6a0     0028     .WORD    028h
    4295 0001b6b0     0580     .WORD    I2_II-CBASE
    4296                    
    4297 0001b6c0           T2_JJ:
    4298 0001b6c0     0068     .WORD    068h
    4299 0001b6d0     05c0     .WORD    I2_JJ-CBASE
    4300                    
    4301 0001b6e0           T2_KK:
    4302 0001b6e0     0068     .WORD    068h
    4303 0001b6f0     0600     .WORD    I2_KK-CBASE
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   94

    4304                    
    4305 0001b700           T2_LL:
    4306 0001b700     0058     .WORD    058h
    4307 0001b710     0640     .WORD    I2_LL-CBASE
    4308                    
    4309 0001b720           T2_MM:
    4310 0001b720     00a8     .WORD    0A8h
    4311 0001b730     0680     .WORD    I2_MM-CBASE
    4312                    
    4313 0001b740           T2_NN:
    4314 0001b740     0078     .WORD    078h
    4315 0001b750     0700     .WORD    I2_NN-CBASE
    4316                    
    4317 0001b760           T2_OO:
    4318 0001b760     0078     .WORD    078h
    4319 0001b770     0740     .WORD    I2_OO-CBASE
    4320                    
    4321 0001b780           T2_PP:
    4322 0001b780     0068     .WORD    068h
    4323 0001b790     0780     .WORD    I2_PP-CBASE
    4324                    
    4325 0001b7a0           T2_QQ:
    4326 0001b7a0     007a     .WORD    07Ah
    4327 0001b7b0     07c0     .WORD    I2_QQ-CBASE
    4328                    
    4329 0001b7c0           T2_RR:
    4330 0001b7c0     0068     .WORD    068h
    4331 0001b7d0     0810     .WORD    I2_RR-CBASE
    4332                    
    4333 0001b7e0           T2_SS:
    4334 0001b7e0     0068     .WORD    068h
    4335 0001b7f0     0850     .WORD    I2_SS-CBASE
    4336                    
    4337 0001b800           T2_TT:
    4338 0001b800     0068     .WORD    068h
    4339 0001b810     0890     .WORD    I2_TT-CBASE
    4340                    
    4341 0001b820           T2_UU:
    4342 0001b820     0068     .WORD    068h
    4343 0001b830     08d0     .WORD    I2_UU-CBASE
    4344                    
    4345 0001b840           T2_VV:
    4346 0001b840     0078     .WORD    078h
    4347 0001b850     0910     .WORD    I2_VV-CBASE
    4348                    
    4349 0001b860           T2_WW:
    4350 0001b860     00b8     .WORD    0B8h
    4351 0001b870     0950     .WORD    I2_WW-CBASE
    4352                    
    4353 0001b880           T2_XX:
    4354 0001b880     0078     .WORD    078h
    4355 0001b890     09d0     .WORD    I2_XX-CBASE
    4356                    
    4357 0001b8a0           T2_YY:
    4358 0001b8a0     0068     .WORD    068h
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   95

    4359 0001b8b0     0a10     .WORD    I2_YY-CBASE
    4360                    
    4361 0001b8c0           T2_ZZ:
    4362 0001b8c0     0068     .WORD    068h
    4363 0001b8d0     0a50     .WORD    I2_ZZ-CBASE
    4364                    
    4365                    
    4366 0001b8e0           SYSFONT
    4367                    
    4368 0001b8e0       00          .BYTE   (T2_SP-T2_SP)/32        ;SPACE CHARACTER, " "
    4369 0001b8e8       00          .BYTE   (T2_SP-T2_SP)/32        ;FILLER
    4370 0001b8f0       00          .BYTE   (T2_SP-T2_SP)/32
    4371 0001b8f8       00          .BYTE   (T2_SP-T2_SP)/32
    4372 0001b900       00          .BYTE   (T2_SP-T2_SP)/32
    4373 0001b908       00          .BYTE   (T2_SP-T2_SP)/32
    4374 0001b910       00          .BYTE   (T2_SP-T2_SP)/32
    4375 0001b918       00          .BYTE   (T2_SP-T2_SP)/32
    4376 0001b920       00          .BYTE   (T2_SP-T2_SP)/32
    4377 0001b928       00          .BYTE   (T2_SP-T2_SP)/32
    4378 0001b930       00          .BYTE   (T2_SP-T2_SP)/32
    4379 0001b938       00          .BYTE   (T2_SP-T2_SP)/32
    4380 0001b940       00          .BYTE   (T2_SP-T2_SP)/32
    4381 0001b948       01          .BYTE   (T2_MN-T2_SP)/32        ; MINUS CHARACTER, "-"
    4382 0001b950       02          .BYTE   (T2_PER-T2_SP)/32
    4383 0001b958       03          .BYTE   (T2_SLASH-T2_SP)/32     ; "/"
    4384 0001b960       04          .BYTE   (T2_00-T2_SP)/32        ;0
    4385 0001b968       05          .BYTE   (T2_11-T2_SP)/32        ;1
    4386 0001b970       06          .BYTE   (T2_22-T2_SP)/32        ;2
    4387 0001b978       07          .BYTE   (T2_33-T2_SP)/32        ;3
    4388 0001b980       08          .BYTE   (T2_44-T2_SP)/32        ;4
    4389 0001b988       09          .BYTE   (T2_55-T2_SP)/32        ;5
    4390 0001b990       0a          .BYTE   (T2_66-T2_SP)/32        ;6
    4391 0001b998       0b          .BYTE   (T2_77-T2_SP)/32        ;7
    4392 0001b9a0       0c          .BYTE   (T2_88-T2_SP)/32        ;8
    4393 0001b9a8       0d          .BYTE   (T2_99-T2_SP)/32        ;9
    4394 0001b9b0       04          .BYTE   (T2_00-T2_SP)/32                        ; no :
    4395 0001b9b8       04          .BYTE   (T2_00-T2_SP)/32                        ; no ;
    4396 0001b9c0       04          .BYTE   (T2_00-T2_SP)/32                        ; no <
    4397 0001b9c8       04          .BYTE   (T2_00-T2_SP)/32                        ; no =
    4398 0001b9d0       04          .BYTE   (T2_00-T2_SP)/32                        ; no >
    4399 0001b9d8       04          .BYTE   (T2_00-T2_SP)/32                        ; no ?
    4400 0001b9e0       04          .BYTE   (T2_00-T2_SP)/32                        ; no @
    4401 0001b9e8       0e          .BYTE   (T2_AA-T2_SP)/32        ;A
    4402 0001b9f0       0f          .BYTE   (T2_BB-T2_SP)/32        ;B
    4403 0001b9f8       10          .BYTE   (T2_CC-T2_SP)/32        ;C
    4404 0001ba00       11          .BYTE   (T2_DD-T2_SP)/32        ;D
    4405 0001ba08       12          .BYTE   (T2_EE-T2_SP)/32        ;E
    4406 0001ba10       13          .BYTE   (T2_FF-T2_SP)/32        ;F
    4407 0001ba18       14          .BYTE   (T2_GG-T2_SP)/32        ;G
    4408 0001ba20       15          .BYTE   (T2_HH-T2_SP)/32        ;H
    4409 0001ba28       16          .BYTE   (T2_II-T2_SP)/32        ;I
    4410 0001ba30       17          .BYTE   (T2_JJ-T2_SP)/32        ;J
    4411 0001ba38       18          .BYTE   (T2_KK-T2_SP)/32        ;K
    4412 0001ba40       19          .BYTE   (T2_LL-T2_SP)/32        ;L
    4413 0001ba48       1a          .BYTE   (T2_MM-T2_SP)/32        ;M
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   96

    4414 0001ba50       1b          .BYTE   (T2_NN-T2_SP)/32        ;N
    4415 0001ba58       1c          .BYTE   (T2_OO-T2_SP)/32        ;O
    4416 0001ba60       1d          .BYTE   (T2_PP-T2_SP)/32        ;P
    4417 0001ba68       1e          .BYTE   (T2_QQ-T2_SP)/32        ;Q
    4418 0001ba70       1f          .BYTE   (T2_RR-T2_SP)/32        ;R
    4419 0001ba78       20          .BYTE   (T2_SS-T2_SP)/32        ;S
    4420 0001ba80       21          .BYTE   (T2_TT-T2_SP)/32        ;T
    4421 0001ba88       22          .BYTE   (T2_UU-T2_SP)/32        ;U
    4422 0001ba90       23          .BYTE   (T2_VV-T2_SP)/32        ;V
    4423 0001ba98       24          .BYTE   (T2_WW-T2_SP)/32        ;W
    4424 0001baa0       25          .BYTE   (T2_XX-T2_SP)/32        ;X
    4425 0001baa8       26          .BYTE   (T2_YY-T2_SP)/32        ;Y
    4426 0001bab0       27          .BYTE   (T2_ZZ-T2_SP)/32        ;Z
    4427                    
    4428 0001bab8           CBASE
    4429 0001bab8           I2_SP
    4430 0001bab8       00     .byte    00h
    4431 0001bac0       00     .byte    00h
    4432 0001bac8       00     .byte    00h
    4433 0001bad0       00     .byte    00h
    4434 0001bad8       00     .byte    00h
    4435 0001bae0       00     .byte    00h
    4436 0001bae8       00     .byte    00h
    4437 0001baf0       00     .byte    00h
    4438                    
    4439 0001baf8           I2_MN:
    4440 0001baf8       00     .byte    000h
    4441 0001bb00       00     .byte    000h
    4442 0001bb08       00     .byte    000h
    4443 0001bb10       ff     .byte    0FFh
    4444 0001bb18       ff     .byte    0FFh
    4445 0001bb20       00     .byte    000h
    4446 0001bb28       00     .byte    000h
    4447 0001bb30       00     .byte    000h
    4448                    
    4449 0001bb38           I2_PER:
    4450 0001bb38       00          .BYTE   0
    4451 0001bb40       00          .BYTE   0
    4452 0001bb48       00          .BYTE   0
    4453 0001bb50       00          .BYTE   0
    4454 0001bb58       00          .BYTE   0
    4455 0001bb60       00          .BYTE   0
    4456 0001bb68       ff          .BYTE   0FFH
    4457 0001bb70       ff          .BYTE   0FFH
    4458                    
    4459 0001bb78           I2_SLASH:
    4460 0001bb78       30          .BYTE   30H
    4461 0001bb80       30          .BYTE   30H
    4462 0001bb88       18          .BYTE   18H
    4463 0001bb90       18          .BYTE   18H
    4464 0001bb98       06          .BYTE   06H
    4465 0001bba0       06          .BYTE   06H
    4466 0001bba8       03          .BYTE   03H
    4467 0001bbb0       03          .BYTE   03H
    4468                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   97

    4469 0001bbb8           I2_00:
    4470 0001bbb8       1e     .byte    01Eh
    4471 0001bbc0       3f     .byte    03Fh
    4472 0001bbc8       33     .byte    033h
    4473 0001bbd0       33     .byte    033h
    4474 0001bbd8       33     .byte    033h
    4475 0001bbe0       33     .byte    033h
    4476 0001bbe8       3f     .byte    03Fh
    4477 0001bbf0       1e     .byte    01Eh
    4478                    
    4479 0001bbf8           I2_11:
    4480 0001bbf8       0e     .byte    0Eh
    4481 0001bc00       0f     .byte    0Fh
    4482 0001bc08       0f     .byte    0Fh
    4483 0001bc10       0c     .byte    0Ch
    4484 0001bc18       0c     .byte    0Ch
    4485 0001bc20       0c     .byte    0Ch
    4486 0001bc28       0c     .byte    0Ch
    4487 0001bc30       0c     .byte    0Ch
    4488                    
    4489 0001bc38           I2_22:
    4490 0001bc38       1f     .byte    01Fh
    4491 0001bc40       3f     .byte    03Fh
    4492 0001bc48       38     .byte    038h
    4493 0001bc50       1c     .byte    01Ch
    4494 0001bc58       0e     .byte    0Eh
    4495 0001bc60       07     .byte    07h
    4496 0001bc68       3f     .byte    03Fh
    4497 0001bc70       3f     .byte    03Fh
    4498                    
    4499 0001bc78           I2_33:
    4500 0001bc78       1f     .byte    01Fh
    4501 0001bc80       3f     .byte    03Fh
    4502 0001bc88       30     .byte    030h
    4503 0001bc90       1e     .byte    01Eh
    4504 0001bc98       1e     .byte    01Eh
    4505 0001bca0       30     .byte    030h
    4506 0001bca8       3f     .byte    03Fh
    4507 0001bcb0       1f     .byte    01Fh
    4508                    
    4509 0001bcb8           I2_44:
    4510 0001bcb8       38     .byte    038h
    4511 0001bcc0       3c     .byte    03Ch
    4512 0001bcc8       36     .byte    036h
    4513 0001bcd0       33     .byte    033h
    4514 0001bcd8       3f     .byte    03Fh
    4515 0001bce0       3f     .byte    03Fh
    4516 0001bce8       30     .byte    030h
    4517 0001bcf0       30     .byte    030h
    4518                    
    4519 0001bcf8           I2_55:
    4520 0001bcf8       3f     .byte    03Fh
    4521 0001bd00       3f     .byte    03Fh
    4522 0001bd08       03     .byte    03h
    4523 0001bd10       1f     .byte    01Fh
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   98

    4524 0001bd18       3f     .byte    03Fh
    4525 0001bd20       30     .byte    030h
    4526 0001bd28       3f     .byte    03Fh
    4527 0001bd30       1f     .byte    01Fh
    4528                    
    4529 0001bd38           I2_66:
    4530 0001bd38       3e     .byte    03Eh
    4531 0001bd40       3f     .byte    03Fh
    4532 0001bd48       03     .byte    03h
    4533 0001bd50       1f     .byte    01Fh
    4534 0001bd58       3f     .byte    03Fh
    4535 0001bd60       33     .byte    033h
    4536 0001bd68       3f     .byte    03Fh
    4537 0001bd70       1e     .byte    01Eh
    4538                    
    4539 0001bd78           I2_77:
    4540 0001bd78       3f     .byte    03Fh
    4541 0001bd80       3f     .byte    03Fh
    4542 0001bd88       30     .byte    030h
    4543 0001bd90       18     .byte    018h
    4544 0001bd98       18     .byte    018h
    4545 0001bda0       0c     .byte    0Ch
    4546 0001bda8       0c     .byte    0Ch
    4547 0001bdb0       0c     .byte    0Ch
    4548                    
    4549 0001bdb8           I2_88:
    4550 0001bdb8       1e     .byte    01Eh
    4551 0001bdc0       3f     .byte    03Fh
    4552 0001bdc8       33     .byte    033h
    4553 0001bdd0       1e     .byte    01Eh
    4554 0001bdd8       1e     .byte    01Eh
    4555 0001bde0       33     .byte    033h
    4556 0001bde8       3f     .byte    03Fh
    4557 0001bdf0       1e     .byte    01Eh
    4558                    
    4559 0001bdf8           I2_99:
    4560 0001bdf8       1e     .byte    01Eh
    4561 0001be00       3f     .byte    03Fh
    4562 0001be08       33     .byte    033h
    4563 0001be10       3f     .byte    03Fh
    4564 0001be18       3e     .byte    03Eh
    4565 0001be20       30     .byte    030h
    4566 0001be28       3f     .byte    03Fh
    4567 0001be30       1f     .byte    01Fh
    4568                    
    4569 0001be38           I2_AA:
    4570 0001be38       1e     .byte    01Eh
    4571 0001be40       3f     .byte    03Fh
    4572 0001be48       33     .byte    033h
    4573 0001be50       33     .byte    033h
    4574 0001be58       3f     .byte    03Fh
    4575 0001be60       3f     .byte    03Fh
    4576 0001be68       33     .byte    033h
    4577 0001be70       33     .byte    033h
    4578                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   99

    4579 0001be78           I2_BB:
    4580 0001be78       1f     .byte    01Fh
    4581 0001be80       3f     .byte    03Fh
    4582 0001be88       33     .byte    033h
    4583 0001be90       3f     .byte    03Fh
    4584 0001be98       1f     .byte    01Fh
    4585 0001bea0       33     .byte    033h
    4586 0001bea8       3f     .byte    03Fh
    4587 0001beb0       1f     .byte    01Fh
    4588                    
    4589 0001beb8           I2_CC:
    4590 0001beb8       3e     .byte    03Eh
    4591 0001bec0       3f     .byte    03Fh
    4592 0001bec8       03     .byte    03h
    4593 0001bed0       03     .byte    03h
    4594 0001bed8       03     .byte    03h
    4595 0001bee0       03     .byte    03h
    4596 0001bee8       3f     .byte    03Fh
    4597 0001bef0       3e     .byte    03Eh
    4598                    
    4599 0001bef8           I2_DD:
    4600 0001bef8       1f     .byte    01Fh
    4601 0001bf00       3f     .byte    03Fh
    4602 0001bf08       33     .byte    033h
    4603 0001bf10       33     .byte    033h
    4604 0001bf18       33     .byte    033h
    4605 0001bf20       33     .byte    033h
    4606 0001bf28       3f     .byte    03Fh
    4607 0001bf30       1f     .byte    01Fh
    4608                    
    4609 0001bf38           I2_EE:
    4610 0001bf38       3f     .byte    03Fh
    4611 0001bf40       3f     .byte    03Fh
    4612 0001bf48       03     .byte    03h
    4613 0001bf50       3f     .byte    03Fh
    4614 0001bf58       3f     .byte    03Fh
    4615 0001bf60       03     .byte    03h
    4616 0001bf68       3f     .byte    03Fh
    4617 0001bf70       3f     .byte    03Fh
    4618                    
    4619 0001bf78           I2_FF:
    4620 0001bf78       3f     .byte    03Fh
    4621 0001bf80       3f     .byte    03Fh
    4622 0001bf88       03     .byte    03h
    4623 0001bf90       3f     .byte    03Fh
    4624 0001bf98       3f     .byte    03Fh
    4625 0001bfa0       03     .byte    03h
    4626 0001bfa8       03     .byte    03h
    4627 0001bfb0       03     .byte    03h
    4628                    
    4629 0001bfb8           I2_GG:
    4630 0001bfb8       3e     .byte    03Eh
    4631 0001bfc0       3f     .byte    03Fh
    4632 0001bfc8       03     .byte    03h
    4633 0001bfd0       03     .byte    03h
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  100

    4634 0001bfd8       33     .byte    033h
    4635 0001bfe0       33     .byte    033h
    4636 0001bfe8       3f     .byte    03Fh
    4637 0001bff0       1e     .byte    01Eh
    4638                    
    4639 0001bff8           I2_HH:
    4640 0001bff8       33     .byte    033h
    4641 0001c000       33     .byte    033h
    4642 0001c008       33     .byte    033h
    4643 0001c010       3f     .byte    03Fh
    4644 0001c018       3f     .byte    03Fh
    4645 0001c020       33     .byte    033h
    4646 0001c028       33     .byte    033h
    4647 0001c030       33     .byte    033h
    4648                    
    4649 0001c038           I2_II:
    4650 0001c038       03     .byte    03h
    4651 0001c040       03     .byte    03h
    4652 0001c048       03     .byte    03h
    4653 0001c050       03     .byte    03h
    4654 0001c058       03     .byte    03h
    4655 0001c060       03     .byte    03h
    4656 0001c068       03     .byte    03h
    4657 0001c070       03     .byte    03h
    4658                    
    4659 0001c078           I2_JJ:
    4660 0001c078       30     .byte    030h
    4661 0001c080       30     .byte    030h
    4662 0001c088       30     .byte    030h
    4663 0001c090       30     .byte    030h
    4664 0001c098       30     .byte    030h
    4665 0001c0a0       33     .byte    033h
    4666 0001c0a8       3f     .byte    03Fh
    4667 0001c0b0       1e     .byte    01Eh
    4668                    
    4669 0001c0b8           I2_KK:
    4670 0001c0b8       33     .byte    033h
    4671 0001c0c0       33     .byte    033h
    4672 0001c0c8       1b     .byte    01Bh
    4673 0001c0d0       0f     .byte    0Fh
    4674 0001c0d8       1f     .byte    01Fh
    4675 0001c0e0       33     .byte    033h
    4676 0001c0e8       33     .byte    033h
    4677 0001c0f0       33     .byte    033h
    4678                    
    4679 0001c0f8           I2_LL:
    4680 0001c0f8       03     .byte    03h
    4681 0001c100       03     .byte    03h
    4682 0001c108       03     .byte    03h
    4683 0001c110       03     .byte    03h
    4684 0001c118       03     .byte    03h
    4685 0001c120       03     .byte    03h
    4686 0001c128       1f     .byte    01Fh
    4687 0001c130       1f     .byte    01Fh
    4688                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  101

    4689 0001c138           I2_MM:
    4690 0001c138       87     .byte    087h,03h
    4691 0001c148       cf     .byte    0CFh,03h
    4692 0001c158       cf     .byte    0CFh,03h
    4693 0001c168       7b     .byte    07Bh,03h
    4694 0001c178       7b     .byte    07Bh,03h
    4695 0001c188       33     .byte    033h,03h
    4696 0001c198       33     .byte    033h,03h
    4697 0001c1a8       33     .byte    033h,03h
    4698                    
    4699 0001c1b8           I2_NN:
    4700 0001c1b8       63     .byte    063h
    4701 0001c1c0       67     .byte    067h
    4702 0001c1c8       6f     .byte    06Fh
    4703 0001c1d0       6f     .byte    06Fh
    4704 0001c1d8       7b     .byte    07Bh
    4705 0001c1e0       7b     .byte    07Bh
    4706 0001c1e8       73     .byte    073h
    4707 0001c1f0       63     .byte    063h
    4708                    
    4709 0001c1f8           I2_OO:
    4710 0001c1f8       3e     .byte    03Eh
    4711 0001c200       7f     .byte    07Fh
    4712 0001c208       63     .byte    063h
    4713 0001c210       63     .byte    063h
    4714 0001c218       63     .byte    063h
    4715 0001c220       63     .byte    063h
    4716 0001c228       7f     .byte    07Fh
    4717 0001c230       3e     .byte    03Eh
    4718                    
    4719 0001c238           I2_PP:
    4720 0001c238       1f     .byte    01Fh
    4721 0001c240       3f     .byte    03Fh
    4722 0001c248       33     .byte    033h
    4723 0001c250       3f     .byte    03Fh
    4724 0001c258       1f     .byte    01Fh
    4725 0001c260       03     .byte    03h
    4726 0001c268       03     .byte    03h
    4727 0001c270       03     .byte    03h
    4728                    
    4729 0001c278           I2_QQ:
    4730 0001c278       3e     .byte    03Eh
    4731 0001c280       7f     .byte    07Fh
    4732 0001c288       63     .byte    063h
    4733 0001c290       63     .byte    063h
    4734 0001c298       63     .byte    063h
    4735 0001c2a0       63     .byte    063h
    4736 0001c2a8       7f     .byte    07Fh
    4737 0001c2b0       3e     .byte    03Eh
    4738 0001c2b8       60     .byte    060h
    4739 0001c2c0       60     .byte    060h
    4740                    
    4741 0001c2c8           I2_RR:
    4742 0001c2c8       1f     .byte    01Fh
    4743 0001c2d0       3f     .byte    03Fh
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  102

    4744 0001c2d8       33     .byte    033h
    4745 0001c2e0       3f     .byte    03Fh
    4746 0001c2e8       1f     .byte    01Fh
    4747 0001c2f0       33     .byte    033h
    4748 0001c2f8       33     .byte    033h
    4749 0001c300       33     .byte    033h
    4750                    
    4751 0001c308           I2_SS:
    4752 0001c308       3e     .byte    03Eh
    4753 0001c310       3f     .byte    03Fh
    4754 0001c318       03     .byte    03h
    4755 0001c320       1f     .byte    01Fh
    4756 0001c328       3e     .byte    03Eh
    4757 0001c330       30     .byte    030h
    4758 0001c338       3f     .byte    03Fh
    4759 0001c340       1f     .byte    01Fh
    4760                    
    4761 0001c348           I2_TT:
    4762 0001c348       3f     .byte    03Fh
    4763 0001c350       3f     .byte    03Fh
    4764 0001c358       0c     .byte    0Ch
    4765 0001c360       0c     .byte    0Ch
    4766 0001c368       0c     .byte    0Ch
    4767 0001c370       0c     .byte    0Ch
    4768 0001c378       0c     .byte    0Ch
    4769 0001c380       0c     .byte    0Ch
    4770                    
    4771 0001c388           I2_UU:
    4772 0001c388       33     .byte    033h
    4773 0001c390       33     .byte    033h
    4774 0001c398       33     .byte    033h
    4775 0001c3a0       33     .byte    033h
    4776 0001c3a8       33     .byte    033h
    4777 0001c3b0       33     .byte    033h
    4778 0001c3b8       3f     .byte    03Fh
    4779 0001c3c0       1e     .byte    01Eh
    4780                    
    4781 0001c3c8           I2_VV:
    4782 0001c3c8       63     .byte    063h
    4783 0001c3d0       63     .byte    063h
    4784 0001c3d8       63     .byte    063h
    4785 0001c3e0       36     .byte    036h
    4786 0001c3e8       36     .byte    036h
    4787 0001c3f0       3e     .byte    03Eh
    4788 0001c3f8       1c     .byte    01Ch
    4789 0001c400       1c     .byte    01Ch
    4790                    
    4791 0001c408           I2_WW:
    4792 0001c408       23     .byte    023h,06h
    4793 0001c418       23     .byte    023h,06h
    4794 0001c428       73     .byte    073h,06h
    4795 0001c438       76     .byte    076h,03h
    4796 0001c448       76     .byte    076h,03h
    4797 0001c458       de     .byte    0DEh,03h
    4798 0001c468       8c     .byte    08Ch,01h
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  103

    4799 0001c478       8c     .byte    08Ch,01h
    4800                    
    4801 0001c488           I2_XX:
    4802 0001c488       63     .byte    063h
    4803 0001c490       63     .byte    063h
    4804 0001c498       36     .byte    036h
    4805 0001c4a0       1c     .byte    01Ch
    4806 0001c4a8       1c     .byte    01Ch
    4807 0001c4b0       36     .byte    036h
    4808 0001c4b8       63     .byte    063h
    4809 0001c4c0       63     .byte    063h
    4810                    
    4811 0001c4c8           I2_YY:
    4812 0001c4c8       33     .byte    033h
    4813 0001c4d0       33     .byte    033h
    4814 0001c4d8       1e     .byte    01Eh
    4815 0001c4e0       1e     .byte    01Eh
    4816 0001c4e8       0c     .byte    0Ch
    4817 0001c4f0       0c     .byte    0Ch
    4818 0001c4f8       0c     .byte    0Ch
    4819 0001c500       0c     .byte    0Ch
    4820                    
    4821 0001c508           I2_ZZ:
    4822 0001c508       3f     .byte    03Fh
    4823 0001c510       3f     .byte    03Fh
    4824 0001c518       38     .byte    038h
    4825 0001c520       1c     .byte    01Ch
    4826 0001c528       0e     .byte    0Eh
    4827 0001c530       07     .byte    07h
    4828 0001c538       3f     .byte    03Fh
    4829 0001c540       3f     .byte    03Fh
    4830                    
    4831                    
    4832 0001c550              .EVEN
    4833              8a5d  CKSUM1  .equ    08a5dH  ;9bd5
    4834              9efe  CKSUM2  .equ    09efeH  ;3bf0
    4835                    
    4836 0001c550           PROMCHIPS
    4837 0001c550                   ROM_CHIP PROM2,1,0,16, 0FF800000H, 0FFFFFFF0H, CKSUM1   ; U54
    4838 0001c5f0                   ROM_CHIP PROM1,0,0,16, 0FF800008H, 0FFFFFFF8H, CKSUM2   ; U63
    4839 0001c690 00000000          .LONG   0
    4840                    
    4841 0001c6b0     75a2          .WORD   0ffffH-CKSUM1   ;1'S COMPLEMENT OF THE UJ12 CHECKSUM
    4842 0001c6c0     6101          .WORD   0ffffH-CKSUM2   ;1'S COMPLEMENT OF THE UG12 CHECKSUM
    4843                    
    4844                    
    4845 0001c6d0           IROMCHIPS
    4846                    
    4847 0001c6d0           IROMCHIPS_8MEG
    4848 0001c6d0                   .EVEN
    4849 0001c6d0                   ROM_CHIP IROM1,  0, 8,32,  2000000H, 3FFFFE0H,03A18H    ; U133
    4850 0001c770                   ROM_CHIP IROM2,  1, 8,32,  2000008H, 3FFFFE8H,05B68H    ; U132
    4851 0001c810                   ROM_CHIP IROM3,  2, 8,32,  2000010H, 3FFFFF0H,0A478H    ; U131
    4852 0001c8b0                   ROM_CHIP IROM4,  3, 8,32,  2000018H, 3FFFFF8H,0E4EAH    ; U130
    4853                    
TMS340 COFF Macro Assembler Version 6.10     Mon Oct 30 16:54:46 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  104

    4854 0001c950                   ROM_CHIP IROM5,  4, 8,32,  4000000H, 5FFFFE0H,00B0EH    ; U129
    4855 0001c9f0                   ROM_CHIP IROM6,  5, 8,32,  4000008H, 5FFFFE8H,0E646H    ; U128
    4856 0001ca90                   ROM_CHIP IROM7,  6, 8,32,  4000010H, 5FFFFF0H,074A7H    ; U127
    4857 0001cb30                   ROM_CHIP IROM8,  7, 8,32,  4000018H, 5FFFFF8H,037FDH    ; U126
    4858 0001cbd0 00000000          .LONG   0
    4859 0001cbf0           IROMCHIPS1_8MEG
    4860 0001cbf0                   ROM_CHIP IROM9,  8, 8,32,  2000000H, 3FFFFE0H,05EF3H    ; U125
    4861 0001cc90                   ROM_CHIP IROM10, 9, 8,32,  2000008H, 3FFFFE8H,08CD6H    ; U124
    4862 0001cd30                   ROM_CHIP IROM11,10, 8,32,  2000010H, 3FFFFF0H,070ECH    ; U123
    4863 0001cdd0                   ROM_CHIP IROM12,11, 8,32,  2000018H, 3FFFFF8H,02B4EH    ; U122
    4864                    
    4865 0001ce70                   ROM_CHIP IROM13,12, 8,32,  4000000H, 5FFFFE0H,05E15H    ; U121
    4866 0001cf10                   ROM_CHIP IROM14,13, 8,32,  4000008H, 5FFFFE8H,00572H    ; U120
    4867 0001cfb0                   ROM_CHIP IROM15,14, 8,32,  4000010H, 5FFFFF0H,07FD4H    ; U119
    4868 0001d050                   ROM_CHIP IROM16,15, 8,32,  4000018H, 5FFFFF8H,0E4F1H    ; U118
    4869 0001d0f0 00000000          .LONG   0
    4870                    
    4871                    
    4872                            .end

 No Errors,  No Warnings
