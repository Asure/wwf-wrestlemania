
	.file	"shawn.asm"
	.title	"Shawn Michaels-specific game code"
	.width	132
	.option	b,d,l,t
	.mnolist


	.include	"macros.h"
	.include	"mproc.equ"		;Mproc equates
	.include	"display.equ"		;Display proc equates
	.include	"gsp.equ"		;Gsp asm equates
	.include	"sys.equ"
	.include	"game.equ"
	.include	"plyr.equ"
	.include	"anim.equ"
	.include	"audit.equ"
	.include	"sound.h"
	.include 	"ring.equ"
	.include	"lifebar.h"
	.include	"jjxm.h"
	.include	"damage.equ"



	.ref	change_anim1a,change_anim2a,do_taunt
	.ref	shn_2_hair_pickup_anim,bounce_off_ropes
	.ref	check_secret_moves,ck_teammate_pin,raisearm_check
	.ref	master_keep_attached,round_award,set_raisearm_bit
	.ref	ck_ignore,climb_turnbuckle,execute_walk,get_opp_plyrmode
	.ref	get_punch_dtime,get_opp_process,std_taunt,std_walk_fast
	.ref	process_ptrs,form_button_value,keep_attached,change_anim1
	.ref	change_anim2,halve_combo_meter,HALT
	.ref	mode_inair2,mode_choking,mode_puppet
	.ref	JUMP_ROPES,DO_REVERSAL,DO_REVERSAL_MESS
	.ref	CHECK_COMBO_GO,FIND_AND_KILL_ENDLESS
	.ref	CLIMB_ROPES,ADD_IF_SILENT,PCNT
	.ref	get_powerk_dtime,drone_change_back

	.ref	BONUS_MESS,can_pin
	.ref	blocking_off
	.ref	hyper_speed_on
	.ref	in_finish_move
	.ref	p1rounds,p2rounds
	.if NUM_SHAWN_FINISHES
	.ref	shn_finish1_move
	.if NUM_SHAWN_FINISHES > 1
	.ref	shn_finish2_move
	.endif
	.endif


	.ref	shn_rpt_hdbutts_anim
	.ref	shn_3_head_hold2_anim
	.ref	shn_3_head_hold_anim
	.ref	start_run_anim

	;stands
	.ref	shn_stand2_anim,shn_stand8_anim
	.ref	shn_stand4_anim,shn_stand6_anim
	.ref	shn_torso2_anim,shn_torso8_anim
	.ref	shn_torso4_anim,shn_torso6_anim
	.ref	shn_3_head_held_stand_anim

	;turns
	.ref	shn_2_to_4_turn_anim,shn_8_to_6_turn_anim	;stand
	.ref	shn_4_to_2_turn_anim,shn_6_to_8_turn_anim
	.ref	shn_4_to_6_turn_anim,shn_6_to_4_turn_anim
	.ref	shn_2_to_8_turn_anim,shn_8_to_2_turn_anim
	.ref	shn_4_to_8_turn_anim,shn_6_to_2_turn_anim
	.ref	shn_2_to_6_turn_anim,shn_8_to_4_turn_anim

	.ref	shn_2_to_4_turn2_anim,shn_8_to_6_turn2_anim	;torso
	.ref	shn_4_to_2_turn2_anim,shn_6_to_8_turn2_anim
	.ref	shn_4_to_6_turn2_anim,shn_6_to_4_turn2_anim
	.ref	shn_2_to_8_turn2_anim,shn_8_to_2_turn2_anim
	.ref	shn_4_to_8_turn2_anim,shn_6_to_2_turn2_anim
	.ref	shn_2_to_6_turn2_anim,shn_8_to_4_turn2_anim

	;walks
	.ref	shn_walk1_f2_anim,shn_walk2_f2_anim,shn_walk4_f2_anim
	.ref	shn_walk5_f2_anim,shn_walk6_f2_anim,shn_walk8_f2_anim
	.ref	shn_walk1_f4_anim,shn_walk2_f4_anim,shn_walk4_f4_anim
	.ref	shn_walk5_f4_anim,shn_walk6_f4_anim,shn_walk8_f4_anim

	.ref	shn_run2_anim,shn_climb_down_anim,shn_climb_up_anim

	;mundane attacks
	.ref	shn_2_punch_anim,shn_4_punch_anim
	.ref	shn_2_kick_anim,shn_4_kick_anim
	.ref	shn_4_push_anim
	.ref	shn_2_butt_anim,shn_4_butt_anim
	.ref	shn_2_knee_anim,shn_4_knee_anim
	.ref	shn_2_stomp_anim,shn_4_stomp_anim
	.ref	shn_2_falling_punch_anim,shn_4_falling_punch_anim
	.ref	shn_bstomp_anim,shn_belbow_anim
	.ref	shn_flipslam_anim

	;special attacks
	.ref	shn_4_hair_pickup_anim
	.ref	shn_spinkick_anim,shn_flying_kick_anim
	.ref	shn_gsuplex_anim,shn_run_stomp_anim
	.ref	shn_2_raise_arm_anim,shn_4_raise_arm_anim
	.ref	shn_super_speedkick_anim
	.ref	shn_fstein_anim
	.ref	shn_2_pin_anim,shn_4_pin_anim
	.ref	shn_2_hiptoss_anim
	.ref	shn_4_hiptoss_anim
	.ref	shn_2_hiptoss2_anim
	.ref	shn_4_hiptoss2_anim
	.ref	shn_speed_spinkick_anim,shn_knee_fstein_anim
	.ref	shn_sliding_kicktoss_anim,shn_break_arm_anim
	.ref	shn_4_jump_kick_anim
	.ref	shn_gsuplex_run_anim

	.ref	shn_2_slap_anim,shn_4_slap_anim
	.ref	shn_4_pummel_anim,shn_2_pummel_anim

	;reactions
	.ref	shn_dizzy_anim,shn_fall_back_anim
	.ref	shn_2_grabfling_anim,shn_4_grabfling_anim

	;blocks
	.ref	shn_4_block_anim

	;combos
	.ref	shn_combo_kick_anim,shn_combo_punch_anim
	.ref	BLOCK_WOOSH




shn_secret_moves
	.long	xsqbcharge_flying_kick	;must have this one
	.long	xsqbgrab_fling
	.long	xsqbhip_toss
	.long	xsqbgrab_fling2
	.long	xsqbhip_toss2
	.long	xsqbneck_grab
	.long	xsqbfrankensteiner
	.long	xsqbjump_kick
	.long	0


 SUBR	shn_smove_table
	.long	shn_hdhold_combo2
	.long	shn_hdhold_combo1
	.long	shn_charge_suplex
	.long	shn_swirl_speedkick
	.long	shn_sliding_kicktoss
	.long	shn_hdhold_suplex
	.long	shn_hdhold_frank
	.long	shn_hdhold_kicktoss
	.long	shn_hdhold_butts
	.long	shn_flipslam		;Can do from headhold also
	.long	shn_grab_toss_air
	.long	std_walk_fast
	.long	std_taunt

	.if NUM_SHAWN_FINISHES
	.long	shn_finish_move1
	.endif
	.if NUM_SHAWN_FINISHES > 1
	.long	shn_finish_move2
	.endif
	.long	0


xsqbjump_kick
	.word	B_SKICK,		J_ALL
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	J_AWAY,			J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 32		;max
	.long	xsqbscrt_flykick

xsqbscrt_flykick
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	xsqbout
	cmpi	MODE_DEAD,a0
	jrz	xsqbout
	cmpi	MODE_HEADHELD,a0
	jrz	xsqbout
	cmpi	MODE_ATTACHED,a0
	jrz	xsqbout

	movi	shn_4_jump_kick_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,FLYKICK_T1,FLYKICK_T2

	rets


xsqbhip_toss

	.word	B_PUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	xsqbscrt_hiptoss


xsqbscrt_hiptoss
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	xsqbout
	cmpi	MODE_DEAD,a0
	jrz	xsqbout
	cmpi	MODE_HEADHELD,a0
	jrz	xsqbout
	cmpi	MODE_INAIR,a0
	jrz	xsqbdoit
	cmpi	MODE_INAIR2,a0
	jrz	xsqbdoit

	move	*a13(CLOSEST_DIST),a0
	cmpi	70h,a0
	jrgt	xsqbout

xsqbdoit
	FACE24	shn,hiptoss_anim
	calla	change_anim1a

	WRSND	W_SHAWN,HIPTOSS_T1,PUNCH_T2
	rets


xsqbgrab_fling2
	.word	B_SPUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	xsqbscrt_grabfling2

xsqbhip_toss2
	.word	B_PUNCH | J_AWAY,	J_REAL_LR | J_UP | J_DOWN
	.word	8000h | 10		;max
	.long	xsqbscrt_grabfling2

xsqbscrt_grabfling2
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	xsqbyes
	cmpi	MODE_RUNNING,a0
	jrz	xsqbyes
	rets


xsqbgrab_fling

	.word	B_SPUNCH,		J_ALL
	.word	J_AWAY,		J_REAL_LR
	.word	J_AWAY,		J_REAL_LR
	.word	8000h | 32		;max
	.long	xsqbscrt_grabfling

xsqbscrt_grabfling


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbout

	calla	get_opp_plyrmode
	cmpi	MODE_BOUNCING,a0
	jrz	xsqbyes
	cmpi	MODE_RUNNING,a0
	jrnz	xsqbnope
xsqbyes
	FACE24	shn,hiptoss_anim
	calla	change_anim1a

	WRSND	W_SHAWN,GRABFLING_T1,PUNCH_T2
	rets

xsqbnope
	calla	get_opp_plyrmode
	cmpi	MODE_HEADHELD,a0
	jrz	xsqbout
	cmpi	MODE_ONGROUND,a0
	jrz	xsqbout
	cmpi	MODE_DEAD,a0
	jrz	xsqbout


	FACE24	shn,grabfling_anim
	calla	change_anim1a

	WRSND	W_SHAWN,GRABFLING_T1,PUNCH_T2
	rets


xsqbneck_grab
	.word	B_SPUNCH,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32		;max
	.long	xsqbscrt_neck

xsqbscrt_neck
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	xsqbout
	cmpi	MODE_DEAD,a0
	jrz	xsqbout
	cmpi	MODE_HEADHELD,a0
	jrz	xsqbout

	move	*a13(LAST_HEADHOLD),a14,L
	move	@PCNT,a0,L
	sub	a14,a0
	cmpi	2*60,a0
	jrge	xsqbok2a

	.ref	shn_3_fake_hold_anim
	movi	shn_3_fake_hold_anim,a0
	calla	change_anim1a
	rets

xsqbok2a
	move	*a13(CLOSEST_XDIST),a1
	cmpi	90,a1
	jrgt	xsqbstd_grab

	movi	shn_3_head_hold2_anim,a0
	calla	change_anim1a
xsqbout	rets

xsqbstd_grab
	movi	shn_3_head_hold_anim,a0
	calla	change_anim1a
	rets


xsqbcharge_flying_kick
	move	*a13(BUT_VAL_UP),a0
	btst	PLAYER_SKICK_BIT,a0
	jrz	xsqbno_kick

	move	*a13(PLYRNUM),a0
	calla	get_powerk_dtime
	cmpi	85,a0			;> min?
	jrlt	xsqbno_kick

	callr	xsqbscrt_kick
	setc
	rets

xsqbno_kick
	clrc
	rets

xsqbscrt_kick

	move	*a13(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	xsqbout
	cmpi	MODE_HEADHOLD,a0
	jrz	xsqbout

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbout

	.ref	ck_ignore
	calla	ck_ignore
	jrc	xsqbout

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jrz	xsqbout
	cmpi	MODE_DEAD,a0
	jrz	xsqbout

xsqbok

	SETMODE	INAIR

	movk	1,a0			;Ensure leap at
	move	a0,*a8(OBJ_XVEL),L

	movi	shn_flying_kick_anim,a0
	calla	change_anim1a


	WRSND	W_SHAWN,FLYKICK_T1,FLYKICK_T2

	rets


xsqbfrankensteiner
	.word	B_SKICK,		J_ALL
	.word	J_TOWARD,		J_REAL_LR
	.word	J_TOWARD,		J_REAL_LR
	.word	8000h | 32 		;max
	.long	xsqbscrt_fstein

xsqbscrt_fstein
	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xsqbrets
	move	*a13(PLYRMODE),a0
	CMPI	MODE_HEADHOLD,a0
	jrz	xsqbrets

	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jreq	xsqbrets
	cmpi	MODE_DEAD,a0
	jreq	xsqbrets

	;don't do it if opponent is behind you
	calla	ck_ignore
	jrc	xsqbrets
	
	CALLA	FIND_AND_KILL_ENDLESS
	movi	shn_fstein_anim,a0
	calla	change_anim1a
	WRSND	W_SHAWN,KICK_T1,KICK_T2
xsqbrets	rets

	.if NUM_SHAWN_FINISHES
 SUBRP	shn_finish_move1

btpgTIMEOUT	.equ	TSEC

btpgend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		btpgend_wait			; br = no

btpgreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,btpgreset
	movi		btpgTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_DOWN,0,btpgreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,btpgreset
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,btpgreset
	WAITSWITCH_DWN	B_PUNCH,J_ALL,btpgreset

	movi		shn_finish1_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif
	

	.if NUM_SHAWN_FINISHES > 1
 SUBRP	shn_finish_move2

nglyTIMEOUT	.equ	TSEC

nglyend_wait
	SLEEP		TSEC/4
	move		@p1rounds,a0			; Get player 1 rounds
	move		@p2rounds,a1			; Get player 2 rounds
	or		a1,a0				; Put em together
	cmpi		2,a0				; Anybody got 2?
	jrlt		nglyend_wait			; br = no

nglyreset
	clr		a11
	move		a11,@in_finish_move
	SLEEPK		1
	WAITSWITCH_DWN	J_UP,0,nglyreset
	movi		nglyTIMEOUT,a11
	move		a11,@in_finish_move
	WAITSWITCH_DWN	J_UP,0,nglyreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,nglyreset
	WAITSWITCH_DWN	J_RIGHT,J_UP,nglyreset
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,nglyreset

	movi		shn_finish2_move,a0
	move		a0,*a8(SPECIAL_MOVE_ADDR),L
	DIE
	.endif


shn_swirl_speedkick

piafTIMEOUT	.equ	60

piaflp0
	SLEEPK	1
piaflp
	move	*a8(GETUP_TIME),a0
	jrnz	piaflp0
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,piaflp

	movi	piafTIMEOUT,a11
	WAITSWITCH_DWN	J_TOWARD,J_DOWN|J_UP,piaflp
	WAITSWITCH_DWN	B_KICK,J_ALL,piaflp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	piaflp0

	move	*a8(PLYRMODE),a0
	cmpi	MODE_DEAD,a0
	jrz	piaflp0
	cmpi	MODE_HEADHOLD,a0
	jrz	piafknee
	cmpi	MODE_HEADHELD,a0
	jrnz	piafslam
	move	*a8(I_WILL_DIE),a14
	jrnz	piaflp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	piaflp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME


piafslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	piaflp0				;ignore




piafis_reversal

	CALLA	FIND_AND_KILL_ENDLESS

	movi	shn_super_speedkick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2
	SLEEPK	20
	jruc	piaflp

piafknee
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	piaflp0				;ignore



	move	*a8(WHOIHIT),a0,L
	movi	6*60,a14
	move	a14,*a0(DELAY_METER)

	SPCDMG	D_FLYKICK/2,20

	movi	shn_flying_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SETMODE	INAIR


	WRSND	W_SHAWN,FLYKICK_T1,FLYKICK_T2
	SLEEPK	5
	movi	40000h,a0
	move	a0,*a8(OBJ_YVEL),L
	SLEEPK	20
	jruc	piaflp


shn_flipslam

uwglTIMEOUT	.equ	30

uwgllp0
	SLEEPK	1
uwgllp
	move	*a8(GETUP_TIME),a0
	jrnz	uwgllp0

	clr	a11

	WAITSWITCH_DWN	J_UP,0,uwgllp

	movk	uwglTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,uwgllp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,uwgllp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	uwgllp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	uwglslam
	move	*a8(I_WILL_DIE),A14
	jrnz	uwgllp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	uwgllp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	uwglis_reversal

uwglslam
	cmpi	MODE_HEADHOLD,a0
	jrnz	uwglslam2
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	uwgllp0				;ignore

	movi	39,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

uwglis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS
uwglslam2
	movi	shn_flipslam_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2

	SLEEPK	20

	jruc	uwgllp


shn_grab_toss_air

xnjgTIMEOUT	.equ	40

xnjglp0
	SLEEPK	1
xnjglp
	clr	a11

	WAITSWITCH_DWN	J_AWAY,0,xnjglp

	movi	xnjgTIMEOUT,a11

	WAITSWITCH_DWN	J_AWAY,0,xnjglp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,xnjglp

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	xnjglp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jreq	xnjglp0

	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
	cmpi	MODE_ONGROUND,a0
	jrz	xnjglp
	cmpi	MODE_DEAD,a0
	jrz	xnjglp
	cmpi	MODE_INAIR,a0
	jrz	xnjgdoit2
	cmpi	MODE_INAIR2,a0
	jrz	xnjgdoit2

	move	*a8(CLOSEST_NUM),a0
	X32	a0
	addi	process_ptrs,a0
	move	*a0,a0,L
	move	*a0(ATTACK_TYPE),a0
	cmpi	AT_LEAPING,a0
	jrz	xnjgdoit2

	move	*a8(CLOSEST_DIST),a0
	cmpi	6ch,a0
	jrgt	xnjglp

	FACE24	shn,hiptoss_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_SHAWN,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20

	jruc	xnjglp

xnjgdoit2	FACE24	shn,hiptoss2_anim
	move	a0,*a8(SPECIAL_MOVE_ADDR),L

	WRSND	W_SHAWN,HIPTOSS_T1,PUNCH_T2

	SLEEPK	20

	jruc	xnjglp

shn_hdhold_suplex

kwqmTIMEOUT	.equ	60

kwqmlp0
	SLEEPK	1
kwqmlp
	move	*a8(GETUP_TIME),a0
	jrnz	kwqmlp0

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	kwqmcont
	cmpi	MODE_HEADHELD,a0
	jrnz	kwqmlp0

kwqmcont
	clr	a11

	WAITSWITCH_DWN	J_DOWN,0,kwqmlp

	movi	kwqmTIMEOUT,a11

	WAITSWITCH_DWN	J_DOWN,0,kwqmlp
	WAITSWITCH_DWN	B_SKICK,J_ALL,kwqmlp
kwqmcontz
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	kwqmslam
	cmpi	MODE_HEADHELD,a0
	jrnz	kwqmlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	kwqmlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	kwqmlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	kwqmis_reversal

kwqmslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	kwqmlp0				;ignore

	movk	1,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

kwqmis_reversal
	movk	15,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	shn_gsuplex_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2

	SLEEPK	20

	jruc	kwqmlp

shn_hdhold_kicktoss

iutcTIMEOUT	.equ	60

iutclp0
	SLEEPK	1
iutclp
	move	*a8(GETUP_TIME),a0
	jrnz	iutclp0
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	iutccont
	cmpi	MODE_HEADHELD,a0
	jrnz	iutclp0
iutccont
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,iutclp

	movi	iutcTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,iutclp
	WAITSWITCH_DWN	B_KICK,J_ALL,iutclp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	iutcslam
	cmpi	MODE_HEADHELD,a0
	jrnz	iutclp0
	move	*a8(I_WILL_DIE),A14
	jrnz	iutclp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	iutclp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	iutcis_reversal

iutcslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	iutclp0				;ignore

	movi	36,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

iutcis_reversal
	movk	25,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	movi	shn_sliding_kicktoss_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	iutclp

shn_hdhold_frank

bztrTIMEOUT	.equ	60

bztrlp0
	SLEEPK	1
bztrlp
	move	*a8(GETUP_TIME),a0
	jrnz	bztrlp0
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	bztrcont
	cmpi	MODE_HEADHELD,a0
	jrnz	bztrlp0

bztrcont
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,bztrlp

	movi	bztrTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,bztrlp
	WAITSWITCH_DWN	B_SPUNCH,J_ALL,bztrlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	bztrslam
	cmpi	MODE_HEADHELD,a0
	jrnz	bztrlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	bztrlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	bztrlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	bztris_reversal

bztrslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	bztrlp0				;ignore

	movk	3,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

bztris_reversal
	movk	32,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	shn_fstein_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2

	SLEEPK	20

	jruc	bztrlp

shn_hdhold_butts

lnitTIMEOUT	.equ	60

lnitlp0
	SLEEPK	1
lnitlp
	move	*a8(GETUP_TIME),a0
	jrnz	lnitlp0
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lnitcont
	cmpi	MODE_HEADHELD,a0
	jrnz	lnitlp0

lnitcont
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,lnitlp

	movi	lnitTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,lnitlp
	WAITSWITCH_DWN	B_SKICK,J_ALL,lnitlp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	lnitslam
	cmpi	MODE_HEADHELD,a0
	jrnz	lnitlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	lnitlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lnitlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	lnitis_reversal

lnitslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	lnitlp0				;ignore

	movk	3,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

lnitis_reversal
	movk	32,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	shn_rpt_hdbutts_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	lnitlp


adhsCHARGE_TIME	.equ	SM_USRW1

shn_charge_suplex


adhsstart_over
	clr	a14
	move	a14,*a13(adhsCHARGE_TIME),W
adhsloop1
	SLEEPK	1

	move	*a13(adhsCHARGE_TIME),a14,W
	inc	a14
	move	a14,*a13(adhsCHARGE_TIME),W

	move	*a8(BUT_VAL_CUR),a0
	btst	PLAYER_PUNCH_BIT,a0
	jrz	adhsp1

	jruc	adhsloop1

adhsp1

	move	*a13(adhsCHARGE_TIME),a14
	cmpi	100,a14
	jrlt	adhsstart_over

	move	*a8(GETUP_TIME),a0
	jrnz	adhsstart_over
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	adhsstart_over
	cmpi	MODE_HEADHOLD,a0
	jrz	adhsstart_over
	cmpi	MODE_ONGROUND,a0
	jrz	adhsstart_over
	cmpi	MODE_DEAD,a0
	jrz	adhsstart_over

	move	*a8(ANIMODE),a14
	btst	MODE_UNINT_BIT,a14
	jrnz	adhsstart_over

	movi	shn_gsuplex_anim,a14

	move	*a8(PLYRMODE),a0
	cmpi	MODE_RUNNING,a0
	jrnz	adhscont

	movi	shn_gsuplex_run_anim,a14

adhscont
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2

	jruc	adhsstart_over
	


shn_sliding_kicktoss

oxmyTIMEOUT	.equ	60

oxmylp0
	SLEEPK	1
oxmylp
	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,oxmylp

	movi	oxmyTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,oxmylp
	WAITSWITCH_DWN	B_KICK,J_ALL,oxmylp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrz	oxmylp0
	cmpi	MODE_HEADHOLD,a0
	jrz	oxmylp0
	cmpi	MODE_ONGROUND,a0
	jrz	oxmylp0
	cmpi	MODE_DEAD,a0
	jrz	oxmylp0

	move	*a8(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oxmylp0

	move	*a8(GETUP_TIME),a0
	jrnz	oxmylp0


	SWAP	a8,a13
	calla	get_opp_plyrmode
	SWAP	a8,a13
	cmpi	MODE_ONGROUND,a0
	jrz	oxmylp
	cmpi	MODE_DEAD,a0
	jrz	oxmylp

	SWAP	a8,a13
	calla	ck_ignore
	jrnc	oxmynorm
	SWAP	a8,a13
	jruc 	oxmylp
oxmynorm	
	SWAP	a8,a13

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	movi	shn_sliding_kicktoss_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L

	SLEEPK	20

	jruc	oxmylp



shn_hdhold_combo1

hiwqTIMEOUT	.equ	60

hiwqlp0
	SLEEPK	1
hiwqlp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	hiwqcont
	cmpi	MODE_HEADHELD,a0
	jrnz	hiwqlp0
hiwqcont

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,hiwqlp

	movi	hiwqTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,hiwqlp
	WAITSWITCH_DWN	B_PUNCH,J_ALL,hiwqlp

	calla	CHECK_COMBO_GO
	jrlt	hiwqtryarm

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	hiwqslam
	cmpi	MODE_HEADHELD,a0
	jrnz	hiwqlp0

hiwqslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	hiwqlp0				;ignore


	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	shn_combo_kick_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2

	SLEEPK	20

	jruc	hiwqlp
hiwqtryarm
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	hiwqslam2
	cmpi	MODE_HEADHELD,a0
	jrnz	hiwqlp0
	move	*a8(I_WILL_DIE),A14
	jrnz	hiwqlp0

	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	hiwqlp0				;ignore

	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS

	;target WHOHITME -- don't hit anyone else
	SMRTTGT	a8,WHOHITME

	;immobilize WHOHITME
	move	*a8(WHOHITME),a0,L
	jruc	hiwqis_reversal

hiwqslam2
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	hiwqlp0				;ignore

	movk	9,a10
	CREATE	MESSAGE_PID,BONUS_MESS

	;target WHOIHIT -- don't hit anyone else
	SMRTTGT	a8,WHOIHIT

	;immobilize WHOIHIT
	move	*a8(WHOIHIT),a0,L

hiwqis_reversal
	movk	32,a14
	move	a14,*a0(IMMOBILIZE_TIME)

	CALLA	FIND_AND_KILL_ENDLESS

	movi	shn_break_arm_anim,a14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,GRABHOLD_T1,GRABHOLD_T2

	SLEEPK	20

	jruc	hiwqlp


shn_hdhold_combo2

rwjbTIMEOUT	.equ	60

rwjblp0
	SLEEPK	1
rwjblp
	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrnz	rwjblp0
	calla	CHECK_COMBO_GO
	jrlt	rwjblp0

	clr	a11

	WAITSWITCH_DWN	J_TOWARD,0,rwjblp

	movi	rwjbTIMEOUT,a11

	WAITSWITCH_DWN	J_TOWARD,0,rwjblp
	WAITSWITCH_DWN	B_KICK,J_ALL,rwjblp

	move	*a8(PLYRMODE),a0
	cmpi	MODE_HEADHOLD,a0
	jrz	rwjbslam
	cmpi	MODE_HEADHELD,a0
	jrnz	rwjblp0


rwjbslam
	move	*a8(IMMOBILIZE_TIME),a14
	jrnz	rwjblp0				;ignore


	;target WHOIHIT
	SMRTTGT	a8,WHOIHIT

	CALLA	FIND_AND_KILL_ENDLESS
	movi	shn_combo_punch_anim,A14
	move	a14,*a8(SPECIAL_MOVE_ADDR),L
	WRSND	W_SHAWN,KICK_T1,KICK_T2

	SLEEPK	20

	jruc	rwjblp


 SUBR	shawn_ani_init

	move	*a13(FACING_DIR),a0
	btst	PLAYER_RIGHT_BIT,a0
	jrnz	ydgrp1
	movi	shn_stand4_anim,a0
	calla	change_anim1a

	movi	shn_torso4_anim,a0
	calla	change_anim2a

	PUSH	a10
	move	a13,a10
	CREATE	TAUNT_PID,do_taunt
	PULL	a10

	rets

ydgrp1
	movi	shn_stand2_anim,a0
	calla	change_anim1a

	movi	shn_torso2_anim,a0
	calla	change_anim2a

	rets



 SUBR	move_shawn


	movi	shn_secret_moves,a11
	calla	check_secret_moves

	move	*a13(PLYRMODE),a0
	sll	5,a0			;x 32
	addi	nzyrmode_table,a0
	move	*a0,a0,L
	call	a0
	rets

nzyrmode_table
	.long	mode_normal		;0
	.long	mode_running		;1
	.long	mode_inair		;2
	.long	mode_attached		;3
	.long	mode_onground		;4
	.long	mode_bouncing		;5
	.long	mode_onturnbkl		;6
	.long	mode_block		;7
	.long	mode_dizzy		;8
	REFLONG	mode_dead		;9
	.long	mode_oppoverhead	;10
	.long	mode_climbturnbkl	;11
	.long	mode_waitanim		;12
	.long	mode_grapple		;13
	.long	mode_master		;14
	.long	mode_slave		;15
	.long	mode_headhold		;16
	.long	mode_puppet2		;17
	.long	mode_normal	;18
	.long	mode_headheld		;19
	.long	mode_puppet		;20
	.long	mode_inair2		;21
	.long	mode_normal	;22
	.long	mode_normal	;23
	.long	mode_chokehold		;24
	.long	mode_choking		;25


mode_normal

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nsmzno_interrupt

	move	*a13(I_WILL_DIE),a0
	jrz	nsmznope
	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	nsmznope
	movi	shn_fall_back_anim,a0
	calla	change_anim1a

	movi	-10,a0
	move	*a13(PLYRNUM),a1
	calla	adjust_health

	SETMODE	DEAD

	clr	a0
	move	a0,*a13(I_WILL_DIE)

	rets

nsmznope

	calla	get_opp_plyrmode
	cmpi	MODE_DEAD,a0
	jrne	nsmzopp_not_dead

	;if closest is a zombie, skip pin section.
	calla	get_opp_process
	move	*a0(STATUS_FLAGS),a14
	btst	B_ZOMBIE,a14
	jrnz	nsmzopp_not_dead
	
	;all opponents are dead.  Check for pins/raisearms

	;if we're attached to someone, don't interrupt it.
	move	*a13(ATTACH_PROC),a1,L
	jrz	nsmzno_attch
	move	*a1(ATTACH_PROC),a2,L
	cmp	a2,a13
	jreq	nsmzno_pin_yet
nsmzno_attch

	;if a teammate has pinned, raise yer arm.
	calla	ck_teammate_pin	
	jrc	nsmzraisearm

	;nobody has pinned.  if we're outside or all our opponents are
	; outside, do a raisearm.
	calla	raisearm_check
	jrc	nsmzraisearm

	;we're inside with a pinnable opponent.  any button pins.
	move	*a13(BUT_VAL_CUR),a0
	jrz	nsmzno_pin_yet

	;we have a press -- make sure opponent is on the ground
	calla	can_pin
	jrnc	nsmzopp_notgnd

	;opponent is on the ground.  pin him.
	FACE24	shn,pin_anim
	calla	change_anim1a

	;set the 'I did a pin' flag.
	move	*a13(STATUS_FLAGS),a14
	ori	M_DID_PIN,a14
	move	a14,*a13(STATUS_FLAGS)

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

nsmzraisearm
	FACE24	shn,raise_arm_anim
	calla	change_anim1a
	calla	set_raisearm_bit

	;if we're a temp drone for auto-pin purposes, turn back into
	; a normal player here.
	calla	drone_change_back

	rets

nsmztoo_far_to_pin
nsmzopp_notgnd
nsmzopp_not_dead
nsmzno_pin_yet

	move	*a13(IMMOBILIZE_TIME),a0
	jrnz	nsmzimmobilized

	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0	;maybe have to action tables?
	jrz	nsmznblk			;1 for down transitions
	callr	nsmzblock			;& 1 for current buttons
	jrc	nsmznblk
	clr	a0
	move	a0,*a13(ATTACK_TYPE)
	rets
nsmznblk
	move	*a13(BUT_VAL_CUR),a0
	andi	011111b,a0
	cmpi	PLAYER_PUNCH_VAL|PLAYER_KICK_VAL,a0
	jrz	nsmzpunchkick

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	nsmzaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	nsmzno_interrupt


	move	*a13(STICK_VAL_CUR),a0
	move	a0,*a13(MOVE_DIR)
	calla	climb_turnbuckle
	jrnc	nsmzno_climb
	move	*a13(WRESTLERNUM),A5
	MOVI	CLIMB_ROPES,A2
	MOVI	1000,A0
	CALLA	ADD_IF_SILENT
	rets

nsmzimmobilized
	clr	a14
	move	a14,*a13(MOVE_DIR)
nsmzno_climb
	calla	execute_walk

nsmzno_interrupt
	rets

nsmzaction_table
	.long	nsmzz,nsmzpunch,nsmzblock,nsmzblock			;0-3
	.long	nsmzsuper_punch,nsmzsuper_punch,nsmzblock,nsmzblock	;4-7
	.long	nsmzkick,nsmzpunchkick,nsmzblock,nsmzblock		;8-11
	.long	nsmzsuper_punch,nsmzpunchkick,nsmzblock,nsmzblock	;12-15
	.long	nsmzsuper_kick,nsmzsuper_kick,nsmzblock,nsmzblock	;16-19
	.long	nsmzgraboh,nsmzgraboh,nsmzblock,nsmzblock		;20-23
	.long	nsmzsuper_kick,nsmzpunchkick,nsmzblock,nsmzblock	;24-27
	.long	nsmzgraboh,nsmzgraboh,nsmzblock,nsmzblock		;28-31

nsmzz
	rets

nsmzpunch		;1


	JJXM_INIT
	JJXM	NORMAL,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	BLOCK,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	DIZZY,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	ONGROUND,	160,140,nsmzpunch_lbdrop,nsmzpunch_punch
	JJXM	RUNNING,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	BOUNCING,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	ONTURNBKL,	 	nsmzpunch_punch
	JJXM	CLIMBTURNBKL,	 	nsmzpunch_punch
	JJXM	PUPPET,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	PUPPET2,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	INAIR,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	ATTACHED,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	DEAD,		160,140,nsmzpunch_lbdrop,nsmzpunch_punch
	JJXM	OPPOVERHEAD,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	WAITANIM,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	GRAPPLE,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	MASTER,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	SLAVE,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	HEADHOLD,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	HEADHELD,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	CHOKEHOLD,	 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM	INAIR2,		 50, 45,nsmzpunch_hdbutt,nsmzpunch_punch
	JJXM_END

nsmzpunch_punch
std_punch

	FACE24	shn,punch_anim
	calla	change_anim1a

	WRSND	W_SHAWN,PUNCH_T1,PUNCH_T2

	rets

nsmzpunch_hdbutt
	jruc	nsmzhdbutt

nsmzpunch_lbdrop

	FACE24	shn,falling_punch_anim
	calla	change_anim1a

	WRSND	W_SHAWN,LBOWDROP_T1,LBOWDROP_T2
	rets

nsmzblock		;2
std_block
	move	@blocking_off,a0
	jrnz	nsmzno_blocking

	RND_AWARD	a13,BLOCKS_AWD

	movi	shn_4_block_anim,a0
	calla	change_anim1a

	calla	BLOCK_WOOSH

	clr	a0
	move	a0,*a13(BLOCK_TIME)
	clrc
	rets

nsmzno_blocking
	setc
	rets


nsmzsuper_punch	;4

	JJXM_INIT
	JJXM	NORMAL,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;0
	JJXM	RUNNING,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;1
	JJXM	INAIR,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;2
	JJXM	ATTACHED,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;3
	JJXM	ONGROUND,	160,140,nsmzspunch_lbowdrop,std_punch	;4
	JJXM	BOUNCING,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;1
	JJXM	ONTURNBKL,	 	nsmzspunch_slap			;6
	JJXM	BLOCK,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;7
	JJXM	DIZZY,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;8
	JJXM	DEAD,		160,140,nsmzspunch_lbowdrop,std_punch	;9
	JJXM	OPPOVERHEAD,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;10
	JJXM	CLIMBTURNBKL,		std_punch			;11
	JJXM	WAITANIM,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;12
	JJXM	GRAPPLE,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;13
	JJXM	MASTER,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;14
	JJXM	SLAVE, 		 85, 45,nsmzspunch_special,nsmzspunch_slap	;15
	JJXM	HEADHOLD,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;16
	JJXM	HEADHELD,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;17
	JJXM	CHOKEHOLD,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;16
	JJXM	PUPPET,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;20
	JJXM	PUPPET2,	 85, 45,nsmzspunch_special,nsmzspunch_slap	;20
	JJXM	INAIR2,		 85, 45,nsmzspunch_special,nsmzspunch_slap	;21
	JJXM_END

nsmzspunch_rets
	rets

nsmzgraboh
nsmzspunch_slap

	FACE24	shn,slap_anim
	calla	change_anim1a

	WRSND	W_SHAWN,SPUNCH_T1,SPUNCH_T2

	rets

nsmzspunch_special
	move	*a13(CLOSEST_XDIST),a1
	cmpi	64,a1
	jrgt	std_punch

	FACE24	shn,pummel_anim
	calla	change_anim1
	WRSND	W_SHAWN,HDBUTT_T1,HDBUTT_T2

	rets

nsmzhdbutt

	FACE24	shn,butt_anim
	calla	change_anim1

	WRSND	W_SHAWN,HDBUTT_T1,HDBUTT_T2

	rets

nsmzspunch_lbowdrop


	move	*a13(CLOSEST_NUM),a14
	X32	a14
	addi	process_ptrs,a14
	move	*a14,a14,L
	move	*a14(PLYRMODE),a2
	cmpi	MODE_DEAD,a2
	jrz	nsmzno
	move	*a13(OBJ_XPOS),a1,L 
	move	*a14(OBJ_XPOS),a2,L
	sub	a2,a1
	abs	a1
	srl	16,a1
	cmpi	20h,a1	;28
 	jrlt	nsmzno


	move	*a14(OBJ_CONTROL),a14
	andi	M_FLIPH,a14
	move	*a13(OBJ_CONTROL),a0
	andi	M_FLIPH,a0
	cmp	a0,a14
	jrz	nsmzno


	FACE24	shn,hair_pickup_anim
	calla	change_anim1
	WRSND	W_SHAWN,LBOWDROP_T1,LBOWDROP_T2
	rets

nsmzno	FACE24	shn,falling_punch_anim
	calla	change_anim1a
	WRSND	W_SHAWN,LBOWDROP_T1,LBOWDROP_T2
	rets


nsmzkick		;8


	JJXM_INIT
	JJXM	NORMAL,		 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	DIZZY,		 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	BLOCK,		 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	ONGROUND,	160,140,nsmzkick_stomp,nsmzkick_kick
	JJXM	RUNNING,		nsmzkick_kick
	JJXM	BOUNCING,	 	nsmzkick_kick
	JJXM	ONTURNBKL,	 	nsmzkick_kick
	JJXM	CLIMBTURNBKL,	 	nsmzkick_kick
	JJXM	PUPPET,			nsmzkick_kick
	JJXM	PUPPET2,		nsmzkick_kick
	JJXM	INAIR,			nsmzkick_kick
	JJXM	ATTACHED,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	DEAD,		160,140,nsmzkick_stomp,nsmzkick_kick
	JJXM	OPPOVERHEAD,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	WAITANIM,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	GRAPPLE,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	MASTER,		 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	SLAVE,		 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	HEADHOLD,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	HEADHELD,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	CHOKEHOLD,	 60, 50,nsmzkick_knee,nsmzkick_kick
	JJXM	INAIR2,		 	nsmzkick_TB
	JJXM_END

nsmzkick_TB
	.ref	shn_spinkick_TB_anim
	movi	shn_spinkick_TB_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets


nsmzkick_kick
std_kick

	FACE24	shn,kick_anim
	calla	change_anim1a

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

nsmzkick_knee
std_knee

	FACE24	shn,knee_anim
	jruc	nsmzknee_set
std_knee_4
	movi	shn_4_knee_anim,a0
nsmzknee_set
	calla	change_anim1a

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

nsmzkick_stomp

	FACE24	shn,stomp_anim
	calla	change_anim1a

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

nsmzpunchkick	;9

	movi	start_run_anim,a0
	calla	change_anim1a

	rets

nsmzsuper_kick	;16

	JJXM_INIT
	JJXM	NORMAL,			nsmzskick_kick
	JJXM	DIZZY,			nsmzskick_kick
	JJXM	BLOCK,			nsmzskick_kick
	JJXM	ONGROUND,	160,140,nsmzskick_stomp,std_kick
	JJXM	RUNNING,		nsmzskick_frank
	JJXM	BOUNCING,		nsmzskick_frank
	JJXM	ONTURNBKL,	 	nsmzskick_kick
	JJXM	CLIMBTURNBKL,	 	nsmzskick_kick
	JJXM	PUPPET,		 	nsmzskick_kick
	JJXM	PUPPET2,	 	nsmzskick_kick
	JJXM	INAIR,		 	nsmzskick_kick
	JJXM	ATTACHED,	 	nsmzskick_kick
	JJXM	DEAD,		160,140,nsmzskick_stomp,std_kick
	JJXM	OPPOVERHEAD,	 	nsmzskick_kick
	JJXM	WAITANIM,	 	nsmzskick_kick
	JJXM	GRAPPLE,	 	nsmzskick_kick
	JJXM	MASTER,		 	nsmzskick_kick
	JJXM	SLAVE,		 	nsmzskick_kick
	JJXM	HEADHOLD,	 	nsmzskick_kick
	JJXM	HEADHELD,	 	nsmzskick_kick
	JJXM	CHOKEHOLD,	 	nsmzskick_kick
	JJXM	INAIR2,		 	nsmzkick_TB
	JJXM_END

nsmzskick_frank

	calla	ck_ignore
	jrc	nsmzskick_kick

	movi	shn_fstein_anim,a0
	calla	change_anim1a
	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

nsmzskick_kick

	movi	shn_spinkick_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,FLYKICK_T1,FLYKICK_T2
	rets

nsmzskick_stomp

	FACE24	shn,stomp_anim
	calla	change_anim1a

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

nsmzskick_flykick
attack_flykick

	calla	ck_ignore
	jrc	nsmzz

	;don't do it if the bad guy is on the ground
	calla	get_opp_plyrmode
	cmpi	MODE_ONGROUND,a0
	jreq	nsmzrets
	cmpi	MODE_DEAD,a0
	jreq	nsmzrets

	SETMODE	INAIR

	movi	shn_flying_kick_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,FLYKICK_T1,FLYKICK_T2
nsmzrets
	rets

nsmzskick_super_speedkick

	movi	shn_super_speedkick_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets



oswzXRUN_VAL	equ	SHN_XRUN
oswzZDRIFT_VAL	equ	SHN_ZDRIFT

mode_running

	move	*a13(RUN_TIME),a0		;Used for flying kick
	addk	1,a0
	move	a0,*a13(RUN_TIME)

	move	*a13(USR_VAR1),a0
	jrnz	oswzno_vel

	calla	bounce_off_ropes

	movi	oswzXRUN_VAL,a0
	move	*a13(MOVE_DIR),a14
	btst	PLAYER_RIGHT_BIT,a14
	jrnz	oswzpos
	neg	a0
oswzpos
	move	@hyper_speed_on,a14
	sll	a14,a0
	move	a0,*a13(OBJ_XVEL),L

oswzno_vel

	move	*a13(GETUP_TIME),a0		;delay b4 gaining control
	jrnz	oswzout_of_control

	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	oswzno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	move	*a13(MOVE_DIR),a1
	or	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	cmpi	MOVE_LEFT|MOVE_RIGHT,a1
	jrne	oswzcontinue_run

	;braking with stick.  abort run.

	SETMODE	NORMAL

oswzcontinue_run
oswzno_interrupt

	move	*a13(STICK_VAL_CUR),a0
	clr	a1

	movi	-oswzZDRIFT_VAL,a1
	btst	PLAYER_UP_BIT,a0
	jrnz	oswzsetvel

	movi	oswzZDRIFT_VAL,a1
	btst	PLAYER_DOWN_BIT,a0
	jrnz	oswzsetvel

	clr	a1
oswzsetvel
	move	a1,*a13(OBJ_ZVEL),L

	move	*a13(DELAY_BUTNS),a0
	jrnz	oswzout_of_control

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	oswzaction_table,a0
	move	*a0,a0,L
	call	a0
oswzout_of_control
	rets

oswzaction_table
	.long	oswzz,oswzpunch,oswzblock,oswzblock			;0-3
	.long	oswzsuper_punch,oswzsuper_punch,oswzblock,oswzblock	;4-7
	.long	oswzkick,oswzpunchkick,oswzblock,oswzblock		;8-11
	.long	oswzsuper_punch,oswzpunchkick,oswzblock,oswzblock	;12-15
	.long	oswzsuper_kick,oswzsuper_kick,oswzblock,oswzblock	;16-19
	.long	oswzgraboh,oswzgraboh,oswzblock,oswzblock		;20-23
	.long	oswzsuper_kick,oswzpunchkick,oswzblock,oswzblock	;24-27
	.long	oswzgraboh,oswzgraboh,oswzblock,oswzblock		;28-31

oswzz		;0

	rets


oswzpunch		;1
oswzpunchkick	;9

	JJXM_INIT
	JJXM	NORMAL,		 	oswzpunch_rets
	JJXM	DIZZY,		 	oswzpunch_rets
	JJXM	BLOCK,		 	oswzpunch_rets
	JJXM	ONGROUND,		attack_runstomp
	JJXM	RUNNING,	 	oswzpunch_rets
	JJXM	BOUNCING,		oswzpunch_rets
	JJXM	ONTURNBKL,	 	oswzpunch_rets
	JJXM	CLIMBTURNBKL,	 	oswzpunch_rets
	JJXM	PUPPET,			oswzpunch_rets
	JJXM	PUPPET2,		oswzpunch_rets
	JJXM	INAIR,			oswzpunch_rets
	JJXM	ATTACHED,		oswzpunch_rets
	JJXM	DEAD,			attack_runstomp
	JJXM	OPPOVERHEAD,		oswzpunch_rets
	JJXM	WAITANIM,		oswzpunch_rets
	JJXM	GRAPPLE,		oswzpunch_rets
	JJXM	MASTER,			oswzpunch_rets
	JJXM	SLAVE,			oswzpunch_rets
	JJXM	HEADHOLD,		oswzpunch_rets
	JJXM	HEADHELD,		oswzpunch_rets
	JJXM	CHOKEHOLD,		oswzpunch_rets
	JJXM	INAIR2,			oswzpunch_rets
	JJXM_END

oswzpunch_rets
	rets


oswzblock		;2

	move	*a13(OBJ_XVEL),a0,L
	sra	1,a0
	move	a0,*a13(OBJ_XVEL),L
	SETMODE	NORMAL
	jruc	std_block


oswzsuper_punch	;4
oswzgraboh		;20

	JJXM_INIT
        JJXM    NORMAL,                 oswzpunch_flipslam
        JJXM    DIZZY,                  oswzpunch_flipslam
        JJXM    BLOCK,                  oswzpunch_flipslam
        JJXM    ONGROUND,       176,176,attack_runstomp,oswzspunch_rets
        JJXM    RUNNING,                oswzpunch_flipslam
        JJXM    BOUNCING,               oswzpunch_flipslam
	JJXM	ONTURNBKL,	 	oswzspunch_rets
	JJXM	CLIMBTURNBKL,	 	oswzspunch_rets
	JJXM	PUPPET,			oswzspunch_rets
	JJXM	PUPPET2,		oswzspunch_rets
	JJXM	INAIR,			oswzspunch_rets
	JJXM	ATTACHED,		oswzspunch_rets
        JJXM    DEAD, 	      176,176,attack_runstomp,oswzspunch_rets
	JJXM	OPPOVERHEAD,		oswzspunch_rets
	JJXM	WAITANIM,		oswzspunch_rets
	JJXM	GRAPPLE,		oswzspunch_rets
	JJXM	MASTER,			oswzspunch_rets
	JJXM	SLAVE,			oswzspunch_rets
	JJXM	HEADHOLD,		oswzspunch_rets
	JJXM	HEADHELD,		oswzspunch_rets
	JJXM	CHOKEHOLD,		oswzspunch_rets
	JJXM	INAIR2,			oswzspunch_rets
	JJXM_END

oswzspunch_rets
	rets


oswzpunch_flipslam

	;don't do it if you're running away from your opponent.
	move	*a13(FACING_DIR),a0
	move	*a13(NEW_FACING_DIR),a1
	and	a0,a1
	andi	MOVE_LEFT|MOVE_RIGHT,a1
	jrz	oswzz

	movi    shn_flipslam_anim,a0
	calla   change_anim1a

	WRSND   W_SHAWN,HIPTOSS_T1,PUNCH_T2
	rets

oswzkick		;8

	JJXM_INIT
	JJXM	NORMAL,		 	attack_flykick
	JJXM	DIZZY,		 	attack_flykick
	JJXM	BLOCK,		 	attack_flykick
	JJXM	ONGROUND,		oswzkick_runstomp
	JJXM	RUNNING,	 	attack_flykick
	JJXM	BOUNCING,		attack_flykick
	JJXM	ONTURNBKL,	 	attack_flykick
	JJXM	CLIMBTURNBKL,	 	attack_flykick
	JJXM	PUPPET,			attack_flykick
	JJXM	PUPPET2,		attack_flykick
	JJXM	INAIR,			attack_flykick
	JJXM	ATTACHED,		attack_flykick
	JJXM	DEAD,			oswzkick_runstomp
	JJXM	OPPOVERHEAD,		attack_flykick
	JJXM	WAITANIM,		attack_flykick
	JJXM	GRAPPLE,		attack_flykick
	JJXM	MASTER,			attack_flykick
	JJXM	SLAVE,			attack_flykick
	JJXM	HEADHOLD,		attack_flykick
	JJXM	HEADHELD,		attack_flykick
	JJXM	CHOKEHOLD,		attack_flykick
	JJXM	INAIR2,			attack_flykick
	JJXM_END
	

oswzkick_runstomp
attack_runstomp

	calla	ck_ignore
	jrc	oswzkick_rets

	movi	shn_run_stomp_anim,a0
	calla	change_anim1a
oswzkick_rets
	rets



oswzsuper_kick	;16

	JJXM_INIT
	JJXM	NORMAL,		 	oswzattack_fstein
	JJXM	DIZZY,		 	oswzattack_fstein
	JJXM	BLOCK,		 	oswzattack_fstein
	JJXM	ONGROUND,		attack_runstomp
	JJXM	RUNNING,	 	oswzattack_fstein
	JJXM	BOUNCING,		oswzattack_fstein
	JJXM	ONTURNBKL,	 	attack_flykick
	JJXM	CLIMBTURNBKL,	 	attack_flykick
	JJXM	INAIR,			attack_flykick
	JJXM	PUPPET,			attack_flykick
	JJXM	PUPPET2,		attack_flykick
	JJXM	ATTACHED,		oswzattack_fstein
	JJXM	DEAD,		 	attack_runstomp
	JJXM	OPPOVERHEAD,		oswzattack_fstein
	JJXM	WAITANIM,		oswzattack_fstein
	JJXM	GRAPPLE,		oswzattack_fstein
	JJXM	MASTER,			oswzattack_fstein
	JJXM	SLAVE,			oswzattack_fstein
	JJXM	HEADHOLD,		oswzattack_fstein
	JJXM	HEADHELD,		oswzattack_fstein
	JJXM	CHOKEHOLD,		oswzattack_fstein
	JJXM	INAIR2,			oswzattack_fstein
	JJXM_END
	

oswzattack_fstein

	calla	ck_ignore
	jrc	oswzrets

	movi	shn_fstein_anim,a0
	calla	change_anim1a

	SETMODE	INAIR

	WRSND	W_SHAWN,GRABHOLD_T1,GRABHOLD_T2
oswzrets


mode_inair	;2

	rets


mode_attached	;3

	calla	keep_attached
	jrnz	ujzfstill_attached

	clr	a0
	move	a0,*a13(ATTACH_PROC),L

	SETMODE	NORMAL

	movi	MODE_NORMAL,a0
	move	a0,*a13(ANIMODE)

ujzfstill_attached
	rets


mode_onground	;4

	rets



mode_bouncing	;5

	clr	a0
	move	a0,*a13(OBJ_XVEL),L
	move	a0,*a13(OBJ_ZVEL),L

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	lxnonot_ended

	move	*a13(MOVE_DIR),a0
	xori	MOVE_LEFT+MOVE_RIGHT,a0	;flip LEFT/RIGHT
	move	a0,*a13(MOVE_DIR)

	move	*a13(NEW_FACING_DIR),a1
	andi	MOVE_UP+MOVE_DOWN,a1
	or	a0,a1			;LEFT or RIGHT
	move	a1,*a13(FACING_DIR)	;face same dir as run

	movi	shn_run2_anim,a0
	calla	change_anim1a

	SETMODE	RUNNING


lxnonot_ended
	rets


mode_onturnbkl	;6


	move	*a13(STICK_VAL_CUR),a0
	btst	PLAYER_DOWN_BIT,a0
	jrz	jrzyno_climbdown

	movi	shn_climb_down_anim,a0
	calla	change_anim1a

	SETMODE	CLIMBTURNBKL

jrzyno_interrupt
	rets

jrzyno_climbdown
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	jrzyz

	X32	a0
	addi	jrzyaction_table,a0
	move	*a0,a0,L
	call	a0

	move	*a13(PLYRNUM),a5
	movi	JUMP_ROPES,a2
	movi	1000,a0
	calla	ADD_IF_SILENT

	rets



jrzyaction_table
	.long	jrzyz,jrzypunch,jrzyblock,jrzyblock			;0-3
	.long	jrzysuper_punch,jrzysuper_punch,jrzyblock,jrzyblock	;4-7
	.long	jrzykick,jrzypunchkick,jrzyblock,jrzyblock		;8-11
	.long	jrzysuper_punch,jrzypunchkick,jrzyblock,jrzyblock	;12-15
	.long	jrzysuper_kick,jrzysuper_kick,jrzyblock,jrzyblock	;16-19
	.long	jrzygraboh,jrzygraboh,jrzyblock,jrzyblock		;20-23
	.long	jrzysuper_kick,jrzypunchkick,jrzyblock,jrzyblock	;24-27
	.long	jrzygraboh,jrzygraboh,jrzyblock,jrzyblock		;28-31


jrzyz
	rets

jrzypunch		;1
jrzyblock		;2
jrzysuper_punch	;4
jrzypunchkick	;5
jrzygraboh		;20

	SETMODE	INAIR

     	movi	shn_belbow_anim,a0
	calla	change_anim1a
	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

jrzykick		;8
jrzysuper_kick	;16

	SETMODE	INAIR

     	movi	shn_bstomp_anim,a0
	calla	change_anim1a
	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets



mode_block	;7

	move	*a13(BLOCK_TIME),a0
	inc	a0
	move	a0,*a13(BLOCK_TIME)
	cmpi	160,a0
	jrlt	uyawno

	calla	get_opp_plyrmode
	cmpi	MODE_BLOCK,a0
	jrnz	uyawno
	move	*a13(CLOSEST_XDIST),a0
	cmpi	61h,a0
	jrge	uyawno
	cmpi	45,a0
	jrlt	uyawno
	move	*a13(CLOSEST_ZDIST),a0
	cmpi	30,a0
	jrlt	uyawpunchblock

uyawno
	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	jrz	uyawno_interrupt

	;press.  if block isn't down, let mode_normal handle it
	move	a0,a2			;save a0 from ...val_down
	move	*a13(BUT_VAL_CUR),a0
	btst	PLAYER_BLOCK_BIT,a0
	jrz	uyawset_mode_normal
	move	a2,a0			;restore a0 from ...val_down

	X32	a0
	addi	uyawaction_table,a0
	move	*a0,a0,L
	call	a0

uyawno_interrupt
	rets

uyawset_mode_normal
	SETMODE	NORMAL
	jruc	mode_normal

uyawaction_table
	.long	uyawz,uyawpunchblock,uyawz	;0-2
	.long	uyawpunchblock		;3
	.long	uyawz,uyawz,uyawz,uyawz,uyawz,uyawz,uyawz	;4-10
	.long	uyawz,uyawz,uyawz,uyawz,uyawz,uyawz,uyawz	;11-17
	.long	uyawz,uyawz,uyawz,uyawz,uyawz,uyawz,uyawz	;18-24
	.long	uyawz,uyawz,uyawz,uyawz,uyawz,uyawz,uyawz	;25-31

uyawz
	rets

uyawpunchblock	;3

	SETMODE	NORMAL

	movi	shn_4_push_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,PUSH_T1,PUSH_T2

	rets



mode_dizzy	;8

	rets


mode_oppoverhead ;10

	rets


mode_climbturnbkl	;11

	rets



mode_waitanim	;12

	move	*a13(ANIMODE),a0
	btst	MODE_END_BIT,a0
	jrz	bvvwnot_ended

	move	*a13(CODE_ADDR),a0,L
	call	a0

bvvwnot_ended
	rets



mode_grapple	;13

	rets


mode_master	;14

	calla	master_keep_attached	;keep slave attached to me

	rets


mode_slave	;15
	rets


mode_headhold	;16

	.ref	bozo_check
	calla	bozo_check
	jrnc	admafail

	WRSND	W_SHAWN,KICK_T1,KICK_T2

	movi	shn_fstein_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	admatag
	movi	shn_sliding_kicktoss_anim,a0
admatag	calla	change_anim1a

	rets

admafail
	move	*a13(WHOIHIT),a0,L
	move	*a0(PLYRMODE),a0
	cmpi	MODE_HEADHELD,a0
	jrnz	admaexit


	move	*a13(ANIMODE),a0
	btst	MODE_UNINT_BIT,a0
	jrnz	admano_interrupt

	move	*a13(BUT_VAL_DOWN),a0
	andi	011111b,a0
	X32	a0
	addi	admaaction_table,a0
	move	*a0,a0,L
	call	a0

admano_interrupt
	rets

admaexit
	move	*a13(OBJ_ZPOS),a14,L
	subi	[6,0],a14
	move	a14,*a13(OBJ_ZPOS),L

	movk	MOVE_DOWN_RIGHT,a1
	move	*a13(OBJ_CONTROL),a0
	btst	B_FLIPH,a0
	jrz	admaright
	movk	MOVE_DOWN_LEFT,a1
admaright	move	a1,*a13(FACING_DIR)
	move	a1,*a13(NEW_FACING_DIR)

	SETMODE	NORMAL

	rets

admaaction_table
	.long	admaz,admapunch,admablock,admablock			;0-3
	.long	admasuper_punch,admasuper_punch,admablock,admablock	;4-7
	.long	admakick,admapunchkick,admablock,admablock		;8-11
	.long	admasuper_punch,admapunchkick,admablock,admablock	;12-15
	.long	admasuper_kick,admasuper_kick,admablock,admablock	;16-19
	.long	admagraboh,admagraboh,admablock,admablock		;20-23
	.long	admasuper_kick,admapunchkick,admablock,admablock	;24-27
	.long	admagraboh,admagraboh,admablock,admablock		;28-31


admablock
admagraboh
admaz		;0
	rets


admapunch		;1
	CALLA	FIND_AND_KILL_ENDLESS

	jruc	std_knee_4


admasuper_punch	;4
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	admaz

	CALLA	FIND_AND_KILL_ENDLESS
	.ref	shn_rpt_hdbutts2_anim
	movi	shn_rpt_hdbutts2_anim,a0
	calla	change_anim1a

	WRSND	W_SHAWN,GRABHOLD_T1,GRABHOLD_T2

	rets

admapunchkick
admakick
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_REL_CUR),a0
	btst	MOVE_TOWARD_BIT,a0
	jrz	std_knee_4

	;speed kick - speed kick - speed kick - spin kick
	movi	shn_speed_spinkick_anim,a0
	calla	change_anim1a
	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets

admasuper_kick	;16
	CALLA	FIND_AND_KILL_ENDLESS
	move	*a13(STICK_VAL_CUR),a0
	move	*a13(NEW_FACING_DIR),a1
	andi	0ch,a1
	cmp	a0,a1
	jrnz	admaz

	;knee - knee - knee - frankensteiner
	movi	shn_knee_fstein_anim,a0
	calla	change_anim1a
	WRSND	W_SHAWN,KICK_T1,KICK_T2
	rets


mode_puppet2	;17

	rets

mode_headheld	;19

	move	*a13(ANIMODE),a0
	btst	MODE_NOGRAVITY_BIT,a0
	janz	mode_choking

	calla	bozo_check
	jrnc	auicfail

	PUSH	a8
	move	a13,a8
	CALLA	DO_REVERSAL
	CALLA	DO_REVERSAL_MESS
	PULL	a8

	WRSND	W_SHAWN,KICK_T1,KICK_T2

	movi	shn_fstein_anim,a0
	move	@PCNT,a14
	btst	0,a14
	jrz	auictag
	movi	shn_sliding_kicktoss_anim,a0
auictag	calla	change_anim1a

	rets
auicfail

	move	*a13(ATTACH_PROC),a0,L
	jrnz	auicno_luck

	move	*a13(OBJ_YPOSINT),a0
	move	*a13(GROUND_Y),a1
	cmp	a1,a0			;a0-a1
	jrgt	auicno_luck


	movi	shn_3_head_held_stand_anim,a0
	calla	change_anim1a

auicno_luck
	rets

mode_chokehold	;24
	rets


pstlVEL	equ	3a000h		;38000h	;30000h
pstlDVEL	equ	31000h		;27978h	;21f0eh


 SUBR shn_velocity_table


	.long	0,	-pstlVEL	;0 UP

	.long	pstlDVEL,	-pstlDVEL	;1 UP-RIGHT

	.long	pstlVEL,	0	;2 RIGHT

	.long	pstlDVEL,	pstlDVEL	;3 DOWN-RIGHT

	.long	0,	pstlVEL	;4 DOWN

	.long	-pstlDVEL,	pstlDVEL	;5 DOWN-LEFT

	.long	-pstlVEL,	0	;6 LEFT

	.long	-pstlDVEL,	-pstlDVEL	;7 UP-LEFT



 SUBR	shn_rotate_anims_table
	.long	shn_stand2_anim		;new = up right
	.long	shn_2_to_4_turn_anim	;    = down right
	.long	shn_2_to_6_turn_anim	;    = down left
	.long	shn_2_to_8_turn_anim	;    = up left

	.long	shn_4_to_2_turn_anim	;new = up right
	.long	shn_stand4_anim		;    = down right
	.long	shn_4_to_6_turn_anim	;    = down left
	.long	shn_4_to_8_turn_anim	;    = up left

	.long	shn_6_to_2_turn_anim	;new = up right
	.long	shn_6_to_4_turn_anim	;    = down right
	.long	shn_stand6_anim		;    = down left
	.long	shn_6_to_8_turn_anim	;    = up left

	.long	shn_8_to_2_turn_anim	;new = up right
	.long	shn_8_to_4_turn_anim	;    = down right
	.long	shn_8_to_6_turn_anim	;    = down left
	.long	shn_stand8_anim		;    = up left


 SUBR	shn_leg_anims_table
	.long	shn_walk1_f2_anim	;1 (UP)
	.long	shn_walk1_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk1_f4_anim	;3 (RIGHT)
	.long	shn_walk1_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk1_f4_anim	;5 (DOWN)
	.long	shn_walk1_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk1_f2_anim	;7 (LEFT)
	.long	shn_walk1_f2_anim	;8 (UP-LEFT)

	.long	shn_walk2_f2_anim	;1 (UP)
	.long	shn_walk2_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk2_f2_anim	;3 (RIGHT)
	.long	shn_walk2_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk8_f4_anim	;5 (DOWN)
	.long	shn_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk4_f2_anim	;7 (LEFT)
	.long	shn_walk4_f2_anim	;8 (UP-LEFT)

	.long	shn_walk2_f2_anim	;1 (UP)
	.long	shn_walk2_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk2_f2_anim	;3 (RIGHT)
	.long	shn_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk4_f4_anim	;5 (DOWN)
	.long	shn_walk8_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk6_f2_anim	;7 (LEFT)
	.long	shn_walk6_f2_anim	;8 (UP-LEFT)


	.long	shn_walk2_f2_anim	;1 (UP)
	.long	shn_walk8_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk4_f4_anim	;3 (RIGHT)
	.long	shn_walk4_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk2_f4_anim	;5 (DOWN)
	.long	shn_walk6_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk2_f2_anim	;7 (LEFT)
	.long	shn_walk6_f2_anim	;8 (UP-LEFT)

	.long	shn_walk5_f2_anim	;1 (UP)
	.long	shn_walk5_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk5_f4_anim	;3 (RIGHT)
	.long	shn_walk5_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk5_f4_anim	;5 (DOWN)
	.long	shn_walk5_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk5_f2_anim	;7 (LEFT)
	.long	shn_walk5_f2_anim	;8 (UP-LEFT)

	.long	shn_walk2_f2_anim	;1 (UP)
	.long	shn_walk6_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk2_f2_anim	;3 (RIGHT)
	.long	shn_walk6_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk2_f4_anim	;5 (DOWN)
	.long	shn_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk2_f2_anim	;7 (LEFT)
	.long	shn_walk8_f2_anim	;8 (UP-LEFT)

	.long	shn_walk2_f2_anim	;1 (UP)
	.long	shn_walk6_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk6_f2_anim	;3 (RIGHT)
	.long	shn_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk4_f4_anim	;5 (DOWN)
	.long	shn_walk4_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk2_f2_anim	;7 (LEFT)
	.long	shn_walk2_f2_anim	;8 (UP-LEFT)

	.long	shn_walk2_f2_anim	;1 (UP)
	.long	shn_walk4_f2_anim	;2 (UP_RIGHT)
	.long	shn_walk6_f2_anim	;3 (RIGHT)
	.long	shn_walk8_f4_anim	;4 (DOWN_RIGHT)
	.long	shn_walk6_f4_anim	;5 (DOWN)
	.long	shn_walk2_f4_anim	;6 (DOWN_LEFT)
	.long	shn_walk2_f2_anim	;7 (LEFT)
	.long	shn_walk2_f2_anim	;8 (UP-LEFT)


 SUBR	shn_torso_anims_table
	.long	shn_torso2_anim		;new = up right
	.long	shn_2_to_4_turn2_anim	;    = down right
	.long	shn_2_to_6_turn2_anim	;    = down left
	.long	shn_2_to_8_turn2_anim	;    = up left

	.long	shn_4_to_2_turn2_anim	;new = up right
	.long	shn_torso4_anim		;    = down right
	.long	shn_4_to_6_turn2_anim	;    = down left
	.long	shn_4_to_8_turn2_anim	;    = up left

	.long	shn_6_to_2_turn2_anim	;new = up right
	.long	shn_6_to_4_turn2_anim	;    = down right
	.long	shn_torso6_anim		;    = down left
	.long	shn_6_to_8_turn2_anim	;    = up left

	.long	shn_8_to_2_turn2_anim	;new = up right
	.long	shn_8_to_4_turn2_anim	;    = down right
	.long	shn_8_to_6_turn2_anim	;    = down left
	.long	shn_torso8_anim		;    = up left



	.end

